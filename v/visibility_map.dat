85|68|Public
50|$|The south face of Mt. Sicker has a {{doppler radar}} installation. This station populates the Environment Canada Mt. Sicker Radar <b>Visibility</b> <b>Map.</b> Access {{to the station}} is gated, under video surveillance, and fenced. In {{addition}} to the main radar dome, there are multiple transmitters that relay data across the Straight of Georgia and to Victoria.|$|E
40|$|We {{study the}} problem of {{visibility}} in polyhedral terrains {{in the presence of}} multiple viewpoints. We consider three fundamental visibility structures: the <b>visibility</b> <b>map,</b> the colored <b>visibility</b> <b>map,</b> and the Voronoi <b>visibility</b> <b>map.</b> We study the complexity of each structure for both 1. 5 D and 2. 5 D terrains, and provide efficient algorithms to construct them. Our algorithm for the <b>visibility</b> <b>map</b> in 2. 5 D terrains improves on the only existing algorithm in this setting. © 2013 Springer-Verlag. SCOPUS: cp. kinfo:eu-repo/semantics/publishe...|$|E
40|$|AbstractLet T be {{a set of}} n triangles in {{three-dimensional}} space, let s be a line segment, and let t be a triangle, both disjoint from T. We {{consider the}} subdivision of T based on (in) visibility from s; this is the <b>visibility</b> <b>map</b> of the segment s with respect to T. The <b>visibility</b> <b>map</b> of the triangle t is defined analogously. We look at two different notions of visibility: strong (complete) visibility, and weak (partial) visibility. The trivial Ω(n 2) lower bound for the combinatorial complexity of the strong <b>visibility</b> <b>map</b> of both s and t is almost tight: we prove an O(n 2 α(n)) upper bound for both structures, where α(n) is the extremely slowly increasing inverse Ackermann function. Furthermore, we prove that the weak <b>visibility</b> <b>map</b> of s has complexity Θ(n 5), and the weak <b>visibility</b> <b>map</b> of t has complexity Θ(n 7). If T is a polyhedral terrain, {{the complexity of the}} weak <b>visibility</b> <b>map</b> is Ω(n 4) and O(n 5), both for a segment and a triangle. We also present efficient algorithms to compute all discussed structures...|$|E
30|$|We {{present an}} {{extension}} of the fast beam-tracing method presented in the work of Antonacci et al. (2008) for the simulation of acoustic propagation in reverberant environments that accounts for diffraction and diffusion. More specifically, we show how <b>visibility</b> <b>maps</b> are suitable for modeling propagation phenomena more complex than specular reflections. We also show how the beam-tree lookup for path tracing can be entirely performed on <b>visibility</b> <b>maps</b> as well. We then contextualize such method to the two different cases of channel (point-to-point) rendering using a headset, and the rendering of a wave field based on arrays of speakers. Finally, we provide some experimental results and comparisons with real data to show the effectiveness and the accuracy of the approach in simulating the soundfield in an environment.|$|R
30|$|As {{already said}} above, we are {{interested}} in extending the use of <b>visibility</b> <b>maps</b> for an accurate modeling and a fast rendering of diffusion and diffraction phenomena. As visibility diagrams were conceived for modeling specular reflections, it is important to discuss what needs and requirements need to be considered.|$|R
40|$|We {{present an}} {{extension}} of the fast beam-tracing method presented in the work of Antonacci et al. (2008) for the simulation of acoustic propagation in reverberant environments that accounts for diffraction and diffusion. More specifically, we show how <b>visibility</b> <b>maps</b> are suitable for modeling propagation phenomena more complex than specular reflections. We also show how the beam-tree lookup for path tracing can be entirely performed on <b>visibility</b> <b>maps</b> as well. We then contextualize such method to the two different cases of channel (point-to-point) rendering using a headset, and the rendering of a wave field based on arrays of speakers. Finally, we provide some experimental results and comparisons with real data to show the effectiveness and the accuracy of the approach in simulating the soundfield in an environment. </p...|$|R
40|$|This paper {{describes}} a robust, hardware [...] accelerated algorithm to compute an approximate <b>visibility</b> <b>map,</b> which describes the visible {{scene from a}} particular viewpoint. The user can control the degree of approximation, choosing more accuracy {{at the cost of}} increased execution time. The algorithm exploits item buffer hardware to coarsely determine visibility, which is later refined. The paper also {{describes a}} conceptually simple algorithm to compute a subset of the discontinuity mesh using the <b>visibility</b> <b>map.</b> Key words: approximate visibility, <b>visibility</b> <b>map,</b> discontinuity meshing, hardware assisted, occlusion culling, form factor, item buffer 1 Introduction The <b>visibility</b> <b>map</b> is a data structure that describes the projection of the visible scene onto the image plane. It is a planar graph in which the vertices, edges, and faces are annotated with the corresponding vertices, edges, and faces of the scene. The <b>visibility</b> <b>map</b> provides more than just the set of visible surfaces [...] ...|$|E
40|$|Let T be {{a set of}} n triangles in {{three-dimensional}} space, let s be a line segment, and let t be a triangle, both disjoint from T. We {{consider the}} <b>visibility</b> <b>map</b> of s with respect to T, i. e., the portions of T that are visible from s. The <b>visibility</b> <b>map</b> of t is defined analogously. We look at two different notions of visibility: strong (complete) visibility, and weak (partial) visibility. The trivial Ω(n 2) lower bound for the combinatorial complexity of the strong <b>visibility</b> <b>map</b> of both s and t is almost tight: we prove an O(n 2 log n) upper bound for both structures. Furthermore, we prove that the weak <b>visibility</b> <b>map</b> of s has; complexity Θ(n 5), and the weak <b>visibility</b> <b>map</b> of t has complexity Θ(n 7). If T is a polyhedral terrain, {{the complexity of the}} weak <b>visibility</b> <b>map</b> is Ω(n 4) and O(n 5), both for a segment and a triangle. We also present efficient algorithms to compute all discussed structures, i. e., in most cases computation is only an O(log n) factor worse than the worst-case complexity. ...|$|E
40|$|AbstractWe give an output-sensitive {{algorithm}} for computing the <b>visibility</b> <b>map</b> {{of a set}} of n constant-complexity convex fat polyhedra or curved {{objects in}} 3 -space. Our algorithm runs in O((n+k) polylog n) time, where k is the combinatorial complexity of the <b>visibility</b> <b>map.</b> This is the first algorithm for computing the <b>visibility</b> <b>map</b> of fat objects that does not require a depth order on the objects and is faster than the best known algorithm for general objects. It is also the first output-sensitive algorithm for curved objects that does not require a depth order...|$|E
50|$|In {{electron}} diffraction, Kikuchi line pairs {{appear as}} bands decorating the intersection between lattice plane traces and the Ewald sphere thus providing experimental {{access to a}} crystal's stereographic projection. Model Kikuchi maps in reciprocal space, and fringe <b>visibility</b> <b>maps</b> for use with bend contours in direct space, thus act as road maps for exploring orientation space with crystals in the transmission electron microscope.|$|R
40|$|Copyright © 2010 F. Antonacci et al. This is an {{open access}} article {{distributed}} under the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. We present {{an extension of the}} fast beam-tracing method presented in the work of Antonacci et al. (2008) for the simulation of acoustic propagation in reverberant environments that accounts for diffraction and diffusion. More specifically, we show how <b>visibility</b> <b>maps</b> are suitable for modeling propagation phenomena more complex than specular reflections. We also show how the beam-tree lookup for path tracing can be entirely performed on <b>visibility</b> <b>maps</b> as well. We then contextualize such method to the two different cases of channel (point-to-point) rendering using a headset, and the rendering of a wave field based on arrays of speakers. Finally, we provide some experimental results and comparisons with real data to show the effectiveness and the accuracy of the approach in simulating the soundfield in an environment. 1...|$|R
40|$|Fast {{rendering}} of dynamic scenes with natural illumination, all-frequency shadows and spatially-varying reflections is important but challenging. One main difficulty brought by moving objects {{is that the}} runtime visibility update of dynamic occlusion is usually time-consuming and slow. In this paper, we present a new visibility sampling technique and show that efficient all-frequency {{rendering of}} dynamic scenes {{can be achieved by}} sampling visibility of dynamic objects in an adaptive and parallel way. First, we propose a two-level adaptive sampling scheme to distribute sample points spatially and compute <b>visibility</b> <b>maps</b> angularly on each sample point. Then, we present a parallel hemispher-ical distance transform to convert these <b>visibility</b> <b>maps</b> into spherical signed distance fields. Finally, using such a distance-based visibility representation, we integrate our visibility sampling algorithm in the all-frequency rendering framework for scenes with spatially-varying BRDFs. With an entire GPU-based implementation, our algorithm en-ables interactive all-frequency rendering of moderate dynamic scenes with environment lighting and spatially-varying reflectance. 1...|$|R
40|$|We {{study the}} problem of {{visibility}} in polyhedral terrains {{in the presence of}} multiple viewpoints. We consider a triangulated terrain with m> 1 viewpoints (or guards) located on the terrain surface. A point on the terrain is considered visible if it has an unobstructed line of sight to at least one viewpoint. We study several natural and fundamental visibility structures: (1) the <b>visibility</b> <b>map,</b> which is a partition of the terrain into visible and invisible regions; (2) the colored <b>visibility</b> <b>map,</b> which is a partition of the terrain into regions whose points have exactly the same visible viewpoints; and (3) the Voronoi <b>visibility</b> <b>map,</b> which is a partition of the terrain into regions whose points have the same closest visible viewpoint. We study the complexity of each structure for both 1. 5 D and 2. 5 D terrains, and provide efficient algorithms to construct them. Our algorithm for the <b>visibility</b> <b>map</b> in 2. 5 D terrains improves on the only existing algorithm in this setting. To the best of our knowledge, the other structures have not been studied before. ...|$|E
40|$|We {{present an}} {{algorithm}} and implementation for solving {{the line of}} sight (point-to-point visibility) problem for simulations with many moving entities. This problem arises in military simulations and can bottleneck such systems. We employ the concept of region based visibility to precompute visibility for the environment. The simulation environment is segmented into regions and a <b>visibility</b> <b>map</b> is constructed for each region. The <b>visibility</b> <b>map</b> indicates portions of the environment that are definitely blocked from any point within a region. Once this computation is performed an entity needs only to perform line of sight ray-cast tests for entities in the unblocked part of its region’s <b>visibility</b> <b>map.</b> Using our implementation on an existing simulation dataset we achieved a three times speedup. 1...|$|E
40|$|Abstract. We give an output-sensitive {{algorithm}} for computing the vis-ibility map {{of a set}} of n constant-complexity convex fat polyhedra or curved {{objects in}} 3 -space. Our algorithm runs in O((n + k) polylog n) time, where k is the combinatorial complexity of the <b>visibility</b> <b>map.</b> This is the first algorithm for computing the <b>visibility</b> <b>map</b> of fat objects that does not require a depth order on the objects and is faster than the best known algorithm for general objects. It is also the first output-sensitive algorithm for curved objects that does not require a depth order. ...|$|E
2500|$|In {{electron}} diffraction, Kikuchi line pairs {{appear as}} bands decorating the intersection between lattice plane traces and the Ewald sphere thus providing experimental {{access to a}} crystal's stereographic projection. [...] Model Kikuchi maps in reciprocal space, and fringe <b>visibility</b> <b>maps</b> for use with bend contours in direct space, thus act as road maps for exploring orientation space with crystals in the transmission electron microscope.|$|R
40|$|Consider the {{following}} modification to the shortest path query problem in polygonal domains: instead of finding shortest {{path to a}} query point q, we find the shortest path to any point that sees q. We present an interactive visualization applet visualizing these quickest visibility paths. The applet also visualizes quickest <b>visibility</b> <b>maps,</b> that is the subdivision of the domain into cells by the quickest visibility path structure...|$|R
40|$|Given two {{consecutive}} frames, video interpolation aims at generating intermediate frame(s) to form both spatially and temporally coherent video sequences. While most existing methods focus on single-frame interpolation, we propose an end-to-end {{convolutional neural network}} for variable-length multi-frame video interpolation, where the motion interpretation and occlusion reasoning are jointly modeled. We start by computing bi-directional optical flow between the input images using a U-Net architecture. These flows are then linearly combined at each time step to approximate the intermediate bi-directional optical flows. These approximate flows, however, only work well in locally smooth regions and produce artifacts around motion boundaries. To address this shortcoming, we employ another U-Net to refine the approximated flow and also predict soft <b>visibility</b> <b>maps.</b> Finally, the two input images are warped and linearly fused to form each intermediate frame. By applying the <b>visibility</b> <b>maps</b> to the warped images before fusion, we exclude the contribution of occluded pixels to the interpolated intermediate frame to avoid artifacts. Since none of our learned network parameters are time-dependent, our approach is able to produce as many intermediate frames as needed. We use 1, 132 video clips with 240 -fps, containing 300 K individual video frames, to train our network. Experimental results on several datasets, predicting different numbers of interpolated frames, demonstrate that our approach performs consistently better than existing methods. Comment: project page [URL]...|$|R
40|$|We {{study the}} {{complexity}} of the <b>visibility</b> <b>map</b> of so-called realistic terrains: terrains whose triangles are fat, not too steep and have roughly the same size. It is known that {{the complexity of}} the <b>visibility</b> <b>map</b> of such a terrain with n triangles is T(n 2) in the worst case. We prove that if the elevations of the vertices of the terrain are subject to uniform noise which is proportional to the edge lengths, then the worst-case expected (smoothed) complexity is only T(n). This provides an explanation why visibility maps of superlinear complexity are unlikely to be encountered in practice...|$|E
40|$|We {{propose a}} hybrid image-space/object-space {{solution}} to the classical hidden surface removal problem: Given # disjoint triangles in IR and # sample points (") in the ##-plane, determine the rst triangle directly behind each pixel. Our algorithm constructs the ####### ########## ### of the triangles {{with respect to the}} pixels, which is the subset of the trapezoids in a trapezoidal decomposition of the analytic <b>visibility</b> <b>map</b> that contain at least one pixel. The sampled <b>visibility</b> <b>map</b> adapts to local changes in image complexity, and its complexity is bounded both by the number of pixels and by the complexity of the analytic <b>visibility</b> <b>map.</b> Our algorithm runs in time ### # ##, where # is the output size. This is nearly optimal in the worst case and compares favorably with the best output-sensitive algorithms for both ray casting and analytic hidden surface removal. In the special case where the pixels form a regular grid, a sweepline variant of our algorithm runs in time ### ## log ##, which is usually sublinear in the number of pixels...|$|E
40|$|AbstractIn {{this paper}} {{we present a}} new, efficient, output-sensitive method for {{computing}} the <b>visibility</b> <b>map</b> {{of a set of}} c-oriented polyhedra (polyhedra with their faces and edges having at most c different orientations, for some constant c) as seen from a given viewpoint. For non- intersecting polyhedra with n edges in total, the algorithm runs in time O((n + k) log n), where k is the complexity of the <b>visibility</b> <b>map.</b> The method can handle cyclic overlap of the polyhedra and perspective views without any problem. The method can even deal with intersecting polyhedra. In the latter case the algorithm runs in time O((n + k) log 2 n) ...|$|E
50|$|Experimental and {{theoretical}} maps of Kikuchi band geometry, {{as well as}} their direct-space analogs e.g. bend contours, electron channeling patterns, and fringe <b>visibility</b> <b>maps</b> are increasingly useful tools in electron microscopy of crystalline and nanocrystalline materials. Because each Kikuchi line is associated with Bragg diffraction from one side of a single set of lattice planes, these lines can be labeled with the same Miller or reciprocal-lattice indices that are used to identify individual diffraction spots. Kikuchi band intersections, or zones, on the other hand are indexed with direct-lattice indices i.e. indices which represent integer multiples of the lattice basis vectors a, b and c.|$|R
30|$|In {{this paper}} we {{proposed}} {{an extension of}} the visibility-based beam tracing method proposed in [12], which now allows us to model and render propagation phenomena such as diffraction and diffusion, without significantly affecting the computational efficiency. We also improved the method in [12] by showing that not just the construction of the beam-tree but also the whole path-tracing process can be entirely performed on the <b>visibility</b> <b>maps.</b> We finally showed that this approach produces quite accurate results when comparing simulated data with real acquisitions. Thanks to that, this modeling tool proves particularly useful every time {{there is a need for}} an accurate and fast simulation of acoustic propagation in environments of variable geometry and variable physical characteristics.|$|R
40|$|We {{present a}} method for object {{detection}} in a multi view 3 D model. We use highly overlapping views, geometric data, and semantic surface classification in order to boost existing 2 D algorithms. Specifically, a 3 D model is computed from the overlapping views, and the model is segmented into semantic labels using height information, color and planar qualities. 2 D detector is run on all images and then detections are mapped into 3 D via the model. The detections are clustered in 3 D and represented by 3 D boxes. Finally, the detections, <b>visibility</b> <b>maps</b> and semantic labels are combined using a Support Vector Machine to achieve a more robust object detector...|$|R
40|$|In this paper, a new {{research}} problem is introduced which we called Covert path planning, where the robot navigates covertly {{in an environment}} to approach or track a specific target. The <b>Visibility</b> <b>Map</b> Algorithm and the Dark Path Algorithm that are introduced and discussed in this paper are our two co-operative approaches for solving such problem. The <b>Visibility</b> <b>Map</b> algorithm {{is based on the}} concept of giving a visibility value for every unoccupied location in the environment map, while the Dark Path algorithm makes use of these values to find a reasonable covert path between two points in that environment. A simulator was built to test the new algorithms. Three different applications are presented as test cases...|$|E
40|$|This paper {{describes}} an algorithm for pose and illumination invariant face recognition {{from a single}} image under occlusions. The method iteratively estimates the parameters of a 3 D morphable face model to approximate {{the appearance of a}} face in an image. Simultaneously, a <b>visibility</b> <b>map</b> is computed which segments the image into visible and occluded regions. The <b>visibility</b> <b>map</b> is incorporated into a probabilistic image formation model as a set of spatially correlated random variables. This leads to a Generalized Expectation-Maximization algorithm in which the estimation of the morphable model related parameters is interleaved with visibility computations. The validity of the algorithm is verified by a face recognition experiment using images from the publicly available AR Face Database...|$|E
40|$|This manual covers {{elementary}} map reading, conventional {{signs and}} military symbols, distances and scales, directions adn azimuths, coordinates, relief, slopes, profiles and <b>visibility,</b> <b>map</b> {{reading in the}} field, and aerial photograph reading to an extent sufficient to permit soldiers adn platoon leaders to read aerial photographs and aerial mosaics...|$|E
5000|$|Toggle Image <b>Map</b> <b>Visibility</b> and Toggle Slice Visibility tools: toggle between showing {{and hiding}} image maps and slices, {{respectively}} ...|$|R
40|$|A {{planar graph}} <b>visibility</b> {{representation}} <b>maps</b> each vertex to a horizontal segment at a vertical position and each edge to a vertical segment at a horizontal position such that each edge segment terminates at the vertical positions of its endpoint vertices and intersects no other horizontal vertex segments. [part of Introduction...|$|R
40|$|The {{application}} of GIS has become fundamental in environmental studies since {{it allows the}} integration of heterogeneous data. Several applications of the GRASS GIS where the use of different data types leads to the realization of environmental models are presented. The GRASS GIS {{has been used to}} develop and test forest fire risk models combining several morphologic, vegetational and anthropic factors; it has been used to set up a new avalanche risk model which allows the evaluation of the ability of the different vegetation types to protect against avalanches. A procedure for the automatic determination of the forest coverage evolution has been developed using the GRASS image analysis capability. The production of GPS satellites' <b>visibility</b> <b>maps</b> has been automated using the shadow generation algorithm in GRASS. This algorithm is also used to evaluate solar radiation and its relation to vegetation types...|$|R
40|$|Understanding the {{locations}} of highly occluded paths on a terrain is an important GIS problem. In this paper we present a model and a fast algorithm for computing highly occluded paths on a terrain. It does not assume the observer locations to be known and yields a path likely to be occluded under a rational observer strategy. We present experimental results that examine several different observer strategies. The repeated <b>visibility</b> <b>map</b> computations necessary for our model is expedited using a fast algorithm for calculating approximate visibility maps that models the decrease in observational fidelity as distance increases. The algorithm computes a multiresolution approximate <b>visibility</b> <b>map</b> and makes use of a graphics processing unit (GPU) to speed up computation. We present experimental results on terrrain data sets with up to 144 million points...|$|E
40|$|In {{this paper}} {{we present a}} new, simple, and {{efficient}} way to illuminate folded surfaces with extended light sources in realtime including shadows. In a preprocessing step we compute {{the parts of the}} surrounding environment that are visible from a set of points on the surface and represent this information in a binary <b>visibility</b> <b>map...</b>|$|E
40|$|Proceedings IEEE {{computer}} society {{conference on}} computer vision and pattern recognition - CVPR 2006, vol. II, pp. 1423 - 1430, June 17 - 22, 2006, New York, NY, USAThis paper describes an algorithm for pose and illumination invariant face recognition {{from a single}} image under occlusions. The method iteratively estimates the parameters of a 3 D morphable face model to approximate {{the appearance of a}} face in an image. Simultaneously, a <b>visibility</b> <b>map</b> is computed which segments the image into visible and occluded regions. The <b>visibility</b> <b>map</b> is incorporated into a probabilistic image formation model as a set of spatially correlated random variables. This leads to a Generalized Expectation-Maximization algorithm in which the estimation of the morphable model related parameters is interleaved with visibility computations. The validity of the algorithm is verified by a face recognition experiment using images from the publicly available AR Face Database. status: publishe...|$|E
40|$|Consider the {{following}} problem: A viewpoint moves amongst {{a set of}} line segments in the plane and it is desired to maintain the sequence of lines visible from the viewpoint at every increment in its position. The sequence of visible lines is identical for most increments {{in the position of}} the viewpoint. It is different only when the viewpoint crosses a visual discontinuity line. Our objective {{is to be able to}} quickly report whether the sequence of visible lines needs to be updated and perform the update quickly in that case. We propose an algorithm that satisfies both criteria while using space linear in the number of visual discontinuity lines. This last condition is important because constructing the arrangement of these lines would take space quadratic in their number. Keywords: animation, <b>visibility</b> <b>maps,</b> on [...] line algorithms, incremental update, discontinuity lines. 1 Introduction As a viewpoint moves along a trajectory in a static scene represented by a set of line segments, [...] ...|$|R
40|$|Keywords: Realistic input models, {{polyhedral}} terrains, <b>visibility</b> <b>maps,</b> shortest paths, Voronoidiagrams. 1 Introduction One of {{the main}} objectives of computational geometry is to uncover the computational complexityof geometric problems. It provides a theory that explains how efficiently geometric problems can be solved that arise in applications. However, in many cases a discrepancy exists between the provableworst-case computational complexity of an algorithm and the actual running time behavior of that algorithm on inputs that arise in applications. This {{has led to the}} study of fatness and realisticinput models. By making assumptions on the input, certain hypothetical worst-case scenarios can no longer occur, and a more efficient solution to a problem can be shown for all inputs that satisfythe assumptions. Either an existing algorithm can be shown to be more efficient for realistic inputs, or a special algorithm is designed that assumes that it will run on realistic inputs only. Our algorithmic results are of the first type...|$|R
40|$|The article {{presents}} {{a simple but}} accurate method for generating <b>visibility</b> <b>maps</b> based on the above criteria and demonstrate its effectiveness for a newly erected skyscraper in Turin, Italy. Visibility can be indicated from parameters that describe the atmospheric conditions, {{but it is more}} feasible to use sight distances registered over time by weather stations. The sight distances should preferably be collected hourly, and such high-frequency observations can be obtained from international databases. If one of the four corner points is visible, then the building is indicated as visible. Using geometric computations and visual acuity, the length of the line of sight appeared to be 218 km. Subsequently, visibility constraints were introduced based on atmospheric conditions. The method allows it to be determined at design stage how the (psychological) perception of places in an urban landscape will change when new buildings are erected or existing buildings are demolished. This provides valuable information for architects and city planner...|$|R
