25|68|Public
25|$|The {{application}} {{is free of}} charge, and claims to be fast and to provide up-to-date protection against threats. <b>Virus</b> <b>signature</b> files are stored in the cloud, not on individual computers, so update downloads are not required. Once a virus is detected and blocked for one user, all other Immunet users receive the same protection almost instantly. The software is noted {{for its ability to}} allow individual users to easily author their own signatures.|$|E
2500|$|The term [...] "false positive" [...] is {{also used}} when {{antivirus}} software wrongly classifies a harmless file as a virus. The incorrect detection {{may be due to}} heuristics or to an incorrect <b>virus</b> <b>signature</b> in a database. Similar problems can occur with antitrojan or antispyware software.|$|E
2500|$|A [...] "false positive" [...] or [...] "false alarm" [...] is when {{antivirus}} software identifies a non-malicious file as malware. [...] When this happens, {{it can cause}} serious problems. For example, if an antivirus program is configured to immediately delete or quarantine infected files, as is common on Microsoft Windows antivirus applications, a false positive in an essential file can render the Windows operating system or some applications unusable. Recovering from such damage to critical software infrastructure incurs technical support costs and businesses can be forced to close whilst remedial action is undertaken. For example, in May 2007 a faulty <b>virus</b> <b>signature</b> issued by Symantec mistakenly removed essential operating system files, leaving thousands of PCs unable to boot.|$|E
50|$|The ClamAV virus {{database}} is {{updated at}} least every four hours and as of 10 February 2017 contained over 5,760,000 <b>virus</b> <b>signatures</b> with the daily update Virus DB number at 23040.|$|R
50|$|In May 2006 Bitdefender {{developed}} a new technology, B-HAVE, to reduce dependency on <b>virus</b> <b>signatures</b> through proactive detection of unknown threats. This technology {{is based on a}} behavioral analysis in a virtualized environment.|$|R
30|$|Taint {{analysis}} has {{the objective of}} systematically labelling paths available for data propagation. It originally comes {{from the world of}} static analysis and is increasingly used in the security domain both for the generation of <b>virus</b> <b>signatures</b> and for security investigation [56, 57].|$|R
5000|$|McAfee VirusScan SuperDAT (<b>virus</b> <b>signature</b> {{definition}} updates, McAfee PrimeSupport license {{required for}} qualifying product) ...|$|E
5000|$|Avira {{products}} contain heuristics {{that can}} proactively uncover unknown malware, i.e. before a special <b>virus</b> <b>signature</b> {{to combat the}} damaging element has been created and before a virus guard update has been sent.|$|E
5000|$|... #Caption: The {{command-line}} virus scanner of Clam AV 0.95.2, an {{open source}} antivirus originally developed by Tomasz Kojm in 2001. Here running a <b>virus</b> <b>signature</b> definition update, scanning a file and identifying a Trojan.|$|E
5|$|Version 2001 (2.5) was {{released}} September 18, 2000, adding support for Windows ME {{in addition to}} the Windows 9x series, Windows NT, and Windows 2000. Following attacks by the ILOVEYOU and Anna Kournikova script viruses, this version can block malicious scripts without <b>virus</b> <b>signatures,</b> but by analyzing behavior.|$|R
50|$|SONAR is the {{abbreviation}} for Symantec Online Network for Advanced Response. Unlike <b>virus</b> <b>signatures,</b> SONAR examines {{the behavior of}} applications {{to decide whether they}} are malicious. SONAR is built upon technology Symantec acquired in its late 2005 purchase of WholeSecurity, a developer of behavioral anti-malware and anti-phishing software solutions in the United States.|$|R
2500|$|Although the signature-based {{approach}} can effectively contain malware outbreaks, malware authors {{have tried to}} stay {{a step ahead of}} such software by writing [...] "oligomorphic", [...] "polymorphic" [...] and, more recently, [...] "metamorphic" [...] viruses, which encrypt parts of themselves or otherwise modify themselves as a method of disguise, so as to not match <b>virus</b> <b>signatures</b> in the dictionary.|$|R
5000|$|The term [...] "false positive" [...] is {{also used}} when {{antivirus}} software wrongly classifies a harmless file as a virus. The incorrect detection {{may be due to}} heuristics or to an incorrect <b>virus</b> <b>signature</b> in a database. Similar problems can occur with antitrojan or antispyware software.|$|E
50|$|The 01234567 is the <b>virus</b> <b>signature,</b> {{and is used}} to {{make sure}} (if first-line-of-file = 01234567) the file is not already infected. The virus then asks for {{permission}} (ask-permission) to infect a random executable (get-random-executable-file). If the permission is granted, it compresses the executable (infect-executable), prepends itself to it (prepend), uncompresses the current executable file (uncompress the-rest-of-this-file) into a temporary file(tmpfile) and runs it (run tmpfile).|$|E
50|$|The {{application}} {{is free of}} charge, and claims to be fast and to provide up-to-date protection against threats. <b>Virus</b> <b>signature</b> files are stored in the cloud, not on individual computers, so update downloads are not required. Once a virus is detected and blocked for one user, all other Immunet users receive the same protection almost instantly. The software is noted {{for its ability to}} allow individual users to easily author their own signatures.|$|E
50|$|Typical IOCs are <b>virus</b> <b>signatures</b> and IP addresses, MD5 hashes of malware files or URLs or domain {{names of}} botnet {{command and control}} servers. After IOCs have been {{identified}} in a process of incident response and computer forensics, they can be used for early detection of future attack attempts using intrusion detection systems and antivirus software.|$|R
5000|$|Kaspersky Anti-Virus was [...] "A-listed" [...] by the UK PC journal PC Pro in late 2007, {{where it}} scored very highly for {{detection}} and removal of malware. PC Pro attributes this to “a {{combination of the}} software’s heuristic scanning and uncompromising approach to database updates. While many packages check for new <b>virus</b> <b>signatures</b> on a daily basis, Kaspersky runs to an hourly schedule, improving your chances of being immunized before an infection reaches it.” ...|$|R
40|$|Exploring {{the genetic}} {{structure}} of influenza viruses attracts the {{attention in the}} field of molecular ecology and medical genetics, whose epidemics cause morbidity and mortality worldwide. The rapid variations in RNA strand and changes of protein structure of the virus result in low-accuracy subtyping identification and make it difficult to develop effective drugs and vaccine. This paper constructs the evolutionary structure of avian influenza virus system considering both hemagglutinin and neuraminidase protein fragments. An optimization model was established to determine the rational granularity of the virus system for exploring the intrinsic relationship among the subtypes based on the fuzzy hierarchical evaluation index. Thus, an algorithm was presented to extract the rational structure. Furthermore, to reduce the systematic and computational complexity, the granular <b>signatures</b> of <b>virus</b> system were identified based on the coarse-grained idea and then its performance was evaluated through a designed classifier. The results showed that the obtained <b>virus</b> <b>signatures</b> could approximate and reflect the whole avian influenza virus system, indicating that the proposed method could identify the effective <b>virus</b> <b>signatures.</b> Once a new molecular virus is detected, it is efficient to identify the homologous virus hierarchically...|$|R
5000|$|A [...] "false positive" [...] or [...] "false alarm" [...] is when {{antivirus}} software identifies a non-malicious file as malware. When this happens, {{it can cause}} serious problems. For example, if an antivirus program is configured to immediately delete or quarantine infected files, as is common on Microsoft Windows antivirus applications, a false positive in an essential file can render the Windows operating system or some applications unusable. Recovering from such damage to critical software infrastructure incurs technical support costs and businesses can be forced to close whilst remedial action is undertaken. For example, in May 2007 a faulty <b>virus</b> <b>signature</b> issued by Symantec mistakenly removed essential operating system files, leaving thousands of PCs unable to boot.|$|E
50|$|From the 2009 to 2012 editions, Symantec made huge {{changes to}} their {{products}}' speed and performance. Norton products now have only 2 running processes, using about 24 MB of RAM.Symantec engineers monitor said outbreaks of computer viruses to establish new viruses. As soon as an virus is recognized, information {{in regards to}} the virus (a <b>virus</b> <b>signature)</b> is stored in a pandemic definitions file, which contains the vital know-how to become aware of and get rid of the virus. According to tests sponsored by Symantec, PassMark Security Benchmark 2012 Norton AntiVirus and Norton Internet Security are the lightest suites available. Av-comparatives.org also tested these products and gave similar results.PCMag recognises 2011 and 2012 lines as the fastest and strongest in protection.PCWorld's tests of security software put Norton Internet Security 2009 in the 1st place.In 2011 test of PCWorld, Norton Internet Security was the winner. Dennis Technology Labs (in tests sponsored by Symantec) confirms the performance and effectiveness of Norton 2011 and 2012 lines.|$|E
5000|$|There are {{two common}} methods that an {{antivirus}} software application uses to detect viruses, {{as described in}} the antivirus software article. The first, and by far the most common method of virus detection is using a list of <b>virus</b> <b>signature</b> definitions. This works by examining the content of the computer's memory (its Random Access Memory (RAM), and boot sectors) and the files stored on fixed or removable drives (hard drives, floppy drives, or USB flash drives), and comparing those files against a database of known virus [...] "signatures". Virus signatures are just strings of code that are used to identify individual viruses; for each virus, the antivirus designer tries to choose a unique signature string that will not be found in a legitimate program. Different antivirus programs use different [...] "signatures" [...] to identify viruses. The disadvantage of this detection method is that users are only protected from viruses that are detected by signatures in their most recent virus definition update, and not protected from new viruses (see [...] "zero-day attack").|$|E
40|$|Abstract. Virus {{detection}} at the router {{level is}} rapidly gaining in importance. Hardware-based implementations {{have the advantage}} of speed and hence can support a large throughput. In this paper we describe an FPGA-based implementation of the Bloom filter virus detection code that is compiled from the native C to VHDL and mapped onto a Virtex XC 2 V 8000 FPGA. Our results show that a single engine tailored for handling <b>virus</b> <b>signatures</b> of length eight bytes can achieve a throughput of 18. 6 Gbps while occupying only 8 % of the FPGA area. 1...|$|R
40|$|Abstract: Distributed denial-of-service (DDoS) {{attacks are}} a major {{security}} threat, the prevention of which is very hard, like {{when it comes to}} highly distributed daemon-based attacks. The early discovery of these attacks, although difficult, is necessary to protect network resources as well as the end users. In this paper, we address the problem of DDoS attacks and present the foundation and algorithms of our IDS. The base of our system is composed of intrusion detection systems (IDSs) which use the KDD Cup dataset to detect intrusion. The IDS scans all the files being transmitted from the routers for malicious content and known <b>virus</b> <b>signatures.</b> The evaluation of our system, using the KDD testing dataset, shows a better ratio of detecting attacks and a low false positives ratio. It also supports easy modifiability, scalability and usability...|$|R
5000|$|The only {{reliable}} {{method to}} avoid [...] "stealth" [...] viruses is to [...] "boot" [...] from a medium {{that is known}} to be [...] "clean". Security software can then be used to check the dormant operating system files. Most security software relies on <b>virus</b> <b>signatures,</b> or they employ heuristics. Security software may also use a database of file [...] "hashes" [...] for Windows OS files, so the security software can identify altered files, and request Windows installation media to replace them with authentic versions. In older versions of Windows, file cryptographic hash functions of Windows OS files stored in Windows—to allow file integrity/authenticity to be checked—could be overwritten so that the System File Checker would report that altered system files are authentic, so using file hashes to scan for altered files would not always guarantee finding an infection.|$|R
40|$|Abstract—In this paper, {{we present}} a novel {{approach}} for the detection and signature extraction for a subclass of polymorphic computer viruses. Our detection scheme offers 0 false negative and a very low false positives detection rate. We use contextfree grammars as viral signatures, and design a process able to extract this signature from a single sample of a <b>virus.</b> <b>Signature</b> extraction is achieved through a light manual information gathering process, followed by an automatic static analysis of the binary code of the virus mutation engine...|$|E
40|$|Instead {{of using}} {{traditional}} <b>virus</b> <b>signature</b> scanning, a strong dynamic integrity verification mechanism {{is designed to}} detect whether software is infected by virus. In our scheme that based on code encryption, hash value of an application is used as the encryption key for virus detection. Hash value comparison is not needed and the storage of decryption key is not required. If a virus infects the software, the application cannot be executed {{and there will be}} a notification message prompted to the user. Our mechanism can be applied to all PE format files like EXE. link_to_subscribed_fulltex...|$|E
40|$|PERG is {{a pattern}} {{matching}} engine designed for locating predefined byte string patterns (rules) from the ClamAV <b>virus</b> <b>signature</b> database in a data stream. This paper presents PERG-Rx, an extension of PERG that adds limited regular expression support for wildcard patterns used by rules that represent polymorphic viruses. To {{reduce the amount of}} state needed to track so many regular expressions, PERG-Rx employs a lossy scheme which increases the rate of false positives detected as the required state grows. The scalability and dynamic updatability of the PERG-Rx architecture to database updates are also evaluated...|$|E
50|$|Westwood is {{functionally}} {{similar to}} Jerusalem, but the coding {{is quite different}} in many areas. Because of this, <b>virus</b> removal <b>signatures</b> used to detect the original Jerusalem had to be modified to detect Westwood. Organisations such as Virus Bulletin http://www.virusbtn.com/ used to use Westwood to test virus scanners for ability to distinguish Jerusalem variants.|$|R
40|$|Rapid and {{widespread}} dissemination of security updates throughout the Internet will be invaluable for many purposes, including sending early-warning signals, updating certificate revocation lists, distributing new <b>virus</b> <b>signatures,</b> etc. Notifying {{a large number}} of machines securely, quickly and reliably is challenging. Such a system must outpace the propagation of threats, handle complexities in a large-scale environment, deal with interruption attacks on dissemination, and also secure itself. Revere addresses these problems by building a large-scale, self-organizing and resilient overlay network on top of the Internet. We discuss how to secure the dissemination procedure and the overlay network, considering possible attacks and countermeasures. We present experimental measurements of a prototype implementation of Revere gathered using a large-scale-oriented approach. These measurements suggest that Revere can deliver security updates at the required scale, speed and resiliency for a reasonable cost. Index Terms: security update, overlay network, security, resiliency, self-organization 1...|$|R
40|$|Abstract—In today’s web world {{web sites}} became attackers’ main target. Since days before <b>virus</b> <b>signatures</b> {{had been used}} to detect {{malicious}} web pages. In this paper the malicious web pages will be detected using a prototype system based on the concept of abnormal visibility, also it detects the exact location of malicious code in the source code. The proposed prototype system uses a Web Spider which captures the entire link URLs associated with the web page. HTML parser will parse the web pages and convert the code into data structures recognized by the Detector. The Detector will match the structure with the abnormal visibility fingerprints and locates possible malicious code. The system proves higher performance, higher efficiency and lower maintenance cost, almost all malicious web pages are detected and the malicious codes encoded in the JavaScript. The system provides security alarm for end-users before visiting malicious web pages...|$|R
40|$|Anti-virus {{applications}} play {{an important}} role in today’s Internet communication security. Virus scanning is usually performed on email, web and file transfer traffic flows at intranet security gateways. The performance of popular anti-virus applications relies on the pattern matching algorithms implemented in these security devices. The growth of network bandwidth and the increase of virus signatures call for high speed and scalable pattern matching algorithms. Motivated by several observations of a real-life <b>virus</b> <b>signature</b> database from Clam-AV, a popular anti-virus application, a fast pattern matching algorithm named MRSI is proposed in this paper. Compared to the current algorithm implemented in Clam-AV, MRSI achieved an 80 %~ 100 % faster virus scanning speed without excessive memory usages...|$|E
40|$|Abstract. Anti-virus {{software}} {{has been}} the main defence against malicious application and will remain so in the future. However the strength of an anti-virus product will depend on having an updated <b>virus</b> <b>signature</b> and the heuristic engine to detect future and unknown virus. The time gap between an exploit appearing {{on the internet and}} the user receiving an update for their anti-virus signature database on their machine is very crucial. Having a diverse multi-Engine anti-virus scanner in the infrastructure with the capability for custom signature definition as part of a defence in-depth strategy will help to close that gap. This paper presents a technique of deploying more than one anti-virus solution at different layers and using custom anti-virus signature from the ClamAV anti-virus software as part of a defence in-depth strategy...|$|E
40|$|AbstractComputers are top-rated {{essential}} commodities to {{the people}} across the world. The main concern related to it is its vulnerability and information security {{in the era of}} internet. Cyber intrusion, infiltration and invasion are a regular phenomenon. There is existing Anti-virus technology to deal with it. It has been observed that most of the Anti-virus is excessively dependent on knowledge base. This means the knowledge of <b>virus</b> <b>signature</b> is an essential need so as to ensure its optimum performance. In the proposed work, effort has been made to study various aspects of the Antiviral mechanisms. The investigation includes survey of structure and behavior of the Anti-virus. At end a case study is provided to deal with common virus and to get read of them manually without the aid of the Anti-virus...|$|E
40|$|The {{continuous}} {{growth of}} malware presents {{a problem for}} internet computing due to increasingly sophisticated techniques for disguising malicious code through mutation and {{the time required to}} identify signatures for use by antiviral software systems (AVS). Malware modelling has focused primarily on semantics due to the intended actions and behaviours of viral and worm code. The aim {{of this paper is to}} evaluate a static structure approach to malware modelling using the growing malware signature databases now available. We show that, if malware signatures are represented as artificial protein sequences, it is possible to apply standard sequence alignment techniques in bioinformatics to improve accuracy of distinguishing between worm and <b>virus</b> <b>signatures.</b> Moreover, aligned signature sequences can be mined through traditional data mining techniques to extract metasignatures that help to distinguish between viral and worm signatures. All bioinformatics and data mining analysis were performed on publicly available tools and Weka...|$|R
40|$|The {{growing number}} of {{computer}} viruses and the detection of zero day malware have been the concern for security researchers for a large period of time. Existing antivirus products (AVs) rely on detecting <b>virus</b> <b>signatures</b> which do not provide a full solution to {{the problems associated with}} these viruses. The use of logic formulae to model the behaviour of viruses {{is one of the most}} encouraging recent developments in virus research, which provides alternatives to classic virus detection methods. To address the limitation of traditional AVs, we proposed a virus detection system based on extracting Application Program Interface (API) calls from virus behaviours. The proposed research uses a temporal logic and behaviour-based detection mechanism to detect viruses at both user and kernel level. Interval Temporal Logic (ITL) will be used for virus specifications, properties and formulae based on the analysis of API calls representing the behaviour of computer viruses...|$|R
40|$|Abstract — PERG is an FPGA {{application}} for accelerating detection of computer <b>virus</b> <b>signatures</b> (patterns). A pattern {{consists of a}} sequence {{of one or more}} segments separated by gaps of fixed lengths. PERG preprocesses a database of these patterns into hardware. To our knowledge, PERG is the first pattern matching hardware targeting viruses, as well as the first among network intrusion detection systems (NIDS), which are similar in nature to PERG, to implement Bloomier filters. This makes guarding against false positives faster than traditional Bloom filters because verification requires checking against one pattern instead of several patterns. Using the ClamAV antivirus database, PERG fits 80, 282 patterns containing over 8, 224, 848 characters into one modest FPGA chip with a small (4 MB) offchip memory. The architecture achieves roughly 26 x improved density (characters per memory bit) compared to the next-best NIDS pattern-matching engine which fits only 1 / 250 th the characters. With an estimated throughput of about 200 MB/s, PERG keeps up with most network or disk interfaces. Keywords-Antivirus; Pattern Matching; FPGA; Bloomier Filter I...|$|R
