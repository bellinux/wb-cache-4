350|158|Public
5|$|Cray {{computers}} {{became famous}} for their vector-processing computers in the 1970s and 1980s. However, vector processors—both as CPUs and as full computer systems—have generally disappeared. Modern processor instruction sets do include some <b>vector</b> <b>processing</b> instructions, such as with Freescale Semiconductor's AltiVec and Intel's Streaming SIMD Extensions (SSE).|$|E
25|$|These early {{architectures}} introduced {{parallel processing}} at the processor level, with innovations such as <b>vector</b> <b>processing,</b> {{in which the}} processor can perform several operations during one clock cycle, {{rather than having to}} wait for successive cycles.|$|E
25|$|Cell is a {{multi-core}} microprocessor microarchitecture {{that combines}} a general-purpose Power Architecture core of modest performance with streamlined coprocessing elementss Multicore Architecture|publisher=IEEE|accessdate=2007-03-22|format=PDF}} which greatly accelerate multimedia and <b>vector</b> <b>processing</b> applications, {{as well as}} many other forms of dedicated computation.|$|E
3000|$|... [...]). Thus, {{the rates}} of the ZF {{receiver}} with the <b>vectored</b> CM-DM <b>processing</b> will clearly be higher than those with DM processing alone, because the effective channel matrix after combining is more strongly CWDD in the former case. In general, {{it can be seen}} that the performance of the linear receivers can be improved with the <b>vectored</b> CM-DM <b>processing.</b>|$|R
50|$|Misc - {{floating}} point, <b>vector,</b> signal <b>processing,</b> cache locking, decimal floating point, etc.|$|R
50|$|IBM's {{offering}} of an optional vector facility (VF) extension for the 3090 {{came at a}} time when <b>Vector</b> processing/Array <b>processing</b> suggested names like Cray and Control Data Corporation (CDC).|$|R
25|$|Intel's Larrabee {{multicore}} architecture project uses {{a processor}} core {{derived from a}} P5 core (P54C), augmented by multithreading, 64-bit instructions, and a 16-wide <b>vector</b> <b>processing</b> unit. Intel's low-powered Bonnell microarchitecture employed in early Atom processor cores also uses an in-order dual pipeline similar to P5.|$|E
25|$|The K computer's {{placement}} on the {{top spot}} is seven years after Japan held the title in 2004. NEC's Earth Simulator supercomputer built by NEC at the Japan Agency for Marine-Earth Science and Technology (JAMSTEC) was the fastest {{in the world at}} that time. It used 5,120 NEC SX-6i processors, generating a performance of 28,293,540 MIPS (million instructions per second). It also had a peak performance of 131 TFLOPS (131 trillion floating point operations per second), using proprietary <b>vector</b> <b>processing</b> chips.|$|E
500|$|SIMD {{parallel}} computers {{can be traced}} back to the 1970s. The motivation behind early SIMD computers was to amortize the gate delay of the processor's control unit over multiple instructions. In 1964, Slotnick had proposed building a massively parallel computer for the Lawrence Livermore National Laboratory. His design was funded by the US Air Force, which was the earliest SIMD parallel-computing effort, ILLIAC IV. The key to its design was a fairly high parallelism, with up to 256processors, which allowed the machine to work on large datasets in what would later be known as <b>vector</b> <b>processing.</b> However, ILLIAC IV was called [...] "the most infamous of supercomputers", because the project was only one fourth completed, but took 11years and cost almost four times the original estimate. When it was finally ready to run its first real application in 1976, it was outperformed by existing commercial supercomputers such as the Cray-1.|$|E
5000|$|... r.sun is a solar {{irradiance}} and irradiation model for GRASS GIS, {{which is a}} free, open-source geographical information system (GIS) capable of handling raster, topological <b>vector,</b> image <b>processing,</b> and graphic data.|$|R
3000|$|... is high (which {{occurs at}} high {{frequency}} and/or longer loop lengths as noted earlier). This {{shows that a}} substantial rate enhancement may be realized with the <b>vectored</b> CM-DM <b>processing</b> at longer loop-lengths.|$|R
30|$|The {{combination}} of the obtained radial velocities and nominal beam pointing directions allows the estimation of the horizontal and vertical wind <b>vectors.</b> This <b>processing</b> may be combined with averaging techniques in time and range (altitude) to reduce the variability.|$|R
2500|$|RISC-V, {{the open}} source fifth Berkeley RISC ISA, with 64 or 128-bit address spaces, and the integer core {{extended}} with floating point, atomics and <b>vector</b> <b>processing,</b> {{and designed to}} be extended with instructions for networking, IO, data processing etc. [...] A 64-bit superscalar design, [...] "Rocket", is available for download.|$|E
2500|$|The {{heat density}} {{generated}} by a supercomputer has a direct dependence on the processor type used in the system, with more powerful processors typically generating more heat, given similar underlying semiconductor technologies. While early supercomputers used a few fast, closely packed processors that took advantage of local parallelism (e.g., pipelining and <b>vector</b> <b>processing),</b> in time the number of processors grew, and computing nodes could be placed further away,e.g., in a computer cluster, or could be geographically dispersed in grid computing. As the number of processors in a supercomputer grows, [...] "component failure rate" [...] begins to become a serious issue. If a supercomputer uses thousands of nodes, each of which may fail once per year on the average, then the system will experience several node failures each day.|$|E
50|$|The Advanced Scientific Computer (ASC) is a {{supercomputer}} {{designed and}} manufactured by Texas Instruments (TI) between 1966 and 1973. The ASC's {{central processing unit}} (CPU) supported <b>vector</b> <b>processing,</b> a performance-enhancing technique which was key to its high-performance. The ASC, along with the Control Data Corporation STAR-100 supercomputer (which {{was introduced in the}} same year), were the first computers to feature <b>vector</b> <b>processing.</b> However, this technique's potential was not fully realized by either the ASC or STAR-100 due to an insufficient understanding of the technique; it was the Cray Research Cray-1 supercomputer, announced in 1975 that would fully realize and popularize <b>vector</b> <b>processing.</b> The more successful implementation of <b>vector</b> <b>processing</b> in the Cray-1 would demarcate the ASC (and STAR-100) as first-generation vector processors, with the Cray-1 belonging in the second.|$|E
50|$|Geographic Resources Analysis Support System (commonly termed GRASS GIS) is a {{geographic}} information system (GIS) software suite used for geospatial data management and analysis, image processing, producing graphics and maps, spatial and temporal modeling, and visualizing. It can handle raster, topological <b>vector,</b> image <b>processing,</b> and graphic data.|$|R
30|$|The {{process of}} {{generating}} SVPWM signals continuously runs {{in parallel with}} controller logic, but {{the speed at which}} these signals are generated is greater than the speed required for the <b>vector</b> control <b>processing.</b> As a consequence, these two processes are designed and tested separately before being assembled and tested together.|$|R
3000|$|... [...]. With such a {{vectoring}} approach, {{the size}} of effective channel H(cd)remains the same and thereby receiver-complexity for the CM-DM system is {{comparable to that of}} the conventional, N-dimensional <b>vector</b> DM <b>processing.</b> Note {{that there is only one}} signal at each TP, so that the vectored channel matrix again becomes of size N × N at each tone. In fact, only [...]...|$|R
5000|$|... <b>vector</b> <b>processing</b> or SIMD {{functional}} {{units to}} efficiently {{deal with these}} media datatypes ...|$|E
5000|$|... hold {{data for}} <b>vector</b> <b>processing</b> done by SIMD {{instructions}} (Single Instruction, Multiple Data).|$|E
5000|$|... 1975: Three highly {{influential}} publications by Salton fully articulated his <b>vector</b> <b>processing</b> {{framework and}} term discrimination model: ...|$|E
40|$|Summary. This chapter {{gives an}} {{overview}} on topological methods for <b>vector</b> field <b>processing.</b> After introducing topological features for 2 D and 3 D vector fields, we discuss how to extract {{and use them}} as visualization tools for complex flow phenomena. We do so both for static and dynamic fields. Finally, we introduce further applications of topological methods for compressing, simplifying, comparing, and constructing vector fields. ...|$|R
30|$|In this article, {{we propose}} a {{vectored}} system by using both common mode (CM) and differential mode (DM) signals in upstream VDSL. We first develop a multi-input multi-output (MIMO) CM channel {{by using the}} single-pair CM and MIMO DM channels proposed recently, and study {{the characteristics of the}} resultant CM-DM channel matrix. We then propose a low complexity receiver structure in which the CM and DM signals of each twisted-pair (TP) are combined before the application of a MIMO zero forcing (ZF) receiver. We study capacity of the proposed system, and show that the <b>vectored</b> CM-DM <b>processing</b> provides higher data-rates at longer loop-lengths. In the absence of alien crosstalk, application of the ZF receiver on the vectored CM-DM signals yields performance close to the single user bound (SUB). In the presence of alien crosstalk, we show that the <b>vectored</b> CM-DM <b>processing</b> exploits the spatial correlation of CM and DM signals and provides higher data rates than with DM processing only. Simulation results validate the analysis and demonstrate the importance of CM-DM joint <b>processing</b> in <b>vectored</b> VDSL systems.|$|R
5000|$|Arturo González-Escribano, Arjan J. C. van Gemund, Valentín Cardeñoso-Payo et al., Measuring the Performance Impact of SP-Restricted Programming in Shared-Memory Machines, In <b>Vector</b> and Parallel <b>Processing</b> — VECPAR 2000, Springer Verlag, pp. 128-141, , 2000, http://www.infor.uva.es/~arturo/Ftp/p-vecpar2000lncs.ps.gz ...|$|R
5000|$|Load-store units {{may also}} be used in <b>vector</b> <b>processing,</b> and in such cases the term [...] "load-store vector" [...] may be used.|$|E
50|$|There are {{currently}} no mainstream general-purpose processors built {{to operate on}} 512-bit integers or addresses, though a number of processors do operate on 512-bit data. , the Intel Xeon Phi has a <b>vector</b> <b>processing</b> unit with 512-bit vector registers, each one holding sixteen 32-bit elements or eight 64-bit elements, and a single instruction can operate on all these values in parallel. However, the Xeon Phi's <b>vector</b> <b>processing</b> unit does not operate on individual numbers that are 512 bits in length.|$|E
50|$|While {{it is fair}} to {{say that}} Berkeley IRAM did not achieve the {{recognition}} that Berkeley RISC received, the IRAM project was nevertheless influential. Although initial IRAM proposals focused on trade-offs between CPU and DRAM, IRAM research came to concentrate on vector instruction sets.Its publications were early advocates of the incorporation of <b>vector</b> <b>processing</b> and vector instruction sets into microprocessors, and several commercial microprocessors, such as the Intel AVX, subsequently adopted <b>vector</b> <b>processing</b> instruction set extensions.|$|E
50|$|In recent decades, {{extensive}} {{research has been}} conducted on the theory and design of vector sensors. Many <b>vector</b> sensor signal <b>processing</b> algorithms have been designed. They have been mainly used for underwater target localization and sonar applications.|$|R
40|$|We {{have created}} an elastic version of the IFF Marmousi model for use in AVO {{analysis}} {{in the presence of}} complex structure. The model is larger, includes larger offsets, lies in deeper water, includes surface streamer, multicomponent OBC and VSP acquisition, and contains more hydrocarbons than its predecessor. In addition to AVO analysis, we believe these data will be suitable for calibrating emerging technologies including converted wave tomography and <b>vector</b> seismic <b>processing...</b>|$|R
30|$|The {{remainder}} {{of this article is}} organized as follows. In Section 2, we describe the DSL system model. In Section 3, we discuss a model for the CM vectored channel. We present the issue of CM-DM combining in Section 4, and elaborate on its applications to the <b>vectored</b> CM-DM <b>processing</b> in Section 5. The CM signals are exploited for the alien crosstalk cancelation in Section 6. Section 7 presents computer simulations. Finally, Section 8 provides the main conclusions.|$|R
5000|$|The Cray X2 is a <b>vector</b> <b>processing</b> node for the Cray XT5h supercomputer, {{developed}} and sold by Cray Inc. and launched in 2007.|$|E
5000|$|Much of the 7400 {{design was}} done by Motorola in close {{co-operation}} with Apple and IBM. IBM, the third member of the AIM alliance, designed the chip together with Motorola in its Somerset design center, but chose not to manufacture it, {{because it did not}} see the need back then for the <b>Vector</b> <b>Processing</b> Unit. Ultimately, the G4 architecture design contained a 128-bit <b>vector</b> <b>processing</b> unit labelled AltiVec by Motorola while Apple marketing referred to it as the [...] "Velocity Engine".|$|E
5000|$|Oracle takes {{advantage}} of SIMD <b>vector</b> <b>processing</b> to scan the data in the columnar format. Instead of evaluating each entry in the column one at a time, SIMD <b>vector</b> <b>processing</b> lets a set of column values be evaluated together in a single CPU instruction. The column format used in the IM column store has been specifically designed to maximize the number of column entries that can be loaded into the vector registers on the CPU and evaluated in a single CPU instruction.|$|E
40|$|A new {{discrete}} ordinates method {{designed for}} use on modern, large memory, <b>vector</b> and/or parallel <b>processing</b> super computers has been developed. The method is similar to conventional SN techniques in that the medium is divided into spatial mesh cells and that discrete directions are used. However, in place of an approximate differencing scheme, a nearly exact matrix representation of the streaming operator is determined. Although extremely large, this matrix can be stored on today's computers for repeated use in the source iteration. Since the source iteration is cast in matrix form it benefits enormously from <b>vector</b> and/or parallel <b>processing,</b> if available. Several test results are presented demonstrating the reduction in numerical diffusion and elimination of ray effects...|$|R
40|$|Performance {{analysis}} of a common-mode signal based low-complexity crosstalk cancelation scheme in vectored VDSL SM Zafaruddin *, Shankar Prakriya and Surendra Prasad In this article, we propose a vectored system by using both common mode (CM) and differential mode (DM) signals in upstream VDSL. We first develop a multi-input multi-output (MIMO) CM channel by using the single-pair CM and MIMO DM channels proposed recently, and study {{the characteristics of the}} resultant CM-DM channel matrix. We then propose a low complexity receiver structure in which the CM and DM signals of each twisted-pair (TP) are combined before the application of a MIMO zero forcing (ZF) receiver. We study capacity of the proposed system, and show that the <b>vectored</b> CM-DM <b>processing</b> provides higher data-rates at longer loop-lengths. In the absence of alien crosstalk, application of the ZF receiver on the vectored CM-DM signals yields performance close to the single user bound (SUB). In the presence of alien crosstalk, we show that the <b>vectored</b> CM-DM <b>processing</b> exploits the spatial correlation of CM and DM signals and provides higher data rates than with DM processing only. Simulation results validate the analysis and demonstrate the importance of CM-DM joint <b>processing</b> in <b>vectored</b> VDSL systems...|$|R
40|$|International audienceThe {{detection}} and characterization of burst signals are challenging tasks for time-frequency analysis, {{due to their}} very short duration. This paper investigates in this context the recurrence plot analysis (RPA) method, from which it derives the <b>vector</b> samples <b>processing</b> (VeSP) concept. The paper shows that VeSP is a generic framework that unifies signal processing concepts like histogram and autocorrelation, which it also generalizes and extends. Results of VeSP based tools are provided, concerning detection of transient signals, noise reduction, and frequency estimation...|$|R
