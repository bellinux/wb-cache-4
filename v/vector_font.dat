7|26|Public
25|$|Digital type {{became the}} {{dominant}} form of {{type in the}} late 1980s and early 1990s. Digital fonts store the image of each character either as a bitmap in a bitmap font, or by mathematical description of lines and curves in an outline font, also called a <b>vector</b> <b>font.</b> Bitmap fonts were more commonly used in the earlier stages of digital type, and are rarely used today.|$|E
50|$|Calamus is a {{software}} RIP application which generates high-quality output in any resolution. It {{was one of}} the first DTP applications supporting an own <b>vector</b> <b>font</b> format, notable for its support for automatic kerning even where adjacent characters are set in different fonts or at different sizes. Its high modularity offers features for almost every purpose in desktop publishing. Calamus also {{was one of the}} first DTP apps to support real virtual objects and frames, nondestructive vector masks, and editable PS/PDF import. Its (adjustable) measurement base of 1/10,000mm allows accurate positioning of elements.|$|E
50|$|METAFONT uses a {{different}} sort of glyph description. Like TrueType, it is a <b>vector</b> <b>font</b> description system. It draws glyphs using strokes produced by moving a polygonal or elliptical pen approximated by a polygon along a path made from cubic composite Bézier curves and straight line segments, or by filling such paths. Although when stroking a path the envelope of the stroke is never actually generated, the method causes no loss of accuracy or resolution. The method Metafont uses is more mathematically complex because the parallel curves of a Bézier can be 10th order algebraic curves.|$|E
5000|$|The Hershey fonts are a {{collection}} of <b>vector</b> <b>fonts</b> developed c. 1967 by Dr. Allen V. Hershey at the Naval Weapons Laboratory. [...] The fonts are publicly available and have few restrictions. <b>Vector</b> <b>fonts</b> are easily scaled and rotated {{in two or three}} dimensions; consequently the Hershey fonts have been widely used in computer graphics and computer-aided design programs.|$|R
50|$|Outline <b>fonts</b> (also called <b>vector</b> <b>fonts)</b> use Bézier curves, drawing {{instructions}} and mathematical formulae to describe each glyph, which make the character outlines scalable to any size.|$|R
50|$|Outline <b>fonts</b> or <b>vector</b> <b>fonts</b> are {{collections}} of vector images, consisting of lines and curves defining {{the boundary of}} glyphs. Early <b>vector</b> <b>fonts</b> were used by vector monitors and vector plotters using their own internal fonts, usually with thin single strokes instead of thick outlined glyphs. The advent of desktop publishing brought {{the need for a}} universal standard to integrate the graphical user interface of the first Macintosh and laser printers. The term to describe the integration technology was WYSIWYG (What You See Is What You Get). The universal standard was (and still is) Adobe PostScript. Examples are PostScript Type 1 and Type 3 fonts, TrueType and OpenType.|$|R
40|$|This bachelor's thesis {{deals with}} sub-pixel <b>vector</b> <b>font</b> representation. It generaly {{describes}} representation and rasterization of <b>vector</b> <b>font</b> and shortly compares advantages of <b>vector</b> <b>font</b> against bitmaped font. Including information about sub-pixel font representation on screen type LCD, possibilities and problems {{that this type}} of projection produces. It contains implementation description of demonstrational application, which rasterizes font with sub-pixel technology...|$|E
40|$|A pupil plane {{wavefront}} reconstruction {{procedure is}} proposed based on {{analysis of a}} sequence of focal plane images corresponding to a sequence of random pupil plane phase probes. The developed method provides the unique nontrivial solution of wavefront retrieval problem and shows global convergence to this solution demonstrated using a Gerchberg-Saxton implementation. The method is general {{and can be used}} in any optical system that includes deformable mirrors for active/adaptive wavefront correction. The presented numerical simulation and lab experimental results show low noise sensitivity, high reliability and robustness of the proposed approach for high quality optical wavefront restoration. Laboratory experiments have shown λ/ 14 rms accuracy in retrieval of a poked DM actuator fiducial pattern with spatial resolution of 20 - 30 μm that is comparable with accuracy of direct high-resolution interferometric measurements. Comment: Submitted to JOSA A, 17 pages, two columns, 20 figures, corrected metadata typo, updated with <b>vector</b> <b>font...</b>|$|E
40|$|The {{following}} font tools will {{be described}} in this paper: VFlib, the <b>Vector</b> <b>Font</b> Library, which has been written by Kakugawa Hirotsugu (Ì¯<ê). This library together with an included suite of demo applications is aimed to provide a uniform interface for accessing fonts in many di erent formats. With the help of con guration les {{it is possible to}} access fonts with other encodings, to de ne new (virtual) fonts, and others. Using VFlib as a basis for dvi drivers, it will be no longer necessary to have pk les for any font format except for Metafont. FreeType, developed by David Turner, Robert Wilhelm, and the author of this paper. This is a platform-independent library to render bitmaps from TrueType fonts. What makes it di erent from other freely available TrueType tools is a TrueType interpreter to process hints. ttf 2 pk and hbf 2 gf, maintained resp. written by the author. Both programs are part of the CJK package and are used to convert CJK TrueType and HBF fonts into TEX fonts...|$|E
50|$|Back when fonts came in {{different}} formats and were platform specific, FontLab {{also began to}} create a line of font conversion utilities. ScanFont, a tool for converting scans/bitmaps of glyphs into vector glyphs/fonts was part of FontLab 2. But in the next version it was split off, and became its own more complete and powerful application. Next came TransType, a font converter for moving fonts between TrueType, OpenType and Type 1 formats and between Macintosh and Windows platforms. A few more specialized font converters followed: FONmaker, for converting <b>vector</b> <b>fonts</b> into bitmaps; FontFlasher, for converting <b>vector</b> <b>fonts</b> into pixelated fonts for low-res display; and FogLamp, for converting native Fontographer files into modern formats.|$|R
50|$|Metafont is a {{description}} language {{used to define}} <b>vector</b> <b>fonts.</b> It is also {{the name of the}} interpreter that executes Metafont code, generating the bitmap fonts that can be embedded into e.g. PostScript. Metafont was devised by Donald Knuth as a counterpart to his TeX typesetting system.|$|R
50|$|Original Amiga outline <b>fonts</b> (also called <b>vector</b> <b>fonts)</b> were Agfa Compugraphic fonts {{available}} since AmigaOS 2.0 {{with the}} standard utility Fountain (later called IntelliFont) from Commodore. Third-party developers added support for TrueType fonts using various libraries, such as TrueType Library I and II, and LibFreeType library.|$|R
50|$|GNU FreeFont (also {{known as}} Free UCS Outline Fonts) {{is a family}} of free OpenType, TrueType and WOFF <b>vector</b> <b>fonts,</b> {{implementing}} {{as much of the}} Universal Character Set (UCS) as possible. The project was initiated in 2002 by Primož Peterlin and is now maintained by Steve White.|$|R
50|$|At a {{time where}} BBS Software (such as RemoteAccess) were merely using ANSI art {{interfaces}} RoboBOARD started a revolution. It was the first fully graphical BBS system with iconic navigation, punchy bitmaps, and <b>vector</b> <b>fonts,</b> {{all at a time}} when ultra-fast high-speed modems were barely clocking 2400 bit/s.|$|R
50|$|However, in 1992, the US Copyright Office {{revisited}} its 1988 decision, {{and determined}} that the latest digital outline fonts in fact had elements that could be protected as software. Since that time, the Office has accepted registration of copyright for digital <b>vector</b> <b>fonts,</b> such as PostScript Type 1, TrueType, and OpenType format files.|$|R
5000|$|The {{commission}} {{reported that}} the project would be feasible and began by examining French printing and typography, as the [...] "art by which all others are preserved". As part of the project, Jaugeon and Truchet established the first typographic point system, <b>vector</b> <b>fonts,</b> the bitmap, slanted italic type, and the Romain du Roi ("King's Roman") font, which later developed into Times New Roman.|$|R
50|$|The editor {{was more}} {{oriented}} to speed and interactive aspect of editing, {{rather than on}} visual appearance of the result, therefore, {{it has its own}} graphical user interface with bitmap fonts of fixed width. Although popular (easier to use than TeX for many scientists), this unfortunately led to its demise as more text editors with <b>vector</b> <b>fonts</b> for MS Windows began to appear, and in 1996, it has been discontinued.|$|R
50|$|Atari had {{originally}} intended to include GEM's GDOS (Graphical Device Operating System), which allowed programs to send GEM VDI (Virtual Device Interface) commands to drivers loaded by GDOS. This allowed developers to send VDI instructions to other devices simply by pointing to it. However, GDOS was not ready {{at the time the}} ST started shipping and was included in software packages and later ST machines. Later versions of GDOS supported <b>vector</b> <b>fonts.</b>|$|R
5000|$|Digital bitmap fonts (and {{the final}} {{rendering}} of <b>vector</b> <b>fonts)</b> may use monochrome or shades of gray. The latter is anti-aliased. When displaying a text, typically an operating system properly represents the [...] "shades of gray" [...] as intermediate colors between {{the color of}} the font and that of the background. However, if the text is represented as an image with transparent background, [...] "shades of gray" [...] require an image format allowing partial transparency.|$|R
50|$|Computer fonts use various {{techniques}} to display characters or glyphs. A bitmap font contains {{a grid of}} dots known as pixels forming an image of each glyph in each face and size. Outline fonts (also known as <b>vector</b> <b>fonts)</b> use drawing instructions or mathematical formulæ to describe each glyph. Stroke fonts use a series of specified lines (for the glyph's border) and additional information to define the profile, or {{size and shape of}} the line in a specific face and size, which together describe the appearance of the glyph.|$|R
50|$|When {{an object}} {{with a greater}} {{resolution}} (possibly unlimited resolution) than the pixel resolution, such as geometric objects, <b>vector</b> graphics, <b>vector</b> <b>fonts,</b> or 3D graphics, the imperfections due {{to the loss of}} information are known as aliasing. One of the most common visual aliases is smooth objects, such as a line, having a jagged appearance, due to pixels being large enough that the brain cannot easily consolidate the edge into a smooth one. The sub-pixel processes of countering these effects, such as transparent rendering of pixels only partially covered, or sub-pixel rendering, are known as anti-aliasing.|$|R
50|$|Seed7 {{has many}} libraries, {{covering}} areas including containers, numeric functions, lexical analysis, file manipulation, networking (sockets, Transport Layer Security (TLS/SSL), Hypertext Transfer Protocol (HTTP), HTTP Secure (HTTPS), File Transfer Protocol (FTP), Simple Mail Transfer Protocol (SMTP), etc.), graphics, pixmap and <b>vector</b> <b>fonts,</b> database access (MySQL-MariaDB, SQLite, PostgreSQL, Oracle, Open Database Connectivity (ODBC)), Common Gateway Interface (CGI) support, data compression, character encoding, time and date handling, XML processing, message digests and more. These libraries {{reduce the need}} to use operating system features and third-party libraries directly. Seed7 libraries contain abstraction layers for hardware, operating system and third-party libraries, e.g. graphic and database libraries. In other words, no changes are needed to move Seed7 programs between different processors or operating systems.|$|R
5000|$|The Borland Graphics Interface, {{also known}} as BGI, is a {{graphics}} library bundled with several Borland compilers for the DOS operating systems since 1987. BGI was also used to provide graphics for many other Borland products including the Quattro spreadsheet. The library loaded graphic drivers (...) and <b>vector</b> <b>fonts</b> (...) from disk {{in order to provide}} device independent graphics support. It was possible for the programmer to embed the graphic driver into the executable file by linking the graphic driver as object code {{with the aid of a}} utility provided by the compiler (...) [...] There were graphic drivers for common graphic adapters and printers of that time, such as CGA, EGA and VGA. There also were BGI drivers for some kinds of plotters.|$|R
40|$|The use {{of digital}} data {{has become more}} and more commercialized. This is {{especially}} true for digital images, where proofs of origin and of content integrity are an important issue. This paper describes a problem related to `proof of origin' and proposes a possible solution to it. After a discussion of the solution, possible extensions and related areas of work are addressed. 1 The Problem Until now, digital data which was disseminated had no `unique' features. Everybody received an identical copy of the data. Thus, if one of the copies was illegally distributed, it was impossible to determine the initiator of the unauthorized distribution. Typical effects are software piracy, the unauthorized distribution of <b>vector</b> <b>fonts</b> for printers and the distribution of certain digital images, such as art collections and satellite data. The same holds true for the distribution of confidential texts or images. All possible kinds of digital data, such as computer software, fonts, texts, images [...] ...|$|R
5000|$|Direct2D and DirectWrite, new {{hardware-accelerated}} <b>vector</b> {{graphics and}} <b>font</b> rendering APIs built {{on top of}} Direct3D 10 that are intended to replace GDI/GDI+ for screen-oriented native-code graphics and text drawing. They can be used from managed applications with the Windows API Code Pack ...|$|R
40|$|The paper {{presents}} fonts for Indic {{languages in}} the Type 1 format converted from METAFONT sources with the TEXtrace program, developed and presented by Péter Szabó in 2001. TEX supports major Indic scripts and the TEX/L ATEX packages together with public font METAFONT sources {{are available in}} the TEX archives (CTAN) in the tex-archive/language/. The fonts in the pfb format, despite their limited quality of approximation and relatively large font file size, may be used as an alternative to corresponding bitmap fonts (represented by pk files), permitting creation of documents in PDF containing only <b>vector</b> outline <b>fonts,</b> and eliminating the use of bitmap fonts...|$|R
5000|$|The PDF/A {{standard}} {{does not}} define an archiving strategy or {{the goals of}} an archiving system. It identifies a [...] "profile" [...] for electronic documents that ensures the documents can be reproduced {{exactly the same way}} using various software in years to come. A key element to this reproducibility is the requirement for PDF/A documents to be 100% self-contained. All of the information necessary for displaying the document in the same manner is embedded in the file. This includes, but is not limited to, all content (text, raster images and <b>vector</b> graphics), <b>fonts,</b> and color information. A PDF/A document is not permitted to be reliant on information from external sources (e.g. font programs and data streams), but may include annotations (e.g. hypertext links) that link to external documents.|$|R
5000|$|The font {{included}} {{as one of}} the bonus features on the CD single and the enhanced CD version of Sound Museum, and can be seen on the single cover. It was designed by Tei's long-time collaborator designing team, Tycoon Graphics for Graphickers. The font was available for download on Tei's and Minogue's official website. In 2015, American artist Cory Arcangel used the font for a merchandising sweatshirt of the group Wet. Claimed he has been [...] "crazy" [...] for the font since it came out. [...] "It's a sick classic <b>vector</b> techno <b>font,</b> and super rare these days," [...] he told The Fader. He then used it a few times for artworks, including some drawings at his 2011 exhibition at Whitney Museum of American Art. [...] "I've always wanted to use it to make a shirt for a pop group... one pop group used to advertise the next." ...|$|R
5000|$|... a21 {{was formed}} as in {{investment}} company in 2000 and acquired the stock photography agency SuperStock in 2004. They moved into SuperStock's headquarters in Jacksonville, FL and used SuperStock {{as a vehicle}} for further expansion. In 2005 they acquired Ingram Publishing Ltd., a UK-based provider of subscription and Royalty-Free images as well as <b>vector</b> graphics and <b>fonts,</b> vehicle outline templates, and print price guides. The following year they acquired ArtSelect, an Iowa-based provider of online technology and fulfillment infrastructure for retailers in the custom framed Art and Wall Décor market. In late 2007 they announced plans to launch a new Royalty-Free only brand named MediaMagnet; however the brand was not successful. MediaMagnet images are now only available for sale through SuperStock.|$|R
40|$|Although massless Dirac fermions in {{graphene}} {{constitute a}} centrosymmetric medium for in-plane excitations, their second-order nonlinear optical response is nonzero if {{the effects of}} spatial dispersion are taken into account. Here we present a rigorous quantum-mechanical theory of the second-order nonlinear response of graphene beyond the electric dipole approximation, which includes both intraband and interband transitions. The resulting nonlinear susceptibility tensor satisfies all symmetry and permutation properties, and {{can be applied to}} all three-wave mixing processes. We obtain useful analytic expressions in the limit of a degenerate electron distribution, which reveal quite strong second-order nonlinearity at long wavelengths, Fermi-edge resonances, and unusual polarization properties. Comment: The new version makes the bold <b>font</b> <b>vector</b> notation uniform throughout the paper and corrects a misprint in Eq. (34) : replaces v_F^ 2 with v_F^ 3 in the common facto...|$|R
40|$|This summer I {{am working}} in the Educational Programs Office. My task is to convert the Aeronautics Interactive Workstation from a Macintosh (Mac) {{platform}} to a Personal Computer (PC) platform. The Aeronautics Interactive Workstation is a workstation in the Aerospace Educational Laboratory (AEL), {{which is one of}} the three components of the Science, Engineering, Mathematics, and Aerospace Academy (SEMAA). The AEL is a state-of-the-art, electronically enhanced, computerized classroom that puts cutting-edge technology at the fingertips of participating students. It provides a unique learning experience regarding aerospace technology that features activities equipped with aerospace hardware and software that model real-world challenges. The Aeronautics Interactive Workstation, in particular, offers a variety of activities pertaining to the history of aeronautics. When the Aeronautics Interactive Workstation was first implemented into the AEL it was designed with Macromedia Director 4 for a Mac. Today it is being converted to Macromedia DirectorMX 2004 for a PC. Macromedia Director is the proven multimedia tool for building rich content and applications for CDs, DVDs, kiosks, and the Internet. It handles the widest variety of media and offers powerful features for building rich content that delivers red results, integrating interactive audio, video, bitmaps, <b>vectors,</b> text, <b>fonts,</b> and more. Macromedia Director currently offers two programmingkripting languages: Lingo, which is Director's own programmingkripting language and JavaScript. In the workstation, Lingo is used in the programming/scripting since it was the only language in use when the workstation was created. Since the workstation was created with an older version of Macromedia Director it hosted significantly different programming/scripting protocols. In order to successfully accomplish my task, the final product required correction of Xtra and programming/scripting errors. I also had to convert the Mac platform file extensions into compatible file extensions for a PC...|$|R
5000|$|Thus, for example, a 10-point font on a Macintosh (at 72 PPI) was {{represented}} with 10 pixels (i.e., 10 PPEm), whereas a 10-point font on a Windows platform (at 96 PPI) {{at the same}} zoom level is represented with 13 pixels (i.e., Microsoft rounded 13.3333 to 13 pixels, or 13 PPEm) - and, on a typical consumer grade monitor, would have physically appeared around 15/72 to 16/72 of an inch high instead of 10/72. Likewise, a 12-point font {{was represented}} with 12 pixels on a Macintosh, and 16 pixels (or a physical display height of maybe 19/72 of an inch) on a Windows platform at the same zoom, and so on. The negative consequence of this standard is that with 96 PPI displays, {{there is no longer}} a 1-to-1 relationship between the font size in pixels and the printout size in points. This difference is accentuated on more recent displays that feature higher pixel densities. This has been less of a problem with the advent of <b>vector</b> graphics and <b>fonts</b> being used in place of bitmap graphics and fonts. Moreover, many Windows software programs have been written since the 1980s which assume that the screen provides 96 PPI. Accordingly, these programs do not display properly at common alternative resolutions such as 72 PPI or 120 PPI. The solution has been to introduce two concepts: ...|$|R

