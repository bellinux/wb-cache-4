0|12|Public
2500|$|Open ports present two <b>vulnerabilities</b> {{of which}} <b>administrators</b> must be wary: ...|$|R
40|$|Contrary to end-users, {{security}} is a primary task for those charged with the security of system or network. Despite {{the importance of the}} task, little is known about how to effectively design interfaces for security management systems. Usability problems in these systems can lead to security <b>vulnerabilities</b> because <b>administrators</b> may miss an attack altogether or misdiagnose it. We examined four different design approaches in order to devise a preliminary set of design guidelines for security management systems. Categories and Subject Descriptor...|$|R
50|$|Hackers placed Download.ject on {{financial}} and corporate websites running IIS 5.0 on Windows 2000, breaking in using a known vulnerability. (A patch existed for the <b>vulnerability,</b> but many <b>administrators</b> had not applied it.) The attack was first noticed June 23, although some researchers {{think it may}} have been in place as early as June 20.|$|R
40|$|In an {{environment}} where commercial software is continually patched to correct security flaws, penetration testing can provide organisations with a realistic assessment of their security posture. Penetration testing uses the same principles as criminal hackers to penetrate corporate networks and thereby verify the presence of software <b>vulnerabilities.</b> Network <b>administrators</b> can use {{the results of a}} penetration test to correct flaws and improve overall security. The use of hacking techniques, however, raises several ethical questions that centre on the integrity of the tester to maintain professional distance and uphold the profession. This paper discusses the ethics of penetration testing and presents our conceptual model and revised taxonomy. <br /...|$|R
40|$|The {{concentration}} of government buildings within urban environments {{has become a}} source of serious security <b>vulnerability.</b> <b>Administrators</b> and security experts face a variety of evolving threats that are hard to anticipate. To secure a government building against multiple threats while maintaining a minimal level of transparency and accessibility requires an integral security approach. It demands interdisciplinary collaboration between different experts from different domains. Currently, there is no efficient method or tool that allows the experts of different stripes to efficiently design, evaluate and implement appropriate security concepts. Existing ones do not allow for the effective creation, analysis, assessment, and sharing of security concepts that will help government administrators provide a secure environment for personnel and citizens. The VASCO project addresses two important objectives. First, it will design, implement and evaluate an innovative IT tool that will enable security professionals and administrators to jointly formulate, test, and adjust security concepts and measures in a virtual environment. This provides a cost-effective and risk- free environment in which to devise an evidence-based, all-risk approach for the protection of government buildings. Second, it will produce a knowledge and best practice database, which captures dynamic and visual reference scenarios created with the VASCO system. To accomplish these aims, the project will adopt an iterative methodology that enables the constant involvement of its world-class security and crisis management experts, assisted by a solid and open user group, during the whole project. It makes use of the latest advances in interactive visualisation, simulation, crisis management, and artificial intelligence to provide end-users with an unprecedented tool that dramatically improves {{the way in which they}} collaborate to secure critical government assets both at home and abroad. CRS 4, together with ISTI-CNR, will concentrate on techniques for acquisition and exploration of indoor environments. In corso€ 331. 86...|$|R
40|$|In recent decays, {{there has}} been an {{extensive}} improvement in technology and knowledge; hence, human societies have started to fortify their urban environment against the natural disasters in order to diminish the context of <b>vulnerability.</b> Local <b>administrators</b> as well as government officials are thinking about new options for disaster management programs within their territories. Planning to set up local disaster management facilities and stock pre-positioning of relief items can keep an urban area prepared for a natural disaster. In this paper, based on a real-world case study for a municipal district in Tehran, a multi-objective mathematical model is developed for the location-distribution problem. The proposed model considers the role of demand in an urban area, which might be affected by neighbor wards. Integrating decision-making process for a disaster helps to improve a better relief operation during response phase of disaster management cycle. In the proposed approach, a proactive damage estimation method is used to estimate demands for the district based on worst-case scenario of earthquake in Tehran. Since such model is designed for an entire urban district, it {{is considered to be a}} large-scale mixed integer problem and hence, a genetic algorithm is developed to solve the model...|$|R
40|$|Understanding the {{severity}} of vulnerabilities within cloud services is particularly important for today service administrators. Although many systems, e. g., CVSS, have been built to evaluate and score {{the severity}} of <b>vulnerabilities</b> for <b>administrators,</b> the scoring schemes employed by these systems fail {{to take into account}} the contextual information of specific services having these vulnerabilities, such as what roles they play in a particular service. Such a deficiency makes resulting scores unhelpful. This paper presents a practical framework, NCVS, that offers automatic and contextual scoring mechanism to evaluate {{the severity of}} vulnerabilities for a particular service. Specifically, for a given service S, NCVS first automatically collects S contextual information including topology, configurations, vulnerabilities and their dependencies. Then, NCVS uses the collected information to build a contextual dependency graph, named CDG, to model S context. Finally, NCVS scores and ranks all the vulnerabilities in S by analyzing S context, such as what roles the vulnerabilities play in S, and how critical they affect the functionality of S. NCVS is novel and useful, because 1) context-based vulnerability scoring results are highly relevant and meaningful for administrators to understand each vulnerability importance specific to the target service; and 2) the workflow of NCVS does not need instrumentation or modifications to any source code. Our experimental results demonstrate that NCVS can obtain more relevant vulnerability scoring results than comparable system, such as CVSS...|$|R
40|$|Security {{is often}} viewed as an arms race between attackers, who try to exploit <b>vulnerabilities</b> and {{security}} <b>administrators,</b> who try to protect system against these attacks. In this regard, analysis of emerging security trends {{can be helpful in}} planning proper countermeasures to ensure security. Several studies and surveys exist that provide statistical information on security trends and issues. By comparative and aggregate analysis of these surveys, good understanding of the current information security trends and issues can be gained. So, {{in order to get a}} holistic picture of current state of information security landscape, this paper made an analysis of the seven well known information security surveys conducted in year 2011. Results are generated by aggregating and analyzing recent survey reports to present a complete and comprehensive picture of current information security landscape. Furthermore, this paper also highlights key findings derived from this analysis...|$|R
40|$|Most systems contain {{software}} with yet-to-be-discovered security vulnerabilities. When a <b>vulnerability</b> is disclosed, <b>administrators</b> {{face the}} grim reality {{that they have}} been running software which was open to attack. Sites that value availability may be forced to continue running this vulnerable software until the accompanying patch has been tested. Our goal is to improve security by detecting intrusions that occurred before the vulnerability was disclosed and by detecting and responding to intrusions that are attempted after the vulnerability is disclosed. We detect when a vulnerability is triggered by executing vulnerability-specific predicates as the system runs or replays. This paper describes the design, implementation and evaluation of a system that supports the construction and execution of these vulnerability-specific predicates. Our system, called Intro-Virt, uses virtual-machine introspection to monitor the execution of application and operating system software. Intro-Virt executes predicates over past execution periods by combining virtual-machine introspection with virtual-machine replay. IntroVirt eases the construction of powerful predicates by allowing predicates to run existing target code {{in the context of the}} target system, and it uses checkpoints so that predicates can execute target code without perturbing the state of the target system. IntroVirt allows predicates to refresh themselves automatically so they work in the presence of preemptions. We show that vulnerabilityspecific predicates can be written easily for a wide variety of real vulnerabilities, can detect and respond to intrusions over both the past and present time intervals, and add little overhead for most vulnerabilities...|$|R
40|$|Abstract — Computer {{networks}} {{have become an}} essential part of almost every organization. These organizations {{spend a lot of time}} and money to secure their networks from intruders and attackers. As the need of computers increased, need for network security increased correspondingly. Attackers are always trying to find weakness in network which can be used to break into the network known as <b>vulnerability.</b> So network <b>administrator</b> needs to patch vulnerabilities to thwart attacker from achieving their goal. As new vulnerability are discovered daily, it is very hard to patch every vulnerability in network but if riskier vulnerabilities get patched, risk level can be reduced significantly. Vulnerability score gives insight into the behavior of vulnerability. These scores make security analyst's work easier to some extent. But these scores do not include collective effect of vulnerabilities. A number of vulnerability scanners are available, which provide complete vulnerability details about host. These vulnerability details give analyst a good idea about to which extent the network security can be compromised, but does not give complete view of network vulnerability. Attack graph provides solution to this problem. Attack graph is set of nodes and edges where node represents attacker's state and edge represent possible transition among attacker's state. This technique gives path that can be followed by attacker to gain network's resources. In the network attack graph depict how vulnerability affect network in conjunction with other vulnerabilities. Some vulnerability may not be riskier alone but when chained with some other, it can compromise the security of network. These attack graphs are important security tools to find out such vulnerabilities also. In this paper, we have developed an technique to provide scores to each path in attack graph so as to analyze, which path is to be patched first to remove the risk of attack. These scores are based on conditional probability method...|$|R
40|$|Vulnerability Scanners Computer {{networks}} {{are used by}} organisations and companies as a carrier of communication and services. Disruption of the network service can severally harm the organisation. A vulnerability scanner can find weaknesses in a computer network before a potential attacker does. It scans the network for vulnerabilities by testing weaknesses and by gathering information about different entities active in the network. From the testing and information gathering it makes conclusions and reports the vulnerabilities it found in the network. If the scanner misses some <b>vulnerabilities</b> and the <b>administrator</b> of the network makes {{the conclusion that the}} network is secure enough the impact can be severe on the organisation or company. This thesis is trying to find out to what extent a vulnerability scanner can be trusted. The thesis starts with defining the theoretical requirements to a secure network. When the foundation is set the thesis moves on and explains common network vulnerabilities that are threatening computer networks. Network security testing is an activity that consists of several techniques and tools to simulate possible attacks. The vulnerability scanner is one tool that can be used during such a test. Four vulnerability scanners have been run against a laboratory network. On the same network a penetration test has been conducted to know what security holes {{that can be used to}} gain access to the system. The comparison between the findings of the vulnerability scanners and the vulnerabilities found and explored in the penetration test indicates to what extent the vulnerability scanners can be trusted. The results show that the scanners miss out on severe vulnerabilities or give them a low priority, even though these vulnerabilities have been used to gain access to an entity in the network. Vulnerability scanners work with the best intentions but are far too insecure to be trusted as a stand alone security tool. i...|$|R

