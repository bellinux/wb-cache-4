35|59|Public
50|$|When B {{receives}} {{a message that}} is not corrupted and has sequence number 0, it starts sending ACK0 and keeps doing so until it {{receives a}} <b>valid</b> <b>message</b> with number 1. Then it starts sending ACK1, etc.|$|E
5000|$|Error {{correction}} {{is implemented}} by using more digits (bits {{in case of}} a binary channel) than the number strictly necessary for the samples, and having the receiver compute the most likely <b>valid</b> <b>message</b> that could have resulted in the received one.|$|E
5000|$|A well-formed VOEvent message must {{validate}} {{against the}} [...] VOEvent schema (.xsd). A <b>valid</b> <b>message</b> may omit {{most of the}} informational tags listed above, but since the creation of VOEvent messages is done automatically, most opt to transmit the fullest content available.|$|E
5000|$|Traffic-flow {{security}} {{is the use}} of measures that conceal the presence and properties of <b>valid</b> <b>messages</b> on a network to prevent traffic analysis. This can be done by operational procedures or by the protection resulting from features inherent in some cryptographic equipment. Techniques used include: ...|$|R
50|$|A {{black hole}} {{e-mail address is}} an e-mail address which is <b>valid</b> (<b>messages</b> sent to it will not {{generate}} errors), but to which all messages sent are automatically deleted, and never stored or seen by humans. These addresses are often used as return addresses for automated e-mails.|$|R
5000|$|Machines are time-sensitive. Thus, all Day Return buttons issue a Cheap Day Return (reduced-fare {{off-peak}} ticket) at {{the appropriate}} times of day; and tickets with Railcard discounts do not become available until the time from which the Railcard is <b>valid.</b> <b>Messages</b> concerning the validity or otherwise of tickets appear in a green LCD panel below the [...] "Amount to pay" [...] display.|$|R
50|$|Another way to {{increase}} the unicity distance is {{to increase}} the number of possible valid sequences in the files as it is read. Since if for at least the first several blocks any bit pattern can effectively be part of a <b>valid</b> <b>message</b> then the unicity distance has not been reached. This is possible on long files when certain bijective string sorting permutations are used, such as the many variants of bijective Burrows-Wheeler transforms.|$|E
50|$|During some {{of these}} steps, the {{decoding}} algorithm may determine that the received vector has too many errors and cannot be corrected. For example, if an appropriate value of t is not found, then the correction would fail. In a truncated (not primitive) code, an error location {{may be out of}} range. If the received vector has more errors than the code can correct, the decoder may unknowingly produce an apparently <b>valid</b> <b>message</b> that is not the one that was sent.|$|E
50|$|The coding {{used for}} US {{military}} ELF transmissions employed a Reed-Solomon {{error correction code}} using 64 symbols, each represented by a very long pseudo-random sequence. The entire transmission was then encrypted. The advantages of such a technique are that by correlating multiple transmissions, a message could be completed even with very low signal-to-noise ratios, and because only a very few pseudo-random sequences represented actual message characters, {{there was a very}} high probability that if a message was successfully received, it was a <b>valid</b> <b>message</b> (anti-spoofing).|$|E
40|$|Mobile Ad hoc NETworks (MANETs), {{characterized}} by the free move of mobile nodes are more vulnerable to the trivial Denial-of-Service (DoS) attacks such as replay attacks. A replay attacker performs this attack at anytime and anywhere in the network by interception and retransmission of the <b>valid</b> signed <b>messages.</b> Consequently, the MANET performance is severally degraded by the overhead produced by the redundant <b>valid</b> <b>messages.</b> In this paper, we propose an enhancement of timestamp discrepancy used to validate a signed message and consequently limiting {{the impact of a}} replay attack. Our proposed timestamp concept estimates approximately the time where the message is received and validated by the received node. This estimation is based on the existing parameters defined at the 802. 11 MAC layer...|$|R
30|$|In all our {{experiment}} runs {{we did not}} {{encounter a}} single experiment run where the router lost <b>valid</b> CAN <b>messages.</b>|$|R
5000|$|Targeted attacks sent via SMTP. These social-engineered threats often arrive {{disguised}} as a <b>valid</b> e-mail <b>messages</b> and include specific company information and sender addresses. The malicious e-mails use social engineering to manipulate users to open the attachment and execute the payload.|$|R
50|$|This is {{a popular}} way of {{graphically}} representing an (n, k) LDPC code. The bits of a <b>valid</b> <b>message,</b> when placed on the T's {{at the top of}} the graph, satisfy the graphical constraints. Specifically, all lines connecting to a variable node (box with an '=' sign) have the same value, and all values connecting to a factor node (box with a '+' sign) must sum, modulo two, to zero (in other words, they must sum to an even number; or there must be an even number of odd values).|$|E
5000|$|The film {{received}} mostly positive {{reviews from}} critics. Malathi Rangarajan from The Hindu praised as [...] "Inundated with talent from every quarter" [...] and said: [...] "has to be welcomed, {{with open arms}} because decent, meaningful cinema deserves encouragement". Rediff.com particularly heaped praises at Cheran for his screenplay and said [...] "With directors of the calibre of Cheran in its rank, Tamil cinema would not be discredited or degenerated".Thiraipadam.com lauded Cheran saying [...] "Cheran {{is one of the}} few filmmakers who has not succumbed to the commercial bug and continues to make movies that satisfy his own creative spirit and also convey a <b>valid</b> <b>message</b> to society." ...|$|E
5000|$|In {{order for}} an {{attacker}} {{to make a}} client believe it received a <b>valid</b> <b>message</b> from a certain CGA that isn't owned by the attacker, the attacker must find a hash collision for the relevant bits of [...] and [...] by performing a brute-force attack. If the attacker finds a set of CGA Parameters (including a public key for which the attacker knows the private key) {{that can be used}} to generate the same CGA as the target CGA, then the attacker can impersonate the host who actually owns the CGA without being detected (except perhaps when the client has contacted the host before and notices that the public key has changed but the CGA has not).|$|E
30|$|At startup, IOMMUs are deactivated. During {{the boot}} time configuration, the {{firmware}} scans the PCI configuration space {{to discover and}} initialize vital devices, like the main video controller, loading and executing its embedded firmware. Read and write accesses to the configuration space generate PCI Express configuration messages that are sent to the targeted device. Devices know their PCI ids after the first scan, as explained in the “Communications” section. Therefore, the peripherals are able to generate <b>valid</b> <b>messages</b> at the early firmware execution stage, long before {{the execution of the}} bootloader and then of the operating system kernel. At the end of the execution of the firmware, the control is given to the bootloader and to the kernel.|$|R
40|$|In {{this article}} we discuss the {{security}} limitations of a recently proposed authorized anonymous ID-based scheme for mobile communications due to He et al. We present three example attacks an attacker could mount on the scheme, point out the weaknesses we exploited, and suggest how to counter them. Our attacks are variants of the replay attack to which any security scheme should be resistant. Such attacks are easy to mount since they simply require replaying previous <b>valid</b> <b>messages,</b> and are often passive attacks and thus hard to detect. Therefore, our results are devastating since they show that the scheme has failed to achieve its main objective of establishing mutual authentication between legitimate parties...|$|R
3000|$|... {{wants to}} {{impersonate}} U, he must forge a <b>valid</b> login <b>message</b> { V^*,G_ 1 ^*,N_ 1 } where V^* = a^* P, I^* = a^* Q_s, K^* = H(I^* ||N_ 1 [...]), and G_ 1 ^* = E_K^* (ID^* ||N_ 1 ||γ ||N_c [...]), however, U [...]...|$|R
5000|$|The {{film was}} given wide release in January 1948; a review in Daily Variety {{characterized}} it as [...] "a documentary of fabulous proportions ... {{one of the}} most interesting screen presentations of the year". Bosley Crowther, writing in The New York Times, was not complimentary; he wrote that the film [...] "makes the general point that too much control by a few people is a dangerous - a 'racketeering' - thing and that another world war can be prevented only by the development of responsible, representative governments throughout the world. That is a <b>valid</b> <b>message,</b> but the weakness with which it is put forth in a melange of faked and factual pictures and in a ponderous narration does not render it very forceful." ...|$|E
5000|$|In 1999, hackers {{revealed}} a security flaw in Hotmail that permitted anybody to log into any Hotmail account using the password 'eh'. At {{the time it}} was called [...] "the most widespread security incident {{in the history of the}} Web". In 2001, the Hotmail service was compromised again by computer hackers who discovered that anyone could log into their Hotmail account and then pull messages from any other Hotmail account by crafting a URL with the second account's username and a <b>valid</b> <b>message</b> number. It was such a simple attack that by the time the patch was made, dozens of newspapers and hundreds of web sites published exact descriptions allowing tens of thousands of hackers to run rampant across Hotmail. The exploitable vulnerability exposed millions of accounts to tampering between August 7, 2001 and August 31, 2001.|$|E
5000|$|The {{work was}} {{performed}} at many other Thingstätten and in theatres. It {{was the high}} point of the Thingspiel movement. In his overview of National Socialist literature and film, Karl-Heinz Schoeps calls it [...] "the high point, {{and at the same time}} the endpoint". Glen W. Gadberry, evaluating the work in 1977, urged that it be re-examined because of its <b>valid</b> <b>message</b> that we will all be judged - as the Nazis were at the Nuremberg trials - and quotes a review of the première which makes that point: the Frankenburger Würfelspiel [...] "gives us all, we people who today sit in judgement of the past, the warning that at some point a later time will judge our deeds". Strobl, however, while recognising Möller's [...] "cultural ambitions", sees this as [...] "ill-disguised propaganda" [...] against Austria, with the role of Bavaria downplayed and the behind-the-scenes influence of the Pope standing for Mussolini's siding with Dollfuss against Nazi influence in Austria. He points out that the subsequent performances included explicitly propagandistic uses; for example in 1937, the mayor of Passau ordered a performance [...] "as a treat for our ethnic kin beyond the border Austria".|$|E
40|$|Motivated by {{the need}} for readily {{available}} data for testing an open-source health information exchange platform, we developed and evaluated two methods for generating synthetic messages. The methods used HL 7 version 2 messages obtained from the Indiana Network for Patient Care. Data from both methods were analyzed to assess how effectively the output reflected original 'real-world' data. The Markov Chain method (MCM) used an algorithm based on transitional probability matrix while the Music Box model (MBM) randomly selected messages of particular trigger type from the original data to generate new messages. The MBM was faster, generated shorter messages and exhibited less variation in message length. The MCM required more computational power, generated longer messages with more message length variability. Both methods exhibited adequate coverage, producing {{a high proportion of}} messages consistent with original messages. Both methods yielded similar rates of <b>valid</b> <b>messages...</b>|$|R
30|$|Advertisement request (Ad request) is {{the form}} of HTTP traffic that is {{generated}} from impressions or clicks. Whenever a <b>valid</b> request <b>message</b> is generated (i.e., advertisement is shown to a user or clicked by a user), advertisers {{have to pay the}} ad network and a percentage of amount is also paid to the publisher.|$|R
40|$|Publish/subscribe (pub/sub) {{systems are}} very {{suitable}} for the dissemination of dynamic information over the Internet. As dynamic information is usually characterized by a short lifetime, both publishers and subscribers may specify the delay requirement on message delivery. Although existing pub/sub systems can easily be extended so that publishers and subscribers can specify their delay requirements, it remains a challenging problem to improve the efficiency of pub/sub systems so that as many messages can be successfully delivered as possible, while the network traffic does not increase significantly. In this paper, we propose an efficient approach for pub/sub systems to achieve bounded delay on message delivery. Three message scheduling strategies are proposed for the system {{to make use of}} available bandwidth efficiently. Simulation results show that our strategies enable subscribers to receive significantly more <b>valid</b> <b>messages</b> than traditional strategies, while the network traffic just increases slightly. 1...|$|R
50|$|A proof-of-work system (or protocol, or function) is an {{economic}} measure to deter denial-of-service attacks and other service abuses such as spam on a network by requiring some work from the service requester, usually meaning processing time by a computer. A key feature of these schemes is their asymmetry: the work must be moderately hard (but feasible) on the requester side but easy to check for the service provider. One popular system - used in Bitcoin mining and Hashcash - uses partial hash inversions to prove that work was done, to unlock a mining reward in Bitcoin and as a good-will token to send an e-mail in Hashcash. The sender is required to find a message whose hash value begins {{with a number of}} zero bits. The average work that sender needs to perform in order to find a <b>valid</b> <b>message</b> is exponential in the number of zero bits required in the hash value, while the recipient can verify the validity of the message by executing a single hash function. For instance, in Hashcash, a sender is asked to generate a header whose 160 bit SHA-1 hash value has the first 20 bits as zeros. The sender will on average have to try 219 times to find a valid header.|$|E
40|$|Blindness and unforgeability are two {{essential}} {{security requirements}} of a secure blind signature scheme. Blindness means that after interacting with various users, the signer can {{never be able to}} link a <b>valid</b> <b>message</b> pair. Blindness is meaningless if after interacting with various users, the signer is able to link a <b>valid</b> <b>message</b> signature pair. This security vulnerability is known as linkability attack. Recently, Verma proposed two blind signature schemes over braid groups. Verma claimed that the proposed schemes are secure against all possible security vulnerabilities and also satisfy all essential securities properties. This paper reviews Verma’s proposed blind signature schemes and found that these scheme do not withstand against the linkability vulnerability. 1...|$|E
40|$|Distributed {{enterprise}} systems, {{which are}} comprised of multiple software systems, typically communicate using application-layer protocols. Being able to independently test each system’s conformance to the protocol specification {{is important to}} ensure the overall robustness and reliability of the distributed system. While there exists many modelling languages for network layer protocols, very few tools exist for modelling <b>valid</b> <b>message</b> sequences specifically for the application layer. In order to address this issue, we propose a concise formal modelling syntax for application-layer protocols, with clearly defined semantics. A key feature of our protocol model is dynamic extension, which {{is necessary for the}} concise modelling of subsidiary concurrent operations. We demonstrate the power of our modelling language by compactly specifying the <b>valid</b> <b>message</b> sequences of two common application-layer protocols. Trace conformance is defined for the model along with a prototype implementation demonstrating the practical utility of our modelling framework...|$|E
5000|$|Spam {{filtering}} integrates with Microsoft Outlook, Outlook Express, Windows Mail, and The Bat!. E-mail {{content is}} analysed and scored, and e-mail with scores above two specified thresholds are either marked as [...] "!!spam" [...] or [...] "??probably spam". The Mail Dispatcher feature shows subject and sender information for messages, and {{allows users to}} avoid downloading blatant spam by selecting which messages to download. The filter self-trains by analyzing incoming and outgoing e-mail not marked as spam, or by analyzing folders only containing spam or valid e-mail. Senders of verified valid e-mail are whitelisted. E-mail can also be whitelisted or blacklisted based on phrases present in the text. E-mail with non-ASCII characters or invisible text can also be blocked. However, version 7.0 had a relatively poor showing, misidentifying 30 percent of <b>valid</b> <b>messages</b> in PC Magazine testing. 30 percent of spam also made to the inbox.|$|R
30|$|Without the {{knowledge}} of S’s secret key x, the attacker can neither generate the <b>valid</b> challenge <b>message</b> CHALLENGE{realm,Auth_s,H,t}, where Auth_s = h(DKD^"tSKH.) and K = uh(ID_ix.)D, nor compute the legal message RESPONSE{ID_i,realm,Auth_u}. Note that all messages are transmitted via a secure channel in registration phase, which {{are supposed to be}} free of corruption. So our scheme could withstand the impersonation attack.|$|R
50|$|Ensuring {{the message}} as {{sent by the}} {{application}} is immutable allows for end-to-end message signing and/or encryption and ensures that any integrity checks (e.g. hashes or digests) remain <b>valid.</b> The <b>message</b> can be annotated by intermediaries during transit, but any such annotations are kept distinct from the immutable bare message. Annotations may be added {{before or after the}} bare message.|$|R
30|$|Database {{checking}} model: To protect VANETs from false information, plausibility validation in {{network is}} proposed and consist of database rules and checking model. These rules depend on message type. A <b>valid</b> <b>message</b> will be succeeded in all verifications. In order to detect fake vehicle messages, {{the rule is}} vehicle location. It will be in range and plausible and time stamp will be checked, and also, velocity should be plausible [58].|$|E
30|$|In the {{proposed}} EABA scheme, the message signing and authentication {{are based on}} ECDSA [26], whose security depends on the difficulties of discrete logarithm problem. It has been proven that there does not exist polynomial adversary that can forge a <b>valid</b> <b>message</b> and convince receivers that a false message is valid [26]. Thus, false messages and tampered messages will be identified by receivers and not be accepted during authentication examining the validity and integrity of messages. Therefore, the message authenticity and integrity can be guaranteed in our proposed EABA scheme.|$|E
40|$|In this paper, we {{consider}} authentication codes where the adversary {{has access to}} a verification oracle. We formally study two attack games: offline attack and online attack. In an offline impersonation attack with verification query of order i, the adversary launches its attack through two stages. In the first stage - the query stage - the adversary can adaptively choose i distinct messages to query the verification oracle. The verification oracle will answer whether these queried messages are valid or invalid under the secret encoding rule agreed by the transmitter and the receiver. In the later stage - the spoofing stage - the adversary creates a fraudulent message which is different from all its queried messages and sends this message to the receiver. The adversary wins if the receiver accepts the fraudulent message as a <b>valid</b> <b>message.</b> In an online impersonation attack with verification query of order i, the adversary has i + 1 chances to query the verification oracle and wins {{as soon as one}} of the queries is a <b>valid</b> <b>message.</b> We make use of strategy trees, which allow optimal strategies in both attack games to be identified, to establish a number of relationships between the value of the two games. This allows us to formally prove a relationship between the value of the game when the adversary has i queries, and the one in which he does not have any. The relationship, though widely believed to be true, was only recently proved for computationally secure systems. Our result complements this latter work for the information theoretic setting...|$|E
40|$|Approved {{for public}} release; {{distribution}} is unlimitedINTEL'S MCS- 4 micro computer set {{was selected to}} implement a digital selective calling device {{for use by the}} mobile maritime service. The system will generate and receive a standardized calling message. Upon receipt of a <b>valid</b> calling <b>message,</b> intended for the user, the system will activate visual and audible alarms. [URL] United States Coast Guar...|$|R
2500|$|Machines are time-sensitive. [...] Thus, all Day Return buttons issue a Cheap Day Return (reduced-fare {{off-peak}} ticket) at {{the appropriate}} times of day; and tickets with Railcard discounts do not become available until the time from which the Railcard is <b>valid.</b> [...] <b>Messages</b> concerning the validity or otherwise of tickets appear in a green LCD panel below the [...] "Amount to pay" [...] display.|$|R
40|$|In a service-oriented architecture, systems {{communicate}} by exchanging messages. In this work, we propose two conversation specification language-independent models - the first based on first-order guarded automata {{and the latter}} based on attribute grammars - for describing valid client-server conversations. On {{the basis of the}} latter, we also propose a purely XML-based framework for a dynamic monitoring/validation of valid sequences of <b>valid</b> invocation <b>messages...</b>|$|R
