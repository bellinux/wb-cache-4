283|445|Public
25|$|The most {{defining}} {{property of}} modernity, according to Giddens, {{is that we}} are disembedded from time and space. In pre-modern societies, space was the area in which one moved, time was the experience one had while moving. In modern societies, however, the social space is no longer confined by the boundaries set by the space in which one moves. One can now imagine what other spaces look like, even if he has never been there. In this regard, Giddens talks about virtual space and <b>virtual</b> <b>time.</b> Another distinctive property of modernity lies in the field of knowledge.|$|E
25|$|In October 2014, Paramount {{partnered with}} Google to promote Interstellar across {{multiple}} platforms. The film's website was relaunched to be a digital hub hosted on a Google domain. The website collected feedback from film audiences, and {{linked to a}} mobile app. The app featured {{a game in which}} players could build solar system models and use a flight simulator for space travel. The Paramount-Google partnership also included a <b>virtual</b> <b>time</b> capsule compiled with user-generated content to be available in 2015. The initiative Google for Education will also use the film as a basis for promoting lesson plans for math and science in schools around the United States.|$|E
2500|$|A Purdue {{graduate}} student, Robert Brown, reviewing this article, {{recognized the}} parallel between cron and discrete event simulators, and created an {{implementation of the}} Franta–Maly event list manager (ELM) for experimentation. [...] Discrete event simulators run in <b>virtual</b> <b>time,</b> peeling events off the event queue {{as quickly as possible}} and advancing their notion of [...] "now" [...] to the scheduled time of the next event. Running the event simulator in [...] "real time" [...] instead of <b>virtual</b> <b>time</b> created a version of cron that spent most of its time sleeping, waiting for the scheduled time to execute the task {{at the head of the}} event list.|$|E
50|$|The <b>virtual</b> finish <b>time</b> for a newly queued packet {{is given}} by {{the sum of the}} <b>virtual</b> start <b>time</b> plus the packet's size. The <b>virtual</b> start <b>time</b> is the maximum between the {{previous}} <b>virtual</b> finish <b>time</b> of the same queue and the current instant.|$|R
50|$|With a <b>virtual</b> {{finishing}} <b>time</b> of all candidate packets (i.e., the packets at {{the head}} of all non-empty flow queues) computed, fair queuing compares the <b>virtual</b> finishing <b>time</b> and selects the minimum one. The packet with the minimum <b>virtual</b> finishing <b>time</b> is transmitted.|$|R
40|$|This paper {{presents}} a heavy traffic limit theorem for the <b>virtual</b> waiting <b>time</b> of a customer in multiphase queues. In this work, functional limit theorem is proved {{and values of}} important probability characteristics of the queueing system are investigated {{as well as the}} <b>virtual</b> waiting <b>time</b> of a customer. ...|$|R
2500|$|... where A is a {{constant}} of integration. [...] Interpreting the independent variable X above as a <b>virtual</b> <b>time</b> variable, this means f satisfies Newton's equation of motion in a cubic potential. [...] If parameters are adjusted so that the potential function V(f) has local maximum at f=0, there is a solution in which f(X) starts at this point at 'virtual time' ∞, eventually slides down to the local minimum, then back up the other side, reaching an equal height, then reverses direction, ending up at the local maximum again at time∞. [...] In other words, [...] f(X) approaches [...] 0 as X→±∞. [...] This is the characteristic shape of the solitary wave solution.|$|E
50|$|To reduce {{computational}} load, {{the concept}} of <b>virtual</b> <b>time</b> is introduced. Finish time for each packet is computed on this alternate monotonically increasing virtual timescale. While <b>virtual</b> <b>time</b> does not accurately model the time packets complete their transmissions, it does accurately model {{the order in which}} the transmissions must occur to meet the objectives of the full-featured model. Using <b>virtual</b> <b>time,</b> it is unnecessary to recompute the finish time for previously queued packets. Although the finish time, in absolute terms, for existing packets is potentially affected by new arrivals, finish time on the <b>virtual</b> <b>time</b> line is unchanged - the <b>virtual</b> <b>time</b> line warps with respect to real time to accommodate any new transmission.|$|E
5000|$|... (or find-min): - {{return the}} [...] (or [...] for a [...] ) value {{stored in the}} heap [...] at the current <b>virtual</b> <b>time</b> [...]|$|E
40|$|A general {{model for}} the single server semi-Markov queue is studied. Its {{solution}} is reduced to a matrix factorization problem. Given this factorization, results are obtained for the distributions of actual and <b>virtual</b> waiting <b>times,</b> queue lengths both at arrival epochs and in continuous time, the number of customers during a busy period, its length {{and the length of}} a busy cycle. Two examples are discussed for which explicit factorizations have been obtained. semi-Markov queue matrix factorization actual waiting <b>time</b> <b>virtual</b> waiting <b>time</b> queue length busy period busy cycle...|$|R
40|$|Discrete time {{queueing}} {{models have}} been shown previously to be of practical use for modelling the approximate time-dependent behaviour of queue length in systems of the form M(t) /G/c. In this paper we extend these models to include the time-dependent behaviour of <b>virtual</b> waiting <b>time.</b> Key components of this research are the derivation of exact (algorithmic) expressions for <b>virtual</b> waiting <b>time</b> behaviour. Statistical approximations for the distributional form of <b>virtual</b> waiting <b>times</b> are then developed and tested. These approximations reduce the computational effort involved {{in the evaluation of}} the exact expressions by a factor of over 1000 whilst still maintaining very high accuracy levels. The {{models have been}} implemented for use on a PC and are shown to be capable of modelling the time-dependent <b>virtual</b> waiting <b>time</b> behaviour of realistic queueing systems in just a few seconds. Results from the models are compared with results obtained by the Simple Stationary Approximation, the Pointwise Stationary Approximation and Modified Offered Load approximations. They clarify further some of {{the strengths and weaknesses of}} these approaches and demonstrate the potential of the Discrete Time Modelling approach...|$|R
40|$|Abstract. We present formal {{definitions}} of stabilization for the Timed I/O Automata (TIOA) framework, and of emulation for the <b>timed</b> <b>Virtual</b> Stationary Automata programming abstraction layer, {{which consists of}} mobile clients, <b>virtual</b> <b>timed</b> machines called <b>virtual</b> stationary automata (VSAs), and a local broadcast service connecting VSAs and mobile clients. We then describe {{what it means for}} mobile nodes with access to location and clock information to emulate the VSA layer in a self-stabilizing manner. We use these definitions to prove basic results about executions of self-stabilizing algorithms run on self-stabilizing emulations of a VSA layer, and apply these results to a simple geographic routing algorithm running on the VSA layer...|$|R
5000|$|Store a data {{structure}} {{on the system}} at the current time [...] This {{data structure}} allows queries on the system at the current <b>virtual</b> <b>time.</b>|$|E
5000|$|... "Real and <b>virtual</b> <b>time</b> in Bach's {{keyboard}} suites". In Ernest W.B Hess-Lüttich & Brigitte Schlieben-Lange (eds.) Signs & time/Zeit & Zeichen.Tübingen: Gunter Narr, 1998, pp. 13-24 ...|$|E
5000|$|... : - {{insert a}} key [...] into the kinetic queue {{at the current}} <b>virtual</b> <b>time,</b> whose value changes as a {{continuous}} function [...] of time [...]|$|E
40|$|Abstract: We use a {{mathematical}} model of an open queueing network in heavy traffic. The law of the iterated logarithm for the extreme <b>virtual</b> waiting <b>time</b> of a customer in heavy traffic in open queueing networks has been presented. Finally, we present an application of the theorem- a reliability model from computer network practice. Key–Words: mathematical models of technical systems, performance evaluation, reliability theory, queueing the-ory, open queueing network, heavy traffic, {{the law of the}} iterated logarithm, <b>virtual</b> waiting <b>time</b> of a customer, extreme value. ...|$|R
5000|$|The {{pseudo code}} can be {{obtained}} simply from the one of FQ by replacing the computation of the <b>virtual</b> departure <b>time</b> by [...] packet.virFinish= virStart + packet.size / Riwith [...]|$|R
40|$|Abstract — We {{define a}} {{programming}} abstraction for mobile networks called the Virtual Stationary Automata programming layer, consisting of real mobile clients, <b>virtual</b> <b>timed</b> I/O automata called virtual stationary automata (VSAs), and a communication service connecting VSAs and client nodes. The VSAs are located at prespecified regions that tile the plane, defining a static virtual infrastructure. We present a self-stabilizing algorithm to emulate a VSA using the real mobile nodes {{that are currently}} residing in the VSA’s region. We also describe several examples of applications whose implementations benefit from the simplicity obtained through use of the VSA abstraction. I...|$|R
5000|$|Every process {{maintains}} a queue of pending requests for entering critical section in order. The queues are ordered by <b>virtual</b> <b>time</b> stamps derived from Lamport timestamps.|$|E
5000|$|A Purdue {{graduate}} student, Robert Brown, reviewing this article, {{recognized the}} parallel between cron and discrete event simulators, and created an {{implementation of the}} Franta-Maly event list manager (ELM) for experimentation. Discrete event simulators run in <b>virtual</b> <b>time,</b> peeling events off the event queue {{as quickly as possible}} and advancing their notion of [...] "now" [...] to the scheduled time of the next event. Running the event simulator in [...] "real time" [...] instead of <b>virtual</b> <b>time</b> created a version of cron that spent most of its time sleeping, waiting for the scheduled time to execute the task {{at the head of the}} event list.|$|E
5000|$|... delete a key [...] at {{the current}} <b>virtual</b> <b>time</b> [...] The {{deletion}} is done as in a normal heap in [...] time, but [...] certificates might {{need to be changed}} as a result, so the total time for rescheduling certificate failures is [...]|$|E
40|$|We {{consider}} an M/G/ 1 queue {{with the following}} form of customer impatience: an arriving customer balks or reneges when its <b>virtual</b> waiting <b>time,</b> i. e., {{the amount of work}} seen upon arrival, is larger than a certain random patience time. We consider the number of customers in the system, the maximum workload during a busy period, and the length of a busy period. We also briefl y treat the analogous model in which any customer enters the system and leaves {{at the end of his}} patience time or at the end of his <b>virtual</b> sojourn <b>time,</b> whichever occurs first...|$|R
5000|$|The {{selection}} of the queue with minimal <b>virtual</b> finish <b>time</b> {{can be hard to}} implement at wire speed. Then, other approximations of GPS have been defined with less complexity, like deficit round robin.|$|R
40|$|We {{consider}} {{a class of}} general Gt/Gt/ 1 single-server queues, including the Mt/Mt/ 1 queue, with unlimited waiting space, service in order of arrival and a time-varying arrival rate, where the service rate at each time is subject to control. We study the rate-matching control, where the service rate is made proportional to the arrival rate. We show that the model with the rate-matching control {{can be regarded as}} a deterministic time transformation of a stationary G/G/ 1 model, so that the queue length distribution is stabilized as time evolves. However, the time-varying <b>virtual</b> waiting <b>time</b> is not stabilized. We show that the time-varying expected <b>virtual</b> waiting <b>time</b> with the rate-matching service-rate control becomes inversely proportional to the arrival rate in a heavy-traffic limit. We also show that no control that stabilizes the queue length asymptotically in heavy-traffic can also stabilize the <b>virtual</b> waiting <b>time.</b> Then we consider two square-root service-rate controls and show that one of these stabilizes the waiting time when the arrival rate changes slowly relative to the average service time, so that a pointwise stationary approximation is appropriate...|$|R
50|$|In Showcase #97, Kara is {{reclaimed}} by the sentient Symbioship and reimmersed into Kandorian {{society for}} a time. Several years of <b>virtual</b> <b>time</b> elapse, in which Kara {{is married and}} has a child. She is freed {{with the assistance of}} newspaper reporter Andrew Vinson, at which point she disables the ship.|$|E
50|$|The {{doors were}} closed and locked on a Friday and the {{building}} was subsequently sold to the Birmingham City Council. It was several years before the doors were reopened, and the council employees discovered a <b>virtual</b> <b>time</b> capsule of jewellery production, and techniques, {{as well as more}} personal work life related items some dating back as far as 1899.|$|E
5000|$|... : - {{insert a}} key [...] into the kinetic heap {{at the current}} <b>virtual</b> <b>time</b> , whose value changes as a {{continuous}} function [...] of time [...] The insertion is done as in a normal heap in [...] time, but [...] certificates might {{need to be changed}} as a result, so the total time for rescheduling certificate failures is ...|$|E
40|$|We {{consider}} a general Gt/Gt/ 1 single-server queue with unlimited waiting {{space and a}} time-varying arrival rate, where the the service rate at each time is subject to control. We study the rate-matching control, where the the service rate is made proportional to the arrival rate. We show that the model with the rate-matching control {{can be regarded as}} a deterministic time transformation of a stationary G/G/ 1 model, so that the queue length distribution is stabilized as time evolves. However, the time-varying <b>virtual</b> waiting <b>time</b> is not stabilized. We show that the time-varying expected <b>virtual</b> waiting <b>time</b> with the rate-matching service-rate control becomes inversely proportional to the arrival rate in a heavy-traffic limit. We also show that no control that stabilizes the queue length asymptotically in heavy-traffic can also stabilize the <b>virtual</b> waiting <b>time.</b> Then we consider two square-root service-rate controls. We show that these alternative square-root service-rate controls stabilize the waiting time when the arrival rate changes very slowly relative to the average service time, so that a pointwise stationary approximation is appropriate...|$|R
40|$|Markov jump {{processes}} and continuous time Bayesian networks are important classes of continuous time dynamical systems. In this paper, we tackle {{the problem of}} inferring unobserved paths in these models by introducing a fast auxiliary variable Gibbs sampler. Our approach {{is based on the}} idea of uniformization, and sets up a Markov chain over paths by sampling a finite set of <b>virtual</b> jump <b>times</b> and then running a standard hidden Markov model forward filteringbackward sampling algorithm over states at the set of extant and <b>virtual</b> jump <b>times.</b> We demonstrate significant computational benefits over a state-of-the-art Gibbs sampler on a number of continuous time Bayesian networks. ...|$|R
40|$|We {{develop a}} numerically exact method for {{evaluating}} the time-dependent mean, variance, and higher-order moments {{of the number of}} entities in a Pht/Pht/ queueing system. We also develop a numerically exact method {{for evaluating the}} distribution function and moments of the <b>virtual</b> sojourn <b>time</b> for any time t; in our setting, the <b>virtual</b> sojourn <b>time</b> is equivalent to the service <b>time</b> for <b>virtual</b> entities arriving to the system at that time t. We include several examples using software that we have developed and have put in downloadable form in the Online Supplement to this paper on the journal’s website. Key words: queues; algorithms; phase-type distribution; nonstationary processes; infinite serve...|$|R
5000|$|Kinetic data {{structures}} are used on systems {{where there is}} a set of values that are changing as a function of time, in a known fashion. So the system has some values, and for each value , it is known that [...]Kinetic data structures allow queries on a system at the current <b>virtual</b> <b>time</b> , and two additional operations: ...|$|E
50|$|Based on the MHD equations, Glatzmaier and Paul Roberts {{have made}} a {{supercomputer}} model of the Earth's interior. After running the simulations {{for thousands of years}} in <b>virtual</b> <b>time,</b> the changes in Earth's magnetic field can be studied. The simulation results are in good agreement with the observations as the simulations have correctly predicted that the Earth's magnetic field flips every few hundred thousand years. During the flips, the magnetic field does not vanish altogether—it just gets more complex.|$|E
50|$|Visitors {{enter the}} Pepsi Family Center via a <b>virtual</b> <b>time</b> machine that {{takes them to}} the year 1835 in Craven County. Here, {{historic}} roles can be adopted that allow {{for a number of}} hands-on activities. The Center provides an intergenerational, interactive learning adventure for parents and children working as teams: sailing a ship, distilling turpentine and producing naval stores, piecing an electronic quilt, and helping the shopkeeper find merchandise for customers in the dry goods store.|$|E
5000|$|Encounters in the <b>Virtual</b> Feminist Museum <b>Time,</b> Space and the Archive, London: Routledge, 2007.|$|R
5000|$|... {{includes}} Osmose, <b>Virtual</b> Theater (real <b>time</b> {{capture and}} <b>virtual</b> set compositing) and mental ray.|$|R
5000|$|Pollock, Griselda Encounters in the <b>Virtual</b> Feminist Museum: <b>Time,</b> Space and the Archive Routledge, 2007.|$|R
