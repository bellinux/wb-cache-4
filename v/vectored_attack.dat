1|637|Public
50|$|On 26 July 1971, {{the first}} Sea King landed on INS Vikrant. From {{then on the}} indomitable team of Harpoons and ‘Mother’ (the carrier) saw a series of firsts. The first {{operational}} ASW mission was flown on 18 October 1971. On 31 November 1971, while on an ‘Advance Screen’, a Sea King picked up a suspected submarine contact and carried out a <b>Vectored</b> <b>attack</b> for the first time. The Harpoons received their baptism with fire when hostilities broke out in 1971. Extensive ASW operations were undertaken and the Harpoons clocked over 156 hours of war effort. Over the decade the Harpoons continued to operate from INS Vikrant as the only front line carrier borne rotary wing squadron and earned the honour and reputation of being the most versatile and baleful of the whirly birds. The squadron got greater punch with the procurement of Sea King 42B which have an improved sensor fit and capability for Anti-Shipping strikes.|$|E
5000|$|Repair systems, {{eliminate}} <b>vector(s)</b> of <b>attack,</b> and mitigate exploitable vulnerabilities.|$|R
50|$|The bot {{itself is}} {{spread through the}} ZeroAccess rootkit {{through a variety of}} <b>attack</b> <b>vectors.</b> One <b>attack</b> <b>vector</b> is a form of social engineering, where a user is persuaded to execute {{malicious}} code either by disguising it as a legitimate file, or including it hidden as an additional payload in an executable which announces itself as, for example, bypassing copyright protection (a keygen). A second <b>attack</b> <b>vector</b> utilizes an advertising network in order to have the user click on an advertisement that redirects them to a site hosting the malicious software itself. A third infection vector used is an affiliate scheme where third party persons are paid for installing the rootkit on a system.|$|R
50|$|A convoy {{typically}} proceeded at 15 knots, {{which would}} provide an <b>attack</b> <b>vector</b> based upon a relatively wide area, but if the submarine was forced to submerge, {{the area of the}} <b>attack</b> <b>vector</b> would be drastically reduced.|$|R
40|$|Web {{applications}} {{suffer from}} cross-site scripting (XSS) attacks that resulting from incomplete or incorrect input sanitization. Learning {{the structure of}} <b>attack</b> <b>vectors</b> could enrich the variety of man-ifestations in generated XSS attacks. In this study, we focus on generating more threatening XSS attacks for the state-of-the-art detection approaches that can find potential XSS vulnerabilities in Web applications, and propose a mechanism for structural learning of <b>attack</b> <b>vectors</b> {{with the aim of}} generating mutated XSS attacks in a fully automatic way. Mutated XSS attack generation depends on the analysis of <b>attack</b> <b>vectors</b> and the structural learning mechanism. For the kernel of the learning mechanism, we use a Hidden Markov model (HMM) as the structure of the <b>attack</b> <b>vector</b> model to capture the implicit manner of the <b>attack</b> <b>vector,</b> and this manner is benefited from the syntax mean-ings that are labeled by the proposed tokenizing mechanism. Bayes theorem is used to determine the number of hidden states in the model for generalizing the structure model. The paper has the con-tributions are as following: (1) automatically learn the structure of <b>attack</b> <b>vectors</b> from practical data analysis to modeling a structure model of <b>attack</b> <b>vectors,</b> (2) mimic the manners and the elements of <b>attack</b> <b>vectors</b> to extend the ability of testing tool for identifying XSS vulnerabilities, (3) be helpful to verify the flaws of blacklist sanitization procedures of Web applications. We evaluated the proposed mechanism by Burp Intruder with a dataset collected from public XSS archives. The results shows that mutated XSS attack generation can identify potential vulnerabilities...|$|R
5000|$|The Human Firewall Approach: Everyone in the {{organization}} is tested, the percentage of employees who are prone to phishing attacks is determined, and then everyone is trained on major <b>attack</b> <b>vectors.</b> Simulated phishing <b>attacks</b> are sent to all employees on a regular basis.|$|R
40|$|We {{propose a}} {{framework}} for modeling the security of cyber-physical systems in which {{the behavior of the}} adversary is controlled by a threat model that captures both the cyber aspects (with discrete values) and the physical aspects (with continuous values) of such systems in a unified way. In particular, it addresses combined (dependent) <b>vector</b> <b>attacks,</b> and synchronization/localization issues. The framework identifies the cyberphysical features specified by the security policies that need to be protected, and can be used for proving formally the security of cyber-physical systems...|$|R
40|$|This thesis {{looks at}} file {{execution}} as an <b>attack</b> <b>vector</b> {{that leads to}} the execution of unauthorized code. File integrity checking is examined as a means of removing this <b>attack</b> <b>vector,</b> and the design, implementation, and evaluation of a best-of-breed file integrity checker for the Linux operating system is undertaken. We conclude that the resultant file integrity checker does succeed in removing file execution as an <b>attack</b> <b>vector,</b> does so at a computational cost that is negligible, and displays innovative and useful features that are not currently found in any other Linux file integrity checker...|$|R
50|$|The RFC itself {{identifies}} {{a number}} of potential <b>attack</b> <b>vectors.</b>|$|R
5000|$|... #Caption: A {{classification}} of SQL injection <b>attacking</b> <b>vector</b> as of 2010.|$|R
5000|$|Poisoning <b>Attacks</b> against Support <b>Vector</b> Machines, and <b>Attacks</b> against Clustering Algorithms ...|$|R
50|$|Examples of <b>attack</b> <b>vectors</b> include {{user input}} fields, protocols, interfaces, and services.|$|R
5000|$|In XARA each <b>attack</b> <b>vector</b> {{violates the}} {{principles}} of a computer security sandbox.|$|R
40|$|FyLasso Antivulnerability is a {{software}} utility, developed for Windows XP and Windows Server 2003, which protects from 0 -days, worms and malicious hackers. FyLasso uses a periodically updated <b>Attack</b> <b>Vectors</b> Database to search your computer for potential software vulnerabilities. Every potential vulnerability found is protected from exploitation using FyLasso’s Proactive Real-time Defense System (PRDS). The {{purpose of this}} paper is to provide a technical explanation of FyLasso and PRDS. 1 1 What is the problem being solved? The software running on todays computer systems contain bugs. These software bugs are errors during programming or design of an application [2]. Some types of bugs, called software vulnerabilities, are exploited by worms and malicious hackers. Software vulnerabilities allow arbitrary code execution to occur resulting in the primary reason why computers are insecure. The following sections explain how FyLasso Antivulnerability (FyLasso) detects potential software vulnerabilities and prevents arbitrary code execution from occuring thus protecting computers from attack. 2 The <b>Attack</b> <b>Vectors</b> Database FyLasso organizes software bugs into <b>attack</b> <b>vectors.</b> Each <b>attack</b> <b>vector</b> contains a unique set of adjacent assembly instructions, consisting of a variety of buffer overruns, buffer underruns and integer overflows. One of the most commonly attacked bug used to penetrate into computer systems is the buffer overflow [7, 10]. Listing 1 contains three examples of common buffer overflow <b>attack</b> <b>vectors.</b> Listing 1 : Example Buffer Overflow <b>Attack</b> <b>Vectors</b> 004030 DC mov ch, byte [eax] 004030 DE mov byte [ebx], ch 004030 E 0 i n c eax 004030 E 1 i n c ebx 004030 E 2 t e s t ch, ch 004030 E 4 jnz 004030 DC 004012 F 0 rep movsd 004012 F 2 mov ecx, eax 004012 F 4 and ecx, 3 004012 F 7 rep movsb 00400087 mov dl, byte [eax] 00400089 mov byte [ecx+eax], dl 0040008 C i n c eax 0040008 D t e s t dl, d...|$|R
40|$|An {{important}} <b>attack</b> <b>vector</b> {{missing in}} many penetration testing and attack tools available {{today is the}} tried-and-true telephony dialup. With the recent surge in popularity of VoIP connectivity, accessing such <b>attack</b> <b>vectors</b> has become both cheap and easy. Using the new Metasploit telephony components, users {{are now able to}} both scan for and dial up directly to telephony-accessible exploitation targets...|$|R
40|$|The {{purpose of}} this {{directed}} project and related research was to demonstrate and catalog a new <b>attack</b> <b>vector</b> that utilizes cloud managed infrastructure. Cloud computing is a recent trend that is creating significant hype in the IT sector. Being that cloud computing is a new theme in the computing world, there are many security concerns that remain unknown and unexplored. The product of this directed project provides a documented taxonomy of the new <b>attack</b> <b>vector</b> and how to mitigate risk from this kind of attack. The new <b>attack</b> <b>vector</b> creates efficiencies throughout the lifecycle of an attack and greatly reduces time and effort for the malicious user; however, efficiencies in time and effort {{are not the only}} characteristics of the demonstrated <b>attack</b> <b>vector.</b> This type of attack greatly increases the chance of success and reduces the odds of detection. All of these characteristics culminate to create a tool for the malicious user that is dangerous to every organization in existence...|$|R
40|$|Instrumentation {{and control}} systems in {{nuclear power plants}} have been digitalized {{for the purpose of}} {{maintenance}} and precise operation. This digitalization, however, brings out issues related to cyber security. In the most recent past, international standard organizations, regulatory institutes, and research institutes have performed a number of studies addressing these systems cyber security. In order to provide information helpful to the system designers in their application of cyber security for the systems, this paper presents methods and considerations to define <b>attack</b> <b>vectors</b> in a target system, to review and select the requirements in the Regulatory Guide 5. 71, and to integrate the results to identify applicable technical security control requirements. In this study, <b>attack</b> <b>vectors</b> are analyzed through the vulnerability analyses and penetration tests with a simplified safety system, and the elements of critical digital assets acting as <b>attack</b> <b>vectors</b> are identified. Among the security control requirements listed in Appendices B and C to Regulatory Guide 5. 71, those that should be implemented into the systems are selected and classified in groups of technical security control requirements using the results of the <b>attack</b> <b>vector</b> analysis. For the <b>attack</b> <b>vector</b> elements of critical digital assets, all the technical security control requirements are evaluated to determine whether they are applicable and effective, and considerations in this evaluation are also discussed. The technical security control requirements in three important categories of access control, monitoring and logging, and encryption are derived and grouped according to the elements of <b>attack</b> <b>vectors</b> as results for the sample safety system...|$|R
50|$|UTF-8 {{was noted}} {{as a source}} of {{vulnerabilities}} and <b>attack</b> <b>vectors</b> by Bruce Schneier and Jeffrey Streifling.|$|R
5000|$|It {{has been}} widely {{reported}} that malware/computer viruses have infected Apple Mac computers. One <b>vector</b> of <b>attack</b> has been through Adobe Flash. The variety of [...] "FakeFlash" [...] trojans discovered have prompted Apple to update its software for the OS X platform.|$|R
50|$|When {{computing}} {{a message}} authentication code, such as by CBC-MAC, {{the use of}} an initialization vector is a possible <b>attack</b> <b>vector.</b>|$|R
50|$|Since code in {{the boot}} sector is {{executed}} automatically, boot sectors {{have historically been}} a common <b>attack</b> <b>vector</b> for computer viruses.|$|R
5000|$|Zombie Zero is an <b>attack</b> <b>vector</b> where a cyber {{attacker}} utilized malware {{that was}} clandestinely embedded in new barcode readers which were manufactured overseas.|$|R
40|$|Abstract—Cyber {{attacks have}} greatly {{increased}} over the years, where the attackers have progressively improved in devising attacks towards a specific target. To aid in identifying and defending against cyber attacks we propose a cyber attack taxonomy called AVOIDIT (<b>Attack</b> <b>Vector,</b> Operational Impact, Defense, Information Impact, and Target). We use five major classifiers to characterize the nature of an attack, which are classification by <b>attack</b> <b>vector,</b> classification by <b>attack</b> target, classification by operational impact, classification by informational impact, and classification by defense. Our fifth category, classification by defense, is used to provide the network administrator with information of how to mitigate or remediate an attack. Contrary to the existing taxonomies, our taxonomy efficiently classifies blended attacks. Our taxonomy is applied using an application approach with pabulum to educate the defender on possible cyber attacks. Keywords- taxonomy; cyber attack taxonomy; vulnerability; computer security; cyberspace I...|$|R
30|$|In this section, we give a {{description}} of the attacker models and <b>attack</b> <b>vectors</b> with respect to the assets of the “doctor in the loop” approach.|$|R
30|$|In this section, we {{will further}} discuss three special {{cases in which the}} {{required}} network information can be further reduced for constructing an undetectable <b>attack</b> <b>vector.</b>|$|R
5000|$|Potentially opens another {{security}} <b>attack</b> <b>vector.</b> Older devices don't always support WPA2-PSK {{so while}} the original network might be secure the secondary one is potentially open.|$|R
5000|$|Threat {{modeling}} is {{a process}} by which potential threats can be identified, enumerated, and prioritized - all from a hypothetical attacker’s point of view. The purpose of threat modeling is to provide defenders {{with a systematic analysis}} of the probable attacker’s profile, the most likely <b>attack</b> <b>vectors,</b> and the assets most desired by an attacker. Threat modeling answers the questions “Where are the high-value assets?” “Where am I most vulnerable to attack?” “What are the most relevant threats?” “Is there an <b>attack</b> <b>vector</b> that might go unnoticed?” ...|$|R
50|$|AIS {{offers a}} {{comprehensive}} managed security solution consisting of premises and cloud-based security services for protecting an organization across all potential <b>attack</b> <b>vectors</b> and fulfilling compliance requirements.|$|R
50|$|<b>Attack</b> <b>Vector</b> (AV) saw the {{inclusion}} of a new metric value of Physical (P), to describe vulnerabilities that require physical access to the device or system to perform.|$|R
5000|$|Data Execution Prevention (DEP): Support for the No Execute (NX) bit {{which helps}} to prevent buffer {{overflow}} exploits {{that are often}} the <b>attack</b> <b>vector</b> of Windows Server exploits.|$|R
500|$|Disturbance errors (explained in {{the section}} above) {{effectively}} defeat various layers of memory protection by [...] "short circuiting" [...] them at a very low hardware level, practically creating a unique <b>attack</b> <b>vector</b> type that allows processes to alter the contents of arbitrary parts of the main memory by directly manipulating the underlying memory hardware. [...] In comparison, [...] "conventional" [...] <b>attack</b> <b>vectors</b> such as buffer overflows aim at circumventing the protection mechanisms at the software level, by exploiting various programming mistakes to achieve alterations of otherwise inaccessible main memory contents.|$|R
40|$|Today’s {{most severe}} {{information}} security threats {{are no longer}} random, opportunistic attacks such as viruses, but targeted attacks that combine multiple <b>attack</b> <b>vectors</b> to achieve particular goals. Managers responsible for ensuring the security of complex information systems are therefore confronted with growing numbers of increasingly sophisticated attacks. In line with this development, the focus of information security research has broadened from individual technical vulnerabilities toward threats that emerge from the dynamic interaction of multiple <b>attack</b> <b>vectors</b> and their deliberate exploitation by sophisticated attackers. To cope with such threats, a comprehensive approach to secure informatio...|$|R
40|$|This paper {{examines}} QR Codes and {{how they}} can be used to attack both human interaction and automated systems. As the encoded information is intended to be machine readable only, a human cannot distinguish between a valid and a maliciously manipulated QR code. While humans might fall for phishing attacks, automated readers are most likely vulnerable to SQL injections and command injections. Our contribution consists of an analysis of the QR Code as an <b>attack</b> <b>vector,</b> showing different <b>attack</b> strategies from the attackers point of view and exploring their possible consequences. 1...|$|R
5000|$|Disturbance errors (explained in {{the section}} above) {{effectively}} defeat various layers of memory protection by [...] "short circuiting" [...] them at a very low hardware level, practically creating a unique <b>attack</b> <b>vector</b> type that allows processes to alter the contents of arbitrary parts of the main memory by directly manipulating the underlying memory hardware. [...] In comparison, [...] "conventional" [...] <b>attack</b> <b>vectors</b> such as buffer overflows aim at circumventing the protection mechanisms at the software level, by exploiting various programming mistakes to achieve alterations of otherwise inaccessible main memory contents.|$|R
40|$|International audience—Data {{injection}} {{attacks are}} studied {{in a game}} theoretic setting. Assuming that the network operator acquires the state variables via generalized least squares (GLS) estimation, different attack performance metrics are proposed. The scenarios defined by the performance metrics are then analyzed. In particular, closed form expressions for best response functions and Nash equilibria (NEs) are given. First the {{case in which the}} <b>attack</b> <b>vector</b> can be constructed without energy constraints is studied. It is shown that for unconstrained attacks infinitely many optimal <b>attack</b> <b>vectors</b> exist and that the construction requires knowledge of the state variables in the grid. Alternatively, when energy constraints are included, the <b>attack</b> <b>vector</b> construction does not depend on the state variables. As a consequence, the optimal energy constrained attack strategy follows a correlated multivariate Gaussian distribution. It is shown that for unconstrained attacks infinitely many NEs exist and that in the constrained case at least one NE exists...|$|R
40|$|Oncolytic {{adenovirus}} (Ad) vectors {{present a}} new modality to treat cancer. These <b>vectors</b> <b>attack</b> tumors via replicating in and killing cancer cells. Upon {{completion of the}} vector replication cycle, the infected tumor cell lyses and releases progeny virions {{that are capable of}} infecting neighboring tumor cells. Repeated cycles of vector replication and cell lysis can destroy the tumor. Numerous Ad vectors have been generated and tested, some of them reaching human clinical trials. In 2005, the first oncolytic Ad was approved for the treatment of head-and-neck cancer by the Chinese FDA. Oncolytic Ads have been proven to be safe, with no serious adverse effects reported even when high doses of the vector were injected intravenously. The vectors demonstrated modest anti-tumor effect when applied as a single agent; their efficacy improved when they were combined with another modality. The efficacy of oncolytic Ads can be improved using various approaches, including vector design, delivery techniques, and ancillary treatment, which will be discussed in this review...|$|R
