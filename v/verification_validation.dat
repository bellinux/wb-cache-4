303|3113|Public
25|$|An {{inflatable}} solar chimney {{power plant}} has been evaluated analytically and simulated by {{computational fluid dynamics}} (CFD) modeling. This idea has been registered as a patent, including the optimal shape of the collector and the analytical profile for the self standing inflatable tower. The CFD simulation has been evaluated by <b>verification,</b> <b>validation,</b> and uncertainty quantification (VVUQ) of computer simulations by American Society of Mechanical Engineers 2009 standards.|$|E
5000|$|... <b>verification,</b> <b>validation,</b> formal {{analysis}} {{and testing of}} the above ...|$|E
5000|$|IEEE 1278.4-1997 - Recommended Practice for Distributed Interactive - <b>Verification</b> <b>Validation</b> & Accreditation ...|$|E
40|$|This {{study was}} {{conducted}} to take an in depth look at the <b>verification</b> and <b>validation</b> of product model data in industry. The ultimate goal was to find any relationships between company demographics and choice of <b>verification</b> and <b>validation</b> processes. A pilot survey on data retention directed the research to focus on this subject. The <b>verification</b> and <b>validation</b> survey collected data from respondents who used 3 D models as a basis for their products and asked questions about their company 2 ̆ 7 s process for <b>verification</b> and <b>validation.</b> The research attempts to demonstrate possible associations between demographics and <b>verification</b> and <b>validation</b> processes by comparing the data gathered from demographic questions and <b>verification</b> and <b>validation</b> process questions. This research did not attempt to find any new or improved processes for <b>verification</b> and <b>validation</b> instead intending to provide companies with as much information about the decisions to implement these processes as possible. ...|$|R
40|$|<b>VERIFICATION</b> AND <b>VALIDATION</b> OF SIMULATION MODELS ∗ This paper {{discusses}} <b>verification</b> and <b>validation</b> of simulation models. The {{different approaches}} to deciding model validity are presented; how model <b>verification</b> and <b>validation</b> relate to the model development process are discussed; various validation techniques are defined; conceptual model validity, model verification, operational validity, and data validity are described; ways to document results are given; and a recommended procedure is presented. ...|$|R
40|$|The <b>verification</b> and <b>validation</b> of {{engineering}} designs are of primary importance as they directly influence production performance and ultimately define product functionality and customer perception. Research in aspects of <b>verification</b> and <b>validation</b> is widely spread ranging from tools employed during the digital design phase, to methods deployed for prototype <b>verification</b> and <b>validation.</b> This paper reviews the standard definitions of <b>verification</b> and <b>validation</b> {{in the context}} {{of engineering}} design and progresses to provide a coherent analysis and classification of these activities from preliminary design, to design in the digital domain and the physical <b>verification</b> and <b>validation</b> of products and processes. The scope of the paper includes aspects of system design and demonstrates how complex products are validated {{in the context of}} their lifecycle. Industrial requirements are highlighted and research trends and priorities identified. (C) 2010 CIRP...|$|R
5000|$|JBook: R.Stärk, J.Schmid, E.Börger. Java and the Java Virtual Machine: Definition, <b>Verification,</b> <b>Validation</b> ...|$|E
5000|$|Covers all {{structured}} engineering activities, from capturing customer {{operational needs}} to system integration <b>verification</b> <b>validation</b> (IVV); ...|$|E
5000|$|Within the {{modeling}} and simulation (M&S) community, the definitions of <b>verification,</b> <b>validation</b> and accreditation are similar: ...|$|E
50|$|The <b>verification</b> and <b>validation</b> of {{simulation}} model starts after functional specifications {{have been documented}} and initial model development has been completed. <b>Verification</b> and <b>validation</b> is an iterative process that takes place throughout {{the development of a}} model.|$|R
40|$|AbstractIt is {{necessary}} to integrate practical software development and operation body of knowledge to deploy development and operation methods for assuring safety. In this paper, the knowledge for system safety <b>verification</b> and <b>validation</b> will be categorized by the basic knowledge, the plan knowledge, the analysis and design knowledge, and the <b>verification</b> and <b>validation</b> knowledge. This paper also describes a systematic approach for constructing the knowledge for the modern safety <b>verification</b> and <b>validation...</b>|$|R
50|$|Both <b>verification</b> and <b>validation</b> {{are related}} to the {{concepts}} of quality and of software quality assurance. By themselves, <b>verification</b> and <b>validation</b> do not guarantee software quality; planning, traceability, configuration management and other aspects of software engineering are required.|$|R
5000|$|Egon Börger, Java and the Java Virtual Machine: Definition, <b>Verification,</b> <b>Validation</b> (co-authored by R. Staerk and J. Schmid), Springer-Verlag , 2001 ...|$|E
5000|$|Covers {{functional}} safety {{aspects of the}} entire development process (including such activities as requirements specification, design, implementation, integration, <b>verification,</b> <b>validation,</b> and configuration).|$|E
5000|$|IEEE 1516.4-2007 - Recommended Practice for <b>Verification,</b> <b>Validation,</b> and Accreditation of a Federation an Overlay to the High Level Architecture Federation Development and Execution Process ...|$|E
40|$|Abstract: <b>Verification</b> and <b>Validation</b> {{have always}} been {{a key part of the}} process for {{producing}} embedded control systems. With the advent of Model-Based Design as an alternative method for generating embedded software, the need for <b>verification</b> and <b>validation</b> remains and, up to the present, conventional approaches for doing <b>verification</b> and <b>validation</b> have largely been followed. However, conventional and new techniques fully integrated into Model-Based Design have the potential for greater returns, and will be presented in this paper...|$|R
40|$|This paper {{addresses}} some of {{the emerging}} software paradigms {{that may be used}} in developing safety-critical software applications. Paradigms considered in this paper include knowledge-based systems, neural networks, genetic algorithms, and fuzzy systems. It presents one view of the software <b>verification</b> and <b>validation</b> activities that should be associated with each paradigm. The paper begins with a discussion of the historical evolution of software <b>verification</b> and <b>validation.</b> Next, a comparison is made between the <b>verification</b> and <b>validation</b> processes used for conventional and emerging software systems. Several <b>verification</b> and <b>validation</b> issues for the emerging paradigms are discussed and some specific research topics are identified. This work is relevant for monitoring and control at nuclear power plants...|$|R
40|$|The {{purpose of}} this report is to provide {{software}} <b>verification</b> and <b>validation</b> for the statistical packages used by the Statistical Consulting Section (SCS) of the Savannah River Technology Center. The need for this <b>verification</b> and <b>validation</b> stems from {{the requirements of the}} Quality Assurance programs that are frequently applicable to the work conducted by SCS. The IBM Personal Computer 300 PL and 300 XL are both Pentium II based desktops. Therefore the software <b>verification</b> and <b>validation</b> in this report is valid interchangeably between both platforms. As new computing platforms, statistical packages, or revisions to existing packages are reevaluated using these new tools, this report is to be revised to address their <b>verification</b> and <b>validation...</b>|$|R
50|$|Mathcad is {{computer}} software primarily {{intended for the}} <b>verification,</b> <b>validation,</b> documentation and re-use of engineering calculations. First introduced in 1986 on DOS, {{it was the first}} to introduce live editing of typeset mathematical notation, combined with its automatic computations.|$|E
5000|$|<b>Verification,</b> <b>Validation,</b> and Accreditation (VV&A) - AEgis {{works with}} the DoD (Department of Defense) in the {{development}} of M&S VV&A strategies and execution of VV&A Plans. AEgis-View™ supports V&V data products, M&S Units Under Test (UUTs), associated V&V activities, agents, and resources for cost-effective VV&A program execution from concept to deployment.|$|E
50|$|FEMtools is {{designed}} to handle all sizes of finite element and test models {{for a wide range}} of industrial applications.Industrial applications can be found in the fields for structural dynamics troubleshooting, NVH, finite element model <b>verification,</b> <b>validation</b> and updating (V&V), mesh coarsening or refinement, structural health monitoring (SHM), material and property identification, structural optimization, robust design and more.|$|E
40|$|AbstractOne of the {{key issues}} in {{software}} development, like in all engineering problems, {{is to ensure that}} the product delivered meets its specification. <b>Verification</b> and <b>validation</b> are well-established techniques for ensuring the quality of a product within the overall software development lifecycle. With models being expressed in the Unified Modeling Language, the application of <b>verification</b> and <b>validation</b> is complicated. Firstly, concerning verification, a UML model is typically not the input language of a verification tool. Secondly, with regards to validation, a UML model is also not directly executable. In this paper, we show how <b>verification</b> and <b>validation</b> can be achieved for UML models. Within our approach, graph transformation techniques are applied for automated translation of UML models into a language understood by a verification tool or directly into an implementation. By the use of such semantic-preserving transformations, both <b>verification</b> and <b>validation</b> can be lifted up to the model level, allowing for a seamless integration of <b>verification</b> and <b>validation</b> into a UML-based development process...|$|R
40|$|The thesis has a {{two-fold}} purpose: 1.) {{to develop}} a systematic approach to simulation model <b>verification</b> and <b>validation,</b> and 2.) to report <b>verification</b> and <b>validation</b> studies of the APROS SA revaporization model. The scope of the validation is extended outside the traditional code development environment. Three fundamental processes that have effect on software validity during its entire life cycle are determined: management, development and operation processes. Proper documentation is vital in connecting different processes together. The proposed <b>verification</b> and <b>validation</b> procedure is kept on general level and personal judgment of analyst is needed to choose appropriate methods most suitable in each process. Key tasks in the management process are determining the independence level of validation and converting feedback to new ideas for further development. In the development phase the importance of continuous <b>verification</b> and <b>validation</b> is highlighted. That is, <b>verification</b> and <b>validation</b> should take place already during the design and writing of the code, not only when the code is written. It is vital to verif...|$|R
40|$|This paper {{examines}} how formal specification techniques can support the <b>verification</b> and <b>validation</b> (V&V) of knowledge-based systems. Formal specification techniques provide levels of description which support both <b>verification</b> and <b>validation,</b> and V&V techniques feed back {{to assist the}} development of the specifications. Developin...|$|R
50|$|Functional safety {{features}} form {{an integral part}} of each automotive product development phase, ranging from the specification, to design, implementation, integration, <b>verification,</b> <b>validation,</b> and production release. The standard ISO 26262 is an adaptation of the Functional Safety standard IEC 61508 for Automotive Electric/Electronic Systems. ISO 26262 defines functional safety for automotive equipment applicable throughout the lifecycle of all automotive electronic and electrical safety-related systems.|$|E
50|$|An {{inflatable}} solar chimney {{power plant}} has been evaluated analytically and simulated by {{computational fluid dynamics}} (CFD) modeling. This idea has been registered as a patent, including the optimal shape of the collector and the analytical profile for the self standing inflatable tower. The CFD simulation has been evaluated by <b>verification,</b> <b>validation,</b> and uncertainty quantification (VVUQ) of computer simulations by American Society of Mechanical Engineers 2009 standards.|$|E
50|$|AEgis Technologies {{capabilities}} include: Warfighter Training and Exercise Support; Test and Evaluation (T&E); Geospatial-3D Content; Gaming; Interactive Multimedia Instruction (IMI); Unmanned Air Systems (UAS) / Unmanned Air Vehicles (UAV) / Drone; Unmanned Ground Vehicles (UGV)-Robot Simulators; Custom Training Simulators; Cyber Security-Information Assurance; Directed Energy Sensors; Advanced Technologies; Systems Engineering and Analysis; System Development and Integration; Process Control Automation; <b>Verification,</b> <b>Validation,</b> and Accreditation (VV&A); Test Missiles-MAST-M; Information-Big Data Solutions; Visualization-LightINT; and Monarch Health Services.|$|E
40|$|In {{this paper}} the {{advantages}} of <b>verification</b> and <b>validation</b> to support changes of an existing PLC program are shown. The controller is defined using Signal Interpreted Petri Nets (SIPN) and <b>verification</b> and <b>validation</b> are performed using symbolic model-checking. The main focus {{of this paper is}} to show the process and the benefits of <b>verification</b> and <b>validation</b> for the reliability of the control algorithm when specified changes are to make. This is clarified by the example of a heating tank controller throughout the text. ...|$|R
5000|$|... 1012-2004 IEEE Standard for Software <b>Verification</b> and <b>Validation</b> ...|$|R
5000|$|... #Article: <b>Verification</b> and <b>validation</b> of {{computer}} simulation models ...|$|R
50|$|Andreas Hein, {{from the}} University of Stuttgart, {{researched}} {{the use of}} legacy systems in space exploration. According to Hein, legacy systems are attractive for reuse if an organization has the capabilities for <b>verification,</b> <b>validation,</b> testing, and operational history. These capabilities must be integrated into various software life cycle phases such as development, implementation, usage, or maintenance. For software systems, the capability to use and maintain the system are crucial. Otherwise the system will become less and less understandable and maintainable.|$|E
50|$|In 2006, Guizzardi co-founded the Ontology & Conceptual Modeling Research Group (NEMO) {{located at}} the Federal University of Espírito Santo (UFES) in Vitória city, state of Espírito Santo, Brazil. Since then, NEMO has been {{responsible}} for most of the developments in OntoUML. These include tool support to the language both as extensions of UML production-grade tools to support OntoUML (e.g., the MDG for Enterprise Architect), as well as a standalone tool called the OntoUML Lightweight Editor (OLED) for the development, <b>verification,</b> <b>validation,</b> anti-pattern detection and rectification, verbalization and implementation of domain ontologies.|$|E
50|$|According to Hein, <b>verification,</b> <b>validation,</b> testing, and {{operational}} history increases the confidence in a system's reliability and quality. However, accumulating this history is often expensive. NASA's now retired Space Shuttle program used {{a large amount}} of 1970s-era technology. Replacement was cost-prohibitive because of the expensive requirement for flight certification. The original hardware completed the expensive integration and certification requirement for flight, but any new equipment would have had to go through that entire process again. This long and detailed process required extensive tests of the new components in their new configurations before a single unit could be used in the Space Shuttle program. Thus any new system that started the certification process becomes a de facto legacy system by the time it is approved for flight.|$|E
5000|$|Independent <b>Verification</b> and <b>Validation</b> Facility, Fairmont, West Virginia ...|$|R
5000|$|... #Subtitle level 2: Fault {{tolerance}} <b>verification</b> and <b>validation</b> ...|$|R
40|$|Abstract. As designs become larger, more {{complicated}} and more deliberate, {{it is necessary to}} describe a design at a high level (i. e. Model-Based Design), enabling the designer to run simulations faster and identify bugs early on. These demands drive an even greater need for tools and practices that enable automation and rigor in the area of <b>verification</b> and <b>validation.</b> In this paper we discussed <b>verification</b> and <b>validation</b> used for Model-Based Design. Besides, a whole tool of <b>verification</b> and <b>validation</b> from Matlab/Simulink, and a recommended procedure for model validation was also given...|$|R
