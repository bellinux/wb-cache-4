1060|1794|Public
5|$|Negotiations {{initially}} {{focused on}} a comprehensive ban, but this was abandoned due to technical questions surrounding the detection of underground tests and Soviet concerns over the intrusiveness of proposed <b>verification</b> <b>methods.</b> The impetus for the test ban was provided by rising public anxiety over the magnitude of nuclear tests, particularly tests of new thermonuclear weapons (hydrogen bombs), and the resulting nuclear fallout. A test ban was also seen {{as a means of}} slowing nuclear proliferation and the nuclear arms race. Though the PTBT did not halt proliferation or the arms race, its enactment did coincide with a substantial decline in the concentration of radioactive particles in the atmosphere.|$|E
2500|$|The Germans {{did not use}} {{the term}} 'ace' but {{referred}} to German pilots who had achieved 10 kills as Kanone ("big gun") and publicized their names and scores, for the benefit of civilian morale - this term is not known to have come into use before May 1916, however, as when a pilot before that time achieved a total of four confirmed victories, they were most likely to start being cited in official Army communiqués. As mentioned previously, the German military's <b>verification</b> <b>methods</b> for scoring a [...] "confirmed" [...] aerial victory were rigorous, and became more so later in the war. By 1916, as the dedicated Jasta fighter squadrons were forming within the newly named Luftstreitkräfte, every victory had to be claimed in a combat report to his commanding officer. The report was passed up the chain of command for evaluation. Downed enemy aircraft that landed behind the German lines of trenchwork were easily confirmed. Those that fell behind enemy lines had to be verified by a German observer. All victories were credited to a single specific pilot. In case of insoluble disagreement over a given victim, the victory would be credited to a unit, but not to an individual. The sole exception to this was the awarding of a victory each to the pilot and observer of a successful two-seater.|$|E
5000|$|The broad {{field of}} runtime <b>verification</b> <b>methods</b> can be {{classified}} by three dimensions: ...|$|E
40|$|Abstract—Verification {{method of}} {{simulation}} models is explored using actual output and simulation output. <b>Verification</b> <b>method</b> of static data in small-sample circumstances {{is focused on}} in this paper, and the <b>verification</b> <b>method</b> of dynamic data in small-sample circumstances is seen in literature [1]. From the probability statistical point of view, <b>verification</b> <b>method</b> of simulation models of Exponential Distribution and Uniform Distribution in small-sample circumstances is {{presented in this paper}} with regard to static data...|$|R
40|$|We {{provide an}} {{accurate}} <b>verification</b> <b>method</b> for solutions of heat equations with a superlinear nonlinearity. The <b>verification</b> <b>method</b> numerically proves {{the existence and}} local uniqueness of the exact solution in a neighborhood of a numerically computed approximate solution. Our method {{is based on a}} fixed-point formulation using the evolution operator, an iterative numerical verification scheme to extend a time interval in which the validity of the solution can be verified, and rearranged error estimates for avoiding the propagation of an overestimate. As a result, compared with the previous <b>verification</b> <b>method</b> using the analytic semigroup, our method can enclose the solution for a longer time. Some numerical examples are presented to illustrate the efficiency of our <b>verification</b> <b>method.</b> Comment: 26 pages, 4 figures, The accepted version is uploade...|$|R
40|$|Abstract—this paper {{describes}} a <b>verification</b> <b>method</b> of au-tomata based programs [1] based on symbolic model checking algorithms [2]. Author makes {{an attempt to}} develop <b>verification</b> <b>method</b> that can automate process of verification and can be useful for peoples unacquainted with model checking algorithms or tools. I...|$|R
5000|$|Preparing {{systems for}} other <b>verification</b> <b>methods</b> such as i-PIN or {{authentication}} certificate can lay an economic burden on service providers ...|$|E
5000|$|Formal Specification and Verification {{is where}} the TCB is {{verified}} down to the source code level, using formal <b>verification</b> <b>methods</b> where feasible.|$|E
50|$|Some {{retailers}} and companies use <b>verification</b> <b>methods</b> such as unique barcodes, coupon ID numbers, holographic seals, and watermarked paper as protection from unauthorized copying or use.|$|E
40|$|In {{experiments}} with a resolution-based <b>verification</b> <b>method</b> for cryptographic protocols, we could enforce its termination by tagging, a syntactic transformation of messages that leaves attack-free executions invariant. In this paper, we generalize the experimental evidence: we {{prove that the}} <b>verification</b> <b>method</b> always terminates for tagged protocols...|$|R
5000|$|... 8,233,693 Automatic Print and Negative <b>Verification</b> <b>Method</b> and Apparatus ...|$|R
5000|$|... #Subtitle level 3: Consumer Device Cardholder <b>Verification</b> <b>Method</b> (CDCVM) ...|$|R
5000|$|Cardholder {{verification}} is used {{to evaluate}} whether the person presenting the card is the legitimate cardholder. There are many cardholder <b>verification</b> <b>methods</b> (CVMs) supported in EMV. They are ...|$|E
5000|$|Convergence Testing in Term-Level Bounded Model Checking. Randal E. Bryant, Shuvendu K. Lahiri, and Sanjit A. Seshia. 12th Conference on Correct Hardware Design and <b>Verification</b> <b>Methods</b> (CHARME), LNCS 2860, pages 348-362, October 2003.|$|E
50|$|<b>Verification</b> <b>methods</b> for {{hardware}} design {{as well as}} early software and firmware co-design have become mainstream. Prototyping SoC and ASIC design {{with one or more}} FPGAs has become a good method to do this.|$|E
40|$|We {{investigate}} a resolution-based <b>verification</b> <b>method</b> for secrecy and authentication properties of cryptographic protocols. In experiments, we could enforce its termination by tagging, a syntactic transformation of messages that leaves attack-free executions invariant. In this paper, we generalize the experimental evidence: we {{prove that the}} <b>verification</b> <b>method</b> always terminates for tagged protocols...|$|R
40|$|Abstract: High voltage {{three-phase}} three-element combined transformer, {{widely used}} in power systems of 10 kV, 35 kV and the like, is important in guaranteeing the safe and stable operation of power system, and ensuring the fair and equitable metering of electric power. At present, when verified by single-phase <b>verification</b> <b>method,</b> combined transformer exposed to the situation which doesn’t match its actual operation situation, as a result, verification results can’t reflect the true error characteristics of combined transformer. So, it is suggested to adopt three-phase <b>verification</b> <b>method</b> to verify combined transformer. However, when combined transformer is verified by three-phase <b>verification</b> <b>method,</b> {{it has not been}} clear yet that what influence electric field generated by voltage has on current error. In this paper, through current error test on combined transformer with three-phase <b>verification</b> <b>method</b> at different voltage, it is discovered that electric field has a larger influence on current error at lower current(especially at 1 % rated current) ，with the increase of current, the influence of electric field on current error decrease gradually till negligible. The use of three-phase <b>verification</b> <b>method</b> and appropriate modification of current error limits are recommended when combined transformer is verified...|$|R
40|$|This paper {{proposes a}} novel <b>verification</b> <b>method</b> for finite state {{machines}} (FSMs), which automatically exploits {{the relation between}} the state encodings of the FSMs under consideration. It is based on the detection and utilization of functionally dependent state variables. This significantly extends the ability of the <b>verification</b> <b>method</b> to handle FSMs with similar state encodings. The effectiveness of the proposed method is illustrated by experimental results on well-known benchmarks...|$|R
50|$|In 2014 VERIFIN {{was awarded}} The OPCW-The Hague Award in {{recognition}} of its outstanding leadership {{in the development of}} advanced <b>verification</b> <b>methods</b> for use in the detection and identification of chemical weapons and their components.|$|E
5000|$|Applets {{in an open}} {{platform}} environment {{should provide}} secure interactions between different applications. A compositional approach {{can be used to}} provide security for open platform applets. [...] Advanced compositional <b>verification</b> <b>methods</b> have been developed for secure applet interactions.|$|E
50|$|Appendix B (Design Assurance Considerations for Level A and B Functions) - {{the longest}} {{chapter of the}} {{document}} - prepares the future of embedded electronics, {{paving the way for}} advanced design and <b>verification</b> <b>methods,</b> well known to the outside world, but fairly new for the avionics industry.|$|E
3000|$|... 2005), {{and is also}} {{recommended}} in other performance-based approaches such as the New Zealand <b>Verification</b> <b>Method</b> (Department of Building and Housing [...]...|$|R
40|$|This report {{presents}} a two-step components selection method to compose the components for compositional <b>verification.</b> This <b>method</b> employs different methods for {{the selection of}} components to be composed during compositional verification. Also, this report presents some automata transformation strategies to improve the efficiency of composing and projection. This enhanced compositional <b>verification</b> <b>method</b> is applied {{to a set of}} large and complex realistic industrial examples to evaluate and compare the performance of different methods for components selection. The example profisafe_i 6 [MM 03] [MM 02] [PN 02], which was never verified for the language inclusion check before, is verified first by this enhanced compositional <b>verification</b> <b>method...</b>|$|R
40|$|This thesis proposes <b>verification</b> <b>method</b> for performance-based seismic {{design of}} the steel bridge pier with inner {{cruciform}} plates. The ultimate state of the segment of the steel bridge pier with inner cruciform plates should been investigated through finite element analysis. Then, the ultimate state is {{used to evaluate the}} seismic ductility of steel bridge pier under ground motions of one horizontal direction and two horizontal directions. The <b>verification</b> <b>method</b> for performance-based seismic {{design of the}} steel bridge pier with inner cruciform plates was discussed...|$|R
50|$|The PDR {{demonstrates}} that the preliminary design meets all system requirements with acceptable risk and within the cost and schedule constraints and establishes the basis for proceeding with detailed design. It will show that the correct design options have been selected, interfaces have been identified, and <b>verification</b> <b>methods</b> have been described.|$|E
50|$|The Digital Policy Alliance {{is funded}} by digital {{technology}} companies, and informs members of parliament in the UK and the EU on policy issues that affect online and digital technologies. The DPA has a working group to create age <b>verification</b> <b>methods</b> {{that can be used}} to comply with the expected new laws.|$|E
5000|$|In ESL {{design and}} {{verification}}, verification testing {{is used to}} prove {{the integrity of the}} design of the system or device. Numerous verification techniques may be applied; these test methods are usually modified or customized to better accommodate the system or device under test. Common ESL <b>verification</b> <b>methods</b> include, but are not limited to: ...|$|E
50|$|The CGA <b>verification</b> <b>method,</b> {{in which}} a public key is {{verified}} to be bound to a CGA, requires the corresponding CGA Parameters data structure as input and can be implemented as follows.|$|R
40|$|AbstractThis {{paper is}} an {{overview}} of our results on the application of abstract interpretation concepts to the derivation of a <b>verification</b> <b>method</b> for logic programs. These include the systematic design of semantics modeling various proof methods and the characterization of assertions as abstract domains. We first apply the verification framework defined in [5] to derive inductive sufficient conditions for partial correctness. Then the domain of assertions is formalized as an abstract domain. We can therefore derive an assertion based <b>verification</b> <b>method.</b> We finally show two methods based on different assertion languages: a decidable assertion language and Horn clause logic used as assertion language...|$|R
40|$|This paper {{proposes a}} noise-robust speaker <b>verification</b> <b>method</b> {{augmented}} by fundamental frequency (F 0). The paper first describes a noise-robust F 0 extraction method using the Hough transform. Then, it proposes a robust speaker <b>verification</b> <b>method</b> using multi-stream HMMs which fuse the extracted F 0 and cepstral features. Experiments are conducted using fourconnected -digit utterances of Japanese by 37 male speakers recorded at five sessions over a half year period. The utterances are contaminated with white noise at various SNR levels. Experimental {{results show that}} the F 0 features improve the verification performance in all SNR conditions...|$|R
50|$|Personal carbon credits {{were first}} {{introduced}} by My Emissions Exchange in April 2009. Some experts on carbon credit markets {{have called for}} inclusion of small scale GHG reduction projects and <b>verification</b> <b>methods</b> that are valid, appropriate and cost effective for projects of this size. Personal carbon credits address this need and create more opportunities for GHG reductions.|$|E
50|$|The {{military}} specification MIL-L-63460 {{describes the}} performance requirements and <b>verification</b> <b>methods</b> for {{a type of}} Lubricant, Cleaner and Preservative for Weapons and Weapons Systems. The product is for use in cleaning, lubricating and short-term preservation of both small and large caliber military weapons, operating in the temperature range of -51 to + 71 °C (-60 to +160 °F).|$|E
50|$|Pierre Wolper is a Belgian {{computer}} {{scientist at the}} University of Liège. His research interests include <b>verification</b> <b>methods</b> for reactive and concurrent programs, as well as temporal databases. He is the co-recipient of the 2000 Gödel Prize, along with Moshe Y. Vardi, {{for his work on}} temporal logic with finite automata. He also received the 2005 Paris Kanellakis Award for this work.|$|E
40|$|This {{paper is}} an {{overview}} of our results on the application of abstract interpretation concepts to the derivation of a <b>verification</b> <b>method</b> for logic programs. These include the systematic design of semantics modeling various proof methods and the characterization of assertions as abstract domains. We first apply the verification framework defined in [5] to derive inductive sufficient conditions for partial correctness. Then the domain of assertions is formalized as an abstract domain. We can therefore derive an assertion based <b>verification</b> <b>method.</b> We finally show two methods based on different assertion languages: a decidable assertion language and Horn clause logic used as assertion language...|$|R
30|$|The {{proposed}} <b>verification</b> <b>method</b> {{significantly increased}} {{the speed of}} verification on the final production line, {{by a factor of}} 5 [35]. Proposed implementation on dedicated DSP platform further increased the speed of execution.|$|R
50|$|All {{requirements}} {{should be}} verifiable. The most common method is by test. If {{this is not}} the case, another <b>verification</b> <b>method</b> should be used instead (e.g. analysis, demonstration, inspection, or review of design).|$|R
