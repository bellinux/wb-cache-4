0|10000|Public
50|$|Similarly the ‘Orientation’ of {{components}} is a visual <b>verification</b> <b>of</b> component body <b>markings.</b> A polarized capacitor can be marked wrongly by the component manufacturer and the AOI will ‘pass’ {{it if the}} component even it fails electrically.|$|R
40|$|AbstractIn this paper, we {{revisit the}} forward and {{backward}} approaches to the <b>verification</b> <b>of</b> extensions of infinite state Petri Nets. As contributions, we propose an efficient data structure to represent infinite downward closed sets <b>of</b> <b>markings</b> and to compute symbolically the minimal coverability set of Petri Nets, we identify a subclass of Transfer Nets for which the forward approach generalizes and we propose a general strategy to use both the forward and the backward approach for the efficient <b>verification</b> <b>of</b> general Transfer Nets...|$|R
40|$|We {{consider}} <b>verification</b> <b>of</b> safety {{properties for}} concurrent real-timed systems modelled as timed Petri nets, by performing symbolic forward reachability analysis. We introduce a formalism, called region generators for representing sets <b>of</b> <b>markings</b> <b>of</b> timed Petri nets. Region generators characterize downward closed sets of regions, and provide exact abstractions of sets of reachable states {{with respect to}} safety properties. We show that the standard operations needed for performing symbolic reachability analysis are computable for region generators. Since forward reachability analysis is necessarily incomplete, we introduce an acceleration technique to make the procedure terminate more often on practical examples. We have implemented a prototype for analyzing timed Petri nets {{and used it to}} verify a parameterized version of Fischer’s protocol, Lynch and Shavit’s mutual exclusion protocol and a producer-consumer protocol. We also used the tool to extract finite-state abstractions of these protocols...|$|R
40|$|In this paper, {{we propose}} a formal {{description}} for the dynamic <b>verification</b> <b>of</b> an Object-Rule Hybrid Knowledge-based System (HKBS), {{capitalizing on the}} work carried out within the <b>verification</b> framework <b>of</b> Frame-Rule Hybrid Expert Systems. The main idea is to model an HKBS {{by means of a}} Colored Petri Network (CPN). In this way, method invocations, state class changes, rules and productions will be modeled as components of the CPN. Detection and analysis of the HKBS will be carried out by the construction and analysis <b>of</b> the <b>markings</b> graph, which results from the inference process...|$|R
500|$|First {{principles}} of the use <b>of</b> <b>markings</b> with obliterative shading ...|$|R
500|$|Birds, etc. The {{inherent}} 'obliterative' power <b>of</b> <b>markings.</b> 'Ruptive' and 'Secant' patterns ...|$|R
50|$|The {{species name}} {{refers to the}} absence <b>of</b> <b>markings</b> on the forewings.|$|R
5000|$|Birds, etc. The {{inherent}} 'obliterative' power <b>of</b> <b>markings.</b> 'Ruptive' and 'Secant' patterns ...|$|R
5000|$|Male: Above, {{brownish}} {{black and}} unmarked {{except for a}} row <b>of</b> <b>markings.</b>|$|R
40|$|This paper {{presents}} a symbolic model checking methodology for speed-independent circuit <b>verification.</b> The behavior <b>of</b> {{the environment is}} described by using Petri nets. Commonly, this Petri net will be an STG (Signal Transition Graph [RY 85, Chu 87]), where events usually represent signal transitions. As some approaches use STGs for synthesis, we can directly verify circuits synthesized with these methodologies. The verification technique is based on symbolic BDD-based reachability analysis, modeling both the specification and the gate-level network behavior by means of boolean functions. We present the isomorphism between sets <b>of</b> <b>markings</b> <b>of</b> a safe Petri net with n places and the boolean algebra of n-variable logic functions. Each marking is represented by a minterm of B n, and each set <b>of</b> <b>markings</b> M is represented by a characteristic function, i. e. a function that evaluates one for all those markings that belong to M. We describe the transition functions to calculate the [...] ...|$|R
5000|$|... #Caption: A BAC TSR-2 in {{anti-flash}} white {{showing the}} types <b>of</b> <b>markings</b> applied ...|$|R
5000|$|... #Caption: Jack Russell terriers come in {{a variety}} of coat types, and with a range <b>of</b> <b>markings.</b>|$|R
60|$|Guinea-fowl, monogamous; {{occasional}} polygamy <b>of</b> the; <b>markings</b> <b>of</b> the.|$|R
5000|$|Although not {{strictly}} {{part of the}} designation, a number <b>of</b> <b>markings</b> are often found on integrated circuit packages: ...|$|R
5000|$|<b>Verification</b> <b>of</b> Mortgage (VOM) or <b>Verification</b> <b>of</b> Payment (VOP) ...|$|R
25|$|Fiber-optic sights for handguns, rifles, and {{shotguns}} use {{pieces of}} optical fiber to improve visibility <b>of</b> <b>markings</b> on the sight.|$|R
50|$|Also, {{there are}} lots <b>of</b> <b>markings</b> {{indicating}} things such as ornaments. Most of these were later created by Ki-su Kim.|$|R
40|$|A {{deductive}} {{approach to}} <b>verification</b> <b>of</b> telecommunication systems written in C is proposed. The approach {{is based on}} the extension of C by declarative statements and on reduction <b>of</b> <b>verification</b> <b>of</b> parallel communicating components of these systems to separate <b>verification</b> <b>of</b> components written in this extension. An example <b>of</b> <b>verification</b> <b>of</b> a data link protocol is considered. </p...|$|R
40|$|We {{produce a}} {{sequence}} <b>of</b> <b>markings</b> S_k <b>of</b> Thompson's group F within the space G_n of all marked n-generator groups {{so that the}} sequence (F,S_k) converges to the free group on n generators, for n ≥ 3. In addition, we give presentations for the limits of some other natural (convergent) sequences <b>of</b> <b>markings</b> to consider on F within G_ 3, including (F,{x_ 0,x_ 1,x_n}) and (F,{x_ 0,x_ 1,x_ 0 ^n}). Comment: 13 page...|$|R
40|$|Degenerations of Lie algebras of meromorphic vector {{fields on}} {{elliptic}} curves (i. e. complex tori) which are holomorphic outside a certain set <b>of</b> points (<b>markings)</b> are studied. By an algebraic geometric degeneration process certain subalgebras of Lie algebras of meromorphic vector fields on P 1 the Riemann sphere are obtained. In case of some natural choices <b>of</b> the <b>markings</b> these subalgebras are explicitly determined. It is {{shown that the}} number <b>of</b> <b>markings</b> can change...|$|R
50|$|Fiber optic sights for handguns, rifles, and {{shotguns}} use {{pieces of}} optical fiber to improve visibility <b>of</b> <b>markings</b> on the sight.|$|R
50|$|The {{under side}} is of a lighter colour, {{with the same}} kind <b>of</b> <b>markings,</b> but fainter. The {{wingspan}} is about 2 inches.|$|R
40|$|This {{thesis is}} {{dedicated}} to the automatic and formal <b>verification</b> <b>of</b> the heap propertiesofobjectorientedprograms. Programverificationisthecheckthat a given program satisfies given properties. Program verification is called formal if both the semantics of the specifications and the program execution are defined formally as mathematical entities. The verification is called automatic if it is performed automatically without interaction or with limited interaction with a user. Our approach is targeted towards the <b>verification</b> <b>of</b> the preservation of heap-topological properties. It is also aimed towards the <b>verification</b> <b>of</b> the effects and the frame properties of the program statements. Automatic <b>verification</b> <b>of</b> heap structures is crucial for the <b>verification</b> <b>of</b> multi-object invariants, the <b>verification</b> <b>of</b> concurrent programs (e. g., absence of race conditions and deadlocks), software engineering (e. g., enabling encapsulation and modular development, handlingdesign patterns), and the <b>verification</b> <b>of</b> security properties (e. g., isolation) ...|$|R
25|$|In April 1940 a {{standardised}} system <b>of</b> <b>markings</b> for British vehicles {{was introduced}} {{to take account of}} the mass mechanisation of the army.|$|R
50|$|Medical {{terminology}} {{for these}} kinds <b>of</b> <b>markings</b> includes striae atrophicae, vergetures, stria distensae, striae cutis distensae, lineae atrophicae, linea albicante, or simply striae.|$|R
50|$|In 1902, Pickford was {{responsible}} for the introduction <b>of</b> <b>markings</b> on the pitch, marking the penalty area, the penalty spot and the goal area.|$|R
5000|$|JIS C 60068-2 Environmental testing -- Part 2: Tests -- Test Xb: Abrasion <b>of</b> <b>markings</b> and letterings {{caused by}} rubbing of fingers and hands ...|$|R
40|$|Abstract. We {{produce a}} {{sequence}} <b>of</b> <b>markings</b> Sk <b>of</b> Thompson’s group F within the space Gn of all marked n-generator groups {{so that the}} sequence (F, Sk) converges to the free group on n generators, for n ≥ 3. In addition, we give presentations for the limits of some other natural (convergent) sequences <b>of</b> <b>markings</b> to consider on F within G 3, including (F, {x 0, x 1, xn}) and (F, {x 0, x 1, x n 0 }). 1...|$|R
40|$|ISBN: 0444893679 The {{application}} of BDD-based proof methods {{to the formal}} <b>verification</b> <b>of</b> HDL constructs is discussed. Applications include the <b>verification</b> <b>of</b> combinational circuits specified by means <b>of</b> vector-expressions, the <b>verification</b> <b>of</b> the logic of processors, the equivalence-roof of synchronous finite-state machines, and symbolic model-checking...|$|R
5000|$|<b>Verification</b> <b>of</b> program {{evaluation}} processes of university programs in Quebec through its Commission <b>of</b> <b>verification</b> <b>of</b> {{program evaluation}} (CVEP) ...|$|R
5000|$|The use <b>of</b> <b>markings</b> on British {{military}} vehicles {{expanded and}} became more sophisticated following the mass production and mechanization of armies in World War II.|$|R
40|$|We {{establish}} {{conditions under}} which the experimental <b>verification</b> <b>of</b> quantum error-correcting behavior against a linear set of error operators suffices for the <b>verification</b> <b>of</b> noiseless subsystems of an error algebra contained in. From a practical standpoint, our results imply that the <b>verification</b> <b>of</b> a noiseless subsystem need not require the explicit <b>verification</b> <b>of</b> noiseless behavior for all possible initial states of the syndrome subsystem. Comment: 6 pages, no figures, REVTeX 4 styl...|$|R
2500|$|Most {{depictions of}} Buddha contain {{a certain number}} <b>of</b> <b>markings,</b> which are {{considered}} the signs of his enlightenment. These signs vary regionally, but two are common: ...|$|R
30|$|The <b>verification</b> <b>of</b> {{this step}} follows {{the same pattern}} as in the <b>verification</b> <b>of</b> Step  4 in the proof of Theorem  3.1.|$|R
40|$|The {{following}} {{topics are}} covered in viewgraph form: (1) introduction to clock synchronization protocols; (2) a schematic formulation of clock synchronization; (3) the interactive convergence algorithm; (4) <b>verification</b> <b>of</b> Schneider's formulation; (5) <b>verification</b> <b>of</b> interactive convergence; (6) a hardware-oriented clock synchronization protocol; (7) <b>verification</b> <b>of</b> Infis/Moore's protocol; and (8) the EHDM specification/verification environment...|$|R
5000|$|Cremers' {{publications}} cover security, cryptography, ISO standards, automated <b>verification</b> <b>of</b> security protocols, {{and formal}} methods. His thesis was entitled [...] "Scyther - Semantics and <b>Verification</b> <b>of</b> Security Protocols", and was supervised by Sjouke Mauw and Erik de Vink. Also published with Sjouke Mauw is their book [...] "Operational Semantics and <b>Verification</b> <b>of</b> Security Protocols".|$|R
