4|11|Public
40|$|International audienceThe {{large-scale}} {{adoption of}} vehicle-to-vehicle (V 2 V) communication technologies risks to significantly widen the attack surface available to mobile malware targeting critical automobile operations. Given that outbreaks of <b>vehicular</b> <b>computer</b> worms self-propagating through V 2 V links {{could pose a}} significant threat to road traffic safety, {{it is important to}} understand the dynamics of such epidemics and to prepare adequate countermeasures. In this paper we perform a com- prehensive characterization of the infection process of variously behaving vehicular worms throughout a road traffic scenario of unprecedented scale and heterogeneity. We then propose a simple yet effective data-driven model of the worm epidemics, and we show how it can be leveraged for smart patching infected vehicles through the cellular network in presence of a vehicular worm outbreak...|$|E
30|$|In this study, each vehicle conserves a {{key pair}} to encryption/decrypt data at the VANET {{initialization}}. In addition, various public key cryptographies {{were applied to}} the initialization process. Some participants establish a session key using their public key cryptography, and therefore hash and session key operations are adopted to consume few overheads and to improve the encryption/decryption performance. Vehicle exploits a hash function such as HMAC- 160 or RIPEMD- 160 to verify the integrity of data communication in our evaluation. Each <b>vehicular</b> <b>computer</b> in our experimental environment is implemented using a Linux platform PC with a 2.4 GHz CPU, 1 GB of memory as hardware and supporting the GNU C/C++ library, which will have enough capability to implement Elliptic Curve and RSA cryptographies. This study evaluated the eclipsed time of propagating traffic-related packets, the key synchronization time in the global and virtual groups, and the delay results of comparing our schemes with GDH [5], and GSIS [16].|$|E
3000|$|Although <b>vehicular</b> <b>computer</b> {{has enough}} storage and {{computational}} capabilities without power-supply problems, light-weight, and strict security schemes are still essential to timely process data transmission in fast changes of VANET's topology. It is applied {{in this research}} the Elliptic Curve Diffie-Hellman (ECDH) to establish group keys to achieve secure group communication. ECDH belonging to the elliptic curve cryptography is {{a variant of the}} Diffie-Hellman (DH) key agreement scheme, allowing that two parties create a common secret key over an insecure channel. ECDH with 160 -bit key lengths provides the same security level as the DH secret sharing protocol [2]. The original DH protocol with exponential operations needs a key of at least 1, 024 bits to achieve adequate security, and therefore includes additional computational overhead. For instance, vehicles A and B try to construct a shared key, and the public parameters (a prime and base point P as a well-known generator in DH, coefficients a and b, elliptic curve y 2 = x 3 + ax + b) must be set first. A or B must have an appropriate key pair for elliptic curve cryptography, comprising an ECC private key, k (a randomly selected integer) and public key Z (Z = kP). Both A and B have a key pair each. Then, A and B exchange their public keys, so that A and B calculate particularly a secret key, GK 1 (= k [...]...|$|E
3000|$|..., and β is a value {{proportional}} to the average propagation delay of one hop. In Equation (2), <b>vehicular</b> <b>computers</b> using the map-based service APIs such as GoogleMap [20] can easily calculate the approximate distance between two locations on a route in the digital map. The announcement information contains the GPS position of the TH.|$|R
40|$|An {{emergent}} wave {{of digital}} technology holds vast {{implications for the}} public sphere. Indeed, these new forms of mobile and ubiquitous systems, called pervasive computing, challenge some of our fundamental ideas about subjectivity, visibility, space, and the distinction between public and private. Together, these challenges reformulate our conception of the civic realm. From cell phones to wireless local area networks, smart buildings to embedded <b>vehicular</b> <b>computers,</b> an invisible web of digital technology already lies across the visible world creating new space for work, data, advertisement, investigation, communication, intimacy, and danger. This generation of computers is so well integrated with the environment {{that it will be}} difficult to distinguish between the two, which represents a profound transformation for everyday life. “Machines that fit the human environment instead of forcing humans to enter theirs will make using a computer as refreshing as taking a walk in the woods. ”-Mark Weiser (1991) In 1991, the late Mark Weiser wrote a prescient essay for Scientific America...|$|R
50|$|Streets of SimCity is a 1997 {{racing and}} <b>vehicular</b> combat <b>computer</b> game {{published}} by Maxis. One of the game's main attractions was {{the ability to}} explore any city created in SimCity 2000 by car in a cinematic style. The game, like SimCopter, is in full 3D and the player's vehicle can be controlled using a keyboard, a joystick, or a gamepad. Another notable feature is the game's network mode, in which players can play deathmatches with up to seven other individuals.|$|R
50|$|Streets of SimCity is a 1997 {{racing and}} <b>vehicular</b> combat <b>computer</b> game {{published}} by Maxis. One of the game's main attractions was {{the ability to}} explore any cities created in SimCity 2000 by car in a cinematic style. The game, like SimCopter, is in full 3D and the player's vehicle can be controlled using a keyboard, a joystick, or a gamepad. Another notable feature is the game's network mode, in which players can play deathmatches with up to seven other individuals. Notably, {{it is one of}} the few games in the Maxis series that Will Wright did not work on, and the last Maxis game to be developed and released without supervision by Electronic Arts (which acquired Maxis in 1997 and assisted development of Maxis games thereafter).|$|R
40|$|Abstract—There are {{currently}} 1. 6 billion mobile devices like cellphones and PDAs {{in the world}} today, and the numbers are rapidly growing. Improvements in computation power and storage on the devices has led towards support for many new applications. However, as the demand for data consumption by high bandwidth applications increases, the limited and shared wireless resource {{is likely to become}} a bottleneck in terms of its capacities and ubiquitous availability. Solutions like overlayed heterogeneous networks, intelligent network deployment, and spectrum management try to tackle certain issues to improve wireless resource utilization, but a big problem faced by each of these methods is the difficulty in collecting real-time data about the wireless environment. Large-scale continuous monitoring of the wireless medium is difficult because of the huge scale of deployment and the dynamic behavior of the medium. We propose a novel solution to real time wireless monitoring that can help each of these methods to work more efficiently. We do this by collection of feedback of the network state from mobile devices and on-board <b>vehicular</b> <b>computers,</b> followed by analysis of the data in an online as well as offline manner. In this paper, we present an application framework to enable the use of mobile devices as sensors, and outline a number of interesting applications that can be created on the framework. We identify suitable tools to be used on the client as well as the server side, data models for efficient storage and retrieval of sensor data, and wavelet based mining techniques to work on this data. We show that making such a framework is a very rich research area that brings together wireless communication, databases, and statistics, and contains many open problems. I...|$|R
2500|$|Streets of SimCity is a 1997 {{racing and}} <b>vehicular</b> combat <b>computer</b> game {{published}} by Maxis. [...] One of the game's main attractions was {{the ability to}} explore any [...] cities created in SimCity 2000 by car in a cinematic style. The game, like SimCopter, is in full 3D and the player's vehicle can be controlled using a keyboard, a joystick, or a gamepad. Another notable feature is the game's network mode, in which players can play deathmatches with up to seven other individuals. Notably, {{it is one of}} the few games in the Maxis series that Will Wright did not work on, and the last Maxis game to be developed and released without supervision by Electronic Arts (which acquired Maxis in 1997 and assisted development of Maxis games thereafter).|$|R
40|$|Numerous {{problems}} {{exist that}} can be modeled as traffic through a network in which constraints exist to regulate flow. <b>Vehicular</b> road travel, <b>computer</b> networks, and cloud based resource distribution, among others all have natural representations in this manner. As these networks grow in size and/or complexity, analysis and certification of the safety invariants becomes increasingly costly. The NetSketch formalism introduces a lightweight verification framework that allows for greater scalability than traditional analysis methods. The NetSketch tool was developed to provide {{the power of this}} formalism in an easy to use and intuitive user interface. National Science Foundation (CNS- 0952145, CCF- 0820138, CSR- 0720604, EFRI- 0735974...|$|R
40|$|Numerous domains {{exist in}} which {{systems can be}} modeled as {{networks}} with constraints that regulate the flow of traffic. Smart grids, <b>vehicular</b> road travel, <b>computer</b> networks, and cloudbased resource distribution, among others all have natural representations in this manner. As these systems grow in size and complexity, analysis and certification of safety invariants becomes increasingly costly. The NetSketch formalism and toolset introduce a lightweight framework for constraint-based modeling and analysis of such flow networks. NetSketch offers a processing method based on type-theoretic notions that enables large scale safety verification by allowing for compositional, as opposed to whole-system, analysis. Furthermore, by applying types to the modeled networks, analysis of composite modules containing incomplete or underspecified components can be conducted. Here we describe various use cases for such modeling tasks, and walk {{through the development of}} appropriate NetSketch models. ...|$|R
40|$|Numerous domains {{exist in}} which {{systems can be}} modeled as {{networks}} with constraints that regulate the ow of trac. Smart grids, <b>vehicular</b> road travel, <b>computer</b> networks, and cloud- based resource distribution, among others all have natural representations in this manner. As these systems grow in size and complexity, analysis and certication of safety invariants becomes increasingly costly. The NetSketch formalism and toolset introduce a lightweight framework for constraint-based modeling and analysis of such ow networks. NetSketch oers a processing method based on type-theoretic notions that enables large scale safety verication by allowing for compositional, as opposed to whole-system, analysis. Furthermore, by applying types to the modeled networks, analysis of composite modules containing incomplete or underspecied components can be conducted. Here we describe various use cases for such modeling tasks, and walk {{through the development of}} appropriate NetSketch models. National Science Foundation (CNS- 0952145, CCF- 0820138, CSR- 0720604, CNS- 1012798, EFRI- 0735974...|$|R
40|$|Constrained flow network models {{represent}} systems where flows {{exists between}} nodes, and constraints exist to regulate those flows. Smart grids, <b>vehicular</b> road travel, <b>computer</b> networks, and cloud-based resource distribution, among other domains all have natural representations in this manner. As these systems grow {{in size and}} complexity, traditional analysis and certification of safety invariants becomes increasingly costly. In addition today's techniques require the system to be fully specified in order to perform meaningful analysis. The NetSketch formalism and toolset introduce a lightweight framework for modeling and analysis of constrained flow networks that overcomes these issues. NetSketch offers a processing method based on type-theoretic notions that enables large scale safety verification by allowing for compositional, as opposed to whole-system, analysis. By inferring types for sub-graphs of the modeled networks, not only can cost of analysis be greatly reduced, but analysis of composite modules containing incomplete or underspecified components can be conducted. The NetSketch tool exposes {{the power of this}} formalism in an intuitive web-based graphical user interface. This work describes the formalism, a type system, as well as an implementation. In addition potential use cases for this type of modeling and analysis are investigated, and connections are drawn to existing modeling tools and techniques...|$|R
40|$|Recent {{years have}} {{witnessed}} {{a significant change}} to vehicular user interfaces (UI). This {{is the result of}} increased functionality, triggered by the continuous proliferation of <b>vehicular</b> software and <b>computer</b> systems. The UI represents the integration point that must fulfil particular requirements for usability despite the increased functionality. A concurrent present trend is the substitution of federated systems with integrated architectures. The steadily rising number of interacting functional components and the increasing integration density implies a growing complexity that has an effect on system development. This evolution raises demands for concepts that aid the composition of such complex and interactive embedded software systems, operated within safety critical environments. This thesis explores the requirements related to composability of software components, based on the example of In-Car Multimedia (ICM). This thesis proposes a novel software architecture that provides an integration path for next-generation ICM. The investigation begins with an examination of characteristics, existing frameworks and applied practice regarding the development and composition of ICM systems. To this end, constructive aspects are identified as potential means for improving composability of independently developed software components that differ in criticality, temporal and computational characteristics. This research examines the feasibility of partitioning software components by exploitation of parallel hardware architectures. Experimental evaluations demonstrate the applicability of encapsulated scheduling domains. These are achieved through the utilisation of multiple technologies that complement each other and provide different levels of containment, while featuring efficient communication to preserve adequate interoperability. In spite of allocating dedicated computational resources to software components, certain resources are still shared and require concurrent access. Particular {{attention has been paid to}} management of concurrent access to shared resources to consider the software components' individual criticality and derived priority. A software based resource arbiter is specified and evaluated to improve the system's determinism. Within the context of automotive interactive systems, the UI is of vital importance, as it must conceal inherent complexity to minimise driver distraction. Therefore, the architecture is enhanced with a UI compositing infrastructure to facilitate implementation of a homogenous and comprehensive look and feel despite the segregation of functionality. The core elements of the novel architecture are validated both individually and in combination through a proof-of-concept prototype. The proposed integral architecture supports the development and in particular the integration of mixed-critical and interactive systems...|$|R

