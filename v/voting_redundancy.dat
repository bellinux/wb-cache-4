1|12|Public
40|$|The {{processes}} of protective redundancy, namely, standby replacement (SR) redundancy and hybrid redundancy (a combination of SR and multiple-line <b>voting</b> <b>redundancy),</b> find application in {{the architecture of}} fault-tolerant digital computers and enable them to be ultrareliable and self-repairing. The claims to ultrareliability lead {{to the challenge of}} quantitatively evaluating and assigning a value to the probability of survival {{as a function of the}} mission durations intended. This note presents various mathematical models, and derives and displays quantitative evaluations of system reliability as a function of various mission parameters of interest to the system designer...|$|E
5000|$|Whilst {{the band}} is playing in the National Semi-Finals, {{the outcome of the}} ballot is {{announced}} as 4-to-1 in favour of redundancy, as Andy had predicted. (It is later implied that, of the five miners who make up the main characters, four of them had <b>voted</b> for <b>redundancy</b> and only Andy had voted for the review procedure.) ...|$|R
50|$|In {{order to}} utilize the {{existing}} <b>redundancy,</b> <b>voting</b> algorithms need to be evaluated, modified and adopted to meet the stringent requirements of a brake-by-wire system. Reliability, fault tolerance and accuracy are the main targeted outcomes of the voting techniques that should be developed especially for redundancy resolution inside a brake-by-wire system.|$|R
40|$|We {{present the}} formal {{verification}} of synchronizing {{aspects of the}} Reliable Computing Platform (RCP), a fault-tolerant computing system for digital flight control applications. The RCP uses NMR-style redundancy to mask faults and internal majority voting to purge the effects of transient faults. The system design has been formally specified and verified using the Ehdm verification system. Our formalization {{is based on an}} extended state machine model incorporating snapshots of local processors' clocks. Key Words [...] Clock synchronization, correctness proofs, fault tolerance, formal methods, majority <b>voting,</b> modular <b>redundancy,</b> theorem proving, transient fault recovery. 1 Introduction NASA is engaged in a major research effort towards the development of a practical validation and verification methodology for digital fly-by-wire control systems. Researchers at NASA Langley Research Center (LaRC) are exploring formal verification as a candidate technology for the elimination of design err [...] ...|$|R
40|$|We {{present a}} formal {{verification}} of the transient fault recovery {{aspects of the}} Reliable Computing Platform (RCP), a fault-tolerant computing system architecture for digital flight control applications. The RCP uses NMR-style redundancy to mask faults and internal majority voting to purge the effects of transient faults. The system design has been formally specified and verified using the Ehdm verification system. Our formalization accommodates {{a wide variety of}} voting schemes for purging the effects of transients. Key Words [...] - Correctness proofs, fault tolerance, formal methods, majority <b>voting,</b> modular <b>redundancy,</b> theorem proving, transient fault recovery. 1 Introduction NASA Langley Research Center (LaRC) is exploring formal verification as a candidate technology for the elimination of design errors in digital fly-by-wire control systems. In previous reports [1, 2], we put forward a high level architecture for a reliable computing platform (RCP) based on fault-tolerant computing [...] ...|$|R
40|$|We {{present a}} formal model for fault-masking and transient-recovery among the {{replicated}} computers of digital flight-control systems. We establish {{conditions under which}} majority voting causes the same commands {{to be sent to}} the actuators as those that would be sent by a single computer that suffers no failures. The model and its analysis have been subjected to formal specification and mechanically checked verification using the Ehdm system. Keywords: digital flight control systems, formal methods, formal specification and verification, proof checking, fault tolerance, transient faults, majority <b>voting,</b> modular <b>redundancy</b> Contents 1 Introduction 1 1. 1 Digital Flight-Control Systems : : : : : : : : : : : : : : : : : : : : : 2 1. 2 Fault Tolerance for DFCS : : : : : : : : : : : : : : : : : : : : : : : : 3 1. 3 Formal Models for DFCS : : : : : : : : : : : : : : : : : : : : : : : : 11 1. 3. 1 Overview of the Fault-Masking Model Employed : : : : : : : 12 2 The Fault-Masking Model 17 2. 1 A M [...] ...|$|R
40|$|Many {{distributed}} systems maintain multiple replicas of their critical data {{to protect these}} data against equipment failures. When this is the case, a replication control protocol must be chosen to insure that a consistent view of the data is always presented. In this paper, we present a simple aggregation technique leading to closed form estimates {{of the availability of}} replicated objects whose replicas reside on networks subject to communication failures. We illustrate our technique by comparing the availabilities of replicated objects with three replicas managed by majority consensus voting (MCV), and dynamic-linear voting (DLV), under three different network configurations. Keywords: fault-tolerance, replicated systems, <b>redundancy,</b> <b>voting.</b> 1. Introduction Many applications depend on critical data that must remain available in the presence of equipment malfunctions. Recent advances in networking technology have made the replication of these data on several sites of a loca [...] ...|$|R
40|$|While Markov {{models have}} been {{extensively}} used to study the availability of replicated data, they cannot handle effectively network configurations where sites failures and network partitions have to be simultaneously considered. We had proposed in a previous paper a hierarchical decomposition method aimed at overcoming this limitation. While our method could provide closed form estimates {{of the availability of}} replicated objects whose replicas reside on networks subject to communication failures. We present here a simulation study measuring the quality of our estimates and attempting to improve upon them. KEYWORDS fault-tolerance, replicated systems, <b>redundancy,</b> <b>voting.</b> INTRODUCTION Managing replicated data can be a demanding task particularly when the replicas are stored at different sites of a computer network. Special replication control protocols have been devised to perform this task without user intervention and maintain the replicated data in a consistent state. Evaluating [...] ...|$|R
40|$|The {{distributed}} {{minority and}} majority <b>voting</b> based <b>redundancy</b> (DMMR) scheme was recently proposed as an efficient {{alternative to the}} conventional N-modular redundancy (NMR) scheme for the physical design of mission/safety-critical circuits and systems. The DMMR scheme enables significant improvements in fault tolerance and design metrics compared to the NMR scheme albeit {{at the expense of}} a slight decrease in the system reliability. In this context, this paper studies the system reliability, fault tolerance and design metrics tradeoffs in the DMMR scheme compared to the NMR scheme when the majority logic group of the DMMR scheme is increased in size relative to the minority logic group. Some example DMMR and NMR systems were realized using a 32 / 28 nm CMOS process and compared. The results show that 5 -of-M DMMR systems have a similar or better fault tolerance whilst requiring similar or fewer function modules than their counterpart NMR systems and simultaneously achieve optimizations in design metrics. Nevertheless, 3 -of-M DMMR systems have the upper hand with respect to fault tolerance and design metrics optimizations than the comparable NMR and 5 -of-M DMMR systems. With regard to system reliability, NMR systems are closely followed by 5 -of-M DMMR systems which are closely followed by 3 -of-M DMMR systems. The verdict is 3 -of-M DMMR systems are preferable to implement higher levels of redundancy from a combined system reliability, fault tolerance and design metrics perspective to realize mission/safety-critical circuits and systems...|$|R
40|$|Voting {{protocols}} {{ensure the}} consistency of replicated data objects by disallowing all read and write requests that cannot collect the appropriate quorum of replicas. Voting protocols require a minimum number of three copies to be of any practical use and often disallow a relatively high number of read and write requests. We present here a voting protocol overcoming this limitation and providing {{a significant amount of}} faulttolerance with as little as two replicas. Voting with Bystanders (VWB), as this protocol is named, applies to all networks consisting of LAN segments that are immune to partial failures linked by gateways that might fail. A stochastic analysis of the protocol under general Markovian assumptions is presented showing that VWB provides excellent read availabilities and good write availabilities with as little as two or three replicas. Keywords: file consistency, distributed file systems, replicated files, <b>voting.</b> 1. INTRODUCTION <b>Redundancy</b> has been widely used to in [...] ...|$|R
5000|$|The passionate band conductor, Danny Ormondroyd, finds he is {{fighting}} {{a losing battle}} to keep {{the rest of the}} band members committed. His son Phil is badly in debt and becomes a clown for children's parties, but fails to prevent his wife and children walking out on him. In debt, Phil <b>votes</b> for the <b>redundancy</b> money, which he becomes ashamed of. As Danny collapses in the street and is hospitalised, Phil suffers a mental breakdown while entertaining a group of children as part of a harvest festival in a church. He refers to himself as [...] "Coco the scab"â€”a name that he had been called by a debt collector who he had asked to wait until the redundancy money had come through. Eventually he attempts suicide by trying to hang himself, but is taken to the hospital. Phil reveals to Danny that in light of the colliery's closure, the band has decided not to continue playing.|$|R
40|$|Abstract. SITAR is an {{architecture}} that incorporates the fundamental ideas of fault tolerant computing such as <b>redundancy,</b> <b>voting,</b> and adaptive reconfigu-ration, along with acceptance testing in a security setting, {{in order to}} enable commercial-off-the-shelf servers to continue providing service {{in the presence of}} intrusion or partial compromise. This paper presents the integrated adaptive reconfiguration feature of the SITAR system, which can dynamically change the system configuration in response to the changes in level of intrusion threat in order to maintain service availability. The reconfiguration mechanism has im-plications on the system design and operation, more specifically the oscillation phenomenon. The discussion covers important aspects of the SITAR adaptive re-configuration mechanism, including a generic algorithm of its operation, and how it addresses the oscillation problem. In order to actively manage the reconfigura-tion process and reduce the tendency toward disruptive oscillations, the ARM design incorporates mechanisms according to the feedback loop model and em-ploys several strategies, such as mutual exclusion, steady state monitoring and system observation, for cooperative control. This adaptive mechanism has been implemented and demonstrated as part of the SITAR prototype system. ...|$|R
40|$|Electronic {{circuits}} {{and systems}} used in mission and safety-critical applications usually employ redundancy {{in the design}} to overcome arbitrary fault(s) or failure(s) and guarantee the correct operation. In this context, the distributed minority and majority <b>voting</b> based <b>redundancy</b> (DMMR) scheme forms an efficient alternative to the conventional N-modular redundancy (NMR) scheme for implementing mission and safety-critical circuits and systems by significantly minimizing their weight and design cost and also their design metrics whilst providing a similar degree of fault tolerance. This article presents the first FPGAs based implementation of example DMMR circuits and compares it with counterpart NMR circuits {{on the basis of}} area occupancy and critical path delay viz. area-delay product (ADP). The example DMMR circuits and counterpart NMR circuits are able to accommodate the faulty or failure states of 2, 3 and 4 function modules. For physical synthesis, two commercial Xilinx FPGAs viz. Spartan 3 E and Virtex 5 corresponding to 90 nm and 65 nm CMOS processes, and two radiation-tolerant and military grade Xilinx FPGAs viz. QPro Virtex 2 and QPro Virtex E corresponding to 150 nm and 180 nm CMOS processes were considered for the NMR and DMMR circuit realizations which employ the 4 -by- 4 array multiplier as a representative function module. To achieve a fault tolerance of 2 function modules, both the DMMR and the NMR schemes provide near similar mean ADPs across all the four FPGAs. But while achieving a fault tolerance of 3 function modules the DMMR features reduced ADP by 44. 5 % on average compared to the NMR, and in achieving a fault tolerance of 4 function modules the DMMR reports reduced ADP by 56. 5 % on average compared to the NMR with respect to all the four FPGAs considered...|$|R

