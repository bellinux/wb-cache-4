1253|1291|Public
5|$|SpaceChem was ported to the iPad in October 2011, using touch {{controls}} {{instead of}} mouse and keyboard {{to manipulate the}} visual program. An Android port was released in July 2012. Both mobile platforms include most of the full game excluding the defense puzzles. The sandbox mode was added {{at the request of}} a player who was trying to explore SpaceChem computational abilities. Alongside the sandbox mode, Zactronics offered a contest for the most interesting sandbox creation. This same user was able to demonstrate a brainfuck interpreter within SpaceChem, claiming that the <b>visual</b> <b>programming</b> language was Turing complete. Barth has mentioned the possibility of a sequel in an interview with IndieGamer.|$|E
25|$|Tile-based, limited <b>visual</b> <b>programming</b> {{scripting}} in Etoys, {{based on}} Morphic.|$|E
25|$|The <b>visual</b> <b>programming</b> {{language}} Max, {{released by}} Cycling '74, offers a JavaScript model of its environment {{for use by}} developers. It allows users to reduce visual clutter by using an object for a task rather than many.|$|E
5000|$|Modules: The {{building}} blocks (visualization tools) that constitute a <b>visual</b> <b>program</b> network. They {{can be directly}} accessed and manipulated in the <b>Visual</b> <b>Program</b> Editor.|$|R
5000|$|<b>Visual</b> <b>Program</b> Editor (VPE): A {{graphical}} {{user interface}} for creating and modifying <b>visual</b> <b>programs</b> (networks). Programs created with this editor are translated into the scripting language by Data Explorer and are stored in that form.|$|R
5000|$|Scott Hansen - synthesizers, guitar, bass guitar, <b>visuals,</b> <b>programming</b> ...|$|R
25|$|In 2011 Dynamo was {{released}} in beta form allowing first glimpses of directly programming the behavior of hosted components through a drag and drop node interface. This {{is similar to the}} way the <b>visual</b> <b>programming</b> language Grasshopper 3d works on objects in Rhinoceros 3D.|$|E
500|$|SpaceChem is an indie puzzle game {{developed}} by Zachtronics Industries, based on principles of automation and chemical bonding. In the game, the player is tasked to produce {{one or more}} specific chemical molecules via an assembly line by programming two remote manipulators (called [...] "waldos" [...] in the game) that interact with atoms and molecules through a <b>visual</b> <b>programming</b> language. SpaceChem was the developer's first foray into a commercial title {{after a number of}} free Flash-based browser games that feature similar puzzle-based assembly problems.|$|E
2500|$|ArcGIS 9 was {{released}} in May 2004, which included ArcGIS Server and ArcGIS Engine for developers. The ArcGIS 9 release includes a geoprocessing environment that allows execution of traditional GIS processing tools (such as clipping, overlay, and spatial analysis) interactively or from any scripting language that supports COM standards. [...] Although {{the most popular of}} these is Python, others have been used, especially Perl and VBScript. [...] ArcGIS 9 includes a <b>visual</b> <b>programming</b> environment, similar to ERDAS IMAGINE's Model Maker (released in 1994, v8.0.2). The Esri version is called ModelBuilder and as does the ERDAS IMAGINE version allows users to graphically link geoprocessing tools into new tools called models. [...] These models can be executed directly or exported to scripting languages which can then execute in batch mode (launched from a command line), or they can undergo further editing to add branching or looping.|$|E
2500|$|... 2008: Whitney Museum of American Art, Whitney Independent Study <b>Program,</b> <b>Visual</b> <b>Program</b> ...|$|R
5000|$|... #Caption: OpenDX {{screen shot}} showing the <b>Visual</b> <b>Program</b> Editor and several {{interactors}} ...|$|R
5000|$|Control Panels: A user {{interface}} {{for changing the}} parameter values used by a <b>visual</b> <b>program.</b>|$|R
50|$|People expect 5GL {{to be easy}} to use, to be visual. There {{are many}} {{excellent}} <b>visual</b> <b>programming</b> languages and systems available now. One issue is that while each <b>visual</b> <b>programming</b> innovation has its unique advantages in some aspects it also has its limitations in other aspects. If different <b>visual</b> <b>programming</b> systems may work together then developers may take advantages of different systems and avoid the limitations. 5GL may solve the problem by being an abstraction layer for <b>visual</b> <b>programming.</b>|$|E
50|$|The second {{criterion}} {{requires the}} layer {{to be an}} abstraction for <b>visual</b> <b>programming</b> and {{makes it possible for}} different <b>visual</b> <b>programming</b> systems to work together.|$|E
5000|$|Microsoft <b>Visual</b> <b>Programming</b> Language, or MVPL, is a <b>visual</b> <b>programming</b> and {{dataflow}} {{programming language}} developed by Microsoft for the Microsoft Robotics Studio. The Microsoft <b>Visual</b> <b>Programming</b> Language is distinguished from other Microsoft programming languages such as Visual Basic and C#, {{as it is}} the only Microsoft language that is a true <b>visual</b> <b>programming</b> language. Microsoft has utilized the term [...] "Visual" [...] in its previous programming products to reflect that a large degree of development in these languages can be performed by [...] "dragging and dropping" [...] in a traditional wysiwyg fashion.|$|E
5000|$|Module Builder: A user {{interface}} for creating customized modules {{to be used}} in <b>visual</b> <b>programs.</b>|$|R
5000|$|Scripting Language: A {{high-level}} language for creating visualization programs. It {{can also be}} used directly in a command mode to perform various tasks. Visual programs—i.e., the visualization programs displayed in the <b>Visual</b> <b>Program</b> Editor window as networks of module icons—are also written in the scripting language. A <b>visual</b> <b>program</b> constructed in this window by the user is translated into the same language when it is saved to disk.|$|R
40|$|Syntax Graph Editing Pretty Printing Figure 1. 3 : A hybrid <b>visual</b> <b>program</b> editor with syntax {{analysis}} The language independent <b>visual</b> <b>program</b> {{editor of}} Fig. 1. 3 uses a graphical parser and scanner to combine individual objects into larger language specific combinations. The scanner activates the parser whenever objects {{are added to}} or removed from the <b>visual</b> <b>program</b> by the editor. The parser uses objects and relations of the spatial relations graph together {{with a description of}} the visual language to build new objects. These new objects are passed to the editor where they are used to update the <b>visual</b> <b>program.</b> The result of parsing is an abstract syntax graph which is used by the editor to guide structured editing. For example a drawing with four lines which form a rectangle (created with unstructured editing) is recognized by the syntax analyzer as a rectangle. This knowledge is used by the editor and it enables direct manipulation of the four lines as though it where a rectangle (str [...] ...|$|R
50|$|The AmigaBasic {{created by}} Microsoft, CanDO, and then Amiga Vision {{inspired}} Microsoft itself to {{an approach to}} <b>Visual</b> <b>programming</b> with their line of <b>Visual</b> <b>programming</b> languages, such as Visual Basic and others.|$|E
50|$|Features include: a <b>visual</b> <b>programming</b> tool, Microsoft <b>Visual</b> <b>Programming</b> Language for {{creating}} and debugging robot applications, web-based and windows-based interfaces, 3D simulation (including hardware acceleration), {{easy access to}} a robot's sensors and actuators. The primary programming language is C#.|$|E
5000|$|The [...] "visual {{languages}}" [...] (Visual Basic, Visual C#, Visual J#, etc.) of the Microsoft Visual Studio IDE are not <b>visual</b> <b>programming</b> languages. All {{of these}} languages are textual and not graphical. The MS Visual Studio is a <b>visual</b> <b>programming</b> environment, however.|$|E
5000|$|Image Window: An {{interactive}} {{window for}} viewing and modifying {{the presentation of}} the image produced by a <b>visual</b> <b>program.</b>|$|R
2500|$|Visual Studio [...]NET 2002 {{shipped in}} four editions: Academic, Professional, Enterprise Developer, and Enterprise Architect. Microsoft {{introduced}} C# (C-sharp), a new programming language, that targets [...]NET. It also introduced {{the successor to}} Visual J++ called Visual J#. <b>Visual</b> J# <b>programs</b> use Java's language-syntax. However, unlike <b>Visual</b> J++ <b>programs,</b> <b>Visual</b> J# <b>programs</b> can only target the [...]NET Framework, not the Java Virtual Machine that all other Java tools target.|$|R
5000|$|Visualizations {{are defined}} through a <b>visual</b> <b>program</b> {{created in the}} sandbox by linking {{together}} nodes of various types. The four basic types of Eye-Sys nodes are: ...|$|R
5000|$|... #Caption: Primitives in the <b>visual</b> <b>programming</b> {{language}} DRAKON ...|$|E
5000|$|TouchDesigner, <b>visual</b> <b>programming</b> {{language}} for real-time multimedia content ...|$|E
5000|$|Given a {{programming}} task, if <b>visual</b> <b>programming</b> system A and <b>visual</b> <b>programming</b> system B {{may be used}} {{to accomplish}} all or parts of the task then A and B may use the same representation of the abstraction layer for the parts of the task they both can accomplish.|$|E
5000|$|... 2005 - On May 12, 2005, Meadowcreek senior Hasan Soneji {{received}} 2nd {{place for}} FBLA-PBL in <b>Visual</b> Basic <b>Programming</b> at a statewide competition. Soneji represented Meadowcreek {{in a national}} competition located in Denver, Colorado, for <b>Visual</b> Basic <b>Programming.</b>|$|R
50|$|Viel is a {{co-author}} of the book - Biology: How Life Works. It is published by Macmillan Education and is the first project to develop three pillars: the text, the <b>visual</b> <b>program,</b> and the assessment at the same time.|$|R
50|$|The DRAKON Editor, {{which was}} {{released}} in September 2011, is an implementation of the language available in the public domain. It {{can be used for}} creating documentation, or for creating <b>visual</b> <b>programs</b> that can be converted to source code in other languages.|$|R
50|$|The {{following}} {{contains a}} list of <b>visual</b> <b>programming</b> languages.|$|E
5000|$|CryEngine has a node-based <b>visual</b> <b>programming</b> {{language}} called FlowGraph.|$|E
5000|$|CiMPLE, <b>Visual</b> <b>Programming</b> Language by ThinkLABs for {{teaching}} robotics ...|$|E
50|$|From {{an early}} age, Harold Tichenor {{along with his}} brother Jim, {{developed}} an avid interest in filmmaking. Their grandfather Archie Tichenor had made films and audio <b>visual</b> <b>programs</b> for the US Baha'i community and their uncle Allen Tichenor worked as a camera technician in NYC.|$|R
50|$|Kennedy {{began her}} long tenure at PICA as a {{volunteer}} and joined the Board of Trustees in 2002. She joined PICA's staff in 2003, managing public relations and marketing campaigns for the organization. In Summer 2005, Kennedy moved positions to manage the <b>Visual</b> <b>Program.</b>|$|R
5000|$|... #Caption: <b>Visual</b> IoT/Robotics <b>Programming</b> Language Environment LOGO ...|$|R
