15|1|Public
50|$|A similar process occurs for the {{vertical}} scan, {{but at the}} display refresh rate (typically 50 to 75 Hz). A complete field starts with a polarity that would place the beams beyond {{the top of the}} visible area, with {{the vertical}} component of the deflection field at maximum. After some tens of horizontal scans (but with the beams blanked), the vertical component of the unblank, combined with the horizontal unblank, permits the beams to show the first scan line. Once the last scan line is written, the vertical component of the magnetic field continues to increase by the equivalent of a few percent of the total height before the <b>vertical</b> <b>retrace</b> takes place. <b>Vertical</b> <b>retrace</b> is comparatively slow, occurring over a span of time required for several tens of horizontal scans. In analog CRT TVs, setting brightness to maximum typically made the <b>vertical</b> <b>retrace</b> visible as zigzag lines on the picture.|$|E
50|$|The {{physics of}} the CRT require that a finite time {{interval}} be allowed for the spot {{to move back to}} the start of the next line (horizontal retrace) or the start of the screen (<b>vertical</b> <b>retrace).</b> The timing of the luminance signal must allow for this.|$|E
5000|$|Most {{software}} DVD {{players do}} not assist with switching display modes, {{and even if}} it is switched manually, they hardly synchronize frame updating with the display's <b>vertical</b> <b>retrace</b> periods. (There is only soft synchronization using hardware double buffering, which is not enough to match hardware players in the stability of playback.) ...|$|E
50|$|In general, synchronizations is {{the process}} in which the signals are {{transmitted}} and received in accordance with the clock pulses. In synchronization of Television transmitter, a sharp pulse is sent between each video signal line so that to maintain the impeccable transmitter-receiver synchronization.The receiver detects the video signal, synchronizing the transmitter and receiver is necessary to overcome the delay between different video packet arrivals.The receiver must start scanning same line on the CRT output display or picture tube when the TV camera starts scanning that line, these are the horizontal lines that are being scanned. The scanning speed of transmitter and receiver must be same so as to avoid signal distortion and deformation at the image in receiver output.When horizontal lines are completely scanned, <b>vertical</b> flyback or <b>retrace</b> must occur simultaneously at both transmitter and receiver moving the electron beam from bottom line end {{to the start of the}} top line.When the electron beam is returned to the left-hand side to start tracing a new line during the horizontal retrace, must occur inadvertently at both transmitter and receiver.|$|R
50|$|For this reason, it is {{necessary}} to shut off the electron beam (corresponding to a video signal of zero luminance) during {{the time it takes to}} reorient the beam from the end of one line to the beginning of the next (horizontal retrace) and from the bottom of the screen to the top (<b>vertical</b> <b>retrace</b> or vertical blanking interval). The horizontal retrace is accounted for in the time allotted to each scan line, but the <b>vertical</b> <b>retrace</b> is accounted for as phantom lines which are never displayed but which are included in the number of lines per frame defined for each video system. Since the electron beam must be turned off in any case, the result is gaps in the television signal, which can be used to transmit other information, such as test signals or color identification signals.|$|E
50|$|The {{vertical}} sync signal {{is a series}} of much longer pulses, indicating {{the start of a new}} field. The sync pulses occupy the whole of line interval of a number of lines at the beginning and end of a scan; no picture information is transmitted during <b>vertical</b> <b>retrace.</b> The pulse sequence is designed to allow horizontal sync to continue during vertical retrace; it also indicates whether each field represents even or odd lines in interlaced systems (depending on whether it begins at the start of a horizontal line, or midway through).|$|E
50|$|CRT refresh {{rates have}} {{historically}} been {{an important factor in}} electronic game programming. Traditionally, one of the principles of video/computer game programming is to avoid altering the computer's video buffer except during the <b>vertical</b> <b>retrace.</b> This is necessary to prevent flickering graphics (caused by altering the picture in mid-frame) or screen tearing (caused by altering the graphics faster than the electron beam can render the picture). Some video game consoles such as the Famicom/Nintendo Entertainment System did not allow any graphics changes except during the retrace (the period when the electron guns shut off and return to the upper left corner of the screen).|$|E
5000|$|Due to {{the path}} {{followed}} by the video and Hi-Fi audio heads being striped and discontinuous—unlike that of the linear audio track—head-switching is required to provide a continuous audio signal. While the video signal can easily hide the head-switching point in the invisible <b>vertical</b> <b>retrace</b> section of the signal, so that the exact switching point is not very important, the same is obviously not possible with a continuous audio signal that has no inaudible sections. Hi-Fi audio is thus dependent on a much more exact alignment of the head switching point than is required for non-HiFi VHS machines. Misalignments may lead to imperfect joining of the signal, resulting in low-pitched buzzing. The problem is known as [...] "head chatter", and tends to increase as the audio heads wear down.|$|E
5000|$|... #Caption: Sets 1, 2 and 3 {{represent}} {{the operation of}} single, double and triple buffering, respectively, with vertical synchronization (vsync) enabled. In each graph, time flows from left to right. Note that 3 shows a swap chain with three buffers; the original definition of triple buffering would throw away frame C as soon as frame D finished, and start drawing frame E into buffer 1 with no delay. Set 4 shows {{what happens when a}} frame (B, in this case) takes longer than normal to draw. In this case, a frame update is missed. In time-sensitive implementations such as video playback, the whole frame may be dropped. With a three-buffer swap chain in set 5, drawing of frame B can start without having to wait for frame A to be copied to video memory, reducing the chance of a delayed frame missing its <b>vertical</b> <b>retrace.</b>|$|E
5000|$|Originally, {{video was}} edited by {{visualizing}} the recorded track with ferrofluid and cutting {{it with a}} razor blade or guillotine cutter and splicing with video tape, {{in a manner similar}} to film editing. This was an arduous process and avoided where possible. When it was used, the two pieces of tape to be joined were painted with a solution of extremely fine iron filings suspended in carbon tetrachloride, a toxic and carcinogenic compound. This [...] "developed" [...] the magnetic tracks, making them visible when viewed through a microscope so that they could be aligned in a splicer designed for this task. The tracks had to be cut during a <b>vertical</b> <b>retrace,</b> without disturbing the odd-field/even-field ordering. The cut also had to be at the same angle that the video tracks were laid down on the tape. Since the video and audio read heads were several inches apart it was not possible to make a physical edit that would function correctly in both video and audio. The cut was made for video and a portion of audio then re-copied into the correct relationship, the same technique as for editing 16mm film with a combined magnetic audio track.|$|E
50|$|Other laserdisc {{video games}} {{followed}} {{the lead of}} Astron Belt by integrating more and more computer graphics with the pre-recorded video. For example, Funai's Inter Stellar in 1983 was a forward-scrolling third-person rail shooter that used computer graphics for the ships and full-motion video for the backgrounds. Similarly, M.A.C.H. 3 and Cube Quest were vertical scrolling shooters that used the laserdisc video for the background and computer graphics for the ships. The Firefox arcade game included a Philips Laserdisc player to combine live action video and sound from the Firefox film with computer generated graphics and sound. The game used a special CAV Laserdisc containing multiple storylines stored in very short, interleaved segments on the disc. The player would seek the short distance to the next segment of a storyline during the <b>vertical</b> <b>retrace</b> interval by adjusting the tracking mirror, allowing perfectly continuous video even as the player switched storylines under control of the game's computer. This method of seeking was noted for being extremely strenuous on the player and frequently led to the machines breaking, slightly hindering the appeal of laserdisc arcade games. In the 1990s, American Laser Games produced {{a wide variety of}} live-action light gun laserdisc video games, which played much like the early laserdisc games, but used a light gun instead of a joystick to affect the action.|$|E
5000|$|NTSC color {{encoding}} is {{used with}} the System M television signal, which consists of [...] (approximately 29.97) interlaced frames of video per second. Each frame is composed of two fields, each consisting of 262.5 scan lines, {{for a total of}} 525 scan lines. 483 scan lines make up the visible raster. The remainder (the vertical blanking interval) allow for vertical synchronization and retrace. This blanking interval was originally designed to simply blank the receiver's CRT to allow for the simple analog circuits and slow <b>vertical</b> <b>retrace</b> of early TV receivers. However, some of these lines may now contain other data such as closed captioning and vertical interval timecode (VITC). In the complete raster (disregarding half lines due to interlacing) the even-numbered scan lines (every other line that would be even if counted in the video signal, e.g. {2, 4, 6, ..., 524}) are drawn in the first field, and the odd-numbered (every other line that would be odd if counted in the video signal, e.g. {1, 3, 5, ..., 525}) are drawn in the second field, to yield a flicker-free image at the field refresh frequency of [...] Hz (approximately 59.94 Hz). For comparison, 576i systems such as PAL-B/G and SECAM use 625 lines (576 visible), and so have a higher vertical resolution, but a lower temporal resolution of 25 frames or 50 fields per second.|$|E
5000|$|The {{video is}} {{produced}} by on-board display hardware, which is capable of all seven BIOS-supported modes of the Color Graphics Adapter (CGA) plus additional 160×200 16-color, 320×200 16-color, and 640×200 4-color modes. The latter two modes and the 80×25 text mode, collectively called the [...] "high-bandwidth" [...] modes by IBM, require the optional 64 KB internal memory upgrade card, which doubles the amount of system RAM from the base 64 KB to 128 KB (specifically by providing the second 64 KB starting at address 0x10000). (Upgrading the memory by other means, such as adding a RAM [...] "sidecar" [...] adapter, is not adequate to support the high-bandwidth graphics modes.) Like the CGA, the PCjr has a composite pseudo-NTSC video output that supports using a color or black-and-white television set, and the PCjr's video adapter hardware is also capable of the common undocumented composite artifact colors mode of CGA, which is entered by enabling composite color (referred to as [...] "color burst") in the 640×200 graphics mode. The PCjr is also capable of the semi-documented 160×100 16-color CGA graphics mode, although except for programming considerations, there is no advantage to using this mode instead of the 160×200 16-color PCjr graphics mode. The fully programmable 16-color palette logic in the PCjr allows any set of colors from among the 16-color RGBI color set - {{the same set of}} colors available in CGA text modes - in each mode. That is, in each graphics mode, each pixel [...] "color" [...] value can be independently mapped to any one of the 16 real RGBI colors. (The IBM Technical Reference is unclear as to whether the programmable palette is active in the text modes, where all 16 colors are available even without palette mapping.) When the BIOS is used to set a video mode, it always sets up the PCjr palette table (i.e. the 16 palette registers) to emulate the CGA color palette for that mode. Programs specifically written to use PCjr graphics can subsequently reprogram the palette table to use any colors desired. Palette changes must be made during horizontal or vertical blanking periods of a video frame in order to avoid corrupting the display. However, the provision of a <b>vertical</b> <b>retrace</b> interrupt (on IRQ5) simplifies this and also makes seamless page-flipping much easier. The video hardware of the PCjr is the first to offer a <b>vertical</b> <b>retrace</b> interrupt, or any raster interrupt. The PCjr video subsystem also has a little-known graphics blink feature, which toggles the palette {{between the first and second}} groups of eight palette registers at the same rate used for the text blink feature, and a palette bit-masking feature that could be used to switch between palette subsets without reprogramming palette registers, by forcing one or more bits of each pixel value to zero before the value is used to look up the color in the palette table.|$|E
5000|$|The actual {{figure of}} 525 lines {{was chosen as}} a {{consequence}} of the limitations of the vacuum-tube-based technologies of the day. In early TV systems, a master voltage-controlled oscillator was run at twice the horizontal line frequency, and this frequency was divided down by the number of lines used (in this case 525) to give the field frequency (60 Hz in this case). This frequency was then compared with the 60 Hz power-line frequency and any discrepancy corrected by adjusting the frequency of the master oscillator. For interlaced scanning, an odd number of lines per frame was required in order to make the <b>vertical</b> <b>retrace</b> distance identical for the odd and even fields, which meant the master oscillator frequency had to be divided down by an odd number.At the time, the only practical method of frequency division was the use of a chain of vacuum tube multivibrators, the overall division ratio being the mathematical product of the division ratios of the chain. Since all the factors of an odd number also have to be odd numbers, it follows that all the dividers in the chain also had to divide by odd numbers, and these had to be relatively small due to the problems of thermal drift with vacuum tube devices. The closest practical sequence to 500 that meets these criteria was [...] (For the same reason, 625-line PAL-B/G and SECAM uses , the old British 405-line system used , the French 819-line system used [...] etc.) ...|$|E
50|$|While the Plus/4's CPU {{could run}} about 75% {{faster than the}} C64's, the {{computer}} was still designed with a shared memory architecture, in which screen data resided in main memory. This means that the video chip has to access the memory while it is displaying the picture, in effect slowing down the CPU to less than half its full speed in this screen area. Only during those periods when the video chip is displaying the screen border or putting out the horizontal and <b>vertical</b> <b>retrace</b> signals is the CPU able to run at full speed. This means that, on average, with standard 40x25 screen the Plus/4's CPU runs only about 25% faster {{than that of the}} C64. However, as mentioned the Plus/4 can be 75% faster than a C64 when using screen blanking mode. The Plus/4's PAL model may also be switched to NTSC mode by disabling the screen which sets the CPU frequency to 2.22 MHz (this is 115% faster than C64's maximum speed). So a Plus/4 (PAL) is one of the fastest 6502 based computers for raw calculations. This is true for programs in machine code but the Plus/4's BASIC is a bit slower than the C64's, the operations with strings are up to 100% slower. This result is caused by RAM/ROM switching procedures which should be called for with every byte of any BASIC program. The NTSC model of Plus/4 is about 10% slower than the PAL model displaying a standard screen but slightly faster with screen blank.|$|E
40|$|Abstract- The paper {{describes}} several interfacing techniques explored and experimented by the author, in {{the development}} process of a visual inspection module. The advantage of using DSPs is the high computational speed, allowing simple interfacing techniques to Flash ADCs. This speed has open the opportunity to implement all tasks involved in acquisition of one image frame (sync detection, data transfer from ADC, line count) by means of program sequences for main DSP. In addition the DSP can perform simple tasks (during horizontal and <b>vertical</b> <b>retrace)</b> or more complicated after the frame acquisition. Therefore, the system can acquire frames of 512 x 512 or 256 x 256 pixels in real time, with a minimal hardware using only one fixed point DSP (TMS 320 C 25). I...|$|E

