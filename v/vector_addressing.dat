2|200|Public
50|$|In the GPU stream {{processing}} model, SoA layout {{is generally not}} required, as they provide true <b>vector</b> <b>addressing.</b>|$|E
40|$|The {{concept of}} Parallel Vector (scratch pad) Memories (PVM) was {{introduced}} as one solution for Parallel Computing in DSP, which can provides parallel memory addressing efficiently with minimum latency. The parallel programming more efficient {{by using the}} parallel addressing generator for parallel vector memory (PVM) proposed in this thesis. However, without hiding complexities by cache, the cost of programming is high. To minimize the programming cost, automatic parallel memory address generation is needed to hide the complexities of memory access. This thesis investigates methods for implementing conflict-free <b>vector</b> <b>addressing</b> algorithms on a parallel hardware structure. In particular, match <b>vector</b> <b>addressing</b> requirements extracted from the behaviour model to a prepared parallel memory addressing template, in order to supply data in parallel from the main memory to the on-chip vector memory. According to the template and usage of the main and on-chip parallel vector memory, models for data pre-allocation and permutation in scratch pad memories of ASIP can be decided and configured. By exposing the parallel memory access of source code, the memory access flow graph (MFG) will be generated. Then MFG will be used combined with hardware information to match templates in the template library. When it is matched with one template, suited permutation equation will be gained, and the permutation table that include target addresses for data pre-allocation and permutation is created. Thus {{it is possible to}} automatically generate memory address for parallel memory accesses. A tool for achieving the goal mentioned above is created, Permutator, which is implemented in C++ combined with XML. Memory access coding template is selected, as a result that permutation formulas are specified. And then PVM address table could be generated to make the data pre-allocation, so that efficient parallel memory access is possible. The result shows that the memory access complexities is hiden by using Permutator, so that the programming cost is reduced. It works well in the context that each algorithm with its related hardware information is corresponding to a template case, so that extra memory cost is eliminated...|$|E
30|$|The {{following}} sections describe our solution for a programmable channel interleaver architecture featuring a programmable <b>vector</b> <b>address</b> generator and a multibank memory with conflict resolution. First the top-level architecture is described, {{followed by a}} more {{detailed description of the}} <b>vector</b> <b>address</b> generator and the multibank memory.|$|R
3000|$|Being a <b>vector</b> <b>address</b> generator, the iVAG {{includes}} an output unit for <b>vectors</b> of <b>addresses,</b> comprising a postprocessing block and an address filter. The postprocessing block inputs vectors of interleaving block indices {{provided by the}} vector path and implements the mapping to a <b>vector</b> of (<b>Address,</b> Bank) pairs in accordance with (3). Since [...]...|$|R
2500|$|Supports {{speculative}} pre-fetching of the interrupt <b>vector</b> <b>address.</b> Reduces {{the number}} of interrupt service cycles by overlapping memory accesses with pipeline flushes and exception prioritization ...|$|R
50|$|CR16 has 16 {{general purpose}} {{registers}} of 16 bits, and address registers of 21 bits wide. There are 8 special registers: program counter, interrupt stack pointer ISP, interrupt <b>vector</b> <b>address</b> register INTBASE, status register PSR, configuration register and 3 debug registers. Status register implements flags: C, T, L, F, Z, N, E, P, I.|$|R
50|$|The V-box {{implementation}} comprised 25 Motorola Macrocell Array III (MCA3) devices {{spread over}} three multichip units (MCUs), which resided on the planar module. The V-box was optional and was field-installable. The V-box consisted of six subunits: the vector register unit, the vector add unit, vector multiply unit, vector mask unit, <b>vector</b> <b>address</b> unit and the vector control unit.|$|R
30|$|During a {{study of}} {{solutions}} to provide the CRM with <b>vectors</b> of <b>addresses,</b> we investigated the application of LUTs, FPGA-like reconfigurable logic, networks of functional units, and various forms of address generators. With Look-up Tables, {{we were able to}} offer a <b>vector</b> of <b>addresses</b> to the CRM every clock cycle, but this came at significant cost. Our aim to support a wide range of standards (often featuring parameterized interleavers) and to run multiple of them simultaneously led to very large LUT sizes. Solutions based on FPGA-like logic required significant storage for their configuration data and were expensive in area cost and slow to reconfigure (or would require even more area to be faster). Networks of functional units proved to be cost-efficient and powerful address generators, but lacked in flexibility and could therefore only be applied for a small set of address sequences. The study of variations on these solutions and their combinations led us to study SIMD processors with the interleaver <b>Vector</b> <b>Address</b> Generator (iVAG) as result. The iVAG was inspired by the Embedded Vector Processor (EVP) [22].|$|R
5000|$|Dotted Version <b>Vectors</b> [...] <b>address</b> {{scalability}} with a {{small set}} of servers mediating replica access by {{a large number of}} concurrent clients.|$|R
2500|$|The [...] "exception table" [...] ({{interrupt}} vector table interrupt <b>vector</b> <b>addresses)</b> {{is fixed}} at addresses 0 through 1023, permitting 256 32-bit vectors. The first vector (RESET) consists of 2 vectors, namely the starting stack address, and the starting code <b>address.</b> <b>Vectors</b> 3 through 15 {{are used to}} report various errors: bus error, address error, illegal instruction, zero division, CHK and CHK2 vector, privilege violation (to block privilege escalation), and some reserved vectors that became line 1010 emulator, line 1111 emulator, and hardware breakpoint. Vector 24 starts the real interrupts: spurious interrupt (no hardware acknowledgement), and level 1 through level 7 autovectors, then the 16 TRAP vectors, then some more reserved vectors, then the user defined vectors.|$|R
50|$|If ANTIC {{register}} NMIEN ($D40Ehex/54286dec) has Bit7 ($80) set then on {{the last}} scanline of the Mode line an interrupt routine will be triggered which is <b>vectored</b> through <b>address</b> VDSLST ($200hex/512dec).|$|R
5000|$|Vector pull (VPB) output {{indicates}} when interrupt <b>vectors</b> {{are being}} <b>addressed</b> ...|$|R
5000|$|Vector Pull (VPB) {{output to}} {{indicate}} when an interrupt <b>vector</b> is being <b>addressed.</b>|$|R
50|$|The {{idea of a}} {{coordinate}} vector {{can also}} be used for infinite-dimensional <b>vector</b> spaces, as <b>addressed</b> below.|$|R
5000|$|Typically, every {{microprocessor}} will, after a reset or power-on condition, {{perform a}} start-up process that usually {{takes the form}} of [...] "begin execution of the code that is found starting at a specific address" [...] or [...] "look for a multibyte code at a specific address and jump to the indicated location to begin execution". A system built using that microprocessor will have the permanent ROM occupying these special locations so that the system always begins operating without operator assistance. For example, Intel x86 processors always start by running the instructions beginning at F000:FFF0, while for the MOS 6502 processor, initialization begins by reading a two-byte <b>vector</b> <b>address</b> at $FFFD (MS byte) and $FFFC (LS byte) and jumping to that location to run the bootstrap code.|$|R
3000|$|The second {{option is}} {{referred}} to as [...] "Addresses in op-fields". It makes use of special instructions that each contains a complete <b>vector</b> of 8 <b>addresses</b> (with a maximum of 14 -bit per address) in their operand fields. Being contained by the instruction, no additional memory access is required to obtain the LUT vector data. In the current iVAG architecture implementations this data is directly output as an <b>address</b> <b>vector</b> and no computations can be performed on it.|$|R
30|$|Prior to any {{interleaving}} {{the program}} data is copied into the iVAG memory via the DTL-MMBD port (task: Program Load). The iVAG memory can contain multiple programs. A program is selected by configuring an offset in the iVAG memory. After Program Load the interleaver {{is ready to}} process data. There are three distinct modes of operation. The Input Data tasks retrieve data via the DTL-MMBD port from an external source and store this data in the CRM using <b>vectors</b> of <b>addresses</b> from the iVAG. The Output Data tasks retrieve data from the CRM using <b>vectors</b> of <b>addresses</b> from the iVAG and send this data to an external target. The data is either output block-based via the DTL-MMBD port or stream-based via the DTL-PPSD The Transfer tasks retrieve data from an external source and directly send this data to an external target.|$|R
40|$|International audienceSuicide {{gene therapy}} {{is based on}} the {{introduction}} into tumor cells of a viral or a bacterial gene, which allows the conversion of a non-toxic compound into a lethal drug. Although suicide gene therapy has been successfully used in a large number of in vitro and in vivo studies, its application to cancer patients has not reached the desirable clinical significance. However, recent reports on pre-clinical cancer models demonstrate the huge potential of this strategy when used in combination with new therapeutic approaches. In this review, we summarize the different suicide gene systems and gene delivery <b>vectors</b> <b>addressed</b> to cancer, with particular emphasis on recently developed systems and associated bystander effects. In addition, we review the different strategies that have been used in combination with suicide gene therapy and provide some insights into the future directions of this approach, particularly towards cancer stem cell eradication...|$|R
30|$|MicroBlaze also {{supports}} reset, interrupt, user exception, break and hardware exceptions. For interrupts, MicroBlaze supports only one external interrupt source (connecting to the interrupt input port). If multiple interrupts are needed, an interrupt controller {{must be used}} to handle multiple interrupt requests to MicroBlaze. An interrupt controller is available for use with the Xilinx EDK software tools. The processor will only react to interrupts if the interrupt enable (IE) bit in the MSR is set to 1. On an interrupt the instruction in the execution stage will complete, while the instruction in the decode stage {{is replaced by a}} branch to the interrupt <b>vector</b> (<b>address</b> 0  ×  10). The interrupt return address (the PC associated with the instruction in the decode stage {{at the time of the}} interrupt) is automatically loaded into general-purpose register R 14. In addition, the processor also disables future interrupts by clearing the IE bit in the MSR. The IE bit is automatically set again when executing the RTID instruction.|$|R
40|$|A Priority Interrupt Controller is a {{hardware}} designed chip which {{acts as an}} overall system manager to efficiently handle the multiple interrupts that tend to occur from the varied number of peripheral devices. Hence, it relieves the system‟s CPU from the task of polling in a multilevel priority system. This paper deals with implementation of a Priority Interrupt Controller using Verilog language. During the implementation, the Verilog code has been written for all the internal registers of the Priority Interrupt Controller {{so that it can}} accomplish its task of prioritizing the various interrupts and thereby increasing the efficiency of the processor. In this paper the entire functional block was sub divided into various modules like <b>vector</b> <b>address</b> module, command register module, mask register module and finally it was integrated into a single unit to accomplish specified tasks. In the present work the Priority Interrupt Controller was made to operate in three different modes-Fully Nested Mode, Rotatin...|$|R
40|$|AbstractWe {{consider}} {{a family of}} transforms which are generalizations of the Fourier transform on abelian groups. When the group under consideration is Zn, members of this family are characterized by having a matrix whose i,jth element is a(ij mod n), where a is any given <b>vector.</b> We <b>address</b> the problem of when the inverse {{of a member of}} the family belongs to the family...|$|R
40|$|Payloads onboard the Space Station will be {{subjected}} to a steady state acceleration level dominated by gravity gradient and aerodynamic drag forces. The g-level due to gravity gradient forces depends on the payload location relative {{to the center of}} mass, whereas the g-level due to aerodynamic drag may be assumed nearly constant throughout the Space Station. The vector of acceleration due to aerodynamic drag can always be broken down into three orthogonal components, in the direction opposite to the velocity vector, along the local vertical, and perpendicular to the orbit plane. It will be shown that the gravity gradient term has two components, which are orthogonal to one another. One component is along the local vertical and the other is perpendicular to the orbit plane. Thus, the combination of all components form an orthogonal triad of <b>vectors.</b> <b>Addressed</b> here are the payload location constraints to satisfy the requirements of 1 micro-g. The permissible locations are within an open-ended tube having an elliptical cross section, which is aligned with the velocity vector and centered on the system center of mass...|$|R
40|$|The {{research}} {{work of this}} study focuses on the design and implementation technology of terminal in Vector Network (VN) based indows platform. The VN {{is a kind of}} new communication network with <b>vector</b> <b>address</b> as the switching adon Wdress. The premise of successful deployment of VN is its integration with the current IP networks, so it is necessary to study the implementation technology of VN terminal on the base of IP terminal. Firstly, a kind of software implementation method of VN terminal and a kind of integration method of VN and IP networks named “IP over VN” were proposed in this study. Secondly, the VN driver module was designed and implemented based on the NDIS driver interface and the key technique in the implementation was summarized. Finally, the experiment network was built to test the functions of VN terminal. The test results validated the rationality of the design and implementation scheme of VN terminal. The work of this study establishes the foundation for the deployment of VN and provides an example to the development of similar systems...|$|R
50|$|The vector {{processor}} has a 14 ns cycle time (clock rate of approximately 71.43 MHz). The vector registers are 256 elements wide, and each element is 64 bits wide. The S-810/20 has 32 of these registers, {{whereas the other}} models have 16. These registers are implemented with 1 kilobit (Kbit) bipolar RAM integrated circuits (ICs) with a 4.5 ns access time. All models have eight 256-bit vector mask registers and 48 <b>vector</b> <b>address</b> registers. All models have three load pipelines and one load/store pipeline for accessing the main memory. The S-810/20 has two lanes, each with two add, one multiply followed by add, and one multiply or divide followed by add floating point pipelines, {{for a total of}} twelve. The S-810/10 has one lane with the same configuration as the S-810/20 and therefore a total of six pipelines. CPU logic is implemented with two emitter-coupled logic gate array IC types, a 550-gate part with a 250 picosecond (ps) gate delay and a 1,500-gate part with a 450 ps gate delay.|$|R
50|$|For a <b>vector</b> with linear <b>addressing,</b> {{the element}} with index i {{is located at}} the address B + c × i, where B is a fixed base address and c a fixed constant, {{sometimes}} called the address increment or stride.|$|R
30|$|In {{the home}} (TEMS) scans, 10 empty carrier slots which always {{contained}} a small, fixed value were removed, leaving 488 values. This procedure {{was not found}} necessary for the lab (M 2 M) scans, and all 534 carriers were retained. For both scan sets, {{the total number of}} dataset entries is quite limited compared to the dimensionality of the RSS <b>vectors.</b> To <b>address</b> this problem, three types of fingerprints, containing subsets of carriers, were defined as described below.|$|R
40|$|Body size is a {{physical}} factor of crucial importance underlying important traits of the reproductive dynamics of both sexes in mosquitoes. Most studies {{on the influence of}} body size in mating success of dengue <b>vectors</b> <b>addressed</b> sperm transfer to females and did not consider egg production, a prerequisite for population maintenance; male body size impact on reproduction has attracted little research interest with respect to sterile insect technique. In experiments involving differently sized adults, we examined whether the body size of the mates is a source of variation in reproductive outcome in Aedes aegypti. In the absence of male partners, large females (LF) showed better fecundity than small females (SF). In intraclass mating trials, egg production was much greater in largesized than smallsized pairs. There were comparable fecundities in large females mated with small males and large pairs. [SF•SM] and [SF•LM] pairs showed equivalent fecundity. Nonmating did not result in the production of viable eggs by either small or large females. We also observed that eggs produced by largesized females mated with small males had better hatching success than those from either small or large pairs. Mating between small females and large males resulted in poor egg viability...|$|R
3000|$|The {{support for}} partial address {{generation}} ("Filter Output Address" [...] in Table 8) {{is also used}} extensively. In DVB-T symbol de-interleaving for instance, it is not feasible to generate complete <b>vectors</b> of <b>addresses.</b> The pseudo random nature of the LFSR and range filter {{and the number of}} soft bits per symbol (which is not a multiple of 8 and therefore hard to vectorize) require a separation of address generation and address filtering concerns to allow for more efficient vector implementation.|$|R
40|$|The {{problem of}} testing the {{equality}} of sub-vectors of two multivariate normal mean <b>vectors</b> is <b>addressed</b> when the complementary sub-vectors {{are known to be}} equal, and the two populations have unequal covariance matrices. A test procedure is derived using the multivariate Satterthwaite approximation. The approximation is developed {{in such a way that}} the test satisfies a natural invariance condition. Accuracy of the approximation is numerically investigated, and the result is illustrated with an example. Invariance Likelihood ratio test Multivariate Satterthwaite approximation...|$|R
40|$|Abstract. This paper {{proposes a}} method to perform class-specific feature {{selection}} in multiclass support <b>vector</b> machines <b>addressed</b> with the one-against-all strategy. The main issue arises at the final step of the classification process, where binary classifier outputs must be compared one against another to elect the winning class. This comparison may be biased towards one specific class when the binary classifiers are built on distinct feature subsets. This paper proposes a normalization of the binary classifiers outputs that allows fair comparisons in such cases. ...|$|R
40|$|In this paper, we {{highlight}} {{the problems of}} polysemy in word space models of compositionality detection. Most models represent each word as a single prototype-based <b>vector</b> without <b>addressing</b> polysemy. We propose an exemplar-based model {{which is designed to}} handle polysemy. This model is tested for compositionality detection and it is found to outperform existing prototype-based models. We have participated in the shared task (Biemann and Giesbrecht, 2011) and our best performing exemplar-model is ranked first in two types of evaluations and second in two other evaluations. ...|$|R
40|$|In {{this paper}} we propose a novel method for {{multimedia}} se-mantic indexing using model vectors. Model vectors provide a semantic signature for multimedia documents by capturing the de-tection of concepts broadly across a lexicon using a set of in-dependent binary classifiers. While recent techniques have been developed for detecting simple generic concepts such as indoors, outdoors, nature, manmade, faces, people, speech, music, and so forth [1], these labels directly support {{only a small number of}} queries. Model <b>vectors</b> <b>address</b> the problem of answering queries for which relationships to specific concepts is either unknown or indirect by developing a basis across across the lexicon. In the simplest case, each model vector dimension corresponds to the confidence score by which a corresponding concept from the lexi-con is detected. However, we show how other information such as relevance, reliability and concept correlation can also be incorpo-rated. Overall, the model vectors can be used in a variety of meth-ods for multimedia indexing, including model-based retrieval, rel-evance feedback searching and concept querying. In this paper, we present the model vector method and study different strategies for computing and comparing model vectors. We empirically evaluate the retrieval effectiveness of the model vector approach compared to other search methods in a large video retrieval testbed...|$|R
40|$|The National Cancer Institute and the American Cancer Society {{announced}} that 1. 6 million new cancer cases {{are projected to}} occur in the USA in 2016. One of the most innovative approaches against cancer is suicide gene therapy, in which suicide-inducing transgenes are introduced into cancer cells. When cancer treatments target the total elimination of tumor cells, there will be no side effects for normal cells. Cancer tissues are targeted through various targeted transport methods, followed by tissue-specific enzymes converting a systemically suitable prodrug into an active drug in the tumor. Suicidal genes are delivered by transporters, such as viral and non-viral vectors, into cancer cells. Suicide gene therapeutic strategies currently pursued are herpes simplex virus thymidine kinase gene with prodrug ganciclovir, cytosine deaminase gene, carboxyl esterase/irinotecan, varicella zoster virus thymidine kinase/ 6 -methoxypurine arabinonucleoside, nitroreductase Nfsb/ 5 -(aziridin- 1 -yl) - 2, 4 -dinitrobenzamide, carboxypeptidase G 2 / 4 -[(2 -chloroethyl) (2 - mesyloxyethyl) amino]benzoyl-L-glutamic acid, cytochrome p 450 -isofosfamide, and cytochrome p 450 -cyclophosphamide. The goal of this review is to summarize the different suicide gene systems and gene delivery <b>vectors</b> <b>addressed</b> to cancer cells, with a particular emphasis on recently developed systems. Finally, we briefly describe the advantageous clinical applications and potential side effects of suicide gene therapy...|$|R
40|$|Abstract — The paper {{deals with}} black-box {{identification}} of industrial automated discrete manufacturing systems. The problem of obtaining Petri net (PN) models from the observable behavior, {{expressed as a}} sequence of input-output <b>vectors,</b> is <b>addressed.</b> First the problem is stated: important issues to handle in systems automated by Programmable Logic Controllers that cannot be dealt by other methods are detailed. Then a novel method is presented; it focuses on building a compact and expressive representation of the observable part of the model which allows consequently {{the construction of a}} reduced complete Interpreted PN describing both observable and unobservable behavior. I...|$|R
40|$|We {{investigate}} the collective thermal diffusion of silica charged spheres in Sulpho-Rhodamine B/water solution at different concentrations by measuring time-dependent thermal and Soret lensings. We show a significant concentrationdependence of the thermal diffusion coefficient DT, not previously reported. Moreover, the results clearly show that both mass diffusion and Soret coefficient are collective quantities being strongly {{dependent on the}} particles' packing fraction. Our Z-scan setup allows us to {{investigate the}} dynamics of the system at low wave <b>vector,</b> which <b>addresses</b> the influence of the interparticle interactions on the thermal diffusion of the colloids. © 2009 American Chemical Society...|$|R
40|$|Abstract—Complex-valued data play a {{prominent}} role in a number of signal and image processing applications. The aim {{of this paper is to}} establish some theoretical results concerning the Cramer-Rao bound for estimating a sparse complex-valued vector. Instead of considering a countable dictionary of <b>vectors,</b> we <b>address</b> the more challenging case of an uncountable set of vectors parameterized by a real variable. We also present a proximal forward-backward algorithm to minimize an ℓ 0 penalized cost, which allows us to approach the derived bounds. These results are illustrated on a spectrum analysis problem in the case of irregularly sampled observations...|$|R
