786|10000|Public
2500|$|Squeak is cross-platform. Programs {{produced}} on one platform run bit-identical on all other platforms, and versions {{are available for}} many platforms including the obvious Windows/macOS/linux versions. The Squeak system includes code for generating {{a new version of}} the <b>virtual</b> <b>machine</b> (<b>VM)</b> on which it runs. It also includes a VM simulator written in Squeak. For these reasons, it is easily ported.|$|E
5000|$|Boxes - {{front-end}} for a <b>virtual</b> <b>machine</b> (<b>VM).</b> Introduced in GNOME 3.4 ...|$|E
50|$|Other {{emulation}} {{approaches are}} stacked emulation, migrated emulation and Emulation <b>Virtual</b> <b>Machine</b> (<b>VM).</b>|$|E
30|$|Cloud: a {{collection}} of <b>virtual</b> <b>machines</b> (<b>VMs)</b> offered by a cloud provider.|$|R
5000|$|Transparently {{extending}} {{the network and}} its services to heterogeneous <b>Virtual</b> <b>Machines</b> (<b>VMs)</b> ...|$|R
5000|$|Networks, such as virtual LANs (VLANs) and {{containers}} such as <b>virtual</b> <b>machines</b> (<b>VMs)</b> ...|$|R
50|$|Early {{versions}} of Alice {{ran on the}} Mozart Programming System (Oz) <b>virtual</b> <b>machine</b> (<b>VM),</b> allowing interfacing between Alice and Oz code.|$|E
50|$|Croquet’s <b>virtual</b> <b>machine</b> (<b>VM)</b> runs bit identically on {{multiple}} platforms, and supports multiple abilities {{that could only}} be provided by a true late bound, message sending language.|$|E
50|$|AOT {{produces}} machine optimized code, {{just like}} a standard native compiler. The difference is that AOT transforms the bytecode of an extant <b>virtual</b> <b>machine</b> (<b>VM)</b> into machine code.|$|E
50|$|In computing, the Red Hat <b>Virtual</b> <b>Machine</b> Manager, {{also known}} as virt-manager, is a desktop-driven <b>virtual</b> <b>machine</b> manager with which users can manage <b>virtual</b> <b>machines</b> (<b>VMs).</b>|$|R
50|$|This article {{compares the}} {{application}} programming interfaces (APIs) and <b>virtual</b> <b>machines</b> (<b>VMs)</b> of the programming language Java and operating system Android.|$|R
50|$|SoftwareSVT is what {{controls}} the software inside of OmniCube {{and allows for}} <b>virtual</b> <b>machines</b> (<b>VMs)</b> to access storage held on the OmniCube.|$|R
5000|$|A <b>virtual</b> <b>machine</b> (<b>VM)</b> {{such as the}} Java virtual machine. or [...]NET CLR. Applications are {{compiled}} into {{a format}} similar to machine code, known as bytecode, which is then executed by the VM.|$|E
50|$|Snapt Inc’s ADC {{solution}} {{includes a}} layer 7 load balancer, web accelerator for web acceleration and caching, {{as well as}} a web application firewall. The company's offerings are <b>virtual</b> <b>machine</b> (<b>VM)</b> and cloud-based.|$|E
50|$|MIPS Technologies/Imagination Technologies {{entered into}} a license {{agreement}} with Myriad to make their Dalvik Turbo <b>Virtual</b> <b>Machine</b> (<b>VM)</b> available to its licensees {{as part of its}} standard distribution of Android for its MIPS architecture.|$|E
50|$|JamVM is an {{open source}} Java <b>Virtual</b> <b>Machine</b> (JVM) {{developed}} to be extremely small compared with other <b>virtual</b> <b>machines</b> (<b>VMs)</b> while conforming to the Java <b>virtual</b> <b>machine</b> specification version 2 (blue book).|$|R
30|$|Cloud {{infrastructure}} provider: {{refers to}} the IaaS provider who offers logically unlimited virtual resources {{in the form of}} <b>virtual</b> <b>machines</b> (<b>VMs),</b> <b>virtual</b> networks, etc.|$|R
50|$|DreamCompute {{provides}} virtual servers {{through the}} use of the KVM hypervisor. <b>Virtual</b> <b>machines</b> (<b>VMs)</b> can be started by creating an Instance using the DreamCompute dashboard.|$|R
50|$|In computing, a <b>virtual</b> <b>machine</b> (<b>VM)</b> is an {{emulation}} of {{a computer}} system. Virtual machines are based on computer architectures and provide functionality of a physical computer. Their implementations may involve specialized hardware, software, or a combination.|$|E
50|$|There {{are over}} 300 library {{functions}} available. Users can also define additional functions. LSL is a strongly typed {{language that is}} compiled to bytecode before runtime execution in a <b>virtual</b> <b>machine</b> (<b>VM)</b> on one of Linden Lab's servers.|$|E
50|$|The {{output of}} a {{compiler}} that produces code for a <b>virtual</b> <b>machine</b> (<b>VM)</b> {{may or may}} not be executed on the same platform as the compiler that produced it. For this reason such compilers are not usually classified as native or cross compilers.|$|E
30|$|These {{entities}} {{interact with}} each other to perform the simulation: Cloud Information Service (CIS), broker, data center, host, <b>virtual</b> <b>machines</b> (<b>VM</b> 1, VM 2), and cloudlets (C 1, C 2 ….).|$|R
30|$|Virtualization {{provides}} {{and manages}} the data centre’s infrastructure dynamically. By multiplexing many <b>virtual</b> <b>machines</b> (<b>VMs)</b> {{on a single}} physical host, the utilization of resources is improved. Based on demand, these VMs scale up and down. Hence some hosts are heavily loaded, and some are under-utilized. So, effective <b>virtual</b> <b>machine</b> management is critical. A strong tool for managing <b>virtual</b> <b>machines</b> is <b>VM</b> Migration. Load balancing, power management, fault tolerance, and system maintenance are the goals of VM migration.|$|R
50|$|The SR-IOV allows {{different}} <b>virtual</b> <b>machines</b> (<b>VMs)</b> in a <b>virtual</b> {{environment to}} share a single PCI Express hardware interface. In contrast, MR-IOV allows I/O PCI Express to share resources among different VMs on different physical machines.|$|R
5000|$|... eNlight Cloud is a cloud {{computing}} platform {{based on the}} Xen virtualization platform by Nashik, Maharashtra-based ESDS Software Solution Pvt. Ltd. It allows a hosted <b>virtual</b> <b>machine</b> (<b>VM)</b> to scale resources automatically in real time. It bills on a prepaid, pay-per-consume basis.|$|E
5000|$|Save file. IDL save files can {{run in a}} free but {{restricted}} {{version of}} IDL, called IDL <b>Virtual</b> <b>Machine</b> (<b>VM).</b> Users have to download IDL VM from Exelis, install it and register with Exelis before they can use the SPEDAS save file.|$|E
5000|$|Live VM {{migration}} issues: Executing resource-intensive {{mobile application}} via <b>Virtual</b> <b>Machine</b> (<b>VM)</b> migration-based application ofﬂoading involves encapsulation of application in VM instance and migrating {{it to the}} cloud, which is a challenging task due to additional overhead of deploying and managing VM on mobile devices.|$|E
5000|$|The CP/CMS {{architecture}} was revolutionary for its time. The system {{consisted of}} a virtualizing control program (CP) which created multiple independent <b>virtual</b> <b>machines</b> (<b>VMs).</b> Platform virtualization was possible because of two elements of the IBM System/360-67: ...|$|R
50|$|In {{information}} technology, virtual chargeback is {{a practice}} of charging back the costs of virtual IT infrastructure to departments or business units, that actually use it. This means analyzing and recording the resource utilisation on <b>virtual</b> <b>machines</b> (<b>VMs).</b>|$|R
30|$|The {{authors in}} [11] present a Bin-packing {{approach}} that dynamically maps <b>Virtual</b> <b>Machines</b> (<b>VMs)</b> into Physical <b>Machines</b> (PMs). As a result, networking requirements {{are not considered}} in the optimization model, which may mean that QoS requirements are not met.|$|R
50|$|SuperWaba is a {{discontinued}} Java-like <b>virtual</b> <b>machine</b> (<b>VM)</b> that targets portable devices. Software developers use application programming interfaces (APIs), accessed through associated libraries (packaged as Jars) {{and small}} tools (together composing a software development kit), to create applications that can run within the VM on supported platforms.|$|E
50|$|MOSIX2 can run {{in native}} mode or in a <b>virtual</b> <b>machine</b> (<b>VM).</b> In native mode, {{performance}} is better, but it requires {{modifications to the}} base Linux kernel, whereas a VM can run on top of any unmodified operating system that supports virtualization, including Microsoft Windows, Linux and Mac OS X.|$|E
50|$|While Julia uses JIT (MCJIT from LLVM) {{it still}} means Julia generates native machine code, directly, before a {{function}} is first run (not a bytecode that is {{run on a}} <b>virtual</b> <b>machine</b> (<b>VM)</b> or translated as the bytecode is running, as with e.g., Java; the JVM or Dalvik in Android).|$|E
2500|$|The Squeak <b>virtual</b> <b>machine</b> is {{a family}} of <b>virtual</b> <b>machines</b> (<b>VMs)</b> used in Smalltalk {{programming}} language implementations. They are {{an essential part of}} any Smalltalk implementation. All are open-source software. The current VM is a high performance dynamic translation system. The relevant code is maintained on GitHub at ...|$|R
40|$|Although cloud {{computing}} environments often use virtualization to implement resource sharing, the added hypervisor layer between <b>virtual</b> <b>machines</b> (<b>VMs)</b> and hardware resources creates performance overhead. Measuring virtualization performance is thus crucial for running applications efficiently and further improving VM techniques. To address the insufficiencies of existing benchmarking methods, the proposed three-layer strategy fully evaluates VM system performance and includes both a benchmark suite to measure various virtualization scenarios and an automated performance testing toolkit. W idely used in today’s Internet data centers and {{cloud computing}} platforms, virtualization improves resource utilization, reduces total own-ership costs, and eases system resource management 1 by letting multiple <b>virtual</b> <b>machines</b> (<b>VMs)</b> share {{the resources of}} a single physical <b>machine</b> (PM). A <b>VM</b> monitor, or hypervisor, is a softwar...|$|R
50|$|Since about 1998 {{there has}} been an {{explosive}} increase in the use of <b>virtual</b> <b>machines</b> (<b>VM)</b> in addition to — sometimes instead of — physical machines to offer many kinds of computer and communications services on local area networks and over the broader Internet. The advantages of <b>virtual</b> <b>machines</b> are well explored elsewhere.|$|R
