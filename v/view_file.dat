10|2371|Public
25|$|A {{controller}} is a server-side {{component of}} Rails that responds to external requests from the web server to the application, by determining which <b>view</b> <b>file</b> to render. The controller {{may also have}} to query one or more models for information and pass these on to the view. For example, in an airline reservation system, a controller implementing a flight-search function would need to query a model representing individual flights to find flights matching the search, and might also need to query models representing airports and airlines to find related secondary data. The controller might then pass some subset of the flight data to the corresponding view, which would contain a mixture of static HTML and logic that use the flight data to create an HTML document containing a table with one row per flight. A controller may provide one or more actions. In Ruby on Rails, an action is typically a basic unit that describes {{how to respond to}} a specific external web-browser request. Also, note that the controller/action will be accessible for external web requests only if a corresponding route is mapped to it. Rails encourages developers to use RESTful routes, which include actions such as create, new, edit, update, destroy, show, and index. These mappings of incoming requests/routes to controller actions can be easily set up in the routes.rb configuration file.|$|E
50|$|A hex editor or viewer {{may be used}} to <b>view</b> <b>file</b> data as a {{sequence}} of hexadecimal (or decimal, binary or ASCII character) values for corresponding bytes of a binary file.|$|E
5000|$|... #Caption: A diagram {{attempting}} to show potential paths available to drivers over the approximate distance (per.) Right click the image here and {{open in a}} new tab or window, then click it again on that page for a clearer <b>view.</b> (<b>File</b> size: 105 KB) ...|$|E
5000|$|IBM Lotus Domino 8.0+ KeyView (10.4.0.0) filter {{supports}} ODT, ODS, ODP for <b>viewing</b> <b>files.</b>|$|R
50|$|Ability to <b>view</b> <b>files</b> {{directly}} in the Preview Pane within Windows Explorer for Microsoft Windows 7 and Vista users.|$|R
5000|$|Project and Code Navigation: {{specialized}} project <b>views,</b> <b>file</b> structure <b>views</b> {{and quick}} jumping between files, classes, methods and usages ...|$|R
50|$|A central {{feature is}} the hideable {{information}} panel at the bottom {{that can be used}} to <b>view</b> <b>file</b> properties and contents, generate reports, preview files (PNG, TIF, GIF, JPG, TGA, PSD, ICO; WAV, MP3, MPEG, AVI; TTF, PFB; HTML, EML, MSG, DOC, XLS, PDF, and many other formats) and find files. The search facility supports Boolean logic, regular expressions, whole word and fuzzy matching, binary string search, and multiple location search.|$|E
50|$|File Dialog Box is a box {{where it}} {{contains}} files.There are {{several types of}} file dialogs. The two most common being a two column <b>view</b> <b>file</b> dialog and a mini file browser dialog. Others include thumbnail view (for photos) and Meta-data (For music). There are several reasons for the many varieties of dialogs. First of all {{there is no single}} standard design, so a program may implement their own for any purpose. Many GUI toolkits do not provide a file dialog, so an application is forced to use its own.|$|E
5000|$|File System Visualizer, {{also known}} as fsv, is a 3D file browser using OpenGL, created by Daniel Richard G. It is a clone of SGI's fsn file manager for IRIX systems, aimed to run on modern Linux and other Unix-like {{operating}} systems. It is capable of representing file systems in two ways - in MapV mode, files and directories are represented as cuboids of equal height, {{with the size of}} the cuboid representing the size of the file or directory, and in TreeV mode, files and directories are shown in a more conventional tree manner, with links between parent directories and subdirectories, and columns of various height (indicating file size) on top of the directories to represent the files inside. In both of these modes, a standard 2D tree representation of files and directories is displayed on the left of the window. The mouse can be used to rotate the 3D representation of the file system, and an [...] "Eagle Eye" [...] function shows the representation from an overhead <b>view.</b> <b>File</b> System Visualizer is also capable of manipulating the files and directories it shows.|$|E
50|$|The {{mobile app}} lets users <b>view</b> <b>files</b> on Yandex.Disk, upload files from their mobile device, {{download}} files for use offline and email file download links.|$|R
5000|$|Project and code navigation: special project <b>views,</b> <b>file</b> {{structure}} <b>views,</b> {{and quick}} jumping between files, classes, methods and usages, navigation through class hierarchy, and usages search.|$|R
5000|$|Version 3.8 {{included}} a new option to <b>view</b> <b>files</b> and folders as a tree, a new Connect to Server {{item in the}} sidebar and incremental loading of search results.|$|R
50|$|A {{controller}} is a server-side {{component of}} Rails that responds to external requests from the web server to the application, by determining which <b>view</b> <b>file</b> to render. The controller {{may also have}} to query one or more models for information and pass these on to the view. For example, in an airline reservation system, a controller implementing a flight-search function would need to query a model representing individual flights to find flights matching the search, and might also need to query models representing airports and airlines to find related secondary data. The controller might then pass some subset of the flight data to the corresponding view, which would contain a mixture of static HTML and logic that use the flight data to create an HTML document containing a table with one row per flight. A controller may provide one or more actions. In Ruby on Rails, an action is typically a basic unit that describes {{how to respond to}} a specific external web-browser request. Also, note that the controller/action will be accessible for external web requests only if a corresponding route is mapped to it. Rails encourages developers to use RESTful routes, which include actions such as create, new, edit, update, destroy, show, and index. These mappings of incoming requests/routes to controller actions can be easily set up in the routes.rb configuration file.|$|E
40|$|Files are dataset from Dobbs et al. 2011. To <b>view</b> <b>file,</b> use {{the program}} splash ([URL] {{used for the}} {{simulation}} used in Dobbs, & Pringle 2013, MNRAS, 432, 653 The calculations for this paper were performed on the DiRAC Facility jointly funded by STFC, the Large Facilities Capital Fund of BIS and the University of Exeter. CLD acknowledges funding from the European Research Council for the FP 7 ERC starting grant project LOCALSTAR...|$|E
40|$|Introduction One can <b>view</b> <b>file</b> system {{evolution}} as having passed through three stages: 1. Uniprocessor systems, like original UNIX. In such systems {{there is no}} truly concurrent {{access to the same}} file by several clients, and so it was not hard to design file systems that provide the most recent data to every reader. 2. Distributed and/or parallel non-replicated systems, which bring added problems: ffl Concurrent access, meaning several clients access the same server. This opens the question of cache consistency. ffl Client and server can fail separately. 3. Replicated systems, bringing those problems mentioned above plus: ffl Concurrent access, now meaning the possibility of separate clients simultaneously accessing the same file at separate servers. ffl Separate failure among servers as well as between client and server raises the possibility of version skew at the servers. A fourth stage is here now: mobile computing,...|$|E
50|$|Most {{utilities}} {{that work}} with LBM and BBM files are rather dated, such as MacPaint or Deluxe Paint. IrfanView allows to <b>view</b> <b>files,</b> is free for non commercial use and can work under Linux.|$|R
50|$|Far Manager {{features}} an internal viewer and editor, customizable user menus, tree <b>views,</b> <b>file</b> search, compare, integrated help, and a task switcher for its tools. Its standard functionality can be expanded with macros (which allow scripting) and plugins.|$|R
50|$|Some of {{the main}} {{features}} are: forms customization (e.g. labels, different types of HTML input field, content check), lookup fields, master/details <b>view,</b> <b>files</b> upload, calculated fields, hooks, graph report generation, export to CSV, checking for possible duplication during insertions, authentication, authorization restrictions on view/update/delete, and e-mail notices.|$|R
40|$|Files are {{simulations}} from Dobbs et al. 2016. To <b>view</b> <b>file,</b> use {{the program}} splash ([URL] article {{associated with this}} dataset is in ORE at [URL] for simulations presented in Dobbs, Price, Pettitt & Bate 2016, MNRAS, 461, 4482 This work used the DiRAC Complexity system, operated by the University of Leicester IT Services, which forms part of the STFC DiRAC HPC Facility (www. dirac. ac. uk). This equipment is funded by BIS National E-Infrastructure capital grant ST/K 000373 / 1 and STFC DiRAC Operations grant ST/K 0003259 / 1. DiRAC {{is part of the}} National E-Infrastructure. This work also used the University of Exeter Supercomputer, a DiRAC Facility jointly funded by STFC, the Large Facilities Capital Fund of BIS, and the University of Exeter. CLD acknowledges support by the European Research Council under the European Communityâ€™s Seventh Framework Programme (FP 7 / 2011 - 2016 grant agreement no. 280104, LOCALSTAR). DJP is funded by a Future Fellowship (FT 130100034) from the Australian Research Council (ARC). MRB and TST acknowledge support by the European Research Council under the European Communityâ€™s Seventh Framework Programme (FP 7 / 2007 - 2013 grant agreement no. 339248...|$|E
5000|$|FileApp allows <b>viewing</b> OpenDocument <b>files</b> on iPhone and iPad.|$|R
50|$|Hiew (short for Hacker's view) is {{a popular}} console hex editor for Windows written by Eugene Suslikov (sen). Amongst its feature set {{is its ability to}} <b>view</b> <b>files</b> in text, hex and {{disassembly}} mode. The program is particularly useful for editing executable files such as COFF, PE or ELF executable files.|$|R
40|$|This {{resource}} is an 8 page guide to computer file and folder management. It covers {{the basics of}} how to organise files and folders on a network area, searching, deleting and renaming folders and changing the way to <b>view</b> <b>files.</b> The guide is illustrated throughout with screenshots providing step-by-step instructions. ...|$|R
5000|$|A {{software}} tool set for converting and <b>viewing</b> OpenCTM <b>files.</b>|$|R
5000|$|<b>View</b> recent <b>files</b> across {{computers}} and devices with Mobile Link ...|$|R
40|$|This course {{provides}} {{an understanding of}} basic principles of Chinese speaking and written language. The focus in Chinese 1020 is on pronunciation and simple Chinese character writing. Technical Requirements: Windows Media Player is necessary to <b>view</b> some <b>files</b> in this course. Quicktime Player is necessary to <b>view</b> some <b>files</b> in this course...|$|R
40|$|Soldiers (?) on {{porch of}} {{a house on the}} Pamunkey River, Virginia, with a {{steamship}} flying the American flag at landing to the left. Inscribed: The residence of Mr. Custis, afterwards Mr. Washington. Similar <b>view</b> <b>filed</b> under: DRWG/US - McIlvaine, no. 1, of 1864. Forms part of: Marian S. Carson collection (Library of Congress) ...|$|R
50|$|As of January 2015, Pages {{does not}} support OpenDocument file format. The only known {{software}} other than Pages which can open its files are the Google Docs Viewer, LibreOffice and Jumpshare. Google Docs can <b>view</b> the <b>files,</b> and save them as PDF via the Print function, but not edit them. Jumpshare can <b>view</b> the <b>files.</b>|$|R
5000|$|Preview can <b>view</b> [...]ai <b>files</b> if {{they are}} saved with the PDF {{compatibility}} option.|$|R
5000|$|... kdump (BSD) a BSD utility for <b>viewing</b> trace <b>files</b> {{generated}} by the ktrace utility ...|$|R
5000|$|... 3D object browser {{to allow}} the user to <b>view</b> 3D <b>files</b> in a {{specified}} directory ...|$|R
2500|$|... 4.0 {{does not}} include the {{functionality}} to <b>view</b> [...]png <b>files,</b> but there is a registry fix.|$|R
50|$|New {{features}} {{have been}} added to Caja such as undo/redo and diff <b>viewing</b> for <b>file</b> replacements.|$|R
5000|$|... #Caption: The Finder, showing {{files in}} Cover Flow View and <b>viewing</b> a <b>file</b> using Quick Look ...|$|R
5000|$|... 4.0 {{does not}} include the {{functionality}} to <b>view</b> [...]png <b>files,</b> but there is a registry fix.|$|R
40|$|Desktop search {{applications}} {{are changing the}} way we interact with personal information: we {{have a choice of}} whether to <b>view</b> <b>files</b> within their traditional siloed hierarchies, or brought together in search results. In this position paper, we discuss the advantages of temporal ordering of desktop search results, and present an interface that aggregates search results over time. Author Keywords Desktop search, personal information managemen...|$|R
50|$|ReadReports - Enables {{users to}} see who has or has not read their message or <b>viewed</b> their <b>files.</b>|$|R
