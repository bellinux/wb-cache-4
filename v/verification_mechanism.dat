244|183|Public
25|$|The CSVR {{would include}} a <b>verification</b> <b>mechanism,</b> with an {{international}} component. The <b>verification</b> <b>mechanism</b> would include two respected figures of international renown to be selected {{by the government and}} the FARC, and the international component {{would include a}} representative from each one of the guarantor and accompanying countries. It would also include a technical component, with the Kroc Institute for International Peace Studies at Notre Dame University designing the methodology to identify advances in the implementation. The <b>verification</b> <b>mechanism</b> would objectively verify the state of the implementation of the agreement, identify delays or deficiencies, provide continuous support and contribute to strengthening the agreement's implementation.|$|E
25|$|A {{tripartite}} Monitoring and <b>Verification</b> <b>Mechanism</b> (MM) would {{monitor and}} verify {{implementation of the}} agreement and compliance with the rules governing the ceasefire and decommissioning of weapons. The MM would be integrated by representatives of the Colombian government, the FARC and an International Component made up of unarmed United Nations (UN) observers from Community of Latin American and Caribbean States (CELAC) member states. The mechanism would have three instances or levels: one national, eight regional verifying structures and 'some' local monitoring structures. The International Component would preside over {{all levels of the}} mechanism, resolve disagreements (such as incidents and violations of the ceasefire or disarmament), present recommendations and present written reports.|$|E
25|$|The June 23 {{agreement}} {{laid down}} the modalities for the bilateral and definite ceasefire and cessation of hostilities, which would begin following the signature of the final agreement. Five days following the signature of the final agreement and following the redeployment of troops, the FARC would begin moving to 23 transitory rural settlement normalization zones (Zonas Veredales Transitorias de Normalización) and 8 encampments {{for the purposes of}} delivering their weapons to the UN mission and prepare for their reincorporation into civilian life. While the normal functioning of unarmed elected civilian authorities within these zones would not be impeded, no civilian population would be allowed to reside in the zones and access would be restricted. A 1 kilometre wide security zone, off limits to both soldiers and guerrilla, would surround each zone. The FARC would designate a group of 60 members to travel throughout the national territory in performance of tasks related to the peace agreement; likewise, within each zone, a group of 10 members of the guerrilla would travel within the municipality and department for the same reasons. The UN would collect and store all weapons received from the FARC, which would later be used to build three monuments. The guerrilla would surrender their weapons gradually in three phases over 180 days from the signature of the final agreement, and the UN mission would certify the process. The announcement offered further details about the tripartite monitoring and <b>verification</b> <b>mechanism,</b> with the international component (the UN political mission) presiding the mechanism, resolving controversies and presenting recommendations and reports about the ceasefire and surrender of weapons.|$|E
40|$|Modeling {{distributed}} {{computer systems}} {{is known to}} be a challenging enterprise. Typically, distributed systems are comprised of large numbers of components whose coordination may require complex interactions. Modeling such systems more often than not leads to the nominal intractability of the resulting state space. Various formal methods have been proposed to address the modeling of coordination among distributed systems components. For the most part, however, these methods do not support formal <b>verification</b> <b>mechanisms.</b> By way of contrast, the L-automata/L-processes model supports formal <b>verification</b> <b>mechanisms</b> which in many examples can successfully circumvent state space explosion problems, and allow verification proofs to be extended to an arbitrary number of components. After reviewing L-automata/L-processes formalisms, we present here the formal specification of a fault-tolerant algorithm for a distributed computer system. We also expose the L-automata/L-processes verification of t [...] ...|$|R
30|$|Data {{inconsistency}} during {{data exchange}} between grid nodes and portal machine {{can lead to}} failure in executing the next job or make results unavailable. Data <b>verification</b> <b>mechanisms</b> can solve this problem. The “cksum” tool from Linux/Unix implements the cyclic redundancy check (CRC), an error-detecting code designed to detect accidental changes to raw computer data. It {{can be used to}} detect a corruption on destination and ask the sender to transmit it again.|$|R
40|$|The {{integrity}} of messages in vehicular ad-hoc networks {{has been extensively}} studied by the research community, resulting in the IEEE~ 1609. 2 standard, which provides typical integrity guarantees. However, the correctness of message contents {{is still one of}} the main challenges of applying dependable and secure vehicular ad-hoc networks. One important use case is the validity of position information contained in messages: position <b>verification</b> <b>mechanisms</b> have been proposed in the literature to provide this functionality. A more general approach to validate such information is by applying misbehavior detection mechanisms. In this paper, we consider misbehavior detection by enhancing two position <b>verification</b> <b>mechanisms</b> and fusing their results in a generalized framework using subjective logic. We conduct extensive simulations using VEINS to study the impact of traffic density, as well as several types of attackers and fractions of attackers on our mechanisms. The obtained results show the proposed framework can validate position information as effectively as existing approaches in the literature, without tailoring the framework specifically for this use case. Comment: 7 pages, 18 figures, corrected version of a paper submitted to 2016 IEEE 84 th Vehicular Technology Conference (VTC 2016 -Fall) : revised the way an opinion is created with eART, and re-did the experiments (uploaded here as correction in agreement with TPC Chairs...|$|R
5000|$|A clear {{timetable}} {{be drawn}} {{up for the}} elimination of all nuclear weapons and an international <b>verification</b> <b>mechanism</b> for the nuclear activities of nuclear-weapon states. This <b>verification</b> <b>mechanism</b> should be similar to the one used to verify the fulfillment of commitments by non-nuclear weapon states under article 3 of NPT.|$|E
5000|$|Performance {{evaluation}} and analysis unit for technological difficulties and <b>verification</b> <b>mechanism.</b>|$|E
50|$|The CSVR {{would include}} a <b>verification</b> <b>mechanism,</b> with an {{international}} component. The <b>verification</b> <b>mechanism</b> would include two respected figures of international renown to be selected {{by the government and}} the FARC, and the international component {{would include a}} representative from each one of the guarantor and accompanying countries. It would also include a technical component, with the Kroc Institute for International Peace Studies at Notre Dame University designing the methodology to identify advances in the implementation. The <b>verification</b> <b>mechanism</b> would objectively verify the state of the implementation of the agreement, identify delays or deficiencies, provide continuous support and contribute to strengthening the agreement's implementation.|$|E
5000|$|... #Subtitle level 2: Online <b>verification</b> and {{recovery}} <b>mechanisms</b> ...|$|R
30|$|The Internet of Services and Things is {{characterized}} as a distributed computing environment that will be populated by {{a large number of}} software services and things. Within this context, software systems will increasingly be built by reusing and composing together software services and things distributed over the Internet. This calls for new integration paradigms and patterns, formal composition theories, integration architectures, as well as flexible and dynamic composition and <b>verification</b> <b>mechanisms.</b> In particular, service- and thing-based systems pose new challenges for software composition and verification techniques, due to changing requirements, emerging behaviors, uncertainty, and dynamicity.|$|R
40|$|Abstract. In many cases, {{it is not}} cost {{effective}} to automate business processes which affect {{a small number of}} people and/or change frequently. We present a novel approach for enabling domain experts to model and deploy such processes from their respective domain as Web service compositions. The approach is based on user-editable service naming, a graphical composition language where Web services are represented as forms, a targeted restriction of control flow expressivity, automated process <b>verification</b> <b>mechanisms,</b> and code generation for executing orchestrations. A Web-based service composition prototype implements this approach, including a WS-BPEL code generator. ...|$|R
5000|$|... {{improving}} {{border security}} through regional confidence-building mechanisms, {{such as the}} Joint <b>Verification</b> <b>Mechanism,</b> and effective patrolling and monitoring of the arms embargo; ...|$|E
50|$|The Commission issues reports {{under the}} Cooperation and <b>Verification</b> <b>Mechanism</b> every 6 months on {{progress}} with judicial reform, {{the fight against}} corruption and, concerning Bulgaria, the fight against organised crime.|$|E
50|$|The treaty also {{provides}} for a comprehensive control and <b>verification</b> <b>mechanism,</b> overseen by the Agency for the Prohibition of Nuclear Weapons in Latin America and the Caribbean (OPANAL), based in Mexico City.|$|E
40|$|As {{software}} product lines are increasingly used for safety-critical systems, researchers have adapted formal verification {{techniques such as}} model checking and theorem proving to cope with compile-time variability. While {{the focus of the}} ongoing debate lies on the <b>verification</b> <b>mechanisms</b> itself, it becomes increasingly difficult for researchers to maintain an overview about the various accompany-ing modeling techniques. We survey existing approaches as a first step towards a unifying view on variability mechanisms in formal modeling techniques for product lines. We illustrate the approaches by means of a running example to illustrate their commonalities and differences. Categories and Subject Descriptor...|$|R
30|$|We analyse the {{performance}} of GiGi-MR’s result verification algorithm by identifying the percentage of wrong results that are not detected. We use a simulator to test result verification approaches with large populations. The simulator is a Java application that simulates a scenario where an n-dimensional job is broken into work units that are randomly assigned. Among the participants, there {{is a group of}} colluders that attempt to return the same bad result (based on complete or imperfect knowledge, depending on the partition overlapping), in order to fool the replication based <b>verification</b> <b>mechanisms.</b> The simulator returns the percentage of wrong results that were not detected by the server.|$|R
40|$|With the {{traditional}} fund management and vote bank analysis, {{it was difficult}} to manage and analyze the details of fund collection and vote bank where all the records and relevant details were maintained at manual level, which is always a troublesome process. To overcome these problems, an online web application is being developed which provide the means of maintaining the funds gathered, Analyzing vote bank generated, Analysis of area wise grievances and providing data security using encryption algorithms like Advanced Encryption standard enabling two step <b>verification</b> <b>mechanisms</b> such as legitimate user authentication and secured access to data. Also various reports will be generated depicting graphical assessment of information gathered...|$|R
50|$|Malfunction of the <b>verification</b> <b>mechanism</b> {{can cause}} vital {{software}} to suddenly stop working until re-activated or patched. This {{can happen in}} response to detected changes of installed hardware, other software, of the operating system.|$|E
50|$|Tabulation {{fraud and}} {{wholesale}} tampering {{can also be}} prevented by adding a cryptographic <b>verification</b> <b>mechanism.</b> This approach is mathematically based, and thus invariant to software attacks or breaches in chain-of-custody of the paper ballots. One such system is Scantegrity.|$|E
5000|$|... 2 [...] Sudden {{onset of}} the {{investigation}} into abuses at the University of Prishtina {{and the establishment of}} a mechanism to verify all degrees - because you have to stop scientific turbotitujt plagjiatet paid through a transparent <b>verification</b> <b>mechanism,</b> in order to have science knowledge.|$|E
40|$|Abstract: An {{issue of}} our {{article is a}} design of an open {{electronic}} atlas of the South Moravia region. The Atlas is open for inserting new cartographic methods and themes. In frame of {{the design of the}} atlas we can distinguish three main parts. First one is a publishing environment composed from atlas engine, client interface, inserting interface and procedures. Second one is a reference base which is selection of important topographic features with core in landscape skeleton. Last one is cartographic infrastructure, {{a key part of the}} Atlas. The infrastructure is composed from generalization and visualization schemas and methods, visualization styles, <b>verification</b> <b>mechanisms</b> and transformation procedures...|$|R
40|$|Chinese Assoc Cryptol Res, State Key Lab Informat Secur, Inst Software, Grad Univ Chinese Acad Sci, Natl Nat Sci Fdn ChinaTo {{conquer the}} {{weakness}} of existing integrity measurement and <b>verification</b> <b>mechanisms</b> based on trusted computing technology, an integrity assurance mechanism for run-time programs is proposed in this paper. Based on a dynamic integrity measuring module, the proposed integrity assurance mechanism solves the difficulties that may be encountered when attesting {{to the integrity of}} running programs. The paper also describes the design and implementation details of the proposed module. An example of applying the proposed mechanism to protect the vTPM instances in Xen hypervisor is presented at last...|$|R
5000|$|Vehicular Ad hoc Networks (VANETs) is {{a network}} {{protocol}} designed for traffic safety applications. As other computer network protocols, {{it is also}} subject to several attacks that can have fatal consequences due to the VANET's intended usage. One of these possible attacks is location spoofing where the attacker is lying about a vehicle's position to disrupt VANET safety application. This attack can be performed either through existent vehicles or forging new identities by a Sybil attack. There are several publications that propose mechanisms to detect and correct malicious location advertisements. This article presents an overview {{of some of these}} <b>verification</b> <b>mechanisms</b> proposed in the literature.|$|R
5000|$|Likewise, the European Commission Report on the Cooperation and <b>Verification</b> <b>Mechanism</b> {{records that}} there's {{intimidation}} and harassment against individuals in state institutions, like National Integrity Agency, Constitutional Court, High Court of Cassation and Superior Council of Magistracy. [...] "The judicial independence doesn't exist", affirmed Mark Gray, European Commission spokesman.|$|E
50|$|Despite {{a number}} of {{transitional}} issues, the 2015 Cooperation and <b>Verification</b> <b>Mechanism</b> report on Romania found that the new codes led {{to a decline in}} trial length to an average of 1.5 years. According to the same report there was also a reduction in the judiciary's overall workload, with tribunals and courts of appeal experiencing a 17% {{decline in the number of}} cases.|$|E
50|$|Through AIS, the {{positions}} of surrounding vessels are known, and {{could be used for}} automated correlation with radar targets - providing a position <b>verification</b> <b>mechanism.</b> This, however, requires a fairly precise á priori knowledge of own position and heading. The AIS positions of vessels are likely to be dependent on a GNSS system - typically GPS - and will thus be susceptible to the same vulnerabilities as the own vessels GNSS receiver.|$|E
40|$|This {{thesis is}} {{primarily}} concerned with two security mechanisms for wireless networks: location verification and key management. These mechanisms are potential building blocks in the security architectures {{of a range of}} applications. Under location <b>verification,</b> we consider <b>mechanisms</b> for secure encounter, distance and position verification. Possible applications of location <b>verification</b> <b>mechanisms</b> include node tracking, secure topology discovery, secure positioning and the detection of node removal and stealing. Key management protocols are used to ensure that correct public keys of entities are known and used with the entities to which they correspond, and that correct shared secret keys are used with the entities with which they are established. Key management protocols thus provide a good basis for achieving various security objectives, such as securing routing, or the protection of users' personal communications. In {{the first part of this}} thesis, we propose several location <b>verification</b> <b>mechanisms</b> and we show their applicability to wireless networks. First, we analyze the resistance of the distance and position measurement techniques to attacks. We then propose mechanisms for secure position verification. We further demonstrate the applicability of these mechanisms to secure positioning and node removal detection in wireless multi-hop networks. We then present a set of <b>mechanisms</b> for the <b>verification</b> of node encounters in wireless multi-hop networks. Finally, we show how encounter verification can be used to prevent wormhole attacks, to secure lastencounter routing, and to secure topology discovery. Our location <b>verification</b> <b>mechanisms</b> are based on distance-bounding and distance estimation techniques, and rely on conventional cryptographic primitives. In the second part of the thesis, we propose a straightforward, mobility-assisted technique that can be used to provide peer-to-peer security in mobile networks. We show that far from being a hurdle, mobility can be exploited to set up security associations among users. We leverage on the temporary vicinity of users, during which appropriate cryptographic protocols are run. We illustrate the operation of the solution in fully self-organized ad hoc networks, and in ad hoc networks that are controlled by an off-line central authority. We then explore routing in ad hoc networks in which security associations are not established between all pairs of nodes. We show that in that case, secure routing is still possible, and we propose related protocols. We then propose a set of protocols for public-key management in self-organized ad hoc networks. We base our approach on public-key certificates and certificate chaining. We show that this approach is efficient in scenarios in which users issue mutual certificates in a random manner, and in those in which users create PGP-like certificate graphs. We further present a detailed analysis of the PGP certificate graph and we show that this graph exhibits some small world properties. We also present a model for the construction of PGP-like small world certificate graphs...|$|R
40|$|International audienceThe massive {{diffusion}} of custom system-on-a-chipand the growing obsolescence problems pushes {{the need for}} fast, automatic and reliable <b>verification</b> <b>mechanisms.</b> The paper shows an automatic methodology for verifying the correctness of a microprocessor core by generating appropriate test program and comparing {{the behavior of the}} model with a reference. The methodology exploits the RT-level design to drive the search process, and the reference as a mere black box. Therefore, it can be used whenever a new core is obtained by modifying an obsolete one and only little information are available on the original design. As a case study a customized 68 hc 11 is examined and experimental results show the effectiveness of the proposed approach...|$|R
40|$|Abstract This paper {{presents}} {{a concept of}} component verification framework dedicated to a particular lightweight component environment. The starting point of the paper constitutes {{a discussion about the}} significance of verification of syntax in-consistencies in software development. Next, the need of verification in service-oriented and component-based systems is presented, and various approaches of verification in existing component environments are explained. The main part of the paper introduces a concept of functional integrity of component-based systems that utilize <b>verification</b> <b>mechanisms</b> which check consistency betwe-en components. The proposed solution is built on a fine-grained component environment (close to classes similarly to the Spring Framework) realized in the AgE platform. Selected technical aspects of framework design illustrate the considerations of the paper...|$|R
50|$|Due to Romania's {{entry into}} the EU, Romania {{has been forced to}} improve {{transparency}} and accountability in the public sector. However, citizens and businesses still consider the government's reform weak and slow due to poor implementation of laws on transparency of information and decision-making process. The EU Commission's latest Cooperation and <b>Verification</b> <b>Mechanism</b> report has however lauded the National Anticorruption Directorate and various other agencies in improving the fight against corruption, which has recently brought a number of high-profile convictions ranging from a former prime minister and parliamentarians to mayors and businessmen.|$|E
50|$|In 2004, the United States {{announced}} that it opposed {{the inclusion of a}} <b>verification</b> <b>mechanism</b> in the treaty {{on the grounds that the}} treaty could not be effectively verified. On November 4, 2004, the United States cast the sole vote in the First Committee of the United Nations General Assembly against a resolution (A/C.1/59/L.34) calling for negotiation of an effectively verifiable treaty. The Bush Administration supported a treaty but advocated an ad hoc system of verification wherein states would monitor the compliance of other states through their own national intelligence mechanisms.|$|E
50|$|The Council reiterated {{concerns}} {{about the lack of}} information with regard to the use and recruitment of child soldiers and the protection of children as mentioned in Resolution 1460 (2003), as well as demands contained in resolutions 1261 (1999), 1314 (2000) and 1379 (2001). Furthermore, the resolution demanded unimpeded access to the Third Party <b>Verification</b> <b>Mechanism</b> and MONUC in order to assess allegations of the presence of Rwandan troops on Congolese territory and support offered by the Congolese government to armed groups in the east of the country.|$|E
40|$|Cooperative {{vehicular}} {{systems have}} the potentialto significantly increase traffic efficiency and safety. However,they also {{raise the question}} of to what extent information thatis received from other vehicles can be trusted. In this paperwe present a novel approach for increasing the trustworthinessof cooperative driving through a model-based approach forverifying membership views in vehicular platoons. We define aformal model for platoon membership, cooperative awarenessclaims, and membership <b>verification</b> <b>mechanisms.</b> With the helpof a satisfiability solver, we are able to quantitatively analysethe impact of different system parameters on the verifiability ofreceived information. Our results demonstrate the importance ofcross validating received messages, as well as the surprising diffi-culty in establishing correct membership views despite powerfulverification mechanisms. Verifiable real-time coordination for safe cooperative drivin...|$|R
40|$|The paper {{presents}} {{a concept of}} component verification framework dedicated to a particular lightweight component  environment. A starting point of the paper constitutes a discussion about significance of  verification process of syntax inconsistencies in the software development. Next, the need of verification in service-oriented and component-based  systems are presented and various approaches of verification in existing component environments are explained. The  {{main part of the}} paper introduces a concept of a functional integrity of component-based systems that utilize  <b>verification</b> <b>mechanisms</b> checking components consistency. The proposed solution is built on fine-grained component environment  (close to classes similarly to the Spring Framework) realized in AgE platform. Selected technical aspects of the framework design  illustrate the considerations of the paper...|$|R
40|$|Business {{ecosystems}} where {{services from}} enterprises {{across the world}} are marketed and acquired, demand efficient collaborative project management facilities. In particular, reputation and breach management systems are essential in partner selection and proper project delivery. Reputation systems need to provide measurable scales for collection of objective and arbitrable information about members of the ecosystem. In addition, how breaches or disputes can affect reputation of collaborating partners, and how such disputes can be resolved (i. e. breach recovery) are interesting questions. Furthermore, role of business process management (BPM) systems in resolving breach or dispute situations is also an interesting point for study. This thesis proposes modern model-driven reputation and breach management systems of its own, named Reputation and Breach Management System (RAB_MS). Purpose of the RAB_MS is to improve and refine trust between business partners in the business ecosystems. The presented models are based on {{state of the art}} techniques of service oriented architecture (SOA). The models are verified by formal automated <b>verification</b> <b>mechanisms</b> in YAWL system, to avoid syntactical, structural, and semantic errors, and interpretation ambiguities. Results of the formal <b>verification</b> <b>mechanisms</b> ensure that the business processes in the proposed reputation and breach management system meet necessary properties such as soundness and weak soundness. In simpler words, RAB_MS have no deadlocks, livelocks, or dead task within its business process models. Vain tiivistelmä. Opinnäytteiden arkistokappaleet ovat luettavissa Helsingin yliopiston kirjastossa. Hae HELKA-tietokannasta ([URL] only. The paper copy of the whole thesis is available for reading room use at the Helsinki University Library. Search HELKA online catalog ([URL] avhandlingens sammandrag. Pappersexemplaret av hela avhandlingen finns för läsesalsbruk i Helsingfors universitets bibliotek. Sök i HELKA-databasen ([URL]...|$|R
