0|5030|Public
40|$|Multi-chip module (MCM) {{packaging}} {{can reduce}} the cost and increase the utility of <b>field</b> <b>programmable</b> systems. We are currently developing a first generation <b>Field</b> <b>Programmable</b> Multi-chip Module (FPMCM) as a test vehicle for a particular MCM technology. We present the advantages of MCM for <b>field</b> <b>programmable</b> systems and develop analytical models for estimating the capacity of FPMCM architectures based on Rent's Rule. These models are used to generate the architecture of our first generation prototype which employs smaller FPGA die and a mixture of direct and switched interconnect. We conclude {{with a discussion of}} the challenges and opportunities that FPMCMs face. 1 MCM Benefits <b>Field</b> <b>Programmable</b> Systems <b>Field</b> <b>programmable</b> systems (FPS) combining large numbers of <b>field</b> <b>programmable</b> gate arrays (FPGAs) and <b>field</b> <b>programmable</b> interconnect (FPIC) have the potential to revolutionize computing [CSM 92] [BRV 92] [Arn 93] [dB 93]. Current implementations typically consist of large ICs in single [...] ...|$|R
40|$|Multichip module {{technology}} {{can be used to}} dramatically increase the capability and performance of <b>field</b> <b>programmable</b> gate arrays (FPGAs) and the <b>field</b> <b>programmable</b> systems (FPS) that they are a part of. After an analysis of the key advantages that MCM technology has for FPGAs, we present the design of our first-generation silicon-on-silicon <b>field</b> <b>programmable</b> multi-chip module (FPMCM), analyze its limitations, and present some lessons learned in the development process. We conclude with a comparison of MCM-C and MCM-D technology for this application and suggest that the case for MCM-D for FPMCMs is most compelling when MCM-D is considered as a doorway to active substrate and chip-on-chip technologies. 1 Introduction 1. 1 <b>Field</b> <b>Programmable</b> Logic Devices <b>Field</b> <b>Programmable</b> Gate Arrays (FPGAs) and <b>Field</b> <b>Programmable</b> Logic Devices (FPLDs) were introduced in the mid- 1980 's as a quick-turnaround alternative to mask programmed gate arrays of up to a few-thousand gates[Xil 93]. The basic id [...] ...|$|R
40|$|Motorola’s <b>field</b> <b>programmable</b> analog arrays can be {{utilized}} to enrich educational laboratories {{by providing a}} platform for experiments in control systems engineering, analog signal filtering, switched capacitor circuit design, and simulation of dynamic systems. The <b>field</b> <b>programmable</b> analog array package includes an excellent PC based software support system for application design. Additional hardware requirements are minimal as <b>field</b> <b>programmable</b> analog array is almost a self contained, stand-alone system. Primary application of <b>field</b> <b>programmable</b> analog array is analog signal processing and filtering. However, universal features of the hardware make it very suitable for applications in many other engineering disciplines...|$|R
50|$|<b>Field</b> <b>programmable</b> RF (FPRF) is a {{class of}} radio {{frequency}} transceiver microchip that mimics {{the concept of an}} FPGA (<b>field</b> <b>programmable</b> gate array) in the RF domain to deliver a multi-standard, multi frequency device.|$|R
40|$|<b>Field</b> <b>programmable</b> logic has thrived by {{offering}} an alternative {{technology for the}} realisation of conventional digital systems. The combination of user programmability, and rapidly increasing levels of logic integraton and operating speeds, explains the continued success of <b>field</b> <b>programmable</b> devices. Reconfigurable logic, and especially dynamically reconfigurable logic, are categories of <b>field</b> <b>programmable</b> logic {{that can be used}} to extend the desig-n space to cream digital systems with distinctly new characteristics...|$|R
5000|$|<b>Field</b> <b>Programmable</b> - Some {{models have}} <b>field</b> <b>programmable</b> options such as Non- Priority Scan, Alert Duration, Priority Alert, On/Off Duty, Reset Options, and Push-To-Listen. Many Minitor pagers can be {{hooked up to}} a {{computer}} with a special cable and options changed.|$|R
30|$|No {{of rules}} are <b>field</b> <b>programmable.</b>|$|R
40|$|This paper {{presents}} an implementation of Genetic Programming using a <b>Field</b> <b>Programmable</b> Gate Array. This novel implementation uses {{a high level}} language to hardware compilation system, called Handel-C, to produce a <b>Field</b> <b>Programmable</b> Logic Array capable of performing all the functions required of a Genetic Programming System. Two simple test problems demonstrate that GP running on a <b>Field</b> <b>Programmable</b> Gate Array can outperform a software {{version of the same}} algorithm by exploiting the intrinsic parallelism available using hardware, and the geometric parallelisation of Genetic Programming...|$|R
5000|$|... in <b>Field</b> <b>Programmable</b> Gate Array and Complex Programmable Logic Device ...|$|R
40|$|Employing a <b>field</b> <b>programmable</b> {{gate array}} to realize space-vector pulse width {{modulation}} is a solution to boost system performance. Although there is much literature {{in the application of}} three-phase space-vector {{pulse width modulation}} based on <b>field</b> <b>programmable</b> gate arrays, most is on conventional space-vector pulse width modulation with designs that are complicated. This article will present a simple approach to realize five-segment discontinuous space-vector pulse width modulation based on a <b>field</b> <b>programmable</b> gate array, in which the judging of sectors and the calculation of the firing time are simpler with fewer switching losses. The proposed space-vector pulse width modulation has been successfully designed and implemented to drive on a three-phase inverter system that is loaded by an induction machine of 1. 5 kW using the APEX 20 KE Altera <b>field</b> <b>programmable</b> gate array (Altera Corporation, San Jose, California, USA) ...|$|R
50|$|Stellarton is a Tunnel Creek CPU with an Altera <b>Field</b> <b>Programmable</b> Gate Array (FPGA).|$|R
50|$|The {{experience}} from {{this program was}} used to design the <b>Field</b> <b>Programmable</b> Nanowire Interconnect circuit.|$|R
50|$|The new {{correlator}} is a 96 input continuum correlator using <b>Field</b> <b>Programmable</b> Gate Array (FPGA) chips.|$|R
5000|$|<b>Field</b> <b>Programmable</b> RF {{technology}} has been adopted {{by a number of}} companies for a diverse range of projects. These include: ...|$|R
40|$|In {{this paper}} {{we present a}} novel RAM-based <b>field</b> <b>programmable</b> mixedsignal {{integrated}} device consisting of a <b>Field</b> <b>Programmable</b> Gate Array (FPGA), a set of programmable and interconnectable analog cells, and a microprocessor core. This processor can run general purpose user programs, handle the dynamic reconfiguration of the programmable blocks and probe in real time internal digital and analog signals. The device is especially suitable for development and fast prototyping of mixed signal integrated applications. 1...|$|R
40|$|A <b>field</b> <b>programmable</b> {{gate array}} is a {{semiconductor}} device {{that can be}} configured by the designer after manufacturing. They are programmed using a logic circuit diagram or a source code in a Hardware description language (HDL). <b>Field</b> <b>Programmable</b> Gate Arrays (FPGA) have played increasingly irnpo 1 iant roles in military and aerospace applications. Xilinx SRAM-based FPGAs have been extensively used in commercial applications. In today's electronic world, SRAM-based <b>Field</b> <b>Programmable</b> Gate Arrays (FPGAs) are becoming important components. The objective of this project is to design and implement a dynamic bum-in test platform that can test Xilinx SRAM-based FPGAs. The system offers, but {{is not limited to}} error logging, in-test partial and complete reconfiguration, read back, and expandability features. Designers have full control over which functional elements of the FPGA to stress...|$|R
40|$|Image {{processing}} algorithms for 2 D digital filtering, morphologic operations, motion estimation, and {{template matching}} involve massively parallel computations that {{can benefit from}} using reconfigurable systems with massive <b>field</b> <b>programmable</b> gate array (FPGA) hardware resources. In addition, each algorithm {{can be considered a}} special case of a "generalized template matching" (GTM) operation. Application performance on reconfigurable computer systems is often limited by the bandwidth to host or off chip memory. This paper describes the GTM operation and characterizes the data allocation and buffering strategies for GTM operation on reconfigurable computers. Several mechanisms that support different levels of parallelism are proposed and summarized in the paper. Keywords: Template Matching, Configurable Computing, <b>Field</b> <b>Programmable</b> Gate Array (FPGA), Reconfiguration 1 Introduction Computing systems that use co-processor boards based on <b>field</b> <b>programmable</b> gate array (FPGA) chips may a [...] ...|$|R
40|$|Abstract: The <b>field</b> <b>programmable</b> {{gate array}} {{is the fastest}} growing technology. The bio-impedance {{measurement}} system is implemented in reconfigurable <b>field</b> <b>programmable</b> gate array hardware. The design of bio-impedance measurement system using Xilinx system generator is more convenient and cheaper for revising, if the Bio-impedance measurement system requires parameters changes in practical use, since no new hardware device is needed to make revise. The presented system is time saving, fast, adjustable system parameter and easy to use...|$|R
40|$|Abstract—For certain applications, custom {{computational}} hardware created using <b>field</b> <b>programmable</b> gate arrays (FPGAs) produces significant performance improvements over processors, leading some {{in academia}} and industry {{to call for}} the inclusion of FPGAs in supercomputing clusters. This paper presents a comparative analysis of FPGAs and traditional processors, focusing on floatingpoint performance and procurement costs, revealing economic hurdles in the adoption of FPGAs for general High-Performance Computing (HPC). Index Terms — computational accelerator, digital arithmetic, <b>Field</b> <b>programmable</b> gate arrays, highperformanc...|$|R
5000|$|The Signetics 82S100 FPLA (<b>Field</b> <b>Programmable</b> Logic Array) was {{the first}} commercially {{successful}} user programmable logic device, the forerunner of the modern FPGA.|$|R
40|$|Abstract-This article {{describes}} an efficient {{approach to the}} implementation of bit-serial lattice wave digital filters based on <b>field</b> <b>programmable</b> gate array (FPGA). In this paper, a time schedule of all of the bit-serial two-port adaptors is presented as a bridge between conception and completion. Finally, with the satisfying frequency response, the filter is successfully tested by both computer simulation and real signal measured from the programmed FPGA. Keywords-lattice wave digital filters, bit-serial, two-port adaptors, <b>field</b> <b>programmable</b> gate array (FPGA) I...|$|R
5000|$|... a microcontroller, in some versions; a {{microprocessor}} or <b>field</b> <b>programmable</b> gate array (FPGA), which processes {{the information and}} acts on the interface between the GPS; ...|$|R
40|$|Abstract. The paper {{reports on}} some {{experiments}} with implementing positional digital image filters using <b>field</b> <b>programmable</b> devices. It demonstrates {{that a single}} <b>field</b> <b>programmable</b> device {{may be used to}} build such a filter. By using extensive pipelining in the design, the filter can achieve performance of 50 million pixels per second (using Xilinx XC 4000 E devices) and almost 90 MHz (in case of Virtex- 2 devices. These results were obtained using automatic synthesis from VHDL descriptions, avoiding any direct manipulation in the design...|$|R
40|$|This {{research}} {{consist of}} a novel <b>field</b> <b>programmable</b> gate array (FPGA) based reconfigurable coprocessor board being used to evaluate hardware architecture for speedup of matrix computation using high speed <b>field</b> <b>programmable</b> array. This paper have been developed using a mathematics of array (MOA) and are optimal in the sense they reduce normal complexity of calculation {{to a series of}} primitive additions and offsets based on different matrix operation. The method simple yet powerful, produces right and fast result which areInternational Journal of Enterprise Computing an...|$|R
50|$|<b>Field</b> <b>Programmable</b> Nanowire Interconnect (often {{abbreviated}} FPNI) is a {{new computer}} architecture developed by Hewlett-Packard. This is a defect-tolerant architecture, using {{the results of the}} Teramac experiment.|$|R
50|$|The FITkit {{contains}} a low-power microcontroller, <b>field</b> <b>programmable</b> gate arrays chip (FPGA) {{and a set}} of peripherals.Utilizing advanced reconfigurable hardware, FITkit may be modified to suit various tasks.|$|R
40|$|Abstract—A solar {{tracking}} generating {{power system}} is designed and implemented. An expert controller, sensors and input/output interface are integrated with a tracking mechanism to increase the energy generation efficiency of solar cells. In order to track the sun, cadmium sulfide light sensitive resistors are used. To achieve optimal solar tracking, a fuzzy algorithm is developed. A <b>field</b> <b>programmable</b> gate array is applied to design the controller such that the solar cells always face the sun {{in most of the}} day time. Index Terms—solar tracking, two-axis tracking, <b>field</b> <b>programmable</b> gate array, fuzzy control. I...|$|R
40|$|Abstract—We {{present a}} {{design of a}} {{predictive}} control scheme for longitudinal beam dynamics in heavy ion synchrotrons. Specifically, we consider a linear-quadratic model predictive control (MPC) approach, whereby the quadratic program is solved via a fast gradient method. Furthermore, we investi-gate whether the fast gradient method allows for real-time feasible implementation of the proposed approach on a <b>field</b> <b>programmable</b> gate array (FPGA). Our results indicate that sampling rates {{in the order of}} 1 MHz are achievable. Index Terms—model predictive control, heavy ion syn-chrotrons, longitudinal beam control, fast gradient method, <b>field</b> <b>programmable</b> gate array I...|$|R
40|$|Thyristor {{switched}} capacitor (TSC) is a commonly used method of compensation of reactive {{power on the}} grid, but problems are that the compensator responses slowly and real-time tracking capability is poor. So software and hardware are developed. The fuzzy-PI controller is adopted to control TSC. And this controller {{is embedded in the}} <b>field</b> <b>programmable</b> gate array (FPGA), which can take advantage of FPGA (<b>Field</b> <b>Programmable</b> Gate Array). The detailed analysis is given. Simulation and field test show that the design improves speed, reliability and stability of the controller...|$|R
40|$|Area-IO {{provide a}} way to {{eliminate}} the IO bottleneck of <b>field</b> <b>programmable</b> logic devices (FPLDs) created the mismatch between the ability of perimeter bonds to provide IO and and the propensity of logic to demand it. Whether the incorporation of area IO into FPLD architectures has undesirable side effects {{is a question that}} has not yet been answered. In this paper, we examine the architectural impact of area-IO on FPLDs from a theoretical and experimental standpoint and show that the introduction of area IO generally improves the routability and delay of a set of benchmark circuits. 1 1 Introduction The application of area-IO to <b>Field</b> <b>Programmable</b> Logic Devices (FPLDs) originally stemmed from our work on <b>Field</b> <b>Programmable</b> Multi-Chip Modules (FPMCM). [DGI + 94] In this section we introduce areaIO and present reasons why area-IO are desirable even in the context of single-chip FPLDs. We then propose a specific area-IO architecture whose characteristics will be the subject the remain [...] ...|$|R
40|$|We {{describe}} {{the development of}} an interactive editor for small to intermediate circuit design using the <b>Field</b> <b>Programmable</b> Gate Array CLi 6000 of Concurrent Logic, Inc [...] A short introduction to FPGAs is given and the requirements for a low_level hardware editing tool are stated. The implementation of such an editor is presented in detail and it is contrasted to an editor for the CAL 1 FPGA architecture. Upon this comparison some conclusions are drawn. Keywords: <b>Field</b> <b>Programmable</b> Gate Arrays, Digital Design, Editor, Oberon Introduction With the advent of <b>Field</b> <b>Programmable</b> Gate Arrays (FPGAs), experimental hardware design has become a matter of moving the mouse pointer around a computer screen and clicking buttons. The flexibility of static RAM_based FPGAs has made the introduction of hardware editors feasible. The designer can edit, view, verify, and download a circuit to real hardware within minutes. This work aims at {{the development of an}} editor for hardware design used in an introdu [...] ...|$|R
50|$|Crystal Core {{processing}} engine - a sound {{processing device}} capable of sampling frequencies up to 384 kHz. Crystal core {{does not use}} DSP-based architecture, but a <b>Field</b> <b>Programmable</b> Gate Array.|$|R
50|$|An Actel <b>Field</b> <b>Programmable</b> Gate Array (FPGA) RT1280 {{provides}} the necessary computational abilities for the camera. The signal of the CCD {{is transformed into}} a 12 bit digital signal before data processing.|$|R
40|$|ABSTRACT: A Built-In Self-Test (BIST) {{approach}} is presented for system-level {{testing of the}} programmable Input/Output (I/O) buffers in <b>Field</b> <b>Programmable</b> Gate Arrays (FPGAs) and configurable System-on-Chip (SoC). We discuss implementation methods for the BIST approach, including parameterized VHDL and FPGA-specific hardware design description languages. The fault detection capabilities and limitations of the BIST approach are presented along {{with the results of}} the application of the various implementation methods to several commercially available FPGAs and SoCs. 1 I. INTRODUCTION AND BACKGROUND The programmable Input/Output (I/O) cells in <b>Field</b> <b>Programmable</b> Gate Arrays (FPGAs), as well as the programmable I/O cells associated with FPGA cores i...|$|R
40|$|Abstract. The use of <b>field</b> <b>programmable</b> {{devices in}} security-critical {{applications}} {{is growing in}} popularity; in part, this {{can be attributed to}} their potential for balancing metrics such as efficiency and algorithm agility. However, in common with non-programmable alternatives, physical attack techniques such as fault and power analysis are a threat. We investigate a family of next-generation <b>field</b> <b>programmable</b> devices, specifically those based on the concept of time sharing, within this context: our results support the premise that extra, inherent flexibility in such devices can offer a range of possibilities for low-overhead, generic countermeasures against physical attack. ...|$|R
40|$|This paper {{proposes a}} robust real-time, {{scalable}} and modular <b>Field</b> <b>Programmable</b> Gate Array (FPGA) based {{implementation of a}} spatiotemporal segmentation of video objects. The goal of this work is to translate an existing object segmentation algorithm into hardware to achieve real-time performance. The proposed implementation achieved an optimum processing speed of 133 MPixels/s while utilizing minimal hardware resources. The design was successfully simulated, synthesized and tested for real-time performance on an actual hardware platform which consists of a frame grabber with a user programmable FPGA- Xilinx Virtex-II Pro. Index Terms — Image segmentation, <b>Field</b> <b>programmable</b> gate arrays, Video signal processin...|$|R
