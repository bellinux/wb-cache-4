185|239|Public
50|$|An <b>XOR</b> <b>gate</b> can be {{constructed}} using MOSFETs. Here is a diagram of a pass transistor logic implementation of an <b>XOR</b> <b>gate.</b>|$|E
5000|$|... #Caption: 2 Clock {{generators}} sending electrons into an <b>XOR</b> <b>gate</b> ...|$|E
5000|$|... #Caption: The {{classical}} analog of the CNOT gate is a reversible <b>XOR</b> <b>gate.</b>|$|E
50|$|A phase {{detector}} suitable for square wave signals {{can be made}} from an exclusive-OR (<b>XOR)</b> logic <b>gate.</b> When the two signals being compared are completely in-phase, the <b>XOR</b> <b>gate's</b> output will have a constant level of zero. When the two signals differ in phase by 1°, the <b>XOR</b> <b>gate's</b> output will be high for 1/180th of each cycle — the fraction of a cycle during which the two signals differ in value. When the signals differ by 180° — that is, one signal is high when the other is low, and vice versa — the <b>XOR</b> <b>gate's</b> output remains high throughout each cycle.|$|R
40|$|In {{this work}} {{we present a}} review of all-optical <b>XOR</b> <b>gates</b> based on Mach-Zehnder Interferometer with Semiconductor Optical Amplifiers (MZI-SOA), using NRZ {{modulated}} signals driven at 10 Gbit/s. The performance of two alternative schemes for logical <b>XOR</b> <b>gates</b> implementation is demonstrated through numerical simulations and experimentally. The extinction ratio shows high operation performance with low degradation...|$|R
40|$|This paper {{presents}} a new parallel multiplier for the Galois field GF(2 m) whose elements are represented using the optimal normal basis of type II. The proposed multiplier requires 1. 5 (m 2 − m) <b>XOR</b> <b>gates,</b> {{as compared to}} 2 (m 2 − m) <b>XOR</b> <b>gates</b> required by the Massey-Omura multiplier. The time complexities of the proposed and the Massey-Omura multipliers are similar...|$|R
5000|$|The <b>XOR</b> <b>gate</b> may be {{achieved}} by combining [...] (square root of Swap) operations with individual spin operations: ...|$|E
50|$|FireWire uses Data strobe {{encoding}} (D/S encoding). In D/S encoding, two non-return-to-zero (NRZ) {{signals are}} used to transmit the data with high reliability. The NRZ signal sent is fed with the clock signal through an <b>XOR</b> <b>gate,</b> creating a strobe signal. This strobe is then put through another <b>XOR</b> <b>gate</b> along with the data signal to reconstruct the clock. This in turn acts as the bus's Phase-locked loop for synchronization purposes.|$|E
5000|$|... #Caption: The two domino logic gates, {{from which}} all others can be built. The <b>XOR</b> <b>gate</b> is {{dependent}} on timing.|$|E
40|$|This paper {{provides}} a proof that given a standard or modular linear feedback shift register (LFSR) that uses k 2 -input <b>XOR</b> <b>gates</b> to generate pseudorandom sequences, any transformed LFSR (t-LFSR) implementing the same characteristic polynomial, f(x), {{as the standard}} or modular LFSR cannot use fewer than log 2 (k+ 1) 2 -input <b>XOR</b> <b>gates</b> when k is an odd number, or 1 +log 2 k 2 -input <b>XOR</b> <b>gates</b> when k is an even number. This property applies to any n-stage t-LFSR design regardless of whether f(x) is a primitive polynomial or not. A new class of minimum-cost LFSRs (min-LFSRs) is subsequently developed to reduce the hardware cost to a minimum. 1...|$|R
25|$|This LFSR {{configuration}} is {{also known}} as standard, many-to-one or external <b>XOR</b> <b>gates.</b> The alternative Galois configuration is described in the next section.|$|R
40|$|Abstract. We {{introduce}} a matrix decomposition method and prove that multiplication in GF(2 k) with a Type 1 optimal normal basis for {{can be performed}} using k 2 − 1 <b>XOR</b> <b>gates</b> irrespective of {{the choice of the}} irreducible polynomial generating the field. The previous results achieved this bound only with special irreducible polynomials. Further-more, the decomposition method performs the multiplication operation using 1. 5 k(k − 1) <b>XOR</b> <b>gates</b> for Type 2 a and 2 b optimal normal bases, which matches previous bounds. ...|$|R
5000|$|The {{truth table}} of P [...] Q is as follows:Note {{that it is}} {{equivalent}} to that produced by the XNOR gate, and opposite to that produced by the <b>XOR</b> <b>gate.</b>|$|E
50|$|In logical circuits, {{a simple}} adder {{can be made}} with an <b>XOR</b> <b>gate</b> to add the numbers, and a series of AND, OR and NOT gates to create the carry output.|$|E
5000|$|The {{algebraic}} expressions [...] and [...] ( [...] ) both {{represent the}} <b>XOR</b> <b>gate</b> with inputs A and B. The behavior of XOR is summarized {{in the truth}} table shown on the right.|$|E
40|$|Probabilistic quantum {{logic gates}} can be {{constructed}} using linear optical elements, ancilla photons, and post-selection {{based on the results}} of measurements. Here we describe an experimental demonstration of a simple quantum circuit that combines two exclusive-OR (<b>XOR)</b> logic <b>gates</b> of that kind. Although circuits using <b>XOR</b> <b>gates</b> are not reversible, they may still be useful in a variety of applications such as generating non-classical states of light...|$|R
50|$|Pseudo-random number (PRN) generators, {{specifically}} Linear feedback shift registers, {{are defined}} in terms of the exclusive-or operation. Hence, a suitable setup of <b>XOR</b> <b>gates</b> can model a linear feedback shift register, in order to generate random numbers.|$|R
50|$|The Flipped-Scan {{countermeasure}} {{technique to}} protect scan-chains was proposed earlier.This involved placing inverters at random {{points in the}} scan-chain. Security stemmed {{from the fact that}} an adversary could not guess the numberand positions of the inverters. This technique was cryptanalyzed using aRESET attack. It was shown that if all flip-flops in the scan-chain are initiallyRESET, then the positions of the inverters can be completely determined by the0 → 1 and 1 → 0 transitions in the scanned-out vector. As an alternative, theXOR-CHAIN based countermeasure was proposed. The technique involvesplacing <b>XOR</b> <b>gates</b> at random points of the chain. Security again {{stems from the fact that}} an adversary is unable to guess the number and positions of the <b>XOR</b> <b>gates.</b>|$|R
50|$|It is {{most common}} to regard {{subsequent}} inputs as being applied through {{a cascade of}} binary exclusive-or operations: the first two signals are fed into an <b>XOR</b> <b>gate,</b> then the output of that gate is fed into a second <b>XOR</b> <b>gate</b> together with the third signal, and so on for any remaining signals. The result is a circuit that outputs a 1 {{when the number of}} 1s at its inputs is odd, and a 0 when the number of incoming 1s is even. This makes it practically useful as a parity generator or a modulo-2 adder.|$|E
5000|$|This is an {{important}} distinction to make since subtraction itself is not commutative, but the difference bit [...] is calculated using an <b>XOR</b> <b>gate</b> which is commutative.The truth table for the half subtractor is: ...|$|E
50|$|There are 2 symbols for XNOR gates: {{one with}} {{distinctive}} shape {{and one with}} rectangular shape and label. The distinctive symbol for the XNOR gate {{is that of the}} <b>XOR</b> <b>gate</b> with an added inversion bubble.|$|E
50|$|<b>XOR</b> <b>gates</b> {{produce a}} 0 when both inputs match. When {{searching for a}} {{specific}} bit pattern or PRN sequence {{in a very long}} data sequence, a series of <b>XOR</b> <b>gates</b> can be used to compare a string of bits from the data sequence against the target sequence in parallel. The number of 0 outputs can then be counted to determine how well the data sequence matches the target sequence. Correlators are used in many communications devices such as CDMA receivers and decoders for error correction and channel codes. In a CDMA receiver, correlators are used to extract the polarity of a specific PRN sequence out of a combined collection of PRN sequences.|$|R
40|$|We {{propose a}} simpler and faster Gold codes generator, {{which can be}} {{efficiently}} initialized to any desired code, with a minimum delay. Its principle consists of generating only one sequence (code number 1) from which we can produce all the other different signal codes. This is realized by simply shifting this sequence by different delays that are judiciously determined by using the bicorrelation function characteristics. This {{is in contrast to}} the classical Linear Feedback Shift Register (LFSR) based Gold codes generator that requires, in addition to the shift process, a significant number of logic <b>XOR</b> <b>gates</b> and a phase selector to change the code. The presence of all these logic <b>XOR</b> <b>gates</b> in classical LFSR based Gold codes generator provokes the consumption of an additional time in the generation and acquisition processes. In addition to its simplicity and its rapidity, the proposed architecture, due to the total absence of <b>XOR</b> <b>gates,</b> has fewer resources than the conventional Gold generator and can thus be produced at lower cost. The Digital Signal Processing (DSP) implementations have shown that the proposed architecture presents a solution for acquiring Global Positioning System (GPS) satellites signals optimally and in a parallel way...|$|R
50|$|As the CRC-32 {{polynomial}} has a {{large number}} of terms, when computing the remainder a byte at a time each bit depends on several bits of the previous iteration. In byte-parallel hardware implementations this calls for either multiple-input or cascaded <b>XOR</b> <b>gates</b> which increases propagation delay.|$|R
5000|$|The <b>XOR</b> <b>gate</b> (sometimes EOR gate, or EXOR {{gate and}} {{pronounced}} as Exclusive OR gate) is a digital logic gate {{that gives a}} true (1/HIGH) output {{when the number of}} true inputs is odd. An <b>XOR</b> <b>gate</b> implements an exclusive or; that is, a true output results if one, and only one, of the inputs to the gate is true. If both inputs are false (0/LOW) or both are true, a false output results. XOR represents the inequality function, i.e., the output is true if the inputs are not alike otherwise the output is false. A way to remember XOR is [...] "one or the other but not both".|$|E
5000|$|This {{produces}} the same truth {{table for the}} bit arriving at the adder as the multiplexer solution does since the <b>XOR</b> <b>gate</b> output will be what the input bit is when [...] and the inverted input bit when [...]|$|E
50|$|An <b>XOR</b> <b>gate</b> is {{constructed}} similarly to an OR gate, except {{with an additional}} NAND gate inserted such that if both inputs are high, the inputs to the final NAND gate will also be high, and the output will be low.|$|E
40|$|In {{this paper}} {{we present a}} method for {{symbolic}} analysis of unreliable logic circuits {{in the presence of}} correlated and data-dependent gate failures, described by Markov chains. Furthermore, using this method we investigate the influence of data-dependent failures on the performance of majority logic and multiple input <b>XOR</b> <b>gates...</b>|$|R
40|$|This thesis {{presents}} the Ultra Low Voltage Dual Rail (ULVDR) logic style, a technology aimed at achieving high processing speeds at low supply voltage. Implementations of ULVDR inverters, NAND/NOR <b>gates,</b> <b>XOR</b> <b>gates,</b> and adders are shown. Useful simulations, principles, and guidelines for creating ULVDR circuits are introduced. When compared to equivalent circuits implemented in Cascode Voltage Switch Logic (CVSL), the ULVDR NAND gates were 57 times faster, ULVDR <b>XOR</b> <b>gates</b> were 28 times faster, and the ULVDR full-adder was 52 times faster. Simulations were done on long chains (30 - 32 elements) using a supply voltage of 300 mV. The {{increase in speed}} can enable new types of applications, where high processing speeds are essential, or allow lower power consumption by further decreasing supply voltage or putting circuits to sleep when done processing...|$|R
40|$|The field GF … 2 m † {{is often}} viewed as an m-dimensional vector space defined over GF… 2 †. A set of m linearly {{independent}} vectors (elements of GF… 2 m †) are chosen {{to serve as the}} basis of representation. The following are the most commonly used bases: AbstractÐThis paper presents a new parallel multiplier for the Galois field GF … 2 m † whose elements are represented using the optimal normal basis of type II. The proposed multiplier requires 1 : 5 …m 2 � m † <b>XOR</b> <b>gates,</b> as compared to 2 …m 2 � m † <b>XOR</b> <b>gates</b> required by the Massey-Omura multiplier. The time complexities of the proposed and the Massey-Omura multipliers are similar. Index TermsÐGalois field, optimal normal basis, Massey-Omura multiplier, space complexity. ...|$|R
50|$|XOR {{can also}} be viewed as {{addition}} modulo 2. As a result, XOR gates are used to implement binary addition in computers. A half adder consists of an <b>XOR</b> <b>gate</b> and an AND gate. Other uses include subtractors, comparators, and controlled inverters.|$|E
5000|$|If one allows only [...] as input {{values for}} both qubits, the TARGET {{output of the}} CNOT gate {{corresponds}} to {{the result of a}} classical <b>XOR</b> <b>gate.</b> Fixing CONTROL as , the TARGET output of the CNOT gate yields the result of a classical NOT gate.|$|E
50|$|In this implementation, {{the final}} OR gate before the {{carry-out}} output may {{be replaced by}} an <b>XOR</b> <b>gate</b> without altering the resulting logic. Using only two types of gates is convenient if the circuit is being implemented using simple IC chips which contain only one gate type per chip.|$|E
5000|$|... #Caption: Traditional {{symbolic}} {{representation of}} an <b>XOR</b> logic <b>gate</b> ...|$|R
40|$|Abstract. In this article, {{we provide}} {{new methods to}} look for {{lightweight}} MDS matrices, and in particular involutory ones. By proving many new properties and equivalence classes for various MDS matrices constructions such as circulant, Hadamard, Cauchy and Hadamard-Cauchy, we exhibit new search algorithms that greatly reduce the search space and make lightweight MDS matrices of rather high dimension possible to find. We also explain why {{the choice of the}} irreducible polynomial might {{have a significant impact on}} the lightweightness, and in contrary to the classical belief, we show that the Hamming weight has no direct impact. Even though we focused our studies on involutory MDS matrices, we also obtained results for non-involutory MDS matrices. Overall, using Hadamard or Hadamard-Cauchy constructions, we provide the (involutory or non-involutory) MDS matrices with the least possible <b>XOR</b> <b>gates</b> for the classical dimensions 4 × 4, 8 × 8, 16 × 16 and 32 × 32 in GF(24) and GF(28). Compared to the best known matrices, some of our new candidates save up to 50 % on the amount of <b>XOR</b> <b>gates</b> required for an hardware implementation. Finally, our work indicates that involutory MDS matrices are really interesting building blocks for designers as they can be implemented with almost the same number of <b>XOR</b> <b>gates</b> as non-involutory MDS matrices, the latter being usually non-lightweight when the inverse matrix is required...|$|R
50|$|Unfortunately, {{there are}} {{reversible}} functions that cannot be computed using just those gates. In other words, the set consisting of NOT and <b>XOR</b> <b>gates</b> is not universal. If {{we want to}} compute an arbitrary function using reversible gates, we need another gate. One possibility is the Toffoli gate, proposed in 1980 by Toffoli.|$|R
