219|1922|Public
25|$|When an {{operating}} {{system with a}} native windowing system hosts X in addition, the X system can either use its own normal desktop in a separate host window or it can run rootless, meaning the X desktop is hidden and the host windowing environment manages the geometry and appearance of the hosted <b>X</b> <b>windows</b> within the host screen.|$|E
25|$|LiveCode, {{published}} by LiveCode, Ltd., expands greatly on HyperCard's feature set and offers color and a GUI toolkit {{which can be}} deployed on many popular platforms (Android, iOS, Classic Macintosh system software, Mac OS <b>X,</b> <b>Windows</b> 98 through 10, and GNU Linux/Unix). LiveCode directly imports extant HyperCard stacks and provides a migration path for stacks still in use.|$|E
25|$|Internet Explorer 5.0 is {{the last}} version to support Windows 3.1x, Windows NT 3.x, Windows NT 4.0 (Service Pack 3 or later). Support for NT 3.x was dropped after that, as well as support for HP-UX, Solaris, the classic Mac OS, and Mac OS <b>X.</b> <b>Windows</b> 2000 {{was the last to}} support IE 5.0 (with which it was released) well after support in other Windows systems was deprecated. IE 5.5 SP2 {{is the last}} for Windows 95. In addition, users of Windows 98, Windows Me, Windows NT 4.0 SP6a, and Windows 2000 could upgrade to IE 6.0 SP1. IE5 was not {{developed}} for 68k Macs, support for which had been dropped in Internet Explorer 4.5.|$|E
5000|$|GLX (initialism for [...] "OpenGL Extension to the <b>X</b> <b>Window</b> System") is an {{extension}} to the <b>X</b> <b>Window</b> System core protocol providing an interface between OpenGL and the <b>X</b> <b>Window</b> System as well as extensions to OpenGL itself. It enables programs wishing to use OpenGL to do so within a window provided by the <b>X</b> <b>Window</b> System. GLX distinguishes two [...] "states": indirect state and direct state.|$|R
50|$|The <b>X</b> <b>Window</b> System core {{protocol}} is {{the base}} protocol of the <b>X</b> <b>Window</b> System, {{which is a}} networked windowing system for bitmap displays used to build graphical user interfaces on Unix, Unix-like, and other operating systems. The <b>X</b> <b>Window</b> System {{is based on a}} client-server model: a single server controls the input/output hardware, such as the screen, the keyboard, and the mouse; all application programs act as clients, interacting with the user and with the other clients via the server. This interaction is regulated by the <b>X</b> <b>Window</b> System core protocol. Other protocols related to the <b>X</b> <b>Window</b> System exist, both built {{at the top of the}} <b>X</b> <b>Window</b> System core protocol or as separate protocols.|$|R
50|$|This article compares {{variety of}} {{different}} <b>X</b> <b>window</b> managers. For {{an introduction to the}} topic, see <b>X</b> <b>Window</b> System.|$|R
2500|$|The {{distributed}} computing project LHC@home was started {{to support the}} construction and calibration of the LHC. The project uses the BOINC platform, enabling anybody with an Internet connection and a computer running Mac OS <b>X,</b> <b>Windows</b> or Linux, to use their computer's idle time to simulate how particles will travel in the beam pipes. With this information, the scientists are able {{to determine how the}} magnets should be calibrated to gain the most stable [...] "orbit" [...] of the beams in the ring. In August 2011, a second application went live (Test4Theory) which performs simulations against which to compare actual test data, to determine confidence levels of the results.|$|E
5000|$|... vi/Vim (cross-platform, {{including}} Unix, Linux, OS <b>X,</b> <b>Windows)</b> ...|$|E
5000|$|Visual Studio Code (cross-platform, {{including}} Linux, OS <b>X,</b> <b>Windows)</b> ...|$|E
50|$|The Windows {{window manager}} can also {{act as an}} <b>X</b> <b>window</b> manager through Cygwin/X in {{multiwindow}} mode (and, possibly, other <b>X</b> <b>window</b> implementations).|$|R
50|$|An <b>X</b> <b>window</b> {{manager is}} a window manager which runs {{on top of the}} <b>X</b> <b>Window</b> System, a {{windowing}} system mainly used on Unix-like systems.|$|R
25|$|The proper {{names for}} the system {{are listed in the}} manual page as X; <b>X</b> <b>Window</b> System; <b>X</b> Version 11; <b>X</b> <b>Window</b> System, Version 11; or X11.|$|R
5000|$|SlickEdit (cross-platform, {{including}} Linux, OS <b>X,</b> <b>Windows,</b> Solaris, HP-UX, AIX) ...|$|E
50|$|Target {{platforms}} include Mac OS <b>X,</b> <b>Windows,</b> Linux, iPhone, iPad, Windows Mobile based Smartphones, GP2X and Handhelds. It {{is possible}} to make builds, or export game data only, so that designers can store the game or its parts in non-executable files. The editor itself runs on Mac OS <b>X,</b> <b>Windows</b> and Linux.|$|E
5000|$|Cave Story+ (Linux, Mac OS <b>X,</b> <b>Windows,</b> Switch) with Daisuke Amaya ...|$|E
5000|$|In the <b>X</b> <b>Window</b> System, {{the program}} xwd (<b>X</b> <b>Window</b> dump) captures {{the content of}} a screen or of a window and {{optionally}} saves it into a file.|$|R
2500|$|Linda Mui and Eric Pearce, <b>X</b> <b>Window</b> System Volume 8: <b>X</b> <b>Window</b> System Administrator's Guide for X11 Release 4 and Release 5, 3rd edition (O'Reilly and Associates, July 1993; softcover [...] ) ...|$|R
5000|$|XImage is the X {{client side}} storage {{mechanism}} for a <b>X</b> <b>Window</b> System pixel map. The structure of an XImage {{as defined by}} the <b>X</b> <b>Window</b> core protocol is the following: ...|$|R
5000|$|Native servers {{available}} for Mac OS <b>X,</b> <b>Windows,</b> Linux, Solaris, HP-UX.|$|E
5000|$|... emerson-reader, an {{open-source}} and cross-platform (Linux, Mac OS <b>X,</b> <b>Windows)</b> Epub and DAISY player ...|$|E
50|$|In one, an X server runs in {{a single}} Microsoft Windows window {{that serves as the}} X display, which holds the X root window and all the other <b>X</b> <b>windows</b> in the X session. You use an X window manager to manage the <b>X</b> <b>windows</b> within the display. You can run {{multiple}} X servers, each in its own Microsoft Windows window.|$|E
5000|$|... and [...] {{refer to}} the same program, though [...] invokes the text-based version, while [...] will invoke an <b>X</b> <b>Window</b> System based {{interface}} if possible; however, if [...] determines that <b>X</b> <b>Window</b> System capabilities are not present, it will present the text-based version instead of failing. Determination of <b>X</b> <b>Window</b> System capabilities is typically performed by checking {{for the existence of}} the [...] variable.|$|R
5000|$|In January 1997, the {{responsibility}} for the <b>X</b> <b>Window</b> System was transferred to The Open Group from the defunct X Consortium. In 1999, X.Org was formed to manage the <b>X</b> <b>Window</b> System, with management services provided by The Open Group. The X.Org members made a number of releases up to and including X11R6.8 while The Open Group provided management services. In 2004, X.Org and The Open Group worked together to establish the newly formed X.Org Foundation who then took control of the x.org domain name, and the stewardship of the <b>X</b> <b>Window</b> System. (See the history of the <b>X</b> <b>Window</b> System.) ...|$|R
5000|$|... xbiff {{is a small}} utility for the <b>X</b> <b>Window</b> System {{that shows}} a mailbox with its flag raised {{whenever}} the user has new e-mail. It is included in almost every <b>X</b> <b>Window</b> System.|$|R
50|$|MultitrackStudio is {{a digital}} audio {{workstation}} application for macOS (OS <b>X),</b> <b>Windows</b> and iPad platforms.|$|E
5000|$|Cryptocat - No open XMPP client, {{works only}} with Cryptocat server (Linux, OS <b>X,</b> <b>Windows)</b> ...|$|E
5000|$|Revolution runs on Mac Classic, Mac OS <b>X,</b> <b>Windows</b> 9x/NT/2000/XP, and the {{following}} UNIX variants: ...|$|E
5000|$|In the <b>X</b> <b>Window</b> System, the <b>X</b> Nonrectangular <b>Window</b> Shape Extension allows {{windows to}} be given arbitrary, non-rectangular shapes.|$|R
50|$|The <b>X</b> <b>Window</b> System {{commonly}} used on Unix and Linux systems provides a clipboard implementation {{as part of}} <b>X</b> <b>Window</b> selection. Selections are asynchronous, so data is copied and converted into the desired format only on-demand.|$|R
50|$|In X, {{the server}} {{runs on the}} user's computer, while the clients may run on remote machines. This {{terminology}} reverses the common notion of client-server systems, where the client normally runs on the user's local computer and the server runs on the remote computer. This reversal often confuses new X users. The <b>X</b> <b>Window</b> terminology takes the perspective that the <b>X</b> <b>Window</b> program is at the centre of all activity, i.e. the <b>X</b> <b>Window</b> program accepts and responds to requests from applications, and from the user's mouse and keyboard input. Therefore, applications (on remote computers) are viewed as clients of the <b>X</b> <b>Window</b> server program.|$|R
5000|$|... libdash is {{developed}} for many operating systems, including GNU/Linux, OS <b>X,</b> <b>Windows,</b> Android, iOS, etc.|$|E
50|$|The game is {{available}} in Japanese for Mac OS, Mac OS <b>X,</b> <b>Windows</b> and PlayStation 2.|$|E
5000|$|Windows OS (Windows XP, Windows Vista, Windows 7), or Mac OS <b>X</b> (<b>Windows</b> PCs are suggested) ...|$|E
50|$|A re-parenting {{window manager}} is an <b>X</b> <b>Window</b> System window manager that adopts all other windows.|$|R
50|$|X logical font {{description}} (XLFD) is a font standard {{used by the}} <b>X</b> <b>Window</b> System. Modern <b>X</b> software typically {{relies on}} the newer Fontconfig system instead, but XLFDs are still supported in current <b>X</b> <b>window</b> implementations for compatibility with legacy software.|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThe challenge to developing applications for computer-based windowing systems is generating code for the graphical interface elements. Each windowing system offers {{its own set}} of protocols for building the graphical units, but these protocols are rarely portable across different hardware platforms. The <b>X</b> <b>Window</b> System transcends many of these incompatibilities and offers a standard for creating graphics. It is operating system and network independent. However, the basic programming library for <b>X</b> <b>Window</b> offers little sophistication for an application's graphical interface development. Higher level tools make up for the shortcomings of the generic <b>X</b> <b>Window</b> System. This thesis converts an Expert System Knowledge Acquisition and Policy Evaluation program using Cognitive Feedback (ESKAPE/CF) from the SunView <b>windowing</b> system to <b>X</b> <b>Window.</b> The new application, called XESKAPE/CF, contains the same functionality as the original program even though the migration from SunView to <b>X</b> <b>Window</b> required an extensive reworking of the program's interface code. The thesis also extends the basic <b>X</b> <b>Window</b> library of functions with more advanced objects. These objects offer additional functionality to the XESKAPE/CF application's interface. [URL] United States Nav...|$|R
