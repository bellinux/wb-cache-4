431|177|Public
5|$|While it is {{possible}} to access Xgrid from the command line, the Xgrid graphical user interface, a program bundled with Mac OS <b>X</b> <b>Server</b> and, as of March 2009, available online, is a much more efficient way of administering an Xgrid system. Originally, the Xgrid agent was included in all Mac OS X version 10.4 installations but the GUI was reserved for users of Mac OS <b>X</b> <b>Server.</b> This decision limited the efforts of the computer community to embrace the platform. Eventually, Apple released the Mac OS <b>X</b> <b>Server</b> Administration Tools to the public, which included the Xgrid administration application bundled with Mac OS <b>X</b> <b>Server.</b>|$|E
5|$|Apple modeled {{the design}} of Xgrid on the Zilla program, {{distributed}} with NeXT's OPENSTEP operating system application programming interface (API), which Apple owned the rights to. The company also opted to provide the client version of Mac OS X with only command-line functions and little flexibility, while giving the Mac OS <b>X</b> <b>Server</b> version of Xgrid a GUI control panel and {{a full set of}} features.|$|E
5|$|Separately, the {{experimental}} Arwinss branch was created {{as an alternative}} means to improve USER32 and GDI32 support through an alternative implementation of the Win32 API. Whereas ReactOS's original Win32 subsystem was closely modeled after its equivalent in Windows, Arwinss combines the architecture of that subsystem with the corresponding implementation in Wine. To this end, Arwinss uses Wine's GDI32 and USER32 libraries with few changes to take fuller advantage of Wine's existing software compatibility. Arwinss also allows the user to optionally use a remote <b>X</b> <b>server</b> instead of a local display.|$|E
5000|$|Flexible desktop shortcuts {{to start}} UNIX {{programs}} remotely (with direct import settings of previously installed <b>X</b> <b>servers)</b> ...|$|R
50|$|High IOPS PCIe Adapters - PCIe card {{adapters}} {{for former}} IBM System <b>x</b> <b>servers,</b> offering capacities up to 2.4TB. Moved to Lenovo.|$|R
50|$|Although x11vnc's {{primary use}} is for <b>X</b> <b>servers</b> {{associated}} with physical graphics hardware, {{it can also}} attach to virtual <b>X</b> <b>servers</b> (whose frame buffers exist in RAM only) such as Xvfb or a Sun Ray session. x11vnc has options (-create and -svc) to start Xvfb automatically, possibly as the Unix user that logged in. The interactive response of x11vnc and Xvfb {{may not be as}} fast as Xvnc, however this mode enables features that Xvnc does not have, such as SSL encryption and Unix usernames and passwords.|$|R
5|$|It {{provides}} network administrators {{a method}} of creating a computing cluster, which allows them to exploit previously unused computational power for calculations that can be divided easily into smaller operations, such as Mandelbrot maps. The setup of an Xgrid cluster can be achieved at next to no cost, as Xgrid client is pre-installed on all computers running Mac OS X 10.4 to Mac OS X 10.7. The Xgrid client {{was not included in}} Mac OS X 10.8. The Xgrid controller, the job scheduler of the Xgrid operation, is also included within Mac OS <b>X</b> <b>Server</b> and as a free download from Apple. Apple has kept the command-line job control mechanism minimalist while providing an API to develop more sophisticated tools built around it.|$|E
25|$|Xgrid {{support was}} removed (including in OS <b>X</b> <b>Server</b> edition).|$|E
25|$|Unlike most earlier display protocols, X was {{specifically}} designed to be used over network connections rather than on an integral or attached display device. X features network transparency, which means an X program running on a computer somewhere on a network (such as the Internet) can display its user interface on an <b>X</b> <b>server</b> running on some other computer on the network. The <b>X</b> <b>server</b> is typically the provider of graphics resources and keyboard/mouse events to X clients, meaning that the <b>X</b> <b>server</b> is usually running on the computer {{in front of a}} human user, while the X client applications run anywhere on the network and communicate with the user's computer to request the rendering of graphics content and receive events from input devices including keyboards and mice.|$|E
5000|$|... x11vnc keeps {{a copy of}} the <b>X</b> <b>server's</b> {{frame buffer}} in RAM. The X11 {{programming}} interface XShmGetImage is used to retrieve the frame buffer pixel data. x11vnc compares the <b>X</b> <b>server's</b> frame buffer against its copy to see which pixel regions have changed (and hence need to be sent to the VNC viewers.) Reading pixel data from the physical frame buffer can be much slower than writing to it (because graphics devices are not optimized for reading) and so a sequential pixel by pixel check would often be too slow.|$|R
5000|$|Joel McCormack. Writing Fast <b>X</b> <b>Servers</b> for Dumb Color Frame Buffers, Research Report 91/1, Digital Equipment Corporation, Western Research Laboratory, February 1991. of the Software: Practice and Experience paper listed {{immediately}} below.|$|R
25|$|Attempts {{were made}} to enable <b>X</b> <b>servers</b> as {{real-time}} collaboration devices, much as Virtual Network Computing (VNC) would later allow a desktop to be shared. One such early effort was Philip J. Gust's SharedX tool.|$|R
25|$|The remote X client {{application}} will {{then make a}} connection to the user's local <b>X</b> <b>server,</b> providing display and input to the user.|$|E
25|$|Dedicated (hardware) X {{terminals}} {{have fallen}} out of use; a PC or modern thin client with an <b>X</b> <b>server</b> typically provides the same functionality at the same, or lower, cost.|$|E
25|$|X also lacks native {{support for}} {{user-defined}} stored procedures on the <b>X</b> <b>server,</b> {{in the manner}} of NeWS there is no Turing-complete scripting facility. Various desktop environments may thus offer their own (usually mutually incompatible) facilities.|$|E
2500|$|There {{are also}} Java {{implementations}} of <b>X</b> <b>servers.</b> WeirdX runs on any platform supporting Swing 1.1, and will run as an applet within most browsers. The [...] {{is an open}} source Java implementation that runs on Android devices.|$|R
40|$|Sun and SAS {{recently}} completed testing of SAS Intelligence Storage on a Sun Fire ™ <b>X</b> 4500 <b>server</b> running the Solaris ™ 10 Operating System (OS) with Solaris ZFS. The tests {{demonstrated that the}} Sun Fire <b>X</b> 4500 <b>server</b> is well suited for SAS Intelligence Storage deployment. This paper describes SAS Intelligence Storage, the Sun Fire <b>X</b> 4500 <b>server,</b> the Solaris 10 OS, Solaris ™ ZFS, two optimal test configurations, and the test results for these tw...|$|R
50|$|A display manager can run on {{the same}} {{computer}} where the user sits—starting one or more <b>X</b> <b>servers,</b> displaying the login screen {{at the beginning and}} (optionally) every time the user logs out—or on a remote one, working according to the XDMCP protocol.|$|R
25|$|An X {{terminal}} is a {{thin client}} that only runs an <b>X</b> <b>server.</b> This architecture became popular for building inexpensive terminal parks for many users to simultaneously use the same large computer server to execute application programs as clients of each user's X terminal. This use is very much aligned with the original intention of the MIT project.|$|E
25|$|Network traffic {{between an}} <b>X</b> <b>server</b> and remote X clients is not {{encrypted}} by default. An attacker with a packet sniffer can intercept it, {{making it possible}} to view anything displayed to or sent from the user's screen. The most common way to encrypt X traffic is to establish a Secure Shell (SSH) tunnel for communication.|$|E
25|$|On January 2, 2006, SUSE {{developer}} David Reveman announced Xgl, an <b>X</b> <b>server</b> architecture {{designed to}} take advantage of modern graphics cards via their OpenGL drivers, layered on top of OpenGL via glitz. Compiz, one of the first compositing window managers for the X Window System that is able {{to take advantage of}} this OpenGL acceleration, was also released.|$|E
5000|$|Joel McCormack. Writing Fast <b>X</b> <b>Servers</b> for Dumb Color Frame Buffers, Software - Practice and Experience, Vol 20(S2), John Wiley & Sons, Ltd., West Sussex, England, October 1990, pp. 83-108. and {{reprinted in}} the Japanese edition of UNIX Magazine, ASCII Corp., October 1991, pp. 76-96.|$|R
5000|$|Window modes - Like other <b>X</b> <b>servers</b> for Microsoft Windows, X-Win32 has two window modes, Single and Multiple. Single window mode {{contains}} all X windows with one large visible root window. Multiple window mode allows the Microsoft Window Manager {{to manage the}} X client windows ...|$|R
50|$|The <b>X</b> <b>server's</b> client/server {{architecture}} {{allows the}} server to expose Xinerama {{information to the}} client {{regardless of whether the}} Xinerama infrastructure is active. RandR and NVidia's twinview utilize this feature to provide window managers and clients with information about the output layout relative to the framebuffer.|$|R
25|$|The {{first version}} of Mac OS X, Mac OS <b>X</b> <b>Server</b> 1.0, was a {{transitional}} product, featuring an interface resembling the classic Mac OS, {{though it was not}} compatible with software designed for the older system. Consumer releases of Mac OS X included more backward compatibility. Mac OS applications could be rewritten to run natively via the Carbon API; many could also be run directly through the Classic Environment with a reduction in performance.|$|E
25|$|The {{hypervisor}} provides isolation {{between different}} virtual machines. The administrative domain, {{also referred to}} as Dom0 (a term inherited from Xen), has direct access to all the hardware by default. Dom0 hosts the GUI domain and controls the graphics device, as well as input devices, such as the keyboard and mouse. The GUI domain runs the <b>X</b> <b>server,</b> which displays the user desktop, and the window manager, which allows the user to start and stop the applications and manipulate their windows.|$|E
25|$|An X client cannot {{generally}} be detached from one server and reattached to another unless its code specifically provides for it (emacs {{is one of}} the few common programs with this ability). As such, moving an entire session from one <b>X</b> <b>server</b> to another is generally not possible. However, approaches like Virtual Network Computing (VNC), NX and Xpra allow a virtual session to be reached from different X servers (in a manner similar to GNU Screen in relation to terminals), and other applications and toolkits provide related facilities.|$|E
5|$|December: HP {{announces that}} their next {{generation}} of Superdome X and Nonstop <b>X</b> <b>servers</b> would be equipped with Intel Xeon processors, and not Itanium. While HP continues to sell and offer support for the Itanium-based Integrity portfolio, {{the introduction of a}} model based entirely on Xeon chips marks the end of an era.|$|R
50|$|This article {{applies to}} {{operating}} systems which {{are capable of}} running the X Window System, mostly Unix and Unix-like operating systems such as Linux, Minix, Solaris, AIX, FreeBSD and Mac OS X. Microsoft Windows is incapable of natively running X applications; however, third-party <b>X</b> <b>servers</b> like Cygwin/X, Exceed, or Xming are available.|$|R
5000|$|December: HP {{announces that}} their next {{generation}} of Superdome X and Nonstop <b>X</b> <b>servers</b> would be equipped with Intel Xeon processors, and not Itanium. While HP continues to sell and offer support for the Itanium-based Integrity portfolio, {{the introduction of a}} model based entirely on Xeon chips marks the end of an era.|$|R
25|$|The {{heritage}} of Darwin began with NeXT's NeXTSTEP operating system (later, since version 4.0, known as OPENSTEP), first released in 1989. After Apple bought NeXT in 1997, it {{announced it would}} base its next operating system on OPENSTEP. This was developed into Rhapsody in 1997, Mac OS <b>X</b> <b>Server</b> 1.0 in 1999, Mac OS X Public Beta in 2000, and Mac OS X 10.0 in 2001. In 2000, the core operating system components of Mac OS X were released as open-source software under the Apple Public Source License (APSL) as Darwin; the higher-level components, such as the Cocoa and Carbon frameworks, remained closed-source.|$|E
25|$|Apple's {{original}} plan with macOS was to require all developers to rewrite their software into the Cocoa APIs. This caused much outcry among existing Mac developers, who threatened {{to abandon the}} platform rather than invest in a costly rewrite, and the idea was shelved. To permit a smooth transition from Mac OS 9 to Mac OS X, the Carbon Application Programming Interface (API) was created. Applications written with Carbon were initially able to run natively on both classic Mac OS and Mac OS X, although this ability was later dropped as Mac OS X developed. Carbon {{was not included in}} the first product sold as Mac OS X: the little-used original release of Mac OS <b>X</b> <b>Server</b> 1.0, which also did not include the Aqua interface. Apple limited further development of Carbon from the release of Leopard onwards, announcing Carbon applications would not receive the ability to run at 64-bit. As of 2015, a small number of older Mac OS X apps with heritage dating back to the classic Mac OS still used Carbon, including Microsoft Office. Early versions of macOS could also run some classic Mac OS applications through the Classic Environment with performance limitations; this feature was removed from 10.5 onwards and all Macs using Intel processors.|$|E
500|$|On November 5, 2010, Apple {{introduced}} the Mac Pro Server, which officially replaced the Xserve line of Apple servers as of January 31, 2011. The Mac Pro Server includes an unlimited Mac OS <b>X</b> <b>Server</b> license and an Intel Xeon 2.8GHz Quad-Core processor, with 8 GB of DDR3 RAM. [...] In mid-2012, the Mac Pro Server was upgraded to an Intel Xeon 3.2GHz Quad-Core processor. [...] The Mac Pro Server was discontinued on October 22, 2013, {{with the introduction}} of the second-generation Mac Pro. However, the OS <b>X</b> <b>Server</b> software package can be purchased from the Mac App Store.|$|E
50|$|The {{project began}} in 1992 when David Wexelblat, Glenn Lai, David Dawes and Jim Tsillas joined forces {{addressing}} bugs in the source {{code of the}} X386 <b>X</b> display <b>server</b> (written by Thomas Roell), as contributed to X11R5. This version was initially called X386 1.2E. As newer versions of the (originally freeware) X386 were being sold under a proprietary software license by SGCS (of which Roell was a partner), confusion existed between the projects. After discussion, the project was renamed XFree86, as a pun (compare X-three-eighty-six to X-free-eighty-six). Roell has continued to sell proprietary <b>X</b> <b>servers,</b> most recently under the name Accelerated-X.|$|R
5000|$|Take Control of OS <b>X</b> Mavericks <b>Server.</b> TidBits, January 2014, ISBN ...|$|R
5000|$|... #Caption: The Mac OS <b>X</b> Leopard <b>Server</b> running Server Admin on Desktop ...|$|R
