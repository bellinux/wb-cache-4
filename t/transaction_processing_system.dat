130|10000|Public
2500|$|Online {{shopping}} {{could be}} considered a form of automated retail as the payment and checkout are through an automated Online <b>transaction</b> <b>processing</b> <b>system,</b> with the share of online retail accounting jumping from 5.1% in 2011 to 8.3% in 2016 [...] However, two-thirds of books, music and films are now purchased online. In addition, automation and online shopping could reduce demands for shopping malls, and retail property, which in America is currently estimated to account for 31% of all commercial property or around 7 billion square feet. Amazon has gained much of the growth in recent years for online shopping, accounting for half of the growth in online retail in 2016. Other forms of automation can also {{be an integral part of}} online shopping, for example the deployment of automated warehouse robotics such as that applied by Amazon using Kiva Systems.|$|E
5000|$|Robert Kallman et al. (2008) H-store: a high-performance, {{distributed}} {{main memory}} <b>transaction</b> <b>processing</b> <b>system</b> ...|$|E
50|$|IBM Distributed Office Support System, or DISOSS is a {{centralized}} document distribution and filing application for IBM's mainframe computers running the MVS and VSE operating systems. Its counterpart under VM is PROFS. DISOSS ran under both the CICS <b>transaction</b> <b>processing</b> <b>system</b> and the IMS/DS <b>transaction</b> <b>processing</b> <b>system,</b> and later versions used the SNADS architecture of {{peer to peer}} communication for distributed services.|$|E
50|$|Sometimes {{operational}} {{systems are}} referred to as operational databases, <b>transaction</b> <b>processing</b> <b>systems,</b> or online <b>transaction</b> <b>processing</b> <b>systems</b> (OLTP). However, the use of the last two terms as synonyms may be confusing, because operational systems can be batch <b>processing</b> <b>systems</b> as well.|$|R
5000|$|... #Subtitle level 2: Key role in <b>transaction</b> <b>processing</b> <b>systems</b> ...|$|R
5000|$|IBM <b>Transaction</b> <b>Processing</b> Facility (TPF) - 1960. At Amity Unlike {{most other}} <b>transaction</b> <b>processing</b> <b>systems</b> TPF is a {{dedicated}} operating <b>system</b> for <b>transaction</b> <b>processing</b> on IBM <b>System</b> z mainframes. Originally Airline Control Program (ACP).|$|R
50|$|In about 1982, a new <b>Transaction</b> <b>Processing</b> <b>System</b> TME-TP was {{introduced}} for the ME29, with {{a subset of}} the facilities of TPMS (cf 2900 software).|$|E
5000|$|A batch <b>transaction</b> <b>processing</b> <b>system,</b> which accepts {{large volumes}} of {{homogeneous}} transactions, processes it (possibly updating a database), and produces output such as reports or computations.|$|E
5000|$|Transaction Management eXecutive (TMX) was NCR Corporation's {{proprietary}} <b>transaction</b> <b>processing</b> <b>system</b> {{running on}} NCR Tower 5000-series systems. This system was used mainly by financial {{institutions in the}} 1980s and 1990s.|$|E
5000|$|... #Caption: Overview of <b>Transaction</b> <b>Processing</b> <b>Systems</b> {{within a}} GSM network.|$|R
50|$|The {{following}} {{features are}} considered important in evaluating <b>transaction</b> <b>processing</b> <b>systems.</b>|$|R
50|$|Typical <b>transaction</b> <b>processing</b> <b>systems</b> (<b>systems</b> {{generating}} <b>transactions)</b> are SAP and Oracle Financials.|$|R
50|$|CICS was {{preceded by}} an earlier, single {{threaded}} <b>transaction</b> <b>processing</b> <b>system,</b> IBM MTCS. An 'MTCS-CICS bridge' was later developed to allow these transactions to execute under CICS with no change to the original application programs.|$|E
5000|$|Transaction {{processing}} is a {{style of}} computing that divides work into individual, indivisible operations, called transactions. [...] A <b>transaction</b> <b>processing</b> <b>system</b> (TPS) or transaction server is a software system, or software/hardware combination, that supports transaction processing [...]|$|E
50|$|Transaction Management eXecutive or TMX was NCR Corporation's {{proprietary}} <b>transaction</b> <b>processing</b> <b>system</b> {{running on}} NCR Tower 5000-series systems which {{were based on}} Motorola 680xx CPUs. This system was used mainly by financial institutions in the 1980s and 1990s.|$|E
40|$|We {{provide a}} {{strategy}} to restructure <b>transaction</b> <b>processing</b> <b>systems.</b> Such systems are core assets of most modern business operations, so their enhancement is crucial. Before large-scale renovation of <b>transaction</b> <b>processing</b> <b>systems</b> can take place, {{they need to be}} restructured. We argue that teleprocessing systems are unstructured by their nature. In this paper we approach the problems from a technical viewpoint and we report on the methods and tools that are necessar...|$|R
5000|$|Mitigate {{the problem}} of {{database}} isolation level lock contention in <b>transaction</b> <b>processing</b> <b>systems</b> caused by attempts to run large, long running, analysis queries in <b>transaction</b> <b>processing</b> databases.|$|R
30|$|This section {{describes}} the fundamental concepts, definitions and {{properties of transactions}} which are implemented in the proposed <b>transaction</b> <b>processing</b> <b>systems.</b>|$|R
5000|$|A {{scalable}} online <b>transaction</b> <b>processing</b> <b>system</b> or {{database management}} system is {{one that can be}} upgraded to process more transactions by adding new processors, devices and storage, and which can be upgraded easily and transparently without shutting it down.|$|E
50|$|Transaction {{processing}} guards against {{hardware and}} software errors that might leave a transaction partially completed. If the computer system crashes {{in the middle of}} a transaction, the <b>transaction</b> <b>processing</b> <b>system</b> guarantees that all operations in any uncommitted transactions are cancelled.|$|E
50|$|A {{statistical}} database is {{a database}} used for statistical analysis purposes. It is an OLAP (online analytical processing), instead of OLTP (online <b>transaction</b> <b>processing)</b> <b>system.</b> Modern decision, and classical statistical databases are often {{closer to the}} relational model than the multidimensional model commonly used in OLAP systems today.|$|E
5000|$|Leif B. Methlie. Information {{systems design}} : {{concepts}} and methods : aspects of analysis {{and design of}} <b>transaction</b> <b>processing</b> <b>systems.</b> Universitetsforl., 1978.|$|R
40|$|We {{provide a}} {{strategy}} to restructure <b>transaction</b> <b>processing</b> <b>systems.</b> Such systems are core assets of most modern business operations, so their enhancement is crucial. Before large-scale renovation of <b>transaction</b> <b>processing</b> <b>systems</b> can take place, {{they need to be}} restructured. We argue that teleprocessing systems are unstructured by their nature. In this paper we approach the problems from a technical viewpoint and we report on the methods and tools that are necessary to bring structure in transaction systems...|$|R
5000|$|Terminal Automation Products (TAP) {{provides}} automated distribution, {{inventory control}} and <b>transaction</b> <b>processing</b> <b>systems</b> to bulk product storage facilities that handle petroleum, chemical and agricultural products.|$|R
5000|$|The IBM/360 and {{derivatives}} had powerful {{macro assembler}} facilities that were {{often used to}} generate complete assembly language programs [...] or sections of programs (for different operating systems for instance). Macros provided with CICS <b>transaction</b> <b>processing</b> <b>system</b> had assembler macros that generated COBOL statements as a pre-processing step.|$|E
5000|$|One of {{the major}} {{implementations}} of DCE was Encina, originally developed by Transarc (who were acquired by IBM). IBM used Encina as a foundation to port its primary mainframe <b>transaction</b> <b>processing</b> <b>system</b> (CICS) to non-mainframe platforms, as IBM TXSeries. (However, later versions of TXSeries have removed the Encina component.) ...|$|E
50|$|IBM's {{strategic}} <b>transaction</b> <b>processing</b> <b>system,</b> CICS (1970s onwards) uses {{dynamic loading}} extensively both for its kernel and for normal application program loading. Corrections to application programs {{could be made}} offline and new copies of changed programs loaded dynamically without needing to restart CICS (which can, and frequently does, run 24/7).|$|E
40|$|The {{development}} of data network technology {{has led to}} the development and adoption of new paradigms for <b>transaction</b> <b>processing</b> <b>systems.</b> The two best known new paradigms are the client server model and the virtual terminal model. This paper gives a taxonomy for models of <b>transaction</b> <b>processing</b> <b>systems</b> including models such as batch, on line, virtual terminal, client server, work flow, groupware and interactive voice response. Criteria for assessing the ergonomics of the models are developed. The models are described and evaluated against the criteria...|$|R
40|$|Testing the {{reliability}} of high performance <b>transaction</b> <b>processing</b> <b>systems</b> poses many difficult challenges that are not adequately answered by conventional testing techniques. We discuss a new test paradigm, which is dynamic and exploratory in nature, and discuss its ability to meet these challenges. We describe an implementation of this paradigm in products that aid in efficiently testing reliable, high performance <b>transaction</b> <b>processing</b> <b>systems</b> at Tandem Computers Inc. 1 Introduction Mission critical database applications, e. g., a stock market system, insist on guaranteed data integrity in all situations. They also demand extremely high performance and high system availability (the cost of even short outages, {{of the order of}} minutes, is prohibitively high). Such applications employ high performance <b>transaction</b> <b>processing</b> <b>systems</b> that also have high availability characteristics ([TDG 87], [SKPO 88], [MHLPS 92]). Tandem's NonStop SQL ([TDG 87], [TPG 88], [BP 88]) is one such syst [...] ...|$|R
50|$|It is marketed for extreme <b>transaction</b> <b>processing.</b> It is a {{complement}} to traditional <b>transaction</b> <b>processing</b> <b>systems</b> {{that have been}} available for decades {{in the form of}} high end SMP servers such as the IBM System z mainframe.|$|R
5000|$|... (1) {{teaching}} a course {{someone else has}} designed, (2) designing a course that will be taught by others, and (3) creating a new curriculum. A business example is (1) using an existing <b>transaction</b> <b>processing</b> <b>system</b> (TPS), (2) creating a TPS following general design rules, and (3) creating {{a new type of}} TPS.|$|E
50|$|A Customer {{integrated}} system (CIS) {{is an extension}} or hybrid of the <b>transaction</b> <b>processing</b> <b>system</b> (TPS) that places technology {{in the hands of}} the customer and allows them to process their own transactions. CIS represents a way of doing business at substantial savings; customers save time and organizations can lower their human resource costs.|$|E
50|$|BTAM {{requires}} the application program or <b>transaction</b> <b>processing</b> <b>system</b> to handle almost {{every detail of}} the protocol. This is harder than using a higher-layer protocol, but it permits interfacing to non-standard devices in non-standard ways. BTAM continued to be supported in later iterations of the system architecture. IBM finally withdrew support for BTAM in 2000.|$|E
50|$|Fast {{performance}} with a rapid response time is critical. <b>Transaction</b> <b>processing</b> <b>systems</b> are usually {{measured by the}} number of transactions they can process in a given period of time.|$|R
50|$|The term extreme <b>transaction</b> <b>processing</b> (XTP) {{was used}} to {{describe}} <b>transaction</b> <b>processing</b> <b>systems</b> with uncommonly challenging requirements, particularly throughput requirements (transactions per second). Such systems may be implemented via distributed or cluster style architectures. It was used at least by 2011.|$|R
50|$|The {{solution}} {{to these problems}} provided a formula that {{was not limited to}} the design of <b>transaction</b> <b>processing</b> <b>systems</b> but could be used for the design of KBS with learning capability.|$|R
