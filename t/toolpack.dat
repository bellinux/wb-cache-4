6|0|Public
50|$|Van Jacobson {{together}} with his colleague at LBL, Steven McCanne, won R&D Magazine's 1995 R&D 100 Award for development of a software <b>toolpack</b> that enables multiparty audio and visual conferencing via the MBone (Multicast Backbone).|$|E
40|$|Approved {{for public}} release; {{distribution}} is unlimitedTOOLPACK is a programming {{environment for the}} development of medium-size Fortran programs by scientists, engineers and mathematicians. <b>TOOLPACK</b> was developed by a confederation of computer scientists at several government labs and universities in the United States and Great Britain; it was first released in 1985. This thesis is an evaluation of <b>TOOLPACK.</b> It includes a discussion of the installation on the VAX/VMS, benchmarks of tool performance, and a comparison of the users' needs, <b>TOOLPACK</b> goals and <b>TOOLPACK</b> capabilities. [URL] Republic of Korea Nav...|$|E
30|$|To analyse {{the data}} {{collected}} from various Universities standard statistical techniques are used. To test the proposed hypotheses to achieve objectives, student T test has been applied. Beside of this descriptive analysis [frequency (N), percentage (%), mean and standard deviation] have been also implied in present study. To determine significant difference among students and faculty opinion {{in relation to their}} gender T test with equal variance has been applied using Microsoft Excel with extra Add-ins named Analysis <b>Toolpack</b> and Analysis Toolpack-VBA.|$|E
40|$|This guide {{introduces}} Toolpack/ 1 Release 2, {{the second}} public release of Toolpack/ 1, an integrated suite of Fortran 77 software tools. The guide describes {{the background to}} the <b>Toolpack</b> project and explains the basic concepts and terms involved {{in the design and}} use of the tool suite. It also summarizes the facilities available in the second release and refers readers to other Toolpack/ 1 documentation for more detailed discussion. This guide should be regarded as essential preliminary reading for all prospective users of Toolpack/ 1...|$|E
40|$|The {{performance}} of programs executing on vector computers is significantly improved {{when the number}} of accesses to memory can be reduced. Unrolling Fortran DO loops, followed by substitutions and eliminations in the unrolled code, can reduce the number of loads and stores. The unrolling transformation and associated transformations of Fortran DO loops are characterized, and a set of software tools to carry out these transformations is described. The tools use the machinery available in <b>Toolpack</b> and have been integrated into that environment. The results of applying these tools to a collection of linear algebra subroutines are included...|$|E
40|$|Construction {{of machine}} {{translation}} systems {{has evolved into}} a multi-stage workflow involving many complicated dependencies. Many decoder distributions have addressed this by including monolithic training scripts - train-factored-model. pl for Moses and mr_runmer. pl for SAMT. However, such scripts can be tricky to modify for novel experiments and typically have limited support for the variety of job schedulers found on academic and commercial computer clusters. Further complicating these systems are hyperparameters, which often cannot be directly optimized by conventional methods requiring users to determine which combination of values is best via trial and error. The recently-released LoonyBin open-source workflow management tool addresses these issues by providing: 1) a visual interface for the user to create and modify workflows; 2) a well-defined logging mechanism; 3) a script generator that compiles visual workflows into shell scripts, and 4) the concept of Hyperworkflows, which intuitively and succinctly encodes small experimental variations within a larger workflow. In this paper, we describe the Machine Translation <b>Toolpack</b> for LoonyBin, which exposes state-of-the-art machine translation tools as drag-and-drop components within LoonyBin...|$|E

