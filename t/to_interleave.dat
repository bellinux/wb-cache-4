204|742|Public
25|$|SDRAM latency is not {{inherently}} lower (faster) than asynchronous DRAM. Indeed, early SDRAM {{was somewhat}} slower than contemporaneous burst EDO DRAM {{due to the}} additional logic. The benefits of SDRAM's internal buffering come from its ability <b>to</b> <b>interleave</b> operations to multiple banks of memory, thereby increasing effective bandwidth.|$|E
2500|$|DDR4 {{will not}} double the {{internal}} prefetch width again, but {{will use the}} same 8n prefetch as DDR3. [...] Thus, {{it will be necessary}} <b>to</b> <b>interleave</b> reads from several banks to keep the data bus busy.|$|E
50|$|Permutations that generalize the bit-reversal {{permutation}} by reversing contiguous {{blocks of}} bits within the binary representations of their indices {{can be used}} <b>to</b> <b>interleave</b> two equal-length sequences of data in-place.|$|E
40|$|In process algebras such as ACP, {{parallel}} {{processes are}} considered <b>to</b> be <b>interleaved</b> in an arbitrary way. In {{the case of}} multi-threading as found in contemporary programming languages, parallel processes are actually <b>interleaved</b> according <b>to</b> some <b>interleaving</b> strategy. Interleaving strategies are also known as process-scheduling policies. In many systems, for instance hardware/software systems, {{we have to do}} with both parallel processes that may best be considered <b>to</b> be <b>interleaved</b> in an arbitrary way and parallel processes that may best be considered <b>to</b> be <b>interleaved</b> according <b>to</b> some <b>interleaving</b> strategy. Therefore, we extend ACP in this paper with the latter form of interleaving. Comment: 17 page...|$|R
50|$|In computing, AoS and SoA {{refer to}} {{contrasting}} ways {{to arrange a}} sequence of records in memory, with regard <b>to</b> <b>interleaving,</b> and are of interest in SIMD programming.|$|R
40|$|International audienceWe {{propose a}} remedy {{to that part}} of the state-explosion problem for timed automata which is due <b>to</b> <b>interleaving</b> of actions. We prove the {{following}} quite surprising result: the union of all zones reached by different interleavings of the same set of transitions is convex. Consequently we can improve the standard reachability computation for timed automata by merging such zones whenever they are encountered. Since passage of time distributes over union, we can continue the successor computation from the new zone and eliminate completely the explosion due <b>to</b> <b>interleaving...</b>|$|R
5000|$|DDR4 {{will not}} double the {{internal}} prefetch width again, but {{will use the}} same 8n prefetch as DDR3. [...] Thus, {{it will be necessary}} <b>to</b> <b>interleave</b> reads from several banks to keep the data bus busy.|$|E
50|$|Henry Baker {{developed}} an algorithm for real-time garbage collection in his doctoral dissertation. The fundamental idea was <b>to</b> <b>interleave</b> collection activity with construction activity {{so that there}} {{would not have to}} be long pauses while collection takes place. See incremental garbage collection.|$|E
5000|$|However, {{a system}} {{may have the}} ability <b>to</b> <b>interleave</b> Real-time and other, less time-critical tasks, where the {{dividing}} line might for example be response required within one tenth of a second. In {{the case of the}} Xerox RBM (Real-time/Batch Monitor) systems, for example, two other capabilities existed: ...|$|E
3000|$|... - Hence, we {{analyze the}} tracing system {{consisting}} of the bias distribution (2) and the score system (7), when pitted against an unknown attack close <b>to</b> <b>interleaving.</b> Our starting point will be the ‘sufficient’ conditions given by Corollaries 1 and 2. We know that [...]...|$|R
40|$|AbstractWe relate {{sequences}} {{generated by}} recurrences with polynomial coefficients <b>to</b> <b>interleaving</b> and multiplexing of sequences generated by recurrences with constant coefficients. In the special case of finite fields, {{we show that}} such sequences are periodic and provide linear complexity estimates for all three constructions...|$|R
40|$|We {{present a}} formal model of agent {{collaborative}} {{problem solving and}} use it to define a novel type of dialogue model. The model provides a rich structure for tracking dialogue state and supports a wide range of dialogue, including dialogue which contributes <b>to</b> <b>interleaved</b> planning and execution of domain goals...|$|R
5000|$|... noweb {{defines a}} {{specific}} file format and a file is likely <b>to</b> <b>interleave</b> three different formats (noweb, latex {{and the language}} used for the software). This is not recognised by other software development tools and consequently using noweb excludes the use of UML or code documentation tools.|$|E
50|$|SDRAM latency is not {{inherently}} lower (faster) than asynchronous DRAM. Indeed, early SDRAM {{was somewhat}} slower than contemporaneous burst EDO DRAM {{due to the}} additional logic. The benefits of SDRAM's internal buffering come from its ability <b>to</b> <b>interleave</b> operations to multiple banks of memory, thereby increasing effective bandwidth.|$|E
5000|$|Another {{challenge}} is sorting and scoring results. Each web resource {{has its own}} notion of relevance score, and may support some sorted results orders. Relevance varies greatly among [...] "federates" [...] in the search, so knowing how <b>to</b> <b>interleave</b> results to show the most relevant is difficult or impossible.|$|E
5000|$|In {{the area}} of Information-theoretic {{security}} Yungs work pioneered investigations of multicast key pre-distribution system, perfectly secure message transmission, [...] and multi-user authentication codes. Also, his Coding theory based work includes [...] relating Reed-Solomon error correction codes and cryptographic hardness, which, in turn, led <b>to</b> <b>interleaving</b> decoding work of the same codes.|$|R
40|$|AbstractMany formalisms use <b>interleaving</b> <b>to</b> model concurrency. To {{describe}} some system behaviours appropriately, we need <b>to</b> limit <b>interleaving.</b> For example, in component-based systems, we wish <b>to</b> limit <b>interleaving</b> <b>to</b> {{force the}} inputs to {{a method to}} arrive together in order. We introduce interface automata with complex actions (IACA), which add complex actions to de Alfaro and Henzinger's interface automata (IA). A complex action is a sequence of actions {{that may not be}} interleaved with actions from other components. The composition and refinement operations are more involved in IACA compared to IA, and we must sacrifice associativity of composition. However, we argue that the advantages of having complex actions make it a useful formalism...|$|R
40|$|Many formalisms use <b>interleaving</b> <b>to</b> model concurrency. To {{describe}} some system behaviours appropriately, we need <b>to</b> limit <b>interleaving.</b> For example, in componentbased systems, we wish <b>to</b> limit <b>interleaving</b> <b>to</b> {{force the}} inputs to {{a method to}} arrive together in order. We introduce interface automata with complex actions (IACA), which add complex actions to de Alfaro and Henzinger’s interface automata (IA). A complex action is a sequence of actions {{that may not be}} interleaved with actions from other components. The composition and refinement operations are more involved in IACA compared to IA, and we must sacrifice associativity of composition. However, we argue that the advantages of having complex actions make it a useful formalism. Key words: Component-based design, Service-oriented design, interleaving, complex actions...|$|R
50|$|The 3780 dropped Transcode {{support and}} {{incorporated}} several performance enhancements. It supported compression of blank fields in data using Run-length encoding. It provided the ability <b>to</b> <b>interleave</b> data between devices, introduced double buffering, and added {{support for the}} Wait-before-transmit ACKnowledgement (WACK) and Temporary Text Delay (TTD) Binary Synchronous control characters.|$|E
5000|$|... it is {{possible}} <b>to</b> <b>interleave</b> two copies of the structure, filling one-fourth of the points of the integer lattice, while preserving {{the fact that the}} adjacent vertices are exactly the pairs of points that are &radic;2 units apart, and all other pairs of points are farther apart. The two copies are mirror images of each other.|$|E
5000|$|Free {{distance}} can {{be interpreted}} as the minimal length of an erroneous [...] "burst" [...] at the output of a convolutional decoder. The fact that errors appear as [...] "bursts" [...] should be accounted for when designing a concatenated code with an inner convolutional code. The popular solution for this problem is <b>to</b> <b>interleave</b> data before convolutional encoding, so that the outer block (usually Reed-Solomon) code can correct most of the errors.|$|E
3000|$|... - The saddlepoint (‘SP’) of {{the mutual}} {{information}} minimax game [20] {{is close to}} the asymptotic saddlepoint. The unknown strategy θSP is close <b>to</b> <b>interleaving.</b> The unknown bias distribution FSP(p) is some discrete distribution close to the Dirichlet distribution. We approximate F by the continuous Dirichlet distribution with cutoff τ because this is the only available constructive approach that we know of.|$|R
50|$|When {{operating}} in triple-channel mode, memory latency is reduced due <b>to</b> <b>interleaving,</b> meaning that each module is accessed sequentially for smaller bits of data rather than completely filling up one module before accessing the next one. Data is spread amongst the modules in an alternating pattern, potentially tripling available memory bandwidth {{for the same}} amount of data, as opposed to storing it all on one module.|$|R
40|$|An 8 b folding and interpolating ADC {{designed}} in a 180 GHz SiGe BiCMOS process operates at 10 GS/s without resorting <b>to</b> <b>interleaving.</b> It achieves an ENOB of 7. 44 at 40 kHz and 6. 95 at 4. 995 GHz for a power dissipation of 9. 1 W, which corresponds to an energy per conversion step of 7. 4 pJ. Data output occurs {{in real time}} over ten 10 Gb/s serial lanes using a proprietary protocol...|$|R
50|$|This {{formation}} {{represents the}} last record of sedimentary deposition of the Karoo Supergroup (although {{the upper part}} of the Clarens Formation and the lower part of the Drakensberg Formation appear <b>to</b> <b>interleave).</b> The majority of the sediments are fine-grained aeolian sand (either massive loess or large-scale cross-bedded dunes), with occasional playa lake, sheet flood and short-lived river deposits in places. The sand is generally well-sorted and numerous large-scale cross-bedded dunes are visible. Palaeowind directions are to the south-east.|$|E
5000|$|There are sixteen FLAPS cards; four of each suit. There is {{only one}} MEGA-FLAP card, in the suit of hearts. If a player lays a 4 - FLAPS, the normal rules of next player to go are {{abandoned}} temporarily and any player can lay a FLAP card, although no one has to. No player can lay a FLAP on their own previously laid FLAP - it's a bit like taking turns. After all Flapping has apparently ceased, the next player must ask [...] "any more Flapping ?" [...] and then lay, following suit or number as normal. The direction of play {{is the same as}} before, with suit and number determined by the last FLAP card laid. The next player can also lay a FLAP, even if his FLAP was the last laid in the previous Flapping; that would be a new start of Flapping.There is one way of laying up to three FLAPS, without waiting for other players <b>to</b> <b>interleave</b> and that is by using the MEGA-FLAP card. When a player lays the MEGA-FLAP card, they can then lay up to three more FLAPS, one at a time, whether or not other players are able <b>to</b> <b>interleave</b> their own FLAP cards.|$|E
50|$|Mac OS and its GUI are {{document}}-centric {{instead of}} window-centric or application-centric. Every document window is an object {{with which the}} user can work. The menu bar changes to reflect whatever application the front window belongs to. Application windows can be hidden and manipulated as a group, and the user may switch between applications (i.e., groups of windows) or between individual windows, automatically hiding palettes, and most programs will stay running even with no open windows. Indeed, prior to Mac OS X, it was purposely impossible <b>to</b> <b>interleave</b> windows from multiple applications.|$|E
40|$|This paper {{discusses}} a planner-based {{approach to}} automating data production tasks, such as producing fire forecasts from satellite imagery and weather station data. Since {{the set of}} available data products is large, dynamic and mostly unknown, planning techniques developed for closed worlds are unsuitable. We discuss a number of techniques we have developed to cope with data production domains, including a novel constraint propagation algorithm based on planning graphs and a constraintbased approach <b>to</b> <b>interleaved</b> planning, sensing and execution. ...|$|R
40|$|Abstract. Many formalisms use <b>interleaving</b> <b>to</b> model concurrency. To {{describe}} some system behaviours appropriately, we need <b>to</b> limit <b>interleaving.</b> For example, in component-based systems, we wish <b>to</b> limit <b>interleaving</b> <b>to</b> {{force the}} inputs to {{a method to}} arrive together in order. In Web services, the arrival of XML messages consisting of multiple simple parts should not be interleaved with the behaviour of another component. We introduce interface automata with complex actions (IACA), which add complex actions to de Alfaro and Henzinger’s interface automata (IA). A complex action is a sequence of actions {{that may not be}} interleaved with actions from other components. The composition and refinement operations are more involved in IACA compared to IA, and we must sacrifice associativity of composition. However, we argue that the advantages of having complex actions make it a useful formalism. We provide proofs of various properties of IACA and discuss the use of IACA for modelling Web services. ...|$|R
3000|$|Note that, as the {{interleaving}} {{operation is}} mainly integrated to disperse the input errors that are contiguous, other configurations <b>to</b> an <b>interleaving</b> depth (i.e., k [...]...|$|R
5000|$|As can be seen, it is {{possible}} <b>to</b> <b>interleave</b> video packets with non-video packets (audio or system with priority numbers 2 and 0 respectively). When a packet belonging to next frame {{is about to be}} written to the IFD buffer and the buffer is full, the IFD scheduler will drop a frame based on the priority assigned earlier. When the network bandwidth is so low that also P-frames need to be dropped, then the GOP (Group of Pictures) is set to be [...] "disturbed" [...] {{and the rest of the}} GOP (which depends on the P-frame) is also dropped.|$|E
5000|$|The ability {{correctly}} {{to render}} Avestan did, however, {{have a direct}} benefit: By the common era the Avestan language words had almost ceased to be understood, {{which led to the}} preparation of the Zend texts (from Avestan zainti [...] "understanding"), that is commentaries on and translations of the canon. The development of the Avestan alphabet allowed these commentaries <b>to</b> <b>interleave</b> quotation of scripture with explanation thereof. The direct effect of these texts was a [...] "standardized" [...] interpretation of scripture that survives to the present day. For scholarship these texts are enormously interesting since they occasionally preserve passages that have otherwise been lost.|$|E
50|$|Up to 254 sub-carriers {{are used}} downstream; {{each of these}} 254 sub-carriers can support the {{modulation}} of 0 to 15 bits per baud. The baud rate is 4,000 symbols per second on each subcarrier. Thus the maximum theoretical downstream data rate of an ADSL system is 15.24 Mbit/s (254×15×4000). However, because the data is split up into packets (actually Reed-Solomon encoded codewords) of 255 bytes, the maximum achievable downstream data rate is 8.128 Mbit/s (including other overheads). It is possible <b>to</b> <b>interleave</b> two Reed-Solomon codewords and obtain one logical codeword of 510 bytes. If this is done, then the maximum theoretical downstream speed goes back up to around 15 Mbit/s.|$|E
3000|$|A {{somewhat}} more generic approach <b>to</b> <b>interleaving</b> is presented by [3] {{for the field}} of Turbo interleaving. The presented Unified Parallel Interleaver Architecture is based on HSPA evolution, DVB-SH, 3 GPP-LTE, and WiMAX. It features multiple memory banks, conflict resolution for write accesses and offers generic computational units identified by means of algorithmical transformations. Conflict resolution is performed by introducing a buffer for each memory bank and a FIFO to delay a highly conflicting access sequence with respect to another one. The area cost in CMOS 065 is 0.02 [*] [...]...|$|R
40|$|Abstract – Increasingly, ADC {{technology}} is being {{pressed into service}} for single-shot instrumentation applications that were formerly served by vacuum-tube based oscilloscopes and streak cameras. ADC technology, while convenient, suffers significant performance impairments. Thus, in these demanding applications, a quantitative and accurate representation of these impairments is critical {{to an understanding of}} measurement accuracy. We have developed a phase-plane behavioral model, implemented it in SIMULINK and applied it <b>to</b> <b>interleaved,</b> high-speed ADCs (up to 4 gigasamples/sec). We have also developed and demonstrated techniques to effectively compensate for these impairments based upon the model...|$|R
40|$|International audienceIn {{this paper}} we design a {{decoding}} algorithm {{based on a}} lifting decoding scheme. This leads to a unique decoding algorithm with complexity quasi linear in all the parameters for Reed-Solomon codes over Galois rings and a list decoding algorithm. We show that, using erasures in our algorithms, allows one to decode more errors than half the minimum distance with a high probability. Finally we apply these techniques <b>to</b> <b>interleaved</b> linear codes over a finite field and obtain a decoding algorithm that can recover more errors than half the minimum distance...|$|R
