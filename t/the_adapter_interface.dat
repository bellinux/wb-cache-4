1|3106|Public
50|$|Applying the {{dependency}} inversion principle {{can also be}} seen {{as an example of the}} adapter pattern, i.e. the high-level class defines its own adapter interface which is the abstraction that the other high-level classes depend on. The adaptee implementation also depends on <b>the</b> <b>adapter</b> <b>interface</b> abstraction (of course, since it implements its interface) while it can be implemented by using code from within its own low-level module. The high-level has no dependency on the low-level module since it only uses the low-level indirectly through <b>the</b> <b>adapter</b> <b>interface</b> by invoking polymorphic methods to the interface which are implemented by the adaptee and its low-level module.|$|E
5000|$|<b>The</b> JTAGICE <b>adapter</b> <b>interfaces</b> to <b>the</b> PC via a {{standard}} serial port. Although <b>the</b> JTAGICE <b>adapter</b> {{has been declared}} [...] "end-of-life" [...] by Atmel, it is still supported in AVR Studio and other tools.|$|R
50|$|There {{are a large}} {{variety of}} {{adapters}} for C64 disk/tape emulation and data transfer, and an even larger variety of compatible software. Many of <b>the</b> <b>adapters</b> <b>interface</b> with <b>the</b> original serial bus disk drive plug or the C2N tape. Others connect to either the user port or the cartridge expansion port using either standardized RS232 <b>interfaces</b> or proprietary <b>adapters.</b> In combination with software (or firmware), <b>the</b> <b>adapters</b> can either fully support the original communication protocols, provide partial support or apply proprietary communication protocols. Different solutions allow for letting the C64 access programs stored on another computer or the Internet, and for accessing the C64 disk station and tape deck from other computers.|$|R
40|$|<b>Interface</b> <b>adapters</b> allow {{applications}} {{written for}} one interface {{to be reused}} with another interface without having to rewrite application code, and chaining <b>interface</b> <b>adapters</b> can significantly reduce the development effort required to create <b>the</b> <b>adapters.</b> However, <b>interface</b> <b>adapters</b> will often be unable to convert interfaces perfectly, so {{there must be a}} way to analyze <b>the</b> loss from <b>interface</b> <b>adapter</b> chains in order {{to improve the quality of}} interface adaptation. This paper describes a probabilistic approach to analyzing loss in <b>interface</b> <b>adapter</b> chains, which not only models whether a method can be adapted but also how well methods can be adapted. We also show that probabilistic optimal adapter chaining is an NP-complete problem, so we describe a greedy algorithm which can construct an optimal <b>interface</b> <b>adapter</b> chain with exponential time in the worst case. Comment: 20 pages, 2 figure...|$|R
5000|$|Lauron {{extends the}} concept of the {{solid-state}} drive (SSD) by combining <b>the</b> host <b>adapter</b> <b>interface</b> with <b>the</b> flash memory using a single card. One of the benefits of the SSD technology is that the typical disk drive, which uses a rotating platter and moving components, [...] is replaced with a completely solid state device. In this context, SSD devices are not subject to the effects of extreme vibration and shock conditions that a typical disk drive does. By combining the media with <b>the</b> host bus <b>adapter,</b> connecting cabling is eliminated which is another source of system failure.|$|R
50|$|The Commodore VIC-20 {{computer}} and the Commodore 1540 and 1541 floppy drives use the MOS Technology 6522 VIA to handle IEC Bus transmissions. The Commodore 64 and 128 computers and the Commodore 1571 drive use <b>the</b> Complex <b>Interface</b> <b>Adapter.</b>|$|R
40|$|A {{universal}} <b>interface</b> <b>adapter</b> circuit <b>interfaces,</b> for example, {{a wireless}} communications headset with {{any type of}} communications system, including those that require push-to-talk (PTT) signaling. <b>The</b> <b>interface</b> <b>adapter</b> is comprised of several main components, including an RF signaling receiver, a microcontroller and associated circuitry for decoding and processing the received signals, and programmable impedance matching and line interfacing circuitry for interfacing a wireless communications headset system base to a communications system. A signaling transmitter, which is preferably portable (e. g., handheld), is employed by the wireless headset user to send signals to the signaling receiver. In an {{embodiment of the invention}} directed specifically to push-to-talk (PTT) signaling, the wireless headset user presses a button on the signaling transmitter when they wish to speak. This sends a signal to the microcontroller which decodes the signal and recognizes the signal as being a PTT request. In response, the microcontroller generates a control signal that closes a switch to complete a voice connection between the headset system base and the communications system so that the user can communicate with the communications system. With this arrangement, the wireless headset can be interfaced to any communications system that requires PTT signaling, without modification of the headset device. In addition, <b>the</b> <b>interface</b> <b>adapter</b> can also be configured to respond to or deliver any other types of signals, such as dual-tone-multiple-frequency (DTMF) tones, and on/off hook signals. The present invention is also scalable, and permits multiple wireless users to operate independently in the same environment through use of a plurality of <b>the</b> <b>interface</b> <b>adapters...</b>|$|R
5000|$|In 1976 Motorola {{switched}} the MC6800 family to a depletion-mode technology {{to improve the}} manufacturing yield and to operate at a faster speed. <b>The</b> Peripheral <b>Interface</b> <b>Adapter</b> had a slight change in the electrical characteristics of the I/O pins so the MC6820 became the MC6821.|$|R
50|$|Only <b>the</b> Television <b>Interface</b> <b>Adapter</b> (TIA) IC chip (part number CO10444 in NTSC flavor) was {{different}} for NTSC and PAL markets. SECAM units used a daughterboard <b>adapter</b> to convert <b>the</b> output. The CPU chip CO10745, and combination Ram+I/O chip CO10750 {{were the same}} used throughout the 2600's production for all regions.|$|R
50|$|Among other examples, IEC 61499-3 {{described}} {{the use of}} SIFBs as communication function blocks for remote access to real-time data and parameters of function blocks; <b>the</b> use of <b>adapter</b> <b>interfaces</b> to implement object oriented concepts; initialization algorithms in function block networks; and the implementation of ECCs for a simplified motor control of hypothetical VCRs.Additionally the impacts of the mapping concerning the communication function blocks was explained, {{as well as the}} device management by management applications and its function blocks, and the principle of the device manager function block (DEV_MGR).|$|R
5000|$|Dependency {{inversion}} principle, {{which can}} be thought of as applying <b>the</b> <b>Adapter</b> pattern, when <b>the</b> high-level class defines its own (<b>adapter)</b> <b>interface</b> to <b>the</b> low-level module (implemented by an Adaptee class).|$|R
50|$|I/O is {{provided}} by the SBI. The VAX 8600 features one SBI but could be configured with two. The SBIs are provided by SBI <b>adapters</b> that <b>interface</b> <b>the</b> SBI to an internal adapter bus connected to the M Box. Each SBI has 16 slots for I/O devices, although only 15 are usable as one slot is reserved for <b>the</b> SBI <b>adapter.</b> With one SBI, that SBI has a bandwidth of 13.3 MB/s. With two SBIs, they have a total bandwidth of 17.1 MB/s. <b>The</b> <b>adapter</b> bus that <b>interfaces</b> <b>the</b> SBIs to the M Box has a bandwidth of 33.3 MB/s. Unibus and Massbus are also supported, provided by adapters that plug into the SBI. The VAX 8600 I/O cabinet contains a PDP-11 computer serving as the console, a Unibus card cage and provisions for mounting disk drives.|$|R
40|$|Presents {{a survey}} of the latest {{developments}} in the field of the universal computer interface, resulting from a study of the world patent literature. Illustrating {{the state of the art}} today, the book ranges from basic interface structure, through parameters and common characteristics, to the most important industrial bus realizations. Recent technical enhancements are also included, with special emphasis devoted to <b>the</b> universal <b>interface</b> <b>adapter</b> circuit. Comprehensively indexed...|$|R
50|$|An adapter allows two {{incompatible}} interfaces {{to work together}}. This is {{the real-world}} definition for an <b>adapter.</b> <b>Interfaces</b> may be incompatible, but the inner functionality should suit <b>the</b> need. <b>The</b> <b>Adapter</b> design pattern allows otherwise incompatible classes to work together by converting the interface of one class into an interface expected by the clients.|$|R
40|$|NASA's Goddard Space Flight Center Shuttle Small Payloads Project (SSPP), in {{partnership}} with the United States Air Force and NASA's Explorer Program, is developing a Shuttle based launch system called SHELS (Shuttle Hitchhiker Experiment Launcher System), which shall be capable of launching up to a 400 pound spacecraft from the Shuttle cargo bay. SHELS consists of a Marman band clamp push-plate ejection system mounted to a launch structure; the launch structure is mounted to one Orbiter sidewall adapter beam. Avionics mounted to <b>the</b> <b>adapter</b> beam will <b>interface</b> with Orbiter electrical services and provide optional umbilical services and ejection circuitry. SHELS provides an array of manifesting possibilities {{to a wide range of}} satellites...|$|R
40|$|AbstractTo build a {{scientific}} and efficient Distribution Management System (DMS), {{it is necessary}} to achieve sharing of data and avoid information silos. The IEC 61968 -based information exchange platform, which adopts IEC 61968 Information Exchange Model (IEM) and interface specification, is an effective means to resolve the above problem, realizing seamless data exchange and sharing of data between various subsystems. It is shown by applications that, <b>the</b> <b>adapters</b> for multi-system <b>interfaces</b> are simple and practical, ensuring efficient communication for data exchange, and meeting requirements for data exchange and sharing of data between various subsystems. This platform effectively solves the problem of information silos, laying a solid foundation for development of smart grid information technology...|$|R
50|$|These {{concepts}} are demonstrated in Lauron's products, one of {{such is the}} LT-PCI-CF. This PCI (Peripheral Component Interconnect) adapter uses a RAID bridge IC which is <b>the</b> host bus <b>adapter.</b> <b>The</b> RAID <b>interface</b> can be configured as a 4 port data path. Doing such improves performance since data is transferred on all 4 ports simultaneously. It also offers the improved endurance ratings as less write cycles are needed {{for the same amount}} of data written to the device. CompactFlash is used for the media, which is consistently less expensive than SSD modules. CompactFlash endurance specifications range, but industrial versions offers the endurance of 2,000,000 write cycles.|$|R
40|$|This paper {{presents}} initialization of {{data communication}} link to vehicle OBDII (On-Board Diagnostics II) system using a PC-based diagnostic tester. The current work represents the physical layer of a diagnostic tester project. A concise overview of OBDII system is {{shown at the}} beginning. Diagnostic interfaces for communication with external testers are investigated. The ISO 9141 - 2 / ISO 14230 interface has been chosen for implementation mainly {{because it can be}} directly interfaced from a PC using simple electrical converter to RS 232 (<b>interface</b> <b>adapter).</b> <b>The</b> circuit of <b>the</b> <b>interface</b> <b>adapter</b> is included and the operation principle is explained. The software part is developed using C++ language. Prior to any diagnostic communication an initialization must be performed. After successful initialization data can be transferred. The initialization and data transfer mechanisms are described in detail. Practical results from verification of diagnostic tester in real conditions are included...|$|R
50|$|<b>The</b> <b>adapters</b> {{connected}} to <b>the</b> BBC Micro's 1 MHz bus <b>interface.</b> <b>Adapters</b> could be daisy-chained, allowing {{more than one}} to be fitted.|$|R
50|$|The {{first task}} was to {{redesign}} the 6800 MPU to improve the manufacturing yield and to operate at a faster clock. This design used depletion-mode technology and was known internally as the MC6800D. The transistor count went from 4000 to 5000 but the die area was reduced from 29.0 mm2 to 16.5 mm2. The maximum clock rate for selected parts doubled to 2 MHz. The other chips in the M6800 family were also redesigned to use depletion-mode technology. <b>The</b> Peripheral <b>Interface</b> <b>Adapter</b> had a slight change in the electrical characteristics of the I/O pins so the MC6820 became the MC6821. These new IC were completed in July 1976.|$|R
40|$|Abstract Nowadays {{technologies}} such as the wireless connectivity, embedded devices and MEMS provide a possibility to build tiny compact devices which have sensing, computing and networking capabilities. The sensors connected to the embedded devices give new possibilities and environments for collecting sensor data and passing it to the networks or other devices. Wireless sensor node technology, as the name suggest, is purposely designed to collect sensor data from the sensor network cluster(s) or a single sensor. “The Internet of Things” defines the systems that consist of networks and networks of sensors, actuators, and smart objects which are interconnected together allowing communication with one another; {{some of which have}} decision making capabilities. The wireless sensor networks and the Internet of Things provide several data centric protocols to access sensor data of sensor networks and the embedded devices. Data centric protocols are based on two paradigms request-response and publish-subscribe. The Publish and subscribe is quite popular in today’s solution because the same sensor data can be routed and published to several final processing units or the devices which are connected to the router gateways. Sensor communication protocol with <b>the</b> connectivity bus <b>adapter</b> <b>interfaces</b> provides an easy and simple way to access sensor register over different kinds of connectivity. Protocol can be integrated to the embedded device which then provides the message passing with two connectivity <b>adapter</b> <b>interfaces.</b> A lower level connectivity interface provides a possibility to interact with the sensor via I 2 C of SPI buses. A high level interface provides a connection to and from the devices over the wired or wireless connections...|$|R
40|$|International Telemetering Conference Proceedings / October 22 - 25, 2001 / Riviera Hotel and Convention Center, Las Vegas, NevadaThe Range Instrumentation and Control System (RICS) is a PC-based client/server {{application}} {{designed to}} collect time-space position information (TSPI) from remote radar test sites and distribute it in real-time {{across a wide}} area network (WAN). The system architecture is composed of two main parts - <b>the</b> Data <b>Interface</b> <b>Adapter</b> (or DIA, which runs under VxWorks and is implemented using C/C++) and the RICS console PC (which runs under Windows 2000 and is implemented in Java). CORBA is used to provide communication between the RICS console and DIA. This paper describes {{the design of the}} system, focusing primarily on the DIA software...|$|R
40|$|The vehicle {{on-board}} diagnostics system (OBDII) provides a serial diagnostic link for communication with scan tools. There are 4 diagnostic interfaces: ISO 9141 - 2, KWP 2000, SAE J 1850 and ISO 15765. A PC-based scan tool {{consists of an}} <b>interface</b> <b>adapter</b> and specialized diagnostic software. This paper presents {{the implementation of a}} smart OBDII <b>interface</b> <b>adapter.</b> <b>The</b> <b>adapter</b> is build of a protocol converter, interface transceivers and protective devices. The full schematic circuit of <b>the</b> <b>adapter</b> is presented and explained in detail. The protocol converter (MCU) processes and transfers diagnostic messages. It communicates with PC via serial port using ASCII messages. The software for the protocol converter has been developed in C language. A state diagram of software is presented. The functions performed by the software for different interfaces are explained in detail. <b>The</b> <b>adapter</b> is successfully verified in practice...|$|R
40|$|By using {{different}} <b>interface</b> <b>adapters</b> for different methods, {{it is possible}} to construct a maximally covering web of <b>interface</b> <b>adapters</b> which incurs minimum loss during interface adaptation. We introduce a polynomial-time algorithm that can achieve this. However, we also show that minimizing <b>the</b> number of <b>adapters</b> included in a maximally covering web of <b>interface</b> <b>adapters</b> is an NP-complete problem. Comment: 7 page...|$|R
40|$|Abstract- With {{increasing}} {{availability of}} predefined IP (Intellectual Properties) blocks and inexpensive microprocessors, embedded system designers {{are faced with}} more design choices than ever. On the other hand, {{there is a constant}} pressure on reducing the time to market. However, as the IP blocks are provided by different vendors, they differ in their interfaces. In order to improve design reuse, methods for combining heterogeneous IP blocks with incompatible protocols and I/Os are needed. In this paper, we propose an interface synthesis method that uses the UML notation to model the interfaces of predefined components and glue logic within the standard OCPcompliant environment. We built a code generator to produce <b>the</b> <b>interface</b> <b>adapters</b> from <b>the</b> UML models. We experimented with our approach using simple-bus and a MPEG- 2 decoder as case studies. ...|$|R
40|$|Grid systems span {{manifold}} {{organizations and}} application domains. Because this diverse environment inevitably engenders multiple protocols, interoperability mechanisms {{are crucial to}} seamless, pervasive access. This paper presents the design, rationale, {{and implementation of the}} Proteus multiprotocol library for integrating multiple message protocols, such as SOAP and JMS, within one system. Proteus decouples application code from protocol code at run-time, allowing clients to incorporate separately developed protocols without recompiling or halting. Through generic serialization, which separates the transfer syntax from the message type, protocols can also be added independently of serialization routines. We also show performanceenhancing mechanisms for Grid services that examine metadata, but pass actual data through opaquely (such as <b>adapters).</b> <b>The</b> <b>interface</b> provided to protocol implementors is general enough to support protocols as disparate as our current implementations: SOAP, JMS, and binary. Proteus is written in C++; a Java port is planned...|$|R
5000|$|The March 7, 1974 {{issue of}} Electronics had a two-page {{story on the}} Motorola MC6800 {{microprocessor}} along with <b>the</b> MC6820 Peripheral <b>Interface</b> <b>Adapter,</b> <b>the</b> MC6850 communications <b>interface</b> <b>adapter,</b> <b>the</b> MCM6810 128 byte RAM and the MCM6830 1024 byte ROM. This was followed by an eight-page article in the April 18, 1974 issue written by the Motorola design team. This issue also had an article introducing the Intel 8080 ...|$|R
5000|$|Adapter interfaces: An <b>adapter</b> <b>interface</b> {{is not a}} real {{function}} block. It combines several {{events and}} data connections within one connection and provides an interface concept to separate specification and implementation.|$|R
40|$|Virtual {{instrumentation}} {{system has been}} developed for the control system of SRRC. Almost of the measurement instruments are to provide IEEE- 488 interface, they are distributed around the accelerator facilities, the virtual {{instrumentation system}} connects these instruments by local area network, Ethernet, to GPIB <b>adapter.</b> <b>The</b> man-machine <b>interface</b> developed by using LabVIEW, which is running at Sun's workstation. The workstation to be played as an instrument server, the operator can access remote instruments simply by point and click operation. The information provided by instruments can be analyzed and extracted the desire machine parameters at workstation. The main control system can access these parameters by standard network protocol. The major goals of the virtual instrumentation interface are to provide the automatic measurement of the machine parameters and to minimize the interlude of the machine physicists and operators. Machine parameters, such as tune, beam spectrum, filling [...] ...|$|R
40|$|User-level {{interfaces}} (ULIs) find increasing {{application in}} high-speed network <b>adapters.</b> <b>The</b> Virtual <b>Interface</b> Archi-tecture {{as the main}} ULI representative is adopted not only in its native domain of InfiniBand but increasingly also in virtualized TCP/IP <b>adapters.</b> <b>The</b> advantages over socket implementations are low CPU usage combined with low la-tency communication. The trend towards heavily virtual-ized systems however creates a new challenge for user-level network interfaces as they {{have to cope with}} the increasing virtualization complexity, making it difficult to improve on current communication latencies. In this paper we propose architectural support in the pro-cessor for a new, enhanced doorbell mechanism for ULI de-vices to improve the send performance through payload data movement onloading. Therefore we reuse existing transla-tion lookaside buffers (TLBs) to translate virtual addresses of send data references already in the processing units. Fur-thermore the I/O controller is adapted to work on those data references and to fetch and forward the data to the device early on. Our simulations show that this concept is able to reduce the average send start latency for single packet sends by up to 50 % compared with the best current concept. 1...|$|R
50|$|Parallel ATA cables {{transfer}} data 16 bits at a time. The traditional cable uses 40-pin connectors {{attached to}} a ribbon cable. Each cable has two or three connectors, one of which plugs into an <b>adapter</b> <b>interfacing</b> with <b>the</b> rest of the computer system. The remaining connector(s) plug into storage devices, most commonly hard disk drives or optical drives.|$|R
30|$|The EC FP 7 Reservoir project [10] {{considered}} {{federation of}} cloud infrastructure to enable organisations to pool cloud resources to increase scalability. Such an approach goes beyond our approach {{of providing a}} service connector, requiring a much higher level of system integration. Another FP 7 project, Contrail [11], plans to build federated hybrid clouds out of commercial public clouds and private clouds based on OpenNebula, via an <b>adapter</b> <b>interface.</b>|$|R
40|$|The {{contents}} of this document {{are intended to}} be consistent with the tasks and products to be prepared by Program participants. The Androgynous Peripheral Assembly System to Pressurized Mating <b>Adapter</b> <b>Interface</b> Control Document shall be implemented on all new ISS contractual and internal activities and shall be included in any existing contracts through contract changes. This document is {{under the control of the}} NASA Interface Control Working Group (ICWG), and an...|$|R
40|$|Despite {{providing}} similar functionality, multiple {{network services}} may {{require the use}} of different interfaces to access the functionality, and this problem will only get worse with the widespread deployment of ubiquitous computing environments. One way around this problem is to use <b>interface</b> <b>adapters</b> that adapt one interface into another. Chaining these <b>adapters</b> allows flexible <b>interface</b> adaptation with fewer <b>adapters,</b> but <b>the</b> loss incurred due to imperfect interface adaptation must be considered. This paper outlines a mathematical basis for analyzing the chaining of lossy <b>interface</b> <b>adapters.</b> We also show that the problem of finding an optimal <b>interface</b> <b>adapter</b> chain is NP-complete. Comment: 22 pages, 6 figure...|$|R
40|$|Graduation date: 1989 A {{personal}} {{computer with a}} Data Acquisition and Control <b>Adapter</b> <b>interface</b> {{has been used to}} monitor the power of the Oregon State University TRIGA Reactor, and from the time behavior of the reactor power the reactivity has been computed using the point kinetics equations and displayed on a digital read-out panel. This technique has been verified with several measurements, including pulse reactivity, prompt jump and drop, and control rod calibration...|$|R
40|$|An adapter is {{provided}} for facilitating the charging of containers and leak testing penetration areas. <b>The</b> <b>adapter</b> comprises an adapter body and stem which are secured to the container`s penetration areas. The container is then pressurized with a tracer gas. Manipulating <b>the</b> <b>adapter</b> stem installs a penetration plug allowing <b>the</b> <b>adapter</b> {{to be removed}} and the penetration to be leak tested with a mass spectrometer. Additionally, a method {{is provided}} for using <b>the</b> <b>adapter.</b> <b>The</b> present invention relates generally to leak test adapters, and more particularly to leak test adapters used with containers such as radioactive material shipping containers...|$|R
