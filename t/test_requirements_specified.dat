1|5335|Public
40|$|Request Commission approval, by {{negative}} consent, for {{the staff}} to grant two specific exemptions from package <b>test</b> <b>requirements</b> <b>specified</b> in 10 CFR Part 71 for the Trojan Reactor Vessel Package (TRVP), and to authorize the TRVP for one-time transport for disposal. BACKGROUND: Portland General Electric Company (PGE) has requested approval of the TRVP (including internals) for transport to the disposal facility operated by U...|$|E
40|$|This Bachelor's thesis {{deals with}} design and {{implementation}} of control flow graphs extraction from source files in C and C++ language to LLVM IR format. The extractor was implemented as a standalone tool using the LibTooling interface of the Clang compiler. Output of this tool follows the requirements of platform Testos, {{so it can be}} used for automated generation of <b>test</b> <b>requirements</b> based on <b>specified</b> coverage criteria...|$|R
40|$|To {{evaluate}} the licensee’s {{compliance with the}} <b>testing</b> and maintenance <b>requirements</b> <b>specified</b> in the FEMA-approved ANS Design Report and supporting letters for the primary and backup ANS {{to the extent that}} the licensee has assumed responsibility for the testing and maintenance of those systems. If the ANS is maintained and tested by a local government, this procedure does not apply. Initial implementation of this procedure will require an understanding of the FEMA-approved design report and verification of the approved system tests...|$|R
40|$|This paper {{presents}} {{the first stage}} in our model-based software testing process. The process is based partly on techniques from testing telecommunication protocols. We extend these concepts and apply them to unit- and integration-level testing of software. Under this process, all <b>test</b> <b>requirements</b> are <b>specified</b> using a semi-formal test description language, TTCN, providing a uniform approach to create test cases {{at different levels of}} testing, and to automate many testing activities. 1 Introduction Our work is was based on the initial requirement that we needed a language to describe <b>test</b> <b>requirements</b> in a formal setting. TTCN [1] was chosen since it is an industry standard (rather than just a scripting language tied to a specific test execution tool). TTCN is supported by many tools that simplify the creation and maintenance of test suites. However, we need to make some modifications to make TTCN suitable for software testing and for generating <b>test</b> <b>requirements.</b> TTCN is designed f [...] ...|$|R
40|$|This {{monograph}} {{focuses on}} {{a proposal for a}} testing model in safety critical systems. Due to the large scope of these systems, we have focused on the system testing and we have included <b>requirements</b> for <b>testing</b> the communication subsystem. After establishing the theoretical background for testing, we have defined the differences and specifics of traditional software systems and safety critical systems, based on standards and guidelines analysis for various safety critical systems. The system testing that we are using is not clearly integrated into the process of design and development of safety critical systems. Therefore, we have proposed basic steps of this process to which we have integrated system testing. Given the scope of the system testing, we have decided to propose two testing models. We have focused on performance and step stress testing. These models implement <b>requirements</b> for <b>testing</b> of safety critical systems specified by us. To verify the proposed models, we have defined a metric. Based on its value we can determine whenever the proposed model meets <b>testing</b> <b>requirements</b> <b>specified</b> by us. Scientific Monographs in Automation and Computer Science; 13 Auch im Buchhandel erschienen: Design for a testing model of a communication subsystem for a safety-critical control system / Lukáš Špendla Ilmenau : Univ. -Verl. Ilmenau, 2013. - 140 S. (Scientific Monographs in Automation and Computer Science; 13) ISBN 978 - 3 - 86360 - 083 - 9 Preis: 13, 00 €Übersicht: Scientific Monographs in Automation and Computer Science</a...|$|R
40|$|Thesis (M. Sc.) -University of KwaZulu-Natal, Durban, 2004. Low-voltage {{switchgear}} and controlgear assemblies with a rated short-circuit withstand strength above 10 kA, are required, by law, {{to conform}} to the South African standard, SANS 1473 - 1 (Low Voltage Switchgear and Controlgear Assemblies: Part 1 : Typetested, partially type-tested and specially tested assemblies with rated short-circuit withstand strength above lOkA). Standard SANS 1473 - 1 stipulates three categories of assemblies i. e. type-tested, partially type-tested and specially tested assemblies. The specially tested assembly is unique to the South African market, while the other two categories are stipulated in standard SANS IEC 60439 - 1 (Low Voltage Switchgear and Controlgear Assemblies: Part 1 : Type-tested and partially type-tested assemblies), which is internationally accepted in many countries as the applicable low-voltage assembly standard. Standard SANS 1473 - 1 specifies seven type-tests for certification as a type-tested assembly (TTA), but specifies, at most, three type-tests for certification as a specially tested assembly (STA). The underlying purpose of a technical standard is to provide for the safety of people and property, with the purpose of the research being twofold: 1. To investigate if the <b>testing</b> <b>requirements</b> <b>specified</b> for a specially tested assembly (STA), in accordance with standard SANS 1473 - 1, are correctly applied, and do not pose any safety risks. 2. To investigate any safety risks that stem from the fact that four type-tests are excluded for verification as a specially tested assembly (STA), as opposed to the seven type tests required for verification as a type-tested assembly (TTA). The document highlights the technical inadequacies of an assembly that is certified as a STA, in accordance with standard SANS 1473 - 1, and the potential safety risks associated with this type of assembly classification...|$|R
40|$|The McShields Method and {{differentiating}} Biochar properties: Jeff Licht, Hugh McLaughlin The McShields Method divides a biochar into moisture, ash, mobile {{matter and}} resident matter, with additional properties of each subset being relevant {{depending on the}} biochar application. The method {{has the advantage of}} simplicity and low instrumentation cost. There are other simple tests that provide insights into biochar impact on soil blends, such as the effect on soil matrix plasticity, shrinkage and moisture retention. The McShields Method will be summarized, with what is being measured and insight into the biochar impact in the soil performance. Additional discussion of specialized non-standard assays will be provided. Jeff Licht: [URL] Hugh McLaughlin: [URL] Authors: Hugh McLaughlin, Frank Shields, Jeff Licht IBI Biochar Standards and Certification Program: Wiley Barbour [URL] For a sustainable biochar industry to succeed, it must provide certainty to consumers and markets about biochar and its safe use as a soil amendment. The Standardized Product Definition and Product Testing Guidelines for Biochar That Is Used in Soil (IBI Biochar Standards) provides the tools needed to universally and consistently define what biochar is, and to confirm that a product intended for sale or use as biochar possesses the necessary characteristics for safe use. In May 2013, IBI officially launched the IBI Biochar Certification Program. With this program biochar manufacturers are able to certify that their product meets quality standards and is safe for application to soils. Once certified, biochars can carry the “IBI Certified Biochar” seal on their product label. The IBI Biochar Standards serve as the foundation for the IBI Biochar Certification Program and certification approval requires that biochar(s) pass <b>testing</b> <b>requirements</b> <b>specified</b> by the IBI Biochar Standards. This presentation will review progress to date on the launch of the IBI Biochar Certification Program...|$|R
40|$|UML as a {{standard}} modeling language has been growing in importance and usage. Despite its intrinsic value it still has some important aspects of software development {{that it does not}} address properly, namely the questions arising when modeling large and complex applications. Use cases {{play an important role in}} the overall analysis process since they are essential in capturing the requirements. However they lack a formal semantic definition, and practice shows that they can not fully express the complexity of underlying applications. The work presented here proposes an architecture that extends the actual use case scenario in order to provide more detailed information. A prototyping environment is also presented as a way of <b>testing</b> the <b>specified</b> <b>requirements...</b>|$|R
50|$|Originally {{designed}} to be greater than, or equal to, the construction and performance specifics of an inner container, the Performance Oriented Packaging Standards (POPS) of the US Department of Transportation requirement was that the Salvage Drum {{be at least a}} 'Z' (Packing Group III) solids container. Convinced that this was not an acceptable test for a Salvage Drum, on January 1, 1998, the 'T' Salvage Drum (1A2T) became the UN recommended salvage packaging for international shipments. The US-DOT, per 49 CFR 173.3, also recognizes the 'T' Salvage Drum for shipments within the US. Unlike the original 49 CFR Salvage Drum requirement, the 'T' Salvage Drum is most commonly an 85 US gallon capacity steel drum that, meets UN Model Regulations <b>test</b> <b>requirement</b> 6.1.5.1.11, which <b>specifies</b> that when filled with water, the drum can qualify for Packing Group II and be dropped 1.2 meters (4 feet) on its most critical orientation, and not leak. In addition, the drum must successfully pass a 30 kPa Leakproofness Test. Both tests are very severe for an open-head steel container. This testing illustrates the extreme capabilities of the 'T' Salvage Drum when used for the safe recovery of hazardous materials in transportation.|$|R
5000|$|Principles of risk-based capital/liquidity <b>requirements</b> <b>specified</b> by Basel 3, FRTB, etc.; ...|$|R
30|$|Modify and {{existing}} monitoring tool to better fit the <b>requirements</b> <b>specified</b> by the strategy.|$|R
50|$|The program {{must meet}} the 110-hour <b>requirement,</b> <b>specified</b> by the Ontario Ministry of Education.|$|R
5000|$|Verify {{that the}} {{low-level}} policies actually meet the <b>requirements</b> <b>specified</b> by the high-level goal ...|$|R
40|$|Safety and {{security}} {{are closely related}} subtypes of defensibility, another quality factor in a quality model. The close similarity between these two quality factors implies that a taxonomy of safety-related requirements {{is a good place}} to begin when developing an analogous taxonomy of security-related requirements. The resulting taxonomy consists of pure security <b>requirements</b> <b>specifying</b> minimum acceptable amounts of security, security-significant requirements which are non-security requirements with important security ramifications, security system <b>requirements</b> <b>specifying</b> <b>requirements</b> for security architectural components, {{and security}} constraints. 1. The Proble...|$|R
50|$|To {{maximise}} innovation, {{the design}} brief and technical requirements were {{kept to a}} minimum, with mainly the mandatory <b>requirements</b> <b>specified.</b>|$|R
40|$|AbstractSoftware safety <b>testing</b> <b>requirements</b> {{elicitation}} {{method was}} put forward {{based on the}} safety-critical software including safety <b>testing</b> <b>requirements</b> classification, safety <b>testing</b> <b>requirements</b> decomposition and the finishing of elicitation sources {{in order to get}} more perfect software safety <b>testing</b> <b>requirements.</b> And it was compared with the safety <b>testing</b> <b>requirements</b> of current <b>test</b> methods. Finally the elicited <b>testing</b> <b>requirements</b> were applied in certain engine control software, and was validated more sufficiently...|$|R
50|$|ISO 7240-2:3003 <b>specifies</b> <b>requirements,</b> <b>test</b> {{methods and}} {{performance}} criteria for control and indicating equipment (c.i.e.) {{for use in}} fire detection and fire alarm systems installed in buildings.|$|R
5000|$|EN 12566-7: [...] "Part 7: Prefabricated {{tertiary}} treatment units" [...] <b>specifies</b> <b>requirements,</b> <b>test</b> methods, {{and evaluation of}} conformity for a packaged and/or site assembled {{tertiary treatment}} unit.|$|R
3000|$|A {{student may}} earn a STEM {{endorsement}} by completing the <b>requirements</b> <b>specified</b> in subsection (e) of this section, including Algebra II, chemistry, and physics and: [...]...|$|R
50|$|HP Application Lifecycle Management {{software}} helps {{organize and}} manage {{all phases of}} the application lifecycle management process, including defining releases, <b>specifying</b> <b>requirements,</b> <b>test</b> management—including planning and executing tests and tracking defects.|$|R
40|$|Abstract. In {{this project}} {{the goal is}} to develop the safe * family of {{containers}} for the CPH STL. The containers to be developed should be safer and more reliable than any of the existing implementations. A special focus should be put on strong exception safety since none of the existing prototypes available at the CPH STL can give this guarantee for all operations. In spite of the safety requirements, the strict running-time <b>requirements</b> <b>specified</b> in the C++ standard, and additional <b>requirements</b> <b>specified</b> in the CPH STL design documents, must be fulfilled...|$|R
50|$|The contradiction {{is caused}} by the use of the {{concepts}} of <b>requirements</b> and <b>specified</b> <b>requirements</b> but with different meanings.|$|R
5000|$|States {{are allowed}} to {{register}} a new end use product or an additional use of a federally registered product if the situation meets the <b>requirements</b> <b>specified</b> in section 24(c) of FIFRA: ...|$|R
5000|$|User {{access to}} {{corporate}} IT systems, networks, applications and information must be controlled {{in accordance with}} access <b>requirements</b> <b>specified</b> by the relevant Information Asset Owners, normally according to the user's role.|$|R
50|$|Following are averages {{of salary}} ranges as listed in {{position}} announcements, excluding additional benefits. The upper salary level listed in such announcements may represent qualifications exceeding the minimum <b>requirements</b> <b>specified</b> for the position.|$|R
50|$|Lighting <b>requirements</b> <b>specified</b> by the Ohio Department of Transportation are met, {{and then}} for {{aesthetics}} alone, a system of blue linear lights are integrated into {{the underside of the}} bridge and inclined abutments.|$|R
5000|$|In {{addition}} to the eligibility <b>requirements</b> <b>specified</b> in the [...] charter, naming conventions apply to the labeling of subdomains. Extensive support is also being introduced for internationalized domain names, as described at [...]|$|R
50|$|In 2013, Eclipse {{planned to}} submit the 550 for the USAF's very light jet requirement, {{even though that}} <b>requirement</b> <b>specified</b> FAR Part 25 {{certification}} and the 550 is certified to the less-stringent Part 23.|$|R
5000|$|Requirements Analysis and Design Definition: {{describes}} the tasks used to organize <b>requirements,</b> <b>specify</b> and model <b>requirements</b> and designs, validate and verify information, identify solution options, and estimate the potential value {{that could be}} realized.|$|R
5000|$|EN 12566-6: [...] "Part 6: Prefabricated {{treatment}} {{units for}} septic tank effluent" [...] <b>specifies</b> <b>requirements,</b> <b>test</b> methods, {{and evaluation of}} conformity for prefabricated secondary treatment units used {{for the treatment of}} effluent from septic tanks; ...|$|R
30|$|Structural testing uses an {{internal}} {{perspective of the}} system to define testing criteria and derive <b>test</b> <b>requirements.</b> These <b>test</b> <b>requirements</b> aim at exercising the program’s data structures and its control flow. To better analyse the issues of deriving <b>test</b> <b>requirements</b> in AO programs, we summarise some research that has proposed structural testing criteria for procedural and OO programs. Afterwards, we describe adapted (procedural and OO) criteria to AO programs and contrast them with AO-specific to emphasise the tricks of deriving <b>test</b> <b>requirements</b> in AO programs.|$|R
50|$|Similar to an RTO, {{the primary}} {{difference}} being that ISOs either {{do not meet}} the minimum <b>requirements</b> <b>specified</b> by FERC to hold the designation of RTO or that the ISO has not petitioned FERC for the status.|$|R
25|$|Any yacht {{club that}} meets the <b>requirements</b> <b>specified</b> in the deed of gift {{has the right to}} {{challenge}} the yacht club that holds the cup. If the challenging club wins the match, it gains stewardship of the cup.|$|R
50|$|When a <b>requirement</b> <b>specifies</b> a {{software}} system’s quality attributes, refers to {{a software}} system’s core features, impose constraints on a software system, defines {{the environment in which}} the software system will run, {{it is likely to be}} architecturally significant.|$|R
50|$|Often, local {{regulations}} may {{exceed the}} <b>requirements</b> <b>specified</b> in ISO 22715. In the United States, the Food & Drug Administration (FDA) regulates the cosmetic industry with {{standards that are}} provided by the American National Standards Institute (ANSI), in which the FDA is member.|$|R
40|$|We {{introduce}} a projection operator over concepts {{in a given}} description logic that produces least subsumers of concepts in a language fragment that satisfies additional syntactic <b>requirements</b> <b>specified</b> as a parameter of the operator. The operator complements existing operators for concept selection and concept orderin...|$|R
