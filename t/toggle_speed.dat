1|5|Public
50|$|Propagation {{delay is}} the time taken for a two-input NAND gate to produce a result after a change of state at its inputs. <b>Toggle</b> <b>speed</b> {{represents}} the fastest speed at which a J-K flip flop could operate. Power per gate is for an individual 2-input NAND gate; usually {{there would be more}} than one gate per IC package. Values are very typical and would vary slightly depending on application conditions, manufacturer, temperature, and particular type of logic circuit. Introduction year is when {{at least some of the}} devices of the family were available in volume for civilian uses. Some military applications pre-dated civilian use.|$|E
50|$|The {{technique}} allows {{developers to}} release a version of a product that has unfinished features. These unfinished features are hidden (toggled) so they do {{not appear in the}} user interface. This allows many small incremental versions of software to be delivered without the cost of constant branching and merging. Feature toggles may allow shorter software integration cycles. A team working on a project can use feature <b>toggle</b> to <b>speed</b> up the process of development, that can include the incomplete code as well.|$|R
40|$|Background: The {{explosion}} of NGS (Next Generation Sequencing) sequence data requires a huge effort in Bioinformatics methods and analyses. The creation of dedicated, robust and reliable pipelines {{able to handle}} dozens of samples from raw FASTQ data to relevant biological data is a time-consuming task in all projects relying on NGS. To address this, we created a generic and modular toolbox for developing such pipelines. Results: TOGGLE (TOolbox for Generic nGs anaLysEs) is a suite of tools able to design pipelines that manage large sets of NGS softwares and utilities. Moreover, TOGGLE offers {{an easy way to}} manipulate the various options of the different softwares through the pipelines in using a single basic configuration file, which can be changed for each assay without having to change the code itself. We also describe one implementation of TOGGLE in a complete analysis pipeline designed for SNP discovery for large sets of genomic data, ready to use in different environments (from a single machine to HPC clusters). Conclusion: <b>TOGGLE</b> <b>speeds</b> up the creation of robust pipelines with reliable log tracking and data flow, for a large range of analyses. Moreover, it enables Biologists to concentrate on the biological relevance of results, and change the experimental conditions easily. The whole code and test data are available a...|$|R
500|$|Practice mode {{is a new}} {{addition}} to the game, allowing a player to practice certain sections of a song ("Verse 2," [...] "Chorus," [...] "Bridge 3," [...] "Gtr Solo 4," [...] etc.) on different difficulties and instruments. Practice mode gives the player the ability to <b>toggle</b> the <b>speed</b> of the notes (Full Speed, Slow, Slower and Slowest) and does not stop a song {{no matter how many}} mistakes are made. Players can play the bass guitar lines on most songs. On others, a rhythm guitar line is available instead.|$|R
40|$|A toggle map {{is a set}} of toggle {{switches}} that allows the manipulation of several switches with a single mouse drag interaction. Because {{toggle switches}} are functionally equivalent to black and white pixels interaction techniques from paint programs can be adopted for this task. A controlled experiment shows that <b>toggle</b> maps can <b>speed</b> up interfaces containing many toggle switches such as the interactive definition of user profiles. To maximize time savings toggle maps have to be laid-out according to co-occurrences between toggles. Efficiency gains resulting from the paint method open up new application areas such as segmented interval sliders. As an example an efficient timer dialog is presented...|$|R

