3|10000|Public
50|$|Future File: The most {{speculative}} register {{state of}} <b>the</b> <b>machine.</b> <b>RAM</b> indexed by logical register number.|$|E
50|$|Architectural Register File or Retirement Register File (RRF): The {{committed}} register {{state of}} <b>the</b> <b>machine.</b> <b>RAM</b> indexed by logical register number. Typically written into as results are retired or committed {{out of a}} reorder buffer.|$|E
5000|$|The {{original}} Amiga&nbps;1000 is {{the only}} model to have 256 KB of Amiga Chip RAM, which can be expanded to 512 KB {{with the addition of}} a daughterboard under a cover in the center front of <b>the</b> <b>machine.</b> <b>RAM</b> may also be upgraded via official and third-party upgrades, with a practical upper limit of about 9 MB of [...] "fast RAM" [...] due to the 68000's 24-bit address bus. This memory is accessible only by the CPU permitting faster code execution as DMA cycles are not shared with the chipset.|$|E
50|$|In {{computer}} science, random-access <b>machine</b> (<b>RAM)</b> is {{an abstract}} <b>machine</b> in <b>the</b> general class of register <b>machines.</b> <b>The</b> <b>RAM</b> {{is very similar}} to <b>the</b> counter <b>machine</b> but with <b>the</b> added capability of 'indirect addressing' of its registers. Like <b>the</b> counter <b>machine</b> <b>the</b> <b>RAM</b> has its instructions in the finite-state portion of <b>the</b> <b>machine</b> (<b>the</b> so-called Harvard architecture).|$|R
50|$|Hibernation is {{an example}} that uses an image of <b>the</b> entire <b>machine's</b> <b>RAM.</b>|$|R
2500|$|Trapdoor slot under <b>the</b> <b>machine,</b> for <b>RAM</b> {{expansion}} and real-time clock ...|$|R
50|$|The memory {{issue was}} also flagged by Crash magazine, which {{pointed out that}} the floppy disk format meant that games had to be loaded into <b>the</b> <b>machine's</b> <b>RAM</b> (originally {{intended}} to be 128k) in turn requiring the system to be constantly accessing the disk drive. Konix intended to remedy the problem with RAM upgrade cartridges, provided that the price of RAM fell in the future.|$|R
5000|$|The {{auxiliary}} slot {{could accept}} a 1 kB memory card {{to enable the}} 80-column display. This card contained only RAM; the hardware and firmware for the 80-column display was built into the Apple IIe, remaining fairly compatible with the older Videx-style cards, even though the low-level details were very different. An [...] "extended 80-column card" [...] with more memory expanded <b>the</b> <b>machine's</b> <b>RAM</b> to 128 kB.|$|R
50|$|The AlphaSmart saved every {{keystroke}} {{directly to}} <b>the</b> <b>machine's</b> <b>RAM,</b> which was maintained by a battery backup even when powered down. AlphaSmarts could transfer data either {{by a special}} program that communicated with the AlphaSmart or by the simpler method of transmitting the keystrokes of the written text {{as if it were}} the computer's keyboard. When not transferring text, the AlphaSmart could be used as a standard keyboard.|$|R
5000|$|Together with <b>the</b> {{register}} <b>machine,</b> <b>the</b> <b>RAM,</b> and <b>the</b> pointer <b>machine</b> <b>the</b> RASP {{makes up}} the four common sequential machine models, called this to distinguish them from the [...] "parallel" [...] models (e.g. parallel random access machine) van Emde Boas (1990).|$|R
50|$|<b>The</b> <b>machine</b> {{included}} IBM drivers bundled on {{a floppy}} disk, which enabled properly written software {{to operate in}} <b>the</b> <b>machine's</b> <b>RAM</b> and then run on the native Mega Drive hardware. A {{good example of this}} shown in the Puzzle Construction program, {{one of the very few}} software titles included with the TeraDrive, which included a PC-side editor suite for changing the features of a falling-block puzzle game, then playable on the Mega Drive side. The operating system shipped with the system was IBM's DOS J4.0/V, which was similar to PC DOS.|$|R
50|$|Weitek {{attempted}} to re-enter at the low-end market with their W464 (486) and W564 (P5) systems, which used <b>the</b> host <b>machine's</b> <b>RAM</b> as <b>the</b> frame buffer to lower costs. These {{were one of}} the reasons the company was purchased by Rockwell shortly after they shipped.|$|R
5000|$|In particular, the cache-oblivious {{model is}} an {{abstract}} machine (i.e. a theoretical model of computation). It {{is similar to}} <b>the</b> <b>RAM</b> <b>machine</b> model which replaces <b>the</b> Turing <b>machine's</b> infinite tape with an infinite array. Each location within the array can be accessed in [...] time, similar to the Random access memory on a real computer. Unlike <b>the</b> <b>RAM</b> <b>machine</b> model, it also introduces a cache: a second level of storage between the RAM and the CPU. The other {{differences between the two}} models are listed below. In the cache-oblivious model: ...|$|R
40|$|Abstract. Thermal {{error of}} <b>machine</b> tool is <b>the</b> main in total machine tool error, and {{obviously}} impairs {{the accuracy of}} <b>the</b> <b>machined</b> workpieces. <b>Ram</b> {{is a very important}} component of heavy-duty floor type boring-milling machine, and its thermal deformation is a significant source causing errors in machining process. Aiming at the thermal elongation of heavy type milling boring <b>machine</b> tool <b>ram,</b> <b>the</b> <b>machine</b> tool thermal errors are measured and compensated. Temperature compensation function in NC system is applied. Experiment results shows that 90 % ram positioning error can be compensated...|$|R
40|$|Modern {{computer}} systems {{usually have a}} complex memory system consisting of increasingly larger and slower memory. Traditional computer models like <b>the</b> Random Access <b>Machine</b> (<b>RAM)</b> have no concept of memory hierarchy, making it inappropriate for an accurate complexity analysis of algorithms on these types of architectures...|$|R
5000|$|... van Emde Boas {{comments}} {{on a similar}} problem with respect to <b>the</b> random access <b>machine</b> (<b>RAM)</b> abstract model of computation sometimes used in place of <b>the</b> Turing <b>machine</b> when doing [...] "analysis of algorithms":"The absence or presence of multiplicative and parallel bit manipulation operations is of relevance for the correct understanding of some results {{in the analysis of}} algorithms.|$|R
5000|$|<b>The</b> Atari <b>machines</b> {{consist of}} a 6502 as the main processor, a {{combination}} of ANTIC and GTIA chips to provide graphics, and the POKEY chip to handle sound and serial input/output. These [...] "support" [...] chips are controlled via a series of registers that can be user-controlled via memory load/store instructions running on the 6502. For example, the GTIA uses a series of registers to select colors for the screen; these colors can be changed by inserting the correct values into its registers, which are mapped into [...] "memory" [...] that is visible to the 6502. Some parts of the system also use some of <b>the</b> <b>machine's</b> <b>RAM</b> as a buffer, notably the ANTIC's display buffer and its Display List (essentially a small program written in <b>the</b> chip's simple <b>machine</b> language that tells ANTIC how to interpret that data {{and turn it into}} a display), as well as GTIA's Player/Missile (sprite) information.|$|R
50|$|For {{a machine}} not in {{constant}} use, energy can be conserved by putting <b>the</b> <b>machine</b> into low-power <b>RAM</b> standby {{after a short}} timeout period. If a connection delay of {{a minute or two}} is acceptable, <b>the</b> <b>machine</b> can timeout into hibernation, powered off with its state saved to disk.|$|R
40|$|We {{present a}} new finger search tree with O(log log d) {{expected}} search time in <b>the</b> Random Access <b>Machine</b> (<b>RAM)</b> model of computation {{for a large}} class of input distributions. The parameter d represents the number of elements (distance) between the search element and an element pointed to by a finger, in a finger search tree that stores n elements. Our data structure improves upon a previous result by Anders...|$|R
30|$|For {{the static}} bending test, a {{universal}} testing machine of 200 -kN capacity (made by Tokyokoki Seizosho Ltd.) {{was used for the}} 100 -kN range. Third-point loading was applied with a total span of 360  cm. The total span deflection of green round timber was measured using the CDP- 100 displacement gauge with 10 -cm capacity (made by Tokyo Sokki Kenkyujo Co., Ltd.). The displacement gauge was mounted on a yoke to measure the neutral axis deflection. The targeted duration of testing was 5  min. The apparent Young’s modulus was obtained based on the total span deflection, and calculated at the middle circumference of the round timber. The bending strength was calculated at the circumference of a failure part from the ratio of the mid-length circumference to the circumference at the loading point. However, 9 of the 40 green round timbers did not show failure, even at the extension limit of <b>the</b> testing <b>machine’s</b> <b>ram</b> cylinder. For these specimens, load at the extension limit of <b>the</b> test <b>machine’s</b> <b>ram</b> cylinder was considered the maximum load. For the air-dried round timber, the total span deflection was measured using the rolled-in type DP- 500 E displacement gauge with 50 -cm capacity (made by Tokyo Sokki Kenkyujo Co., Ltd.). The displacement gauge was mounted on a yoke to measure the neutral axis deflection of air-dried round timber. All air-dried round timbers failed within the extension limit of the ram cylinder.|$|R
50|$|The next {{member of}} the line was the Apple IIGS computer, {{released}} on September 15, 1986. A radical departure from the existing Apple II line, the IIGS featured a true 16-bit microprocessor, the 65C816, operating at 2.8 MHz with 24-bit addressing, allowing expansion up to 8 MB of RAM without the bank-switching hassles of <b>the</b> earlier <b>machines</b> (<b>RAM</b> cards with more than 4 MB were never directly supported by Apple). It introduced two completely new graphic modes sporting higher resolutions with a palette of 4,096 colors and up to 256 colors on screen; however, only 4 (at 640×200 resolution) or 16 (at 320×200 resolution) colors could be used on a single line at a time.|$|R
5000|$|<b>The</b> {{random access}} <b>machine</b> (<b>RAM)</b> is an {{abstract}} machine model used {{in computer science}} to study algorithms and complexity for standard serial computing. The PRAM computational model is an abstract parallel machine model that had been introduced to similarly study parallel algorithms and complexity for parallel computing, when they were yet to be built. Researchers have developed {{a large body of}} knowledge of parallel algorithms for the PRAM model. These parallel algorithms are also known for being simple, by standards of other approaches to parallel algorithms.|$|R
50|$|In {{computer}} science, {{a parallel}} random-access machine (PRAM) is a shared-memory abstract machine. As its name indicates, the PRAM {{was intended as}} the parallel-computing analogy to <b>the</b> random-access <b>machine</b> (<b>RAM).</b> In <b>the</b> {{same way that the}} RAM is used by sequential-algorithm designers to model algorithmic performance (such as time complexity), the PRAM is used by parallel-algorithm designers to model parallel algorithmic performance (such as time complexity, where the number of processors assumed is typically also stated). Similar {{to the way in which}} the RAM model neglects practical issues, such as access time to cache memory versus main memory, the PRAM model neglects such issues as synchronization and communication, but provides any (problem-size-dependent) number of processors. Algorithm cost, for instance, is estimated using two parameters O(time) and O(time × processor_number).|$|R
40|$|Abstract. Biochemical {{reactions}} {{taking place}} in living systems that map different inputs to specific outputs are intuitively recognized as performing information processing. Conventional wisdom distinguishes such proteins, whose primary func-tion is to transfer and process information, from proteins that perform {{the vast majority of}} the construction, maintenance, and actuation tasks of the cell (assem-bling and disassembling macromolecular structures, producing movement, and synthesizing and degrading molecules). In this paper, we examine the computing capabilities of biological processes in the context of the formal model of computing known as <b>the</b> random access <b>machine</b> (<b>RAM)</b> [Dewdney AK (1993) The Ne...|$|R
50|$|With hindsight, <b>the</b> <b>machine</b> lacked <b>the</b> <b>RAM</b> (a typical {{program would}} need to fit in only around 20 kB once display memory is subtracted) and {{processing}} power {{to take on the}} prevailing Spectrum and Commodore 64. Despite this, several features that would later be associated with BBC Master and Archimedes were first features of Electron expansion units, including ROM cartridge slots and the Advanced Disc Filing System, a hierarchical improvement to the BBC's original Disc Filing System.|$|R
40|$|A {{dictionary}} (or map) is a key-value {{store that}} requires all keys be unique, and a multimap is a key-value store {{that allows for}} multiple values {{to be associated with}} the same key. We design hashing-based indexing schemes for dictionaries and multimaps that achieve worst-case optimal performance for lookups and updates, with minimal space overhead and sub-polynomial probability that the data structure will require a rehash operation. Our dictionary structure is designed for <b>the</b> Random Access <b>Machine</b> (<b>RAM)</b> model, while our multimap implementation is designed for the cache-oblivious external memory (I/O) model. The failure probabilities for our structures are sub-polynomial, which can be useful in cryptographic or data-intensive applications...|$|R
40|$|We {{present a}} new finger search tree with O(1) {{worst-case}} update time and O(log log d) expected search time with high probability in <b>the</b> Random Access <b>Machine</b> (<b>RAM)</b> model of computation {{for a large}} class of input distributions. The parameter d represents the number of elements (distance) between the search element and an element pointed to by a finger, in a finger search tree that stores n elements. For the need of the analysis we model the updates by a "balls and bins" combinatorial game that is interesting {{in its own right}} as it involves insertions and deletions of balls according to an unknown distribution...|$|R
50|$|In {{an early}} {{proposal}} in August 1944, the Natter design had a concrete nose; {{it was suggested}} that <b>the</b> <b>machine</b> might <b>ram</b> a bomber, but this proposal was subsequently withdrawn in later Project Natter outlines. Bachem stated clearly in the initial proposal that the Natter was not a suicide weapon and much effort went into designing safety features for the pilot. However, owing to the potential dangers for the pilot inherent in the operation of this precarious aircraft, the Natter is sometimes listed as a suicide craft. The design had one decisive advantage over its competitors - it eliminated the necessity to land an unpowered gliding machine at an airbase, which, as the history of the Me 163 rocket aircraft had clearly demonstrated, made an aircraft extremely vulnerable to attack by Allied fighters.|$|R
50|$|At {{about the}} same time, another {{version of the same}} basic parts was built as the UV-1. In this case <b>the</b> <b>machine</b> was built as an {{all-in-one}} box, including the small amount of additional hardware needed to support the high-resolution mode of the Nutting chipset, which supplied 320 x 204 resolution with up to 8 colors per line. This mode required 16kB for the display buffer alone, so <b>the</b> <b>machine</b> included 32kB <b>RAM</b> and a larger 16kB ROM with additional Zgrass commands in it. To this basic system the Habitat added high quality video output circuitry and a floppy disk interface.|$|R
5|$|An {{offshoot}} of the work at MIT {{was the beginning of}} digital circuit design theory by one of Bush's graduate students, Claude Shannon. Working on the analytical engine, Shannon described the application of Boolean algebra to electronic circuits in his landmark master's thesis, A Symbolic Analysis of Relay and Switching Circuits. In 1935, Bush was approached by OP-20-G, which was searching for an electronic device to aid in codebreaking. Bush was paid a $10,000 fee to design <b>the</b> Rapid Analytical <b>Machine</b> (<b>RAM).</b> <b>The</b> project went over budget and was not delivered until 1938, when it was found to be unreliable in service. Nonetheless, it was an important step toward creating such a device.|$|R
40|$|An {{important}} area for forensic investigations is live memory analysis captured from a running <b>machine.</b> <b>The</b> <b>RAM</b> may provide an in depth {{picture of the}} system when it was seized which could reveal many vital pieces of evidence otherwise unobtainable on the computer hard disk. Research {{in this area is}} relatively low on all platforms, but especially for Mac OS X. The aim of this work was to investigate volatile memory analysis for a Mac and to develop a tool, called VolaGUI, to assist forensic examiners when analyzing volatile memory...|$|R
40|$|We {{present the}} first {{spatially}} adaptive data structure that answers approximate nearest neighbor (ANN) queries to points that reside in a geometric space of any constant dimension d. The Lt-norm approximation ratio is O(d 1 + 1 /t), and the running {{time for a}} query q is O(d 2 lg δ(p, q)), where p {{is the result of}} the preceding query and δ(p, q) is the number of input points in a suitably-sized box containing p and q. Our data structure has O(dn) size and requires O(d 2 n lg n) preprocessing time, where n is the number of points in the data structure. The size of the bounding box for δ depends on d, and our results rely on <b>the</b> Random Access <b>Machine</b> (<b>RAM)</b> model with word size Θ(lg n). ...|$|R
5000|$|Dubbed [...] "Wicked Fast" [...] by the Product Manager, Frank Casanova - {{who came}} to Apple from Apollo Computer in Boston, Massachusetts where the Boston term [...] "wicked" [...] was {{commonly}} used to define anything extreme - the system run at a clock rate of a then-impressive 40 megahertz, has 32 KB of Level 2 cache, six NuBus slots, and includes a number of proprietary ASICs and coprocessors. Designed to speed up <b>the</b> <b>machine</b> further, these chips require system-specific drivers. The 40 MHz speed referrs to the main logic board clock (the bus), the Motorola 68030 CPU, and the computer's Motorola 68882 FPU. <b>The</b> <b>machine</b> has eight <b>RAM</b> slots, for a maximum of 128 MB RAM, an enormous amount at the time.|$|R
40|$|Definitions of {{complexity}} are traditionally given {{relative to a}} relatively low-level, machineoriented model of computation. As programming languages become more complex, the relation between a program and its machine model time, space, etc., complexities becomes less clear. An alternative {{is to provide a}} language-oriented definition {{of complexity}} in terms of costs that make sense for that language and its semantics. The language-level complexity can then be related to the machine-level complexity. The programmer can use the more intuitive language-level definition and then use this relation, which is proved separately, to obtain machine-oriented complexities when needed. 1 Introduction Definitions of complexity must be given relative to a model of computation. Traditionally, these models have been machine models, such as <b>the</b> Random Access <b>Machine</b> (<b>RAM)</b> and Turing <b>Machine</b> for serial computation, and the Parallel RAM (PRAM), circuits, and models based on specific communication networks [...] ...|$|R
40|$|Abstract. We study cache {{effects in}} {{distribution}} sorting algorithms. We {{note that the}} performance of a recently-published distribution sorting algorithm, Flashsort 1 which sorts n uniformly-distributed floating-point values in O(n) expected time, does not scale well with the input size n due to poor cache utilisation. We present a two-pass variant of this algorithm which outperforms the one-pass variant and comparison-based algorithms for moderate to large values of n. We present a cache analysis of these algorithms which predicts the cache miss rate of these algorithms quite well. We have also shown that the integer sorting algorithm MSB radix sort can be used very effectively on floating point data. The algorithm is very fast due to fast integer operations and relatively good cache utilisation. 1 Introduction Most algorithms are analysed on <b>the</b> random-access <b>machine</b> (<b>RAM)</b> model of computation [1], using some variety of unit-cost criterion. In particular, the RAM model postulates that accessing a location in memory costs the same as a built-in arithmetic operation, such as adding two word-sized operands. However, over the last 20 years or so CPU clock rates have grown explosively, with an average annual rate of increase of 35 Γ 55...|$|R
50|$|InterWord was a {{menu-driven}} WYSIWYG wordprocessor {{which allowed}} 80-column editing (screen modes 0 or 3, {{with the latter}} taking less screen memory but displaying fewer lines on the screen), {{as well as a}} non-standard 106-column view using custom fonts. 40- and 53-column views were also available if a larger font was required or to reduce screen memory footprint, and the display would scroll horizontally when narrower than the printed page. InterWord could not use the extra-low-memory teletext mode except for its main menu, and recommended that <b>the</b> <b>machine</b> have Shadow <b>RAM</b> (like the BBC Master) so that screen memory would not be an issue.|$|R
