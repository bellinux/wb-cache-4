3|14|Public
5000|$|... #Caption: Casualty lifting {{using the}} <b>translation</b> <b>lift</b> with four first {{responders}} ...|$|E
5000|$|The <b>translation</b> <b>lift,</b> or [...] "Dutch" [...] lift, is {{used when}} it is not {{possible}} to push the stretcher: there no room for the stretcher at the feet or head of the casualty, or the stretcher cannot slide/roll on the ground, or there are not enough first responders available. In such a case, the stretcher is placed besides the casualty.|$|E
50|$|Conversion rules which {{describe}} <b>translation</b> without <b>lifting</b> {{are given}} in the Let expression article.|$|R
5000|$|... 'Thogail nam bo (<b>translation</b> from Gaelic: <b>Lifting</b> the cattle). or, Thogail nam Bo theid sinn (translation: To Lift the Cows We Shall Go).|$|R
40|$|AbstractA homeomorphism of Rn {{is called}} {{stationary}} {{if it is}} the uniform limit of volume preserving homeomorphisms which are spatially periodic and have mean translation zero. We prove that ergodic homeomorphisms form a uniform topology dense Gδ subset of the stationary homeomorphisms, thus establishing examples which are uniformly continuous with bounded and almost periodic displacements. In the two-dimensional orientation preserving case, ergodic homeomorphisms have fixed points (by Brouwer′s Plane Translation Theorem). Hence so do orientation-preserving area-preserving torus homeomorphisms with mean <b>translation</b> zero <b>lifts</b> (Conley-Zehnder-Frank Theorem) ...|$|R
40|$|This paper {{demonstrates}} a novel combination of program synthesis and verification to lift stencil computations from low-level Fortran code to a high-level summary expressed using a predicate language. The technique is sound and mostly automated, and leverages counter-example guided inductive synthesis (CEGIS) to find provably correct <b>translations.</b> <b>Lifting</b> existing code to a high-performance description language {{has a number}} of benefits, including maintainability and performance portability. For example, our experiments show that the lifted summaries can enable domain specific compilers {{to do a better job}} of parallelization as compared to an off-the-shelf compiler working on the original code, and can even support fully automatic migration to hardware accelerators such as GPUs. We have implemented verified lifting in a system called STNG and have evaluated it using microbenchmarks, mini-apps, and real-world applications. We demonstrate the benefits of verified lifting by first automatically summarizing Fortran source code into a high-level predicate language, and subsequently translating the lifted summaries into Halide, with the translated code achieving median performance speedups of 4. 1 X and up to 24 X for non-trivial stencils as compared to the original implementation. United States. Department of Energy. Office of Science (Award DE-SC 0008923) United States. Department of Energy. Office of Science (Award DE-SC 0005288...|$|R
40|$|Data from {{decoupled}} flight maneuvers {{have been}} collected and analyzed for four AFTI-F- 16 pilots operating this aircraft's highly augmented fly-by-wire control system, {{in order to obtain}} spectral density, cross spectra, and Bode amplitude data, as well as coherences and phase angles for the two longitudinal axis control functions of each of 50 20 -sec epochs. The analysis of each epoch yielded five distinct plotted parameters for the left hand twist grip and right hand sidestick controller output time series. These two control devices allow the left hand to generate vertical <b>translation,</b> direct <b>lift,</b> or pitch-pointing commands that are decoupled from those of the right hand. Attention is given to the control patterns obtained for decoupled normal flight, air-to-air gun engagement decoupled maneuvering, and decoupled air-to-surface bombing run maneuvering...|$|R
40|$|Abstract. In {{this paper}} two methods {{of how to}} make {{derivation}} in a Tree Adjoining Grammar a regular process without loss of expressive power are presented and compared. In a TAG, derivation {{is based upon the}} expansion of tree nodes into other trees. One regularization method is based on an algebraic operation called Lifting, while the other exploits an additional spatial dimension by transforming the components of a TAG into three-dimensional trees. The regularized grammars generate two kinds of “encoded ” trees, from which the intended ones can be reconstructed by a simple decoding function. We can show the equivalence of these methods by giving a <b>translation</b> between <b>lifted</b> and threedimensional trees and proving that via this translation it is possible to switch between the encodings without losing the information necessary for the reconstruction of the intended trees...|$|R
40|$|Adaptive Directional Lifting (ADL) {{has been}} {{successfully}} implemented in image compression and denoising due to the feature of simple structure and Àexible directional selectiv-ity. However, image denoising by means of ADL introduces many visual artifacts caused by Gibbs phenomena {{due to the lack}} of translation invariance. In this paper, we propose a <b>translation</b> invariant directional <b>lifting</b> (TI-DL) by employ-ing the cycle-spinning based technique to reduce artifacts in denoising results. Moreover, the inef¿ciency and high computational complexity of the orientation estimation tech-nique in ADL strongly inÀuences the performance. In order to achieve better denoising results, in this paper, 2 -D Gabor ¿lters are adopted for orientation estimation to achieve better orientation estimation results with lower complexity. Experi-mental results demonstrate that the proposed method achieves state-of-art denoising performance in terms of both objective (PSNR) and subjective (SSIM) evaluation. Index Terms — adaptive directional <b>lifting,</b> image denois-ing, <b>translation</b> invariance, 2 -D Gabor ¿lters 1...|$|R
40|$|Abstract. Sixteen {{years ago}} Wadler and Thiemann {{published}} “The marriage of effects and monads ” [35] where they united two previously distinct lines of research: the effect typing discipline (proposed by Gifford and others [9, 31]) andmonads (proposed by Moggi and others [23, 34]). In this paper, we marry effects and monads again {{but this time}} within a single programming paradigm: we use monads to define the semantics of effect types, but then use the effect types to program with those monads. In particular, we implemented an extension to the effect type system of Koka [18] with user defined effects. We use a type-directed <b>translation</b> to automatically <b>lift</b> such effectful programs into monadic programs, insert-ing bind- and unit operations where appropriate. As such, these effects are not just introducing a new effect type, but enable full monadic ab-straction and let us “take control of the semi-colon ” in a typed and structured manner. We give examples of various abstractions like am-biguous computations and parsers. All examples have been implemented in the Koka language and we describe various implementation issues and optimization mechanisms. 1...|$|R
40|$|January,. 19 5 o Summary. [...] An {{investigation}} {{has been made}} into the flutter characteristics of an idealised tab {{system in which the}} three degrees of freedom normal <b>translation</b> of the <b>lifting</b> surface, rotation of the control surface, and rotation of the tab are represented. Specific cases of this idealised system represent similar idealised forms of the standard trimming, spring, servo, and geared tab systems. From a consideration of tile relationships existing between the systems, criteria for flutter prevention have been developed from the criteria evolved earlier for trimming tabs 1. As initially derived, the criteria are applicable to the stick-fixed condition (in the case of spring and servo-tabs), to the case with no aerodynamic balance on either control surface or tab, and to tile case where the control surface is statically balanced about its hinge. Comparison is made between the criteria for spring-tabs and tile existing Collar-Sharpe criteria~, ~. Design implications are deduced from the criteria for spring-tabs, and the general application of the criteria to actual systems is considered in some detail. A comprehensive survey of the results is given in section 11. Points of major importance are as follows: [...] (a) The criteria are liberally provided with generalised constants whose values can if necessary be adjusted i...|$|R
50|$|More recently, in 1995, Professor Alfred P. Smyth {{argued that}} the Life is a forgery by Byrhtferth (who simply adopted {{the name of the}} obscure Asser from the {{references}} to him in other records), basing his case primarily on an analysis of Byrhtferths and Assers Latin vocabulary. Byrhtferths motive, according to Smyth, is to lend Alfreds prestige to the Benedictine monastic reform movement of the late 10th century. The strongest arguments for forgery are that a) there is actually no new information in Asser that cannot be found in the surviving Anglo Saxon Chronicles, so that it is not contemporary with Alfred as it claims; b) that the Latin <b>translation</b> is simply <b>lifted</b> from the Chronicles narrative and interspersed with padding of no importance; c) that writing in Latin a contemporary narrative was anachronistic; d) that much of the alleged illness of Alfred in Asser is lifted from standard hagiographic conventions and similarly so are Assers claims as to the educational development and attainments of Alfred; and e) that much of the dating in Asser uses the age of Alfred can be shown as incorrect and {{can be traced to the}} mis-datings in later recensions of the Chronicles, so that Asser cannot have been a contemporary of Alfred.|$|R
40|$|Nucleotide-binding {{oligomerization}} domain (NOD) protein 1 (NOD 1) and NOD 2 are pathogen recognition receptors {{that sense}} breakdown products of peptidoglycan (PGN) (muropeptides). It is {{shown that a}} number of these muropeptides can induce tumor necrosis factor alpha (TNF-α) gene expression without significant TNF-α translation. This <b>translation</b> block is <b>lifted</b> when the muropeptides are coincubated with lipopolysaccharide (LPS), thereby accounting for an apparently synergistic effect of the muropeptides with LPS on TNF-α protein production. The compounds that induced synergistic effects were also able to activate NF-κB in a NOD 1 - or NOD 2 -dependent manner, implicating these proteins in synergistic TNF-α secretion. It was found that a diaminopimelic acid (DAP) -containing muramyl tetrapeptide could activate NF-κB in a NOD 1 -dependent manner, demonstrating that an exposed DAP is not essential for NOD 1 sensing. The activity was lost when the α-carboxylic acid of iso-glutamic acid was modified as an amide. However, agonists of NOD 2, such as muramyl dipeptide and lysine-containing muramyl tripeptides, were not affected by amidation of the α-carboxylic acid of iso-glutamic acid. Many pathogens modify the α-carboxylic acid of iso-glutamic acid of PGN, and thus it appears this is a strategy to avoid recognition by the host innate immune system. This type of immune evasion is in particular relevant for NOD 1...|$|R
40|$|For {{a moving}} animal, optic flow is an {{important}} source of information about its ego-motion. In flies, the processing of optic flow is performed by motion sensitive tangential cells in the lobula plate. Amongst them, cells of the vertical system (VS cells) have receptive fields with similarities to optic flows generated during rotations around different body axes. Their output signals are further processed by pre-motor descending neurons. Here, we investigate the local motion preferences of two descending neurons called descending neurons of the ocellar and vertical system (DNOVS 1 and DNOVS 2). Using an LED arena subtending 240 ° ×  95 ° of visual space, we mapped the receptive fields of DNOVS 1 and DNOVS 2 {{as well as those of}} their presynaptic elements, i. e. VS cells 1 – 10 and V 2. The receptive field of DNOVS 1 can be predicted in detail from the receptive fields of those VS cells that are most strongly coupled to the cell. The receptive field of DNOVS 2 is a combination of V 2 and VS cells receptive fields. Predicting the global motion preferences from the receptive field revealed a linear spatial integration in DNOVS 1 and a superlinear spatial integration in DNOVS 2. In addition, the superlinear integration of V 2 output is necessary for DNOVS 2 to differentiate between a roll rotation and a <b>lift</b> <b>translation</b> of the fly...|$|R
40|$|Reduplication {{is one of}} the {{productive}} morphological processes which have been studied inclusively in different languages and in the frame of different linguistic theories (Generative Grammar, Optimality Theory and Minimalist Program). Now with the emergence and growth of corpus linguistics and corpus based studies, morphological processes of this kind could be studied and conducted more accurately. Most of the morphological studies and morphologists have referred to reduplication process in their studies and it’s considered as one of the universals of world’s languages which represent different semantic or syntactic properties in most of the languages (Stolz 2008). Reduplication has been studied in two kinds: Full and partial reduplication (Shaghaghi 1389, Haspelmath 2002, Bauer 2003). Full reduplication is to repeat a base known as reduplicated element fully and partial reduplication is to add an element to the beginning or end of the one of the bases. In this paper we have studied the full reduplication in Persian {{so that we can get}} the dominant forms, meanings and the semantic properties of the reduplicated base. In order to achieve such results we needed to choose a perfect and acceptable corpus in the Persian language, so the authors chose Dehkhoda Medium Persian Dictionary. First of all the entire corpus was searched for the full reduplicated forms and then all of these forms were recorded along with their meanings and parts of speech. On the whole 299 reduplicated forms were extracted and categorized according to their meaning, form and the semantic properties of the reduplicated element. After investigating the extracted words, interesting results were seen. The results show that except the sounds which are among the common forms of the reduplicated structures, the dominant form in these structures are adverbs and in terms of the meaning, the dominant meaning is paucity and most of the structures are formed out of meaningful elements. Another point is that even the meaningless elements have been used in forming full reduplications and in some cases the produced meaning is irrelevant and new. The number of sounds is one third of the whole extracted forms, sounds which some of them are also meaningful. The results of this study could be helpful in teaching Persian language, building bilingual corpuses as well as facilitating Machine <b>translation</b> and <b>lifting</b> the problems on its way. A major use of the built corpus in this study, the corpus of full reduplications in Persian would be very useful in enhancing the current Persian net words...|$|R
40|$|This {{dissertation}} {{is presented}} for {{the degree of}} Doctor of Philosophy". "March 2011 "Bibliography: pages 183 - 190. 1. Introduction [...] 2. Generic functions [...] 3. Encoding generic functions [...] 4. A baseline functional language compiler [...] 5. Compiling and typing polymorphic functions with specific behaviour [...] 6. Compiling and typing structure agnosticism [...] 7. Evaluating expressiveness [...] 8. Evaluating compilation [...] 9. Evaluating the type system [...] 10. Conclusion. "We {{address the problem of}} extending existing functional language compilers to support generic programming constructs, such as those that arise in term rewriting and datatype generic programs. In particular, we present a compiler capable of compiling a wide range of generic programs in a way which substantially reduces the execution overhead traditionally associated with such programs, without requiring type classes. We explicitly build upon a baseline functional compiler by extending it to support a universal spine view of data and by adding a mechanism for building polymorphic functions from monomorphic ones. This work employs variants of standard pattern compilation and lambda <b>lifting</b> <b>translations</b> that render these generic extensions into efficient code while making only modest modifications to our baseline compiler and its run-time. We show that type inference (with annotations for higher-ranked types and polymorphic recursion) can be maintained, by building all the mechanisms needed for type inference of generic programs on top of an existing variant of Damas and Milner's algorithm W. We demonstrate that this compiler achieves type safe and efficient compiled generic programs by showing the breadth of generic programs that we can encode with it and by benchmarking the execution speed and memory use of the programs output by the compiler. The generic programs we demonstrate are generic transformations, generic queries, generic traversals, generic equality, generic show plus a large number of variants of these. We also provide a proof of the soundness of the type system which underpins the compiler. In summary, the primary outcome of this research is a new compiler for generic programs which uses a unique combination of encoding techniques and which generates efficient generic code. For each of our extensions (polymorphic functions with specific behaviour and the explicit spine view) we provide new algorithms for pattern compilation, type inference and conversion to primitive operations. These can be easily incorporated into existing functional language compilers. Mode of access: World Wide Web. 1 online resource (190 pages) illustration...|$|R

