3|100|Public
40|$|This paper {{investigates the}} <b>turning</b> <b>restriction</b> design problem that optimizes the <b>turning</b> <b>restriction</b> {{locations}} {{so as to}} minimize the total system travel time under the assumption of asymmetric user equilibrium. We first transform a transportation network into a dual graph, where traffic turning movements are explicitly modeled as dual links. The dual transformation allows us to derive a link-based formulation for the <b>turning</b> <b>restriction</b> design problem. Asymmetric user equilibrium is incorporated in the model {{as a set of}} nonlinear constraints. A dual-based heuristic algorithm is employed to solve the problem, by sequentially solving a relaxed <b>turning</b> <b>restriction</b> design problem and a design updating problem...|$|E
40|$|<b>Turning</b> <b>restriction</b> {{is one of}} the commonest traffic {{management}} techniques and an effective low cost traffic improvement strategy in urban road networks. However, the literature has not paid much attention to the <b>turning</b> <b>restriction</b> design problem (TRDP), which aims to determine a set of intersections where turning restrictions should be implemented. In this paper, a bi-level programming model is proposed to formulate the TRDP. The upper level problem is to minimize the total travel cost from the viewpoint of traffic managers, and the lower level problem is to depict travelers ’ route choice behavior based on stochastic user equilibrium (SUE) theory. We propose a branch and bound method (BBM), based on the sensitivity analysis algorithm (SAA), to find the optimal <b>turning</b> <b>restriction</b> strategy. A branch strategy and a bound strategy are applied to accelerate the solution process of the TRDP. The computational experiments give promising results, showing that the optimal <b>turning</b> <b>restriction</b> strategy can obviously reduce system congestion and are robust to the variations o...|$|E
40|$|It {{is widely}} {{accepted}} that digital map becomes an indispensable guide for human daily traveling. Traditional road network maps are {{produced in the}} time-consuming and labour-intensive ways, such as digitizing printed maps and extraction from remote sensing images. At present, {{a large number of}} GPS trajectory data collected by floating vehicles makes it a reality to extract high-detailed and up-to-date road network information. Road intersections are often accident-prone areas and very critical to route planning and the connectivity of road networks is mainly determined by the topological geometry of road intersections. A few studies paid attention on detecting complex road intersections and mining the attached traffic information (e. g., connectivity, topology and <b>turning</b> <b>restriction)</b> from massive GPS traces. To the authors’ knowledge, recent studies mainly used high frequency (1  s sampling rate) trajectory data to detect the crossroads regions or extract rough intersection models. It is still difficult to make use of low frequency (20 – 100  s) and easily available trajectory data to modelling complex road intersections geometrically and semantically. The paper thus attempts to construct precise models for complex road intersection by using low frequency GPS traces. We propose to firstly extract the complex road intersections by a LCSS-based (Longest Common Subsequence) trajectory clustering method, then delineate the geometry shapes of complex road intersections by a K-segment principle curve algorithm, and finally infer the traffic constraint rules inside the complex intersections...|$|E
40|$|<b>Turn</b> <b>restrictions,</b> such as 'no left turn' or 'no U-turn', are {{commonly}} encountered in real road networks. These <b>turn</b> <b>restrictions</b> must be explicitly {{considered in the}} shortest path problem and ignoring them may lead to infeasible paths. In the present study, a hybrid link-node Dijkstra's (HLND) algorithm is proposed to exactly solve the shortest path problem in road networks with <b>turn</b> <b>restrictions.</b> A new hybrid link-node labelling approach is devised by using a link-based labelling strategy at restricted nodes with <b>turn</b> <b>restrictions,</b> and a node-based labelling strategy at unrestricted nodes without <b>turn</b> <b>restrictions.</b> Computational results for several real road networks show that the proposed HLND algorithm obtains the same optimal results as the link-based Dijkstra's algorithm, while having a similar computational performance to the classical node-based Dijkstra's algorithm. Department of Civil and Environmental Engineerin...|$|R
5000|$|... {{automatically}} infer <b>turn</b> <b>restrictions</b> {{based on}} an analysis of multiple GPS tracks ...|$|R
50|$|A <b>turn</b> <b>restriction</b> routing can be {{obtained}} by prohibiting {{at least one of the}} four possible clockwise turns and at least one of the four possible anti-clockwise turns in the routing algorithm. This means there are at least 16 (4x4) possible <b>turn</b> <b>restriction</b> routing techniques as you have 4 clockwise turns and 4 anti-clockwise turns to choose from. Some of these techniques have been listed below.|$|R
30|$|Non-spatial {{features}} like width, length, speed, name and <b>turn</b> <b>restriction</b> {{of the road}} represented by an edge in the graph.|$|R
5000|$|<b>Turn</b> <b>restrictions</b> provide {{alternate}} {{minimum length}} paths {{as well as}} non minimum length paths from one node to another, which allows routing around congested or failed links.|$|R
40|$|The {{abundance}} of GPS tracking data {{due to the}} emergence and popularity of smartphones has fuelled significant research around GPS trajectories and map-matching algorithms. Unfortunately, none of this previous research addresses the issue of identifying <b>turning</b> <b>restrictions</b> in the underlying road network graph. Our latest research endeavour remedies this, by proposing a novel, straightforward and effective way to infer <b>turning</b> <b>restrictions</b> for OpenStreetMap data, by utilizing historic map-matching results from an existing fleet management service. Our experimental evaluation {{based on the results}} acquired for three European cities within an one-year period, proves the robustness and credibility of our method...|$|R
40|$|Vehicle {{navigation}} {{is currently}} the most widespread and successful consumer application of GIS-T. It is based on positional accurate data and comprehensive transportation-related content. A specially-made navigable database {{is essential for the}} key functions of the vehicle navigation systems, for example, route finding and driver guiding. There are lots of research challenges in generating a satisfied navigable database. Among them the data modelling is the most important comparing with representation, data processing, etc., especially the modelling of the <b>turn</b> <b>restrictions</b> of the traffic network. There are three levels of data modelling for the vehicle navigation systems, i. e., conceptual modeling, logical modeling, and algorithmic modeling. The authors of this paper think that special consideration should be put onto the algorithmic model, because it represents not only the relationships between the transportation elements but also the real-time and dynamic traffic restrictions in the traffic network. This paper discussed firstly the properties of the <b>turning</b> <b>restrictions</b> in road networks. The model in conceptual model (GDF 4. 0) and logical model (UNETRANS) are introduced. Concerning the algorithmic model, the authors analyzed the disadvantages of the commonly used data structure for representing the <b>turning</b> <b>restrictions.</b> And proposed a new link-based data structure, where a node-link table is used to represent the connectivity of the road network, and a link-link table is used to represent the <b>turning</b> <b>restrictions.</b> The algorithm for route finding was also modified accordingly. The results of the experiment show that the efficiency of route finding is obviously improved with the new method. * Corresponding author. CIG ACS...|$|R
50|$|Dimension ordered (X-Y) routing (shown in fig 3) restricts all {{turns from}} y-dimension to x-dimension. This prohibits two {{anti-clockwise}} and two clockwise turns {{which is more}} than what is actually required. Even then since it restricts the number of turns that are allowed we can tell that this is an example for <b>turn</b> <b>restriction</b> routing.|$|R
5000|$|Relations {{are ordered}} lists of nodes, ways and {{relations}} (together called [...] "members"), where each member can optionally have a [...] "role" [...] (a string). Relations {{are used for}} representing the relationship of existing nodes and ways. Examples include <b>turn</b> <b>restrictions</b> on roads, routes that span several existing ways (for instance, a long-distance motorway), and areas with holes.|$|R
50|$|Logic behind <b>turn</b> <b>restriction</b> routing {{derives from}} a key observation. A cyclic {{acquisition}} of channels {{can take place}} only if all the four possible clockwise (or anti-clockwise) turns have occurred. This means deadlocks can be avoided by prohibiting {{at least one of}} the clockwise turns and one of the anti-clockwise turns. All the clockwise and anti-clockwise turns that are possible in a non restricted routing algorithm are shown in fig 2.|$|R
50|$|SBS routes use vehicle-segregated, camera-enforced bus lanes; {{sidewalk}} extensions for bus stops; {{relatively large}} distances between stops; vehicular <b>turn</b> <b>restrictions</b> along corridors; and next-bus travel information screens. The first route was the Bx12 along Fordham Road and the Pelham Parkway; , fifteen SBS routes run along fourteen corridors. Several more corridors are proposed for Select Bus Service, with two routes planned for implementation in 2017, {{and one in}} 2018.|$|R
25|$|SBS routes use vehicle-segregated, camera-enforced bus lanes; {{sidewalk}} extensions for bus stops; {{relatively large}} distances between stops; vehicular <b>turn</b> <b>restrictions</b> along corridors; and next-bus travel information screens. The first route was the Bx12 along Fordham Road and the Pelham Parkway; , fifteen SBS routes run along fourteen corridors. Several more corridors are proposed for Select Bus Service, with two routes planned for implementation in 2017, {{and one in}} 2018. Twenty-one more routes are proposed through 2027.|$|R
50|$|A routing {{algorithm}} decides {{the path}} {{followed by a}} packet from the source to destination routers in a network. An important aspect to be considered while designing a routing algorithm is avoiding a deadlock. <b>Turn</b> <b>restriction</b> routing is a routing algorithm for mesh-family of topologies which avoids deadlocks by restricting the types of turns that are allowed in the algorithm while determining the route from source node to destination node in a network.|$|R
40|$|Computers get faster every year, but {{the demand}} for {{computing}} resources seems to grow at an even faster rate. Depending on the problem domain, this demand for more power can be satisfied by either, massively parallel com-puters, or clusters of computers. Common for both ap-proaches is the dependence on high performance intercon-nect networks such as Myrinet, Infiniband, or 10 Giga-bit Ethernet. While high throughput and low latency are key features of interconnection networks, the issue of fault-tolerance is now becoming increasingly important. As the number of network components grows so does the probabil-ity for failure, thus it becomes important to also consider the fault-tolerance mechanism of interconnection networks. The main challenge then lies in combining performance and fault-tolerance, while still keeping cost and complexity low. This paper proposes a new deterministic routing method-ology for tori and meshes, which achieves high performance {{without the use of}} virtual channels. Furthermore, it is topol-ogy agnostic in nature, meaning it can handle any topol-ogy derived from any combination of faults when combined with static reconfiguration. The algorithm, referred to as Segment-based Routing (SR), works by partitioning a topol-ogy into subnets, and subnets into segments. This allows us to place bidirectional <b>turn</b> <b>restrictions</b> locally within a seg-ment. As segments are independent, we gain the freedom to place <b>turn</b> <b>restrictions</b> within a segment independently from other segments. This results in a larger degree of freedom when placing <b>turn</b> <b>restrictions</b> compared to other routing strategies. In this paper a way to compute segment-based routing tables is presented and applied to meshes and tori. Evalua-tion results show that SR increases performance by a factor of 1. 8 over FX and up*/down * routing. ∗This work was supported by the Spanish CICYT under Gran...|$|R
50|$|For example, {{consider}} {{figure 7}} below. Say {{there are multiple}} routers, F1, F2 etc., that feed packets to a congested, but low-cost link from source router S to destination router D. Implementing <b>Turn</b> <b>restriction</b> routing means {{that some of the}} turns from any of the feeder routers to the congested router S may now be restricted. Those feeder routers may have to use a longer path to get to destination D, thereby decongesting the link from S to D to an extend.|$|R
40|$|The Asymmetric Traveling Salesman Problem ATSP {{as well as}} a the Asymmetric Multi-Stopover Problem AMSP (also Multi-Destination Problem), is {{intractable}} (NP-hard). However, {{using the}} fastest optimal path algorithms combined with the fastest permutation method enables the real-time solution for problem sizes |S | ≤ 10 (12 including start and target, AMSP) subject to the set S of stopovers that are to meet via an optimal cost cycle (ATSP) or an optimal cost path (AMSP). We give an algorithm directly working on directed graphs observing <b>turn</b> <b>restrictions</b> indispensabl...|$|R
40|$|We {{consider}} two apparently unrelated {{classes of}} combinatorial and geometric optimization problems. First, we give compact extended formulations, i. e., polynomial-size linear programming formulations with integer optima, for optimum path problems with <b>turn</b> <b>restrictions</b> satisfying a nested compatibility condition in acyclic digraphs. We then apply these results to optimum convex polygon {{problems in the}} plane, by interpreting certain Dynamic Programming algorithms as sequences of optimum turn-restricted path problems with nested compatibility in acyclic digraphs. As a result, we derive compact extended formulations for these geometric problems as well...|$|R
50|$|Here Drive {{provides}} navigation {{designed for}} in car driving in 94 countries. Its features include visual and audio speed limit warnings, voice guided turn-by-turn navigation with spoken street names (optional) {{in more than}} 60 countries in 50 different languages and offline availability. The user interface is designed for drivers and map data includes 260 attributes such as <b>turn</b> <b>restrictions,</b> physical barriers and one-way streets. Here Drive and Here Drive+ have optional live traffic information where available, but both lack dynamic rerouting, which is restricted to everyday commuting in a few countries only and then does not come with voice guidance.|$|R
40|$|According to the {{existing}} problems in the applications of embedded navigation, this paper designs the hierarchical search A*algorithm, based on the transferring road network, to meet the need of real-time navigation. In the algorithm, a hierarchical search strategy is applied to route programming of large area, yet the duplicate searching A* algorithm, based on the transferring road network, {{is applied to the}} path computation, which is able to handle intersection <b>turn</b> <b>restrictions</b> and node weight, with little storage space but fast searching speed. Practically, the algorithm is proved to meet the technological need of real-time navigation both in computing speed and route rationality...|$|R
40|$|In this paper, we {{show the}} {{development}} process of a new proposed feature for OpenStreetMap (OSM) traffic light tags. We introduce the needs for such kind of information in OSM and define requirements for our simulation needs. After comparing different traffic light tagging ideas and matching them to our requirements {{we come to the}} conclusion to extend the current classic way of tagging with OSM relations, which define <b>turn</b> <b>restrictions</b> and traffic light information. As a proof of concept a plugin for the popular OSM editor JOSM is shown as well as a conversion implementation of a complex intersection from OSM to SUMO is presented...|$|R
50|$|The {{company was}} founded in 1985 by Barry Karlin and Galen Collins. Karlin, {{originally}} from South Africa, told interviewers that he started the company after being frustrated with a paper map of the San Francisco, California area. He thought 'Wouldn't it be nice if I had someone {{sitting next to me}} in the car who knew the way?' Collins created a pilot navigation system in the San Francisco area. However, basic testing showed the system could generate impossible directions. They realized that the system not only had to have accurate maps, but also detailed data on <b>turn</b> <b>restrictions,</b> one-way streets and other local issues.|$|R
40|$|First part of {{the work}} is devoted to {{preparation}} of environment for building a navigation software. For map rendering and other geospatial data manipulation we use libraries of Quantum GIS. The work comprised also library refactoring and creation of bindings for Python language, that's also the language used for development of the navigation system. Second part presents principles and implementation of navigation in a roadmap. Software searches for an optimal route based on given start and destination. It takes in account different road types, one-way streets, <b>turn</b> <b>restrictions</b> and/or other restrictions. In case a GPS receiver is connected to the computer, it displays navigation hints based on current position of the vehicle...|$|R
40|$|This {{presentation}} {{presents a}} novel open source toolbox for street network comparison {{based on the}} Sextante geoprocessing framework for the open source Geographic Information System Quantum GIS (QGIS). In the spirit of open science, the toolbox enables researchers worldwide to assess the quality of street networks such as OpenStreetMap (OSM) by calculating key performance indicators commonly used in street network comparison studies. Additionally, we suggest two new performance indicators for <b>turn</b> <b>restriction</b> and one-way street comparisons specifically aimed at testing street network quality for routing. We demonstrate {{the use of this}} toolbox by comparing OSM and the official Austrian reference graph “Graph Integration Platform” (GIP) in the greater Vienna region. Advanced 2...|$|R
40|$|The {{purpose of}} this paper is to {{describe}} the dual graph technique developed by the authors to represent transport networks. The method is intended to simplify the coding of complex transport networks to a considerable degree, particularly when there are <b>turning</b> <b>restrictions,</b> or when multiple transfers between modes or transit lines must be taken into account. A first section presents the traditional form in which transport networks are analytically represented, and describes the main problems that are confronted. In particular, the difficulty to represent prohibited turns is shown to be a major problem; when such a restriction is introduced, the representation of the network becomes increasingly complex and intractable, requiring a large number of fictitious links and nodes. A second section describes the dual graph technique in general terms, and shows how the network code remains simple, even if prohibited turns are introduced, completely avoiding fictitious links and the possibility of errors. A third section describes the way in which dual networks are constructed in formal terms. It is shown that the process of constructing the dual graph can be automated easily, becoming completely transparent to the model user. In a fourth section the method is extended to represent transit routes or, in general, multiple operators and modes. This is achieved by introducing further dimension to the dual network (multidimensional networks); the dual of very complex transit networks can also be automated, avoiding the need for fictitious nodes and links to represent transfer points. A final section draws the main conclusions and points out that dual graphs can be very useful for detailed traffic models. Brief references are made to other known methods to represent <b>turn</b> <b>restrictions.</b> ...|$|R
40|$|Shortest path {{algorithms}} {{optimize the}} costs of a journey in a network. For route planning algorithms, networks are usually modeled as graphs. Different cost functions are used, like {{the length of a}} path, or the travel time. Costs are traditionally attached to edges in the graph. For some important route planning problems costs that are associated with pairs of edges can be identified. For example, a <b>turn</b> <b>restriction</b> in a traffic network can be represented as a restriction to travel from one edge to another in the graph. A route with minimal turning angles is another example: Costs proportional to the enclosed angles are attached to pairs of adjacent edges. These weights cannot be stored as attributes of nodes or edges in the original graph...|$|R
3000|$|Restriction ii permits {{deleting}} the underlined part of (25), hence excluding {{from the}} set of candidates q(θ) those functions not having a stair-case shape on intervals of singularity. In <b>turn,</b> <b>Restriction</b> i enables through Lemma  3 below the equivalence between (25), once deleted its underlined part, and condition (11). Therefore, Restriction i guarantees that the equality MC([...] θ) = MC^*([...] θ) [...] can apply at any point of increase of q*(θ), even when this point {{does not belong to}} an interval of strict increase. Together, Restrictions i–ii also entail the continuity of q*(θ) at every end-point of any maximal interval of constancy. This involves that all intervals where q*(θ) presents a staircase shape are intervals of constancy, thus allowing to derive conditions (12)–(13) from (25), by basing the argument upon continuity reasons.|$|R
50|$|North of Frederick Street, {{the highway}} becomes limited-access {{once more and}} connects to the {{conjoined}} routes of I-81 and NY 17 {{by way of a}} cloverleaf interchange. Just north of the cloverleaf's northern tip is a simpler diamond interchange between NY 7 and Bevier Street. The highway continues on, paralleling a branch line off the Southern Tier Line northward through the city and into the village of Port Dickinson. A second at-grade intersection exists with Old State Road; however, unlike the first with Frederick Street, there are no <b>turn</b> <b>restrictions</b> at this intersection. NY 7 becomes limited-access once more, meeting a pair of service roads that serve Hillcrest before merging with I-88 just north of the Port Dickinson village limits in the town of Fenton. The Brandywine Highway ends here; however, NY 7 continues onto I-88.|$|R
500|$|Alberta Transportation and {{the city}} of Calgary began a study in 2016 to develop {{short-term}} and long-term plans for Deerfoot Trail. [...] Almost {{the entire length of the}} freeway is being assessed, though changes are not anticipated for the two major interchanges at Stoney Trail, completed in 2009 and 2013. The study hopes to address Deerfoot Trail problems overall, as opposed to localized solutions that could simply shift traffic bottlenecks to another section of the freeway. [...] Due to the complexity of the freeway, long-term recommendations will not be available until the end of 2018, but five short-term options were presented in May2017. [...] They include a braided ramp in south Calgary between Southland Drive and Anderson Road, a jughandle intersection at 32AvenueNE and 12StreetNE, left <b>turn</b> <b>restrictions</b> on McKnight Boulveard east of Deerfoot, and a pair of new northbound on-ramps between McKnight Boulevard and Airport Trail. [...] All possibilities for improvement are being considered, including high-occupancy vehicle lanes.|$|R
40|$|We propose an {{algorithm}} {{that can}} be used to identify automatically the subset of street segments of a road network map that corresponds to a junction. The main idea is to use turn-compliant locomotion affordances, i. e., restricted patterns of supported movement, in order to specify junctions independently of their data representation, and in order to motivate tractable individuation and classification strategies. We argue that common approaches based solely on geometry or topology of the street segment graph are useful but insufficient proxies. They miss certain <b>turn</b> <b>restrictions</b> essential to junctions. From a computational viewpoint, the main challenge of affordance-based individuation of junctions lies in its complex recursive definition. In this paper, we show how Open Street Map data can be interpreted into locomotion affordances, and how the recursive junction definition can be translated into a deterministic algorithm. We evaluate this algorithm by applying it to small map excerpts in order to delineate the contained junctions...|$|R
40|$|Road-map {{databases}} {{contain a}} large amount of complex information, including street names, street address ranges, <b>turn</b> <b>restrictions,</b> one-way street information, etc. In addition, these databases are likely to contain {{a large amount}} of time-varying data, which need to be checked for accuracy on a periodic basis. More and more applications are based on map databases, so establishing quality evaluation procedures and assurance programs for these databases is of great importance. In this project, the research designed a prototype user interface for displaying the shortest paths from source to destination. They used the JAVA language, which is platform-independent and allows the execution of interactive software across computer networks. They also evaluated other user interfaces available on the web sites to identify desirable functionalities. Compared with the existing systems (e. g., Maponus), their system goes a step forward in interactivity by providing an interactive map, on which users can click and choose their sources and destinations. ITS Institute, Center for Transportation Studies, University of Minnesot...|$|R
5000|$|Alberta Transportation and {{the city}} of Calgary began a study in 2016 to develop {{short-term}} and long-term plans for Deerfoot Trail. [...] Almost {{the entire length of the}} freeway is being assessed, though changes are not anticipated for the two major interchanges at Stoney Trail, completed in 2009 and 2013. The study hopes to address Deerfoot Trail problems overall, as opposed to localized solutions that could simply shift traffic bottlenecks to another section of the freeway. [...] Due to the complexity of the freeway, long-term recommendations will not be available until the end of 2018, but five short-term options were presented in May 2017. [...] They include a braided ramp in south Calgary between Southland Drive and Anderson Road, a jughandle intersection at 32 Avenue NE and 12 Street NE, left <b>turn</b> <b>restrictions</b> on McKnight Boulveard east of Deerfoot, and a pair of new northbound on-ramps between McKnight Boulevard and Airport Trail. [...] All possibilities for improvement are being considered, including high-occupancy vehicle lanes.|$|R
40|$|Abstract: Existing k-shortest path {{algorithms}} {{has some}} weaknesses such as path similarity among determined paths and network expansion for describing turn prohibitions. Path similarity represents {{that many of}} the alternative paths derived from the k-shortest path algorithm are likely to share a lots of links, so they could not represent heterogeneity. The <b>turning</b> <b>restrictions</b> popularly adopted in real road may violate Bellman’s principle of optimality in searching shortest path, so network expansion technique is widely used to avoid such difficulty. But, this method needs additional works to expand the network. This paper proposes a link-based shortest path algorithm to generate dissimilar paths for the travel information in real road network where exists turn prohibitions. The main merit of proposed model is to provide efficient alternative paths under consideration of overlaps among paths to alleviate the path similarity. Another merit {{is that it does not}} require extra nodes and links for expanding the network. Thus it is possible to save the time of network modification and of computer running. The algorithm is tested with some example networks and then will be expanded to a dynamic case...|$|R
5000|$|Ideal for route {{planning}} or {{to manage your}} resources, it consists of three elements: Road Network (road geometry), Road Routing Information (routing information for drivers on mandatory and banned <b>turns</b> and other <b>restrictions)</b> and Urban Paths (man-made path geometry in urban areas).|$|R
