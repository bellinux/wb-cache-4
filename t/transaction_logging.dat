27|489|Public
25|$|<b>Transaction</b> <b>Logging</b> {{provides}} a slightly less failure protection than transaction durability, but improves overall performance.|$|E
5000|$|Enable <b>transaction</b> <b>logging</b> {{and time}} {{stamping}} for tracking of transactions and centralized control ...|$|E
50|$|<b>Transaction</b> <b>Logging</b> {{provides}} a slightly less failure protection than transaction durability, but improves overall performance.|$|E
50|$|Using <b>transaction</b> <b>logs</b> {{for change}} data capture offers a {{challenge}} in that the structure, contents and use of a <b>transaction</b> <b>log</b> is specific to a database management system. Unlike data access, no standard exists for <b>transaction</b> <b>logs.</b> Most database management systems do not document the internal format of their <b>transaction</b> <b>logs,</b> although some provide programmatic interfaces to their <b>transaction</b> <b>logs</b> (for example: Oracle, DB2, SQL/MP, SQL/MX and SQL Server 2008).|$|R
5000|$|... writing <b>transaction</b> <b>log</b> {{records from}} the in-memory log buffer to the <b>transaction</b> <b>log</b> files on disk ...|$|R
5000|$|On {{a heavily}} used database, the <b>transaction</b> <b>log</b> grows rapidly. <b>Transaction</b> <b>log</b> entries {{must be removed}} from the log to make room for future entries. Frequent <b>transaction</b> <b>log</b> backups are smaller, so they {{interrupt}} database activity for shorter periods of time.|$|R
5000|$|<b>Transaction</b> <b>logging,</b> which records {{changes to}} the {{database}} in a journal file and facilitates automatic recovery of an in-memory database.|$|E
50|$|The product {{implements}} a fully ACID-compliant <b>transaction</b> <b>logging</b> {{system with}} automatic recovery capability. This facility {{is also used}} for asynchronous replication.|$|E
50|$|To scale Access {{applications}} to enterprise or web solutions, one possible technique involves migrating to Microsoft SQL Server or equivalent server database. A client-server design significantly reduces maintenance and increases security, availability, stability, and <b>transaction</b> <b>logging.</b>|$|E
50|$|All {{national}} registries {{are connected}} {{directly to the}} UNFCCC’s International <b>Transaction</b> <b>Log</b> (ITL). This <b>transaction</b> <b>log</b> is responsible for checking all transactions to ensure they adhere {{to the rules of}} international emissions trading under the Kyoto Protocol. The ITL also has a link to the EC’s Community Independent <b>Transaction</b> <b>Log</b> (CITL). This <b>transaction</b> <b>log</b> is responsible for checking all transactions to ensure that they adhere to the rules of the EU ETS.|$|R
5000|$|<b>Transaction</b> <b>logs</b> {{are based}} on what how {{transducers}} convert phenomena into measurable signals. The basic model requires transducers to convert current or voltage into a signal. Additional systems may require resistive networks to produce a signal. When analyzing the function of <b>transaction</b> <b>logs</b> it's {{important to understand that}} signals can be measured in different methods. A complex understanding of <b>transaction</b> <b>logs</b> requires considering the given signal and its attributes. <b>Transaction</b> <b>logs</b> {{are based on}} two types of signals: digital and analog.|$|R
40|$|The use of {{data stored}} in <b>transaction</b> <b>logs</b> of Web search engines, Intranets, and Web sites can provide {{valuable}} insight into understanding the information-searching process of online searchers. This understanding can enlighten information system design, interface development, and devising the information architecture for content collections. This article presents a review and foundation for conducting Web search <b>transaction</b> <b>log</b> analysis. A methodology is outlined consisting of three stages, which are collection, preparation, and analysis. The three {{stages of the}} methodology are presented in detail with discussions of goals, metrics, and processes at each stage. Critical terms in <b>transaction</b> <b>log</b> analysis for Web searching are defined. The strengths and limitations of <b>transaction</b> <b>log</b> analysis as a research method are presented. An application to log client-side interactions that supplements <b>transaction</b> <b>logs</b> is reported on, and the application is made available {{for use by the}} research community. Suggestions are provided on ways to leverage the strengths of, while addressing the limitations of, <b>transaction</b> <b>log</b> analysis for Web-searching research. Finally, a complete flat text <b>transaction</b> <b>log</b> from a commercial search engine is available as supplementary material with thi...|$|R
5000|$|... eXtremeDB <b>Transaction</b> <b>Logging</b> edition keeps {{a record}} of changes made to the {{database}} and uses this log to provide recovery {{in the event of}} device or system failure. This edition includes eXtremeDB Data Relay technology that replicates selected changes to external systems such as enterprise applications and database systems.|$|E
5000|$|There {{are some}} tools that {{implement}} man-in-the-middle for SSH which also feature SFTP control. Examples {{of such a}} tool are Shell Control Box from Balabit [...] and CryptoAuditor from SSH Communications Security [...] (the original developer of the Secure Shell protocol) which provides functions such as SFTP <b>transaction</b> <b>logging</b> and logging of the actual data transmitted on the wire.|$|E
50|$|RDM Server is an embeddable, heterogeneous, client/server {{database}} management system supporting both C/C++ and SQL APIs for programming flexibility. The databases can be disk resident and/or memory resident. RDM Server implements multi-user locking, hot database backup, and a fully ACID-compliant <b>transaction</b> <b>logging</b> system with automatic crash recovery. It is currently supported on many 32- and 64-bit enterprise and embedded operating systems. The database library can optionally be run in-process with the application, eliminating client/server remote procedure calls.|$|E
50|$|A <b>transaction</b> <b>log</b> file records all {{transactions}} {{since the}} last checkpoint. <b>Transaction</b> <b>log</b> files may be preserved and archived for an indefinite time, providing a full, recoverable history of the database.|$|R
40|$|Abstract—A {{simple and}} {{intuitive}} model to mine an email <b>transactions</b> <b>log</b> for significant messages and users is presented. No use {{is made of}} NLP or semantic analysis. The model is based only on scoring messages and users from a graphtheoretic analysis of the communication pattern represented in the <b>transaction</b> <b>log.</b> Practical experiments indicate {{the potential of the}} model. Index Terms—Data mining, email, log mining, scoring model, significant message, significant user, <b>transactions</b> digraph, <b>transactions</b> <b>log.</b> I...|$|R
5000|$|Translation between {{physical}} storage formats that are {{recorded in the}} <b>transaction</b> <b>logs</b> and the logical formats typically expected by database users (e.g., some <b>transaction</b> <b>logs</b> save only minimal buffer differences that are not directly useful for change consumers).|$|R
50|$|Microsoft Access is a file {{server-based}} database. Unlike client-server {{relational database}} management systems (RDBMS), Microsoft Access does not implement database triggers, stored procedures, or <b>transaction</b> <b>logging.</b> Access 2010 includes table-level triggers and stored procedures {{built into the}} ACE data engine. Thus a Client-server database system is not a requirement for using stored procedures or table triggers with Access 2010.Tables, queries, forms, reports and macros can now be developed specifically for web base application in Access 2010. Integration with Microsoft SharePoint 2010 is also highly improved.|$|E
50|$|An {{electronic}} / digital cylinder is a {{locking device}} which operates {{by means of}} electric current. Electric locks are sometimes stand-alone with an electronic control assembly mounted directly to the lock. More often electric locks are connected to an access control system. The advantages of an electric lock connected to an access control system include: key control, where keys can be added and removed without re-keying the lock cylinder; fine access control, where time and place are factors; and <b>transaction</b> <b>logging,</b> where activity is recorded.|$|E
50|$|An {{electronic}} lock (or electric lock) is a locking device which operates {{by means of}} electric current. Electric locks are sometimes stand-alone with an electronic control assembly mounted directly to the lock. Electric locks may be connected to an access control system, the advantages of which include: key control, where keys can be added and removed without re-keying the lock cylinder; fine access control, where time and place are factors; and <b>transaction</b> <b>logging,</b> where activity is recorded. Electronic locks can also be remotely monitored and controlled, both to lock and unlock.|$|E
40|$|This report {{presents}} the results of a survey of Digital Library Federation members that examined the kinds of assessments they were conducting, what they did with the results, and what worked well or not so well. The first section of the report is an introduction that describes the report structure and summarizes challenges in assessment. The second section presents results related to user studies, including surveys (questionnaires), focus groups, user protocols, and other effective research methods. The third section addresses the following questions related to usage studies of electronic resources: (1) What is <b>transaction</b> <b>log</b> analysis? (2) Why do libraries conduct <b>transaction</b> <b>log</b> analysis? (3) How do libraries conduct <b>transaction</b> <b>log</b> analysis? (4) Who uses the results of <b>transaction</b> <b>log</b> analysis? and (5) What are the issues, problems, and challenges with <b>transaction</b> <b>log</b> analysis? The fourth section covers general issues and challenges in planning and implementing a research project. The fifth sectio...|$|R
50|$|Most {{database}} management systems manage a <b>transaction</b> <b>log</b> that records changes {{made to the}} database contents and to metadata. By scanning and interpreting {{the contents of the}} database <b>transaction</b> <b>log</b> one can capture the changes made to the database in a non-intrusive manner.|$|R
50|$|The {{design is}} heavily {{influenced}} by <b>transaction</b> <b>logs.</b>|$|R
5000|$|The MFS {{file system}} is {{organized}} {{more like a}} database, including <b>transaction</b> <b>logging</b> and rollback capabilities. It utilizes multiple partitions on the drive for a complete system. The partitions come in pairs, with one being the [...] "Application" [...] partition, and the other being the [...] "Media" [...] partition. The Media region is invariably quite large, and organized into long continuous blocks of data, with a variable block size that has a minimum of at least 1 megabyte. This is because {{it is designed to}} store large sections of video.|$|E
5000|$|McObject {{launched}} eXtremeDB as {{the first}} in-memory embedded database designed from scratch for real-time embedded systems. The initial product was soon joined by eXtremeDB High Availability (HA) for fault tolerant applications. The product family now includes 64-bit and <b>transaction</b> <b>logging</b> editions, and the hybrid eXtremeDB Fusion, which combines in-memory and on-disk data storage. In 2008, McObject introduced eXtremeDB Kernel Mode, the first embedded DBMS designed to run in an operating system kernel. Today, eXtremeDB is used in millions of real-time and embedded systems worldwide. McObject also offers Perst, an open source, object-oriented embedded database for Java, Java ME, [...]NET, [...]NET Compact Framework and Silverlight.|$|E
5000|$|A {{copy of the}} 4690 OS is {{maintained}} in each store controller. The 4690 POS terminals (registers) load a copy of 4690 from the store controller into memory when they Initial Program Load (IPL). The 4690 controllers provide terminal support {{in the form of}} terminal loading, price lookup, and <b>transaction</b> <b>logging.</b> Non-volatile memory is utilized to ensure that data is not lost in transit from the terminals to the store controller. Terminals are assigned to a primary store controller, and that controller is typically backed up by another controller. If the primary controller fails, the terminals automatically access the backup controller, providing uninterrupted sales at the POS terminal. If both the primary and backup controllers are unavailable, the terminal can go into a standalone state, or, some of the applications are capable of supporting a [...] "Terminal Offline" [...] (TOF) state wherein terminals run offline using a terminal-based item file and logging stored within their own memory.|$|E
40|$|This {{work will}} {{demonstrate}} {{a case study}} of a secure multiple bank <b>transaction</b> <b>log.</b> In particular we have implemented and evaluate a multiple bank <b>transaction</b> maintenance <b>log.</b> In this application we have implemented a transaction catalog which will maintain the <b>transaction</b> <b>log</b> from various bank in which the user has accounts. In this application we have identified a set of security issues and have applied the appropriate approach to minimize these security issues...|$|R
40|$|We analyse <b>transaction</b> <b>logs</b> {{for a large}} full-text {{document}} {{collection for}} Computer Science researchers. We report insights gained from this analysis and identify resulting search interface design issues. KEYWORDS: <b>transaction</b> <b>log</b> analysis, search interface, usage analysis. INTRODUCTION There is extensive literature on <b>transaction</b> <b>log</b> analysis of OPACs (see [3] for an overview). However, little work of this nature {{has been applied to}} digital libraries [...] -likely because many digital libraries have only recently attained a usage level suitable for log analysis. Since log analysis provides insight into user search behaviour it is useful in the design and consideration of query interfaces. We apply <b>transaction</b> <b>log</b> analysis techniques to the New Zealand Digital Library ([URL] We focus on the Computer Science Technical Reports (CSTR) collection which contains almost 46000 publically available Computer Science technical reports from around the world. Because the collection i [...] ...|$|R
5000|$|Other {{challenges}} in using <b>transaction</b> <b>logs</b> for change data capture include: ...|$|R
40|$|This report {{describes}} an implementation of <b>Transaction</b> <b>Logging</b> and Recovery using Unix Copy-On-Write on spawned processes. The {{purpose of the}} work is to extend WS-Iris, a research project on Object Oriented Main Memory Databases, with functionality for failure recovery. The presented work is a Master Thesis for a student of Master of Science in Computer Science and Technology. The work has been commissioned by Tore Risch, Professor of Engineering Databases at Computer Aided Engineering laboratory (CAElab), Linköping University (LiU/LiTH), Sweden. Keywords <b>Transaction</b> <b>logging,</b> logical logging, recovery, main memory database, copyon -write, process forking Jonas S Karlsson CAElab, IDA, Linköping University <b>Transaction</b> <b>Logging</b> and Recovery for a Main Memory OODB 3 CHAPTER 1 Introduction 5 1. 1 WS-Iris 5 1. 2 Reason & Goal 5 1. 3 Contents 6 CHAPTER 2 WS-Iris 7 2. 1 Internal Workings 7 2. 1. 1 The self-contained Lisp 8 2. 1. 2 Foreign functions 8 2. 2 Image 8 2. 3 Logging (Histories) 8 CH [...] ...|$|E
40|$|The paper {{reports a}} novel {{approach}} to studying user-system interaction that captures a complete record of the searcher's actions, the system responses and synchronised talk-aloud comments from the searcher. The data is recorded unobtrusively and is available for later analysis. The approach is set in context by a discussion of <b>transaction</b> <b>logging</b> and protocol analysis and examples of the search logging in operation are presente...|$|E
40|$|Phase Changing Memory (PCM), {{as one of}} {{the most}} {{promising}} next-generation memory technologies, offers various attractive properties such as non-volatility, bit-alterability, and low idle energy consumption. In this paper, we present PCMLogging, a novel logging scheme that exploits PCM devices for both data buffering and <b>transaction</b> <b>logging</b> in disk-based databases. Different from the traditional approach where buffered updates and transaction logs are completely separated, they are integrated in the new logging scheme. Our preliminary experiments show an up to 40 % improvement of PCMLogging in disk I/O performance in comparison with a basic buffering and logging scheme...|$|E
5000|$|Reading the <b>transaction</b> <b>log</b> as, or shortly after, it is written.|$|R
5000|$|CDC {{solutions}} {{based on}} <b>transaction</b> <b>log</b> files have distinct advantages that include: ...|$|R
40|$|Purpose – The {{purpose of}} this article is to {{investigate}} obesity-related queries from a public health portal (HealthLink) <b>transaction</b> <b>log.</b> Design/methodology/approach – Multidimensional scaling (MDS) was applied to each of five obesity-related focus keywords and their co-occurring terms in submitted queries. After the <b>transaction</b> <b>log</b> data were collected and cleaned, and query terms were extracted and parsed...|$|R
