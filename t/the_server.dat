10000|10000|Public
5|$|<b>The</b> <b>server</b> {{will have}} two chances at each point to deliver a correct service and must have one foot behind the baseline.|$|E
5|$|Rise of Nations {{features}} a highly customizable multiplayer mode. Up to eight players {{can play in}} a game {{with a variety of}} modes to choose from, with AI filling spots at <b>the</b> <b>server</b> host's choice. GameSpy Technologies had hosted matchmaking and other servers for multiplayer games played online through their dedicated server until December 2012.|$|E
5|$|Bars and {{restaurants}} are considered strictly liable for their patrons' behavior, and liquor licenses can be suspended or revoked if a customer engages in illegal activity (e.g. fighting, public urination) after drinking. New Jersey law recognizes both dram shop liability and social host liability, wherein <b>the</b> <b>server</b> of alcohol to visibly intoxicated persons or minors is liable {{if that person}} then causes death or injury to a third party in an alcohol-related automobile collision or other accident. In order to mitigate liability, the Division of Alcoholic Beverage Control (ABC) grants licensed establishments the right to exclude any patron for any reason, but warns business against violating civil rights laws.|$|E
30|$|<b>The</b> {{application}} <b>server</b> {{does not}} communicate directly with users. It only receives requests from <b>the</b> web <b>server.</b> It pulls data required for each analysis from <b>the</b> data <b>server.</b> <b>The</b> data <b>server</b> receives requests from both <b>the</b> application <b>server</b> and <b>the</b> web <b>server.</b> Besides sending data to <b>the</b> application <b>server,</b> it also receives and stores all analysis status data and results. <b>The</b> web <b>server,</b> therefore, retrieves all analysis informations from <b>the</b> data <b>server</b> rather than <b>the</b> application <b>server.</b>|$|R
50|$|<b>Servers</b> are <b>the</b> {{cities where}} you can rumble. Each server has its own color, a {{different}} lay-out, and contains stores and shops. There are no unique stores for different servers, instead stores are constant. Each server also has its own unique music from Blood Music. There are 7 FIRA <b>Servers</b> in total; <b>The</b> Liberties <b>Server,</b> <b>The</b> Strip <b>Server,</b> <b>The</b> Miyako <b>Server,</b> <b>The</b> Dragon <b>Server,</b> <b>The</b> Memphis <b>Server,</b> <b>The</b> Valhalla <b>Server,</b> and <b>the</b> Hide-Park <b>Server.</b> <b>The</b> respective cities are New York, Las Vegas, Tokyo, Hong Kong, Cairo, Stuttgart, and London.|$|R
5000|$|For each [...] unit parsed {{out of the}} Publius URL, <b>the</b> hosting <b>server</b> {{is located}} from <b>the</b> <b>servers</b> list by {{computing}} [...] which indicates on <b>the</b> <b>server's</b> location in <b>the</b> list.|$|R
5|$|Because of {{complaints}} from bar owners about {{their inability to}} obtain liability insurance, the state passed legislation in 1987 to limit liability to cases where <b>the</b> <b>server</b> could have realistically known that the patron was underage or intoxicated, and to limit lawsuits to types of injuries that are foreseeable. The act also instituted the legal standard of comparative negligence in these cases, wherein the monetary damages against a licensed establishment can be reduced if {{there are others who}} are also negligent (e.g. the patron, other bars). Additional legislation passed in 1987 substantially limited the liability of social hosts for adult guests.|$|E
5|$|Bob Muglia {{started his}} Microsoft career in 1988. He {{was the first}} product manager for SQL Server. Muglia also served as the {{director}} of Windows NT Program Management and User Education. He was promoted to vice president of the Windows NT division in October 1995. Muglia later held the position of vice president of <b>the</b> <b>Server</b> Application group, until he was promoted to {{senior vice president of the}} Applications and Tools group in February 1998.|$|E
5|$|Cloud won the Best Student Philosophy {{award for}} artistic {{achievement}} at the Slamdance Guerrilla Games Competition and a Student Showcase award at the Independent Games Festival. It was showcased on Spike TV, G4TV, and CBS Sunday. The game immediately received {{a great deal}} of attention when it was released; site traffic overran <b>the</b> <b>server</b> they were hosting the website on, and then crashed those of the school. By February 2006, just over three months after its release, the website had been viewed over onemillion times and the game downloaded over 300,000 times. By July 2006, it had reached sixmillion visits and 600,000 downloads.|$|E
50|$|DarkComet, {{like many}} other RATs, use a reverse-connecting architecture. The client is the system which is not {{infected}} with DarkComet. The client is the system with the GUI which controls <b>the</b> <b>servers.</b> <b>The</b> <b>servers</b> are all <b>the</b> infected systems. <b>The</b> <b>servers</b> do not contain a GUI.|$|R
50|$|<b>The</b> <b>servers</b> {{closed at}} 12 EST on January 31. Shortly after <b>the</b> <b>servers</b> closed <b>the</b> website and forums were taken down, {{along with the}} {{official}} Facebook page.|$|R
50|$|<b>The</b> North American <b>servers</b> were {{originally}} {{scheduled to be}} shut off on October 11, 2011, however Atlus decided on September 22, 2011, to keep <b>the</b> <b>servers</b> until 31 May 2012. However, a few days prior to <b>the</b> <b>servers</b> shutting down, there was an announcement made by Atlus stating that <b>the</b> <b>servers</b> would stay up for the foreseeable future. Furthermore, Atlus stated {{that there could be}} future extensions of <b>the</b> North American <b>servers,</b> provided user activity and interest remain constant.|$|R
5|$|Freelancer {{features}} a multiplayer mode, allowing up to 128players to play {{together in a}} game. Multiplayer games are hosted on game servers; personal computers that meet the requirements for the game {{can act as a}} server. Gameplay is similar to the single-player mode, but is absent of story-driven quests. <b>The</b> <b>server</b> keeps individual records of the players' progress, and they can resume their game on their next log on to this server. A persistent virtual galaxy is thus maintained for them.|$|E
5|$|Slither.io is a massively {{multiplayer}} browser game {{developed by}} Steve Howse. Players control an avatar resembling a snake, which consumes multicolored pellets, both from other players and ones that naturally spawn {{on the map}} in the game, to grow in size. The objective {{of the game is}} to grow the longest snake in <b>the</b> <b>server.</b> Slither.io is similar in concept to the popular 2015 web game Agar.io and is reminiscent of the classic arcade game Snake.|$|E
5|$|The tournament {{generated}} {{a profit of}} Â£10 and the pony roller stayed in use. When the tournament was finished, Henry Jones gathered all the score cards to analyse the results and found that, of the 601 games played during the tournament, 376 were won by <b>the</b> <b>server</b> ("striker-in") and 225 by the receiver ("striker-out"). At {{a time when the}} service was either made underarm or, usually, at shoulder height, this was seen as a serving dominance and resulted in a modification of the rules for the 1878 Championship. To decrease the target area for <b>the</b> <b>server,</b> the length of the service court was reduced from 26 to 22ft (7.92 to 6.71m) and to make passing shots easier against volleyers the height of the net was reduced to 4ft 9 in (1.45m) at the posts and 3 feet (0.91m) at the centre. These rules were published jointly by the AEC & LTC and the MCC, giving the AEC & LTC an official rule-making authority and in effect retroactively sanctioning its 1877 rules. It marked the moment when the AEC & LTC effectively usurped the rule-making initiative from the MCC although the latter would still ratify rule changes until 1882. In recognition of the importance and popularity of lawn tennis, the club was renamed in 1882 to All England Lawn Tennis Club (AELTC).|$|E
40|$|International audiencePrivate Information Retrieval (PIR) {{protocols}} aim at {{ensuring a}} user {{that he can}} retrieve some part Di of a distributed database D without revealing the index i to <b>the</b> <b>server(s).</b> Most of known PIR protocols focus on decreasing the communication complexity between the client and <b>the</b> <b>server(s).</b> Recently, <b>the</b> use of PIR codes by Fazeli et. al. also lead to a huge reduction of the storage overhead supported by <b>the</b> <b>servers.</b> However, only a few works {{address the issue of}} the computational complexity of <b>the</b> <b>servers.</b> In this paper, we show that transversal designs and their generalizations provide PIR schemes achieving simultaneously reasonable communication complexity, low storage overhead, optimal computational complexity for <b>the</b> <b>servers,</b> and resistance to a collusion of some of them...|$|R
5000|$|The rest of {{the players}} will be <b>the</b> <b>servers</b> on <b>the</b> {{opposite}} side of the court from <b>the</b> passers. <b>The</b> <b>servers</b> will serve {{to the other side of}} the court.|$|R
30|$|The central {{scheduler}} {{maintains a}} sorted list of non-saturated and active servers with their energy profiles. <b>The</b> <b>servers</b> are sorted {{according to their}} energy profiles where <b>the</b> most energy-efficient <b>servers</b> are placed {{on the top of}} the list. Upon receiving task requests, the scheduler assigns tasks to <b>the</b> <b>servers</b> from <b>the</b> sorted list from top to bottom. <b>The</b> <b>servers</b> receive task assignments and their energy profile is updated. Once <b>the</b> most energy-efficient <b>servers</b> are saturated, they are removed from the list until they become unsaturated.|$|R
5|$|There are 12 default skins, {{each one}} a {{different}} solid color. The colors are randomly chosen when the player joins <b>the</b> <b>server.</b> Players {{can choose to}} customize their snake's appearances using custom skins with unique designs including different countries' flags, as well as skins with motifs and colors representing well-known YouTubers, such as Jacksepticeye, Jelly and PewDiePie. In order to unlock custom skins in browser mode, players must share the game on Twitter or Facebook using the external links found on the website. By June 2016, the ability to add skins was also added to the iOS and Android versions.|$|E
25|$|When using session tickets, the TLS server stores its session-specific {{state in}} a session ticket and sends the session ticket to the TLS client for storing. The client resumes a TLS session by sending the session ticket to <b>the</b> <b>server,</b> and <b>the</b> <b>server</b> resumes the TLS session {{according}} to the session-specific state in the ticket. The session ticket is encrypted and authenticated by <b>the</b> <b>server,</b> and <b>the</b> <b>server</b> verifies its validity before using its contents.|$|E
25|$|<b>The</b> <b>server</b> sends its Certificate message (depending on the {{selected}} cipher suite, {{this may be}} omitted by <b>the</b> <b>server).</b>|$|E
40|$|The {{authentication}} system stores the password in a Central <b>Server,</b> and <b>the</b> possibility for the intruder {{to obtain the}} password is very easy and can {{gain access to the}} contents of the user. For the purpose of authentication, the multi-server systems we proposed to communicate with one or all of <b>the</b> <b>servers.</b> It requires high communication bandwidth at the same time is not easy to maintain and also the protocols are highly expensive. <b>The</b> Two <b>Server</b> Authentication System avoids this problem, which uses the passwords and the session keys, rather than performing the cryptographic techniques. It consists of two <b>servers,</b> <b>the</b> front end and <b>the</b> back end <b>server.</b> <b>The</b> front end <b>server</b> communicates with <b>the</b> user, whereas the back end control server is only visible to <b>the</b> service <b>server.</b> These two servers are responsible for the authentication. The password is split into two words, which is one with <b>the</b> service <b>server</b> and <b>the</b> other with <b>the</b> control <b>server.</b> Both <b>the</b> <b>servers</b> are validated during the form validation process. The system is suitable for both the computation and communication system. <b>The</b> <b>servers</b> are also used for the multiple clients and also for <b>the</b> single <b>server</b> systems...|$|R
5000|$|<b>The</b> hosting <b>servers</b> {{are chosen}} out of <b>the</b> <b>servers</b> list; <b>the</b> chosen {{locations}} in <b>the</b> <b>servers</b> list {{are determined by}} [...] {{in order to obtain}} n values in the range 1,m. If less than k unique locations were found, this step is repeated till [...] unique locations are found.|$|R
50|$|Prior to wiki farms, {{someone who}} wanted to operate a wiki had to install the {{software}} and manage <b>the</b> <b>server(s)</b> themselves. With a wiki farm, the farm's administration installs the core wiki code once on its own <b>servers,</b> centrally maintains <b>the</b> <b>servers,</b> and establishes unique space on <b>the</b> <b>servers</b> for <b>the</b> content of each individual wiki with the shared core code executing the functions of each wiki.|$|R
25|$|Clientâserver: {{architectures}} where smart clients contact <b>the</b> <b>server</b> {{for data}} then format and display {{it to the}} users. Input at the client is committed back to <b>the</b> <b>server</b> when it represents a permanent change.|$|E
25|$|The players (or teams) {{start on}} {{opposite}} sides of the net. One player is designated <b>the</b> <b>server,</b> and the opposing player is the receiver. The choice to be server or receiver in the first game and the choice of ends is decided by a coin toss before the warm-up starts. Service alternates game by game between the two players (or teams). For each point, <b>the</b> <b>server</b> starts behind the baseline, between the center mark and the sideline. The receiver may start anywhere on their side of the net. When the receiver is ready, <b>the</b> <b>server</b> will serve, although the receiver must play to the pace of <b>the</b> <b>server.</b>|$|E
25|$|Annoying Orange {{has his own}} Minecraft server, mc.orangecraft.net (Orangecraft). The Annoying Orange uploads one video {{per week}} documenting the happenings on <b>the</b> <b>server.</b> Most of the main {{characters}} on Annoying Orange have visited <b>the</b> <b>server.</b>|$|E
50|$|Key servers in Helios are the {{previously}} mentioned loader, processor manager and network <b>server,</b> together with <b>the</b> session manager, <b>the</b> window <b>server</b> and <b>the</b> file <b>server.</b> Others include <b>the</b> keyboard, mouse, RS232 and Centronics <b>servers</b> (built into <b>the</b> host I/O <b>server),</b> <b>the</b> null <b>server</b> (like Unix's /dev/null), and <b>the</b> logger <b>server</b> (like Unix's syslog).|$|R
5000|$|Path - {{a list of}} <b>the</b> <b>servers</b> {{an article}} passed through {{on its way to}} <b>the</b> local <b>server</b> ...|$|R
5000|$|In July 2016, {{all of the}} Red5 {{development}} team, {{including the}} community manager FadedPez, had been fired. There were no official statements regarding the future of Firefall from The9, but {{it was confirmed that}} <b>the</b> <b>servers</b> were still on, however <b>the</b> authenticating <b>servers</b> for new players were not. As of July 7 2017, <b>the</b> <b>servers</b> were officially shut down.|$|R
25|$|<b>The</b> <b>server</b> {{responds}} with a ServerHello message, containing the chosen protocol version, a random number, CipherSuite and compression method from the choices {{offered by the}} client. To confirm or allow resumed handshakes <b>the</b> <b>server</b> may send a session ID. The chosen protocol version should be the highest that both the client and server support. For example, if the client supports TLS version 1.1 and <b>the</b> <b>server</b> supports version 1.2, version 1.1 should be selected; version 1.2 should not be selected.|$|E
25|$|<b>The</b> <b>server</b> usually then sends {{back its}} {{identification}} {{in the form}} of a digital certificate. The certificate contains <b>the</b> <b>server</b> name, the trusted certificate authority (CA) that vouches for the authenticity of the certificate, and the server's public encryption key.|$|E
25|$|Historically XSS {{vulnerabilities}} {{were first}} found in applications that performed all data processing on <b>the</b> <b>server</b> side. User input (including an XSS vector) {{would be sent}} to <b>the</b> <b>server,</b> and then sent back to the user as a web page. The perceived need for an improved user experience resulted in popularity of applications that had a majority of the presentation logic (maybe written in JavaScript) working on the client-side that pulled data, on-demand, from <b>the</b> <b>server</b> using AJAX.|$|E
5000|$|In doubles, if <b>the</b> <b>servers</b> lose <b>the</b> rally then <b>the</b> {{designated}} <b>server</b> {{within that}} team changes. If the receivers lose the rally then ...|$|R
50|$|In NLTSS <b>the</b> process <b>server</b> {{was quite}} similar to <b>the</b> file <b>server</b> in that user {{processes}} could ask {{for the creation of}} processes, the starting or stopping of processes, reading or writing process memory or registers, and to be notified of process faults. <b>The</b> process <b>server</b> was an ordinary user mode process that was simply trusted to communicate with the CPU driver, just like <b>the</b> file <b>server</b> was trusted to communicate with the disk driver. <b>The</b> process <b>server</b> stored process state in files provided by <b>the</b> file <b>server</b> and in that regard appeared like any other user process to <b>the</b> file <b>server.</b>|$|R
5000|$|NLTSS was a capability-based {{client-server}} system. <b>The</b> {{two primary}} <b>servers</b> were <b>the</b> file <b>server</b> and <b>the</b> process <b>server.</b> <b>The</b> file <b>server</b> was a process privileged {{to be trusted}} by the drivers for local storage (disk storage,) and <b>the</b> process <b>server</b> was a process privileged to be trusted by the processor driver (software that switched time sharing control between processes in the [...] "alternator", handled interrupts for processes besides the [...] "communicate" [...] call, provided access to memory and process state for <b>the</b> process <b>server,</b> etc.).|$|R
