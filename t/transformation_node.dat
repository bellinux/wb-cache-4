1|61|Public
50|$|Traversals {{are the key}} to {{the power}} of {{applying}} operations to scene graphs. A traversal generally consists of starting at some arbitrary node (often the root of the scene graph), applying the operation(s) (often the updating and rendering operations are applied one after the other), and recursively moving down the scene graph (tree) to the child nodes, until a leaf node is reached. At this point, many scene graph engines then traverse back up the tree, applying a similar operation. For example, consider a render operation that takes transformations into account: while recursively traversing down the scene graph hierarchy, a pre-render operation is called. If the node is a <b>transformation</b> <b>node,</b> it adds its own transformation to the current transformation matrix. Once the operation finishes traversing all the children of a node, it calls the node's post-render operation so that the <b>transformation</b> <b>node</b> can undo the transformation. This approach drastically reduces the necessary amount of matrix multiplication.|$|E
40|$|Abstract. In the {{three-dimensional}} terrain model construction, {{a lot of}} work is to modify the partial area of the discontinuous portion of the model, augmenting the descriptions of the detail and the authenticity of the model. In view of this, this paper mainly studied the influence of <b>node</b> <b>transformation</b> on terrain model. And combined with the primary technology of <b>node</b> <b>transformation,</b> the paper also analyzed the application of <b>node</b> <b>transformation</b> on a certain terrain model. The result indicates that: using <b>node</b> <b>transformation</b> technology can effectively develop the complexity and authenticity of the model, enhance the sense of immersion in the VR environment...|$|R
40|$|The aim of {{this paper}} is to {{integrate}} typed attributed graph <b>transformation</b> with <b>node</b> type inheritance. Borrowing concepts from object oriented systems, the main idea is to enrich the attributed type graph with an inheritance relation and a set of abstract nodes. In this way, a node type inherits the attributes and edges of all its ancestors. Based on these concepts, it is possible to define abstract productions, containing abstract nodes. These productions are node types by the node types in their inheritance clan. Therefore, productions become more compact and suitable for their use in combination with meta-modelling. The main results of this paper show that attributed graph <b>transformation</b> with <b>node</b> type inheritance is fully compatible with the existing concept of typed attributed graph transformation...|$|R
40|$|We {{introduce}} a lazy XSLT interpreter that provides random {{access to the}} transformation result. This allows e#- cient pipelining of <b>transformation</b> sequences. <b>Nodes</b> of the result tree are computed only upon initial access. As these computations have limited fan-in, sparse output coverage propagates backwards through the pipeline...|$|R
50|$|ClutterActor is {{the basic}} element of Clutter's scene graph, it encapsulates the position, size, and <b>transformations</b> of a <b>node</b> in the graph.|$|R
5000|$|There {{are many}} types of node {{that can be used}} in {{developing}} message flows; the following <b>node</b> <b>transformation</b> technology options are available: ...|$|R
40|$|AbstractThe aim of {{this paper}} is to {{integrate}} typed attributed graph <b>transformation</b> with <b>node</b> type inheritance. Borrowing concepts from object oriented systems, the main idea is to enrich the attributed type graph with an inheritance relation and a set of abstract nodes. In this way, a node type inherits the attributes and edges of all its ancestors. Based on these concepts, it is possible to define abstract productions, containing abstract nodes. These productions are equivalent to a number of concrete productions, resulting from the substitution of the abstract node types by the node types in their inheritance clan. Therefore, productions become more compact and suitable for their use in combination with meta-modelling. The main results of this paper show that attributed graph <b>transformation</b> with <b>node</b> type inheritance is fully compatible with the existing concept of typed attributed graph transformation...|$|R
40|$|This paper {{analyzes}} an Integrated Thermal Power System using a Multiperiod Generalized Network Flow Model. The thermal {{system analysis}} {{is carried out}} by {{taking into account the}} complex dynamics involved in utilizing multiple energy carriers (coal, diesel and natural gas). The model comprises energy source <b>nodes,</b> energy <b>transformation</b> <b>nodes,</b> energy storage nodes, energy demand nodes and their interconnections. The solution to the integrated energy system problem involves the evaluation of energy flows that meet the electricity demand at minimum total cost, while satisfying system constraints. This is illustrated through the India case study using a minimum time-step of one hour. MATLAB based software was developed for carrying out this study. TOMLAB/CPLEX software was utilized for obtaining the optimal solution. The model and the methodology utilized for conducting the study would be of interest to those involved in integrated energy system planning for a country or a region...|$|R
40|$|In {{this paper}} we {{introduce}} {{a method for}} ray tracing of recursive objects defined by parametric rewriting systems. Constructive Solid Geometry (CSG) is used as underlying object representation. Thus the formal languages of our rewriting systems are subsets of the infinite set of CSG expressions. Instead of deriving such expressions to build up large CSG trees we translate the systems into cyclic CSG graphs, {{which can be used}} directly as an object representation for ray tracing. For this purpose the CSG concept is extended by three new nodes. Selection nodes join all the rules for one grammar symbol, control the flow by selecting proper rules, and are end-points of cyclic edges. <b>Transformation</b> <b>nodes</b> map the rays in affine space. Calculation nodes evaluate a finite set of arithmetic expressions to modify global parameters, which effect flow control and transformations. The CSG graphs introduced here are a very compact data structure, much like the describing data set. This property meets [...] ...|$|R
40|$|New {{algorithms}} {{are proposed}} for the modification of a mixed hexahedra-tetrahedra element mesh to maintain compatibility by the insertion of pyramid elements. Several methods for generation of the pyramids are presented involving local tetrahedral <b>transformations</b> and/or <b>node</b> insertion near the hex/tet interface. Local smoothing and topological operations {{improve the quality of}} the transition region. Results show superior performance of the resulting elements in a commercial finite element code over non-conforming interface conditions...|$|R
5000|$|We {{conclude}} {{again that}} Chebyshev nodes {{are a very}} good choice for polynomial interpolation. However, there is an easy (linear) <b>transformation</b> of Chebyshev <b>nodes</b> that gives a better Lebesgue constant. Let [...] denote the -th Chebyshev node. Then, define ...|$|R
40|$|AbstractThis paper {{summarizes}} {{in situ stress}} data by {{hydraulic fracturing}} method over the past 10 years along the Longmenshan fault belt, and these data {{can be divided into}} three segments: northern, middle, and southern. The orientations of the maximum horizontal stress rotate from north-northwest in the northern to northwest in the middle, and to west-northwest in the southern. The stress magnitudes are characterized by higher values in the two ends and lower values in the middle segment. Furthermore, three stress measurement campaigns in two boreholes on the northern segment of the Longmenshan fault belt, before and after the great earthquake, show clear stress decrease of 23 %– 29 % in the shallow crust after the earthquake. Analysis using the mathematical fitting method also indicates a decrease in regional stress state after the earthquake. Meanwhile, the frictional characteristic indexes based on the stress measurements further imply that the frictional strength of the Longmenshan fault belt is characterized by a strong southern segment, a weak middle segment, and a moderately strong northern segment. The analysis based on the stress data implies that the northern and southern segments of the fault belt are extremely important stress concentration and <b>transformation</b> <b>nodes</b> of the regional stress regime...|$|R
3000|$|... (each {{of which}} has a maximum {{resolution}} of R) at resolution r≤R, whereby, W(·) denotes a wavelet <b>transformation.</b> The collector <b>node</b> can perform aggregation (i.e., multiply) in the encrypted domain, i.e., {{it does not have}} any keys. This ensures that the aggregating node cannot get information about the loads of its children, e.g., by divisions.|$|R
40|$|Relational data {{representations}} {{have become}} an increasingly important topic due to the recent proliferation of network datasets (e. g., social, biological, information networks) and a corresponding increase {{in the application of}} statistical relational learning (SRL) algorithms to these domains. In this article, we examine a range of representation issues for graph-based relational data. Since the choice of relational data representation for the nodes, links, and features can dramatically affect the capabilities of SRL algorithms, we survey approaches and opportunities for relational representation transformation designed to improve the performance of these algorithms. This leads us to introduce an intuitive taxonomy for data representation transformations in relational domains that incorporates link <b>transformation</b> and <b>node</b> <b>transformation</b> as symmetric representation tasks. In particular, the transformation tasks for both nodes and links include (i) predicting their existence, (ii) predicting their label or type, (iii) estimating their weight or importance, and (iv) systematically constructing their relevant features. We motivate our taxonomy through detailed examples and use it to survey and compare competing approaches for each of these tasks. We also discuss general conditions for transforming links, nodes, and features. Finally, we highlight challenges that remain to be addressed...|$|R
50|$|Applying an {{operation}} on a scene graph requires {{some way of}} dispatching {{an operation}} based on a node's type. For example, in a render operation, a <b>transformation</b> group <b>node</b> would accumulate its transformation by matrix multiplication, vector displacement, quaternions or Euler angles. After which a leaf node sends the object off for rendering to the renderer. Some implementations might render the object directly, which invokes the underlying rendering API, such as DirectX or OpenGL. But since the underlying implementation of the rendering API usually lacks portability, one might separate the scene graph and rendering systems instead. In order to accomplish this type of dispatching, several different approaches can be taken.|$|R
40|$|Molecular {{dynamics}} simulation {{is employed}} {{to investigate the}} diffusion mechanism in silica melt, a typical network-forming liquid. From the analysis of SiOx→SiOx± 1 and OSiy→OSiy± 1 reactions we reveal two moving modes: fast hopping and slow collective moving. Accordingly the atoms diffuse in the melt by simple hopping or through displacing of super-molecule (SM). A cluster analysis is performed for several of atom sets. It is shown that the melt exhibits non-uniform spatial distribution of reaction which causes the dynamics heterogeneity (DH). Further, the network structure of the melt consists of main subnet and large defective subnets. These subnets differ strongly in local environment, chemical composition and atomic density. This result evidences two distinct phases, the structure heterogeneity in silica melt and supports the polymorphism of network-forming liquid. We also {{find out that the}} <b>node</b> <b>transformation</b> spreads non-uniformly through the network structure. It takes place mainly in large defective subnet. The strong localization of <b>node</b> <b>transformation</b> is responsible for dynamical slowdown...|$|R
40|$|In {{this paper}} we {{consider}} some classes of nets with bounded types of distributed resources (BR-nets). The succsesful execution problem for BR-nets {{is equivalent to}} the provability problem for the logical calculus based on Horn fragment of Girard’s Linear Logic [2]. We show that, in spite of NP-completeness of the problem for all BR-nets, it is in PTIME for some interesting subclasses of BR-nets. The idea of relating the concurrent computations to the linear logic proofs was first proposed by Girard [6] and then considered in numbers of works (see [4, 8]). BR-nets were introduced to represent concurrency in distributed systems of bounded resource <b>transformations.</b> Every <b>node</b> of a BR-net contains a multiset of resources of fixed types called supplies and rules of supply transformations (converters). ...|$|R
40|$|This paper {{describes}} a procedure for determining if constrained network problems (i. e., network problems with additional linear constraints) {{can be transformed}} into equivalent pure network problems by a linear <b>transformation</b> involving the <b>node</b> constraints and the extra constraints. These results extend procedures for problems in which the extra constraints consist of bounding certain partial sums of variables. This {{has proved to be}} an effective managerial technique for a major automobile manufacturer and a major energy modeling company. ...|$|R
40|$|We {{consider}} dataflow architecture for {{two classes}} of computations which admit taking linear combinations of execution runs: probabilistic sampling and generalized animation. We improve the earlier technique of almost continuous program transformations by adopting a discipline of bipartite graphs linking nodes obtained via general <b>transformations</b> and <b>nodes</b> obtained via linear transformations which {{makes it possible to}} develop and evolve dataflow programs over these classes of computations by continuous program transformations. The use of bipartite graphs allows us to represent the dataflow programs from this class as matrices of real numbers and evolve and modify programs by continuous change of these numbers. We develop a formalism for higher-order dataflow programming for this class of dataflow graphs based on the higher-order matrix elements. Some of our software experiments are briefly discussed. Comment: 8 pages, August 27, 2015 preprin...|$|R
40|$|In {{this paper}} a fluid {{simulation}} model is analyzed. The model is specifically targeted at large scale inter-domain scenarios. Network traffic is modeled as rate and time continuous processes (signals). The signal <b>transformation</b> at network <b>nodes</b> are described by differential equations. The simulation model is validated against network measurements. The main {{result is that}} the model does not capture small delays but it reproduces the main characteristics of the measured delay values. The simulation delays have a similar average delay, delay variance and evolution over time...|$|R
40|$|Querying XML {{documents}} {{is a basic}} {{task for}} many XML applications. Typically, matches of queries are located individually, i. e. a match is a single node in a queried document. k-ary queries, in contrast, simultaneously identify k locations in the document, which are connected via some specified relation. For example, in rule-based transformations (like XSLT <b>transformations),</b> a <b>node</b> to which a rule is applied and another node which is selected by the rule {{in the context of}} the first node could be identified together by a binary query defining the relation between these two nodes. Such a binary query would replace the match and the select pattern used to identify the first and the second node respectively. By eliminating the need for select patterns, binary queries would not only reduce the number of patterns in a transformation, but would also allow that all the pattern matching is done statically, i. e. before the transformation actually begins. We us...|$|R
40|$|An element shape {{optimization}} {{procedure is}} presented, {{which can be}} considered as a general post-treatment process for three-dimensional tetrahedral meshes generated by Delaunay triangulation or refinement based on the subdivision of elements. The tetrahedral mesh is optimized with respect to a given element shape measure through a combined iterative scheme of local <b>transformations</b> and <b>node</b> relaxation. From the examples studied, a substantial gain in quality could be achieved in two cycles of iterations based on any valid shape measures, minimum solid angle θ, radius ratio ρ and gamma coefficient γ. Although further research and evidence are required for a more definite conclusion, the γ-coefficient which is more economical to compute, seems to give better results than the other two shape measures. The largest mesh processed which, consists of 67, 326 nodes and 360, 824 elements, required a CPU time of a little more than 3 min on a IBM Power Station 3 BT. © 1997 Elsevier Science Ltd. link_to_subscribed_fulltex...|$|R
40|$|Many cognominal parts {{exist in}} JT models {{exported}} by FORAN V 70 R 2. 0 software, and {{this leads to}} an increase in time consumption and the space analysis results becoming hard to process when using clearance analysis software to perform distance computing for such JT models. Aiming at this problem, an algorithm for merging component nodes is put forward based on investigating the assembly configuration and inherent information (i. e. geometric and material information) of JT models created by FORAN. The method is composed of four steps:coordinate <b>transformation,</b> model <b>node</b> renaming, node geometric data transferring and material attribute processing. Finally, the proposed method is implemented by C++ and JT Open Toolkit. The results show that the new JT models generated by the proposed method are comprised of only one assembly node, and they preserve the intrinsic information of the original JT models. Its validity is illustrated by a great deal of examples, and the content of the worked JT models are reduced by about 7 % to 20 %...|$|R
40|$|Abstract- In most of {{the network}} data <b>transformation</b> sender <b>nodes</b> choose the link depends on link quality that implies sender could not much {{concentrate}} on the traffic and data loss. So this paper mainly focus on both data loss and queuing delay to identify most congested link in a network. Identifying {{the existence of a}} dominant congested link is useful for traffic engineering. It also helps us understand and model the dynamics of the network since the behavior of a network with a dominant congested link differs dramatically from one with multiple congested links. The network data congested mainly made by the router overhead and the intruder path selection; by consider these things here introduce a congested identification method by combining hypothesis test with model based approach. Here developing parameter inference algorithms for hidden Markov model and Markov model with a hidden dimension to infer this virtual delay. The process is more efficient than the existing methods and can implement in future for secure high throughput achieving group communication. Index Terms- bottleneck link, dominant congested link, end– end inference, hidden Markov model (HMM), markov model with a hidden dimension (MMHD). M I...|$|R
40|$|In this work, {{using the}} Cu–Ni (111) semi-coherent {{interface}} {{as a model}} system, we combine atomistic simulations and defect theory to reveal the relaxation mechanisms, structure, and properties of semi-coherent interfaces. By calculating the generalized stacking fault energy (GSFE) profile of the interface, two stable structures and a high-energy structure are located. During the relaxation, the regions that possess the stable structures expand and develop into coherent regions; the regions with high-energy structure shrink into the intersection of misfit dislocations (nodes). This process reduces the interface excess potential energy but increases the core energy of the misfit dislocations and nodes. The core width {{is dependent on the}} GSFE of the interface. The high-energy structure relaxes by relative rotation and dilatation between the crystals. The relative rotation is responsible for the spiral pattern at nodes. The relative dilatation is responsible for the creation of free volume at nodes, which facilitates the nodes’ structural <b>transformation.</b> Several <b>node</b> structures have been observed and analyzed. The various structures have significant impact on the plastic deformation in terms of lattice dislocation nucleation, as well as the point defect formation energies...|$|R
40|$|Abstract: This paper {{proposes a}} {{framework}} for structure-based feature extraction in basketball zonedefense strategies. Firstly, a graphical representation for key-frames extracted from zone-defense video clips is introduced, where each key-frame is {{expressed in terms of}} a zone-defense graph, representing the positions of defenders and the ball. Secondly, defense-lines are defined and extracted from zone-defense graphs for each zone-defense strategy, based on which, a 10 dimentional feature vector with respect to the defense-lines is introduced to characterize the structure relationships. Experiments have been conducted for basketball zone-defense strategy detection on both simulated and real-life basketball zone-defense video database, which demonstrate the validation and practicability of such a structure based feature characterization, and, in particular, its robustness with respect to the disturbance of local <b>transformation</b> of subprime <b>nodes</b> in the graphs...|$|R
40|$|Model {{transformation}} {{is one of}} the key activities in model-driven software development. An increasingly popular technology to define mod-eling languages is provided by the Eclipse Modeling Framework (EMF). Several EMF model transformation approaches have been developed, focus-ing on different transformation aspects. To validate model transformations wrt. functional behavior and correctness, a formal foundation is needed. In this paper, we define EMF model transformations as a special kind of typed graph <b>transformations</b> using <b>node</b> type inheritance. Containment con-straints of EMF model transformations are translated to a special kind of EMF model transformation rules such that their application leads to con-sistent transformation results only. Thus, we identify a kind of EMF model transformations which behave like algebraic graph transformations. As a consequence, the rich theory of algebraic graph transformation can be ap-plied to these EMF model transformations to show functional behavior and correctness. Furthermore, we propose parallel graph transformation as a suitable framework for modeling EMF model transformations with multi-object structures. Multi-object structures at transformation rule level pro-vide a flexible way to describe the transformation of structures with a flexi-ble number of recurring structures, dependent on concrete model instances. Parallel graph transformation means parallelizing the application of model transformation rules at several occurences at once. We illustrate our ap-proach by selected refactorings of simplified statechart models. Finally, we discuss the implementation of our concepts in a tool environment for EMF model transformations...|$|R
40|$|Placement of {{interior}} node points {{is a crucial}} step in the generation of quality meshes in sweeping algorithms. Two new algorithms were devised for node point placement and implemented in Sweep Tool, the first based {{on the use of}} linear <b>transformations</b> between bounding <b>node</b> loops and the second based on smoothing. Examples are given that demonstrate the e#ectiveness of these algorithms. 1. Introduction It has been demonstrated that geometries that are two-and-one-half dimensional (e. g., generalized cylinders) can be meshed with all-hexahedral finite elements [1], [4]. Because all-hexahedral mesh generation on general three-dimensional geometries remains an elusive goal, algorithms to mesh two-and-one-half dimensional geometries, generally referred to as "sweeping" or "projecting" methods, continue to be important. Although mesh sweeping is simple in concept, the first-generation algorithms lacked robustness and often produced poor mesh quality. There are several approaches to mesh [...] ...|$|R
40|$|International audienceWe {{tackle the}} problem of graph {{transformation}} with particular focus on node cloning. We propose {{a new approach to}} graph rewriting, called polarized node cloning, where a node may be cloned together with either all its incident edges or with only its outgoing edges or with only its incoming edges or with none of its incident edges. We thus subsume previous works such as the sesqui-pushout, the heterogeneous pushout and the adaptive star grammars approaches. We first define polarized node cloning algorithmically, then we propose an algebraic definition. We use polarization annotations to declare how a node must be cloned. For this purpose, we introduce the notion of polarized graphs as graphs endowed with some annotations on nodes and we define graph <b>transformations</b> with polarized <b>node</b> cloning by means of sesqui-pushouts in the category of polarized graphs...|$|R
40|$|English {{languages}} {{has been}} a challenging research topic in natural language processing. Most {{research has been done}} on English to Thai machine translation, but not the other way around. This paper presents a Thai to English Machine Translation System that translates a Thai sentence into interlingua of a Thai LFG tree using LFG grammar and a bottom up parser. The Thai LFG tree is then transformed into the corresponding English LFG tree by pattern matching and <b>node</b> <b>transformation.</b> Finally, an equivalent English sentence is created using structural information prescribed by the English LFG tree. Based on results of experiments designed to evaluate the performance of the proposed system, it can be stated that the system has been proven to be effective in providing a useful translation from Thai to English. Keywords—Interlingua, LFG grammar, Machine translation, Pattern matching...|$|R
40|$|Semantic Web {{plays an}} {{important}} role in the Web of future. The RDF data is the key component which establishes the basis of the Semantic Web. In this paper, we conlude the usages and the possible problems of blank nodes of RDF with detailed analyses of the applications and semantics of the blank nodes in RDF graphs. Give special attentions to the inconsistency between RDF semantics and SPARQL semantics of blank nodes. Employ the concept of “lean graph” in the pre-process of the RDF data operation, propose a method of using the entailment relations between RDF graphs and the <b>transformation</b> from blank <b>nodes</b> to the URI references to eliminate the blank nodes in RDF graphs, and give the theoretic background to support the method. Lastly, some referenced methods of transforming the blank nodes to URI references are provided...|$|R
40|$|Previous work on compiler-basedmultiple {{instruction}} retry has utilized {{a series}} of compiler <b>transformations,</b> loop protection, <b>node</b> splitting, and loop expansion, to eliminate anti-dependencies of length N in the pseudo register, the machine register, and the post-pass resolver phases of compilation 1. The results have provided a means of rapidly recovering from transient processor failures by rolling back N instructions. This paper presents techniques for improving compilation and run-time performance in compiler-based multiple instruction retry. Incremental updating enhances compilation time when new instructions {{are added to the}} program. Post-pass code rescheduling and spill register reassignment algorithms improve the run-time performance and decrease the code growth across the application programs studied. Branch hazards are shown to be resolvable by simple modifications to the incremental updating schemes during the pseudo register phase and to the spill register reassignment algorithm during the post-pass phase. KEY WORDS Rollback recovery Fault-tolerant computing Instruction retr...|$|R
40|$|Abstract—In recent years, lots of {{researches}} {{have explored}} how {{to extend the}} lifetime of wireless sensor networks. Many of them focus on how to defend against Denial of Service (DoS) [1] attacks, and focus on how to arrange the locations of sensor nodes in different wireless sensor network architectures to extend the lifetime of sensor networks and to improve network security. This paper will use artificial bee colony algorithm and Or-opt algorithm to plan a transmission route of the detect features. Patrol nodes are also exploited to reduce power depletion and to extend the network lifetime. Patrol nodes will collect sensing data of nearby sensor nodes, detecting patterns in the collection data to confirm the collection data whether is normal or not. The experiments proof our method can reduce the time consume for dada <b>transformation</b> between patrol <b>nodes.</b> Keywords-component; wireless sensor network; artificial bee colony algorithm; the network lifetime; I...|$|R
40|$|Abstract—A novel {{scheme is}} {{presented}} that allows individual nodes in sensor networks to achieve network/topology-awareness {{by listening to}} regular packets associated with applications. Nodes, initially oblivious to network topology and their position within the network, gradually infer information required to evaluate their own Virtual Coordinates (VCs). A Singular Value Decomposition based <b>transformation</b> allows each <b>node</b> to convert the VCs of nodes, gleaned from the source or destination address field of packets, to corresponding Topological Coordinates (TCs). Eventually each node generates a topology map of the network, thus becoming aware of its own location {{and those of other}} nodes. Effectiveness of self-learning scheme, in terms of convergence of different stages, and gradual development of network awareness at nodes are illustrated. While many applications of network awareness within nodes can be foreseen, we illustrate how performance of routing can improve dramatically over time as network awareness develops within a node...|$|R
40|$|We {{describe}} Chromium, {{a system}} for manipulating streams of graphics API commands on clusters of workstations. Chromium's stream filters can be arranged to create sort-first and sort-last parallel graphics architectures that, in many cases, support the same applications while using only commodity graphics accelerators. In addition, these stream filters can be extended programmatically, allowing the user to customize the stream <b>transformations</b> performed by <b>nodes</b> in a cluster. Because our stream processing mechanism is completely general, any cluster-parallel rendering algorithm can be either implemented on top of or embedded in Chromium. In this paper, we give examples of real-world applications that use Chromium to achieve good scalability on clusters of workstations, and describe other potential uses of this stream processing technology. By completely abstracting the underlying graphics architecture, network topology, and API command processing semantics, we allow a variety of applications to run in different environments...|$|R
40|$|Angiomatoid lesions in a {{lymph node}} {{associated}} with a thyroid carcinoma of a dog were restricted to the subcapsular and medullary sinuses. Lymphoid atrophy was present, but nodal architecture was not distorted and normal structures were not invaded. Immunohistochemical staining indicated that the vascular spaces formed by spindloid cells were lined by endothelium with a low mitotic index. The spindloid cells were positive for smooth muscle actin, vimentin, and desmin and thus {{were likely to be}} fibroblasts, myofibroblasts, smooth muscle cells, and/or pericytes. These features are comparable to vascular <b>transformation</b> of lymph <b>node</b> sinuses in humans (nodal angiomatosis), a nonneoplastic condition often associated with mechanical or functional blockage of efferent lymphatics and veins. Keywords canid, lymph node, nodal angiomatosis, vascular transformation Tissue from a neck swelling of an 11. 5 -year-old, neutered male, fox terrier was submitted for histologic evaluation to the Veterin-aryDiagnostic Laboratory atOregonStateUniversity. The owner had noticed themass a month previously and it had been growing rapidly. Hematoxylin and eosin, Masson’s trichrome, and Prus...|$|R
