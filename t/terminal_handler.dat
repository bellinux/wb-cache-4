1|3|Public
5000|$|In 1968, {{work began}} on adding {{time-sharing}} capability to Exec 8. It was delivered with level 23 {{of the executive}} in 1969. Time sharing (called demand mode) had the same capabilities as batch and real time processes. Everything {{that could be done}} in batch could be done from an ASCII terminal. In demand mode, job stream I/O was attached to a <b>terminal</b> <b>handler</b> rather than card image (input) and spool (output) files. The same run control language was used for both. A few years later, more specific time sharing commands were added, and some control statements could be issued asynchronously for immediate processing, even when neither the executive or the running program were expecting data. Those commands, which could be entered only from a terminal, began with [...] "@@". Because they could be performed without stopping other work in progress from the same terminal, they were called transparent commands. At first these were just statements to kill the current program or redirect terminal output to a file, but eventually, almost all control statements were allowed to be [...] "immediate." ...|$|E
50|$|The {{terminal}} emulator process must also handle terminal control commands, e.g., for resizing the screen. Widely used {{terminal emulator}} programs include xterm, GNOME Terminal, Konsole, and <b>Terminal.</b> Remote login <b>handlers</b> such as ssh and telnet servers {{play the same}} role but communicate with a remote user instead of a local one. Also consider programs such as expect.|$|R
50|$|Web Based One Customs: Web-based customs {{clearance}} system that provides real time integration of agents, brokers, <b>terminal</b> operators, cargo <b>handlers</b> and customs officials for the clearance of trade consignments and collection of duties/allied taxes. Will be implemented across Pakistan at all customs stations including sea, air and dry ports. Will ultimately process {{and manage the}} collection of 45% of Pakistan's total tax revenue, connect 30,000 trade related stakeholders and reduce {{customs clearance}} from and average 5-10days to 2hrs-24hrs. But as per Custom Agents it takes 5-10 Days only in examination and Single Consignment which can easily clear in 2 days can take at least 15 Days for clearance due to misbehavement of Customs Authority and Bugs and Errors of System.|$|R
40|$|DMTCP (Distributed MultiThreaded CheckPointing) is a {{transparent}} user-level checkpointing package for distributed applications. Checkpointing and restart is demonstrated {{for a wide}} range of over 20 well known applications, including MATLAB, Python, TightVNC, MPICH 2, OpenMPI, and runCMS. RunCMS runs as a 680 MB image in memory that includes 540 dynamic libraries, and is used for the CMS experiment of the Large Hadron Collider at CERN. DMTCP transparently checkpoints general cluster computations consisting of many nodes, processes, and threads; as well as typical desktop applications. On 128 distributed cores (32 nodes), checkpoint and restart times are typically 2 seconds, with negligible run-time overhead. Typical checkpoint times are reduced to 0. 2 seconds when using forked checkpointing. Experimental results show that checkpoint time remains nearly constant as the number of nodes increases on a medium-size cluster. DMTCP automatically accounts for fork, exec, ssh, mutexes/semaphores, TCP/IP sockets, UNIX domain sockets, pipes, ptys (pseudo-terminals), terminal modes, ownership of controlling <b>terminals,</b> signal <b>handlers,</b> open file descriptors, shared open file descriptors, I/O (including the readline library), shared memory (via mmap), parent-child process relationships, pid virtualization, and other operating system artifacts. By emphasizing an unprivileged, user-space approach, compatibility is maintained across Linux kernels from 2. 6. 9 through the current 2. 6. 28. Since DMTCP is unprivileged and does not require special kernel modules or kernel patches, DMTCP can be incorporated and distributed as a checkpoint-restart module within some larger package. ...|$|R

