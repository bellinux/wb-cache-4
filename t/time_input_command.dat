0|3172|Public
500|$|The {{context-sensitive}} attacks received {{praise and}} criticism. Antista said, [...] " [...] fans will {{be thankful for}} is the triumphant return of the contextual attacks", but added that the control limitations were the [...] "only real problem", as {{the sensitivity of the}} cursor button can result in a failed combo, [...] "And the jump button sends you forward in the direction you're facing automatically." [...] Buchanan noted that the contextual attacks [...] "can prove frustratingly tricky as you have a brief amount of <b>time</b> to <b>input</b> the <b>commands,</b> but the controls on most handsets are quite small".|$|R
40|$|The paper {{introduces}} {{the design and}} computer simulation of the new PDN controller. It is suggested {{as an alternative to}} the traditional PID controller The PID is still popular as an industrial process controller. PDN controller is as simple as PID but it is more effective when dealing with higher-order dynamic systems. Its higher-order derivative gains/compensators (KN, KN- 1,…, K 1, K 0) are able to improve transient performance of the system. In other words, they are able to directly control values of higher-order dynamic components of the system under control. The compensators urge the system to be stabile and respond much faster than in case of using PID controller. One of the components of the PDN controller is a tunable command feed-forward steady state gain (KS) that forces the system to attain the selected set point value or track the selected <b>time</b> varying <b>input</b> <b>command.</b> It helps to track the <b>input</b> <b>commands</b> much faster and more precisely than it could be achieved by using the integral component of the PID controller. The theory in the paper covers the steady state performance, stability issues, and the controller gains tuning strategies to improve the transient responses of the feedback system. The advantages of the PDN controller are thoroughly analyzed and demonstrated by solving the set point input (step) and the tracking a <b>time</b> varying <b>input</b> (ramp) problems. The paper also presents the detailed instructions for selecting and tuning the higher-order derivative compensators of PDN controller for the general case of unknown order stable/unstable plant and particular case of unknown order but stable plant...|$|R
5000|$|Key game system {{improvements}} {{include an}} easier [...] "step" [...] and [...] "avoid" [...] systems, arena walls (rather than ring-out ability on all sides) and wall-specific moves, a three-step Soul Charge system, a clash {{system that is}} used when two attacks would hit each other resulting in a white flash, Guard Break attacks which put a blocking player into a post guard-impact state, just frame moves awarding additional hits to players who could <b>time</b> their <b>command</b> <b>inputs</b> well, and a revised Guard Impact system that removed height-based Impact moves and instead used a more unified system (high and mid attacks are countered using Repels, mid and low attacks are countered using Parries).|$|R
40|$|The project aims at {{building}} a high-level language {{and provides a}} Graphical User Interface for coding animation of Data Structures and algorithms. The software <b>inputs</b> <b>commands</b> from the application’s console and stores it in its database. The interpreter then interprets the <b>input</b> <b>commands</b> and creates objects needed to for animation. These objects are utilized by the application and the code for animation (a Java applet code) is made based on the <b>input</b> <b>commands</b> of the user...|$|R
5000|$|Step 3 {{specifies}} {{the processing}} that is triggered within each unit upon receipt of an <b>input</b> <b>command.</b> For each <b>input</b> <b>command,</b> a state-graph (or statetable or extended finite state automaton) is defined {{that provides a}} plan (or procedure for making a plan) for accomplishing the <b>commanded</b> task. The <b>input</b> <b>command</b> selects (or causes to be generated) an appropriate state-table, the execution of which generates a series of output commands to units at the next lower echelon. The library of state-tables contains a set of statesensitive procedural rules that identify all the task branching conditions and specify the corresponding state transition and output command parameters.|$|R
5000|$|... ? - Operator <b>input</b> <b>command,</b> {{used when}} user's input is required. Usually used with →(variable) ...|$|R
50|$|The {{result of}} step 3 {{is that each}} {{organizational}} unit has for each <b>input</b> <b>command</b> a state-table of ordered production rules, each suitable for execution by an extended finite state automaton (FSA). The sequence of output subcommands required to accomplish the <b>input</b> <b>command</b> is generated by situations (i.e., branching conditions) that cause the FSA to transition from one output subcommand to the next.|$|R
40|$|Viewgraphs on {{implementation}} of <b>input</b> <b>command</b> shaping to reduce vibration in flexible space structures are presented. Goals {{of the research}} are to explore theory of <b>input</b> <b>command</b> shaping to find an efficient algorithm for flexible space structures; to characterize Middeck Active Control Experiment (MACE) test article; and to implement input shaper on the MACE structure and interpret results. Background on input shaping, simulation results, experimental results, and future work are included...|$|R
50|$|A stylus {{is a small}} pen-shaped {{instrument}} {{that is used to}} <b>input</b> <b>commands</b> to a computer screen, mobile device or graphics tablet.|$|R
50|$|The {{terminals}} were proprietary also: {{they were}} similar to standard VT terminals, but with custom firmware programming to support <b>input</b> <b>commands</b> (protected fields).|$|R
5000|$|... #Caption: The game takes {{places in}} the Atlantic Ocean, with letters {{representing}} units and facilities. Players <b>input</b> <b>commands</b> in the prompt below the map.|$|R
50|$|The game's {{interface}} is a text parser, {{which requires}} the player to <b>input</b> <b>commands</b> from a set (but unknown) list {{to have the}} character perform actions.|$|R
5000|$|A deliberative layer, which {{contains}} a task planner {{to generate a}} sequence of operations to reach a certain goal {{with respect to the}} user's <b>input</b> <b>command.</b>|$|R
40|$|In this literature, a new {{nonlinear}} {{digital controller}} is proposed for analyses and designs of sampled-data feedback control systems. The controller {{is derived from}} the converging characteristic of a specified numerical series. The ratios of neighborhoods of the series are formulated as function of the output of the plant and the reference <b>input</b> <b>command,</b> and will be converged to be unities after the output has tracked the reference <b>input</b> <b>command.</b> Two kind of servo system examples are used to illustrate effectiveness of the proposed nonlinear digital controller...|$|R
40|$|<b>Input</b> <b>command</b> shaping for {{temperature}} control of fast-ramp RTP systems is investigated from an open-loop-input point of view, i. e., {{for a given}} desired temperature recipe a set of lamp command profiles is determined such that the resulting set of measured temperatures approaches the desired recipe as closely as possible. Because of the inherent nonlinear behavior of RTP systems, a command shaping method has been developed that iteratively modifies the optimal linear commands {{to compensate for the}} nonlinearities. This method, which has been derived from Iterative Learning Control (ILC), shapes the <b>input</b> <b>commands</b> iteratively so as to minimize the two-norm between a desired output trajectory and the simulated current output trajectory. The technique is applicable to MIMO systems and can handle constraints on the <b>input</b> <b>commands.</b> Application of this method to a fast-ramp oxidation (RTO) and fast-ramp spike anneal(RTA) process for a model of a generic RTP system demonstrates its usefulness for nonlinear systems. ...|$|R
40|$|A {{system for}} and method of {{determining}} an <b>input</b> <b>command</b> profile for substantially any dynamic {{system that can}} be modeled as a linear system, the <b>input</b> <b>command</b> profile for transitioning an output of the dynamic system from one state to another state. The present invention involves identifying characteristics of the dynamic system, selecting a command profile which defines an input to the dynamic system based on the identified characteristics, wherein the command profile comprises one or more pulses which rise and fall at switch times, imposing a plurality of constraints on the dynamic system, {{at least one of}} the constraints being defined in terms of the switch times, and determining the switch <b>times</b> for the <b>input</b> to the dynamic system based on the command profile and the plurality of constraints. The characteristics may be related to poles and zeros of the dynamic system, and the plurality of constraints may include a dynamics cancellation constraint which specifies that the input moves the dynamic system from a first state to a second state such that the dynamic system remains substantially at the second state...|$|R
5000|$|Yet another workfile {{is created}} {{to hold the}} {{instructions}} for the linker. As the linker instructions must end with a line [...] "****" [...] the default terminator {{is used for the}} <b>INPUT</b> <b>command.</b>|$|R
5000|$|This {{is one of}} the few Sierra {{adventure}} games {{where the}} player character has few or no speaking lines. Although the player can <b>input</b> <b>commands</b> such as [...] "ask about brigands", the player character has almost no dialogue.|$|R
50|$|Players can {{customize}} their avatar with {{accessories and}} then embark on an adventure to save Grimnarth, a land imperiled by monsters. In battle, medals with icons corresponding to weapon attacks, magic, recovery items etc. are lined up, and players <b>input</b> <b>commands</b> by flicking the screen.|$|R
40|$|Abstract:- In this literature, a new {{nonlinear}} {{digital controller}} is proposed for analyses and designs of sampled-data feedback control systems. The controller {{is derived from}} the converging characteristic of a specified numerical series. The ratios of neighbourhoods of the series are formulated {{as a function of the}} output of the plant and the reference <b>input</b> <b>command,</b> and will be converged to be unities after the output has tracked the reference <b>input</b> <b>command.</b> Limitation of the series can be applied to get better performance. Two kinds of servo system, a time-delay system, one very high order system and a 2 x 2 multivariable aircraft gas turbine engine are used to illustrate effectiveness of the proposed nonlinear digital controller. Comparisons with other conventional methods are also made...|$|R
40|$|The work {{presented}} here IS a practrcal, non-linear controller deslgn methodology for robot manlpulators that guarantees: llthe robot end-pomt follows an <b>input</b> <b>command</b> vector "closely " when the robot 1 s not constralned b the same <b>Input</b> <b>command</b> vector (used In the unconstralned envtronment, and 21 the contact force {{is a function}} oy the envtronmentl when the robot is constrarned bq the environment. The controller is capable of "handling both types (constrained and unconstralned) of msneuvenngs, and IS robust to bounded uncertalntres In robot dynamtcs. swltch, for t ansitlon between unconstrained and The controller does not need any hardware or software constralned maneuverin. In this destgn method, the structural compllanc o f?he manipulator has also been considered. F, set oy experiments were carned out t...|$|R
30|$|As {{the robot}} is {{designed}} to be controlled and operated by the primary surgeon, this experiment is conducted in a manual-control mode. The objective of this experiment is similar to the auto-feed one, i.e., to verify the performance of the robot in responding to the user’s <b>input</b> <b>commands.</b>|$|R
40|$|A {{nonlinear}} {{digital control}} scheme is proposed for analyses and designs of stable industry processes. It {{is derived from}} the converging characteristic of a specified numerical time series. The ratios of neighbourhoods of the series are formulated {{as a function of the}} output of the plant and the reference <b>input</b> <b>command</b> and will be converted to be unities after the output has tracked the reference <b>input</b> <b>command.</b> Lead compensations are also found by another numerical time series to speed up the system responses on the online adjusting manner. A servosystem, a time-delay system, a high-order system, a very-high-order system, and a 2 × 2 multivariable aircraft gas turbine engine are used to illustrate effectiveness of the proposed nonlinear digital controller. Comparisons with other conventional methods are also made...|$|R
5000|$|... interprets user <b>input</b> into <b>commands</b> the {{computer}} can understand, ...|$|R
25|$|Theater-level <b>input</b> from <b>command</b> {{and service}} {{intelligence}} and counter-intelligence activities.|$|R
50|$|NC Graphics {{focused on}} {{developing}} a surface modelling software product that used polynomial mathematics and {{was driven by}} human-readable <b>input</b> <b>commands</b> based on the APT language. The initial product was called Polyapt and was sold initially to manufacturing companies that specialised in producing lost wax dies for aerofoil and turbine engine blades.|$|R
50|$|Another Applicon {{innovation}} was {{the ability}} to <b>input</b> <b>commands</b> using drawn character recognition. (See Patent 4560830). Early CAD provided a stylus and tablet instead of a mouse for a user interface. The tablet was mapped to the screen i.e. the top-left and bottom-right of the screen and the tablet were mapped to the same points.|$|R
5000|$|Here-document, {{a way of}} specifying {{text for}} <b>input</b> in <b>command</b> line shells ...|$|R
30|$|Fingertip {{position}} {{is one of}} the most practical information for egocentric vision-based human-computer interaction, such as the user <b>inputs</b> <b>command</b> via a virtual keyboard. Fingertip detection can directly benefit or suffer from the precision of the hand segmentation. Therefore, we use a simple fingertip detection method to further evaluate our hand segmentation method from the practical point of view.|$|R
50|$|The A320 is the world’s first {{airliner}} {{with digital}} fly-by-wire (FBW) flight control system: <b>input</b> <b>commands</b> through the side-stick are interpreted by flight control computers and transmitted to {{flight control surfaces}} within the flight envelope protection; in the 1980s the computer-controlled dynamic system of the Dassault Mirage 2000 fighter cross-fertilised the Airbus team which tested FBW on an A300.|$|R
40|$|The work {{presented}} here IS e controller design methodology for robot menlpulators be sed on the Input-output functlonel reletlonShlps [26) in the dynamic {{behavior of the}} robot menlpuletor end environment. ThiS controller guarentees: 1) the robot end-point follows an <b>Input</b> <b>command</b> vector "clOsely " when the robot is not constrelned by the environment, end 2) the contact force IS e function of the same <b>Input</b> <b>command</b> vector [used In the unconstrained environment) when the robot is constreined by the environment. The controller IS capable of "handling " both types of constrained and unconstrained maneuvenngs, end IS robust to bounded uncertainties in the robot dynamics. The controller does not need eny hardware or software switch for the transition between unconstrained end constreined maneuvenng. A set Of experiments {{has been carried out}} In reference 14 end 15 to show how this unified approach can develop compliant motion In e constrelned maneuvenng. 1...|$|R
500|$|The A320 is the world’s first {{airliner}} {{with digital}} fly-by-wire (FBW) flight control system: <b>input</b> <b>commands</b> through the side-stick are interpreted by flight control computers and transmitted to {{flight control surfaces}} within the flight envelope protection; in the 1980s the computer-controlled dynamic system of the Dassault Mirage 2000 fighter cross-fertilised the Airbus team which tested FBW [...] on an A300.|$|R
40|$|Viewgraphs on {{controlled}} structures technology {{presented at}} the steering committee workshop on 22 - 23 Jan. 1992 are included. Topics addressed include: interferometer testbed; middeck 0 -gravity dynamics experiment; middeck active control experiment; multivariable identification for control; strain actuated aeroelastic control; sensor/actuator technology development; <b>input</b> <b>command</b> shaping; and other research projects. A description of the organization and committee are included...|$|R
50|$|The overall {{gameplay}} {{is similar}} to this of the run-and-gun classic Ikari Warriors, with the players battling {{their way up the}} top-down perspective screen. The players can choose between three ninja characters, all with differing abilities. Each of them has fighting game-style <b>input</b> <b>commands</b> that unleash their scroll-based ninpo special moves. As usual in the genre, the game's stages end with boss battles.|$|R
50|$|The glove has {{traditional}} NES controller {{buttons on}} the forearm {{as well as a}} program button and buttons labeled 0-9. The user presses the program button and a numbered button to <b>input</b> <b>commands,</b> such as changing the firing rate of the A and B buttons. Along with the controller, the player can perform various hand motions to control a character on-screen.|$|R
5000|$|CMAC {{becomes a}} state machine {{when some of}} its outputs are fed {{directly}} back to the input, so RCS-1 was implemented {{as a set of}} state-machines arranged in a hierarchy of control levels. At each level, the <b>input</b> <b>command</b> effectively selects a behavior that is driven by feedback in stimulus-response fashion. CMAC thus became the reference model building block of RCS-1, as shown in the figure.|$|R
