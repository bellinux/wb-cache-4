59|10000|Public
25|$|External {{security}} {{involves a}} request from outside the computer, such as a login at a connected console {{or some kind of}} network connection. External requests are often passed through device drivers to the operating system's kernel, where they can be passed onto applications, or carried out directly. Security of operating systems has long been a concern because of highly sensitive data held on computers, both of a commercial and military nature. The United States Government Department of Defense (DoD) created the <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria (TCSEC) which is a standard that sets basic requirements for assessing the effectiveness of security. This became of vital importance to operating system makers, because the TCSEC was used to evaluate, classify and select trusted operating systems being considered for the processing, storage and retrieval of sensitive or classified information.|$|E
5000|$|... a TCSEC {{security}} {{class in}} the <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria ...|$|E
5000|$|C2, a {{computer}} security class, {{defined in the}} <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria ...|$|E
50|$|He was {{previously}} a {{manager of the}} <b>Trusted</b> <b>Computer</b> <b>Systems</b> Department of The Aerospace Corporation. Porras holds 12 U.S. patents, and was named an SRI Fellow in 2013.|$|R
50|$|In 1984, a {{research}} {{group called the}} Secure Computing Technology Center (SCTC) was formed at Honeywell in Minneapolis, Minnesota. The centerpiece of SCTC was its work on security-evaluated operating systems for the NSA. This work included the Secure Ada Target (SAT) and the Logical Coprocessing Kernel (LOCK), both {{designed to meet the}} stringent A1 level of the <b>Trusted</b> <b>Computer</b> <b>Systems</b> Evaluation Criteria (TCSEC).|$|R
40|$|FOREWORD The Trusted Product Evaluation Questionnaire is {{the latest}} in a series of {{technical}} documents that are being published by the National Computer Security Center under the Technical Guidelines Programs. It is the goal of the Technical Guidelines Program to assure that each process in the Trusted Product Evaluation Program and the features of the Department of Defense <b>Trusted</b> <b>Computer</b> <b>Systems</b> Evaluation Criteria will be discussed in detail and provide the proper interpretations with specific guidance. These publications are designed to provide insight to the Department of Defense <b>Trusted</b> <b>Computer</b> <b>Systems</b> Evaluation Criteria requirements for the computer security vendor and developer, as well as the technical evaluator. The specific questions in the Trusted Product Evaluation Questionnaire provide a set of good practices related to necessary system security and system security documentation. This questionnaire has been written to help the vendor understand what technical information is required concerning the system for a product evaluation. From the vendor's responses, the evaluator may obtain an understanding of the security of the system applying for evaluation. As the Director, National Computer Security Center, I invite your recommendations for revision to this technical guideline. We plan to review this document when the need arises...|$|R
5000|$|A1, a {{class of}} {{computer}} security specified in the <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria ...|$|E
5000|$|B2, a {{subclass}} {{of security}} level B {{as defined by}} <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria (TCSEC) standards ...|$|E
50|$|Systems {{evaluated}} at B3 {{and above}} by the <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria (TCSEC) must enforce the reference monitor concept.|$|E
40|$|<b>Computer</b> <b>systems</b> are {{routinely}} deployed in life- and missioncritical situations, yet {{in most cases}} their security, safety or dependability cannot be assured to the degree warranted by the application. In other words, <b>trusted</b> <b>computer</b> <b>systems</b> are rarely really trustworthy. We {{believe that this is}} highly unsatisfactory, and have embarked on a large research program aimed at bringing reality in line with expectations. In this paper we describe NICTA’s research agenda for achieving true trustworthiness in systems. We report on what has been achieved to date, and what our plans are for the next 3 – 5 years...|$|R
40|$|An {{analysis}} of the incomprehensibility of large, complex <b>computer</b> <b>systems</b> is made. The thesis Is that there is strong relationship between system incomprehensibility and the necessity to <b>trust</b> <b>computer</b> <b>systems.</b> A cogent definition of incomprehensi- bility in <b>computer</b> <b>systems</b> is established, with common themes drawn from interdisciplinary literature dealing wtth computers and society. Reasons {{for the creation of}} Incomprehensible <b>computer</b> <b>systems</b> are explored, as well as the consequences (both technical and social) of using and relying on them. The relationship between the real and perceived purposes of <b>computer</b> <b>systems</b> and the appropHateness of. trusting these systems Is analyzed [...] Approaches for dealing with the existence of vital <b>computer</b> <b>systems</b> which are functionally Incomprehensible are evaluated, and positive suggestions are made...|$|R
40|$|This paper {{examines}} some of {{the beginnings}} of paradigm shifts in computer security. It focuses on formal models of computer security from an historical perspective. Surprisingly perhaps, the historical perspective reveals dramatic shifts. These shifts {{take the form of}} extensions, in several directions, to early formal modeling. From them we believe we can learn much and discern new growth directions that have a solid basis in the current technology of <b>trusted</b> <b>computer</b> <b>systems.</b> We do not present a complete list of formal computer security models; for example, the formal model for the Multinet Gateway [l] is not discussed. It may be that the framework we use is applicable to them, or at least partly applicable. Mor...|$|R
50|$|In July 1995, Windows NT 3.5 with Service Pack 3 {{was rated}} by the National Security Agency as {{complying}} with <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria (TCSEC) C2 criteria.|$|E
50|$|The Snare {{series of}} agents began life in 2001 {{when the team}} at InterSect Alliance created a Linux kernel module to {{implement}} <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria auditing at the C2 level.|$|E
50|$|The <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria (TCSEC) {{concept of}} trusted {{computing}} base (TCB) minimization {{is a far more}} stringent requirement that is only applicable to the functionally strongest assurance classes, viz., B3 and A1 (which are evidentiarily different but functionally identical).|$|E
40|$|Since attackers <b>trust</b> <b>computer</b> <b>systems</b> to {{tell them}} the truth, it may be {{effective}} for those systems to lie or mislead. This could waste the attacker's resources while permitting time to organize a bet-ter defense, and would provide a second line of defense when access controls have been breached. We propose here a probabilistic model of attacker beliefs in each of a set of "generic excuses " (in-cluding deception) for their inability to accomplish their goals. We show how the model can be up-dated by evidence presented to the attacker and feedback from the attacker's own behavior. We show some preliminary results with human sub-jects supporting our theory. We show how this analysis permits choosing appropriate times and methods to deceive the attacker...|$|R
40|$|Through neglect, the {{national}} capability {{to design and}} construct <b>trusted</b> <b>computers</b> and networks has begun to atrophy. Not only has the information infrastructure been built weakly, but also our capability to strengthen it continues to decline. The Nation is now lacking in both {{the research and development}} talent to produce trusted computing systems and the educational infrastructure to create this talent. The Center for INFOSEC Studies and Research (CISR) in Monterey, California, proposes a three-pronged approach to strengthen {{the national}} information infrastructure and reinvigorate the national capability to produce trustworthy computing systems. First, we describe our Trusted Computing Exemplar project as a worked example of how trusted computing systems and components can be constructed. Second, we define a national research initiative to advance the theoretical foundations for trusted computing and to produce a set of automated tools to support the development of high assurance systemsand third, we define an education at initiative based on nascent information Assurance education programs and the Trusted Computing Exemplar to provide a framework for <b>Trusted</b> <b>Computer</b> Development education. The result of this multi-faceted approach will be to increase the security of the national Information Infrastructure by increasing the availability of: <b>Trusted</b> <b>Computer</b> <b>systems</b> and components, <b>Trusted</b> <b>Computer</b> development tools, and <b>Trusted</b> <b>Computer</b> developers, evaluators and educators...|$|R
40|$|This paper {{appeared}} in the 2004 Computer Security Applications Conference, Tucson, AZ, December. Since attackers <b>trust</b> <b>computer</b> <b>systems</b> {{to tell them the}} truth, it may be effective for those systems to lie or mislead. This could waste the attacker's resources while permitting time to organize a better defense, and would provide a second line of defense when access controls have been breached. We propose here a probabilistic model of attacker beliefs in each of a set of "generic excuses" (including deception) for their inability to accomplish their goals. We show how the model can be updated by evidence presented to the attacker and feedback from the attacker's own behavior. We show some preliminary results with human subjects supporting our theory. We show how this analysis permits choosing appropriate times and methods to deceive the attacker. supported by the U. S. National Science Foundation under the Cyber Trust progra...|$|R
50|$|In 1985, Multics {{was issued}} {{certification}} as a B2 level {{secure operating system}} using the <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria from the National Computer Security Center (NCSC) {{a division of the}} NSA, the first operating system evaluated to this level.|$|E
5000|$|FIPS 140-1 {{required}} evaluated {{operating systems}} that referenced the <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria (TCSEC) classes C2, B1 and B2. However, TCSEC {{is no longer}} in use and has been replaced by the Common Criteria. Consequently, FIPS 140-2 now references the Common Criteria.|$|E
50|$|Blacker (styled BLACKER) is a U.S. Department of Defense {{computer}} network security project designed to achieve A1 class {{ratings of the}} <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria (TCSEC). The project was implemented by SDC and Burroughs. It was the first secure system with trusted End-to-end encryption on the United States' Defense Data Network.|$|E
40|$|All too often, {{decisions}} about whom to <b>trust</b> in <b>computer</b> <b>systems</b> {{are driven by}} the needs of system management rather than data security. In particular, data storage is often entrusted {{to people who have}} no role in creating or using the data [...] -through outsourcing of data management, hiring of outside consultants to administer servers, or even collocation servers in physically insecure machine rooms to gain better network connectivity. This pape...|$|R
40|$|Efficient {{caring for}} the patient's {{information}} is {{an important aspect of}} {{caring for the}} patient. If these processes are possible to monitor anytime anywhere as per the patients' and doctors desecrations the cost of patient care could be minimised. In this connection, Ubiquitous Sensor Network is playing a key role on communication between physicians and patients as well as information sharing among health care providers with rapid access to medical information through reliable and <b>trusted</b> <b>computer</b> network <b>systems.</b> This paper argues possibilities of such scenarios by introducing a ubiquitous sensor network in patient care for 21 st century's requirements and standards...|$|R
40|$|The National Information Infrastructure is weak; {{there are}} no high security, high assurance, {{off-the-shelf}} products available {{that can be used}} to strengthen it; and the National capability to design and construct such <b>trusted</b> <b>computer</b> <b>systems</b> and networks has atrophied. The purpose of the Trusted Computing Exemplar project is to provide a worked example to show how trusted computing systems and components can be constructed. A prototype high assurance development framework will be created first, and then used to produce a reference implementation trusted computing component the Embedded MicroKernel Prototype. A third-party evaluation of the component will be initiated during development (e. g., once the high-level design documentation is written). The documentation, source code, development framework and other deliverables will be made openly available as they are produced. We will develop a high assurance, embedded micro-kernel and a trusted application built on top of the micro-kernel as a reference implementation exemplar for trusted computing. Because the product as well as the process will be showpieces for trusted computing development, high assurance methodologies and techniques will be applied during the entire lifecycle. The goal is to produce a very small, portable component that will provide users with correct security operation and an a priori assurance against system subversion...|$|R
5000|$|During his life, Schell {{originated}} several security {{design and}} evaluation techniques and holds patents in cryptography and authentication. He has {{been referred to}} as the [...] "father" [...] of the <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria (the [...] "Orange Book"). The NIST and NSA have recognized Dr. Schell with the National Computer System Security Award.|$|E
50|$|In {{his essay}} Rule Set Modeling of a <b>Trusted</b> <b>Computer</b> <b>System,</b> Leonard LaPadula {{describes}} how the Generalized Framework for Access Control (GFAC) approach could be implemented in the Unix System V operating system. He introduced the clear separation between Access Enforcement Facility (AEF), Access Decision Facility (ADF) with Access Control Rules (ACR) and Access Control Information (ACI).|$|E
50|$|Labeled Security Protection Profile (LSPP) is a {{protection}} profile within the Common Criteria for Information Technology Security Evaluation, {{a set of}} security functional and assurance requirements for IT products. The LSPP requirements are derived from the B1 class of the US Department of Defense security standard called <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria (TCSEC) which was originally published in 1985.|$|E
40|$|The use of {{networks}} is growing continuously, constantly increasing {{the vulnerability of}} the <b>computer</b> <b>systems</b> that use them. So network security {{plays an important role in}} the security of the operating system. The problem of network security needs to be dealt with by extending the concepts used to build <b>trusted</b> <b>computer</b> <b>systems</b> and using cryptographic mechanisms. We propose and implement a network security architecture which builds on earlier efforts like the one used in DTOS [19]. The implementation involves modifying the FreeBSD TCP/IP stack within the Flask secure operating system. The network security architecture consists of two major components: network access control and network cryptographic protection. The network access control module deals with controlling access to the network related operations in a secure manner. This involves operations initiated by the local process and operations initiated by the remote process as well. It makes use of the security server provided by Flask for making the access control decisions. The network cryptographic protection module provides encryption and authentication on the network traffic. It uses the IPsec protocol [4, 2, 3] for implementing the cryptographic operations and the ISAKMP protocol [17, 12] for key management. Covert storage channels caused by the use of shared resources such as the port number space will be eliminated by creating a virtualized port number space. To our knowledge there are no systems which support multi-level TCP/UDP port number spaces (or virtualized port spaces). Contents...|$|R
40|$|This paper {{proposes a}} {{security}} architecture {{for the basic}} cross indexing systems emerging as foundational structures in current health information systems. In these systems unique identifiers are issued to healthcare providers and consumers. In most cases, such numbering schemes are national in scope and must therefore necessarily be used via an indexing system to identify records contained in pre-existing local, regional or national health information systems. Most large scale electronic health record systems envisage that such correlation between national healthcare identifiers and pre-existing identifiers will be performed by some centrally administered cross referencing, or index system. This paper {{is concerned with the}} security architecture for such indexing servers {{and the manner in which}} they interface with pre-existing health systems (including both workstations and servers). The paper proposes two required structures to achieve the goal of a national scale, and secure exchange of electronic health information, including: (a) the employment of high <b>trust</b> <b>computer</b> <b>systems</b> to perform an indexing function, and (b) the development and deployment of an appropriate high trust interface module, a Healthcare Interface Processor (HIP), to be integrated into the connected workstations or servers of healthcare service providers. This proposed architecture is specifically oriented toward requirements identified in the Connectivity Architecture for Australia’s e-health scheme as outlined by NEHTA and the national e-health strategy released by the Australian Health Ministers...|$|R
40|$|This article {{addresses}} <b>trust</b> in <b>computer</b> <b>systems</b> as {{a social}} phenomenon, which depends {{on the type of}} relationship that is established through the computer, or with other individuals. It starts by theoretically contextualizing trust, and then situates trust in the field of computer science. Then, describes the proposed model, which builds on what one perceives to be trustworthy and is influenced by a number of factors such as the history of participation and user's perceptions. It ends by situating the proposed model as a key contribution for leveraging trustful interactions and ends by proposing it used to serve as a complement to foster user's trust needs in what concerns Human-computer Iteration or Computermediated Interactions...|$|R
50|$|<b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria (TCSEC) is a United States Government Department of Defense (DoD) {{standard}} that sets basic requirements {{for assessing the}} effectiveness of computer security controls built into a computer system. The TCSEC was used to evaluate, classify and select computer systems being considered for the processing, storage and retrieval of sensitive or classified information.|$|E
50|$|The XTS-400 {{has been}} preceded by several {{evaluated}} ancestors, all {{developed by the}} same group: Secure Communications Processor (SCOMP), XTS-200, and XTS-300. All of the predecessor products were evaluated under <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria (TCSEC) (a.k.a. Orange Book) standards. SCOMP completed evaluation in 1984 at the highest functional and assurance level then in place: A1. Since then the product has evolved from proprietary hardware and interfaces to commodity hardware and Linux interfaces.|$|E
5000|$|In {{computer}} security, discretionary {{access control}} (DAC) {{is a type of}} access control defined by the <b>Trusted</b> <b>Computer</b> <b>System</b> Evaluation Criteria [...] "as a means of restricting access to objects based on the identity of subjects and/or groups to which they belong. The controls are [...] in the sense that a subject with a certain access permission is capable of passing that permission (perhaps indirectly) on to any other subject (unless restrained by mandatory access control)".|$|E
40|$|Abstract:-An Intrusion {{detection}} system (IDS) is {{software and hardware}} designed to detect unwanted attempts at accessing, manipulating, or disabling of <b>computer</b> <b>systems,</b> mainly through a network, such as the Internet. An intrusion {{detection system}} is used to detect several types of malicious behaviors that can compromise the security and <b>trust</b> of a <b>computer</b> <b>system.</b> This includes network attacks against vulnerable services, data driven attacks on applications, host based attacks such as privilege escalation, unauthorized logins and access to sensitive files, and malwares. This paper proposes how to prevent the above hazards in the web server area with a base of HTTP and FTP protocols by filtering the IP’s of the hosts. Moreover we consider the other hazardous files such as unwanted images, banners, attacker’s sites, and proble...|$|R
40|$|Trust {{cannot be}} uniform across wide-area networks. There are regions of local trust. Within {{a region of}} trust, {{there can be a}} set of {{software}} components (object managers) that are mutually trusting for the purposes of object sharing, but more global trust models should also be supported. This paper describes such a model and proposes a protocol that exploits local trust to achieve high performance even when objects can migrate between trust domains. Introduction Islands of trust arise in the Internet because <b>trust</b> in <b>computer</b> <b>systems</b> and their software is largely based on confidence in the local administrators of systems and their managers. Each such region of local trust often corresponds to a corporate Intranet. Cooperative working and object sharing extends across the boundaries of local trust domains, for example when several companies collaborate in an engineering or construction project. This corresponds to the 'virtual enterprise' model for cooperation [BP 95]. When this occu [...] ...|$|R
40|$|Is {{the use of}} {{computer}} algebra technology beneficial for mechanised reasoning in and about mathematical domains? Usually {{it is assumed that}} it is. Many works in this area, however, either have little reasoning content, or use symbolic computation only to simplify expressions. In work that has achieved more, the used methods do not scale up. They <b>trust</b> the <b>computer</b> algebra <b>system</b> either too much or too little. <b>Computer</b> algebra <b>systems</b> are not as rigorous as many provers. They are not logically sound reasoning systems, but collections of algorithms. We classify soundness problems that occur in <b>computer</b> algebra <b>systems.</b> While many algorithms and their implementations are perfectly trustworthy, the semantics of symbols is often unclear and leads to errors. On the other hand, more robust approaches to interface external reasoners to provers are not always practical because the mathematical depth of proofs algorithms in computer algebra are based on can be enormous. Our own approach takes [...] ...|$|R
