263|1020|Public
25|$|The second variant, with {{substantial}} improvements, appeared in March 2010, apparently because its authors believed that Stuxnet was not spreading fast enough; a third, with minor improvements, appeared in April 2010. The worm contains a component with a build <b>time-stamp</b> from 3 February 2010. In the United Kingdom on 25 November 2010, Sky News {{reported that it}} had received information from an anonymous source at an unidentified IT security organization that Stuxnet, or {{a variation of the}} worm, had been traded on the black market.|$|E
5000|$|Intel {{processor}} families increment the <b>time-stamp</b> counter differently: ...|$|E
5000|$|RFC 3161 [...] "Internet X.509 Public Key Infrastructure <b>Time-Stamp</b> Protocol (TSP)".|$|E
50|$|ISO/IEC 18014-3:2004 {{describes}} <b>time-stamping</b> services producing linked tokens, that is, tokens {{that are}} cryptographically bound to other tokens produced by these <b>time-stamping</b> services. It describes a general model for <b>time-stamping</b> services {{of this type}} and the basic components used to construct a <b>time-stamping</b> service of this type, it defines the data structures and protocols used to interact with a <b>time-stamping</b> service of this type, and it describes specific instances of such <b>time-stamping</b> services.|$|R
40|$|The {{technique}} of electronic <b>time-stamping</b> allows a client {{to get an}} electronic proof {{of the existence of}} a document at a specific point in time. A simple way to achieve this is to produce a digital signature over the pair (document, time). Linked <b>time-stamps</b> have an advantage over these simple <b>time-stamps</b> because they construct a verifiable link between <b>time-stamps.</b> In this paper, we discuss how to include linked <b>time-stamps</b> in the OASIS Digital Signature Services standard. We highlight the problem points when introducing a sub-profile of this standard, and we describe some additional structures that are needed to accommodate a broad range of linked <b>time-stamping</b> schemes. status: publishe...|$|R
40|$|Efficient secure <b>time-stamping</b> schemes {{employ a}} 2 -level {{approach}} {{in which the}} <b>time-stamping</b> service operates in rounds. We say that a <b>time-stamping</b> service is accountable if if it makes the TSA and other authorities accountable for their actions by enabling a principal to detect and later prove to a judge any frauds, including attempts to reorder <b>time-stamps</b> from the same round. We investigate the paradigm of <b>time-stamping</b> services based on simply connected graphs, and propose a simple, yet optimal, accountable <b>time-stamping</b> service, using what we call threaded tree schemes. We improve upon the previously best scheme by Buldas and Laud by reducing {{the size of a}} time stamp by a factor of about 3. 786 and show that our construction is optimal in a strict sense. The ne...|$|R
50|$|A time-stamping service {{provides}} {{evidence that}} a data item existed before {{a certain point in}} time. <b>Time-stamp</b> services produce <b>time-stamp</b> tokens, which are data structures containing a verifiable cryptographic binding between a data item's representation and a time-value. This part of ISO/IEC 18014 defines time-stamping mechanisms that produce independent tokens, which can be verified one by one.|$|E
50|$|Linking {{creates a}} verifiable and ordered {{cryptographic}} {{link between the}} current and already issued <b>time-stamp</b> tokens.|$|E
50|$|With this container, {{a single}} file object is {{associated}} with a signature or time assertion file. A “mimetype” file that specifies the media type might also be included in this container. When a mimetype file is included, it is required to be the first file in the ASiC container. This container type will allow additional signatures to be added in the future to be used to sign stored file objects. When long term <b>time-stamp</b> tokens are used, ASiC Archive Manifest files are used to protect long term <b>time-stamp</b> tokens from tampering.|$|E
5000|$|ISO/IEC 18014 Information {{technology}} — Security techniques — <b>Time-stamping</b> {{services is}} an international standard that specifies <b>time-stamping</b> techniques. It comprises three parts: ...|$|R
40|$|Abstract. The {{technique}} of electronic <b>time-stamping</b> allows a client {{to get an}} electronic proof {{of the existence of}} a document at a specific point in time. A simple way to achieve this is to produce a digital signature over the pair (document,time). Linked <b>time-stamps</b> have an advantage over these simple <b>time-stamps</b> because they construct a verifiable link between <b>time-stamps.</b> In this paper, we discuss how to include linked timestamps in the OASIS Digital Signature Services standard. We highlight the problem points when introducing a sub-profile of this standard, and we describe some additional structures that are needed to accommodate a broad range of linked <b>time-stamping</b> schemes...|$|R
50|$|Next, in 2005 it {{was shown}} that bounded <b>time-stamping</b> schemes with a trusted audit party (who {{periodically}} reviews the list of all <b>time-stamps</b> issued during an aggregation period) can be made universally composable - they remain secure in arbitrary environments (compositions with other protocols and other instances of the <b>time-stamping</b> protocol itself).|$|R
50|$|There is no IETF RFC or {{standard}} draft about linking based time-stamping. RFC 4998 (Evidence Record Syntax) encompasses hash {{tree and}} <b>time-stamp</b> as an integrity guarantee for long-term archiving.|$|E
50|$|CAdES-T: B-Level {{for which}} a Trust Service Provider has {{generated}} a trusted token (time-mark or <b>time-stamp</b> token) proving that the signature itself actually existed at a certain date and time.|$|E
50|$|Usually the <b>Time-Stamp</b> object {{represents}} an absolute time in milliseconds after midnight {{and the number}} of days since January 1, 1984. This is a bit sequence of length 48 (6 bytes).|$|E
40|$|Abstract. Efficient secure <b>time-stamping</b> schemes {{employ a}} 2 -level {{approach}} {{in which the}} <b>time-stamping</b> service operates in rounds. We say that a <b>time-stamping</b> service is accountable if if it makes the TSA and other authorities accountable for their actions by enabling a principal to detect and later prove to a judge any frauds, including attempts to reorder <b>time-stamps</b> from the same round. We investigate the paradigm of <b>time-stamping</b> services based on simply connected graphs, and propose a simple, yet optimal, accountable <b>time-stamping</b> service, using what we call threaded tree schemes. We improve upon the previously best scheme by Buldas and Laud by reducing {{the size of a}} time stamp by a factor of about 3. 786 and show that our construction is optimal in a strict sense. The new protocols also increase the trustworthiness of the publication process, which takes place {{at the end of each}} round. ...|$|R
40|$|A {{model for}} a {{historical}} database is described which is based upon <b>time-stamped</b> tuples as the unit of storage. The model includes both physical and logical <b>time-stamps.</b> The techni-cal characteristics of write-once laser discs prevent the use of double logical <b>time-stamps.</b> The model distinguishes version from correction-updates. It is shown that if set-valued attributes are involved the use of null values is unavoidable if back-dated correction-updates are allowed. A method of handling user-defined integrity constraint rules is outlined which involves the mainte-nance of a <b>time-stamped</b> trace of such rules...|$|R
40|$|Abstract. We {{discuss the}} {{availability}} questions that arise when digital time stamps {{are used for}} preserving the evidentiary value of electronic documents. We analyze the <b>time-stamping</b> protocols known to date and point out some weaknesses {{that have not been}} addressed so far in scientific literature. Without addressing and solving them, any advantage of the linkage-based protocols over the hash-and-sign <b>time-stamping</b> would be questionable. We present several new techniques and protocols for improving the availability of both the hash-and-sign and the linkage-based <b>time-stamping</b> services. We introduce fault-tolerant linking as a new concept to neutralize fault-sensitivity as the main weakness of linkage-based <b>time-stamping.</b> ...|$|R
5000|$|ASiC Baseline Profile. ASiC (Associated Signature Containers) {{specifies}} {{the use of}} container {{structures to}} bind together one or more signed objects with either advanced electronic signatures or <b>time-stamp</b> tokens into one single digital (zip) container.|$|E
50|$|In {{the final}} scene the Utopians have taken Goal to the <b>time-stamp</b> on which Elysium crashed. She settles on Deponia and grieves nobody will {{remember}} Rufus {{and what he did}} to prevent the demolition of Deponia twice.|$|E
50|$|The {{high-resolution}} timestamp is encoded as unsigned32 with {{a resolution}} of 1 microsecond {{which means that the}} time counter restarts every 72 minutes. It is configured by mapping the high resolution <b>time-stamp</b> (object 1013h) into a PDO.|$|E
5000|$|Linked timestamping is {{inherently}} more secure than the usual, public-key signature based <b>time-stamping.</b> All consequential <b>time-stamps</b> [...] "seal" [...] previously issued ones - hash chain (or other authenticated dictionary in use) {{could be built}} only in one way; modifying issued <b>time-stamps</b> is nearly as hard as finding a preimage for the used cryptographic hash function. Continuity of operation is observable by users; periodic publications in widely witnessed media provide extra transparency.|$|R
40|$|A <b>time-stamped</b> graph is an {{extension}} of the concept of a collaboration graph which accounts for the relative timing of collaborations. Edges, corresponding to specific acts of collaboration, are labeled with <b>time-stamps.</b> In a <b>time-stamped</b> graph H, vertex Q influences vertex R iff there is a non-decreasing path from Q to R in H. Given a <b>time-stamped</b> graph H, the associated influence digraph of H is the digraph on the vertex set of H with an arc from Q to R iff Q influences R in H. One question that can be asked: Given a graph G, what is the smallest number of vertices that must be added to the vertex set of G so that G is an induced subdigraph of the associated influence digraph of some <b>time-stamped</b> graph H on that expanded vertex set? Cheng, Grossman, and Lipman conjectured that for trees with n vertices {{the answer to this question}} is n- 2. In this paper the conjecture is verified for paths...|$|R
3000|$|... by <b>time-stamping</b> {{the packet}} at the MAC layer (i.e., {{the time when}} the packet is {{received}} at the MAC layer) instead of <b>time-stamping</b> the packet at the application layer. Similarly, when responding to the Loc_ack packet, the locator puts the local time [...]...|$|R
50|$|The <b>Time-Stamp</b> Protocol, or TSP is a {{cryptographic}} {{protocol for}} certifying timestamps using X.509 certificates and public key infrastructure. The timestamp is the signer's assertion that {{a piece of}} electronic data existed at or before a particular time.|$|E
5000|$|A [...] "trace" [...] {{is simply}} a logging {{of a set of}} data {{regarding}} the performance of the storage device, focusing on the I/O requests: how many read/write operations, the size of each request, the exact address (LUN-wise), and a <b>time-stamp.</b>|$|E
50|$|Email {{systems and}} other {{messaging}} systems (IRC chat, etc.) <b>time-stamp</b> messages using UTC, or else include the sender's time zone {{as part of}} the message, allowing the receiving program to display the message's date and time of sending in the recipient's local time.|$|E
5000|$|<b>Time-stamping</b> was {{designed}} to circumvent the trust warning that {{will appear in the}} case of an expired certificate. In effect, <b>time-stamping</b> extends the code trust beyond the validity period of a certificate. [...] In the event that a certificate has to be revoked due to a compromise, a specific date and time of the compromising event will become part of the revocation record. In this case, <b>time-stamping</b> helps establish whether the code was signed before or after the certificate was compromised.|$|R
5000|$|... #Caption: Example {{newspaper}} {{publication of}} hash-linked <b>time-stamping</b> service ...|$|R
5000|$|... #Caption: London Penny Post {{postmark}} & heart-shaped <b>Time-stamps.</b>|$|R
5000|$|... where [...] is the {{integral}} image at [...] and [...] the image dimension. The notation [...] correspond {{in the example}} to , , , [...] and [...] In neuroimaging, for example, the images have dimension [...] or , when using voxels or voxels with a <b>time-stamp.</b>|$|E
50|$|In 2009 CO {{has been}} {{characterized}} as a major concurrency control method, together with the previously known (since the 1980s) three major methods: Locking, <b>Time-stamp</b> ordering, and Serialization graph testing, and as an enabler for the interoperability of systems using different concurrency control mechanisms.|$|E
50|$|The TSA {{periodically}} publishes some links, so {{that all}} previously issued <b>time-stamp</b> tokens depend on the published link {{and that it is}} practically impossible to forge the published values. By publishing widely witnessed links, the TSA creates unforgeable verification points for validating all previously issued time-stamps.|$|E
40|$|Binary Linking Schemes #BLS# {{for digital}} <b>time-stamping</b> # 3 # provide # 1 # {{relative}} temporal authentication {{to be performed}} in logarithmic time, and # 2 # time-certi#cates of reasonable size, which together with the data published in a widely available medium enable the veri#er to establish their relative temporal positions, even if the database held by the <b>Time-Stamping</b> Service #TSS# ceases to exist. Weshow {{that the size of}} a time-certi#cate ##X# of a document X in the scheme presented in # 3 # is bounded by 4 # log 2 N where k is the output size of the hash function and N is the number of <b>time-stamps</b> issued. We then present a new BLS with # #X# # 6 log 2 3 # k # log 2 N and prove that the presented scheme is optimal in that sense. 1 Introduction <b>Time-stamps</b> enable an incredulous veri#er to ascertain the date a digital documentwas created, signed or last modi#ed. Most of the <b>time-stamping</b> systems proposed to date are based on trusted third parties and are, thereby, more or less [...] ...|$|R
5000|$|Describes {{a general}} model for <b>time-stamping</b> {{services}} producing linked tokens.|$|R
40|$|We {{state the}} basic {{requirements}} for <b>time-stamping</b> systems applicable as the necessary {{support to the}} legal use of electronic documents. We analyze the main drawbacks of the <b>time-stamping</b> systems proposed to date and present a new system that meets all the stated requirements. We prove that these requirements cannot be significantly tightened...|$|R
