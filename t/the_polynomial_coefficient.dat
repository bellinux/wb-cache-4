18|10000|Public
5000|$|The [...] are {{orthogonal}} polynomial coefficient estimators. [...] (a function detailed in) projects {{the estimate of}} <b>the</b> <b>polynomial</b> <b>coefficient</b> [...] to the desired estimation time [...] The MFOE parameter 0≤≤1 can apply {{a fraction of the}} projected coefficient estimate.|$|E
5000|$|... {{function}} b = horner(a,x) % Input a is <b>the</b> <b>polynomial</b> <b>coefficient</b> vector, x {{the value}} {{to be evaluated}} at. % The output y is the evaluated polynomial and b the divided coefficient vector. b(1) = a(1); for i = 2:length(a) b(i) = a(i)+x*b(i-1); end y = b(length(a)); b = b(1:length(b)-1);end ...|$|E
50|$|The Jacobian has 10 columns, one {{for each}} of the {{parameters}} a00 − a03, and 35 rows, {{one for each}} pair of v and w values. Each row has the formThe convolution coefficients are calculated asThe first row of C contains 35 convolution coefficients, which can be multiplied with the 35 data values, respectively, to obtain <b>the</b> <b>polynomial</b> <b>coefficient</b> , which is the smoothed value at the central node of the kernel (i.e. at the 18th node of the above table). Similarly, other rows of C can be multiplied with the 35 values to obtain other polynomial coefficients, which, in turn, can be used to obtain smoothed values and different smoothed partial derivatives at different nodes.|$|E
5000|$|... {{are given}} by <b>the</b> <b>polynomial</b> <b>coefficients</b> {{obtained}} from equation ...|$|R
30|$|The {{following}} result {{shows that}} <b>the</b> <b>polynomial</b> <b>coefficients</b> in Theorem A {{can be extended}} to rational functions.|$|R
3000|$|... + Pℓ i+ 1 {{complex-valued}} {{products to}} weight the basis function with <b>the</b> <b>polynomial</b> <b>coefficients,</b> Pℓ i+ 1 conjugations, and P [...]...|$|R
3000|$|... [...]. For {{the same}} input signal, if <b>the</b> <b>polynomial</b> <b>coefficient,</b> ω 1, of the LPFT is {{correctly}} estimated, we achieve the lowest bound {{of the uncertainty}} product [...]...|$|E
3000|$|... which {{increases}} {{with the increase}} of <b>the</b> <b>polynomial</b> <b>coefficient</b> a 2 and with the decrease of the window parameter a. Similarly, as a goes to infinity, 〈ω〉 [...]...|$|E
3000|$|In (23) or (24), {{the last}} term is {{the effects of}} the order mismatch, which are {{directly}} proportional to <b>the</b> <b>polynomial</b> <b>coefficient,</b> a 2. Therefore, the order mismatch may have a small effect when a 2 is small enough, which is generally true in many practical applications. Another way to reduce the effect of the order mismatch is to minimize the signal duration [...]...|$|E
30|$|Here, a, b, c, and d were <b>the</b> <b>polynomial</b> <b>coefficients</b> {{that were}} {{obtained}} by Gaussian fitting of all pixels in the spot.|$|R
30|$|<b>Coefficient</b> Estimation. Compute <b>the</b> <b>polynomial</b> <b>coefficients</b> by {{applying}} least-squares approach (30) to the linear model (29) of Kalman estimates and Vandermonde matrix of corresponding time instants.|$|R
3000|$|<b>The</b> <b>polynomial</b> <b>coefficients,</b> {{which are}} {{calculated}} for every selected frame, {{are used to}} form an observation vector. The observation vectors computed for each shot s [...]...|$|R
40|$|We {{determine}} which (ordinary) Riordan arrays are the coefficient arrays {{of a family}} of orthogonal polynomials. In so doing, we are led to introduce a family of polynomials, which includes the Boubaker polynomials, and a scaled version of the Chebyshev polynomials, using the techniques of Riordan arrays. We classify these polynomials in terms of the Chebyshev polynomials of the first and second kinds. We also examine the Hankel transforms of sequences associated with the inverse of <b>the</b> <b>polynomial</b> <b>coefficient</b> arrays, including the associated moment sequences. ...|$|E
40|$|Weconsidertheproblemofapproximatingallrealrootsofasquarefree {{polynomial}} f. Given isolating intervals, our algorithm refines {{each of them}} to a width at most 2 −L, that is, each of {{the roots}} is approximated toLbitsafterthe binarypoint. Ourmethod provides a certified answer for arbitrary real polynomials, only requiring finite approximations of <b>the</b> <b>polynomial</b> <b>coefficient</b> and choosing a suitable working precisionadaptively. Inthis way, weget acorrect algorithmthatissimpletoimplementandpracticallyefficient. Our algorithm uses the quadratic interval refinement method; we adapt thatmethodtobeabletocopewithinaccuracieswhenevaluating f, without sacrificingits quadratic convergence behavior. We prove a boundonthebitcomplexityofouralgorithmintermsofdegree,coefficientsizeanddiscriminant. Ourboundimproves previous work onintegerpolynomials byafactorofdeg f andessentiallymatches best known theoretical bounds on root approximation which are obtained by verysophisticated algorithms. Categories andSubject Descriptor...|$|E
40|$|International audienceSeveral {{advanced}} pre- and post-processing tools {{have been}} developed {{over the last two}} decades, to enhance the performances of pulse thermography, in terms of defect detection and characterization. Two of the most efficient techniques are the Thermographic Signal Reconstruction, including a recent development using <b>the</b> <b>polynomial</b> <b>coefficient</b> images, and the early detection. This work, which shows how these tools, commonly used for pulse-heating, are complementary and applicable to step-heating, is in two parts: the first one, reported in a companion article, is dedicated to the theoretical and analytical demonstration; the second one, reported here, is the matching experimental investigation...|$|E
50|$|That is, {{the first}} row is {{constructed}} of <b>the</b> <b>polynomial</b> <b>coefficients</b> in order, and the second row is {{the first row}} in reverse order and conjugated.|$|R
3000|$|... {{is related}} to the {{parameters}} of the signal and the window function, as well as the errors of estimating <b>the</b> <b>polynomial</b> parameters ω 1, ω 2 [...]..., and ωM- 1. When <b>the</b> <b>polynomial</b> <b>coefficients</b> are estimated accurately, the uncertainty product of the M th order LPFT, with the same order PPS as the input, is independent of time or frequency, and becomes a constant. When there are errors of estimating <b>the</b> <b>polynomial</b> <b>coefficients,</b> <b>the</b> bandwidth together with the uncertainty product, are polynomial functions of these errors, which directly affect the signal representation in the time-frequency domain.|$|R
50|$|The rule {{is applied}} by {{counting}} {{the number of}} sign changes in the sequence formed by <b>the</b> <b>polynomial's</b> <b>coefficients.</b> If a coefficient is zero, that term is simply omitted from the sequence.|$|R
40|$|<b>The</b> <b>polynomial</b> <b>{{coefficient}}</b> $\binom {n,q}{k}$ {{is defined}} {{to be the}} coefficient of $x^{k}$ in the expansion of $(1 +x+x^ 2 + [...] . +x^{q- 1 }) ^n$. In this note we give an asymptotic estimate for $\binom {n,q}{cn}$ as $n$ tends to infinity, where $c$ is a positive integer. Based on experimental results, it was conjectured that for any $n$, $\binom {n,q}{cn}-\binom {n,q- 1 }{cn}$ is unimodal and its maximum value occurs $q=\lfloor\log_{ 1 +\frac 1 {c}}{n}\rfloor$ or $q=\lfloor\log_{ 1 +\frac 1 {c}}{n}\rfloor+ 1 $. In particular, when $c= 1 $, its maximum value occurs for $q=\lfloor\log_ 2 {n}\rfloor$ or $q=\lfloor\log_ 2 {n}\rfloor+ 1 $. Comment: 9 page...|$|E
40|$|International audienceSeveral {{advanced}} pre- and post-processing tools {{have been}} developed {{over the last two}} decades, to enhance the performances of pulse thermography, in terms of defect detection and characterization. Two of the most efficient techniques are the Thermographic Signal Reconstruction (TSR), proposed by Shepard et al. in 2001, including a recent development based on the use of <b>the</b> <b>polynomial</b> <b>coefficient</b> images proposed by Roche et al. in 2014, and the early detection at emerging contrast, proposed by Krapez et al. in 1994. The stake of this work is to show how these tools, commonly used for pulse-heating, can be applied to step-heating. The work was divided in two parts: the theoretical and analytic study is reported in the present article; the matching experimental results are discussed in a second, separate article...|$|E
40|$|Abstract This {{paper is}} an {{exposition}} of recent advances made in polynomial coefficient and V-transform coefficient based testing of parametric faults in linear and non-linear analog circuits. V-transform is a nonlinear transform {{that increases the}} sensitivity of polynomial coefficients with respect to circuit component variations by three to five times. In addition, it makes the original polynomial coefficients monotonic. Using simulation, the proposed test method is shown to uncover most parametric faults {{in the range of}} 5 – 15 % on a low noise amplifier (LNA) and an elliptic filter benchmark. Diagnosis of parametric faults clearly illustrates the effect of enhanced sensitivity through V-transform. Finally, we report an experimental validation of <b>the</b> <b>polynomial</b> <b>coefficient</b> based test scheme, with and without V-transform, using the National Instruments’ ELVIS bench-top testbed. The result demonstrates the benefit of V-transform...|$|E
3000|$|The {{rationale}} behind derivation {{of the hat}} matrix of IPRM in the form given in Equation (29) is as follows. From Equation (18) <b>the</b> <b>polynomial</b> <b>coefficients</b> are related to DCT coefficient via [...]...|$|R
30|$|A {{statistical}} package, ‘Design Expert’ software (Version 7.1. 3, Stat-Ease Inc., Minneapolis, USA), {{was used}} to analyze and calculate <b>the</b> <b>polynomial</b> <b>coefficients</b> of <b>the</b> quadratic equation and to evaluate the statistical significance of the equation.|$|R
40|$|In {{the present}} article the moments {{associated}} with the Jain basis functions are developed to order ten. The moments are shown to be polynomials in one variable with <b>polynomial</b> <b>coefficients.</b> <b>The</b> <b>polynomial</b> <b>coefficients</b> are investigated and shown {{to be linked to}} sequences found in the On-line Encyclopedia of Integer Sequences. Comment: 8 page...|$|R
40|$|We {{consider}} {{the problem of}} approximating all real roots of a squarefree polynomial f. Given isolating intervals, our algorithm refines each of them to a certain width 2 −L, that is, each of the roots is approximated to L bits after the binary point. Our method provides a certified answer for arbitrary real polynomials, only considering finite approximations of <b>the</b> <b>polynomial</b> <b>coefficient</b> and choosing a suitable working precision adaptively. In this way, we get a correct algorithm that is simple to implement and practically efficient. Our algorithm uses the quadratic interval refinement method; we adapt that method {{to be able to}} cope with inaccuracies when evaluating f, without sacrificing its quadratic convergence behavior. We prove a bound on the bit complexity of our algorithm in terms of degree, coefficient size and discriminant. Our bound improves previous work on integer polynomials by a factor of deg f and essentially matches best known theoretical bounds on root approximation which are obtained by very sophisticated algorithms...|$|E
40|$|Abstract. In the {{research}} of Prognostics and Health Manage-ment aiming at the airborne equipments such as aeroengines, the working state of equipments can be efficiently monitored based on the flight data acquired, recorded and transported to the ground database by the Aircraft Condition Monitoring System. Firstly, the conception of normal working performance model and <b>the</b> <b>Polynomial</b> <b>Coefficient</b> Auto-Regressive model are introduced in the paper to help identify the abnormality of equipments. Secondly, based on chi-square distribution model, the abnormality detection algorithm based on chi-square test of standardized error sum of squares and the abnormality detection algorithm based on chi-square test of distribution fitting are put forward to detect the equipments ’ latent damage or fault. Compared to the former, the later can effectively reduce the rate of false alarm, however response unpunctually to the equipment’s abnormality. Finally, the validity of algorithms is confirmed {{by the results of}} simulations aiming at a low pressure compressor rotor vibration amplitude sequence. It is indicated that the algorithms will be good tools for condition-based maintenance and autonomic logistics in future...|$|E
3000|$|... where D= [D_ 1,D_ 2,...,D_S], xm {{corresponds}} to column m of the coefficient matrix X, T 0 is the sparsity {{level of the}} coefficients of each signal, and I is the identity matrix. The above dictionary learning formulation is inspired by [3], including some additional constraints that {{take into account the}} quantization noise. The spectral constraints provide some control over the spectral representation of the atoms and the stability of signal reconstruction with the learned dictionary as discussed in [3]. In particular, they guarantee that the learned kernels are positive, and the obtained dictionary is a frame. The optimization problem (20) is not convex, but it can be approximately solved in a computationally efficient manner by alternating between the sparse coding and dictionary update steps. In the first step, we fix the parameters α (and accordingly fix the dictionary D) and solve the sparse coding step using orthogonal matching pursuit (OMP) [26]. In the second step, we fix the coefficients X and update the dictionary by finding the vector of parameters, α, that solves <b>the</b> <b>polynomial</b> <b>coefficient</b> update step using interior point methods [27].|$|E
5000|$|Let [...] denote <b>the</b> unknown <b>polynomial</b> <b>coefficients,</b> {{which are}} given by ...|$|R
40|$|If {{a linear}} {{ordinary}} differential equation with <b>polynomial</b> <b>coefficients</b> is converted into integrated form then the formal substitution of a Chebyshev series leads to recurrence equations defining the Chebyshev coefficients {{of the solution}} function. An explicit formula is presented for <b>the</b> <b>polynomial</b> <b>coefficients</b> of <b>the</b> integrated form in terms of <b>the</b> <b>polynomial</b> <b>coefficients</b> of <b>the</b> differential form. The symmetries arising from multiplication and integration of Chebyshev polynomials are exploited in deriving a general recurrence equation from which can be derived all of the linear equations defining the Chebyshev coefficients. Procedures for deriving the general recurrence equation are specified in a precise algorithmic notation suitable for translation {{into any of the}} languages for symbolic computation. The method is algebraic and it can therefore be applied to differential equations containing indeterminates...|$|R
40|$|AbstractA {{numerical}} {{method of}} calculating all of <b>the</b> <b>polynomial</b> <b>coefficients</b> for Wachspress' rational finite element functions is presented. It requires only linear algebraic computations of matrix algebra and avoids the complicated constructions of geometric algebra {{used in the}} development of the rational elements...|$|R
40|$|ABSTRACT. We {{show that}} the g-polynomial {{coefficients}} [nrm] (see the definition preceding Theorem 1), which are the generating functions {{of the number of}} inversions between multisets, satisfy the beautiful identity n / m. -, nm., n(zym(,"l) +(^ =£[n'm] 9 (;v. i=l >= 0 / r= 0 T 1. Inversions between multisets. Let (mi, [...] .,mn) denote the multiset on 1, [...] .,n, in which the multiplicity of i is m¿. The number of elements in (mi, [...] ., mn) is mi + • • • + mn and is denoted by |(mi, [...] .,m„) |. We abbreviate the multiset (mi, [...] ., m„), where mi = ■ • • = mn = m, to (n ■ m). A multisubset (oj, [...] ., an) of (n • m) satisfies a ¿ j. Let (oi, [...] ., o„) be a multisubset of (n ■ m). We denote by I(ai, [...] ., an) the number of inversions between (oi, [...] .,an) and (5 i, [...] .,ä„). We let [nrm] denote the generating function n • m r E 1 /(ai, [...] .,a„) |(ai, [...] .,a„) |=i-Our first theorem is a generalization of both the Gaussian recurrence for the ç-binomial (Gaussian) coefficients [2, p. 100] and <b>the</b> <b>polynomial</b> <b>coefficient</b> recurrence [1, p. 77]...|$|E
40|$|We {{introduce}} <b>the</b> <b>polynomial</b> <b>coefficient</b> matrix {{and identify}} maximum rank of this matrix under variable substitution as a complexity measure for multivariate polynomials. We use our techniques to prove super-polynomial lower bounds against several classes of non-multilinear arithmetic circuits. In particular, we obtain the following results : As our main result, we prove that any homogeneous depth- 3 circuit for computing {{the product of}} d matrices of dimension n × n requires Ω(n^d- 1 / 2 ^d) size. This improves the lower bounds by Nisan and Wigderson(1995) when d=ω(1). There is an explicit polynomial on n variables and degree at most n/ 2 for which any depth- 3 circuit C of product dimension at most n/ 10 (dimension of the space of affine forms feeding into each product gate) requires size 2 ^Ω(n). This generalizes the lower bounds against diagonal circuits proved by Saxena(2007). Diagonal circuits are of product dimension 1. We prove a n^Ω(n) lower bound {{on the size of}} product-sparse formulas. By definition, any multilinear formula is a product-sparse formula. Thus, our result extends the known super-polynomial lower bounds on the size of multilinear formulas by Raz(2006). We prove a 2 ^Ω(n) lower bound on the size of partitioned arithmetic branching programs. This result extends the known exponential lower bound on the size of ordered arithmetic branching programs given by Jansen(2008). Comment: 22 page...|$|E
40|$|The {{software}} package {{developed in the}} MS thesis research implements functions for the intelligent guessing of polynomial sequence formulas based on user-defined expected sequence factors of the input coefficients. We present a specialized hybrid approach to finding exact representations for polynomial sequences that is motivated by {{the need for an}} automated procedures to discover the precise forms of these sums based on user guidance, or intuition, as to special sequence factors present in the formulas. In particular, the package combines the user input on the expected special sequence factors in <b>the</b> <b>polynomial</b> <b>coefficient</b> formulas with calls to the existing functions as subroutines that then process formulas for the remaining sequence terms already recognized by these packages. The factorization-based approach to polynomial sequence recognition is unique to this package and allows the search functions to find expressions for polynomial sums involving Stirling numbers and other special triangular sequences that are not readily handled by other {{software package}}s. In contrast to many other sequence recognition and summation software, the package not provide an explicit proof, or certificate, for the correctness of these sequence formulas [...] only computationally guided educated guesses at a complete identity generating the sequence over all $n$. The thesis contains a number of concrete, working examples of the package that are intended to both demonstrate its usage and to document its current sequence recognition capabilities...|$|E
40|$|A {{method is}} {{presented}} for the recursive calculation of <b>the</b> best fitting <b>polynomials</b> for an image block, from <b>the</b> <b>polynomial</b> <b>coefficients</b> of its four sub-blocks. This algorithm {{is based on}} orthogonal polynomials and requires considerably fewer calculations than both direct (nonrecursive) methods and nonorthogonal recursive methods...|$|R
3000|$|... where P is {{the order}} of the PPSs. To compute the LPFT in (2), <b>the</b> <b>polynomial</b> <b>coefficients</b> ω 1, ω 2,.., ωM- 1 are first {{estimated}} and then used to form <b>the</b> <b>polynomial</b> phase. <b>The</b> LPFT is obtained by using an STFT procedure whose input is obtained by modulating s(τ) with [...]...|$|R
3000|$|Recently, {{numbers of}} papers (see, e.g., [6 – 16]) {{are devoted to}} {{considering}} the complex difference equations and difference analogues of Nevanlinna theory. For the growth of meromorphic solutions of difference equations, Chiang and Feng [8, 9] considered <b>the</b> <b>polynomial</b> <b>coefficients</b> case and got [...]...|$|R
