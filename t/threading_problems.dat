4|123|Public
5000|$|... #Subtitle level 3: <b>Threading</b> <b>problems,</b> {{vulnerability}} to race conditions ...|$|E
50|$|Rational Application Developer {{includes}} {{tools to}} improve code quality. A Java profiling tool helps to analyze an application's performance, memory usage, and <b>threading</b> <b>problems.</b> A software analysis tool identifies patterns and antipatterns in application code, and compares code to coding standards.|$|E
5000|$|The epiphany marker {{represents}} an upgraded {{version of the}} Ion.The Epiphany is a more stylized, upgraded Ion which comes with several factory enhancements out of the box, saving the user from buying the more inexpensive Ion and having to buy separate upgraded components for it over time. Besides for the obvious cosmetic difference, Epiphanies feature a metal exoskeleton and frame (with plating, to avoid <b>threading</b> <b>problems),</b> upgraded Firebolt, Freak barrel starter, integrated ASA dovetail, Q-Lock Feed Neck (Eos only), and Smartvalve ASA among other things. Internally the Epiphany also gives the user the ability to alter the marker's internal firing air volume. This is carried out by select from three different internal air volume [...] "inserts" [...] which are used to take up slack space in the marker's fire chamber. The smaller air space in the fire chamber can refill faster, which allows the Epiphany to fire faster without velocity drop-off {{when compared to the}} Ion and SP-8. The fire chamber inserts allow fine-tuning and adjustment that wouldn't be previously available without developing a homemade modification. The Epiphany fire chamber, inserts and valve spring are available as performance upgrades for the Ion and SP-8. Epiphanies are available in multiple colors and cost around $300.|$|E
40|$|In this paper, {{we study}} the protein <b>threading</b> <b>problem,</b> which was {{proposed}} for finding a folded 3 D protein structure from an amino acid sequence. Since this problem was already {{proved to be}} NP-hard by Lathrop, we study polynomial time approximation algorithms. First we show that the protein <b>threading</b> <b>problem</b> is MAX SNP-hard. Next we show that the protein <b>threading</b> <b>problem</b> can be approximated within a factor 4 for a special {{case in which a}} graph representing interaction between residues (amino acids) is planar. This case corresponds to a fi-sheet substructure, which appears in most protein structures. 1 Introduction The protein folding problem is, given an amino acid sequence (a string), to find its correctly folded 3 D protein structure. It {{is one of the most}} important computational problems in molecular biology. Although this problem can be defined as a minimization problem, it is too hard to be solved directly. Recently, an indirect approach called inverse folding was proposed [2, 4, [...] ...|$|R
40|$|SUMMARY The protein <b>threading</b> <b>problem</b> with {{profiles}} {{is known}} to be efficiently solvable using dynamic programming. In this paper, we consider a variant of the protein <b>threading</b> <b>problem</b> with profiles in which constraints on distances between residues are given. We prove that protein threading with profiles and constraints is NP-hard. Moreover, we show a strong hardness result on the approximation of an optimal threading satisfying all the constraints. On the other hand, we develop two practical algorithms: CLIQUETHREAD and BBDPTHREAD. CLIQUETHREAD reduces the <b>threading</b> <b>problem</b> to the maximum edgeweight clique problem, whereas BBDPTHREAD combines dynamic programming and branch-and-bound techniques. We perform computational experiments using protein structure data in PDB (Protein Data Bank) using simulated distance constraints. The results show that constraints are useful to improve the alignment accuracy of the target sequence and the template structure. Moreover, these results also show that BBDPTHREAD is in general faster than CLIQUETHREAD for larger size proteins whereas CLIQUETHREAD is useful if there does not exist a feasible threading. key words: maximum edge weight clique, dynamic programming, protein threading, profiles, distance constraints 1...|$|R
40|$|International audienceThis paper {{describes}} a new algorithm that expands upon algorithms proposed in previous works to allow implementation of local sequence – structure alignments for the protein <b>threading</b> <b>problem.</b> This allows <b>threading</b> methods {{to cover the}} whole spectrum of alignment types needed to analyze homologous proteins...|$|R
40|$|This paper {{presents}} {{a new computer}} system, PROSPECT, for protein threading. PROSPECT employs an energy function that consists of three additive terms: (1) a singleton fitness term, (2) a distance-dependent pairwise-interaction preference term, and (3) alignment gap penalty; and currently uses FSSP as its threading template database. PROSPECT uses a divide-and-conquer algorithm to find an alignment between a query protein sequence and a protein fold template, which is guaranteed to be globally optimal for its energy function. The threading algorithm presented here significantly improves the computational efficiency of our previously-published algorithm, which makes PROSPECT a practical tool even for large protein <b>threading</b> <b>problems.</b> Mathematically, PROSPECT finds a globally-optimal threading between a query sequence of n residues and a fold template of m residues and M core secondary structures in O(nm + MnN{sup 1. 5 C{minus} 1 }) time and O(nm + nN{sup C{minus} 1 }) space, where C, the topological complexity of the template fold as we term, is a value which characterizes the overall structure of the considered pairwise interactions in the fold; and N represents {{the maximum number of}} possible alignments between an individual core of the fold and the query sequence when its neighboring cores are already aligned. PROSPECT allows a user to incorporate known biological constraints about the query sequence during the threading process. For given constraints, the system finds a globally-optimal threading which satisfies the constraints. Currently PROSPECT can deal with constraints which reflect geometrical relationships among residues of disulfide bonds, active sites, or determined by the NOE constraints of (low-resolution) NMR spectral data...|$|E
50|$|DCE/RPC is {{sufficiently}} complex {{that the issue}} of updating it to solve and modernise the POSIX Draft 4 <b>threading</b> <b>problem</b> requires highly skilled and highly specific programming knowledge. Consequently, for all that it can accomplish, the reference implementation of DCE/RPC languishes {{due to a lack of}} information and resources.|$|R
40|$|Abstract: This paper {{considers}} the <b>thread</b> scheduling <b>problem.</b> The <b>thread</b> scheduling <b>problem</b> abstracts {{the problem of}} minimizing memory latency, using a directed data dependency graph generated form a compiler, to improve run time eÆciency. Two <b>thread</b> scheduling <b>problems</b> are formulated and shown to be strongly NP-complete. New methods and algorithms for analyzing a data dependency graph in order to com-pute the theoretical best runtime (lower bound of the nishing time) and to estimate the required minimum number of PEs needed to achieve certain nishing time are pre-sented. The new methods and algorithms improve upon some of the existing analysis and transformation techniques...|$|R
40|$|The {{determination}} of the configuration of a protein in three-dimensional (3 D) space constitutes {{one of the major}} challenges in molecular biology research today. A method consists in choosing a protein structure from a database that minimizes an energy function. First, we model the problem in terms of dynamic programming and show that the {{determination of}} the order in which the variables must be considered to minimize the time complexity is an NP-hard problem. Second, we propose a new decomposition algorithm of the <b>threading</b> <b>problem</b> that is based on the connectivity of the graph induced by the 3 D structure of a protein. Our decomposition could be used to solve the <b>threading</b> <b>problem.</b> The goal in this paper is to evaluate the intrinsic complexity of 3 D structure, which can be viewed as information that may be incorporated into a solution method. It provides two indexes of complexity (time and space) and determines in polynomial time complex components of the 3 D structure of a protein...|$|R
40|$|Integer {{programming}} is a combinatorial optimization method {{that has been}} successfully applied to the protein <b>threading</b> <b>problem.</b> We seek to expand the model optimized by this technique {{to allow for a}} more accurate description of protein threading. We have developed and implemented an expanded model of integer programming that has the capability to model secondary structure element deletion, which was not possible in previous version of integer programming based optimization...|$|R
40|$|International audienceThis paper {{presents}} efficient algorithms {{for solving}} the problem of aligning a protein structure template to a query amino-acid sequence, known as protein <b>threading</b> <b>problem.</b> We consider the problem as a special case of graph matching problem. We give formal graph and integer programming models of the problem. After studying the properties of these models, we propose two kinds of Lagrangian relaxation for solving them. We present experimental results on real-life instances showing the efficiency of our approaches...|$|R
5000|$|Race {{conditions}} {{have a reputation}} of being difficult to reproduce and debug, since {{the end result is}} nondeterministic and depends on the relative timing between interfering <b>threads.</b> <b>Problems</b> occurring in production systems can therefore disappear when running in debug mode, when additional logging is added, or when attaching a debugger, often referred to as a [...] "Heisenbug". It is therefore better to avoid race conditions by careful software design rather than attempting to fix them afterwards.|$|R
40|$|An elastic plastic {{triangular}} {{ring element}} is implemented in NASTRAN computer program. The plane strain problem of partially plastic thick walled cylinder under internal pressure is solved and {{compared with the}} earlier finite difference solution. A very good agreement has been reached. In order to demonstrate its application to more general <b>problems,</b> an overloaded <b>thread</b> <b>problem</b> for the British Standard Buttress is examined. The maximum axial and principal stresses are located and their values are determined as functions of loadings...|$|R
40|$|We {{present a}} fast method for finding optimal {{parameters}} for a low-resolution (threading) force field intended to distinguish correct from incorrect folds {{for a given}} protein sequence. In contrast to other methods, the parameterization uses information from > 10 (7) misfolded structures {{as well as a}} set of native sequence-structure pairs. In addition to testing the resulting force field 2 ̆ 7 s performance on the protein sequence <b>threading</b> <b>problem,</b> results are shown that characterize the number of parameters necessary for effective structure recognition...|$|R
5000|$|Threaded end cylinders: Ends are {{screwed onto}} the tube body. The {{reduction}} of material can weaken {{the tube and}} may introduce <b>thread</b> concentricity <b>problems</b> to the system.|$|R
40|$|We {{present a}} new local {{alignment}} method for the protein <b>threading</b> <b>problem.</b> Local sequence-sequence alignments {{are widely used}} to find functionally important regions in families of proteins. However, {{to the best of}} our knowledge, no local sequence-structure alignment algorithm has been described in the literature. Here we model local alignments as Mixed Integer Programming (MIP) models. These models permit to align a part of a protein structure onto a protein sequence in order to detect local similarities. The paper describes two MIP models, compares and analyzes their performance by using ILOG CPLEX 10 solver...|$|R
40|$|AbstractIn this paper, {{we study}} the protein <b>threading</b> <b>problem,</b> which was {{proposed}} for predicting a folded 3 D protein structure from an amino acid sequence. Since this problem was already {{proved to be}} NP-hard, we study polynomial time approximation algorithms. We show several hardness results for the approximation, which includes a MAX SNP-hardness result. We also show approximation algorithms for a special case and a general case, where a graph representing interactions between amino acid residues is restricted to be planar in a special case. For this special case, we obtain a constant approximation ratio...|$|R
40|$|This work {{is about}} a problem from {{computational}} biology known as protein <b>threading</b> <b>problem.</b> By finding out an appropriate linear mixed-integer programming (MIP) formulation we demonstrate that the real-live instances of this problem could be efficiently solved by using only some linear-programming (LP) solver instead of special-purpose branch&bound algorithm. This {{is due to the}} fact that within the frame of MIP model proposed, all biological instances, we were able to test, attain their optima at feasible vertices of the underlying LP polytope which is the essence of the statement in the title...|$|R
50|$|Plumbr {{monitors}} customers' JVM {{applications for}} memory leaks, garbage collection pauses and locked <b>threads.</b> Plumbr <b>problem</b> detection algorithms {{are based on}} analysis of performance data of thousands of JVMs.|$|R
40|$|This paper {{presents}} a novel linear programming approach to do protein 3 -dimensional (3 D) structure prediction via threading. Based on the contact map graph of the protein 3 D structure template, the protein <b>threading</b> <b>problem</b> is formulated {{as a large}} scale integer programming (IP) problem. The IP formulation is then relaxed to a linear programming (LP) problem, and then solved by the canonical branch-and-bound method. The final solution is globally optimal with respect to energy functions. In particular, our energy function includes pairwise interaction preferences and allowing variable gaps which are two key factors in making the protein <b>threading</b> <b>problem</b> NP-hard. A surprising result is that, most of time, the relaxed linear programs generate integral solutions directly. Our algorithm has been implemented as a software package RAPTOR [...] RApid Protein Threading by Operation Research technique. Large scale benchmark test for fold recognition shows that RAPTOR significantly outperforms other programs at the fold similarity level. The CAFASP 3 evaluation, a blind and public test by the protein structure prediction community, ranks RAPTOR as top 1, among individual prediction servers, {{in terms of the}} recognition capability and alignment accuracy for Fold Recognition (FR) family targets. RAPTOR also performs very well in recognizing the hard Homology Modeling (HM) targets. RAPTOR was implemented at the University of Waterloo and it can be accessed at [URL] form. ht...|$|R
40|$|Abstract: We {{present a}} new local {{alignment}} method for the protein <b>threading</b> <b>problem.</b> Local sequence-sequence alignments {{are widely used}} to find functionally important regions in families of proteins. However, {{to the best of}} our knowledge, no local sequence-structure alignment algorithm has been described in the literature. Here we model local alignments as Mixed Integer Programming (MIP) models. These models permit to align a part of a protein structure onto a protein sequence in order to detect local similarities. The paper describes two MIP models, compares and analyzes their performance by using ILOG CPLEX 10 solver. Key-words: Integer programming, combinatorial optimization, protein threadin...|$|R
40|$|In this paper, {{we study}} the protein <b>threading</b> <b>problem,</b> which was {{proposed}} for predicting a folded 3 D protein structure from an amino acid sequence. Since this problem was already {{proved to be}} NP-hard, we study polynomial time approximation algorithms. We show several hardness results for the approximation, which includes a MAX SNP-hardness result. We also show approximation algorithms for a special case and a general case, where a graph representing interactions between amino acid residues is restricted to be planar in a special case. For this special case, we obtain a constant approximation ratio. @ 1999 -Elsevier Science B. V. Al...|$|R
40|$|We {{propose a}} network flow {{formulation}} for protein threading and show its equivalence with the shortest path problem on a graph {{with a very}} particular structure. The underying Mixed Integer Programming (MIP) model proves to be very appropriate for the protein <b>threading</b> <b>problem</b> [...] huge real-life instances have been solved in a reasonable time by using only a Mixed Integer Optimizer instead of a special-purpose branch&bound algorithm. The properties of the MIP model allow decomposition of the main problem on {{a large number of}} subproblems (tasks). We show in this paper that a branch&bound alike algorithm can be efficiently applied to solving in parallel these tasks, which leads to a significant reduction in the total running time. Computational experiments with huge problem instances are presented...|$|R
40|$|The fold {{recognition}} {{methods are}} promissing tools for capturing {{the structure of}} a protein by its amino acid residues sequence but their use is still restricted by the needs of huge computational resources and suitable efficient algorithms as well. In the recent version of FROST (Fold Recognition Oriented Search Tool) package the most efficient algorithm for solving the Protein <b>Threading</b> <b>Problem</b> (PTP) is implemented due to the strong collaboration between the SYMBIOSE group in IRISA and MIG in Jouy-en-Josas. In this paper, we present the diverse components of FROST, emphasizing on the recent advances in formulating and solving new versions of the PTP and on the way of solving on a computer cluster a million of instances in a easonable time...|$|R
40|$|We {{present a}} method (ENERGI) for extracting energy-like {{quantities}} from a data base of protein structures. In this paper, {{we use the}} method to generate pairwise additive amino acid "energy" scores. These scores are obtained by iteration until they correctly discriminate a set of known protein folds from decoy conformations. The method succeeds in lattice model tests and in the gapless <b>threading</b> <b>problem</b> as defined by Maiorov and Crippen [Maiorov, V. N. & Crippen, G. M. (1992) J. Mol. Biol. 227, 876 - 888]. A more challenging test of threading a larger set of test proteins derived from the representative set of Hobohm and Sander [Hobohm, U. & Sander, C. (1994) Protein Sci. 3, 522 - 524] {{is used as a}} "workbench" for exploring how the ENERGI scores depend on their parameter sets...|$|R
40|$|Publication interne n ˚ 1856 — Juillet 2007 — 38 pages Abstract: The fold {{recognition}} {{methods are}} promissing tools for capturing {{the structure of}} a protein by its amino acid residues sequence but their use is still restricted by the needs of huge computational resources and suitable efficient algorithms as well. In the recent version of FROST (Fold Recognition Oriented Search Tool) package the most efficient algorithm for solving the Protein <b>Threading</b> <b>Problem</b> (PTP) is implemented due to the strong collaboration between the SYMBIOSE group in IRISA and MIG in Jouy-en-Josas. In this paper, we present the diverse components of FROST, emphasizing on the recent advances in formulating and solving new versions of the PTP and on the way of solving on a computer cluster a million of instances in a reasonable time...|$|R
40|$|Abstract: On {{account of}} the end {{splitting}} and dropping <b>thread</b> <b>problem</b> for domestic winding machine during tassel thread production process at present, an intelligent system with subdivision driving module TB 6560 AHQ and SANYO stepping motor was designed, which adopted the ATMEL 89 S 52 MCU as the core controller. The system achieved precise control of some parameters {{during the course of}} tassel thread winding such as torque, direction of rotation, speed, cycle laps, twist, etc. It also reduced the worker’s labour intensity and improved the production quality and efficiency of the tassel manufacturing, moreover, this winding machine has the advantages of simple structure, high torque, high reliability and low cost. It can meet the various control requirements for different tassel thread winding and have a considerable market prospect...|$|R
40|$|As {{a protein}} evolves, not {{every part of}} the amino acid {{sequence}} has an equal probability of being deleted or for allowing insertions, because not every amino acid plays an equally important role in maintaining the protein structure. However the most prevalent models in fold recognition methods treat every amino acid deletion and insertion as equally probable events. We have analyzed the alignment patterns for homologous and analogous sequences to determine patterns of insertion and deletions, and used that information to determine the statistics of insertions and deletions for different amino acids of a target sequence. We define these patterns as Insertion/Deletion (Indel) Frequency Arrays (IFA). By applying IFA to the protein <b>threading</b> <b>problem,</b> {{we have been able to}} improve the alignment accuracy, especially for proteins with low sequence identity. Contact...|$|R
40|$|If {{the primary}} {{sequence}} of a protein is given, {{what is its}} three-dimensional structure? This {{is one of the}} most important and dicult problems in molecular biology and has tremendous implication to proteomics. Over the last three decades, this issue has been intensely researched. Protein threading represents one of the most promising techniques. So far, there are many protein structure prediction computer programs based on protein threading; however, almost none incorporates the pairwise contact (interaction) potential explicitly in its energy function, although scientists believe that pairwise interactions are important for fold recognition targets. The underlying reason for ignoring the pairwise potential is that the protein <b>threading</b> <b>problem</b> is NP-hard (i. e., it is unlikely to have a polynomial-time algorithm), if the pairwise interactions are treated rigorously. The key...|$|R
40|$|We have {{developed}} a new algorithm based on the mathematical theory of linear programming (LP) and implemented it in our program RAPTOR. Our new approach provides an elegant formulation of the protein <b>threading</b> <b>problem,</b> overcomes the intractability <b>problem</b> of protein <b>threading,</b> in practice, and allows us to use existing powerful linear programming software to obtain optimal protein threading solutions. CASP 5 and CAFASP 3 gave us the rst chance to test RAPTOR in an unbiased way. RAPTOR was ranked as the top individual (automatic) server for fold recognition by the CAFASP 3 organizers. In this short paper, we describe RAPTOR's LP formulation, assess RAPTOR's performance in CAFASP 3 /CASP 5, explain why it has superceded other existing automatic individual methods, and point out its strengths, limitations, extensions and prospects for improvement...|$|R
40|$|We {{investigate}} hierarchical {{properties and}} log-space reductions of languages recognized by log-space probabilistic Turing machines, Arthur-Merlin games and Games against Nature with log-space probabilistic verifiers. For each log-space complexity class, we decompose {{it into a}} hierarchy based on corresponding multihead two-way finite automata and we (eventually) prove {{the separation of the}} hierarchy levels (even over one letter alphabet); furthermore, we show log-space reductions of each log-space complexity class to low levels of its corresponding hierarchy. We find probabilistic (and "probabilistic+nondeterministic") variants of Savitch's maze <b>threading</b> <b>problem</b> which are log-space complete for PL (and respectively P) and can be recognized by two-head one-way and one-way one-counter finite automata with probabilistic (probabilistic and nondeterministic) states. This research was supported by the National Science Foundation under Grant No. CDA 8822724. 1 Results We focus on classes d [...] ...|$|R
40|$|International audienceDuring {{the last}} decade, {{significant}} {{progress has been}} made in solving the Protein <b>Threading</b> <b>Problem</b> (PTP). However, all previous approaches to PTP only perform global sequencestructure alignment. This obvious limitation is in clear contrast with the world of sequences, where local sequencesequence alignments are widely used to find functionally important regions in families of proteins. This paper presents a novel approach to PTP which allows to align a part of a protein structure onto a protein sequence in order to detect local similarities. We show experimentally that such local sequence-structure alignments improve the quality of the prediction. Our approach is based on Mixed Integer Programming (MIP) which has been shown to be very successful in this domain. We describe five MIP models for local sequence-structure alignments, compare and analyze their performances by using ILOG CPLEX 10 solver on a benchmark of proteins...|$|R
40|$|Computational protein {{threading}} is {{a powerful}} technique for recognizing native-like folds of a protein sequence from a protein fold database. In this paper, we present an improved algorithm (over our previous work) for solving the globally-optimal <b>threading</b> <b>problem,</b> and illustrate how the computational complexity and the fold recognition accuracy of the algorithm change as the cutoff distance for pairwise interactions changes. For a given fold of m residues and M core secondary structures (or simply cores) and a protein sequence of n residues, the algorithm guarantees to find a sequence-fold alignment (threading) that is globally optimal, measured collectively by (1) the singleton match fitness, (2) pairwise interaction preference, and (3) alignment gap penalties, in O(mn + MnN{sup 1. 5 C- 1 }) time and O(mn + nN{sup C- 1 }) space. C, the topological complexity of a fold as we term, is a value which characterizes the overall structure of the considered pairwise interactions in the fold, which are typically determined by a specified cutoff distance between the beta carbon atoms {{of a pair of}} amino acids in the fold. C is typically a small positive integer. N represents the maximum number of possible alignments between an individual core of the fold and the protein sequence when its neighboring cores are already aligned, and its value is significantly less than n. When interacting amino acids are required to see each other, C is bounded from above by a small integer no matter how large the cutoff distance is. This indicates that the protein <b>threading</b> <b>problem</b> is polynomial-time solvable if the condition of seeing each other between interacting amino acids is sufficient for accurate fold recognition. A number of extensions have been made to our basic threading algorithm to allow finding a globally-optimal threading under various constraints, which include consistencies with (1) specified secondary structures (both cores and loops), (2) disulfide bonds, (3) active sites, etc...|$|R
40|$|Alt’s <b>thread</b> <b>problem</b> {{asks for}} least-area {{surfaces}} bounding a fixed “wire ” curve and a movable “thread ” curve of length L. We conjecture {{that if the}} wire has finitely many maxima of curvature, then its Alt minimizers have finitely many surface components. We show that this conjecture reduces to controlling near-wire minimizers, and thus begin a three paper series to understand them. In this paper we show they arise, {{show that they are}} embedded, and show that they have a nice parametrization in wire exponential coordinates. In doing so we prove tools of independent interest: a weighted isoperimetric inequality, a nonconvex enclosure theorem, and a classification of how Alt minimizers intersect planes. The last item reduces to a question about harmonic functions in the spirit of Radó’s lemma. Based on referee comments this article has been split and included in two other papers: “Existence of thread-wire surfaces, with quantitative estimate ” and “Near-wire thread-wire minimizers: Lipschitz regularity and localization. ” They are available a...|$|R
40|$|Various {{bioinformatics}} problems require optimizing {{several different}} properties simultaneously. For example, in the protein <b>threading</b> <b>problem,</b> a linear scoring function combines the values for different properties of possible sequence-to-structure alignments {{into a single}} score to allow for unambigous optimization. In this context, an essential question is how each property should be weighted. As the native structures are known for some sequences, the implied partial ordering on optimal alignments {{may be used to}} adjust the weights. To resolve the arising interdependence of weights and computed solutions, we propose a novel approach: iterating the computation of solutions (here: threading alignments) given the weights and the estimation of optimal weights of the scoring function given these solutions via a systematic calibration method. We show that this procedure converges to structurally meaningful weights, that also lead to significantly improved performance on comprehensive test data sets as measured in different ways. The latter indicates that the performance of threading can be improved in general. ...|$|R
