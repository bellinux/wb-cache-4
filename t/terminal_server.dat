169|137|Public
25|$|<b>Terminal</b> <b>Server</b> is {{the server}} {{component}} of Terminal services. It handles {{the job of}} authenticating clients, as well as making the applications available remotely. It is also entrusted with the job of restricting the clients according {{to the level of}} access they have. The <b>Terminal</b> <b>Server</b> respects the configured software restriction policies, so as to restrict the availability of certain software to only a certain group of users. The remote session information is stored in specialized directories, called Session Directory which is stored at the server. Session directories are used to store state information about a session, and can be used to resume interrupted sessions. The <b>terminal</b> <b>server</b> also has to manage these directories. Terminal Servers {{can be used in a}} cluster as well.|$|E
25|$|<b>Terminal</b> <b>Server</b> {{is managed}} by the <b>Terminal</b> <b>Server</b> Manager Microsoft Management Console snap-in. It {{can be used to}} {{configure}} the sign in requirements, as well as to enforce a single instance of remote session. It can also be configured by using Group Policy or Windows Management Instrumentation. It is, however, not available in client versions of Windows OS, where the server is pre-configured to allow only one session and enforce the rights of the user account on the remote session, without any customization.|$|E
25|$|Terminal servers {{have also}} been used in green computing. When using the system, users at a {{terminal}} connect to a central server; all of the actual computing is done on the server, but the end user experiences the operating system on the terminal. These can be combined with thin clients, which use up to 1/8 {{the amount of energy}} of a normal workstation, resulting in a decrease of energy costs and consumption. There has been an increase in using terminal services with thin clients to create virtual labs. Examples of <b>terminal</b> <b>server</b> software include Terminal Services for Windows and the Linux <b>Terminal</b> <b>Server</b> Project (LTSP) for the Linux operating system.|$|E
40|$|This paper {{examines}} the architectural and security impact of using commercially available, popular <b>terminal</b> <b>servers</b> to support thin clients {{within the context}} of a high assurance multilevel network. Seven potential local area network architectures were analyzed for security and utility. Three secure configurations were identified: Multiple <b>Terminal</b> <b>Servers</b> in Series; Multiple Trusted Computing Base Extension-Enhanced Terminal Servers; and <b>Terminal</b> <b>Servers</b> on a High Assurance Virtual Machine Monito...|$|R
50|$|At {{the same}} time that DECnet Phase IV was {{released}}, the company also released a proprietary protocol called LAT for serial terminal access via <b>Terminal</b> <b>servers.</b> LAT shared the OSI physical and datalink layers with DECnet and LAT <b>terminal</b> <b>servers</b> used MOP for the server image download and related bootstrap processing.|$|R
5000|$|... #Caption: Access {{control systems}} using serial {{controllers}} and <b>terminal</b> <b>servers</b> ...|$|R
25|$|The Ubuntu {{derivatives}} Edubuntu and The Linux Schools Project, {{as well as}} the Debian derivative Skolelinux, provide education-oriented software packages. They {{also include}} tools for administering and building school computer labs and computer-based classrooms, such as the Linux <b>Terminal</b> <b>Server</b> Project (LTSP).|$|E
25|$|By 1991 the {{technology}} used was obsolete, {{in part because}} of the use of proprietary systems instead of open Unix-bases systems. Norsk Data never managed the transition to open standards and also ceased operations. By then the personal computer had also become commonplace and the need for a central <b>terminal</b> <b>server</b> had disappeared. By 1991 Skår had become director of NTNF and was responsible for evaluating the project.|$|E
25|$|Pervasive.SQL 2000 and Pervasive.SQL 2000i uses {{essentially}} the same architecture as Pervasive.SQL 7, though 2000i includes i*Net server. It uses the same component model, {{has the ability to}} use the Btrieve or Scalable SQL engines and continues using an MKDE. This version included support for Red Hat Linux, Caldera OpenLinux, SUSE and Solaris. It also had better integration with Terminal Services, though only one instance of the database engine may run on any <b>terminal</b> <b>server</b> platform. You cannot run separate copies of the database engine within two or more terminal sessions.|$|E
40|$|This paper {{examines}} the architectural and security impact of using commercially available, popular <b>terminal</b> <b>servers</b> to support thin clients {{within the context}} of a high assurance multilevel network. Seven potential local area network architectures were analyzed for security and utility. Three secure configurations were identified: Multiple <b>Terminal</b> <b>Servers</b> in Series; Multiple Trusted Computing Base Extension-Enhanced Terminal Servers; and <b>Terminal</b> <b>Servers</b> on a High Assurance Virtual Machine Monitor. Keywords: Multilevel Security, Thin Clients, <b>Terminal</b> <b>Servers,</b> High Assurance 1 Introduction: A serious problem associated with the development of secure systems is that of object reuse. If computing devices possess storage that can be exploited by malicious software to hide sensitive information, then an accomplice executing at a lower sensitivity level can locate and reveal the information. An effective approach to object reuse must be developed for systems enforcing either identitybas [...] ...|$|R
5000|$|HOBLink JWT (the Java client for the Microsoft Windows® <b>Terminal</b> <b>Servers)</b> ...|$|R
5000|$|DECserver 500 and 550 LAT <b>terminal</b> <b>servers</b> DSRVS-BA {{using the}} KDJ11-SB chipset ...|$|R
25|$|Every {{version of}} Microsoft Windows from Windows XP onwards {{includes}} an installed Remote Desktop Connection (RDC) ("Terminal Services") client (mstsc.exe) whose version {{is determined by}} that of the operating system or by the last applied Windows Service Pack. The Terminal Services server is supported as an official feature on Windows NT 4.0 <b>Terminal</b> <b>Server</b> Edition, Windows 2000 Server, all editions of Windows XP except Windows XP Home Edition, Windows Server 2003, Windows Home Server, on Windows Fundamentals for Legacy PCs, in Windows Vista Ultimate, Enterprise and Business editions, Windows Server 2008 and Windows Server 2008 R2 and on Windows 7 Professional and above.|$|E
25|$|The {{relatively}} unsophisticated and ad-hoc {{nature of}} sessions {{is due to}} the fact they weren't part of the initial design, and had to be developed, with minimal disruption to the main line, by a third party (Citrix Systems) as a prerequisite for their <b>terminal</b> <b>server</b> product for Windows NT, called WinFrame. Starting with Windows Vista, though, sessions finally became a proper aspect of the Windows architecture. No longer a memory manager construct that creeps into user mode indirectly through Win32, they were expanded into a pervasive abstraction affecting most Executive subsystems. As a matter of fact, regular use of Windows Vista always results in a multi-session environment.|$|E
25|$|The server {{component}} of RDS is <b>Terminal</b> <b>Server</b> (termdd.sys), which listens on TCP port 3389. When a Remote Desktop Protocol (RDP) client connects to this port, it is tagged {{with a unique}} SessionID and associated with a freshly spawned console session (Session 0, keyboard, mouse and character mode UI only). The login subsystem (winlogon.exe) and the GDI graphics subsystem is then initiated, which handles the job of authenticating the user and presenting the GUI. These executables are loaded in a new session, rather than the console session. When creating the new session, the graphics and keyboard/mouse device drivers are replaced with RDP-specific drivers: RdpDD.sys and RdpWD.sys. The RdpDD.sys is the device driver and it captures the UI rendering calls into a format that is transmittable over RDP. RdpWD.sys acts as keyboard and mouse driver; it receives keyboard and mouse input over the TCP connection and presents them as keyboard or mouse inputs. It also allows creation of virtual channels, which allow other devices, such as disc, audio, printers, and COM ports to be redirected, i.e., the channels act as replacement for these devices. The channels connect to the client over the TCP connection; as the channels are accessed for data, the client is informed of the request, which is then transferred over the TCP connection to the application. This entire procedure {{is done by the}} <b>terminal</b> <b>server</b> and the client, with the RDP mediating the correct transfer, and is entirely transparent to the applications. RDP communications are encrypted using 128-bit RC4 encryption. Windows Server 2003 onwards, it can use a FIPS 140 compliant encryption schemes.|$|E
5000|$|Cisco Systems - Provided LAT on <b>Terminal</b> <b>Servers</b> {{as early}} as 1990.|$|R
5000|$|HOB X11 Gate (Remote Access to Linux <b>terminal</b> <b>servers</b> {{over the}} Internet using RDP) ...|$|R
50|$|They {{also built}} serial <b>terminal</b> <b>servers</b> from 4-port to 72-port units under the product name Annex.|$|R
2500|$|In Windows Server 2008, it {{has been}} {{significantly}} overhauled. While logging in, if the user logged on to the local system using a Windows Server Domain account, the credentials from the same sign-on {{can be used to}} authenticate the remote session. However, this requires Windows Server 2008 to be the <b>terminal</b> <b>server</b> OS, while the client OS is limited to Windows Server 2008, Windows Vista and Windows 7. In addition, the <b>terminal</b> <b>server</b> may be configured to allow connection to individual programs, rather than the entire desktop, by means of a feature named RemoteApp. Terminal Services Web Access (TS Web Access) makes a RemoteApp session invocable from the web browser. It includes the TS Web Access Web Part control which maintains the list of RemoteApps deployed on the server and keeps the list up to date. [...] <b>Terminal</b> <b>Server</b> can also integrate with Windows System Resource Manager to throttle resource usage of remote applications.|$|E
2500|$|This {{version was}} {{introduced}} with Windows Server 2003, included support for console mode connections, a session directory, and local resource mapping. [...] It also introduces Transport Layer Security (TLS) 1.0 for server authentication, and to encrypt <b>terminal</b> <b>server</b> communications. This version {{is built into}} Windows XP Professional x64 Edition and Windows Server 2003 x64 & x86 Editions.|$|E
2500|$|Starting from Windows NT Server 4.0, <b>Terminal</b> <b>Server</b> Edition, {{the memory}} manager {{implements}} a so-called session space, {{a range of}} kernel-mode memory that is subject to context switching just like user-mode memory. This lets multiple instances of the kernel-mode Win32 subsystem and GDI drivers run side-by-side, despite shortcomings in their initial design. Each session space is shared by several processes, collectively {{referred to as a}} [...] "session".|$|E
5000|$|Local Area Transport (LAT) - is a LAN-based non-routable {{communications}} protocol to support DEC and other <b>Terminal</b> <b>Servers</b> ...|$|R
5000|$|TD/SMP: {{introduced}} by DEC on their VT330/340 terminals, TD/SMP was proprietary and only widely supported {{by their own}} <b>terminal</b> <b>servers</b> ...|$|R
5000|$|Creates {{additional}} work for installers: usually <b>terminal</b> <b>servers</b> {{have to be}} configured independently, and not through the interface of the access control software.|$|R
2500|$|RDS {{was first}} {{released}} as [...] "Terminal Server" [...] in [...] "Windows NT Server 4.0 <b>Terminal</b> <b>Server</b> Edition" [...] a stand-alone operating system including SP3 and fixes built in. Starting with Windows 2000, {{it was an}} optional role and became a mainstay of the Windows NT family of operating systems and was improved with each version of Windows. The rename to [...] "Remote Desktop Services" [...] occurred with Windows Server 2008 R2 in 2009.|$|E
2500|$|A RemoteApp can be {{packaged}} {{either as}} a [...]rdp file or distributed via an [...]msi Windows Installer package. When packaged as an [...]rdp file (which contains {{the address of the}} RemoteApp server, authentication schemes to be used, and other settings), a RemoteApp can be launched by double clicking the file. It will invoke the Remote Desktop Connection client, which will connect to the server and render the UI. The RemoteApp can also be packaged in a Windows Installer database, installing which can register the RemoteApp in the Start menu as well as create shortcuts to launch it. A RemoteApp can also be registered as handler for file types or URIs. Opening a file registered with RemoteApp will first invoke Remote Desktop Connection, which will connect to the <b>terminal</b> <b>server</b> and then open the file. Any application which can be accessed over Remote Desktop can be served as a RemoteApp.|$|E
2500|$|Based on the ITU-T T.128 {{application}} sharing protocol (during draft {{also known as}} [...] "T.share") from the T.120 recommendation series, {{the first version of}} RDP (named version 4.0) was introduced by Microsoft with [...] "Terminal Services", as a part of their product Windows NT 4.0 Server, <b>Terminal</b> <b>Server</b> Edition. The Terminal Services Edition of NT 4.0 relied on Citrix's MultiWin technology, previously provided as a part of Citrix WinFrame atop Windows NT 3.51, in order to support multiple users and login sessions simultaneously. Microsoft required Citrix to license their MultiWin technology to Microsoft in order to be allowed to continue offering their own terminal-services product, then named Citrix MetaFrame, atop Windows NT 4.0. The Citrix-provided DLLs included in Windows NT 4.0 Terminal Services Edition still carry a Citrix copyright rather than a Microsoft copyright. Later versions of Windows integrated the necessary support directly. The T.128 {{application sharing}} technology was acquired by Microsoft from UK software developer Data Connection Limited.|$|E
5000|$|The {{following}} are the filenames used for the firmware files that get downloaded by various DECserver <b>terminal</b> <b>servers</b> when they boot up and initialize: ...|$|R
50|$|By using <b>terminal</b> <b>servers,</b> Imlacs {{at other}} colleges that were {{connected}} to the ARPANET could {{connect to the server}} at MIT and play against players located across the United States.|$|R
5000|$|Raw UDP socket connection: For {{use with}} UDP based applications, <b>terminal</b> <b>servers</b> can convert serial {{equipment}} data for transport across UDP packets on a point-to-point basis or shared across multiple devices.|$|R
5000|$|NoMachine <b>Terminal</b> <b>Server</b> Family - Offering the <b>terminal</b> <b>server</b> for Linux {{functionality}} {{also known}} as Linux Virtual Desktop.|$|E
50|$|Citrix {{released}} MetaFrame 1.0 {{in conjunction}} with <b>Terminal</b> <b>Server</b> Edition. Due to weaknesses in Microsoft's Remote Desktop Protocol (RDP), <b>Terminal</b> <b>Server</b> Edition worked best using the ICA protocol developed by Citrix and found in MetaFrame. This meant that Citrix technology was purchased and installed on most machines running <b>Terminal</b> <b>Server</b> Edition.|$|E
50|$|The P4000 is a low-cost, {{low-profile}} <b>terminal</b> <b>server</b> {{produced by}} Lantronix during the mid-1990s. As the industry's first compact design <b>terminal</b> <b>server,</b> it found it way to shops that {{were looking for}} low-cost access methods to a fast-growing base of DEC VAX server products. The P4000 was fixed in port count (16) and housed in a plastic shell with the industry's first <b>terminal</b> <b>server</b> with LCD status screen.|$|E
50|$|Terminal Services is a {{function}} of Microsoft Windows that allows several types of connections to the server components of the system. Windows Server versions prior to 2003 do not necessarily require the use of specialized Terminal Services CALs; rather, clients which are of at least the same or lower version of the operating system are allowed access automatically. For example, Windows NT 4.0 clients may connect to Windows NT 4.0 <b>terminal</b> <b>servers</b> but not Windows 2000 or later; Windows 2000 or Windows XP clients may connect to Windows NT 4.0 or Windows 2000 <b>terminal</b> <b>servers.</b> This is called the equivalency license.|$|R
50|$|As well as {{connecting}} terminals {{and being}} used as standard <b>terminal</b> <b>servers,</b> DECservers also support reverse connections (either LAT, or on later models Telnet) allowing them {{to be used as}} print servers or console servers.|$|R
50|$|Spider Systems {{produced}} {{a wide range}} of products, including <b>terminal</b> <b>servers,</b> routers, network bridges, network analysers and network protocol software stacks for various operating systems, including the TCP/IP stack used in Microsoft Windows NT 3.1.|$|R
