3|1|Public
5000|$|Tamper-resistant chips may be {{designed}} <b>to</b> <b>zeroise</b> their sensitive data (especially cryptographic keys) if they detect penetration of their security encapsulation or out-of-specification environmental parameters. A chip {{may even be}} rated for [...] "cold zeroisation", the ability <b>to</b> <b>zeroise</b> itself even after its power supply has been crippled. In addition, the custom-made encapsulation methods used for chips used in some cryptographic products may {{be designed}} {{in such a manner}} that they are internally pre-stressed, so the chip will fracture if interfered with.|$|E
50|$|In tamper {{resistant}} hardware, automatic zeroisation may be initiated when tampering is detected. Such hardware may be rated for cold zeroisation, the ability <b>to</b> <b>zeroise</b> itself without its normal power supply enabled.|$|E
50|$|In modern {{software}} based cryptographic modules, zeroisation is made {{considerably more}} complex by {{issues such as}} virtual memory, compiler optimisations and use of flash memory. Also, zeroisation {{may need to be}} applied not only to the key, but also to a plaintext and some intermediate values. A cryptographic software developer must have an intimate understanding of memory management in a machine, and be prepared <b>to</b> <b>zeroise</b> data whenever a sensitive device might move outside the security boundary. Typically this will involve overwriting the data with zeroes, {{but in the case of}} some types of non-volatile storage the process is much more complex; see data remanence.|$|E
50|$|Informally, {{software}} developers may also use <b>zeroise</b> <b>to</b> mean any overwriting of sensitive data, not necessarily of a cryptographic nature.|$|R

