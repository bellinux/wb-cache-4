179|1|Public
5000|$|Occurrence of {{abnormal}} behaviours (e.g. stereotypies, feather pecking, <b>tail-biting,</b> facial expressions) ...|$|E
50|$|Ethograms {{are used}} {{extensively}} {{in the study of}} welfare science. Ethograms can be used to detect the occurrence or prevalence of abnormal behaviours (e.g. stereotypies, feather pecking, <b>tail-biting),</b> normal behaviours (e.g. comfort behaviours), departures from the ethogram of ancestral species and the behaviour of captive animals upon release into a natural environment.|$|E
5000|$|In {{a little}} {{mushroom}} village live the Smurfs, diminutive blue-skinned humanoid creatures. One day, {{one of them}} gets bit by a black fly that turns his skin jet black, reduces his vocabulary to the single word [...] "gnap!", and causes him to go berserk. He bounces around and bites other Smurfs on their tail, which turns them into black Smurfs as well. Soon, almost everyone in the village has become a black Smurf, and Papa Smurf, the leader, tries {{to find a cure}} and cease the <b>tail-biting</b> epidemic. The cure is found in magnolia pollen, which is gathered in great quantity and loaded in fireplace bellows to be used as impromptu ranged weapons against contaminated Smurfs. The black Smurf has to inhale the pollen, which, after a loud and powerful sneeze, causes him to revert to his usual blue-skinned bonhomie. A great battle is fought outside the village, as the black, <b>tail-biting</b> horde closes in, threatening to destroy Smurf civilization for good.|$|E
50|$|A {{major concern}} {{for the welfare of}} farm animals is factory farming in which large numbers of animals are reared in {{confinement}} at high stocking densities. Issues include the limited opportunities for natural behaviors, for example, in battery cages, veal and gestation crates, instead producing abnormal behaviors such as <b>tail-biting,</b> cannibalism, and feather pecking, and routine invasive procedures such as beak trimming, castration, and ear notching. More extensive methods of farming, e.g. free range, can also raise welfare concerns such as the mulesing of sheep, predation of stock by wild animals, and biosecurity.|$|E
30|$|A {{conventional}} CVA-based decoder performs Viterbi iterations {{around the}} <b>tail-biting</b> trellis {{to find the}} optimal <b>tail-biting</b> path. This algorithm {{takes advantage of the}} circular property of <b>tail-biting</b> trellises and employs the path metrics accumulated in the ending states of the trellis to initialize the path metrics in the starting states for a new iteration until a predefined termination condition is fulfilled. In the following parts, we elaborate the decoding process of CVA on <b>tail-biting</b> convolutional codes. The decoding process for general <b>tail-biting</b> trellises can be similarly obtained.|$|E
40|$|In this paper, {{embedding}} {{construction of}} <b>tail-biting</b> trellises for linear block codes is presented. With {{the new approach}} of constructing <b>tail-biting</b> trellises, most {{of the study of}} <b>tail-biting</b> trellises can be converted into the study of conventional trellises. It is proved that any minimal <b>tail-biting</b> trellis can be constructed by the recursive process of embedding constructions from the well-known Bahl-Cocke-Jelinek-Raviv (BCJR) constructed conventional trellises. Furthermore, several properties of embedding constructions of <b>tail-biting</b> trellises are discussed. Finally, we give four sufficient conditions to reduce the maximum state-complexity of a trellis with one peak...|$|E
30|$|In addition, the <b>tail-biting</b> {{technique}} {{has been widely}} used in convolutional encoders to eliminate the rate loss caused by the known tail bits. For example, the Worldwide Interoperability for Microwave Access (WiMAX)[9] and Long Term Evolution[10] standards both adopted <b>tail-biting</b> convolutional codes in the control channel or broadcasting channel. Consequently, a maximum likelihood (ML) decoder with high decoding efficiency on <b>tail-biting</b> trellises is important and desirable for studying <b>tail-biting</b> codes.|$|E
40|$|We present {{extensions}} to Raghavan and Baum’s reliability-output Viterbi algorithm (ROVA) {{to accommodate}} <b>tail-biting</b> convolutional codes. These <b>tail-biting</b> reliability-output algorithms compute the exact word-error probability of the decoded codeword after first calculating the posterior probability of the decoded <b>tail-biting</b> codeword’s starting state. One approach employs a state-estimation algorithm that selects the maximum a posteriori state {{based on the}} posterior distribution of the starting states. Another approach is an approximation to the exact <b>tail-biting</b> ROVA that estimates the word-error probability. A comparison of the computational complexity of each approach is discussed in detail. The presented reliability-output algorithms apply to both feedforward and feedback <b>tail-biting</b> convolutional encoders. These <b>tail-biting</b> reliability-output algorithms are suit-able for use in reliability-based retransmission schemes with short blocklengths, in which terminated convolutional codes would introduce rate loss...|$|E
40|$|In this paper, {{we present}} {{new ways of}} {{describing}} and constructing linear <b>tail-biting</b> trellises for block codes. We extend the well-known Bahl–Cocke–Jelinek–Raviv (BCJR) construction for conventional trellises to <b>tail-biting</b> trellises. The BCJR-like labeling scheme yields a simple specification for the <b>tail-biting</b> trellis for the dual code, with the dual trellis having the same state-complexity profile {{as that of the}} primal code. Finally, we show that the algebraic specification of Forney for state spaces of conventional trellises has a natural extension to <b>tail-biting</b> trellises...|$|E
40|$|The {{performance}} of high-rate <b>tail-biting</b> convolutional codes serially concatenated with generalized partial response channels is studied. The effect of precoders {{on the overall}} performance is investigated. Extrinsic information transfer charts are used to guide the selection of appropriate <b>tail-biting</b> codes and precoders. Simulation results for a magnetic recording system modeled as a serial concatenation of <b>tail-biting</b> codes with a generalized partial response channel are presented. In particular, rate- 8 / 9 and- 16 / 17 short and long block length <b>tail-biting</b> codes are studied. In the former case, hard-decision decoded interleaved Reed-Solomon (RS) codes are used as the outer-most code, whereas {{in the latter case}} the sector-size <b>tail-biting</b> codes replace the RS codes traditionally used in storage systems. The results indicate that high-rate <b>tail-biting</b> codes deliver significant performance gains when used in conjunction with a rate- 1 precoder and iterative detection/decoding. Furthermore, the results also show that long <b>tail-biting</b> codes can outperform hard-decision decoding of RS codes by approximately 2. 25 dB at a sector error rate of 10...|$|E
30|$|We {{propose a}} {{convergent}} CVA-based ML decoder for <b>tail-biting</b> trellises. The proposed algorithm {{takes advantage of}} the lower bound of the net path metric of the <b>tail-biting</b> path to control the decoding process of CVA. Simulation results show that, on <b>tail-biting</b> trellises, the B-CVA decoder exhibits high decoding efficiency while requiring relatively small memory space during the decoding process. These advantages make it attractive to practical applications.|$|E
40|$|We present {{new ways}} of {{describing}} and constructing linear <b>tail-biting</b> trellises for linear block codes. We extend the well-known BCJR construction for conventional trellises to <b>tail-biting</b> trellises. This results in a labeling scheme {{for the construction of}} a minimal <b>tail-biting</b> trellis. The BCJR-like labeling scheme also yields a simple specification of the generator matrix for the trellis for the dual code which has the same state-complexity profile as the trellis for the primal code. Finally, we show that the algebraic specification of Forney for state spaces of conventional trellises has a natural extension to <b>tail-biting</b> trellises. ...|$|E
40|$|We propose two {{approximate}} algorithms for MAP decoding on <b>tail-biting</b> trellises. The algorithms work on {{a subset}} of nodes of the <b>tail-biting</b> trellis, judiciously selected. We report the results of simulations on an AWGN channel using the approximate algorithms on <b>tail-biting</b> trellises for the $(24, 12) $ Extended Golay Code and a rate 1 / 2 convolutional code with memory 6. Comment: 5 pages, 2 figures, ISIT 200...|$|E
40|$|This thesis {{presents}} {{new techniques}} {{for the construction}} and specification of linear <b>tail-biting</b> trellises. <b>Tail-biting</b> trellises for linear block codes are combinatorial descriptions {{in the form of}} layered graphs, that are somewhat more compact than the corresponding conventional trellis descriptions. Conventional trellises for block codes have a well understood underlying theory. On the other hand, the theory of <b>tail-biting</b> trellises appears to be somewhat more involved, though several advances in the understanding of the structure and properties of such trellises have been made in recent years. Of fundamental importance is the observation that a linear <b>tail-biting</b> trellis for a block code corresponds to a coset decomposition of the code with respect to a subcode. All constructions seem to use this property in some way; in other words, this is the unifying factor in all our constructions. The constructions yield the conventional trellis when the subcode is the whole code. We list the main contributions of this thesis. (i) We generalize the well known Bahl-Cocke-Jelinek-Raviv construction for conventional trellises to obtain <b>tail-biting</b> trellises. We show that a linear <b>tail-biting</b> trellis for...|$|E
40|$|Abstract <b>Tail-biting</b> trellises for block codes have {{considerably}} fewer {{number of}} states than conventional trellises and hence have potential for greatly improving the decoder performance. Although the formal theory for constructing such trellises is currently being worked out, a few <b>tail-biting</b> trellises for some linear block codes are available. Minimal <b>tail-biting</b> trellis for (15, 11) Reed Solomon code which belongs to a class of codes known as Maximum Distance Seperable(MDS) codes has been constructed based upon existing theorem. An efficient maximum likelihood soft-decision decoding algorithm for <b>tail-biting</b> trellises is proposed. Experiments indicate that the decoding algorithm is considerably more efficient than the traditional Viterbi algorithm run on the conventional trellis...|$|E
3000|$|A {{conventional}} CVA-based decoder is non-convergent, and consequently, it cannot {{guarantee that}} the <b>tail-biting</b> path obtained is optimal when the decoding process is terminated[4, 7]. In order to design a convergent ML decoder on <b>tail-biting</b> trellises, further information needs to {{be obtained from the}} decoding process of CVA. Based on the characteristics of CVA, we can derive a lower bound of the net path metric of each <b>tail-biting</b> path. This observation is summarized in Lemma 1 [...]...|$|E
40|$|<b>Tail-biting</b> {{codes are}} {{considered}} as component codes for parallel concatenated block codes. Based on the two-dimensional weight distribution of <b>tail-biting</b> codes, we calculate the minimum {{distance of the}} parallel concatenated code and give guidelines on how to choose good <b>tail-biting</b> component codes. We show how to encode tail{biting codes using systematic feedback encoders, which is an important design criterion. The performance of codes with di erent rate, length, and complexity using iterative (turbo) decoding is evaluated by simulation...|$|E
30|$|Both the Viterbi {{algorithm}} and bidirectional {{efficient algorithm}} for searching code trees (BEAST) can achieve ML decoding on conventional trellises[8]. In {{the case of}} a <b>tail-biting</b> trellis, {{due to the lack of}} a priori knowledge about the starting state, the Viterbi and BEAST decoder have to perform an exhaustive search on <b>tail-biting</b> trellises to find the ML codeword. BEAST can be more efficient if applied to the conventional trellis obtained by reducing the <b>tail-biting</b> code generator matrix to the minimum span form[8].|$|E
40|$|Basic {{properties}} of a characteristic matrix for a <b>tail-biting</b> convolutional code are investigated. A <b>tail-biting</b> convolutional code {{can be regarded}} as a linear block code. Since the corresponding scalar generator matrix Gt has a kind of cyclic structure, an associated characteristic matrix also has a cyclic structure, from which basic {{properties of}} a characteristic matrix are obtained. Next, using the derived results, we discuss the possibility of trellis reduction for a given <b>tail-biting</b> convolutional code. There are cases where we can find a scalar generator matrix Gs equivalent to Gt based on a characteristic matrix. In this case, if the polynomial generator matrix corresponding to Gs has been reduced, or can be reduced by using appropriate transformations, then trellis reduction for the original <b>tail-biting</b> convolutional code is realized. In many cases, the polynomial generator matrix corresponding to Gs has a monomial factor in some column and is reduced by dividing the column by the factor. Note that this transformation corresponds to cyclically shifting the associated code subsequence (a <b>tail-biting</b> path is regarded as a code sequence) to the left. Thus if we allow partial cyclic shifts of a <b>tail-biting</b> path, then trellis reduction is accomplished. Comment: 25 pages, 3 figure...|$|E
30|$|<b>Tail-biting</b> trellises {{are defined}} on a {{circular}} time axis and {{can have a}} smaller number of states than equivalent conventional trellises. Existing circular Viterbi algorithms (CVAs) on the <b>tail-biting</b> trellis are non-convergent and sub-optimal. In this study, we show that the net path metric of each <b>tail-biting</b> path is lower-bounded during the decoding process of the CVA. This property can be applied to remove unnecessary iterations of the CVA and results in a convergent maximum likelihood (ML) decoder. Simulation results show that the proposed algorithm exhibits higher decoding efficiency compared with other existing ML decoders.|$|E
40|$|In this paper, {{we discuss}} the {{reduction}} of error-trellises for <b>tail-biting</b> convolutional codes. In the case where some column of a parity-check matrix has a monomial factor (with indeterminate D), we show that the associated <b>tail-biting</b> error-trellis can be reduced by cyclically shifting the corresponding error-subsequence by l (the power of D) time units. We see that the resulting reduced error-trellis is again <b>tail-biting.</b> Moreover, we show that reduction is also possible using backward-shifted error-subsequences. Comment: 5 pages, submitted to the 2014 IEEE International Symposium on Information Theor...|$|E
3000|$|The <b>tail-biting</b> {{convolutional}} code that {{is represented by}} the <b>tail-biting</b> trellis in Figure 1 is selected in this example. The information sequence is { 01011100 }, and the corresponding codeword is {(00), (11), (10), (00), (01), (10), (01), (11)}. After passing through the AWGN channel where the signal-to-noise ratio (SNR) is E [...]...|$|E
40|$|A linear time {{approximate}} {{maximum likelihood}} decoding algorithm on <b>tail-biting</b> trellises is presented, that requires exactly two rounds on the trellis. This is {{an adaptation of}} an algorithm proposed earlier with the advantage that it reduces the time complexity from O(m log m) to O(m) where m {{is the number of}} nodes in the <b>tail-biting</b> trellis. A necessary condition for the output of the algorithm to differ from the output of the ideal ML decoder is deduced and simulation results on an AWGN channel using <b>tail-biting</b> trellises for two rate 1 / 2 convolutional codes with memory 4 and 6 respectively, are reported...|$|E
30|$|The {{circular}} Viterbi algorithm (CVA)-based decoder greatly {{reduces the}} implementation complexity of a decoder for <b>tail-biting</b> trellises and provides near-optimal block error rate performance. However, the decoding {{process of the}} CVA is non-convergent and sub-optimal[4, 7]. In this paper, we introduce a CVA-based ML decoder for <b>tail-biting</b> trellises. In this algorithm, the lower bound of the net path metric of each <b>tail-biting</b> path can be obtained to exclude impossible starting state candidates, which leads to convergence of the CVA. In addition, the net path metric of survivor paths {{can be used to}} terminate redundant searches without performing a full Viterbi iteration.|$|E
40|$|Construction of dual <b>tail-biting</b> trellises from primal ones is an {{important}} problem in trellis based decoding algorithms for linear codes. Generalizations of two well known labeling algorithms are presented {{for the construction of}} <b>tail-biting</b> trellises. The construction techniques lead directly to an algorithm for construction of a dual trellis from an algebraic description of the primal one. ...|$|E
40|$|In this paper, {{we present}} an {{algebraic}} construction of <b>tail-biting</b> trellises. The proposed method {{is based on}} the state space expressions, i. e., the state space is the image of the set of information sequences under the associated state matrix. Then combining with the homomorphism theorem, an algebraic trellis construction is obtained. We show that a <b>tail-biting</b> trellis constructed using the proposed method is isomorphic to the associated Koetter-Vardy (KV) trellis and <b>tail-biting</b> Bahl-Cocke-Jelinek-Raviv (BCJR) trellis. We also evaluate the complexity of the obtained <b>tail-biting</b> trellises. On the other hand, a matrix consisting of linearly independent rows of the characteristic matrix is regarded as a generalization of minimal-span generator matrices. Then we show that a KV trellis is constructed based on an extended minimal-span generator matrix. It is shown that this construction is a natural extension of the method proposed by McEliece (1996). Comment: 14 pages, 10 figure...|$|E
30|$|For linear block codes, {{conventional}} trellis and <b>tail-biting</b> trellis representations {{have gained}} {{a great deal}} of attention in the past decades[1 – 3]. Trellis representations not only reveal the code structure, but also lead to efficient trellis-based decoding algorithms[4 – 8]. For the same linear block codes, the number of states in its <b>tail-biting</b> trellis can be as low as the square root of the number of states in its minimal conventional trellis[1, 8], e.g., for the (24, 12) extended Golay code, the maximum number of states in its conventional trellis is 512 [8], while the maximum number of states in its time-varying <b>tail-biting</b> trellis is only 16 [1].|$|E
40|$|Abstract — A {{definition}} of atomic codeword {{for a group}} code is presented. Some properties of atomic codewords of group codes are investigated. Using these properties, it is shown that every minimal <b>tail-biting</b> trellis for a group code over a finite abelian group can be constructed from its characteristic generators, which extends the work of Koetter and Vardy who treated {{the case of a}} linear code over a field. We also present an efficient algorithm for constructing the minimal <b>tail-biting</b> trellis of a group code over a finite abelian group, given a generator matrix. Index Terms — atomic codewords, biproper p-bases, characteristic generators, group codes, <b>tail-biting</b> trellises. I...|$|E
40|$|Abstract — A linear time {{approximate}} {{maximum likelihood}} decoding algorithm on <b>tail-biting</b> trellises is presented, that requires exactly two rounds on the trellis. This is {{an adaptation of}} an algorithm proposed earlier with the advantage that it reduces the time complexity from O(m log m) to O(m) where m {{is the number of}} nodes in the <b>tail-biting</b> trellis. A necessary condition for the output of the algorithm to differ from the output of the ideal ML decoder is deduced and simulation results on an AWGN channel using <b>tail-biting</b> trellises for two rate 1 / 2 convolutional codes with memory 4 and 6 respectively, are reported. I...|$|E
40|$|We propose two {{approximate}} algorithms for MAP decoding on <b>tail-biting</b> trellises. The algorithms work on {{a subset}} of nodes, judiciously selected. They {{can be described as}} “best search ” algorithms, and exploit the fact that every <b>tail-biting</b> trellis for a code corresponds to a coset decomposition of the code with respect to a subgroup. We report the results of simulations on an AWGN channel using the approximate algorithms on <b>tail-biting</b> trellises for the 16 state (24, 12) Extended Golay Code, and two rate 1 / 2 convolutional codes with memory 4 and 6 respectively, and compare the results with those obtained using the Anderson-Hladik MAP decoding algorithm on these codes. ...|$|E
40|$|An {{algorithm}} for exact maximum likelihood(ML) decoding on <b>tail-biting</b> trellises is presented, which exhibits {{very good}} average case behavior. An approximate variant is proposed, whose simulated performance is observed to be virtually {{indistinguishable from the}} exact one at all values of signal to noise ratio, and which effectively performs computations equivalent to at most two rounds on the <b>tail-biting</b> trellis. The approximate algorithm is analyzed, and {{the conditions under which}} its output is different from the ML output are deduced. The results of simulations on an AWGN channel for the exact and approximate algorithms on the 16 state <b>tail-biting</b> trellis for the (24, 12) Extended Golay Code, and <b>tail-biting</b> trellises for two rate 1 / 2 convolutional codes with memories of 4 and 6 respectively, are reported. An advantage of our algorithms is that they do not suffer from the effects of limit cycles or the presence of pseudocodewords. Comment: 23 pages, 8 figures, Submitted to IEEE Transactions on Information Theory. Figures 7 and 8 replace...|$|E
40|$|Abstract — In a turbo coded {{orthogonal}} {{frequency-division multiplexing}} (TCOFDM) system, low peak-to-average power ratio (PAPR) {{can be achieved}} by selective-mapping (SLM). In this paper, we propose to generate multiple candidates used in SLM by employing the <b>tail-biting</b> bits in a <b>tail-biting</b> turbo code. In our method, no explicit side information is needed and no error propagation is observed. Low PAPR can also be achieved by distortion-based techniques such as deliberate clipping. Although SLM is originally proposed for PAPR reduction, we also apply a concept similar to SLM to clipping-based TCOFDM systems for improved bit error rate (BER). With these proposed techniques, a <b>tail-biting</b> TCOFDM system can achieve both low PAPR and low BER...|$|E
40|$|On the {{complexity}} of exact maximum likelihood decoding on <b>tail-biting</b> trellises Abstract — We analyze an algorithm for exact maximum likelihood decoding on <b>tail-biting</b> trellises and show that under certain conditions exact maximum likelihood decoding has time complexity O(St log(St)) and where St is {{the total number of}} states of the tailbiting trellis. I. Our Main Result We show that an algorithm proposed by us in [1] needs at most O(St) Viterbi updates in the <b>tail-biting</b> trellis under certain assumptions. The algorithm needs to use a heap for keeping track of intermediate results. The St log St term comes from the overheads of maintaining this heap. In experiments we observe that the actual execution tim...|$|E
40|$|Abstract — In this paper, the <b>tail-biting</b> {{version of}} the lowdensity parity-check {{convolutional}} codes (LDPCCCs) is introduced and investigated. The definition of the <b>tail-biting</b> LDPCCCs (TB-LDPCCCs) is given through their parity-check matrices and the basic ideas behind the architectures of the encoders and decoders for these codes are also presented. In addition, the asymptotical lower bound for the minimum distance of these codes and simulation results are shown...|$|E
40|$|Abstract — This letter {{presents}} an efficient and accurate dis-tance measurement method for <b>tail-biting</b> turbo codes that use structured interleavers. This method {{takes advantage of}} the structure in the interleaver as well as the circular property of <b>tail-biting.</b> As such, it significantly reduces the computational complexity, which allows the accurate determination of high minimum distance (dmin) in reasonable time. The efficiency of this method is demonstrated by its ability to determine the true dmin of 51 and the corresponding true multiplicities for a rate- 1 / 3 turbo code that uses the UMTS 8 -state polynomial generators and an MPEG-sized interleaver (1504 information bits) in reasonable time. Index Terms — Turbo codes, <b>tail-biting,</b> minimum distance, structured interleavers, DRP interleaver, DVB-RCS, UMTS...|$|E
30|$|Similar to the <b>tail-biting</b> case (Equation 11), Equation 16 {{also can}} be solved a priori, then using a look-up-table.|$|E
