1|2532|Public
50|$|This version, {{finalized}} 27 February 2007, {{expands the}} capabilities of XHTML MP 1.1 with full support for the Forms Module and OMA <b>Text</b> <b>Input</b> <b>Modes.</b> XHTML MP 1.2 is part of v2.3 of the OMA Browsing Specification (13 March 2007).|$|E
40|$|ParamAP is a {{standalone}} computational {{tool that}} uses a template-free detection algorithm to automatically identify and parameterize sinoatrial myocyte action potentials. ParamAP is written in Python 3 {{and it can be}} run on Windows, Mac OS X, or Ubuntu operating systems. It employs a graphic user interface with automatic and user-editable <b>input</b> <b>modes.</b> ParamAP accepts <b>text</b> <b>input</b> files and returns a total of 16 AP waveform parameters as text and graphical outputs...|$|R
40|$|Abstract. The {{purposes}} of this study were to design an alternative on-screen keyboard for people with physical impairments and to evaluate the efficacy of the chorded input method. The approach of the on-screen keyboard is based on the human computer interface. It gives visual guide and instant feedback to show users where they can find the characters they need. The system has been designed with the principles of universal design. Three factors including the learning ability, efficiency of using and subjective satisfaction are considered as the usability evaluation. According to a preliminary study, the participant felt mastered the <b>text</b> <b>input</b> method quickly. An experimental evaluation on the typing performance of the subjects with muscular dystrophy will be measured under both scanning <b>input</b> <b>mode</b> and chorded <b>input</b> <b>mode</b> in the future. ...|$|R
40|$|This paper {{describes}} {{the design and}} early evaluation of a method for validating phrase sets for <b>text</b> <b>input</b> experiments. The paper begins with a historical overview of <b>text</b> <b>input</b> research and then widens the discussion to consider the effects on the research results of different users and different technologies. A framework is proposed for future verification of phrase sets and a small empirical study is described that provides evidence that the framework has potential. 1 <b>Text</b> <b>Input</b> Research We spend {{a significant amount of}} time carrying out <b>text</b> <b>input</b> activities. This time is generally made up of input time and correction time. Our time and effort would be reduced if it were possible to have more efficient <b>text</b> <b>input</b> methods that were quicker to use and provided improved accuracy and error repair. The study of <b>text</b> <b>input</b> has been around for some time. It is usual to make judgements of <b>text</b> <b>input</b> by using <b>text</b> phrases that users copy. In...|$|R
40|$|In {{this paper}} we discuss our use of {{multi-modal}} input to improve human computer interaction. Specifically {{we look at the}} methods used in the Intelligent Classroom to combine multiple <b>input</b> <b>modes,</b> and examine in particular the visual <b>input</b> <b>modes.</b> The Classroom provides context that improves the functioning of the visual <b>input</b> <b>modes.</b> It also determines which visual <b>input</b> <b>modes</b> are needed when. We examine a number of visual <b>input</b> <b>modes</b> to see how they fit into the general scheme, and look at how the Classroom controls their operation...|$|R
5000|$|In {{the mobile}} <b>text</b> <b>input</b> technologies, Glyph {{is a family}} of <b>text</b> <b>input</b> methods based on the {{decomposition}} of letters into basic shapes.|$|R
40|$|This paper {{describes}} the current metrics used in <b>text</b> <b>input</b> research, considering those used for discrete <b>text</b> <b>input</b> {{as well as}} those used for spoken input. It examines how these metrics might be used for handwritten <b>text</b> <b>input</b> and provides some thoughts about different metrics that might allow for a more fine grained evaluation of recognition improvement or input accuracy...|$|R
50|$|The phone uses SMS (Short Message Service) with T9 {{predictive}} <b>text</b> <b>input,</b> {{with support}} for major European languages. Asian version firmware features PinYin <b>text</b> <b>input</b> which enables Chinese words to be typed and sent.|$|R
40|$|This paper {{describes}} the current metrics used in <b>text</b> <b>input</b> research, considering those used for discrete <b>text</b> <b>input</b> {{as well as}} those used for spoken input. It examines how these metrics might be used for handwritten <b>text</b> <b>input</b> and provides some thoughts about different metrics that might allow for a more fine grained evaluation of recognition improvement or <b>input</b> accuracy. <b>Text</b> <b>Input</b> Methods Users spend a significant amount of carrying out <b>text</b> <b>input</b> activities. This time comprises thinking time, input time, and correction time and, more often than not, this time is spent at a keyboard, either a QWERTY keyboard or a reduced keyboard (as found on mobile phones). It is therefore, unsurprising that most of the work on <b>text</b> <b>input</b> has focussed on these two paradigms. There are several other methods for entering text at a computer, these include gaze typing and spoken input and, {{with the advent of the}} PDA and, more recently, the tablet PC, users can use handwritten text that is created with a stylus or pen. Thi...|$|R
40|$|Mobile {{computing}} devices, {{in particular}} smartphones are powered from Lithium-ion batteries, which {{are limited in}} capacity. With the increasing popularity of mobile systems, various <b>text</b> <b>input</b> methods {{have been developed to}} improve user experience and performance. Briefly, <b>text</b> <b>input</b> method is a user interface {{that can be used to}} compose an electronic mail, configure mobile Virtual Private Network, and carryout bank transactions and online purchases. Efficient energy management in these systems requires an extensive knowledge of where and how the energy is being used. This thesis investigates the energy consumption of <b>text</b> <b>input</b> methods on various smartphones. Hence, the authors modeled the energy consumption profile of <b>text</b> <b>input</b> methods on smartphones and analyze the energy usage benchmarks of the battery. This thesis presents a systematic technique to conduct application specific measurements. The data analysis showed substantial variations in the energy consumptions of various <b>text</b> <b>input</b> methods on a smartphone. The main objective of this research is to find a systematic and measurement based method to evaluate the energy efficiency of the selected <b>text</b> <b>input</b> methods used on smartphones namely: SwiftKey, Swype, and Zimpl. Using Power Monitor equipment and MATLAB, the energy consumption log files of the <b>text</b> <b>input</b> methods were collected for each of the smartphones, and analyzed. This research introduces an optimized technique to carry-out application specific test on smartphones. It is hoped that the thesis will be beneficial to smartphone battery manufacturers and developers of <b>text</b> <b>input</b> techniques on how to make users’ smartphone battery last longer...|$|R
40|$|Information {{technology}} plays a {{very important}} role in society. People with disabilities are often limited by slow <b>text</b> <b>input</b> speed despite the use of assistive devices. This study aimed to evaluate the effect of a dynamic on-screen keyboard (Custom Virtual Keyboard) and a word-prediction system (Sibylle) on <b>text</b> <b>input</b> speed in participants with functional tetraplegia. Ten participants tested four modes at home (static on-screen keyboard with and without word prediction and dynamic on-screen keyboard with and without word prediction) for 1 mo before choosing one mode and then using it for another month. Initial mean <b>text</b> <b>input</b> speed was around 23 characters per minute with the static keyboard and 12 characters per minute with the dynamic keyboard. The results showed that the dynamic keyboard reduced <b>text</b> <b>input</b> speed by 37 % compared with the standard keyboard and that the addition of word prediction had no effect on <b>text</b> <b>input</b> speed. We suggest that current forms of dynamic keyboards and word prediction may not be suitable for increasing <b>text</b> <b>input</b> speed, particularly for subjects who use pointing devices. Future studies should evaluate the optimal ergonomic design of dynamic keyboards and the number and position of words that should be predicted...|$|R
50|$|Note that Envy24HT-S {{supports}} 24-bit / 192 kHz mode only in 4 channel output (4 channel <b>input)</b> <b>mode,</b> {{while in}} 8 channel output (2 channel <b>input)</b> <b>mode</b> it {{is limited to}} 20-bit / 48 kHz.|$|R
40|$|A new {{technique}} to enter text using a mobile phone keypad is described. For <b>text</b> <b>input,</b> the traditional touch-tone phone keypad is ambiguous because each key encodes {{three or four}} letters. Instead of using a stored dictionary to guess the intended word, our technique uses probabilities of letter sequences — “prefixes ” — to guess the intended letter. Compared to dictionary-based methods, this technique, called LetterWise, takes significantly less memory and allows entry of non-dictionary words without switching to a special <b>input</b> <b>mode.</b> We conducted a longitudinal study to compare LetterWise to Multitap, the conventional text entry method for mobile phones. The experiment included 20 participants (10 LetterWise, 10 Multitap), and each entered phrases of text for 20 sessions of about 30 minutes each. Error rates were similar between the techniques; however, {{by the end of}} the experiment the mean entry speed was 36 % faster with LetterWise than with Multitap...|$|R
50|$|The {{focus of}} this project is to {{increase}} the Indian <b>text</b> <b>input</b> on smartphones and tablets. A better <b>text</b> <b>input</b> mechanism will be helpful to people with little or no knowledge of English, and also for those who prefer not to use English.|$|R
40|$|The {{fundamental}} {{nature of}} grocery shopping {{makes it an}} interesting domain for intelligent mobile assistants. Even though {{the central role of}} shopping lists is widely recognized, relatively little {{attention has been paid to}} facilitating shopping list creation and management. In this paper we introduce a predictive <b>text</b> <b>input</b> technique that is based on association rules and item frequencies. We also describe an interface design for integrating the predictive <b>text</b> <b>input</b> with a web-based mobile shopping assistant. In a user study we compared two interfaces, one with <b>text</b> <b>input</b> support and one without. Our results indicate that, even though shopping list entries are typically short, our technique makes <b>text</b> <b>input</b> significantly faster, decreases typing error rates and increases overall user satisfaction. Author Keywords user interface, adaptive, recommendations, usabilit...|$|R
40|$|Via the use {{of mobile}} phones, the Short Message Service (SMS) is {{the one of the}} most {{important}} mobile applications for communication between two or more people. Moreover, the effectiveness on typing messages needed to be improved in the area of the typing performance. When the typing performance is low, people might get frustrated. There are several <b>text</b> <b>input</b> methods in mobile phones. The study is conducted based on three <b>text</b> <b>input</b> methods such as T 9 method. Multi-press with next button and Multipress with timeout method. However, there are problems caused by these three methods towards mobile phone application. There are numerous errors when typing messages using <b>text</b> <b>input</b> methods. Moreover, some <b>text</b> <b>input</b> methods are just too expensive and these methods take so much space in mobile phones' memory. Therefore, a lot of investigations or research must be done to determine which <b>text</b> <b>input</b> method that is able to gain more interest among stakeholders. Moreover, the new prototype recommended will be able to overcome the problems caused by existing <b>text</b> <b>input</b> methods. The purpose of the study for this research is to experiment the typical <b>text</b> <b>input</b> methods which are commonly used in mobile phones and also to determine the problems of typing messages which occur in many mobile applications. From this research, it is hoped that the new prototype which has been proposed can overcome the problems of typing messages. The methodologies used in this research are distributing questiormaires to one hundred and fifty one (151) students of the Faculty of Information Technology and Quantative, UiTM Shah Alam, as mobile application users. Moreover, this research has conducted an experiment involving six (6) of students as the test subjects. Based on the methodologies, the comparative results of the three <b>text</b> <b>input</b> methods are validated systematically. But more researches should be conducted in order to gain better information and find solutions to improve the functions of <b>text</b> <b>input</b> methods. Last but not least, it is also hoped that the users will enjoy better mobile application that they use in their daily lives...|$|R
40|$|International audienceInformation {{technology}} plays a {{very important}} role in society. People with disabilities are often limited by slow <b>text</b> <b>input</b> speed despite the use of assistive devices. This study aimed to evaluate the effect of a dynamic on-screen keyboard (Custom Virtual Keyboard) and a word-prediction system (Sibylle) on <b>text</b> <b>input</b> speed in participants with functional tetraplegia. Ten participants tested four modes at home (static on-screen keyboard with and without word prediction and dynamic on-screen keyboard with and without word prediction) for 1 mo before choosing one mode and then using it for another month. Initial mean <b>text</b> <b>input</b> speed was around 23 characters per minute with the static keyboard and 12 characters per minute with the dynamic keyboard. The results showed that the dynamic keyboard reduced <b>text</b> <b>input</b> speed by 37 % compared with the standard keyboard and that the addition of word prediction had no effect on <b>text</b> <b>input</b> speed. We suggest that current forms of dynamic keyboards and word prediction may not be suitable for increasing <b>text</b> <b>input</b> speed, particularly for subjects who use pointing devices. Future studies should evaluate the optimal ergonomic design of dynamic keyboards and the number and position of words that should be predicted...|$|R
40|$|Over {{the last}} several years, speech-based {{question}} answering (QA) has become very popular in contrast to pure search engine based approaches on a desktop. Open-domain QA systems are now much more powerful and precise, {{and they can be}} used in speech applications. Speech-based question answering systems often rely on predefined grammars for speech understanding. In order to improve the coverage of such complex AI systems, we reused speech patterns used to generate textual entailment patterns. These can make multimodal question understanding more robust. We exemplify this {{in the context of a}} domain-specific dialogue scenario. As a result, written <b>text</b> <b>input</b> components (e. g., in a textual input field) can deal with more flexible input according to the derived textual entailment patterns. A multimodal QA dialogue spanning over several domains of interest, i. e., personal address book entries, questions about the music domain and politicians and other celebrities, demonstrates how the textual <b>input</b> <b>mode</b> can be used in a multimodal dialogue shell. 1...|$|R
50|$|There was no {{spelling}} correction or predictive <b>text</b> <b>input.</b>|$|R
5000|$|Input: Touch screen, Predictive <b>Text</b> <b>Input,</b> sliding QWERTY {{keyboard}} ...|$|R
5000|$|Swarachakra, a <b>text</b> <b>input</b> {{system for}} Indic {{languages}} developed at IIT.|$|R
5000|$|T9 ({{predictive}} text), a predictive <b>text</b> <b>input</b> {{technology for}} mobile phones ...|$|R
5000|$|... Touch-Sensitive Display Screen With Absolute And Relative <b>Input</b> <b>Modes</b> ...|$|R
50|$|For <b>input</b> <b>modes,</b> it {{supports}} RPN, Chain and Algebraic input.|$|R
50|$|The phone also {{supports}} WAP 1.1, SMS, HSCSD, and T9 predictive <b>text</b> <b>input.</b>|$|R
50|$|WIMATS, {{application}} software to transcript mathematical and scientific <b>text</b> <b>input</b> into braille script.|$|R
5000|$|The three <b>input</b> <b>modes</b> for {{terminals}} in Seventh Edition Unix were: ...|$|R
40|$|We present SpeeG, a {{multimodal}} speech- {{and body}} gesture-based <b>text</b> <b>input</b> system targeting media centres, set-top boxes and game consoles. Our controller-free zoomable user interface combines speech input with a gesture-based real-time correction of the recog-nised voice input. While the open source CMU Sphinx voice recog-niser transforms speech <b>input</b> into written <b>text,</b> Microsoft’s Kinect sensor {{is used for}} the hand gesture tracking. A modified version of the zoomable Dasher interface combines the input from Sphinx and the Kinect sensor. In contrast to existing speech error correction so-lutions with a clear distinction between a detection and correction phase, our innovative SpeeG <b>text</b> <b>input</b> system enables continuous real-time error correction. An evaluation of the SpeeG prototype has revealed that low error rates for a <b>text</b> <b>input</b> speed of about six words per minute can be achieved after a minimal learning phase. Moreover, in a user study SpeeG has been perceived as the fastest of all evaluated user interfaces and therefore represents a promising candidate for future controller-free <b>text</b> <b>input...</b>|$|R
40|$|Individual {{characters}} and text {{are the main}} inputs in many computing devices. Currently {{there is a growing}} trend in developing small portable devices like mobile phones, personal digital assistants, GPS-navigators, and two-way pagers. Unfortunately these portable computing devices have different user interfaces and therefore the task of <b>text</b> <b>input</b> takes many forms. The user, who in the future is likely to have several of these devices, has to learn several <b>text</b> <b>input</b> methods. We argue {{that there is a need}} for a universal <b>text</b> <b>input</b> method. A method like this would work on a wide range of interface technologies and allow the user to transfer his or her writing skill without device-specific training. To show that device independent <b>text</b> <b>input</b> is possible, we present a candidate for a device independent text entry method that supports skill transfer between different devices. A limited longitudinal study was conducted to achieve a proof of concept evaluation of our Minimal Device Independ [...] ...|$|R
50|$|The phone uses SMS with T9 {{predictive}} <b>text</b> <b>input,</b> {{with support}} for major European languages.|$|R
5000|$|Thinc: A machine {{learning}} library optimized for CPU usage and deep learning with <b>text</b> <b>input.</b>|$|R
5000|$|Phonetic {{representations}} can {{be included}} within <b>text</b> <b>input</b> by including them within double square-brackets. For example: ...|$|R
40|$|International audience Information {{technologies}} play a {{large role}} in both the social and professional lives of individuals. <b>Text</b> <b>input</b> using assistive devices allowing computer access for disabled people is often slow. The aim {{of this study was to}} evaluate the effect of a dynamic on-screen keyboard (custom virtual keyboard [CVK]) and a word prediction system (Sybille) on <b>text</b> <b>input</b> speed in patients with functional tetraplegia...|$|R
40|$|International audienceInformation {{technology}} plays a {{large role}} in both the social and the professional lives of individuals. <b>Text</b> <b>input</b> is often slow with assistive devices which provide computer access to disabled people. The aim {{of this study was to}} evaluate the effect of a dynamic onscreen keyboard (Custom Virtual Keyboard, CVK) and a word prediction system (Sybille) on <b>text</b> <b>input</b> speed in participants with functional tetraplegi...|$|R
40|$|We {{present a}} {{critique}} of language-based modelling for <b>text</b> <b>input</b> research, and propose an alternative inputbased approach. Current language-based statistical models are derived from large samples of text (corpora). However, this text reflects only the output, or final result, of the <b>text</b> <b>input</b> task. We argue that this weakens {{the utility of the}} model, because, (1) users' language is typically quite different from that in any corpus; punctuation symbols, acronyms, slang, etc. are frequently used. (2) A corpus does not reflect the editing process used in its creation. (3) No existing corpus captures the <b>input</b> modalities of <b>text</b> <b>input</b> devices. Actions associated with keys such as Shift, Alt, and Ctrl are missing...|$|R
40|$|Pen-based {{computing}} {{has not yet}} taken off, {{partly because}} of the lack of fast and easy <b>text</b> <b>input</b> methods. The situation is even worse for people using East Asian languages, where thousands of characters are used and handwriting recognition is extremely difficult. In this paper, we propose a new fast <b>text</b> <b>input</b> method for pen-based computers, where text is not composed by entering characters one by one, but by selecting words from a menu of candidates created by filtering the dictionary and predicting from context. Using our approach, users can enter Japanese text more than twice as fast as recognition-based and other existing <b>text</b> <b>input</b> methods. User studies and detailed analysis of the method are also given...|$|R
