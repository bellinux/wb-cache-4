1619|2196|Public
5|$|Older or stripped-down {{systems may}} support only the TZ values {{required}} by POSIX, which specify at most one start and end rule explicitly in the value. For example, TZ='EST5EDT,M3.2.0/02:00,M11.1.0/02:00' specifies {{time for the}} eastern United States starting in 2007. Such a TZ value must be changed whenever DST rules change, and the new value applies to all years, mishandling some older <b>timestamps.</b>|$|E
5|$|The NTFS {{file system}} used by recent {{versions}} of Windows stores the file with a UTC time stamp, but displays it corrected to local—or seasonal—time. However, the FAT filesystem commonly used on removable devices stores only the local time. Consequently, when a file is copied {{from the hard}} disk onto separate media, its time will be set to the current local time. If the time adjustment is changed, the <b>timestamps</b> of the original file and the copy will be different. The same effect can be observed when compressing and uncompressing files with some file archivers. It is the NTFS file that changes seen time. This effect {{should be kept in}} mind when trying to determine if a file is a duplicate of another, although there are other methods of comparing files for equality (such as using a checksum algorithm).|$|E
25|$|The Messages app {{allows users}} to see <b>timestamps</b> for every message they have sent or received.|$|E
50|$|<b>Timestamp</b> Reply replies to a <b>Timestamp</b> message. It {{consists}} of the originating <b>timestamp</b> sent by the sender of the <b>Timestamp</b> {{as well as a}} receive <b>timestamp</b> indicating when the <b>Timestamp</b> was received and a transmit <b>timestamp</b> indicating when the <b>Timestamp</b> reply was sent.|$|R
5000|$|... and the {{transaction}} started after the object's write <b>timestamp,</b> {{it means that}} {{it is safe to}} read the object. In this case, if {{the transaction}} <b>timestamp</b> is after the object's read <b>timestamp,</b> the read <b>timestamp</b> is set to the transaction <b>timestamp.</b>|$|R
5000|$|XAdES-T (<b>timestamp),</b> adding <b>timestamp</b> {{field to}} protect against repudiation; ...|$|R
25|$|Autonomy of {{transactional}} objects: No need {{of conflict}} or equivalent information distribution (e.g., local precedence relations, locks, <b>timestamps,</b> or tickets; no object needs other object's information).|$|E
25|$|The system {{maintains}} versioning for directories, renames, {{and file}} metadata (but not for <b>timestamps).</b> Users can move and/or copy entire directory-trees very quickly, while retaining full revision history.|$|E
25|$|It {{has been}} {{proposed}} that media clients using the Real-time Transport Protocol inhibit generation or use of NTP <b>timestamps</b> during the leap second and the second preceding it.|$|E
5000|$|A higher-valued <b>timestamp</b> occurs {{later in}} time than a lower-valued <b>timestamp.</b>|$|R
5000|$|ICMP <b>Timestamp</b> and ICMP <b>Timestamp</b> Reply, older time {{synchronization}} protocol using ICMP ...|$|R
5000|$|... {{date and}} time values: DATETIME, <b>TIMESTAMP</b> (internally stored as a Unix <b>timestamp)</b> ...|$|R
25|$|Note that to {{successfully}} separate the file names from the <b>timestamps,</b> the delimiter {{between them is}} a tab character. This is invisible on screen and can be lost when diffs are copy/pasted from console/terminal screens.|$|E
25|$|The data {{transfer}} protocol, RTP, facilitates {{the transfer of}} real-time data. Information provided by this protocol include <b>timestamps</b> (for synchronization), sequence numbers (for packet loss and reordering detection) and the payload format which indicates the encoded format of the data.|$|E
25|$|Due to the {{limitations}} of file name length and format, both the GNU and BSD variants devised different methods of storing long filenames. Although the common format does not suffer from the year 2038 problem, many implementations of the ar utility do and {{may need to be}} modified in the future to handle correctly <b>timestamps</b> in excess of 2147483647.|$|E
5000|$|Linked <b>timestamping</b> - Binary hash {{chains are}} a key {{component}} in linked <b>timestamping.</b>|$|R
5000|$|... a 4-byte echo reply <b>timestamp</b> value (the {{most recent}} <b>timestamp</b> {{received}} from you).|$|R
30|$|<b>TIMESTAMP</b> IN - <b>TIMESTAMP</b> OUT - CODE - TRANSCRIPT OF THE CODED PART - COMMENTS.|$|R
25|$|The 64-bit <b>timestamps</b> used by NTP {{consist of}} a 32-bit part for seconds and a 32-bit part for {{fractional}} second, giving a time scale that rolls over every 232 seconds (136 years) and a theoretical resolution of 2−32 seconds (233 picoseconds). NTP uses an epoch of January 1, 1900 so the first roll over will be on February 7, 2036.|$|E
25|$|West, for his part, cites a known {{software}} {{issue with}} phones like Hedgepeth's {{that resulted in}} inaccurate <b>timestamps.</b> He discounts the background sound as being music, since his analysis did not produce any sounds like percussion, a heavy bass or synthesizers. Further, he adds, there are none of the background sounds, like glasses clinking and others talking, that one would associate with a nightclub.|$|E
25|$|An RTP sender {{captures the}} {{multimedia}} data, then encodes, frames and transmits it as RTP packets with appropriate <b>timestamps</b> and increasing sequence numbers. Depending on the RTP profile in use, the sender may set the Payload Type field. The RTP receiver captures the RTP packets, detects missing packets, and may reorder packets. It decodes the frames {{according to the}} payload format and presents the stream to its user.|$|E
50|$|Linked <b>timestamping</b> {{is a type}} of trusted <b>timestamping</b> where issued time-stamps {{are related}} to each other.|$|R
50|$|To restate; every object (P) has a <b>Timestamp</b> (TS), however if {{transaction}} Ti {{wants to}} Write to an object, and the transaction has a <b>Timestamp</b> (TS) that is {{earlier than the}} object's current Read <b>Timestamp,</b> TS(Ti) < RTS(P), then the transaction is aborted and restarted. (If you try to cut in line, to check out early, go {{to the back of}} that line.) Otherwise, Ti creates a new version of object P and sets the read/write <b>timestamp</b> TS of the new version to the <b>timestamp</b> of the transaction TS=TS(Ti).|$|R
5000|$|... #Caption: From a <b>timestamp</b> authority, a {{requestor}} acquires {{a trusted}} <b>timestamp,</b> which is passed to a verifier.|$|R
25|$|SD card {{speed is}} customarily rated by its {{sequential}} {{read or write}} speed. The sequential performance aspect is the most relevant for storing and retrieving large files (relative to block sizes internal to the flash memory), such as images and multimedia. Small data (such as file names, sizes and <b>timestamps)</b> falls under the much lower speed limit of random access, which can be the limiting factor in some use cases.|$|E
25|$|The {{protocol}} {{is usually}} {{described in terms}} of a client-server model, but can as easily be used in peer-to-peer relationships where both peers consider the other to be a potential time source. Implementations send and receive <b>timestamps</b> using the User Datagram Protocol (UDP) on port number 123. They can also use broadcasting or multicasting, where clients passively listen to time updates after an initial round-trip calibrating exchange. NTP supplies a warning of any impending leap second adjustment, but no information about local time zones or daylight saving time is transmitted.|$|E
25|$|Timestamp: (32 bits) Used {{to enable}} the {{receiver}} to play back the received samples at appropriate intervals. When several media streams are present, the <b>timestamps</b> are independent in each stream, {{and may not be}} relied upon for media synchronization. The granularity of the timing is application specific. For example, an audio application that samples data once every 125µs (8kHz, a common sample rate in digital telephony) would use that value as its clock resolution. The clock granularity is one of the details that is specified in the RTP profile for an application.|$|E
5000|$|... otherwise, the {{transaction}} writes to the object, and the object's write <b>timestamp</b> {{is set to}} {{the transaction}}'s <b>timestamp.</b>|$|R
40|$|This thesis {{deals with}} the field of <b>timestamping,</b> digital signing and {{cryptography}} in general. Content {{is divided into two}} main parts, first being the overview of standards and technology behind <b>timestamping.</b> The second part deals with trusted <b>timestamping</b> authority as an entity, which offers <b>timestamping</b> services to outside enviroment. The need for this kind of authorities and their purpose is also explained. We present public key infrastructure (PKI) and various cryptographic standards and technologies. The central piece of this thesis is a presentation of RFC 3161 standard that defines the way, technology and data structures that are needed for <b>timestamping</b> any kind of digital document. The shortcomings and limitations of RFC 3161 standard are also presented. We also present multiple ways of offering <b>timestamping</b> services over internet. At the end we present the software for implementing trusted <b>timestamping</b> authority, that was made as a part of this thesis...|$|R
50|$|Identifier and Sequence Number {{can be used}} by {{the client}} to match the <b>timestamp</b> reply with the <b>timestamp</b> request.|$|R
2500|$|Tickets (local logical <b>timestamps</b> which define local total orders, and are {{propagated}} {{to determine}} global partial order of transactions) ...|$|E
2500|$|... {{maintains}} each database's autonomy, {{and does}} not need any concurrency control information distribution (e.g., local precedence relations, locks, <b>timestamps,</b> or tickets).|$|E
2500|$|Server nonce {{is allowed}} to contain <b>timestamps.</b> Therefore, the server may inspect nonce {{attributes}} submitted by clients, to prevent replay attacks ...|$|E
40|$|The {{delay and}} {{dispersion}} of the packet train {{have been widely}} used in most network measurement tools. The <b>timestamp</b> of the packet is critical for the measurement accuracy. However, <b>timestamping</b> performed either in the application or the kernel layer would be easily affected by the source and destination hosts especially in high-speed network. Therefore, to evaluate the impact of the <b>timestamp</b> precision on the measurement, a high accuracy <b>timestamping</b> hardware system (HATS) based on NetFPGA was designed and implemented. With HATS, the deviation of <b>timestamp</b> accuracy among the application, the kernel and the hardware layers was analyzed...|$|R
50|$|In {{computing}} <b>timestamping</b> {{refers to}} the use of an electronic <b>timestamp</b> to provide a temporal order among a set of events.|$|R
30|$|Initially, we only {{considered}} the Linux TCP <b>timestamp</b> for the above purpose. However, {{we found this}} is not sufficient. Some packets belonging to a single window may sometimes have the same <b>timestamp</b> value due to the granularity of the Linux TCP <b>timestamp,</b> {{on the order of}} tens of milliseconds.|$|R
