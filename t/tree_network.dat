369|1686|Public
50|$|Hybrid {{networks}} combine {{two or more}} topologies in such a {{way that}} the resulting network does not exhibit one of the standard topologies (e.g., bus, star, ring, etc.). For example, a <b>tree</b> <b>network</b> (or star-bus network) is a hybrid topology in which star networks are interconnected via bus networks. However, a <b>tree</b> <b>network</b> connected to another <b>tree</b> <b>network</b> is still topologically a <b>tree</b> <b>network,</b> not a distinct network type. A hybrid topology is always produced when two different basic network topologies are connected.|$|E
5000|$|The Visitors Channel 3, {{which is}} owned by the Flame <b>Tree</b> <b>Network.</b>|$|E
5000|$|... #Caption: Comparison of {{incorrect}} {{and correct}} conversion of water bodies to a <b>tree</b> <b>network</b> ...|$|E
40|$|At a company's request we {{were asked}} to {{determine}} the placement and the number of protection devices for their electrical <b>tree</b> <b>networks.</b> Three location heuristics were selected for this purpose and tested on artificial data. The chosen heuristic was then applied to two real <b>tree</b> <b>networks</b> with successful results...|$|R
30|$|We first {{evaluated}} {{the performance of}} the RI algorithm on <b>tree</b> <b>networks.</b>|$|R
40|$|Recent {{years have}} {{witnessed}} significant interest in convex relaxations {{of the power}} flows, several papers showing that the second-order cone relaxation is tight for <b>tree</b> <b>networks</b> under various conditions on loads or voltages. This paper shows that AC-feasibility, i. e., to find whether some generator dispatch can satisfy a given demand, is NP-Hard for <b>tree</b> <b>networks...</b>|$|R
50|$|A hypertree {{network is}} a network {{topology}} that shares some traits with the binary <b>tree</b> <b>network.</b> It is {{a variation of}} the fat tree architecture.|$|E
50|$|The fat <b>tree</b> <b>network</b> was {{particularly}} {{well suited to}} Fast Fourier transform computations, which customers used for such signal processing tasks as radar, sonar, and medical imaging.|$|E
50|$|Slurm uses a {{best fit}} {{algorithm}} based on Hilbert curve scheduling or fat <b>tree</b> <b>network</b> topology {{in order to}} optimize locality of task assignments on parallel computers.|$|E
40|$|We {{consider}} {{the problem of}} grooming traffic in WDM star and <b>tree</b> <b>networks</b> to minimize equipment cost. We prove an important result regarding wavelength assignment in both topologies. We present a series of lower and upper bounds on the optimal solutions for both star and <b>tree</b> <b>networks.</b> The bounds allow us to evaluate a set of heuristics we also develop. ...|$|R
40|$|We first {{propose the}} genetic {{algorithms}} (GA) {{to deal with}} strictly non-blocking grooming problems in optical <b>tree</b> <b>networks.</b> We describe strictly non-blocking grooming problems in Wavelength Division Multiplexing (WDM) optical trees with traffics and find the lower and upper bounds. Here we use the (µ + λ) -strategy to produce offspring for the genetic algorithm, and apply the technology of wavelengths-reuse in the decoding of the individual in the genetic algorithms. The performance of the proposed strictly non-blocking grooming algorithm was tested in <b>tree</b> <b>networks</b> with different granularity and different number of traffic patterns. Computer simulation results show that our algorithm can achieve very good results in saving both ADM’s and wavelength in <b>tree</b> <b>networks...</b>|$|R
40|$|Recently [6], we {{introduced}} a new self-stabilizing PIF paradigm, called the Propagation of information with Feedback and Cleaning (PFC), for the rooted <b>tree</b> <b>networks.</b> In this paper, we propose the rst selfstabilizing PIF scheme for the <b>tree</b> <b>networks</b> without sense of direction|the trees {{do not have a}} root and the processors do not maintain any ancestor. The proposed PIF scheme is based on the paradigm PFC. A PIF algorithm in trees without sense of direction is very useful in many applications because this allows to maintain only one spanning <b>tree</b> of the <b>network</b> instead of one per processor. The proposed algorithm requires 3 states per processor, and only 2 states for the initiator and leaves. This space requirement is optimal for both self-stabilizing and non-stabilizing PIF algorithms on <b>tree</b> <b>networks.</b> Thus, the processors need no extra space to stabilize the proposed PIF scheme. Keywords: Distributed systems, fault-tolerance, optimality, PIF, self-stabilization. 1 Introduction Fau [...] ...|$|R
5000|$|The fat <b>tree</b> <b>network</b> is a {{universal}} network for provably efficient communication. It was invented by Charles E. Leiserson of the Massachusetts Institute of Technology in 1985.|$|E
5000|$|The global signals {{network is}} a simple 2-wire system {{arranged}} as a <b>tree</b> <b>network.</b> This network is used for evaluation of global conditions and synchronization of the nodes.|$|E
50|$|Supercomputers {{that use}} a fat <b>tree</b> <b>network</b> include the Tianhe-2, the Meiko Scientific CS-2, Yellowstone, the Earth Simulator, the Cray X2, the Connection Machine CM-5, and various Altix supercomputers.|$|E
30|$|Our {{simulations}} on <b>tree</b> <b>networks</b> and real-world networks {{show that}} the sample path-based estimator {{is closer to the}} actual source than several other algorithms.|$|R
5000|$|William W. Armstrong, Jan Gecsei, Adaptation Algorithms for Binary <b>Tree</b> <b>Networks,</b> IEEE Trans. on Systems, Man and Cybernetics, V. SMC-9, No. 5, 276-285, 1979.|$|R
40|$|Abstract—In {{this paper}} we study <b>tree</b> <b>networks</b> of discrete-time queues loaded with {{periodic}} traffic sources. By using the so-called Beneˇs method, exact closed-form expressions are {{obtained for the}} queue length distributions. The models developed {{can be used to}} study the superposition of periodic sources emitting bursts of cells in ATM networks. The results obtained show the significant effect that this kind of traffic can have on the performance of these systems. Index Terms—ATM, Beneˇs method, periodic traffic, <b>tree</b> <b>networks,</b> worst-case traffic. I...|$|R
50|$|A <b>tree</b> <b>network,</b> or star-bus network, is {{a hybrid}} network {{topology}} in which star networks are interconnected via bus networks. Tree networks are hierarchical, and each node {{can have an}} arbitrary number of child nodes.|$|E
50|$|Since 2000, {{along with}} his writing career, Morford has taught Vinyasa yoga classes in San Francisco, most {{recently}} at the Yoga <b>Tree</b> <b>network</b> of schools, as well as private instruction. He is a certified, RYT 200 yoga teacher, according to Yoga Alliance guidelines.|$|E
5000|$|An Altix 4700 system {{contained}} up to 2048 dual-core Itanium 2 and Itanium ("Montvale" [...] revision) microprocessor sockets, {{connected by}} the NUMAlink 4 interconnect in a fat <b>tree</b> <b>network</b> topology. The microprocessors {{are accompanied by}} up to 128 TB of memory (192TB with single microprocessor socket blades and 16GB DIMMs).|$|E
30|$|In this section, we {{evaluate}} {{the performance of}} the reverse infection algorithm for the heterogeneous SIR model on different <b>networks</b> including <b>tree</b> <b>networks</b> and real-world networks.|$|R
40|$|Dual-server coordinated {{en-route}} caching {{is important}} because of its basic features as multi-server en-route caching. In this paper, multi-server coordinated en-route caching is formulated as an optimization problem of minimizing total access cost, including transmission cost for all access demands and caching cost of all caches. We first discuss an algorithm for single-server en-route caching in <b>tree</b> <b>networks</b> and then show {{that this is a}} special case of another algorithm for dual-server en-route caching in <b>tree</b> <b>networks</b> whose time complexity is O(nh). Shihong Xu, Hong She...|$|R
40|$|The capacitated minimum {{spanning}} tree is an offspring of the minimum spanning <b>tree</b> and <b>network</b> flow problems. It has application {{in the design of}} multipoint linkages in elementary teleprocessing <b>tree</b> <b>networks.</b> Some theorems are used in conjunction with Little's branch and bound algorithm to obtain optimal solutions. Computational results are provided to show that the problem is tractable...|$|R
5000|$|Categories can be {{organized}} hierarchically and {{viewed as a}} <b>tree</b> <b>network.</b> [...] "Parent" [...] categories could inherit assignments from [...] "child" [...] categories. Agenda performs automatic categorization after it learns your associations. For example, if you link Project A to Mary, then every time you enter an item about Project A, the item is automatically assigned to Mary.|$|E
50|$|A <b>Tree</b> <b>Network</b> {{consists}} of multiple cell group leaders that report {{directly to a}} cell coordinator. Each cell coordinator manages multiple cells in this way, and several cell coordinators may be present in a single cell church. Additional levels of hierarchy may be added as well {{depending on the size}} of the cell church. While similar to a G-12 Structure, it is unrelated.|$|E
50|$|Mercury Computer Systems {{applied a}} variant of the fat tree topology—the hypertree network—to their multicomputers. In this architecture, 2 to 360 compute nodes are {{arranged}} in a circuit-switched fat <b>tree</b> <b>network.</b> Each node has local memory that can be mapped by any other node. Each node in this heterogeneous system could be an Intel i860, a PowerPC, or a group of three SHARC digital signal processors.|$|E
40|$|A large {{class of}} phylogenetic {{networks}} {{can be obtained}} from trees by the addition of horizontal edges between the <b>tree</b> edges. These <b>networks</b> are called <b>tree</b> based <b>networks.</b> Reticulation-visible networks and child-sibling <b>networks</b> are all <b>tree</b> based. In this work, we present a simply necessary and sufficient condition for tree-based networks and prove that there is a universal <b>tree</b> based <b>network</b> for each set of species such that every phylogenetic tree on the same species is a base of this network. The existence of universal <b>tree</b> based <b>network</b> implies that for any given set of phylogenetic trees (resp. clusters) on the same species there exists a <b>tree</b> base <b>network</b> that display all of them. Comment: 17 pages, 6 figure...|$|R
40|$|Information {{diffusion}} in networks {{can be used}} {{to model}} many real-world phenomena, including rumor spreading on online social networks, epidemics in human beings, and malware on the Internet. Informally speaking, the source localization problem is to identify a node in the network that provides the best explanation of the observed diffusion. Despite significant efforts and successes over last few years, theoretical guarantees of source localization algorithms were established only for <b>tree</b> <b>networks</b> due to the complexity of the problem. This paper presents a new source localization algorithm, called the Short-Fat Tree (SFT) algorithm. Loosely speaking, the algorithm selects the node such that the breadth-first search (BFS) tree from the node has the minimum depth but the maximum number of leaf nodes. Performance guarantees of SFT under the independent cascade (IC) model are established for both <b>tree</b> <b>networks</b> and the Erdos-Renyi (ER) random graph. On <b>tree</b> <b>networks,</b> SFT is the maximum a posterior (MAP) estimator. On the ER random graph, the following fundamental limits have been obtained: (i) when the infection duration t_u, the probability of identifying the source approaches zero asymptotically under any algorithm; and (iii) when infection duration <t_u, the BFS tree starting from the source is a fat tree. Numerical experiments on <b>tree</b> <b>networks,</b> the ER random graphs and real world networks with different evaluation metrics show that the SFT algorithm outperforms existing algorithms...|$|R
40|$|The {{problem of}} {{determining}} the number of multi-type protection devices and their locations on electrical supply <b>tree</b> <b>networks</b> with subtree dependency is investigated. The aim {{is to reduce the}} amount of inconvenience caused to customers that are affected by any given fault on the networks. An appropriate implementation of tabu search is proposed. We exploit a variable neighborhood and a soft aspiration level, and we embed a data structure and reduction tests into the search to speed up the process. Computational tests are performed on randomly generated electrical <b>tree</b> <b>networks</b> varying in size and branch complexity with encouraging results...|$|R
5000|$|The IBM Kittyhawk {{project team}} has ported Linux to the compute nodes and {{demonstrated}} generic Web 2.0 workloads running at scale on a Blue Gene/P. Their paper, {{published in the}} ACM Operating Systems Review, describes a kernel driver that tunnels Ethernet over the <b>tree</b> <b>network,</b> which results in all-to-all TCP/IP connectivity. Running standard Linux software like MySQL, their performance results on SpecJBB rank among the highest on record.|$|E
50|$|Yellowstone is a 1.5-petaflops IBM iDataPlex cluster {{computer}} with 4,536 dual-socket compute nodes that contain 9,072, 2.6-GHz Intel Xeon E5-2670 8-core processors (72,576 cores), and its aggregate memory size is 145 terabytes. The nodes interconnect {{in a full}} fat <b>tree</b> <b>network</b> via a Mellanox FDR InfiniBand switching fabric. System software includes the Red Hat Enterprise Linux operating system for Scientific Computing, LSF Batch Subsystem and Resource Manager, and IBM General Parallel File System (GPFS).|$|E
50|$|With the CM-5, {{announced}} in 1991, TMC switched from the CM-2's hypercubic architecture of simple processors {{to a new}} and different multiple instruction, multiple data (MIMD) architecture based on a fat <b>tree</b> <b>network</b> of reduced instruction set computing (RISC) SPARC processors. To make programming easier, it was made to simulate a SIMD design. The later CM-5E replaces the SPARC processors with faster SuperSPARCs. The CM-5 was the second-fastest system in the November 1993 TOP500 list, running 1024 cores with Rpeak of 131.0 GFLOPS.|$|E
3000|$|In our {{theoretical}} analysis, {{we consider}} <b>tree</b> <b>networks</b> with infinitely many levels (or called infinite trees) to derive the sample path-based estimator under the heterogeneous SIR {{model with a}} partial snapshot. Let [...]...|$|R
40|$|In this paper, we {{consider}} the problem of distributed inference in <b>tree</b> based <b>networks.</b> In the framework considered in this paper, distributed nodes make a 1 -bit local decision regarding a phenomenon before sending it to the fusion center (FC) via intermediate nodes. We propose the use of coding theory based techniques to solve this distributed inference problem in such structures. Data is progressively compressed as it moves towards the FC. The FC makes the global inference after receiving data from intermediate nodes. Data fusion at nodes {{as well as at}} the FC is implemented via error correcting codes. In this context, we analyze the performance for a given code matrix and also design the optimal code matrices at every level of the tree. We address the problems of distributed classification and distributed estimation separately and develop schemes to perform these tasks in <b>tree</b> <b>networks.</b> The proposed schemes are of practical significance due to their simple structure. We study the asymptotic inference performance of our schemes for two different classes of tree networks: fixed height <b>tree</b> <b>networks,</b> and fixed degree <b>tree</b> <b>networks.</b> We show that the proposed schemes are asymptotically optimal under certain conditions. Comment: 16 pages, 7 figures, submitted to IEEE Transactions on Signal Processin...|$|R
40|$|We analyze how the {{expected}} packet delay in rooted <b>tree</b> <b>networks</b> {{is affected by}} the distribution of time needed for a packet to cross an edge using stochastic comparison methods. Our result generalizes previously known results that the delay when the crossing time is exponentially distributed yields an upper bound for {{the expected}} delay when the crossing time is constant on this class of of networks. Unlike previous work, we do not assume Poisson arrivals. Our result also extends to a variety of service distributions, and {{it can be used to}} bound the expected value of all convex, increasing functions of the packet delays. An interesting corollary of our work is that in rooted <b>tree</b> <b>networks,</b> if one can change the distribution of the time to cross an edge while keeping the expectation fixed, the strategy that minimizes the expected delay and the expected maximum delay is to make the time to cross an edge constant. Our result also holds in mulitcasting rooted <b>tree</b> <b>networks,</b> where a single [...] ...|$|R
