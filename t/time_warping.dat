1836|965|Public
5|$|The game {{opens in}} 3 AF, as the Pulse town Serah lives in is {{attacked}} by monsters. A stranger named Noel appears {{to help fight}} the monsters and {{claims to be a}} time traveler from 700 AF. He arrived in her time via Valhalla, where he claims to have met Lightning as she guarded the throne of the weakened Etro. As part of Lightning's transfer to Valhalla, she was erased from the fall of Cocoon onwards (making everyone except Serah forget her being with them on Gran Pulse), and paradoxes have erupted throughout <b>time,</b> <b>warping</b> the timeline. Serah joins Noel in a journey to resolve these paradoxes by removing items and monsters, which are out of their original time and correct the timeline; she in hopes of finding her sister and he in hopes of changing the bleak future he comes from. While journeying to 5 AF to resolve a paradox on Cocoon, they meet and help Alyssa, an Academy member and survivor of the Purge, a massacre by the Sanctum at the beginning of Final Fantasy XIII.|$|E
2500|$|The dynamic <b>time</b> <b>warping</b> {{algorithm}} for computing {{the global}} distance between two time series ...|$|E
2500|$|In 2004, TiVo Inc. {{sued the}} {{consortium}} of companies known as EchoStar Corp. (EchoStar Communications Corporation, EchoStar DBS Corporation, EchoStar Technologies Corporation, Echosphere Limited Liability Company, and EchoStar Satellite LLC, and Dish Network Corporation) in the United States District Court for the Eastern District of Texas alleging they infringed various {{claims of the}} “Multimedia <b>Time</b> <b>Warping</b> System” patent (U.S. Patent 6,233,389 or ‘389 patent) with their line of competing digital video recorders (DVRs).|$|E
40|$|A <b>time</b> <b>warp</b> contour {{calculator}} {{for use in}} {{an audio}} signal decoder for providing a decoded audio signal representation {{on the basis of}} an encoded audio signal representation is configured to receive an encoded warp ratio information, to derive a sequence of warp ratio values from the encoded warp ratio information, and to obtain warp contour node values starting from a <b>time</b> <b>warp</b> contour start value. Ratios between the <b>time</b> <b>warp</b> contour node values and the <b>time</b> <b>warp</b> contour starting value associated with a <b>time</b> <b>warp</b> contour start node are determined by the warp ratio values. The <b>time</b> <b>warp</b> contour calculator is configured to compute a <b>time</b> <b>warp</b> contour node value of a given <b>time</b> <b>warp</b> contour node, which is spaced from the <b>time</b> <b>warp</b> contour starting node by an intermediate <b>time</b> <b>warp</b> contour node {{on the basis of a}} product-formation comprising a ratio between the <b>time</b> <b>warp</b> contour node value of the intermediate <b>time</b> <b>warp</b> contour node and the <b>time</b> <b>warp</b> contour starting value and a ratio between the <b>time</b> <b>warp</b> contour node value of the given <b>time</b> <b>warp</b> contour node and the time-warp contour node value of the intermediate <b>time</b> <b>warp</b> contour node as factors...|$|R
40|$|Abstract: <b>Time</b> <b>warp</b> is a {{well-known}} optimistic mechanism for parallel execution of simulation programs. Implementing <b>time</b> <b>warp</b> using a connection-oriented communication approach is proposed in the literature {{as a way to}} improve <b>time</b> <b>warp</b> performance because it allows for the use of more efficient event queue implementations. However, no empirical performance studies have been reported for connection-oriented <b>time</b> <b>warp.</b> In this paper, we present an enhanced version of the connection-oriented <b>time</b> <b>warp</b> algorithm along with its associated data structures. An empirical performance study of the connection-oriented <b>time</b> <b>warp</b> is conducted on a network of workstations using a standard synthetic benchmark simulation model. Experimental results show that this algorithm is capable of achieving better performance than that of traditional connectionless <b>time</b> <b>warp</b> for several performance measures...|$|R
5000|$|<b>Time</b> <b>Warp</b> (Dickson blended {{an alarm}} clock in honor of {{appearing}} on the TV show <b>Time</b> <b>Warp)</b> ...|$|R
2500|$|Eagleman's {{scientific}} work combines psychophysical, behavioral, and computational approaches {{to address the}} relationship between the timing of perception and the timing of neural signals. Areas for which he is known include temporal encoding, <b>time</b> <b>warping,</b> manipulations of the perception of causality, and time perception in high-adrenaline situations. [...] In one experiment, he dropped himself and other volunteers from a 150-foot tower to measure time perception as they fell. He writes that his long-range goal is [...] "to understand how neural signals processed by different brain regions come together for a temporally unified picture of the world".|$|E
5000|$|... #Subtitle level 3: Dynamic <b>time</b> <b>warping</b> (DTW)-based speech {{recognition}} ...|$|E
5000|$|The dynamic <b>time</b> <b>warping</b> {{algorithm}} for computing {{the global}} distance between two time series ...|$|E
40|$|This manual {{gives an}} {{introduction}} to writing parallel discrete event simulation programs for the Georgia Tech <b>Time</b> <b>Warp</b> (GTW) system (version 3. 1). <b>Time</b> <b>Warp</b> is a synchronization mechanism for parallel discrete event simulation programs. GTW is a <b>Time</b> <b>Warp</b> simulation kernel implemented on distributed network of uniprocessor and shared memory multiprocessor machines...|$|R
40|$|This paper {{presents}} an analytical model {{for evaluating the}} performance of <b>Time</b> <b>Warp</b> simulators. The pro-posed model is formalized based on two important time components in parallel and distributed processing: com-putatzon time and communication time. The communi-cotton time is modeled by buffer access time and mes-sage transmission time. Logical processes of the <b>Time</b> <b>Warp</b> simulation, and the processors executing them {{are assumed to be}} homogeneous. Performance metrics such as rollback probability, rollback distance, elapsed <b>time</b> and <b>Time</b> <b>Warp</b> efficiency are derltied. More impor-tantly, rre also analyze the zmpact of cascading rollback waves on the overall <b>Time</b> <b>Warp</b> performance. By ren-dering the deviation in state numbers of sender-receiver pairs, we investigate the performance of throttled <b>Time</b> <b>Warp</b> scheme. Our analytical model shows that the de-viation in state numbers and the communication delay have a profound impact on <b>Time</b> <b>Warp</b> efficiency. The performance model has been validated against imple-mentation results obtained on a Fujitsu = 1 P 3000 parallel computer. The analytical framework can be readily used to estimate performance before the <b>Time</b> <b>Warp</b> simula-tor is rmplemented. ...|$|R
40|$|This paper {{describes}} {{results of}} an empirical study to evaluate the effect of communications delays {{on the performance of}} the <b>Time</b> <b>Warp</b> mechanism in order to assess the effectiveness of <b>Time</b> <b>Warp</b> in distributed computing evironments. An implementation of <b>Time</b> <b>Warp</b> on a collection of networked workstations is used in this study. Performance using synchronous and asynchronousmessage passing primitives are compared, and it is observed that <b>Time</b> <b>Warp</b> experiences much more rolled back computation when using the synchronous primitives for certain applications. Message passing is decomposed into a computation component at the senderand receiverprocessors, and a transmission delay component that represents the amount of time the message remains "in transit" within the network. The effect of each of these components on <b>Time</b> <b>Warp</b> performance is studied. It is observed that communications latency in distributed computing environments can significantly degrade the efficiency of <b>Time</b> <b>Warp</b> for applic [...] ...|$|R
50|$|A Nearest Neighbour Classifier {{can achieve}} {{state-of-the-art}} performance when using Dynamic <b>Time</b> <b>Warping</b> as a distance measure.|$|E
50|$|Other {{methods for}} characterizing resting-state {{networks}} include partial correlation, coherence and partial coherence, phase relationships, dynamic <b>time</b> <b>warping</b> distance, clustering, and graph theory.|$|E
50|$|Dynamic <b>time</b> <b>warping</b> is an {{approach}} that was historically used for speech recognition but has now largely been displaced by the more successful HMM-based approach.|$|E
40|$|We introduce, in this paper, Clustered <b>Time</b> <b>Warp</b> (CTW), an {{algorithm}} for {{the parallel}} simulation of discrete event models on a general purpose distributed memory architecture. CTW {{has its roots}} in the problem of distributed logic simulation. It is a hybrid algorithm which makes use of <b>Time</b> <b>Warp</b> between clusters of LPs and a sequential algorithm within the clusters whereas <b>Time</b> <b>Warp</b> is traditionally implemented between individual LPs...|$|R
40|$|User {{does not}} have to add any special logic to aid in synchronization. <b>Time</b> <b>Warp</b> Operating System (TWOS) {{computer}} program is special-purpose operating system designed to support parallel discrete-event simulation. Complete implementation of <b>Time</b> <b>Warp</b> mechanism. Supports only simulations and other computations designed for virtual <b>time.</b> <b>Time</b> <b>Warp</b> Simulator (TWSIM) subdirectory contains sequential simulation engine interface-compatible with TWOS. TWOS and TWSIM written in, and support simulations in, C programming language...|$|R
50|$|<b>Time</b> <b>Warp</b> is {{the name}} of a science fiction American comic book series {{published}} by DC Comics for five issues from 1979 to 1980. A <b>Time</b> <b>Warp</b> one-shot was published by Vertigo in May 2013.|$|R
50|$|The {{most popular}} pattern {{recognition}} techniques applied for signature recognition are dynamic <b>time</b> <b>warping,</b> hidden Markov models and vector quantization. Combinations of different techniques also exist.|$|E
50|$|Keyword {{spotting}} {{in isolated}} word recognition appears when the keywords {{are separated from}} other texts by silences. The main technique that applied in such problems is dynamic <b>time</b> <b>warping.</b>|$|E
5000|$|The lbimproved C++ library {{implements}} Fast Nearest-Neighbor Retrieval algorithms {{under the}} GNU General Public License (GPL). It {{also provides a}} C++ implementation of Dynamic <b>Time</b> <b>Warping</b> as well as various lower bounds.|$|E
40|$|Parallel {{simulation}} is a {{well developed}} technique for executing large and complex simulation models {{in order to obtain}} simulation output for analysis within an acceptable time frame. The main contribution of this thesis is the development of different adaptive techniques to improve the consistency, performance and resilience of the BSP <b>Time</b> <b>Warp</b> as a general purpose parallel simulation protocol. We first study the problem of risk hazards in the BSP <b>Time</b> <b>Warp</b> optimistic simulation protocols. Successive refinements to the BSP <b>Time</b> <b>Warp</b> protocol are carried out to eliminate errors in simulation execution due to different risk hazards. We show that these refinements can be incorporated into the BSP <b>Time</b> <b>Warp</b> protocol with minimal performance degradation. We next propose an adaptive scheme for the BSP <b>Time</b> <b>Warp</b> algorithm that automatically throttles the number of events to be executed per superstep. We show that the scheme, operating in a shared memory environment, can minimize computation load-imbalance and rollback overhead at the expense of incurring higher synchronization cost. The next contribution of this thesis is the study of different techniques for dynamic load-balancing and process migration for <b>Time</b> <b>Warp</b> on a cluster of workstations. We propose different dynamic load-balancing algorithms for BSP <b>Time</b> <b>Warp</b> that seek to balance both computation workload and communication workload, optimizing lookaheads between processors, as well as manage interruption from external workload. Finally, we propose an adaptive technique for BSP <b>Time</b> <b>Warp</b> that automatically varies the number of processors used for parallel computation based on the characteristics of the underlying parallel computing platform and the simulation workload. </p...|$|R
40|$|The speedup {{obtainable}} with <b>Time</b> <b>Warp</b> parallel discrete-event simulation varies greatly {{with the}} characteristics of the simulation and the <b>Time</b> <b>Warp</b> implementation. Analytic studies have been done to determine the expected speedup of <b>Time</b> <b>Warp,</b> but these studies have been limited to bound analysis or analysis considering a few overheads with the others assumed negligible. The models used in these studies have often been constructed directly in terms of a Markov process, making the construction process difficult. This thesis uses stochastic activity networks to construct a model of <b>Time</b> <b>Warp</b> at a higher level, enabling the construction of a more detailed underlying Markov process. The result is an analytic model for N-processor <b>Time</b> <b>Warp</b> that considers the combined effects of limited optimism, cascaded rollback, communication cost, and rollback cost. Given these effects, solutions for performance variables such as speedup, fraction of time blocked, and channel utilization are obtained...|$|R
40|$|This paper {{analyses}} {{the requirements}} of performing parallel transaction-oriented simulations with a special focus on the space-parallel approach and discrete event simulation synchronisation algorithms that are suitable for transaction-oriented simulation and the target environment of Ad Hoc Grids. To demonstrate the findings a Java-based parallel transaction-oriented simulator for the simulation language GPSS/H is implemented {{on the basis of}} the most promising Shock Resistant <b>Time</b> <b>Warp</b> synchronisation algorithm and using the Grid framework ProActive. The validation of this parallel simulator shows that the Shock Resistant <b>Time</b> <b>Warp</b> algorithm can successfully reduce the number of rolled back Transaction moves but it also reveals circumstances in which the Shock Resistant <b>Time</b> <b>Warp</b> algorithm can be outperformed by the normal <b>Time</b> <b>Warp</b> algorithm. The conclusion of this paper suggests possible improvements to the Shock Resistant <b>Time</b> <b>Warp</b> algorithm to avoid such problems. Comment: 6 pages, condensed research paper of my thesis with the same titl...|$|R
50|$|In {{the second}} step, the derived feature {{sequences}} {{have to be}} brought into (temporal) correspondence. To this end, techniques related to dynamic <b>time</b> <b>warping</b> (DTW) or hidden Markov models (HMMs) are used to compute an optimal alignment between two given feature sequences.|$|E
5000|$|Generally, {{all forms}} of machine {{learning}} can be employed for the categorization of multimedia descriptions though some methods are more frequently used in one area than another. For example, hidden Markov models are state-of-the-art in speech recognition, while dynamic <b>time</b> <b>warping</b> - a semantically related method - is state-of-the-art in gene sequence alignment. The list of applicable classifiers includes the following: ...|$|E
50|$|Global symmetries don't {{exist in}} quantum gravity. Baryon number is violated, {{but only at}} very small scales, and the proton has a very long lifetime. But with a short enough time resolution, the proton oscillates between {{different}} baryon numbers and the <b>time</b> <b>warping</b> near the horizon magnifies that. Alternatively, the hot temperatures of the stretched horizon cause the proton to decay. But an infalling observer never has {{time to see the}} proton decay.|$|E
50|$|<b>Time</b> <b>Warp</b> was {{canceled}} with issue #5 (June-July 1980) and unused inventory originally {{intended for the}} series was published in {{a revival of the}} Mystery in Space title. Other <b>Time</b> <b>Warp</b> stories appeared in the mystery anthology The Unexpected.|$|R
50|$|An {{announcer}} (Trey Parker) {{opens the}} show as <b>Time</b> <b>Warped</b> - Your Favorite Show and starts singing a song about how <b>Time</b> <b>Warped</b> is your favorite show. Images of the cast flash past, featuring them in costume and captioned with pseudonyms.|$|R
40|$|This paper {{describes}} a formal framework developed using the Prototype Verification System (PVS) to model and verify distributed simulation kernels {{based on the}} <b>Time</b> <b>Warp</b> paradigm. The intent {{is to provide a}} common formal base from which domain specific simulators can be modeled, verified, and developed. PVS constructs are developed to represent basic <b>Time</b> <b>Warp</b> constructs. Correctness conditions for <b>Time</b> <b>Warp</b> simulation are identified describing causal ordering of event processing and correct rollback processing. The PVS theorem prover and type-check condition system are then used to verify all correctness conditions. In addition, the paper discusses the framework's reusability and extensibility properties in support of specification and verification of <b>Time</b> <b>Warp</b> extensions and optimizations...|$|R
5000|$|In 2004, TiVo Inc. {{sued the}} {{consortium}} of companies known as EchoStar Corp. (EchoStar Communications Corporation, EchoStar DBS Corporation, EchoStar Technologies Corporation, Echosphere Limited Liability Company, and EchoStar Satellite LLC, and Dish Network Corporation) in the United States District Court for the Eastern District of Texas alleging they infringed various {{claims of the}} “Multimedia <b>Time</b> <b>Warping</b> System” patent (U.S. Patent 6,233,389 or ‘389 patent) with their line of competing digital video recorders (DVRs).|$|E
5000|$|Comparison {{of sounds}} {{can be done}} by {{comparison}} of features with or without reference to time. In some cases an overall similarity can be assessed by close values of features between two sounds. In other cases when temporal structure is important, methods of dynamic <b>time</b> <b>warping</b> need to be applied to [...] "correct" [...] for different temporal scales of acoustic events. Finding repetitions and similar sub-sequences of sonic events is important for tasks such as texture synthesis and machine improvisation.|$|E
50|$|Also {{around this}} time Soviet {{researchers}} invented the dynamic <b>time</b> <b>warping</b> (DTW) algorithm {{and used it to}} create a recognizer capable of operating on a 200-word vocabulary. The DTW algorithm processed the speech signal by dividing it into short frames, e.g. 10ms segments, and processing each frame as a single unit. Although DTW would be superseded by later algorithms, the technique of dividing the signal into frames would carry on. Achieving speaker independence was a major unsolved goal of researchers during this time period.|$|E
50|$|<b>Time</b> <b>Warps,</b> Taurean Horn Press.|$|R
40|$|The {{suitability}} of the <b>Time</b> <b>Warp</b> mechanism to perform simulations with real-time constraints is examined. A model for <b>Time</b> <b>Warp</b> is developed {{that accounts for}} overheads such as state saving, state restoration, and sending and transmitting positive and negative messages. A criterion called R-schedulability is defined to indicate whether or not computations can meet real-time deadlines. It is shown that if false events are generated, {{and there are no}} committed events with timestamps equal to those of the false events, <b>Time</b> <b>Warp</b> cannot meet the R-schedulability criterion. Further, if aggressive cancellation is used, scheduling guarantees still cannot be made {{even in the absence of}} such false events. However, <b>Time</b> <b>Warp</b> using lazy cancellation is shown to be R-schedulable provided such false events do not exist. Finally, based on these results, bounds on the execution time of a non-real-time <b>Time</b> <b>Warp</b> simulation are derived. School of Information and Computer Science Georgia Institute of Te [...] ...|$|R
40|$|This paper {{analyses}} {{the possibilities}} of performing parallel transaction-oriented simulations with a special focus on the space-parallel approach and discrete event simulation synchronisation algorithms that are suitable for transaction-oriented simulation and the target environment of Ad Hoc Grids. To demonstrate the findings a Java-based parallel transaction-oriented simulator for the simulation language GPSS/H is implemented {{on the basis of}} the promising Shock Resistant <b>Time</b> <b>Warp</b> synchronisation algorithm and using the Grid framework ProActive. The validation of this parallel simulator shows that the Shock Resistant <b>Time</b> <b>Warp</b> algorithm can successfully reduce the number of rolled back Transaction moves but it also reveals circumstances in which the Shock Resistant <b>Time</b> <b>Warp</b> algorithm can be outperformed by the normal <b>Time</b> <b>Warp</b> algorithm. The conclusion of this paper suggests possible improvements to the Shock Resistant <b>Time</b> <b>Warp</b> algorithm to avoid such problems. Comment: 101 pages (plus 131 appendix), 23 figures, 11 tables, MSc thesis for degree in Advanced Computer Science at the Westminster University, Londo...|$|R
