13|2612|Public
50|$|Sources, {{among them}} area, date and {{location}} {{as well as}} coordinates and ID, used in the <b>table</b> <b>base</b> on Prehistoric pile dwellings around the Alps, and are listed as references. The list bases on the dates of December 2014.|$|E
50|$|The next part of {{the virtual}} address is the BDI or Bank Descriptor Index. The Level field {{selected}} a particular bank descriptor <b>table</b> <b>base</b> register (B16-B23). Base registers B16-B23 are {{part of the}} activity state and are maintained by the Exec with no direct access by the activity. The Bank Descriptor tables for the program and activity levels exist within the program-level banks that belong to the operating system.|$|E
50|$|A Magnetic Drilling Machine is {{a machine}} tool used for {{drilling}} holes in variety of metals. It is a portable drilling machine with a base or a permanent magnet base. It drills holes {{with the help}} of cutting tools like annular cutters (broach cutters) or with twist drill bits. There are various types depending on their operations and specialisations like magnetic drilling cum tapping machines, cordless, pneumatic, compact horizontal, automatic feed, cross <b>table</b> <b>base</b> etc.|$|E
5|$|NAUI {{published}} Trimix and Nitrox <b>tables</b> <b>based</b> on the Wienke reduced gradient bubble model (RGBM) {{model in}} 1999, followed by recreational air <b>tables</b> <b>based</b> on the RGBM model in 2001.|$|R
50|$|<b>Table</b> <b>based</b> on database.|$|R
50|$|<b>Table</b> <b>based</b> on Oklahoma Almanac.|$|R
5000|$|An SQL join clause {{combines}} columns {{from one}} or more tables in a relational database. It creates a set that can be saved as a table or used as it is. A [...] is a means for combining columns from one (self-table) or more tables by using values common to each. ANSI-standard SQL specifies five types of : , , , [...] and [...] As a special case, a <b>table</b> (<b>base</b> table, view, or joined table) can [...] to itself in a self-join.|$|E
50|$|The {{facade of}} the State Theatre is a {{symmetrical}} composition of three bays. The bays are defined by engaged pilasters expressed {{as a series of}} quoins above a projected water <b>table</b> <b>base</b> topped by an ionic capital with an attached swag. A projected cornice with a simple entablature tops the facade. Above this is a parapet divided into three corresponding bays again divided by projecting pilasters. Each of the three main bays contain a pair of ionic columns on a block base supporting a banded arch with an engaged keystone with an acanthus motif.|$|E
50|$|There are {{a number}} of registers, each {{designed}} for a special purpose. An accumulator register (ACC) is available for general-purpose use, and may be 32, 64, or 128 bits in size. The B register is used for indexing into arrays; the LNB (Local Name Base) register points {{to the base of the}} current stack frame, with the SF (Stack Front) register pointing to the movable 'top' of the stack; the DR register is used for holding descriptors for addressing into the heap, and so on. There are also two 32 bit pointers to off-stack data; XNB (eXtra Name Base) and LTB (Linkage <b>Table</b> <b>Base).</b>|$|E
50|$|<b>Table</b> <b>based</b> on {{government}} database.|$|R
50|$|<b>Table</b> <b>based</b> {{on state}} almanac.|$|R
50|$|<b>Tabled</b> <b>based</b> {{on state}} almanac.|$|R
40|$|A {{priority}} <b>table</b> <b>base</b> CPU scheduling algorithm in real-time database (RTDBS) is presented. It {{is applicable}} in environments where data requests arrive with different requirements such as real-time deadline, and user priority. Previous work on CPU scheduling {{is based on}} traditional CPU scheduler for meeting the real-time deadlines. The general idea is based on modeling the CPU scheduler in RTDBS requests aspoints in the multi-dimensional space, where each of the dimensions {{represents one of the}} parameters i. e. one dimension represents the deadline of task, another represents the criticalness or value and a third dimension represents the priority of the request, etc. The CPU scheduling problem reduces the problem of finding a linear order to scheduling these multidimensional points. Priority <b>table</b> <b>base</b> algorithms are adopted to define a linear order for sorting and scheduling objects that lie in the multi-dimensional space. This generalizes the one dimensional CPU scheduling algorithms (e. g., EDF, MCF, and CDF). Several techniques are presented to show how a CPU scheduler deals with the progressive arrival of task over time. In this dissertation traditional CPU scheduling algorithms are investigated, implemented and compared with priority <b>table</b> <b>base</b> CPU scheduling algorithm in real time database system...|$|E
40|$|ASEE 2015 In this paper, {{we discuss}} TinyOS as a {{flexible}} operating {{system that is}} suitable for wireless sensor networks. It is a powerful tool {{that is capable of}} forming a strong component of intelligent systems. Similarly, sensor networks are composed of accurate, low levels of power nodes that carry out simultaneous, reactive programs that operate within the limitations of power and memory. As a solution, we integrate components of the TinyOS with TinyHash or modules for better operations. We also present more data about four components based on our proposed protocol, which includes hash function, module hash <b>table,</b> <b>base</b> station, and algorithm chart...|$|E
40|$|Figure 4 : Base of the {{polishing}} {{rotating table}} installed in its pit. The oil pads at {{the periphery of}} the <b>table</b> <b>base</b> are protected by grey yellowish plastic. The track is attached to the table. Figure 5 : The polishing robot in Bordeaux. tion is given to the need to maintain the ing the design of all civil engineering summit of the mountain free from any complexes both in the hotel area and source of disturbance for the observa- the telescope area and is preparing the tions. technical specifications for the call for In Denmark, COWlconsult is complet- tenders that will be sent out in spring 1992. It {{is interesting to note that}} a major effort has been devoted to the requirement to keep underground all the infrastructure such as the laboratories and interferometry tunnel which need to be kept in stable thermal conditions. Another area of careful study was t...|$|E
50|$|<b>Table</b> <b>based</b> on 2005 Oklahoma Almanac.|$|R
50|$|<b>Table</b> <b>based</b> on 2005 state almanac.|$|R
50|$|<b>Table</b> <b>based</b> on cross-references {{of three}} sources.|$|R
40|$|AbstractMemory {{analysis}} is increasingly {{used to collect}} digital evidence in incident response. With the fast growth in memory analysis, however, anti-forensic techniques appear {{to prevent it from}} performing the bootstrapping steps — operating system (OS) fingerprinting, Directory <b>Table</b> <b>Base</b> (DTB) identification, and obtaining kernel objects. Although most published research works try to solve anti forensics, they deal only with one element among the three steps. Thus, collapse in any of the three steps using the suggested robust algorithms leads to failure in the memory analysis. In this paper, we evaluate the latest memory forensic tools against anti-forensics. Then, we suggest a novel robust algorithm that guarantees the bootstrapping analysis steps. It uses only one kernel data structure called KiInitialPCR, which is a kernel global variable based on the kernel processor control region (KPCR) structure and has many fields with tolerance to mutation. We characterize the robust fields of the KPCR structure to use them for OS fingerprinting, DTB identification, and obtaining kernel objects. Then, we implement the KiInitialPCR-based analysis system. Therefore, we can analyze the compromised memory in spite of the interference of anti-forensics...|$|E
40|$|Small {{standing}} portrait {{sculpture of}} Abraham Lincoln. Figure stands erect {{and attached to}} square <b>table</b> <b>base.</b> Lincoln {{is dressed in a}} suit and long overcoat and is draped with a fringed shawl covering the shoulders and back. The head is slighty bowed in solemn reflection, and the left leg is positioned forward and bent, demonstrating a shift in stance. Lincoln holds a top hat in his right hand and clutches the lapel of his overcoat in his left hand. Several coats of dark paint have been applied to give the plaster sculpture a finished bronze appearance. Impressed in the base near the left foot is the artist's signature, relatively undecipherable: "Mario So[amand?]; 1937; 50 _". Adhered underneath the base is a newspaper advertisement that may be contemporary to the sculpture. Four large green felt circles were adhered to the base for stabilization. Sculpture by artist who is not completely identified. It could be Marion Sanford (1904 - 1987), who was known for her bronze bas-reliefs, portraits and figures. Notes from her papers in the Smithsonian indicate her interest in Lincoln as a subject, and there is evidence of a statue commissioned in 1937 [...] about the same time Sanford was establishing a studio. Because the Lincoln figurine is draped with a shawl, it could mean the artist attempted to depict the president while visiting a battlefield during the Civil War. Lincoln's head is bowed slightly, and his hat is carried humbly at his side...|$|E
30|$|An {{alternative}} approach to detection techniques, like VMwall and hybrid IDS, are prevention methods. One security appliance that performs prevention is Malaware, {{which is designed}} to prevent malware that tailors attacks upon detection of a hypervisor [33]. To deter this initial identification of a virtual environment, a signature based method is used. In this instance, a signature is an instruction that should not be executed by an unprivileged process. As an example, when a process such as Red Pill attempts to run the SIDT instruction, it will be flagged as malicious. However, as the authors of Malaware have stated, a signature based approach is only effective against known types of malware. To combat zero-day threats, two behavior based approaches that utilize dynamic analysis are proposed [34]. This could be accomplished by first learning the current process and its page <b>table</b> <b>base</b> address. With this, it is possible to check if the current instruction register belongs to the process’ code pages. If this mapping does not exist, Malaware could flag the process as malicious. The second dynamic analysis method suggested is taint tracking. Changes to the system, otherwise known as taint, are created, when a process modifies any code or memory location. Accordingly, when taint is created in monitored locations, the offending process is immediately flagged as malicious. An added benefit of taint tracking is it defeats malicious code that has been transformed to look harmless, also known as code obfuscation [35]. Once loaded into a monitored region, the obfuscated code is immediately marked as tainted and the associated process is flagged as malicious. Unfortunately, only the signature based piece of the detection has been implemented and no data relating to added overhead has been collected. However, the initial detection results were promising with a malware detection rate of 76 %. Lastly, {{it is important to note}} that techniques that alter known memory states, such as address space layout randomization (ASLR) may increase the difficulty of this type of taint tracking [36].|$|E
50|$|<b>Table</b> <b>based</b> on {{database}} of historic members.|$|R
50|$|<b>Table</b> <b>based</b> on list cross-referenced {{from three}} sources.|$|R
50|$|This is an {{incomplete}} <b>table</b> <b>based</b> on available results.|$|R
40|$|During {{the centuries}} that {{followed}} the Age of Discovery, when Europeans, notably Portugal and Spain, started to cruise the Seven Seas, the first navigators faced a dilemma that threatened their well being {{and the success of}} their enterprise: how to transport goods safely and efficiently across the oceans? Moreover, how to do it avoiding deterioration and consequent losses? The final answer for these questions was the creation of containers: a geometrically simple structure that facilitated maritime transportation. Nowadays, sea surface transportation accounts for 99 % of all international transportation. Of this amount, the biggest part of the fleet corresponds to container ships. The use of containers to transport numerous manufactured goods is relatively new. Since this piece of equipment was invented in 1937 by Malcolm MacLean, a revolution was seen in maritime transportation, with consequent improvements in efficacy and reliability. Despite its young age, containers became broadly popular and their use quickly spread around the globe. Nowadays, about 90 % of all non-bulk cargo maritime transportation worldwide is performed employing containers stacked in container ships. However, such popularization brought some concerns: tight schedules allied a recent increase in the height of stacks carried on deck and the growing size of container, coinciding with a substantial {{increase in the number of}} containers lost at sea. This number is estimated to be around ten thousand each year, and although the total number involved is a matter of controversy among experts, this still represents a significant economical loss to the liner industry. Often, extreme sea conditions that eventually induce parametric rolling in the vessel are considered the most probable culprit behind those losses. However, present regulation and norms for securing equipment are calculated based on static loads, an unrealistic approach considering the dynamic nature of the conditions faced by containers during maritime transportation. Thus, questions have been raised about the safety of prolonged use of these standards, which might underestimate real values of forces acting on container stacks and their securing elements. In this panorama, the problem of container stack dynamics must be addressed properly to understand the mechanisms behind container losses, in an effort to set new standards and promoting valuable advice to the liner industry. To achieve this goal, the authors propose the study of the container loss problem in the light of science using a strong methodology. The study was divided in four main stages: scaling of a 20 ft ISO freight container, pilot study using scaled model in a two-tiers single stack arrangement (2 x 1), container stack dynamics study using scaled model in a seven-tiers single stack arrangement (7 x 1) and the same study of a seven-tiers three stack arrangement (7 x 3). These stages were segregated in two sub-stages: experimentation using shaking table testing, and numerical simulation employing finite element method. For both sub-stages a set of control variables were idealized: amplitude and frequency of the driving excitation, payload added to the scaled models, horizontal rotation of the stack base, and twist lock's gap size. Additionally, 2 x 1, 7 x 1, and 7 x 3 systems'linking connectors, denominated twist locks were modeled for both cases (experimental and numerical). The first part of the research presents a method to scale down 20 ft containers using dimensional analysis, similarity theory and finite element analysis. The scaling study was separated into four sub-stages: determination of similitude parameters using Froude scaling laws, design testing (Finite Element Method - F. E. M.), scaled model manufacture and experimental validation (static and dynamical). The physical (dimensions, mass, and moments of inertia) and structural (longitudinal, transversal and torsional stiffness) characteristics of the scaled models were decided based on two dimensionless numbers: ratios between gravity force and inertia force, and elastic force divided by inertia force, through experimental and numerical analysis. Furthermore, the choice of each similitude parameter and its determination using dimensional analysis are presented in detail. Additionally, model geometrical design based on finite element analysis, posterior static and dynamic validation are explained thoroughly. In conclusion, study qualifications and limitations are logically presented with further prospect. The second part of the research presents a pilot study used to identify some important points before the last two stages of the study. Among these points the following issues are emphasized: adequacy of the instruments and their operations, checking the design of the research protocol, assessing whether the research protocol is realistic and workable, establishing whether the sampling frame and technique are effective, identifying logistical problems which might occur using proposed methods, estimating variability in outcomes to help determining sample size, collecting preliminary data, assessing the proposed data analysis techniques to uncover potential problems, and the assess the adequacy of the control variables. The third part of the research describes an approach to simulate the 7 x 1 system, subjected to dynamical load induced by its base. Series of experiments with controlled parameters (amplitude and frequency of driving excitation, payload, shaking <b>table</b> <b>base</b> rotation and gap size) were performed using a shaking table test to understand the effects of each variable in the container stack dynamics and present enough data to validate the numerical model. Finally, the last stage describes an approach to simulate the 7 x 3 system using shaking table test in three cases only. The main goal of this stage is to identify and quantify the contact among stacks in order to calibrate the numerical model. The study helped to elucidate some points regarding the system's fundamental mechanical behavior, where correlation of dynamic properties depending on amplitude and frequency of the input vibration, base rotation, container load and twist lock gap size, were obtained and used to calibrate and validate a numerical model. After this strenuous validation, the scaled numerical model was used as a valid tool to simulate the behavior of multi-stack configuration in some simple situations faced by containers during maritime transportation. Among these situations some common ship's motion were studied in detail: heaving, pitching and rolling, employing cases reported in the literature. Additionally, the problem of how simple changes in basic variables affect force in the bottom twist lock was addressed, the result of which provides useful advice for the industry, for maintaining the problem complexity to a minimum. Undoubtedly, this is one of the most significant findings to emerge from this study. In this panorama, it may contribute significantly to the understanding of container stack dynamics, an area where intuition and old standards are still preferred over more solid scientific principles. 報告番号: 甲 27255; 学位授与年月日: 2011 - 03 - 24; 学位の種別: 課程博士; 学位の種類: 博士(環境学); 学位記番号: 博創域第 702 号; 研究科・専攻: 新領域創成科学研究科環境学研究系人間環境学専...|$|E
5000|$|Proven Ullage Report {{including}} ASTM <b>table</b> <b>based</b> volume correction ...|$|R
50|$|Addiction Pinball {{features}} 2 <b>tables</b> <b>based</b> {{on previous}} Team17 games.|$|R
5000|$|DTRules: a {{decision}} <b>table</b> <b>based,</b> open-sourced rule engine for Java.|$|R
5000|$|DTRules: a Decision <b>Table</b> <b>based,</b> open-sourced {{rule engine}} for Java.|$|R
50|$|<b>Table</b> <b>based</b> {{on state}} almanac and {{list of all}} senators.|$|R
5000|$|... #Caption: Marvel Pinball {{features}} <b>tables</b> <b>based</b> on Marvel Comics characters.|$|R
500|$|... 1986 – Swiss Sport Diving <b>Tables</b> <b>based</b> on Bühlmann's {{model were}} published.|$|R
500|$|... 2001 – NAUI {{published}} recreational air <b>tables</b> <b>based</b> on the RGBM model.|$|R
5000|$|... 1986 - Swiss Sport Diving <b>Tables</b> <b>based</b> on Bühlmann's {{model were}} published.|$|R
5000|$|... 2001 - NAUI {{published}} recreational air <b>tables</b> <b>based</b> on the RGBM model.|$|R
500|$|... 1985 – Bruce Bassett {{published}} recreational decompression <b>tables</b> <b>based</b> on U.S. Navy Tables.|$|R
