34|31|Public
50|$|<b>Transaction</b> <b>boundaries</b> (begin, commit and rollback).|$|E
5000|$|The [...] {{interface}} {{provides the}} application theability to control <b>transaction</b> <b>boundaries</b> programmatically. This interface may be usedby Java client programs or EJB beans.|$|E
5000|$|The [...] {{annotation}} {{provides the}} application theability to control <b>transaction</b> <b>boundaries</b> declaratively. This annotation {{can be applied}} to any class that the Java EE specificationdefines as a managed bean (which includes CDI managed beans).|$|E
50|$|A {{composite}} service can be declared as a <b>transaction</b> <b>boundary.</b> The runtime environment for SOP automatically creates and manages a hierarchical context for {{composite service}} objects {{which are used}} as a <b>transaction</b> <b>boundary.</b> This context automatically commits or rollbacks upon the successful execution of the composite service.|$|R
50|$|Special {{composite}} services, called compensation services, can {{be associated}} with any service within SOP. When a composite service that is declared as a <b>transaction</b> <b>boundary</b> fails without an exception handling routing, the SOP runtime environment automatically dispatches the compensation services associated with all the inner services which have already executed successfully.|$|R
50|$|While SOP {{supports}} the basic programming constructs for sequencing, selection and iteration, it is differentiated with {{a slew of}} new programming constructs that provide built-in native ability geared towards data list manipulation, data integration, automated multithreading of service modules, declarative context management and synchronization of services. SOP design enables programmers to semantically synchronize the execution of services in order to guarantee that it is correct, or to declare a service module as a <b>transaction</b> <b>boundary</b> with automated commit/rollback behavior.|$|R
50|$|The JTA is {{modelled}} on the X/Open XA architecture, but {{it defines}} two different APIs for demarcating <b>transaction</b> <b>boundaries.</b> It distinguishes between an application server {{such as an}} EJB server and an application component. It provides an interface, , {{that is used by}} the application server itself to begin, commit and roll back the transactions. It provides a different interface, the , that is used by general client code such as a servlet or an EJB to manage the transactions.|$|E
50|$|The {{database}} server process maintains lock request queues at the object level to control concurrency {{of access to}} the same object. A request for update will establish a queue if there are any existing readers of an object. The request either goes through when all current readers release their locks or times-out (an exception which can be handled by client is thrown). Locks are generally released at <b>transaction</b> <b>boundaries.</b> When a queue is established by an update request, all other subsequent requests fall in queue behind the update request. Once the update request has been filled, all read requests in the queue rush in and get their read lock, return the object, and if there are no other updates, the queue disappears. In this architecture, locks are done at the object level so false waits and false deadlocks do not occur.|$|E
40|$|We {{examine the}} intertemporal optimal {{portfolio}} selection and consumption rule of an investor with a constant relative risk aversion who faces proportional transaction costs when trading between a risk-free asset and N risky assets. The investor's {{objective is to}} maximize the total utility of consumption over a fixed time interval [0, T]. Stochastic dynamic programming is applied to transform the problem into the Hamilton-Jacobi-Bellman equation and perturbation analysis is used to obtain the <b>transaction</b> <b>boundaries</b> and the consumption rule to leading order. We also consider {{the effect of the}} stochastic variance on the optimal allocation, where we provide an approximation scheme to determine the <b>transaction</b> <b>boundaries</b> for a portfolio with N risky assets. Numerical examples for a portfolio with a risk-free asset and two risky assets are also provided for constant variance as well as stochastic variance. Quantitative finance, Trading strategies, Transaction costs, Hedging with utility based preferences, Stochastic control,...|$|E
50|$|Another {{document}} is the “Custom Company Makaruka and History of the Island Isatabu and its Paramount Chiefs.” This document claims Moro as the paramount Chief {{in the line}} of Tuimauri, giving him absolute right to the land of Guadalcanal (Isatabu) as granted by the creator and original ancestral chief Ironggali. The importance of economic <b>transactions</b> and <b>boundaries</b> (district borders) are given value and the document repudiates waste and the concept of Public Land. This was against the Protectorate Government which declared land not occupied by the people as waste and public land.|$|R
40|$|Open-ended {{activities}} such as CAD/Cam, VLSI layout and software development require consistent concurrent access and fault tolerance associated with database transactions, but their uncertain duration, uncertain developments during execution and long interaction with other concurrent activities break traditional <b>transaction</b> atomicity <b>boundaries.</b> We propose split-transaction as a new database operation that solves the above problems by permitting transactions to commit data that will not change. Thus an open-ended activity can release the committed data and serialize interactions with other concurrent activities through the committed data. This technical report was originally titled Support of Multiuser Software Development Environments...|$|R
40|$|Abstract – Concurrent {{execution}} of multiple operations {{in a single}} clock cycle of a hardware design may increase its peak power {{which can lead to}} cooling, packaging and reliability issues. In this paper, we consider a model of computation based on high-level atomic transactions which has been shown to synthesize hardware designs comparable to hand-written Verilog in terms of area and latency. In hardware generated using such models, concurrent {{execution of}} maximal set of transactions in each clock cycle reduces the latency of the design at the cost of increase in its peak power. We propose a peak power reduction algorithm which targets the optimization of latency under a specified peak power constraint. We experimented with the proposed algorithm by implementing it in an academic version of Bluespec Compiler, a commercial highlevel synthesis tool, which uses a similar model of computation to generate efficient RTL code from atomic transactions. It is noteworthy that such atomic transactions based models can also be written in SystemC or any other highlevel hardware description language, with synthesis pragmas to denote atomic <b>transactions</b> <b>boundaries.</b> Our experiments show that the proposed algorithm can reduce the peak power of hardware designs (upto 20 % reduction achieved) without too much sacrifice in their latency. We conclude that the proposed algorithm exploits the high abstraction level (above RTL) of atomic transactions to offer the benefits of easier power management and faster architectural exploration, thus increasing the overall productivity...|$|R
40|$|Technological {{advances}} {{could potentially}} enable {{the firm to}} serve contexts, i. e., achieving value-in-use with customers in their consumption contexts through the provision of offerings. Serving contexts must necessarily shift the role of marketing to the design aspects of products to meet customer needs and also to the production aspects of transactions and <b>transaction</b> <b>boundaries</b> to meet company needs for profitability. This paper proposes a research agenda {{for the role of}} marketing in product design and innovation for future products to tackle the constant tension between these two aspects. We propose that the role of marketing would lie in (1) gaining insights into contexts, (2) understanding products as affordance and potential for the dynamic re-configurability, (3) the design of transactions and <b>transaction</b> <b>boundaries,</b> and (4) distributing competencies. The significance of studying the role of marketing in product design and innovation attributes to its potential contribution to develop new business models, and generate opportunities for new offerings and new markets, be they tangible goods or services...|$|E
40|$|Abstract—Design applications, e. g., CAD or media production, {{often require}} {{multiple}} users to work cooperatively on shared data, e. g., XML documents. Using explicit transactions in such environments is difficult, because designers {{usually do not}} want to consider transactions or ACID. However, applying transactions in order to control visibility of changes or specify recovery units, is reasonable, but determining <b>transaction</b> <b>boundaries</b> must be transparent for the designer. For this reason we propose a novel approach for the automatic determination of <b>transaction</b> <b>boundaries</b> which considers the degree of cooperation designers want to achieve. Furthermore, we present an optimistic synchronization model based on the traditional backward oriented concurrency control (BOCC) algorithm, in order to synchronize the determined transactions in multi-user environments. It exploits the semantics of tree operations on XML data and enforces a correctness criterion weaker than serializability. As our evaluation shows, when multiple users work cooperatively on shared data, this model significantly reduces the number of transaction aborts in comparison to the traditional BOCC approach. Keywords-transaction, optimistic synchronization, boundaries, cooperation, XML, semantic tree operations I...|$|E
40|$|Transactional Memory (TM) {{simplifies}} {{parallel programming}} by allowing for parallel execution of atomic tasks. Thus far, TM systems {{have focused on}} implementing transactional state buffering and conflict resolution. Missing is a robust hardware/software interface, not limited to simplistic instructions defining <b>transaction</b> <b>boundaries.</b> Without rich semantics, current TM systems cannot support basic features of modern programming languages and operating systems such as transparent library calls, conditional synchronization, system calls, I/O, and runtime exceptions...|$|E
40|$|The {{usefulness}} {{of land to}} the development and wellbeing of any group of people is dependent first on its availability and then on how well it is being managed. However, little or no documentation of land <b>transactions,</b> <b>boundary</b> disputes and petit family disagreements among others have been obstacles to the efficient management {{of land in the}} Upper West region of Ghana. The research aims at finding out {{the extent to which the}} CLSs have since their inception, contributed to the attainment of an efficient land management system in Ghana using the Wa Municipal, Sagmaalu and Tabiasi CLSs as a case study. It also finds out the prospects of the CLSs and the challenges confronting them. It then provides practical and appropriate approaches to the realization of the ultimate benefits when land is well managed. The paper did these by reviewing the LAP documents and other literature on land management. Data was collected from the CLSs through direct personal and key informant interviews and also by observation. The analysis of data is done through the narrative analytical approach where the researchers captured the live experiences of CLSs in relation to the primary objectives that were spelt out for them. This enabled the researchers to determine the efficiency and effectiveness of the secretariats established based on the different approaches (supply and demand based approaches). The research revealed that the CLSs have been able to ensure peace and harmony in their operational areas through various land disputes resolutio...|$|R
40|$|Open-ended {{activities}} such as CAD/CAM, VLSI layout and software development require consistent concurrent access and fault tolerance associated with database transactions, but their uncertain duration, uncertain developments during execution and long interactions with other concurrent activities break traditional <b>transaction</b> atomicity <b>boundaries.</b> We propose splittransaction as a new database operation that solves the above problems by permitting transactions to commit data that will not change. Thus an open-ended activity can release the committed data and serialize interactions with other concurrent activities through the committed data. 1 Introduction Transactions provide atomicity in two senses: concurrency atomicity (consistent concurrent access) and reliability atomicity (fault-tolerance) in databases. However, for several reasons these atomicity properties restrict {{the applicability of the}} transaction concept in open-ended activities, such as CAD/CAM projects, VLSI design and s [...] ...|$|R
40|$|In {{this special}} issue we focus on {{exploring}} the tensions, challenges and possibilities for working in contexts where relationships between groups are characterized by dominance and resistance. Some of the impetus lies in our own struggles and frustrations with models, guidelines and ‘recipes’ {{that have been developed}} to guide sensitive, competent and empowering research and practice across boundaries of ‘race’, ethnicity and culture. These models and guidelines are often framed as tools that will enable culturally competent <b>transactions</b> across these <b>boundaries...</b>|$|R
40|$|AbstractPervasive digital {{technologies}} are advancing at an exponential rate, changing {{the nature of}} products and services as we know them. Firms could now serve context through the delivery of digitally enabled offerings. Serving context requires the product to be designed as incomplete, allowing the consumers to complete the offering in context {{through the application of}} their own resources. An offering may be digitised {{in such a way that}} functionality can be added (reprogrammed) even after the product has been transferred to the customer. In that respect, the product will remain “incomplete” through life [1]. An incomplete product can be tailored to the customers’ context to obtain a better “fit” with its environment and what the customer wants to achieve. Value co-creation occurs in context; empowering the consumer with the ability to dynamically reconfigure the offering the benefit is potentially increased. Incomplete products skew the trade-off between standardisation and personalisation. In the case of the iPhone ®, the boundary of standardisation is drawn at the hardware level where as the boundary for personalisation is drawn at the digital app layer, allowing firms to derive scale economies whilst the customer is achieves high levels of personalisation. This paper proposes three areas need a completely need study. First, it explores product and service architectures and the role of modularity within incomplete products. Second, it aims to conceptualize a meaning for indefinite postponement, a new concept enabled by incomplete products and digital technologies. The final area for discussion is <b>transaction</b> <b>boundaries.</b> Roll Royce have shown through their Power by the Hour © that <b>transaction</b> <b>boundaries</b> can be redrawn so that the focus is on outcomes rather than exchange. The concept of incomplete product will have a significant impact on <b>transaction</b> <b>boundaries</b> in the digital economy. As the offering is reconfigured in context, understanding the human resource and how they integrate their own resource into the offering will be key. A number of challenges for service research are proposed that will have significant implications on the development of incomplete products in the connected digital economy...|$|E
40|$|Abstract. Web logs {{collected}} by proxy servers, {{referred to as}} proxy logs or proxy traces, contain information about Web document accesses by many users against many Web sites. This “many-to-many ” characteristic poses a challenge to Web log mining techniques due to the difficulty in identifying individual access transactions. This is because in a proxy log, user transactions are not clearly bounded and are sometimes interleaved with each other {{as well as with}} noise. Most previous work has used simplistic measures such as a fixed time interval as a determination method for the <b>transaction</b> <b>boundaries,</b> and has not addressed the problem of interleaving and noisy transactions. In this paper, we show that this simplistic view can lead to poor performance in building models to predict future access patterns. We present a more advanced cut-and-pick method for determining the access transactions from proxy logs, by deciding on more reasonable <b>transaction</b> <b>boundaries</b> and by removing noisy accesses. Our method takes advantage of the user behavior that in most transactions, the same user typically visits multiple, related Web sites that form clusters. These clusters can be discovered by our algorithm based on the connectivity among Web sites. By using real-world proxy logs, we experimentally show that this cut-and-pick method can produce more accurate transactions that result in Web-access prediction models with higher accuracy. ...|$|E
40|$|Oracle Materialized Views (MVs) are {{designed}} for data warehousing and replication. For data warehousing, MVs based on inner/outer equi-joins with optional aggregation, can be refreshed on <b>transaction</b> <b>boundaries,</b> on demand, or periodically. Refreshes are optimized for bulk loads and can use a multi-MV scheduler. MVs based on subqueries on remote tables support bi-directional replication. Optimization with MVs includes transparent query rewrite based on cost-based selection method. The ability to rewrite a large class of queries based on a small set of MVs is supported by using Dimensions (new Oracle object), losslessness of joins, functional dependency, column equivalence, join derivability, joinback and aggregate rollup. ...|$|E
30|$|The two {{instances}} are equivalent. If the 0 - 1 {{knapsack problem}} {{can pick up}} a qualified subset of items, the transactions corresponding to these items can be finished within time C at one processor and weight at least S. In this way, we can divide the timeline into C parts evenly. These parts must partition <b>transactions</b> by the <b>boundary</b> of their updates. In this way, each processor can execute the operations in each part with time M/C. If our problem can find a schedule, we can trivially merge the operations into one sequence and that corresponds to a subset of items.|$|R
40|$|Background: Elder mistreatment, social ageism, {{and human}} rights are {{increasingly}} powerful discourses in positioning older people in society, yet the relationship between them has rarely been subjected to critical investigation. This perceived relationship will have implications for how mistreatment is understood and responded to. Method: Critical gerontological approach based on narrative and textual analysis. Results: Reports of public attitudes toward mistreatment {{suggest that it is}} thought to be more common than scientific evidence would suggest; however, reporting is much lower than prevalence. While the discourse over mistreatment has tended to focus on interpersonal relationships, ageism has emphasized social attitudes, {{and human rights}} have concentrated on relations {{between the state and the}} individual. Conclusions: In this paper, a series of models have been examined which mark a tendency to restrict and then attempt to reintegrate individual, interpersonal, and social levels of analysis. It is concluded that a focus on the processes of <b>transaction</b> across <b>boundaries</b> rather than contents would facilitate both integrative modeling and deeper understanding of the qualities of abusive situations...|$|R
40|$|The CISG (Convention on Contracts for the International Sale of Goods) has remarkably {{facilitated}} commercial <b>transactions</b> across <b>boundaries</b> {{and different}} legal systems. This article, {{to be published}} as a Book Chapter, discusses some possible difficulties caused by using different languages, or words which might be interpreted differently, and some solutions and {{ways to deal with}} these difficulties. Three kinds of issues have appeared: the first has to do with drafting issues, and the peculiar problem of the six official languages of the Convention. The second set of issues deals with the interpretation of the Convention and the so-called homeward trend. The third set of issues consists of contract problems among the parties involving translated documents, documents written in a language not understood by one of the parties, or by the court in charge of the litigation. Even though there is a rich literature on these issues, language and translation issues do not seem to have caused major problems in the application of the CISG, at least from the reported cases in the various databases available...|$|R
40|$|The {{inclusion}} of transaction {{costs in the}} optimal portfolio selection and consumption rule problem is accomplished via the use of perturbation analyses. The portfolio under consideration consists {{of more than one}} risky asset, which makes numerical methods impractical. The objective is to establish both the transaction and the no-transaction regions that characterize the optimal investment strategy. The optimal <b>transaction</b> <b>boundaries</b> for two and three risky assets portfolios are solved explicitly. A procedure for solving the N risky assets portfolio is described. The formulation used also reduces the restriction on the functional form of the utility preference. ...|$|E
40|$|Abstract. We {{propose a}} new service-oriented Grid Transaction Processing {{architecture}} called GridTP {{based on the}} OGSA platform and the X/Open DTP model. GridTP services provide a consistent and effective way of making existing, autonomously managed databases available within Grid environments. In the Data Virtualization Services layer, Grid applications, via the WSDL-style TX portType, delineate global <b>transaction</b> <b>boundaries</b> among virtual organizations. In the Common Resource Model layer, GridTP services, via the X/Opendefined interface XA between Database Managers and the Transaction Manager, manager local transactions in heterogeneous databases. Therefore, GridTP has made a seamless mechanism for embedding the X/Open DTP model in Grid services to support Grid Transaction Processing, which provides one promising reference implementation for the future Grid Data Services. ...|$|E
40|$|Introduction Client caches {{are used}} in {{client-server}} objectoriented database systems (e. g., [1, 2]) to offload work from servers and improve response times. Applications run on such databases often exhibit cross-transaction locality in their object reference patterns; a number of concurrency-control schemes have been proposed that include a cache consistency component, allowing objects to be cached across <b>transaction</b> <b>boundaries</b> (see next section). The result is a system with different tradeoffs than are present in traditional serverbased databases. The problem of maximizing transaction performance in these systems has not been thoroughly investigated. In this note I briefly describe some relevant insights from recent concurrency-control studies, providing the motivation for a class of adaptive schemes that I call Temperature-based Concurrency Control (TCC) schemes. Optimistic concurrency control appears to work best for objects under low conte...|$|E
40|$|This chapter {{sets out}} an {{approach}} to professional development and team building in a newly established faculty in a Finnish university. A method is given for mapping the academic and professional experiences of eight faculty members across disciplinary boundaries {{to arrive at a}} cross-disciplinary framework for collaborative research in multi- and intercultural education. Building cumulatively on faculty members’ expertise, the mapping revealed three interconnected themes as a basis for collaborative research: <b>boundary</b> <b>transactions</b> between knowledge, skill and language; boundary objects as representations and carriers of culture; and technological mediation of boundary encounters. A collectively agreed position statement is given for each of the themes along with a discussion of associated pedagogical ideas...|$|R
40|$|This paper {{shows that}} some {{explanations}} provided by transaction costs and capabilities analyses are complementary - rather than independent or rival - accounts of organisational <b>boundaries.</b> <b>Transactions</b> and capabilities considerations interplay in a two-way dynamic interaction {{in determining the}} boundaries of the firm whenever there are informational limits that make knowledge difficult to trade and transmit. This interaction is stronger in the presence of uncertainty that prevents individuals from estimating the probability distribution of future contingencies. The paper is structured as follows. Section 1 introduces the concepts of knowledge transmittability and tradability. Sections 2 and 3 present the conditions under which transaction costs and capabilities considerations are important in vertical-integration and horizontal-expansion decisions. Finally, section 4 is dedicated to the main crossed-linked effects between transaction costs and capabilities considerations in shaping {{the boundaries of the}} firm. Transaction costs, capabilities. ...|$|R
40|$|Abstract — The mobile-app {{marketplace}} is highly competitive. To maintain {{and improve the}} quality of their apps, developers need data about how their app is performing in the wild. The asynchronous, multi-threaded nature of mobile apps makes tracing difficult. The difficulties are compounded by the resource limitations inherent in the mobile platform. To address this challenge, we develop AppInsight, a system that instruments mobileapp binaries to automatically identify the critical path in user <b>transactions,</b> across asynchronous-call <b>boundaries.</b> AppInsight is lightweight, it does not require any input from the developer, and it does not require any changes to the OS. We used AppInsight to instrument 30 marketplace apps, and carried out a field trial with 30 users for over 4 months. We report on the characteristics of the critical paths that AppInsight found in this data. We also give real-world examples of how AppInsight helped developers {{improve the quality of}} their app. ...|$|R
40|$|The AspectOPTIMA project aims {{to build}} an aspect-oriented {{framework}} that provides run-time support for transactions. The previously established decomposition of the ACID (atomicity, consistency, isolation, durability) properties into ten well-defined reusable aspects had one limitation: it didn't {{take into account the}} concerns of transaction life-time support, resulting {{in the creation of a}} cross-cutting concern among the aspects. This thesis removes the cross-cutting concern by integrating the transactional life cycle management issues such as determining the <b>transaction</b> <b>boundaries,</b> maintaining a well-defined state and managing the involvement of the participants. The integration process results in the creation of new aspects that serve as building blocks for various transactional models. The thesis also demonstrates how these base aspects can be configured and composed in different ways to design customized transaction models with different concurrency control and recovery strategies...|$|E
40|$|Many {{client-server}} {{object-oriented database}} systems (OODBs) run applications at clients and perform all accesses on cached copies of database objects. Moving both data and computation to the clients can improve response time, throughput, and scalability. For applications with good locality of reference, retaining cached state across <b>transaction</b> <b>boundaries</b> {{can result in}} further performance and scaling benefits. This thesis examines {{the question of what}} concurrency control scheme is best able to realize these potential benefits. It describes a new optimistic concurrency control scheme called AOCC (Adaptive Optimistic Concurrency Control) and compares its performance with that of ACBL (Adaptive-Granularity Callback Locking), the scheme shown to have the best performance in previous studies. Like all optimistic schemes, AOCC synchronizes transactions at the commit point, aborting transactions when synchronization fails; ACBL, like other locking schemes, synchronizes transactions while they execute. Earlie...|$|E
40|$|Transactional memory (TM) {{provides}} an easy-to-use and high-performance parallel programming {{model for the}} upcoming chip-multiprocessor systems. Several researchers have proposed alternative hardware and software TM implementations. However, the lack of transaction-based programs {{makes it difficult to}} understand the merits of each proposal and to tune future TM implementations to the common case behavior of real application. This work addresses this problem by analyzing the common case transactional behavior for 35 multithreaded programs {{from a wide range of}} application domains. We identify transactions within the source code by mapping existing primitives for parallelism and synchronization management to <b>transaction</b> <b>boundaries.</b> The analysis covers basic characteristics such as transaction length, distribution of readset and write-set size, and the frequency of nesting and I/O operations. The measured characteristics provide key insights into the design of efficient TM systems for both nonblocking synchronization and speculative parallelization. 1...|$|E
40|$|We derive the {{boundaries}} of the region of no transaction in a two-asset portfolio selection problem of an investor with isoelastic utility and with a finite horizon when the risky asset follows a mixed jump-diffusion process in the presence of proportional <b>transaction</b> costs. These <b>boundaries</b> are shown to differ from their diffusion counterparts in relation to the jump intensity and the risk premium, as well as the investor risk aversion coefficient. We use a discretization of the continuous time distribution that converges to jumpdiffusion and a general numerical approach for iid risky asset returns in discrete time. We find that our approach converges efficiently to the continuous time results in cases where these results are known. Comparative results with a recent study on the same topic are presented and it is shown that the numerical algorithm has equally attractive approximation properties to the unknown continuous time limit...|$|R
40|$|URL] {{study the}} problem of {{maximising}} expected utility of terminal wealth over a nite horizon, with one risky and one riskless asset available, and with trades in the risky asset subject to proportional transaction costs. In a discrete time setting, using a utility function with hyperbolic risk aversion, we prove that the optimal trading strategy is characterised by a function of time (t), which represents the ratio of wealth held in the risky asset to that held in the riskless asset. There is a time varying no <b>transaction</b> region with <b>boundaries</b> b(t) < s(t), such that the portfo- lio is only rebalanced when (t) is outside this region. The {{results are consistent with}} similar studies of the in nite horizon problem with in- termediate consumption, where the no transaction region has a similar, but time independent, characterisation. We solve the problem numerically and compute the boundaries of the no transaction region for typical model parameters. We show how the results [...] ...|$|R
40|$|The {{purpose of}} this paper is to model {{differential}} rates over residual information sets, so as to shape transactional algebras into operational grounds. Firstly, simple differential rates over residual information sets are introduced by taking advantage of finite algebras of sets. Secondly, after contextual sets and the relevant algebra of information sets is suitably fashioned, generalized differential rates over residual information sets are expanded on, while a recursive algorithm is set forth to characterize such rates and sets. Thirdly, the notion of transactional algebra is presented and heed is given to the costs of running such structure. Finally, an application to financial arbitrage processes is fully developed within a transactional algebra, setting up arbitrage returns net of <b>transaction</b> costs, establishing <b>boundary</b> conditions for an arbitrage to take place, and finally allowing for a definition of what should be meant by financial arbitrage within a transactional algebra. differential rates, residual information sets, transactional algebras, arbitrage...|$|R
