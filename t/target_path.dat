106|285|Public
25|$|At this stage, {{the story}} splits off in {{numerous}} possibilities, {{based on the}} player's choices. The narrator continues the story, but when the player comes to an area where a choice is possible, the narrator will suggest which route Stanley will take. The player can opt to go against the narrator and perform the other action, forcing the narration to account for this new direction which may return the player back to the <b>target</b> <b>path</b> or create a new narration. For example, the first choice the player makes in the game is at a set of two open doors, with the narrator stating that Stanley chose the left door; the player can choose to follow this narration, which keeps the narrator's story on track, or may choose the right door, which makes the narrator annoyed and causes him to pressure the player {{to return to the}} 'proper' path. Because of this, much of the story is considered thought-provoking about the nature of choice and decisions. The narration also breaks the fourth wall on several occasions in handling the player's decisions.|$|E
50|$|This {{method was}} slow and an inefficient use of disk-space on small systems. An improvement, called fast symlinks, allowed storage of the <b>target</b> <b>path</b> within the data {{structures}} used for storing file information on disk (inodes). This space normally stores a list of disk block addresses allocated to a file. Thus, symlinks with short target paths are accessed quickly. Systems with fast symlinks often fall back to using the original method if the <b>target</b> <b>path</b> exceeds the available inode space. The original style is retroactively termed a slow symlink. It is also used for disk compatibility with other or older versions of operating systems.|$|E
50|$|An electrolaser first ionizes its <b>target</b> <b>path,</b> {{and then}} sends a {{powerful}} electric current down the conducting track of ionized plasma, somewhat like lightning. It {{functions as a}} giant, high-energy, long-distance version of the Taser or stun gun.|$|E
40|$|A planner is {{compelled}} {{to raise a}} prescribed present value of revenues by levying a distorting tax on the output of a representative firm that faces adjustment costs and resides within a rational expectations equilibrium. We describe recursive representations both for a Ramsey plan and {{for a set of}} credible plans. Continuations of Ramsey plans are not Ramsey plans. Continuations of credible plans are credible plans. As they are sometimes constructed, continuations of optimal outcome <b>target</b> <b>paths</b> are not optimal outcome <b>target</b> <b>paths...</b>|$|R
50|$|These {{contain a}} {{phosphorescent}} green liquid that will drip {{from the wound}} they open on a target, allowing the <b>target's</b> <b>path</b> to be easily followed in low-light situations.|$|R
40|$|International audienceThis study {{concerns}} {{the process by}} which agents select control laws. Participants adjusted their walking speed in a virtual environment in order to intercept approaching targets. Successful interception can be achieved with a constant bearing angle (CBA) strategy that relies on prospective information, or with a modified required velocity (MRV) strategy, which also includes predictive information. We manipulated the curvature of the <b>target</b> <b>paths</b> and the display condition of these paths. The curvature manipulation had large effects on the walking kinematics when the <b>target</b> <b>paths</b> were not displayed (informationally poor display). In contrast, the walking kinematics were less affected by the curvature manipulation when the <b>target</b> <b>paths</b> were displayed (informationally rich display). This indicates that participants used an MRV strategy in the informationally rich display and a CBA strategy in the informationally poor display. Quantitative fits of the respective models confirm this information-driven switch between the use of a strategy that relies on prospective information and a strategy that includes predictive information. We conclude that agents are able of taking advantage of available information by selecting a suitable control law...|$|R
50|$|File shortcuts in Windows {{can store}} a working {{directory}} path besides the <b>target</b> <b>path.</b> Environment variables can be used. A hotkey {{can be defined}} in the shortcut's properties for shortcuts that {{are located in the}} Start Menu folders, pinned to the Taskbar or the Desktop. In Windows 2000 onwards, file shortcuts can store comments which are displayed as a tooltip when the mouse hovers over the shortcut.|$|E
5000|$|If π is a path lying wholly {{inside the}} {{positive}} Weyl chamber, the Littelmann graph [...] is defined {{to be the}} coloured, directed graph having as vertices the non-zero paths obtained by successively applying the operators fα to π. There is a directed arrow from one path to another labelled by the simple root α, if the <b>target</b> <b>path</b> is obtained from the source path by applying fα.|$|E
50|$|Men's 10 metre running target {{shooting}} {{made its first}} Olympic appearance at the 1992 Summer Olympics, replacing 50 metre running target on the programme. The events are similar, the main changes being the shortened distance (and correspondingly shortened <b>target</b> <b>path),</b> the use of airguns instead of small-bore rifles, and the circular target {{as opposed to the}} 50 metre target depicting a wild boar. Michael Jakosits became the inaugural champion and established two Olympic records.|$|E
30|$|The MF and the {{temporal}} processing algorithm create images with pixel scores {{according to their}} likelihood of being a target, whereas the DPA accumulates the scores of pixels according to the probability of the path going through them to be the <b>target's</b> <b>path.</b>|$|R
5000|$|Optimized <b>target</b> identification, <b>path</b> planning, and {{obstacle}} avoidance; and ...|$|R
40|$|A general {{method for}} {{flexible}} {{control of the}} path of discretized light beams in homogeneous waveguide lattices, based on longitudinal modulation of the coupling constant, is theoretically proposed. As compared to beam steering and refraction achievable in graded-index waveguide arrays, the proposed approach enables to synthesize rather arbitrary <b>target</b> <b>paths...</b>|$|R
50|$|On Windows systems, this is {{the most}} common form of {{installation}}. An installation process usually needs a user who attends it to make choices, such as accepting or declining an end-user license agreement (EULA), specifying preferences such as the installation location, supplying passwords or assisting in product activation. In graphical environments, installers that offer a wizard-based interface are common. Attended installers may ask users to help mitigate the errors. For instance, if the disk in which the computer program is being installed was full, the installer may ask the user to specify another <b>target</b> <b>path</b> or clear enough space in the disk.|$|E
50|$|At this stage, {{the story}} splits off in {{numerous}} possibilities, {{based on the}} player's choices. The narrator continues the story, but when the player comes to an area where a choice is possible, the narrator will suggest which route Stanley will take. The player can opt to go against the narrator and perform the other action, forcing the narration to account for this new direction which may return the player back to the <b>target</b> <b>path</b> or create a new narration. For example, the first choice the player makes in the game is at a set of two open doors, with the narrator stating that Stanley chose the left door; the player can choose to follow this narration, which keeps the narrator's story on track, or may choose the right door, which makes the narrator annoyed and causes him to pressure the player {{to return to the}} 'proper' path. Because of this, much of the story is considered thought-provoking about the nature of choice and decisions. The narration also breaks the fourth wall on several occasions in handling the player's decisions.|$|E
40|$|A {{rescue device}} {{includes}} a control module to sense an avalanche, sense {{the direction of}} the surface and establish a <b>target</b> <b>path</b> to the surface. A nozzle is selected or oriented by the control module along the <b>target</b> <b>path.</b> A fluid reservoir is connected to the nozzle to force a fluid through the nozzle along the <b>target</b> <b>path</b> to the surface. This allows rescuers to identify the location of a victim and also provides an air path to the victim...|$|E
50|$|Phing support (autocompletion, checks {{standard}} tags, properties, <b>target</b> names, <b>path</b> attribute {{values in}} build files).|$|R
40|$|Context Evolutionary {{algorithms}} {{have proved}} to be successful for generating test data for path coverage testing. However in this approach, the set of <b>target</b> <b>paths</b> to be covered may include some that are infeasible. It is impossible to find test data to cover those paths. Rather than searching indefinitely, or until a fixed limit of generations is reached, it would be desirable to stop searching as soon it seems likely that feasible paths have been covered and all remaining un-covered <b>target</b> <b>paths</b> are infeasible. Objective The objective is to develop criteria to halt the evolutionary test data generation process as soon as it seems not worth continuing, without compromising testing confidence level. Method Drawing on software reliability growth models as an analogy, this paper proposes and evaluates a method for determining when it is no longer worthwhile to continue searching for test data to cover un-covered <b>target</b> <b>paths.</b> We outline the method, its key parameters, and how it can be used as the basis for different decision rules for early termination of a search. Twenty-one test programs from the SBSE path testing literature are used to evaluate the method. Results Compared to searching for a standard number of generations, an average of 30 - 75 % of total computation was avoided in test programs with infeasible paths, and no feasible paths were missed due to early termination. The extra computation in programs with no infeasible paths was negligible. Conclusions The method is effective and efficient. It avoids the need to specify a limit on the number of generations for searching. It can help to overcome problems caused by infeasible paths in search-based test data generation for path testing. © 2014 Elsevier B. V. All rights reserved...|$|R
40|$|The {{execution}} of reaching movements involves the coordinated activity of multiple brain regions that relate variously {{to the desired}} <b>target</b> and a <b>path</b> of arm states to achieve that target. These arm states may represent positions, velocities, torques, or other quantities. Estimation has been previously applied to neural activity in reconstructing the target sepa-rately from the <b>path.</b> However, the <b>target</b> and <b>path</b> are not independent...|$|R
40|$|In {{this paper}} results for time-invariant linear systems {{concerning}} controllability, reachability, outputcontrollability, stabilizability and <b>target</b> <b>path</b> controllability are extended to time-varying systems. For the extensions which are already kno'wn in literature elementary proofs are given. Moreover necessary and sufficient conditions are {{given for the}} (strong) admissibility of a <b>target</b> <b>path...</b>|$|E
40|$|This paper {{critically}} examines a new {{literature that}} supports price-level targeting (PT) over inflation targeting (IT). 1 This literature {{shows that it}} is better for the central bank (the Bank) to gradually wrestle the price level, rather than the inflation rate, back to the <b>target</b> <b>path.</b> PT provides a fir...|$|E
40|$|In {{this paper}} the dynamic decouplability and dynamic path {{controllability}} of nonlinear discrete-time economic systems in state space form are discussed. Based on {{the observation that}} both properties are equivalent, a (theoretical) efficient way of <b>target</b> <b>path</b> controllability is proposed. This is illustrated for a fairly general example of a closed economy...|$|E
30|$|According to the {{strategies}} of exploring the programs, fuzzers {{could be classified as}} directed fuzzing and coverage-based fuzzing. A directed fuzzer aims at generation of testcases that cover target code and <b>target</b> <b>paths</b> of programs, and a coverage-based fuzzer aims at generation of testcases that cover as much code of programs as possible. Directed fuzzers expect a faster test on programs, and coverage-based fuzzers expect a more thorough test and detect as more bugs as possible. For both directed fuzzers and coverage-based fuzzers, how to extract the information of executed paths is a key problem.|$|R
40|$|The {{execution}} of reaching movements involves the coordinated activity of multiple brain regions that relate variously {{to the desired}} <b>target</b> and a <b>path</b> of arm states to achieve that target. These arm states may represent positions, velocities, torques, or other quantities. Estimation has been previously applied to neural activity in reconstructing the target separately from the <b>path.</b> However, the <b>target</b> and <b>path</b> are not independent. Neural Computation 18, 2465 – 2494 (2006) C ○ 2006 Massachusetts Institute of Technology 2466 L. Srinivasan, U. Eden, A. Willsky, and E. Brown Because arm movements are limited by finite muscle contractility, knowledge of the <b>target</b> constrains the <b>path</b> of states {{that leads to the}} target. I...|$|R
40|$|Abstract A fuzzy {{model is}} {{proposed}} {{to analyze the}} effectiveness of test pairs <b>targeting</b> <b>path</b> delay faults. This model is accurate enough to rank nonrobust tests by accounting for conditions not considered in existing models. It remains fully consistent with the traditional test robustness analysis. Finally, it also provides a coverage metric {{to be used to}} rank whole test sets. The proposed model has been implemented in a logic level path delay fault simulator. Its accuracy has been validated, for a set of combinational benchmarks, by means of a Monte Carlo logic-level event-driven path delay fault simulator...|$|R
40|$|We {{propose a}} new delay test {{generation}} technique {{that can take}} into account the impact of the power supply noise on the signal propagation delays. This is different from existing delay fault models and test generation techniques that ignore the dependence of path delays on the applied test patterns and cannot capture the worst-case timing scenarios in deep submicron designs. In addition to sensitizing the fault and propagating the fault effects to the primary outputs, our new tests also produce the worst-case power supply noise on the nodes in the <b>target</b> <b>path.</b> Thus, the tests also cause the worst-case propagation delay for the nodes along the <b>target</b> <b>path.</b> Our experimental results on benchmark circuits show that the new delay tests produce significantly longer delays on the tested paths compared to the tests derived using existing delay testing methods...|$|E
40|$|Abstract. This {{study is}} aimed at {{stabilizing}} a three dimensional biped passive walker in various environments and achieving climbing and turning control. The novel control method synchronizes a period of the changing motion of the stance leg in frontal plane (frontal motion) with a period of the swing leg by periodic input in order to stabilize the three dimensional passive walker. A mechanical oscillator is utilized to change {{the period of the}} frontal motion. The <b>target</b> <b>path</b> of the oscillator is automatically generated based on frequency entrainment in order to adjust the period of the frontal motion. In the climbing and turning control of the passive walker, the amplitude and the phase generating algorithm of the <b>target</b> <b>path</b> of the oscillator are improved. It is analytically demonstrated that the biped passive walker can be stabilized even in climbing and turning...|$|E
40|$|Digital {{system for}} {{automotive}} crash avoidance measures and displays difference in frequency between two sinusoidal input signals of slightly different frequencies. Designed {{for use with}} Doppler radars. Characterized as digital mixer coupled to frequency counter measuring difference frequency in mixer output. Technique determines <b>target</b> <b>path</b> mathematically. Used for tracking cars, missiles, bullets, baseballs, and other fast-moving objects...|$|E
50|$|Serafina (Seraphim): A technopath, {{she is able}} to {{mechanically}} {{interface with}} machinery and other people. With her powers, she can enhance and control their powers. Her human senses are masterfully enhanced as well. She can differentiate between psionic illusions and reality on sight. Serafina is also able to detect genetic and bio-chemical data down to the molecular level. This makes her an extraordinary tracker, capable not only of tracing a <b>target's</b> <b>path</b> but also identifying any person or object they might have touched and recognizing subtle shifts in their body chemistry or metabolism, such as changes in adrenaline levels or pulse rate. She can also manipulate bio-molecular ingredients to some degree.|$|R
5000|$|... #Caption: Israel's Arrow 3 {{missiles}} use a gimbaled seeker for hemispheric coverage. By {{measuring the}} seeker's line-of-sight propagation {{relative to the}} vehicle's motion, they use proportional navigation to divert their course and line up exactly with the <b>target's</b> flight <b>path.</b>|$|R
40|$|Abstract- Effective and {{efficient}} test data generation {{is one of}} the major challenging and time-consuming tasks within the software testing process. Researchers have proposed different methods to generate test data automatically, however, those methods suffer from different drawbacks. In this paper we present a Genetic Algorithm-based approach that tries to generate a set of test data that is expected to cover a given set of <b>target</b> <b>paths.</b> Our proposed fitness function is intended to achieve path coverage that incorporates path traversal techniques, neighborhood influence, weighting, and normalization. This integration improves the GA performance in terms of search space exploitation and exploration, and allows faster convergence. We performed some experiments using our proposed approach, where results were promising. ...|$|R
40|$|P {{received}} signal power, watts Pt transmitter power, watts G {{transmitting antenna}} {{gain in the}} target direction G receiving antenna gain in the target direction ab bistatic radar cross-section, square meters D transmitter to target distance, meters: r receiver Lo target distance, meters pL (t) propagation loss over The transmitter to <b>target</b> <b>path</b> L (r) propagation loss over the receiver to <b>target</b> <b>path</b> L system loss A wavelength, meters U power density at the receiver, watts per square meterrj Ut power density at the target, watts per square meter unit vector {{in the direction of}} the reflected ray k unit vector {{in the direction of the}} transmitted ray St distance from the target to the point of observation [...] may include or exclude the receiver N unit vector normal to and outward from the prolate spheroidal surface P(xy,z) point on the prolate spheroidal surface B unit vector tangent to the circle formed by a plane intersecting the prolate spheroid norrnal to its axl [...] . ___Aocession Fcr f • unit vector normal to N and bTIS '. ...|$|E
40|$|This paper {{discusses}} {{genetic algorithms}} that can automatically generate test cases to test selected path. This algorithm takes a selected path {{as a target}} and executes sequences of operators iteratively for test cases to evolve. The evolved test case can lead the program execution to achieve the <b>target</b> <b>path.</b> An automatic pathoriented test data generation {{is not only a}} crucial problem but also a hot issue in the research area of software testing today...|$|E
40|$|It {{has been}} shown that the delay of a <b>target</b> <b>path</b> can be {{composed}} linearly of other path delays. If the later paths are robustly testable (with known delay values), the <b>target</b> <b>path</b> can then be validated through simple calculation. Yet, no decomposition process is available to find paths that satisfy the above property. In this paper, given a set of target critical paths, we propose a two-stage method to find a set of robust-testable paths (with smaller number than the original set). The first stage constructs a necessary subset for critical robust paths, and the second stage identifies remaining functional sensitizable segments and their corresponding composing robust paths. The experiments show that a large percentage (several benchmarks close to 100 %, 75 % on average) of critical paths can be covered for most circuits. All paths and coverage are verified to match the best possible results. The data also indicate that the remaining hard-totest (functional sensitizable) paths actually result from only a few tens of segments in the circuit (except for one circuit, s 35932). DfT technique can then be applied to these uncovered segments for full testability with small overheads. 1...|$|E
40|$|This paper {{begins with}} a {{description}} of the inflation targeting arrangements currently in place in the four above-mentioned countries and their performance records through mid- 1995 are reviewed. It is argued, however, that too little time has passed for conclusions to be drawn, so that tentative evaluations of inflation targeting need to be based on theoretical analysis and more generalized historical experiences. Accordingly, two alternative rationalizations are considered, one stemming from the literature on dynamic inconsistency and the other based on more pragmatic considerations. In addition, it is asked whether some other nominal magnitude might be preferable as a target variable and the issue of growth-rate versus growing-level <b>target</b> <b>paths</b> is addressed. ...|$|R
40|$|The {{capability}} of a robot to follow autonomously a person highly enhances its usability when humans and robots collaborate. In this paper {{we present a}} system for autonomous following of a walking person in outdoor environments while avoiding static and dynamic obstacles. The principal sensor is a 3 D LIDAR with a resolution of 59 x 29 points. We present a combination of 3 D features, motion detection and tracking with a sampling Bayesian filter which results in reliable person detection for a lowresolution 3 D-LIDAR. The method is implemented on an outdoor robot with car-like steering, which incorporates the <b>target’s</b> <b>path</b> into its own path planning around local obstacles. Experiments in outdoor areas validate the approach...|$|R
30|$|At {{the end of}} the walkthrough, {{the user}} is {{presented}} with a summary of the result: the user-populated target node and its confidence, other target nodes that have been populated in previous walkthroughs, and the opportunity to return to the Path Overview to pursue a new <b>target.</b> (The <b>Path</b> Overview is updated to give preference to unpopulated <b>target</b> nodes.) A <b>path</b> can be visited more than once, and a target node can be populated multiple times with potentially conflicting results. This capability should encourage the user to explore further paths to high confidence data for the target node.|$|R
