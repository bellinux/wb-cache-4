44|2|Public
25|$|Data Logic {{developed}} in 1975 <b>typesetting</b> <b>software</b> for the ND platform for A-Pressen in Sweden. ND {{decided to start}} a campaign to sell typesetting computers to Norwegian newspapers and developed along with Data Logic GMS-12, later renamed Nortext. The first client were Arbeiderbladet, Østlendingen and Dagbladet the following year, but sales were slow after that.|$|E
25|$|The OpenType font format {{includes}} {{features for}} associating multiple glyphs {{to a single}} character, used for ligature substitution. <b>Typesetting</b> <b>software</b> {{may or may not}} implement this feature, even if it is explicitly present in the font's metadata. XeTeX is a TeX typesetting engine designed {{to make the most of}} such advanced features. This type of substitution used to be needed mainly for typesetting Arabic texts, but ligature lookups and substitutions are being put into all kinds of Western Latin OpenType fonts. In OpenType, there are standard liga, historical hlig, contextual clig, discretionary dlig and required rlig ligatures. These can be enabled or disabled in CSS3 using font-feature-settings.|$|E
25|$|Some early {{examples}} of computer markup languages available outside {{the publishing industry}} {{can be found in}} typesetting tools on Unix systems such as troff and nroff. In these systems, formatting commands were inserted into the document text so that <b>typesetting</b> <b>software</b> could format the text according to the editor's specifications. It was a trial and error iterative process to get a document printed correctly. Availability of WYSIWYG ("what {{you see is what you}} get") publishing software supplanted much use of these languages among casual users, though serious publishing work still uses markup to specify the non-visual structure of texts, and WYSIWYG editors now usually save documents in a markup-language-based format.|$|E
50|$|The {{main purpose}} of Texinfo {{is to provide a}} way to easily <b>typeset</b> <b>software</b> manuals. Similar to the LaTeX syntax, all the normal {{features}} of a book, such as chapters, sections, cross references, tables and indices are available for use in documents. Using the various output generators that are available for Texinfo, it is possible to keep several documentation types up-to-date (such as on-line documentation provided via a Web site, and printed documentation, as generated using the TeX typesetting system) using only a single source file.|$|R
40|$|In {{an ideal}} world, {{software}} specifications are machine readable (can be parsed) {{much of the}} tedious verification tasks could be automated by tools. But even if the specification can be processed by one specifi tool it is often worthless to other tools {{not to mention that}} machine readable specifi cations are normally not easily read by humans. The first step to solve these obstacles is to develop and define a standard which allows communicate, meaning exchange semantical as well as <b>typesetting</b> information of <b>software</b> specifications between different tools and word processing systems including browsers. The Extensible Markup Language XML allows to represent semantical as well as formatting information of a document. Purpose {{of this paper is to}} propose a standard called OpenSpec based on XML. The OpenSpec standard is designed to communicate formal and semi-formal software specifications. Further, OpenSpec allows to have different "views" of the same document. The presented approach is not restricted to one particular type of specification notation but is intended to be acceptable to "all" approaches to formal and informal specifications. Special consideration is given to support tabular speci cations. We developed several software tools for parsing, writing, transforming, and type checking OpenSpec documents...|$|R
500|$|In the {{computer}} era, spacing between sentences is handled {{in several different}} ways by various software packages. [...] Some systems accept whatever the user types, while others attempt to alter the spacing, or use the user input {{as a method of}} detecting sentences. [...] Computer-based word processors, and <b>typesetting</b> <b>software</b> such as troff and TeX, allow users to arrange text in a manner previously only available to professional typesetters.|$|E
50|$|Most {{existing}} {{word processors}} and <b>typesetting</b> <b>software</b> cannot handle {{either of the}} above scenarios.|$|E
5000|$|... #Caption: Text typeset using LaTeX digital <b>typesetting</b> <b>software,</b> {{often used}} for {{academic}} papers and journals ...|$|E
50|$|Arbortext Advanced Print Publisher (APP, {{formerly}} Advent 3B2) is {{a commercial}} <b>typesetting</b> <b>software</b> application sold by Parametric Technology Corporation.|$|E
5000|$|In <b>typesetting</b> <b>software,</b> TeX Directory Structure (TDS) is a {{directory}} hierarchy for macros, fonts, {{and the other}} implementation-independent TeX system files. The top-level directories are ...|$|E
5000|$|In 1989, Donald Knuth {{published}} a paper recounting {{lessons from the}} development of his TeX <b>Typesetting</b> <b>software,</b> in which {{the benefits of the}} approach were mentioned: ...|$|E
50|$|The {{typesetting}} {{from this}} journal, including its mathematical formulae, {{was chosen by}} Donald Knuth as one of three examples of typesetting quality when he designed the TeX digital <b>typesetting</b> <b>software</b> from 1978.|$|E
50|$|Links are {{available}} to many mathematical software packages including OpenOffice.org Calc, Microsoft Excel, MATLAB, R, SageMath (which can also pull up Mathematica), Singular, Wolfram SystemModeler, and Origin. Mathematical equations can be exchanged with other computational or <b>typesetting</b> <b>software</b> via MathML.|$|E
5000|$|Philip Hazel is {{also known}} for his <b>typesetting</b> <b>software,</b> in {{particular}} [...] "Philip's Music Writer", as well as programs to turn a simple markup into a subset of DocBook XML {{for use in the}} Exim manual, and to produce PostScript from this XML.|$|E
5000|$|BibTeX is {{reference}} management {{software for}} formatting lists of references. The BibTeX tool is typically used {{together with the}} LaTeX document preparation system. Within the typesetting system, its name is styled as [...] The name is a portmanteau of the word bibliography {{and the name of}} the TeX <b>typesetting</b> <b>software.</b>|$|E
50|$|Data Logic {{developed}} in 1975 <b>typesetting</b> <b>software</b> for the ND platform for A-Pressen in Sweden. ND {{decided to start}} a campaign to sell typesetting computers to Norwegian newspapers and developed along with Data Logic GMS-12, later renamed Nortext. The first client were Arbeiderbladet, Østlendingen and Dagbladet the following year, but sales were slow after that.|$|E
50|$|The Scantext {{system had}} some {{features}} which present-day <b>typesetting</b> <b>software</b> {{would do well}} to emulate: autotabs in particular were a feature ahead of their time.Scangraphic featured both horizontal and vertical tabs which could be defined as a percentage of page size, it therefore being possible to create layouts which reconfigured themselves to new page sizes.|$|E
5000|$|The <b>typesetting</b> <b>software</b> TeX treats {{horizontal}} runs of whitespace as {{a single}} space, but uses a heuristic to recognize sentence endings—typesetting the spaces after them slightly wider than a normal space. This is the default for Tex, although the [...] "\frenchspacing" [...] TeX macro will disable this feature {{in favor of a}} word space between sentences.|$|E
50|$|Early minicomputer-based <b>typesetting</b> <b>software</b> {{introduced}} in the 1970s and early 1980s, such as Datalogics Pager, Penta, Atex, Miles 33, Xyvision, troff from Bell Labs, and IBM's Script product with CRT terminals, were better able to drive these electromechanical devices, and used text markup languages to describe type and other page formatting information. The descendants of these text markup languages include SGML, XML and HTML.|$|E
50|$|In the {{computer}} era, spacing between sentences is handled {{in several different}} ways by various software packages. Some systems accept whatever the user types, while others attempt to alter the spacing, or use the user input {{as a method of}} detecting sentences. Computer-based word processors, and <b>typesetting</b> <b>software</b> such as troff and TeX, allow users to arrange text in a manner previously only available to professional typesetters.|$|E
50|$|In digital typography, the New Typesetting System (NTS) is a {{discontinued}} reimplementation of the typesetting system TeX in Java. The specific aims of {{the project}} were to continue the tradition of Donald Knuth's TeX by providing a first-class <b>typesetting</b> <b>software</b> which is both portable and available free of charge. But whereas TeX is now frozen due to maximum stability, NTS was intended to remain flexible and extensible.|$|E
50|$|Page layout is the {{computation}} of {{the position}} of the paragraphs, tabs, sentences, words and letters of a text. This is done by desktop publishing software, <b>typesetting</b> <b>software</b> and web browser engines. These in turn include font layout and rendering engines, that calculate the correct position of glyphs, which can be a challenge with complex scripts. Images can also be embedded in the text.|$|E
50|$|Noteworthy <b>typesetting</b> <b>software</b> {{created for}} C/A/T include troff (1973), which was {{developed}} by Joe F. Ossanna at Bell Labs. Brian Kernighan later developed ditroff (typesetter independent troff) program which supported the C/A/T and other publishing systems. C/A/T was the workhorse of UNIX printing through the 1980s for shops that could not afford hot lead typography equipment or expensive and proprietary document typesetting systems. High resolution laser printing, now common in desktop publishing, was not yet available.|$|E
50|$|To {{expedite}} their work, Gerard and Sambles {{were sent}} to MIT, to work with Barnett for several months before his return to England, and published several papers with the MIT Cooperative Computing Laboratory as joint affiliation. These included two of the earliest papers that reported the production of built up mathematical formulas, constructed by symbolic calculation, and recorded using computer <b>typesetting</b> <b>software.</b> Gerard and Sambles went on to CERN {{to work on the}} mechanised detection of particle events.|$|E
5000|$|X-bar theory {{makes use}} of overbar {{notation}} to indicate differing levels of syntactic structure. Certain structures are represented by adding an overbar to the unit, as in [...] Due to difficulty in typesetting the overbar, the prime symbol is often used instead, as in X′. Contemporary <b>typesetting</b> <b>software,</b> such as LaTeX, has made typesetting overbars considerably simpler; both prime and overbar markers are accepted usages. Some variants of X-bar notation use a double-bar (or double-prime) to represent phrasal-level units.|$|E
5000|$|Éric Aubourg is a French {{astrophysicist}} at the Commissariat à l'Énergie Atomique and APC/Université Paris-Diderot. [...] He {{has made}} several published {{contributions to the}} field of Egyptology, including a dating of the Dendera zodiac, whose age was the center of a significant archaeological debate in the 1800s. It is also likely {{he is the author of}} MacScribe, a hieroglyph <b>typesetting</b> <b>software</b> for Macintosh, since it originated from the same department he collaborated with on the Dendera dating, and is attributed to someone with his name.|$|E
5000|$|Originally, X-bar theory used a bar over {{syntactic}} {{units to}} indicate bar-levels in syntactic structure, generally rendered as an overbar. While easy to write, the bar notation proved difficult to typeset, {{leading to the}} adoption of the prime symbol to indicate a bar. (Despite the lack of bar, the unit would still be read as [...] "X bar", as opposed to [...] "X prime".) With contemporary development of <b>typesetting</b> <b>software</b> such as LaTeX, typesetting bars is considerably simpler; nevertheless, both prime and bar markups are accepted usages.|$|E
50|$|C/A/T is {{a highly}} {{addressable}} phototypesetter with full optics control from computer-generated data. This precise control of optics and image position made the interface to computer programs reasonably simple. Data is normally transmitted to the C/A/T by paper tape. Some companies created electronic replacements for the paper tape interface to accommodate direct connection to computer systems. C/A/T has no page layout and pagination capability. It is only a high resolution printer that puts high-resolution character images onto a photographic media. Page layout {{is determined by the}} <b>typesetting</b> <b>software</b> used to generate the paper tape.|$|E
50|$|Some early {{examples}} of computer markup languages available outside {{the publishing industry}} {{can be found in}} typesetting tools on Unix systems such as troff and nroff. In these systems, formatting commands were inserted into the document text so that <b>typesetting</b> <b>software</b> could format the text according to the editor's specifications. It was a trial and error iterative process to get a document printed correctly. Availability of WYSIWYG ("what {{you see is what you}} get") publishing software supplanted much use of these languages among casual users, though serious publishing work still uses markup to specify the non-visual structure of texts, and WYSIWYG editors now usually save documents in a markup-language-based format.|$|E
5000|$|In 2010-era usage, DTP {{does not}} usually include digital {{tools such as}} TeX or troff, though both can easily be used on a modern desktop system and are {{standard}} with many Unix-like operating systems and readily available for other systems. The key difference between electronic <b>typesetting</b> <b>software</b> and DTP software is that DTP software is generally interactive and [...] "What you see onscreen is what you get" [...] (WYSIWYG) in design, while other electronic <b>typesetting</b> <b>software,</b> such as TeX, LaTeX and other variants, tend to operate in [...] "batch mode", requiring the user to enter the processing program's markup language (e.g., Hyper Text Markup Language or [...] "HTML") without immediate visualization of the finished product. This kind of [...] "workflow" [...] is less user-friendly than WYSIWYG, but more suitable for conference proceedings and scholarly articles as well as corporate newsletters or other applications where consistent, automated layout is important. In the 2010s, [...] interactive front-end components of TeX, such as TeXworks or LyX have produced [...] "what {{you see is what}} you mean" [...] (WYSIWYM) hybrids of DTP and batch processing. These hybrids are focused more on semantics than traditional DTP. There is some overlap between desktop publishing and what is known as Hypermedia publishing (i.e. Web design, Kiosk, CD-ROM). Many graphical HTML editors such as Microsoft FrontPage and Adobe Dreamweaver use a layout engine similar to a DTP program. However, some Web designers still prefer to write HTML without the assistance of a WYSIWYG editor, for greater control and ability to [...] "fine-tune" [...] the appearance and functionality. Another reason that some Web designers write in HTML is that WYSIWYG editors often result in excessive lines of code, leading to [...] "code bloat" [...] that can make the pages hard to troubleshoot.|$|E
5000|$|TeX is {{an example}} of a {{computer}} typesetting system that makes use of ligatures automatically. The Computer Modern Roman typeface provided with TeX includes the five common ligatures ff, fi, fl, ffi, and ffl. When TeX finds these combinations in a text, it substitutes the appropriate ligature, unless overridden by the typesetter. Opinion is divided over whether it is the job of writers or typesetters to decide where to use ligatures.The OpenType font format includes features for associating multiple glyphs to a single character, used for ligature substitution. <b>Typesetting</b> <b>software</b> may or may not implement this feature, even if it is explicitly present in the font's metadata. XeTeX is a TeX typesetting engine designed to make the most of such advanced features. This type of substitution used to be needed mainly for typesetting Arabic texts, but ligature lookups and substitutions are being put into all kinds of Western Latin OpenType fonts. In OpenType, there are standard , historical , contextual , discretionary [...] and required [...] ligatures. These can be enabled in CSS3 using [...]|$|E
40|$|Colophon: The thesis {{was created}} using LATEX 2 ε and edited in Texmaker. The <b>typesetting</b> <b>software</b> was the TEX Live distribution. The text {{is set in}} Palatino, the plots were {{constructed}} by pgf/TikZ and the figures were constructed by pgf/TikZ, Incscape and ParaView. Cover: Photo showing the strongly heterogeneous mesoscale structure of concrete...|$|E
40|$|Note: (ISCII- 91 or IS 13194 : 1991 is {{the current}} National Standard used for Indian Languages) 1. This {{document}} is a soft copy of some extracts of the original document published by Bureau of Indian Standards. The tabulation and Roman transliteration is not {{identical to the original}} document due to differences in the <b>typesetting</b> <b>software</b> used earlier. The purpose is to convey the information only and no reference should be made to this soft copy as a standard document. Annex G and H are not included in this soft copy. 2. The original document is available from the following address (Group LTD- 37...|$|E
40|$|This report {{describes}} {{the results of}} a study in the field of theoretical computer science. It was written as my “doctoraalscriptie ” (Master’s thesis) for my study of Computer Science at Leiden University. The graduation tutor from the Department of Computer Science was J. Engelfriet, PhD. This report was written using the LATEX <b>typesetting</b> <b>software</b> on a computer running Linux and the KDE desktop environment. I would like to thank Joost Engelfriet for his constant advice and his help in conducting this study. My parents have always supported me in many ways. And, last but certainly not least, thanks to Ellen for the title page she designed and for her love and support...|$|E
40|$|Ecologists {{traditionally}} {{share ideas}} primarily via peer-reviewed publications. Not that {{other ways of}} sharing ideas—conversations, conference presentations, invited seminars, etc. —matter less. But traditionally in ecology, they often matter only insofar as they lead, directly or indirectly, to peer-reviewed papers. Peer-reviewed papers are of undoubted value, but they have limitations {{as a means of}} sharing ideas. In particular, they're slow— it typically takes months to write a paper, and then further months for it to go through the review process (often more than once) and get published. And, technical advances such as online manuscript handling systems and automated <b>typesetting</b> <b>software</b> probably can't speed the publication process much further. Most of the time a typical paper spends in peer review is spen...|$|E
40|$|This paper {{describes}} an OCR system for printed text documents in Kannada, a South Indian language. The input {{to the system}} would be the scanned image of a page of text and the output is a machine editable file compatible with most <b>typesetting</b> <b>software.</b> The system first extractswords from the document image and then segments the words into sub-character level pieces. The segmentation algorithm is motivated by {{the structure of the}} script. We propose a novel set of features for the recognition problem which are computationally simple to extract. The final recognition is achieved by employing a number of 2 -class classifiers based on the Support Vector Machine (SVM) method. The recognition is independent of the font and size of the printed text and the system is seen to deliver reasonable performance...|$|E
