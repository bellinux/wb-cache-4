7|56|Public
50|$|Double entry (or more) {{may also}} be {{leveraged}} to minimize transcription or <b>transposition</b> <b>error,</b> but {{at the cost of}} a reduced number of entries per unit time.|$|E
5000|$|Second place - Thomas Snyder, Palo Alto, CA ($4,000 prize) in 4:14 {{with three}} mistakes. Snyder {{had made a}} <b>transposition</b> <b>error</b> in his grid costing him the title.|$|E
5000|$|Associative {{chaining}} theory {{states that}} every item in a list {{is linked to}} its forward and backward neighbors, with forward links being stronger than backward links, and links to closer neighbors being stronger than links to farther neighbors. For example, associative chaining predicts the tendencies of transposition errors, which occur most often with items in nearby positions. An example of a <b>transposition</b> <b>error</b> would be recalling the sequence [...] "apple, orange, banana" [...] instead of [...] "apple, banana, orange." ...|$|E
50|$|<b>Transposition</b> <b>errors</b> are {{commonly}} mistaken for transcription errors, {{but they should}} not be confused. As the name suggest, <b>transposition</b> <b>errors</b> occur when characters have “transposed”—that is, they have switched places. <b>Transposition</b> <b>errors</b> are almost always human in origin. The most common way for characters to be transposed is when a user is touch typing at a speed that makes them input a later character before an earlier one.|$|R
5000|$|... #Subtitle level 2: Solving {{transcription}} and <b>transposition</b> <b>errors</b> ...|$|R
50|$|The {{strengths}} of the algorithm are that it detects all transliteration and <b>transposition</b> <b>errors,</b> and additionally most twin, twin jump, jump <b>transposition</b> and phonetic <b>errors.</b>|$|R
5000|$|Misspellings {{may be due}} {{to either}} typing errors (e.g. the <b>transposition</b> <b>error</b> teh for the), or lack of {{knowledge}} of the correct spelling. Whether or not a word is misspelled may depend on context, {{as is the case with}} American / British English distinctions. Misspelling can also be a matter of opinion when variant spellings are accepted by some and not by others. For example, [...] "miniscule" [...] (for [...] "minuscule") is a misspelling to many, and yet it is listed as an acceptable variant in some dictionaries.|$|E
5000|$|Although there aren't any {{official}} conclusions to {{the origin of}} the name, it is believed that the road was part of the property owned by a Mr Alexander, and 'Rednaxela' is an understandable transposition of the English name 'Alexander', since the Chinese language is written right to left. Most of the naming errors in Hong Kong are a result of incorrect or inaccurate translations or transliterations, so some believe the explanation of this unique example of right-to-left <b>transposition</b> <b>error</b> in Hong Kong under colonial bureaucrats inconceivable. Another explanation is that the name is linked to abolitionist Robert Alexander Young, who was known to have used the name [...] "Rednaxela" [...] in his 1829 work Ethiopian Manifesto. Whatever the source of the name, Chinese transliteration followed suit and was adopted by the neighbourhood, and the government never made any further alterations.|$|E
40|$|Models of {{short-term}} memory for sequential information rely on item-level, feature-based descriptions {{to account for}} errors in serial recall. Transposition errors within alternating similar/dissimilar letter sequences derive from interactions between overlapping features. However, in two experiments, we demonstrated that {{the characteristics of the}} sequence are what determine the fates of items, rather than the properties ascribed to the items themselves. Performance in alternating sequences is determined by the way that the sequences themselves induce particular prosodic rehearsal patterns, and not {{by the nature of the}} items per se. In a serial recall task, the shapes of the canonical “saw-tooth” serial position curves and <b>transposition</b> <b>error</b> probabilities at successive input–output distances were modulated by subvocal rehearsal strategies, despite all item-based parameters being held constant. We replicated this finding using nonalternating lists, thus demonstrating that transpositions are substantially influenced by prosodic features—such as stress—that emerge during subvocal rehearsal. ...|$|E
5000|$|Row Sum {{contains}} {{numbers of}} d-transpositions, therefore {{the proportion of}} non-detectable <b>transposition</b> <b>errors</b> is ...|$|R
5000|$|... (2) We {{still have}} to prove, that UPC-A can detect 90% of <b>transposition</b> <b>errors.</b>|$|R
40|$|Molecular {{communications}} between mobile nano-robots will likely yield bit <b>transposition</b> <b>errors.</b> In such a scenario, {{it is important}} to design and test a new family of appropriate forward-error-correction codes. In this paper, we first construct a proof-of-concept robot to demonstrate how <b>transposition</b> <b>errors</b> arise. We then review state-of-the-art research in positional-distance codes and implement such codes onto the robot to achieve reliable mobile molecular communications. In order to imitate a large number of <b>transposition</b> <b>errors,</b> we model the mobile molecular communication channel as a double random walk channel. The results show that the positional-distance codes can achieve a superior performance over classical Hamming-distance codes and the performance is not sensitive to the initial starting position of the robots. ...|$|R
40|$|Performance {{in working}} memory (WM) tasks {{depends on the}} {{capacity}} for storing objects and on the allocation of attention to these objects. Here, we explored how capacity models need to be augmented {{to account for the}} benefit of focusing attention on the target of recall. Participants encoded six colored disks (Experiment 1) or a set of one to eight colored disks (Experiment 2) and were cued to recall the color of a target on a color wheel. In the no-delay condition, the recall-cue was presented after a 1, 000 -ms retention interval, and participants could report the retrieved color immediately. In the delay condition, the recall-cue was presented {{at the same time as}} in the no-delay condition, but the opportunity to report the color was delayed. During this delay, participants could focus attention exclusively on the target. Responses deviated less from the target's color in the delay than in the no-delay condition. Mixture modeling assigned this benefit to a reduction in guessing (Experiments 1 and 2) and transposition errors (Experiment 2). We tested several computational models implementing flexible or discrete capacity allocation, aiming to explain both the effect of set size, reflecting the limited capacity of WM, and the effect of delay, reflecting the role of attention to WM representations. Both models fit the data better when a spatially graded source of <b>transposition</b> <b>error</b> is added to its assumptions. The benefits of focusing attention could be explained by allocating to this object a higher proportion of the capacity to represent color...|$|E
5000|$|Playing the notated melody lines, accompaniment {{parts and}} bass lines with correct notes (avoiding <b>transposition</b> <b>errors,</b> {{incorrect}} accidentals, wrong notes, and so on); ...|$|R
5000|$|UPC-A {{can detect}} 90% of <b>transposition</b> <b>errors.</b> Specifically, if {{and only if}} the {{difference}} between two adjacent digits is 5, the UPC-A can't detect their transposition.|$|R
50|$|More {{complicated}} algorithms {{include the}} Luhn algorithm (1954), which captures 98% of single digit <b>transposition</b> <b>errors</b> (it does not detect 90 ↔ 09) and the still more sophisticated Verhoeff algorithm (1969), which catches all single digit substitution and <b>transposition</b> <b>errors,</b> and many (but not all) more complex errors. Similar is another abstract algebra-based method, the Damm algorithm (2004), that too detects all single-digit errors and all adjacent <b>transposition</b> <b>errors.</b> These three methods use a single check digit and will therefore fail to capture around 10% of more complex errors. To reduce this failure rate, {{it is necessary}} to use more than one check digit (for example, the modulo 97 check referred to below, which uses two check digits - for the algorithm, see International Bank Account Number) and/or to use a wider range of characters in the check digit, for example letters plus numbers.|$|R
2500|$|All {{or nearly}} all single (local) <b>transposition</b> <b>errors</b> (the <b>transposition</b> of two single characters, either {{adjacent}} or with one character between them, for example 12354 or 12543 for 12345) ...|$|R
50|$|In error detection, the Damm {{algorithm}} is a check digit algorithm that detects all single-digit errors and all adjacent <b>transposition</b> <b>errors.</b> It was presented by H. Michael Damm in 2004.|$|R
50|$|Mathematical <b>transposition</b> <b>errors</b> {{are easily}} identifiable. Add up {{the numbers that}} make up the {{difference}} and the resultant number will always be evenly divisible by nine. For example, (72-27)/9 = 5.|$|R
5000|$|In {{terms of}} weights, this is 371 371 371. This {{allows one to}} catch any single-digit error (incorrectly {{inputting}} one digit), together with most <b>transposition</b> <b>errors.</b> 1, 3, and 7 are used because they (together with 9) are coprime to 10; using a coefficient that is divisible by 2 or 5 would lose information (because [...] ), and thus would not catch some substitution errors. These do not catch transpositions of two digits that differ by 5 (0 and 5, 1 and 6, 2 and 7, 3 and 8, 4 and 9), but captures other <b>transposition</b> <b>errors.</b>|$|R
50|$|A {{very simple}} check digit method {{would be to}} take {{the sum of all}} digits (digital sum) modulo 10. This would catch any single-digit error, as such an error would always change the sum, but does not catch any <b>transposition</b> <b>errors</b> (switching two digits) as re-ordering does not change the sum.|$|R
5000|$|The Verhoeff {{algorithm}} is a checksum formula for error detection {{developed by the}} Dutch mathematician Jacobus Verhoeff and {{was first published in}} 1969. [...] It was the first decimal check digit algorithm which detects all single-digit <b>errors,</b> and all <b>transposition</b> <b>errors</b> involving two adjacent digits, which was at the time thought impossible with such a code.|$|R
40|$|An {{investigation}} of error patterns in author names {{based on data}} from a survey of library catalog searches. Position of spelling errors was noted and related to length of name. Probability of a name having a spelling error was found to increase with length of name. Nearly half of the spelling mistakes were replacement errors; following, in order of decreasing frequency, were omission, addition, and <b>transposition</b> <b>errors...</b>|$|R
50|$|Because of this, the New Automatic Proofreader was {{introduced}} in February 1986. This version used a more sophisticated checksum algorithm that could catch <b>transposition</b> <b>errors.</b> It also took spacing into account if they were within quotes (where they were generally significant to the program's operation), while ignoring them outside of quotes (where they were not relevant). Also, the decimal display of the checksum was replaced with a hexadecimal value.|$|R
50|$|The {{check digit}} is an {{additional}} digit, used to verify that a barcode has been scanned correctly. It is computed modulo 10, where the weights in the checksum calculation alternate 3 and 1. In particular, since the weights are relatively prime to 10, the EAN-13 system will detect all single digit errors. It also recognizes 90% of <b>transposition</b> <b>errors</b> (all cases, where the difference between adjacent digits is not 5).|$|R
5000|$|The [...] code instead uses modulo 11, {{which is}} prime, {{and all the}} number {{positions}} have different weights 1, 2, ... 10. This system thus detects all single digit substitution and <b>transposition</b> <b>errors</b> (including jump <b>transpositions),</b> but {{at the cost of}} the check digit possibly being 10, represented by [...] "X". (An alternative is simply to avoid using the serial numbers which result in an [...] "X" [...] check digit.) [...] instead uses the GS1 algorithm used in EAN numbers.|$|R
50|$|Transcription and <b>transposition</b> <b>errors</b> {{are found}} everywhere, even in {{professional}} articles in newspapers or books. They can be missed by editors quite easily, {{just as they}} can be created quite easily. The most obvious cure for the errors is for the user to watch the screen when they type, and to proofread. If the entry is occurring in data capture forms, databases or subscription forms, the designer of the forms or the database administrator should use input masks or validation rules.|$|R
50|$|The third {{iteration}} in 2008 was {{the first}} to be offered in both Ultimate (unlabeled) and Professional (labeled) versions. This USB-only keyboard also offered six-key rollover capability (the maximum for a conventional USB HID keyboard), an internal two-port USB hub and came with a glossy surface. Both 104-key (ANSI) and 105-key layouts (ISO) were offered. This version was not without its problems, however, as it became known that key <b>transposition</b> <b>errors</b> could occur at high typing speeds. In addition, interoperability issues related to the USB hub and lack of power were noticed with some systems.|$|R
50|$|The initial {{version of}} the Proofreader, however, had several drawbacks. It was loaded into the {{cassette}} buffer (memory area), which was overwritten whenever a program was loaded or saved using the Datassette. This caused difficulties if a cassette user had to resume work on a partially completed listing. A complicated method had {{to be used to}} get both the Proofreader and the program listing in memory at the same time. Also, the checksum method used was relatively rudimentary, and did not catch <b>transposition</b> <b>errors,</b> nor did it take whitespace into account.|$|R
40|$|AbstractDoes visual {{short-term}} memory (VSTM) depend on depth, {{as it might}} be if information was stored in more than one depth layer? Depth is critical in natural viewing and might be expected to affect retention, but whether this is so is currently unknown. Cued partial reports of letter arrays (Sperling, 1960) were measured up to 700 ms after display termination. Adding stereoscopic depth hardly affected VSTM capacity or decay inferred from total errors. The pattern of <b>transposition</b> <b>errors</b> (letters reported from an uncued row) was almost independent of depth and cue delay. We conclude that VSTM is effectively two-dimensional...|$|R
40|$|Abstract. We {{propose a}} way to {{increase}} the usability of password authentication systems by compensating for <b>transposition</b> and substitution <b>errors.</b> We show how to correct for these errors with low false positive rates (i. e., low probability that an arbitrary string will be accepted as the password for authentication). Thus our techniques increase usability with provably little loss of security. In particular, we propose applying a single password-corrective hash function to each entered password attempt. The key property of the hash function is that two strings differing by a single data entry error be likely to be hashed to the same key, while more substantially differing strings are hashed to different keys. We develop precise analytical formulae for the precision/recall tradeoffs {{for a variety of}} corrective hash functions. We evaluate these methods at parameter values reflecting common classes of keys/passwords. Finally, we evaluate these schemes using a popular crack-list (dictionary) of 680, 000 common words. We show that we can correct for all user <b>transposition</b> <b>errors</b> while reducing the computational cost of a crack attack by only 13 %. ...|$|R
500|$|The Bach scholar Andreas Glöckner {{argued in}} 1988 that the cantata {{may have been}} {{composed}} in Arnstadt. The scholar [...] identified in 2010 a remarkable acrostic in the concluding four movements (which he described in the 2010 Bach-Jahrbuch, {{the journal of the}} Neue Bachgesellschaft). Adjusting for <b>transposition</b> <b>errors</b> by the copyist, the initial letters should spell DOKTOR CONRAD MECKBACH and plausibly therefore the work was composed to mark this Mühlhausen councillor's 70th birthday in April 1707. On this basis the cantata may date from Bach's time in Arnstadt. Possibly the cantata was heard a few weeks later after the end of Lent, and thus it may have formed a test-piece for the Mühlhausen appointment, composed in Arnstadt with Bach's supporter Meckbach in mind.|$|R
50|$|An {{imperfect}} anagram letter bank algorithm, {{could be}} used to correct spelling mistakes, overcome <b>transposition,</b> dyslexic <b>errors</b> and double letter errors. Combined with other algorithms such as soundex, metaphone and Levenshtein distance, it could make a very powerful did you mean response to search engine queries.|$|R
40|$|Two {{experiments}} investigated {{whether and}} how the learning of spellings by French third graders is influenced by two graphotactic patterns: consonants cannot double in word-initial position (Experiment 1) and consonants cannot double after single consonants (Experiment 2). Children silently read meaningful texts that contained three types of novel spellings: no doublet (e. g., mupile, guprane), doublet in a legal position (e. g., muppile, gupprane), and doublet in an illegal position (e. g., mmupile, guprrane). Orthographic learning was assessed with a task of spelling to dictation. In both experiments, children recalled items without doublets better than items with doublets. In Experiment 1, children recalled spellings with a doublet in illegal word-initial position better than spellings with a doublet in legal word-medial position, and almost all misspellings involved the omission of the doublet. The fact that the graphotactic violation in an item like mmupile was in the salient initial position may explain why children often remembered both the presence and {{the position of the}} doublet. In Experiment 2, children recalled non-words with a doublet before a single consonant (legal, e. g., gupprane) better than those with a doublet after a single consonant (illegal, e. g., guprrane). Omission of the doublet was the most frequent error for both types of items. Children also made some <b>transposition</b> <b>errors</b> on items with a doublet after a single consonant, recalling for example gupprane instead of guprrane. These results suggest that, when a doublet is in the hard-to-remember medial position, children sometimes remember that an item contains a doublet but not which letter is doubled. Their knowledge that double consonants can occur before but not after single consonants leads to <b>transposition</b> <b>errors</b> on items like guprrane. These results shed new light on the conditions under which children use general knowledge about the graphotactic patterns of their writing system to reconstruct spellings...|$|R
40|$|Abstract. This study {{examined}} the influence of first language (LI) orthography on bilingual children's spelling performance in their second language (L 2), English. The subtests of spelling and letter-word identification from the Woodcock Proficiency Battery were administered {{to a sample of}} 285 six-year-olds in Singapore. All children received literacy instruction in English through the "look-say " method. Analyses of covariance showed a statistically significant effect of LI on conventional spelling but not on phonological spelling, controlling for reading proficiency. The Chinese (morphosyllabic) group not only scored higher than the Malay (alphabetic) and Tamil (syllabic) groups overall, but also made more real-word substitution and <b>transposition</b> <b>errors.</b> The results are discussed in terms of the influence of LI orthographic depth on spelling, and how learning disability specialists can uti lize the information while evaluating the spelling/literacy skills o...|$|R
40|$|This paper evaluates two hypotheses: (a) that <b>transposition</b> <b>errors</b> made in {{the recall}} of letter strings occur as a {{by-product}} of acoustic confusion errors and do not represent the loss of order information, and (b) that order and item information are independently retained in short-term memory. An experiment was conducted in which four-consonant strings containing exactly zero or two acoustically confusable items were recalled in order after retention intervals of 3, 8, or 18 intervening digits, all characters being successively presented {{at a rate of}} 400 msec per item and read aloud by the subject. An analysis of errors in relation to intra- and extrastimulus sources of acoustic confusion, retention interval, and serial position produced results that refute hypothesis (a) and support hypothesis (b). The implications of the present results for an adequate theory of the short-term retention of ordered strings are indicated...|$|R
