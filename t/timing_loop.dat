18|70|Public
5000|$|... #Caption: <b>Timing</b> <b>Loop.</b> Switch A {{should have}} {{remained}} in holdover after losing the reference ...|$|E
5000|$|A <b>timing</b> <b>loop</b> {{occurs when}} network {{elements}} in a network are each deriving their timing from other network elements, without any of them being a [...] "master" [...] timing source. This network loop will eventually see its own timing [...] "float away" [...] from any external networks, causing mysterious bit errors—and ultimately, in the worst cases, massive loss of traffic. The source {{of these kinds of}} errors can be hard to diagnose. In general, a network that has been properly configured should never find itself in a <b>timing</b> <b>loop,</b> but some classes of silent failures could nevertheless cause this issue.|$|E
5000|$|A NOP {{instruction}} {{might be}} considered to be redundant code that has been explicitly inserted to pad out the instruction stream or introduce a time delay, for example to create a <b>timing</b> <b>loop</b> by [...] "wasting time". Identifiers that are declared, but never referenced, are termed redundant declarations.|$|E
40|$|Abstract—This paper {{examines}} synchronization {{of computer}} clocks connected via a data network and proposes a skewless algorithm to synchronize them. Unlike current solutions, which either estimate and compensate the frequency difference (skew) among clocks or introduce offset corrections that can generate jitter {{and possibly even}} backward jumps, our algorithm achieves synchronization without these problems. We first analyze the convergence property of the algorithm and provide necessary and sufficient conditions on the parameters to guarantee syn-chronization. We then implement our solution on a cluster of IBM BladeCenter servers running Linux and experimentally study its performance. In particular, through both analytical and experimental results, we show that our algorithm can converge even {{in the presence of}} <b>timing</b> <b>loops.</b> This marks a clear contrast with current standards such as NTP and PTP, where <b>timing</b> <b>loops</b> are specifically avoided. Furthermore, <b>timing</b> <b>loops</b> can even be beneficial in our scheme. For example, it is demonstrated that highly connected subnetworks can collectively outperform individual clients when the time source has large jitter. I...|$|R
50|$|The 8088 {{could be}} {{upgraded}} to the faster NEC V20 chip. This gave about 10-15% speed improvement, but required a two-byte {{change to the}} system's ROMS to fix two <b>timing</b> <b>loops.</b>|$|R
40|$|This paper {{examines}} synchronization {{of computer}} clocks connected via a data network and proposes a skewless algorithm to synchronize them. Unlike existing solutions, which either estimate and compensate the frequency difference (skew) among clocks or introduce offset corrections that can generate jitter {{and possibly even}} backward jumps, our algorithm achieves synchronization without these problems. We first analyze the convergence property of the algorithm and provide necessary and sufficient conditions on the parameters to guarantee synchronization. We then implement our solution on a cluster of IBM BladeCenter servers running Linux and study its performance. In particular, both analytically and experimentally, we show that our algorithm can converge {{in the presence of}} <b>timing</b> <b>loops.</b> This marks a clear contrast with current standards such as NTP and PTP, where <b>timing</b> <b>loops</b> are specifically avoided. Furthermore, <b>timing</b> <b>loops</b> can even be beneficial in our scheme. For example, it is demonstrated that highly connected subnetworks can collectively outperform individual clients when the time source has large jitter. It is also experimentally demonstrated that our algorithm outperforms other well-established software-based solutions such as the NTPv 4 and IBM Coordinated Cluster Time (IBM CCT). Comment: to appear in ICNP 1...|$|R
50|$|A <b>timing</b> <b>loop</b> is in bad {{synchronization}} {{when the}} clock signal has closed itself, {{but there is}} no clock, either master or slave, that would autonomously generate a non-deficient clock signal. This situation can be caused by a fault affecting an NE {{in such a way that}} it has been left without a reference clock, and therefore it has chosen an alternative synchronization: a signal that has turned out to be the same signal, returning by another route. A synchronization loop is a completely unstable situation that may provoke an immediate collapse of part of the network within the loop.|$|E
5000|$|BogoMips are Linus's own invention. The linux kernel version 0.99.11 (dated 11 July 1993) {{needed a}} <b>timing</b> <b>loop</b> (the time {{is too short}} and/or needs to be too exact for a non-busy-loop method of waiting), which must be {{calibrated}} to the processor speed of the machine. Hence, the kernel measures at boot time how fast {{a certain kind of}} busy loop runs on a computer. [...] "Bogo" [...] comes from [...] "bogus", i.e, something which is a fake. Hence, the BogoMips value gives some indication of the processor speed, but it is way too unscientific to be called anything but BogoMips.|$|E
50|$|Qualifying for Race 19 {{was held}} on Sunday morning and {{consisted}} of a single 20-minute session. The top three qualifiers {{were the same as}} in Race 18, with Mostert taking his second pole position of the weekend ahead of Van Gisbergen and Whincup. Lowndes qualified fourth fastest ahead of his 600th championship race start, while Garry Rogers Motorsport locked out the third row with McLaughlin ahead of James Moffat. Courtney triggered the kerb sensor, a <b>timing</b> <b>loop</b> used to stop drivers exceeding the track limits, at Turn 5 on his final lap and his time was deleted as a result, leaving him to start twelfth.|$|E
50|$|Printed output on a Teletype Model 33 ASR was {{controlled}} by a single pole relay. A subroutine would convert the LINC character codes into ASCII and use <b>timing</b> <b>loops</b> to toggle the relay on and off, generating the correct 8-bit output to control the Teletype printer.|$|R
40|$|The {{advent of}} iteratively decodable codes has allowed a {{decrease}} in tolerable signal-to-noise ratios (SNRs) in magnetic recording systems, which typically translates into {{an increase in the}} recording densities. However, at such low SNRs, conventional <b>timing</b> recovery <b>loops</b> suffer from frequent cycle slips. Typical <b>timing</b> recovery <b>loops</b> in magnetic recording applications perform data detection, timing error detection, and loop filtering in a sequential manner. This sequence of operations in the <b>timing</b> recovery <b>loop</b> performs well if the timing error is {{a small fraction of the}} bit interval. However, in the cycle-slip regions, the timing error is comparable to the bit interval, and the loop fails. In this paper, we represent the timing error in magnetic recording systems by using a Markov model that does not confine the timing error to only small fractions of the bit interval. By utilizing such a model, we give a trellis representation of the timing error process. The trellis representation permits the formulations of two optimal baud-rate <b>timing</b> recovery <b>loops,</b> according to two optimality criteria. We prove that both optimality criteria lead to solutions similar to the classical first-order phase-locked loop. The new loops do not perform data detection, timing error detection, and loop filtering in a sequential manner. Instead, the loops perform data detection and timing error detection jointly on a trellis, without the need for a loop filter. Simulation results show that the new <b>timing</b> recovery <b>loops</b> outperform the standard second-order baud-rate Mueller and Müller phase-locked loop with fine-tuned loop parameters. This performance gain is substantial if the timing error process is extremely noisy or if there is residual frequency offset resulting from inaccurate acquisition from the sector preamble on a disk drive. Index Terms—Intersymbol interference, phase-locked <b>loop,</b> <b>timing</b> recovery, trellis. I...|$|R
50|$|Due to the CoCo's design, the MPU {{encounters}} no wait {{states in}} normal operation. This means that precise software controlled <b>timing</b> <b>loops</b> are easily implemented. This is important, since the CoCo has no specialized hardware for any I/O. All I/O operations, such as cassette reading and writing, serial I/O, scanning the keyboard, {{and reading the}} position of the joysticks, must be done entirely in software. This reduces hardware cost, but reduces system performance as the MPU is unavailable during these operations.|$|R
50|$|This {{track is}} {{considered}} {{to be one of the}} most unforgiving R/C tracks in the world with a very fast and narrow driving line. The track's nickname, 'The Fort', has been earned over many years of battle with drivers. The 30-year-old galvanized steel 'boards' make a loud bang exaggerating every hit, but yielding little. In the late 90s, plastic guards were added to many of the most destructive corners in an effort to tame the track. If a car is on line through the large sweeper onto the straight your car will disappear briefly because of the concrete curbs that create the island. The chicane in front of the driver stand, 'aka Dead Mans Curve', is one of the toughest spots on the track as drivers try to negotiate this tight area without lifting. The dots (plow disks) on the carousel were recently tamed in 2005, when they were covered by a plastic loop. The start-finish lap <b>timing</b> <b>loop</b> is located just before the pits, requiring drivers to make almost a whole lap before starting their qualifying run. This makes the 5-minute qualifiers a battle between power and fuel mileage. Some drivers will make a pit stop during qualifying. Before the 2005 event new asphalt was laid, due to damage by Hurricane Charley, and for the first time Mike Swauger and Michael Salven were able to complete 26 laps during qualifying. In 2008, live scoring over the internet was added, to allow people from around the world to view the races in real time. In 2009, live video coverage and audio of the race announcers was added to the site without a fee. Thanks to good weather and lots of traction compound testing during the summer, DJ Apolaro was able to set the first 24 lap qualifier in a sedan and Mike Swauger turned the first 27 lap qualifier with a 1/8 scale car. Paolo Morganti would set a new track record for the sedan at 24 laps in 5:11.71 and Mike Swauger 27 laps in 5:10.97 with a 1/8 scale car.|$|E
40|$|Full {{hardware}} documentation {{is provided}} for the circuit card implementing the Loran-C <b>timing</b> <b>loop,</b> and the receiver event-mark and re-track functions. This documentation is to be combined with overall receiver drawings to form the as-built record for this device. Computer software to support this module is integrated with {{the remainder of the}} receiver software, in the LORPROM program...|$|E
40|$|Abstract- An {{effective}} method for joint timing and channel estimation for receive diversity systems in a frequency-flat Rayleigh fading environment is presented. We implement non-synchronous timing recovery using Gardner’s timing error detector, whose insensitivity to phase errors allows for timing recovery prior to pilot symbol based channel estimation. By employing a polyphase filter {{bank in the}} <b>timing</b> <b>loop,</b> {{we are able to}} simultaneously carry out matched filtering and data interpolation, thus eliminating the need for a separate interpolation filter. In addition, selection diversity combining is used to select the input to the <b>timing</b> <b>loop,</b> thus improving the reliability of the signal used for timing recov-ery. Pilot assisted channel estimation is performed on the recovered data strobes. For normalized Doppler frequency of 0. 01 the system’s bit error rate (BER) performance is within 1 dB from the ideal timing and channel estimation error bound, with an additional drop of 1. 5 dB for a non-optimum channel interpolator. In deep fades, the receiver timing is held fixed. We show that the receiver maintains timing lock over such fades up to a normalized timing bandwidth of 1 × 10 − 4 for normalized Doppler frequency up to 0. 05...|$|E
50|$|Mark Lesser, {{a circuit}} design {{engineer}} at Rockwell International, {{jumped at the}} opportunity to write the software for Mattel Auto Race. First, Mark had to redesign an existing calculator chip to include a display driver multiplexing scheme and a special sound driver for a piezo-ceramic speaker. Mark then proceeded to write the program in assembly language, challenged by making it fit into the 512 bytes of ROM allowed by the chip. There was no sound processing hardware, so the sounds were produced by toggling the speaker in embedded <b>timing</b> <b>loops</b> from within the program itself.|$|R
40|$|International Telemetering Conference Proceedings / October 10 - 12, 1972 / International Hotel, Los Angeles, CaliforniaConvolutional Coding with Viterbi Decoding, using a rate 1 / 2 {{constraint}} length 7 code, {{provides a}} 5 dB improvement in power-limited satellite communication if care is taken with tracking loops. Use with FDMA typically requires ambiguity resolution and differential encoding-decoding with one decoder and one demodulator per access. Time-sharing of one demodulator and decoder among several accesses is possible with TDMA if an aggregate rate buffer is provided and if control and <b>timing</b> <b>loops</b> are digitized, stored, and updated once per frame. A possible system is outlined...|$|R
50|$|In general, VDM {{and similar}} {{technologies}} do not satisfactorily run most older DOS games on today's computers. Emulation is only {{provided for the}} most basic peripherals, often implemented incompletely. For example, sound emulation in NTVDM is very limited. NT-family versions of Windows only update the real screen a few times per second when a DOS program writes to it, {{and they do not}} emulate higher resolution graphics modes. Because software mostly runs native at the speed of the host CPU, all <b>timing</b> <b>loops</b> will expire prematurely. This either makes a game run much too fast or causes the software not even to notice the emulated hardware peripherals, because it does not wait long enough for an answer.|$|R
40|$|In {{this article}} we propose a {{complete}} solution for the so-called Inner Receiver of an OFDM-WLAN system based on the IEEE 802. 11 a standard. Our work has been divided into two parts. In this Part – I we concentrate our investigations on three key components forming the Inner Receiver namely, the Synchronizer, the Channel Estimator and the Digital <b>Timing</b> <b>Loop.</b> The main goal is the joint optimization of the signal processing algorithms along with the implementation friendly VLSI architecture required for these three key components {{in order to reduce}} power, area and latency, without compromising the performance excessively. We provide both the mathematical details and extensive computer simulations to validate our proposals...|$|E
40|$|Abstract — Design and {{analysis}} of low complexity timing error detectors (TEDs) for quasi-orthogonal space-time block coding systems are presented. The detectors operate on data symbols and approximate decision variables, producing timing error mea-surement robust to channel fading. In addition to the estimator S-curve, we obtain the estimation error variance and TED SNR, with the analysis carried out under the assumptions of perfect data and channel knowledge at the receiver. Simulations are {{used to examine the}} effects of decision errors on the detector characteristics, and to evaluate the overall system performance, where the proposed TEDs are incorporated into the receiver <b>timing</b> <b>loop.</b> Receivers with perfect channel knowledge and pilot-based channel estimation are considered. Symbol error rate results show timing synchronization loss of less than 0. 5 dB for a receiver with perfect channel information. I...|$|E
40|$|We {{present a}} method {{for the design of}} low {{complexity}} tim-ing error detectors in orthogonal space-time block coding (OS-TBC) receivers. A general expression for the S-curve of timing error detectors is derived. Based on this result, we obtain suffi-cient conditions for a difference of threshold crossings timing estimate that is robust to channel fading. A number of tim-ing error detectors for 3 - and 4 -transmit antenna codes are pre-sented. The performance is evaluated by examining their track-ing capabilities within a <b>timing</b> <b>loop</b> of an OSTBC receiver. Symbol-error-rate results are presented showing negligible loss due to timing synchronization. In addition, we study the per-formance {{as a function of the}} timing drift and show that the receiver is able to track up to the normalized timing drift band-width of 0. 001. ...|$|E
30|$|This section {{presents}} the simulation {{results of the}} proposed FBSC receiver. We shall first examine the PR-NMDFB-implemented filters and compare them with the FIR-based designs. Then, we will demonstrate the behaviors of the proposed CFO recovery <b>loop</b> and symbol <b>timing</b> recovery <b>loop.</b>|$|R
2500|$|The Homebrew Computer Club was {{an early}} {{computer}} hobbyist club in Palo Alto, CA. At the first meeting in March, 1975 Steve Dompier gave an account of {{his visit to the}} MITS factory in Albuquerque where he attempted to pick up his order for one of everything. He left with a computer kit with only 256 bytes of memory. At the April 16, 1975 club meeting Dompier keyed in a small program that played the song [...] "Fool on the Hill" [...] on a nearby AM radio. In the July 1975 Computer Notes, Bill Gates described this as [...] "the best demo program I've seen for the Altair…" [...] Gates could not figure out how the computer could broadcast to the radio. (It was radio frequency interference or static controlled by the <b>timing</b> <b>loops</b> in the program.) ...|$|R
3000|$|In {{the sixth}} paper, [...] "Packet format design and {{decision}} directed tracking methods for filter bank multicarrier systems", P. Amini and B. Farhang-Boroujeny develop a packet format for FBMC systems together with algorithms for carrier frequency and timing recovery. Also methods for channel estimation {{as well as}} carrier and <b>timing</b> tracking <b>loops</b> are proposed.|$|R
40|$|Abstract—Low {{complexity}} {{timing error}} detectors for rate one orthogonal space-time block codes with real modulation are presented. For 2 -, 3 - and 4 -transmit antenna codes, we derive robust timing error estimators and obtain analytical expressions for the estimation error variance and the signal-to-noise ratio. The performance is evaluated {{by examining the}} estimator’s tracking capabilities in a system operating over a frequency-flat Rayleigh fading environment. The bit-error-rate results are presented showing degradation due to timing synchronization of less than 0. 5 dB. In addition, we study the performance {{as a function of}} the timing drift and show that the <b>timing</b> <b>loop</b> is able to track up to normalized timing drift bandwidth of 0. 001. Perfect channel state information at the receiver is assumed throughout the paper. I...|$|E
40|$|Abstract—A general {{framework}} {{for the design of}} low complex-ity timing error detectors (TEDs) for orthogonal space-time block code (OSTBC) receivers is proposed. Specifically, we derive suf-ficient conditions for a difference-of-threshold-crossings timing error estimate to be robust to channel fading. General expressions for the S-curve, estimation error variance and the signal-to-noise ratio are also obtained. As the designed detectors inherently depend on the properties of the OSTBC under consideration, we derive and evaluate the properties of TEDs for a number of known codes. Simulations are used to assess the system performance with the proposed timing detectors incorporated into the receiver <b>timing</b> <b>loop</b> operating in tracking mode. While the theoretical derivations assume a receiver with perfect channel state information and symbol decisions, simulation results include performance for pilot-symbol-based channel estimation and data symbol detection errors. For the case of frequency-flat Rayleigh fading and QPSK modulation, symbol-error-rate results show timing synchronization loss of less than 0. 3 dB for practical timing offsets. In addition it is shown that the receiver is able to track timing drift with a normalized bandwidth of up to 0. 001. Index Terms—Synchronization, symbol timing estimation, tim-ing error tracking, orthogonal space-time block coding. I...|$|E
40|$|A {{method for}} the design of low {{complexity}} timing error detectors (TEDs) for or-thogonal and quasi-orthogonal space-time block coding (OSTBC and QOSTBC) receivers is presented. It is shown that a difference of threshold crossings timing es-timate can be obtained for a two-transmit antenna OSTBC receiver in a frequency-flat Rayleigh fading environment. The S-curve of the resulting TED possesses an important property of robustness to channel fading. The results are generalized by the development of a TED design framework for higher order OSTBCs and the derivation of sufficient conditions for a robust difference of threshold crossings timing estimate. The designed detectors inherently depend on the properties of the space-time block code under consideration. As such, particular OSTBCs can be regarded as self-synchronizing. Analytical expressions for the S-curve, estimation error vari-ance and the signal-to-noise ratio of detectors for arbitrary OSTBCs are obtained. We design and evaluate the properties of a number of timing estimators for some known space-time block codes. Performance results are examined through system simulations, where the timing drift tracking capabilities of the detectors within a <b>timing</b> <b>loop</b> of an OSTBC receiver are investigated. While the theoretical deriva-tions assume a receiver with perfect channel state information and symbol decisions, simulation results include performance for a receiver employing pilot symbol-based channel estimation and data symbol detection. i...|$|E
40|$|Abstract—We {{consider}} {{the problem of}} delay estimation {{in the presence of}} timing noise. We introduce an iterative algorithm with superior performance compared to the traditional method of using only cross-correlation. This method can exploit statistical knowledge of the timing noise such as loop bandwidth, giving further improvement in performance. Index Terms—Estimation theory, jitter, sampling methods, <b>timing,</b> tracking <b>loops.</b> I...|$|R
40|$|We {{describe}} the architecture and algorithm development for a field {{programmable gate array}} (FPGA) wideband telemetry receiver prototype capable of processing data rates in excess of 100 megabits per second (Mbps). The high-speed parallel implementations of the matched filter, carrier phase tracking <b>loop,</b> and symbol <b>timing</b> recovery <b>loop</b> are discussed, along with simulation and hardware performance results. I...|$|R
5000|$|Switching the SAM into 1.8 MHz {{operation}} {{gives the}} CPU the time ordinarily {{used by the}} VDG and refresh. As such, the display shows garbage; this mode was seldom used. However, an unusual mode available by the SAM is called the Address Dependent mode, where ROM reads (since they do not use the DRAM) occur at 1.8 MHz but regular RAM access occurs at [...]89 MHz. In effect, since the BASIC interpreter runs from ROM, putting the machine in this mode would nearly double {{the performance of a}} BASIC program while maintaining video display and DRAM refresh. Of course, this would throw off the software <b>timing</b> <b>loops</b> and I/O operations would be affected. Despite this, however, the [...] "high speed POKE" [...] was used by many CoCo BASIC programs even though it overclocked the hardware in the CoCo, which was only rated for 1 MHz operation.|$|R
40|$|Phase {{shifts of}} the {{circadian}} rhythm of K+ uptake by Lemna gibba G 3, caused by pulse administration of various amino acids analogs, were examined and compared. The various phase shifts were {{not due to}} any disturbance in the biosynthesis of amino acids, since the effective time of day {{and direction of the}} phase shift caused by analogs were not correlated with the standard amino acid which was modified. Effective analogs could be classified into three groups. The first group was effective during the middle subjective day and caused both advances and delays in phase. The second group was effective early in the subjective night, causing large delays and small phase advance. Analogs in the third group shifted the phase as did cycloheximide and were effective at the subjective dawn. Since the analogs of the third group were known to inhibit protein synthesis, it is likely that they shift the phase by lowering the level of some protein(s) important for the clock. By contrast, since the analogs in groups 1 and 2 are known to generate abnormal proteins, the different phase-shifting patterns caused by analogs in groups 1 and 2 suggest that at least two other proteins are important for the circadian <b>timing</b> <b>loop.</b> The amino acid analogs shift the phase {{as a result of their}} incorporation into these proteins instead of the standard amino acid. This probably alters the structure and/or activities of these proteins...|$|E
40|$|Two-dimensional {{magnetic}} recording (TDMR) is a promising technology for boosting areal densities using sophisticated signal processing algorithms within a systems framework. The channel impairments comprise of 2 -D intersymbol interference (ISI), 2 -D synchronization errors along with media, and electronic noise sources, making it challenging for designing optimum algorithms and architectures for read/write channels. In this paper, we propose a novel iterative joint timing and signal detection algorithm to handle synchronization errors {{along with the}} 2 -D ISI for TDMR channels. Our work is novel in two aspects: 1) we develop a discrete timing error model using 2 -D random walk by incorporating correlated timing drifts due to phase and frequency offsets and 2) we develop a 2 -D joint timing and signal detection engine for handling 2 -D ISI constraints along with timing errors toward near maximum likelihood detection. The proposed 2 -D joint timing-detection algorithm can be iteratively configured and observed to achieve a significant signal-to-noise ratio gain of > 1. 2 dB in bit error rate performance (translating to similar to 10 % increase in areal densities around the 1 Tb/in(2) regime with the grain sizes of 10 nm and the bit sizes of 25 x 25 nm) at the output of 2 -D soft-output Viterbi algorithm (SOVA) as compared with a standalone <b>timing</b> <b>loop</b> coupled to a 2 -D detector in an open-loop configuration. The efficacy of our proposed algorithm and system architecture is evaluated via simulations for TDMR configurations comprising of a 2 -D generalized partial response equalization along the 2 -D SOVA with data-dependent noise prediction capability over the Voronoi media model...|$|E
40|$|HART通信技术是工业自动化最重要的现场总线协议之一，该技术在广泛使用的 4 - 20 mA模拟通信环路上叠加小幅数字载波信号进行半双工数字通信。HART PSK物理层在现有的FSK调制解调基础上新增了C 8 PSK调制解调，可将HART数字通信效率提高 10 倍。但C 8 PSK调制解调本身复杂，信号传输时容易发生畸变，而且HART对功耗要求严格，因此到目前为止，HART C 8 PSK调制解调器始终未能得到实际应用。本文以HART PSK数字接收机为主要研究对象，以信道特性为基础，研究了接收机中关键模块的低功耗和高性能算法。论文主要工作和创新如下： 1 ．首先分析了HART PSK物理层实现高性能和低功耗数字载波通信所需解决的关键问题，并论述了相关技术研究现状和存在的问题。详细论述了HART PSK最佳接收准则，最佳接收机结构以及相关模块算法的特点。 2 ．建立HART PSK物理层信道的理论传输模型和分段电路简化模型，通过仿真和实际测量，对比验证了两种模型的精确性和一致性。进一步研究了信道的频率特性曲线，脉冲响应特性，以及信道幅频响应和相频响应的对应关系。并分析了信道中主要噪声源的特性，给出了噪声合并计算方法和信道合成噪声的特性。 3 ．同步是C 8 PSK载波信号相干解调的关键，常规算法很难满足低功耗和快速收敛要求，为此提出将C 8 PSK同步分成捕获和跟踪两步实现，研究新同步算法提高同步偏差估计速度和精度，并改进同步补偿环路控制策略来提高同步系统稳定速度。对于同步捕获，提出两种快速数据辅助(DA，Data-Aided) 同步算法，使用简单加法窗来实现同步快速稳定，并进一步分析它们的本质，给出了推广算法。对于同步跟踪，研究了 2 倍过采样率判决反馈 (DD，Decisions Directed) 低功耗同步跟踪算法，该算法使用自噪声补偿提高参数估计精度；同时DD算法的低速率输入使得均衡器工作频率降低，大幅降低了其功耗。在载波补偿上，采用 8 象限判决和小数相角线性近似策略，改进了常规旋转数字计算(CORDIC，Coordinate Rotation Digital Computer) 算法，使得同等相角精度下迭代计算次数减半；分析了低功耗数字锁相环 (DPLL，Digital Phase Lock Loop) 的大时滞特性，提出了基于采样控制原理的大时滞DPLL控制策略。在位定时补偿上，利用一阶自适应Kalman环路滤波算法解决了定时跟踪环路的延时和噪声干扰问题。 4 ．信道估计和均衡等自适应接收模块功耗很大，本研究通过多功能模块和均衡器结构改进，提高系统性能，降低系统功耗。研究了HART PSK前导码信号联合时频分析方法，并给出了时频分析稳定速度最快，稳态波动最小的最小均方误差 (MMSE，Minimum Mean Square Error) 低通滤波策略。基于时频分析结果、信道传输特性和两种前导码信号的频谱，提出一种简单的信道估计、自动调制识别和自动增益控制联合算法。根据信道传输特性和信道估计输出，设计了一种基于CSD(Canonic Signed Digital) 编码的预置式分数间隔均衡器，大幅减小了均衡器每次计算的功耗。 5 ．研究了FSK和C 8 PSK一体化调制解调器设计方案；提出了一种复用C 8 PSK接收机结构的简单FSK解调算法；并提出C 8 PSK两倍采样信号的码元判决算法，与码元速率采样的最佳判决相比，可以实现 2 dB SNR改进。对HART PSK物理层电路系统设计给出了 3 种不同层次的验证策略，并对其功耗进行了详细分析，验证和分析结果证明了本研究的HART PSK物理层电路具有较高的性能和较低的功耗。HART {{enhances the}} widely used {{traditional}} 4 - 20 signaling loop by simultaneously adding little carrier signal to achieve half-duplex digital communication, {{regarded as one}} of the most important field-bus protocols in industrial automation. HART PSK physical layer (PHL) introduces C 8 PSK modulation on the basis of the existing FSK modulation, and can provide 8 - 10 faster digital communication rates than the existing HART. C 8 PSK signal is a more much complex modulated and can be distorted by the channel, while HART has strict requirement on low power. HART PSK MODEM has never been applied in practice. Base on the channel characteristics, we focus our attention on receiver part of the HART PSK PHL circuits and study key module algorithms in the reeiver to achieve low power and high performance requirements. The main contents and innovation points of this paper are as follows: 1. We conclude the key technologies involved in high performance and low power circuit design for HART PSK PHL, and related research achievements are introduced. We discuss the optimal reception criteria, the structure of the optimal receiver, and the algorithm characteristics of the related modules. 2. We develop theoretical transmission model and sectioned circuits simplified model of HART PSK channel. Simulations and the test data show consistency and accuracy of the two models. Using the channel models simulations, we study the frequency response, impulse response and relationships between the amplitude –frequency response and the phase-frequency response. The main noises in the channel and their characteristics are analyzed; their combination algorithms and consolidated characteristic are introduced. 3. Sychronzation is a key problem for C 8 PSK demodulation, and ordinary algorithms are difficult to meet the low power and fast convergence requirements. Two step, acquisition and tracking, are proposed for C 8 PSK Sychronzation. New algorithms and control strategies are put forward to improve the precision and speed of the synchronization system. For acquisition, fast data-aided (DA) algorithms are put forward, using addition window to make synchronizer stable fast, then their extended algorithms are presented based on their essence analysis. For tracking, we research 2 oversample rate decisions directed (DD) algorithms, using self-noise compensation to improve the precision of the parameters’ estimation. At the time low data rate of the DD algorithms decrease the equalizer operating frequency, reduing its power greatly. In carrier compensation, based on 8 quadrants judgment and fractional phase linearity approximation, we modify ordinary CORDIC algorithm, halving the iterative calculation while maintain the same precision; we analyze the big delay involved in the DPLL, and we propose a control strategy that based on sampling control theory to conquer the loop big delay. In timing compensation, an adaptive one order Kalman filter algorithm is put forward to conquer the noise and delay of the <b>timing</b> <b>loop.</b> 4. Adaptive receiveing modules, such as channel estimation and equalization, are high power consuming, multifunction module and new structure equalizer are proposed to improve profermance and low power. We study joint time-frequency analysis algorithm for HART PSK preambles signal, and deduce its optimal MMSE low pass filtering strategy to make time-frequency analysis converge fast and jitter little in stable state. Based on the time-frequency analysis and channel characteristics, a simple joint algorithm for channel estimation, automatic modulation classification (AMC) and AGC is proposed. Based on channel characteristics, AMC, and channel estimation, we propose a CSD coded preset fractional equalizer, reducing to power consumption greatly per one equalizing computation. 5. We put forward an incorporated HART PSK MODEM. A new FSK demodulation algorithm is put forward, reusing the resource of the C 8 PSK demodulator. A new symbol judgment algorithm based on 2 -oversample rate baseband signal is proposed; comparing with ordinary optimal judgment algorithm, 2 dB SNR improvements can be achieved. We propose 3 different levels verification strategies for HART PSK PHL circuits, and summarize the computational complexity involved in the highest power state. The computational complexity comparison and verification result prove that our research can provide solutions for HART PSK PHL design with high performance and low power dissipation...|$|E
5000|$|Nibbles was {{included}} with MS-DOS version 5.0 and above. Written in QBasic, {{it is one}} of the programs included as a demonstration of that programming language. [...] The QBasic game uses the standard 80x25 text screen to emulate an 80x50 grid by making clever use of foreground and background colors, and the ANSI characters for full blocks and half-height blocks. Microsoft's 24kB QBasic version was copyrighted in 1990. Because of MS-DOS's prevalence at that time, it was available on almost every PC in the early 1990s. Modern computer speeds have rendered the game-speed-delay <b>timing</b> <b>loops</b> invalid, and thus the QBasic version of Nibbles requires some code changes to operate correctly on modern PCs. However, the adjustable clock rate on the DOSBox DOS emulator allows the original code to run at speeds similar to those on the original hardware. Nibbles is also runnable on QB64 as a way to avoid emulation.|$|R
40|$|AbstractReciprocal {{and root}} {{reciprocal}} functions at “half” and IEEE single precision formats are {{specified in the}} AMD 3 DNow! instruction set. Implementations in the recently released AMD K 6 - 2 microprocessor are analyzed herein by exhaustive computation and <b>timing</b> <b>loops</b> to ascertain the accuracy and monotonicity properties of the output and throughput/latency cycle counts. Periodicities in stepwise function output were observed and employed to construct an underlying bipartite table that can serve as {{the core of the}} respective reciprocal function outputs. The recommended RISC instruction macros generated single precision reciprocals and root reciprocals accurate to a unit in the last place. However, the root reciprocal functions failed to satisfy the desirable monotonicity property typically implemented as an industry standard for elementary functions on x 86 floating point units. Reasons for the failure are provided and an adjusted table is shown to satisfy the monotonicity standard. Results are summarized in Table 1 and described in the body of this report...|$|R
50|$|The game’s Practice section covers {{every song}} on disc, {{as well as}} songs from DLC. Players can select {{from a list of}} song {{sections}} for each instrument, or practice the entire song. Learning enhancements include a selectable “click-track” to assist with <b>timing,</b> a <b>looping</b> function to automatically repeat sections or the entirety of songs, and speed control to slow down or speed-up playback of the practice song.|$|R
