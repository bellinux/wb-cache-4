790|3255|Public
500|$|Early scenes {{animated}} by Frank Thomas and Ollie Johnston show that Pinocchio's design was exactly {{like that of}} a real wooden puppet with a long pointed nose, a peaked cap and bare wooden hands. Walt Disney, however, was not pleased with the work that was being done on the film. He felt that no one could really sympathize with such a character and called for an immediate halt in production. Fred Moore redesigned the character slightly to make him more appealing but the design still retained a wooden feel. Young and upcoming animator Milt Kahl felt that Thomas, Johnston and Moore were [...] "rather obsessed with the idea of this boy being a wooden puppet" [...] and felt that they should [...] "forget that he was a puppet and get a cute little boy; you can always draw the wooden joints and make him a wooden puppet afterwards". Hamilton Luske suggested to Kahl that he should demonstrate his beliefs by animating a <b>test</b> <b>sequence.</b> Kahl showed Disney a test scene in which Pinocchio is underwater looking for his father. From this scene Kahl re-envisioned the character by making him look more like a real boy, with a child's Tyrolean hat and standard cartoon character four-fingered (or three and a thumb) hands with Mickey Mouse-type gloves on them. The only parts of Pinocchio that still looked more or less like a puppet were his arms, legs and his little button wooden nose. Disney embraced Kahl's scene and immediately urged the writers to evolve Pinocchio into a more innocent, naïve, somewhat coy personality that reflected Kahl's design.|$|E
2500|$|Topicalization {{involves}} {{moving the}} <b>test</b> <b>sequence</b> {{to the front}} of the sentence. It is a simple movement operation: ...|$|E
2500|$|... 21 March: West Indies {{lose their}} eighth {{successive}} Test, by ten wickets to New Zealand, which is their worst <b>Test</b> <b>sequence</b> since the team's admission to Test cricket in 1928.|$|E
40|$|Conformance <b>testing</b> using <b>test</b> <b>sequences</b> is {{the main}} means {{to ensure that a}} {{protocol}} implementation conforms to its specification. For systems which are specified by nondeterministic finite state machines, a commonly used technique to generate <b>test</b> <b>sequences</b> is the generalized Wp-method with reset which often yields long <b>test</b> <b>sequences</b> if no reliable reset function exists in the system. In this paper, we propose a bipartite graph matching approach to optimize <b>test</b> <b>sequences</b> generated using the generalized Wp-method for protocol conformance testing. Our approach significantly reduces the length of the <b>test</b> <b>sequences</b> required for conformance testing while maintaining the same fault detection capability...|$|R
40|$|Abstract—Functional <b>test</b> <b>sequences</b> {{are often}} used in {{manufacturing}} testing to target defects that are not detected by structural test. Therefore, {{it is necessary to}} evaluate the quality of functional <b>test</b> <b>sequences.</b> However, it is very time-consuming to evaluate the quality of functional <b>test</b> <b>sequences</b> by gate-level fault simulation. Therefore, we propose output deviations as a metric to grade functional <b>test</b> <b>sequences</b> at the register transfer (RT) level without explicit fault simulation. Experimental results for the open-source Parwan processor and the Scheduler module of the Illinois Verilog Model (IVM) show that the deviations metric is computationally efficient and it correlates well with gate-level coverage for stuck-at, transition-delay, and bridging faults. Results also show that functional <b>test</b> <b>sequences</b> that are reordered based on output deviations provide steeper gate-level fault coverage ramp-up compared to other ordering methods. I...|$|R
40|$|International audienceThe {{combination}} of higher quality requirements and sensitivity of high performance circuits to delay defects {{has led to}} an increasing emphasis on delay testing of VLSI circuits. In this context, it has been proven that Single Input Change (SIC) <b>test</b> <b>sequences</b> are more effective than classical Multiple Input Change (MIC) <b>test</b> <b>sequences</b> when a high robust delay fault coverage is targeted. In this paper, we show that random SIC (RSIC) <b>test</b> <b>sequences</b> achieve a higher fault coverage than random MIC (RMIC) <b>test</b> <b>sequences</b> when both robust and non-robust tests are under consideration. Experimental results given in this paper are based on a software generation of RSIC <b>test</b> <b>sequences</b> that can be easily generated in this case. For a built-in self-test (BIST) purpose, hardware generated RSIC sequences have to be used. This kind of generation will be shortly discussed {{at the end of the}} paper...|$|R
2500|$|Their 1971 single [...] "Turtles Have Short Legs" [...] is {{reported}} to have been influential, if not outright sampled, for a song in the 1997 PlayStation game Parappa The Rapper during the driving <b>test</b> <b>sequence.</b>|$|E
2500|$|Pro-form substitution, or replacement, {{involves}} {{replacing the}} test constituent {{with the appropriate}} pro-form (e.g. pronoun). Substitution normally involves using a definite pro-form like it, he, there, here, etc. {{in place of a}} phrase or a clause. If such a change yields a grammatical sentence where the general structure has not been altered, then the <b>test</b> <b>sequence</b> is a constituent: ...|$|E
2500|$|By November 1941, many of {{the initial}} assembly-line {{challenges}} had been met, which freed up time for the engineering team to tackle the problem of frozen controls in a dive. Lockheed had a few ideas for tests that would help them find an answer. The first solution tried was the fitting of spring-loaded servo tabs on the elevator trailing edge designed to aid the pilot when control yoke forces rose over , {{as would be expected}} in a high-speed dive. At that point, the tabs would begin to multiply the effort of the pilot's actions. The expert test pilot, 43-year-old Ralph Virden, was given a specific high-altitude <b>test</b> <b>sequence</b> to follow and was told to restrict his speed and fast maneuvering in denser air at low altitudes, since the new mechanism could exert tremendous leverage under those conditions. A note was taped to the instrument panel of the test craft underscoring this instruction. On 4 November 1941, Virden climbed into YP-38 #1 and completed the <b>test</b> <b>sequence</b> successfully, but 15 minutes later was seen in a steep dive followed by a high-G pullout. The tail unit of the aircraft failed at about [...] during the high-speed dive recovery; Virden was killed in the subsequent crash. The Lockheed design office was justifiably upset, but their design engineers could only conclude that servo tabs were not the solution for loss of control in a dive. Lockheed still had to find the problem; the Army Air Forces personnel were sure it was flutter and ordered Lockheed to look more closely at the tail.|$|E
40|$|In this paper, {{we propose}} a {{functional}} testing method of media synchronization protocols, which control the synchronization between audio and movie, described in concurrent synchronous timed I/O automata. In order to trace all <b>test</b> <b>sequences</b> (I/O event sequences) with synchronization on the model, {{we need to}} execute each I/O event at an adequate timing which satisfies the whole timing constraint for all the given <b>test</b> <b>sequences.</b> However, the outputs are given from the IUT and uncontrollable. Also each output/synchronization timing may a#ect executable timing for its succeeding I/O events in the <b>test</b> <b>sequences.</b> In this paper, we propose a technique to derive a set of time intervals which make all the given <b>test</b> <b>sequences</b> executable, and propose a method for functional testing using the technique...|$|R
40|$|This paper {{deals with}} the {{sequential}} diagnosis approach and the associated <b>test</b> <b>sequencing</b> problem (i. e. the problem of generating the <b>sequence</b> of <b>tests</b> required to reach a diagnostic conclusion at minimum cost). The traditional <b>test</b> <b>sequencing</b> problem is generalized here to include asymmetrical and multi-valued tests. We present the sequential diagnosis tool (SDT) that enables the user to generate solutions of the generalized <b>test</b> <b>sequencing</b> problem. SDT can be employed as a kernel of a diagnostic reasoner in automatic test equipment or system maintenance software. � 2000 Elsevier Science B. V. All rights reserved...|$|R
40|$|We {{discuss the}} {{compaction}} of independent <b>test</b> <b>sequences</b> for sequential circuits. Our first contribution is {{the formulation of}} this problem as an integer program, which we then solve through a well-known method employing linear programming relaxation and randomized rounding. The key contribution {{of this approach is}} that it yields the first polynomial time approximation algorithm for this problem. More specifically, it provides a provably good approximation guarantee while running in time polynomial with respect to the number of vectors in the original <b>test</b> <b>sequences</b> and the number of faults. Another virtue of our approach is that it provides a lower bound for the compacted set of <b>test</b> <b>sequences</b> and, therefore, a quality measure for the test compaction algorithm. Experimental results on benchmark circuits demonstrate that the proposed solution efficiently identifies nearly optimal sets of compacted <b>test</b> <b>sequences...</b>|$|R
2500|$|The National Transportation Safety Board stated on 18 September 2008 {{that the}} Cessna 162 was {{registered}} in the experimental category and was conducting a test flight when the accident occurred. The <b>test</b> <b>sequence</b> involved a series of stalls starting at [...] The aircraft entered an unintentional flat spin and was not under control at , {{at which point the}} test pilot bailed out of the aircraft. Cessna confirmed that the 162 entered a spin from cross-controlled, power-on stall, that the spin became flat and recovery was not possible. The company indicated that the testing was outside that required for LSA certification and that the accident will result in only small design changes. [...] The aircraft was equipped with a Ballistic Recovery Systems parachute, but it failed to deploy when activated.|$|E
5000|$|... <b>test</b> <b>sequence</b> (from Step 2 with {{intervening}} nucleotides removed) ...|$|E
5000|$|Systematic {{errors in}} the <b>test</b> <b>sequence</b> are {{possible}} if the tests are incorrectly parameterized ...|$|E
5000|$|Apply {{settings}} to the SRC, {{which results in}} the <b>test</b> <b>sequences</b> ...|$|R
5000|$|The {{following}} {{process is}} the <b>testing</b> <b>sequence</b> supported by each test: ...|$|R
40|$|The {{problem of}} {{estimation}} of the projected power, consumed by the CMOS sequential circuits, by means of its simulation is discussed. The task of forming <b>test</b> <b>sequences</b> of input actions to estimate the average circuit switch activity is considered. Graph models of sequential circuits allowing to formalize the process of generating <b>test</b> <b>sequences</b> are suggested...|$|R
5000|$|... reverse {{complement}} This is {{the same}} as the <b>test</b> <b>sequence</b> above, and thus, it is a palindrome.|$|E
5000|$|After {{the test}} is completed, the {{insulating}} oil is stirred automatically and the <b>test</b> <b>sequence</b> is performed repeatedly.|$|E
5000|$|<b>Test</b> <b>sequence</b> numbers (CmdSN, DataSN, R2TSN); test SCSI Command/Response, Task Management Function Request/Response, Text Request/Response, NOP-In/NOP-Out, SNACK Request...|$|E
40|$|In this thesis, optimal and near-optimal {{algorithms}} {{are developed}} for various classes of single fault test-sequencing algorithms. We first present a novel multi-signal modeling methodology that alleviates {{some of the}} model validation problems of traditional dependency modeling, while achieving the same diagnostic resolution. We discuss the failure probability estimation and reachability analysis algorithms for dependency and multi-signal models. We also present efficient static analysis algorithms to rapidly evaluate topological testability deficiencies of a system {{based on the results}} of reachability analysis and directed graph processing, including the determination of ambiguity groups of faults, redundant tests, hidden and masking false failure sets. ^ Next, we present an array of optimal and near-optimal test-sequencing algorithms that incorporate real-world testing features such as precedence constraints on tests, setup operations for tests, and traveling costs for tests. We develop efficient implementation techniques to speed up the <b>test</b> <b>sequencing</b> algorithms, including bit-compacted representation of the fault dictionary (D-matrix) and a fast, efficient, in-place transposition algorithm for the compacted D-matrix. The algorithms have been used for developing diagnostic strategies for systems having 50, 000 failures and 50, 000 test points. ^ We extend these algorithms to the case of imperfect tests, where tests have false alarms and missed detections. Specifically, we develop a dynamic programming formulation for the problem of imperfect <b>test</b> <b>sequencing</b> and obtain closed form solutions for systems of special structure. We present practical <b>test</b> <b>sequencing</b> algorithms based on Information Gain and Certainty Equivalence, and compare them with the optimal DP method for small systems. We also present top-down graph search techniques which enabled us to construct static diagnostic strategies for large systems (up to 2000 faults and 2000 unreliable tests). Finally, we consider the various <b>test</b> <b>sequencing</b> problems that arise in the Design for Testability including Minimax <b>test</b> <b>sequencing,</b> <b>test</b> <b>sequencing</b> with a constraint on the expected <b>testing</b> time, <b>test</b> <b>sequencing</b> with a constraint on the number of tests used, and minimal storage <b>test</b> <b>sequencing,</b> for which we derive optimal and near-optimal top-down graph search solution algorithms. ...|$|R
40|$|The {{problem of}} {{generating}} the <b>sequence</b> of <b>tests</b> required {{to reach a}} diagnostic conclusion with minimum average cost, which {{is also known as}} <b>test</b> <b>sequencing</b> problem, is considered. The <b>test</b> <b>sequencing</b> problem is formulated as an optimal binary AND/OR decision tree construction problem, whose solution is known to be NP-complete. The problem can be solved optimally using dynamic programming or AND/OR graph search methods (AO*, CF, and HS). However, for large systems, the associated computational effort with dynamic programming or AND/OR graph search methods is substantial, due to the rapidly increasing number of nodes in AND/OR search graph. In order to prevent the computational explosion, one-step or multistep lookahead heuristic algorithms have been developed to solve the <b>test</b> <b>sequencing</b> problem. Our approach is based on integrating concepts from the one-step lookahead heuristic algorithms and the strategies used in Huffman coding. The effectiveness of the algorithms is demonstrated on several test cases. The traditional <b>test</b> <b>sequencing</b> problem is generalized here to include asymmetrical tests. Our approach to <b>test</b> <b>sequencing</b> can be adapted to solve a wide variety of binary identification problems arising in decision table programming, medical diagnosis, database query processing, quality assurance, and pattern recognition...|$|R
40|$|We {{study the}} use of model {{checking}} techniques for the generation of <b>test</b> <b>sequences.</b> Given a formal model of the system to be tested, one can formulate test purposes. A model checker then derives <b>test</b> <b>sequences</b> that fulfill these test purposes. The method is demonstrated by applying it to a specification of an Intelligent Network with two features...|$|R
5000|$|Topicalization {{involves}} {{moving the}} <b>test</b> <b>sequence</b> {{to the front}} of the sentence. It is a simple movement operation: ...|$|E
50|$|The test {{specification}} is software. Test specification is {{sometimes referred to}} as <b>test</b> <b>sequence,</b> which consists of test steps.|$|E
5000|$|Discharging {{capacitors}} {{and especially}} electrolytic capacitors (for safety and measurement stability, this <b>test</b> <b>sequence</b> {{must be done}} first before testing any other items) ...|$|E
30|$|From this result, it {{is clear}} that the {{proposed}} scheme is more advantages, since in all types of video <b>test</b> <b>sequences,</b> even low motion or high motion video sequences, the proposed scheme’s performance remains consistent at a certain level. Unlike traditional DVCs that only perform well under certain beneficial video <b>test</b> <b>sequences,</b> the proposed scheme can consistently exhibit improved performance. However, in some disadvantageous video <b>test</b> <b>sequences,</b> e.g., DISCOVER codec in Soccer, its performance will obviously become poor. In addition, the proposed scheme exhibits more stable performance and a small difference in different GOP length. These two advantages cannot be achieved with traditional DVCs.|$|R
30|$|Comprehensive {{statistics}} from {{the analysis of the}} <b>test</b> <b>sequences</b> are discussed in Section 5.|$|R
40|$|We {{present a}} new type of linear {{feedback}} shift registers, state skip LFSRs. state skip LFSRs are normal LFSRs {{with the addition of a}} small linear circuit, the State Skip circuit, which can be used, instead of the characteristic-polynomial feedback structure, for advancing the state of the LFSR. In such a case, the LFSR performs successive jumps of constant length in its state sequence, since the State Skip circuit omits a predetermined number of states by calculating directly the state after them. By using State Skip LFSRs we get the well- known high compression efficiency of test set embedding with substantially reduced <b>test</b> <b>sequences,</b> since the useless parts of the <b>test</b> <b>sequences</b> are dramatically shortened by traversing them in state skip mode. The length of the shortened <b>test</b> <b>sequences</b> approaches that of test data compression methods. A systematic method for minimizing the <b>test</b> <b>sequences</b> of re- seeding-based test set embedding methods, and a low overhead decompression architecture are also presente...|$|R
5000|$|After the {{transformer}} oil test is completed, the insulation oil is stirred automatically and the <b>test</b> <b>sequence</b> is performed repeatedly: typically 5 repetitions, {{depending on the}} standard.|$|E
5000|$|Their 1971 single [...] "Turtles Have Short Legs" [...] is {{reported}} to have been influential, if not outright sampled, for a song in the 1997 PlayStation game Parappa The Rapper during the driving <b>test</b> <b>sequence.</b>|$|E
50|$|The {{difference}} between the concept of test execution engine and operation system is that the test execution engine monitors, presents and stores the status, results, time stamp, length and other information for every Test Step of a <b>Test</b> <b>Sequence,</b> but typically an operation system does not perform such profiling of a software execution.|$|E
40|$|The {{generation}} of dynamic <b>test</b> <b>sequences</b> from a formal specification, complementing traditional testing methods {{in order to}} find errors in the source code. Objective In this paper we extend one specific combinatorial test approach, the Classification Tree Method (CTM), with transition information to generate <b>test</b> <b>sequences.</b> Although we use CTM, this extension is also possible for any combinatorial testing method. Method The {{generation of}} minimal <b>test</b> <b>sequences</b> that fulfill the demanded coverage criteria is an NP-hard problem. Therefore, search-based approaches are required to find such (near) optimal <b>test</b> <b>sequences.</b> Results The experimental analysis compares the search-based technique with a greedy algorithm on a set of 12 hierarchical concurrent models of programs extracted from the literature. Our proposed search-based approaches (GTSG and ACOts) are able to generate <b>test</b> <b>sequences</b> by finding the shortest valid path to achieve full class (state) and transition coverage. Conclusion The extended classification tree is useful for generating of <b>test</b> <b>sequences.</b> Moreover, the experimental analysis reveals that our search-based approaches are better than the greedy deterministic approach, especially in the most complex instances. All presented algorithms are actually integrated into a professional tool for functional testing. Information and Software Technology (DOI: 10. 1016 /j. infsof. 2014. 07. 014) Spanish Ministry of Economy and Competitiveness and FEDER under contract TIN 2011 - 28194 and fellowship BES- 2012 - 055967. Project 8. 06 / 5. 47. 4142 in collaboration with the VSB-Tech. Univ. of Ostrava, Universidad de Málaga, Andalucía Tech. and EU Grant ICT- 257574 (FITTEST project) ...|$|R
25|$|In {{addition}} to atomic <b>test</b> cases, <b>test</b> <b>sequences</b> containing several <b>test</b> steps can be specified.|$|R
3000|$|..., are not {{necessarily}} associated with a composite strict contraction. Note also that the <b>testing</b> <b>sequence</b> [...]...|$|R
