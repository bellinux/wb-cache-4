56|140|Public
2500|$|Bash is {{a command}} {{processor}} that typically {{runs in a}} <b>text</b> <b>window,</b> where the user types commands that cause actions. Bash can also read and execute commands from a file, called a [...] script. [...] Like all Unix shells, it supports [...] filename globbing (wildcard matching), piping, here documents, command substitution, variables, and control structures for condition-testing and iteration. The keywords, syntax and other basic features of the language are all copied from sh. [...] Other features, e.g., history, are copied from csh and ksh. [...] Bash is a POSIX-compliant shell, but {{with a number of}} extensions.|$|E
2500|$|The C {{shell is}} a command {{processor}} typically {{run in a}} <b>text</b> <b>window,</b> allowing the user to type commands. [...] The C shell can also read commands from a file, called a script. [...] Like all Unix shells, it supports filename wildcarding, piping, here documents, command substitution, variables and control structures for condition-testing and iteration. [...] What differentiated the C shell from others, especially in the 1980s, were its interactive features and overall style. [...] Its new features made it easier and faster to use. [...] The overall style of the language looked more like C and was seen as more readable.|$|E
2500|$|As {{computers}} {{gained the}} ability to use pointing devices and point-and-click interfaces, graphical adventure games moved away from including the text interface and simply provided appropriate commands the player could interact with on-screen. The first known game with such an interface was Enchanted Scepters (1984) from Silicon Beach Software, which used drop-down menus for the player to select actions from while using a <b>text</b> <b>window</b> to describe results of those actions. In 1985, ICOM Simulations released Déjà Vu, the first of its MacVenture series, utilized a more complete point-and-click interface, including {{the ability to}} drag objects around on the current scene, and was a commercial success. LucasArts' Maniac Mansion, released in 1987, used a novel [...] "verb-object" [...] interface, showing all possible commands the player could use to interact with the game along with the player's inventory, which became a staple of LucasArts' own adventure games and in the genre overall. The point-and-click system also worked well for game consoles, with games like Chunsoft's Portopia Serial Murder Case (1985) and Square's Suishō no Dragon (1986), both on the Nintendo Entertainment System using the controller input instead of text-based actions.|$|E
5000|$|Twin ("Text mode WINdow environment"): a {{full-fledged}} <b>window</b> manager for <b>text</b> <b>windows.</b> Initially started as an MS-DOS project, {{it was later}} ported to Linux.|$|R
5000|$|The initial concept {{relied on}} custom (but low-cost) {{terminals}} which would support mouse interaction, (<b>text)</b> <b>windowing</b> support, and colored text. With that, plus special host software, the vendors proposed to support semi-graphical applications [...] "transparently".|$|R
5000|$|Beside byte stream-based pipelines, {{there are}} also object pipelines. In an object pipeline, {{processing}} elements output objects instead of <b>text.</b> <b>Windows</b> PowerShell includes an internal object pipeline that transfers [...]NET objects between functions within the PowerShell runtime. Channels, found in the Limbo programming language are other examples of this metaphor.|$|R
2500|$|The Win32 {{environment}} subsystem can run 32-bit Windows applications. It {{contains the}} console {{as well as}} <b>text</b> <b>window</b> support, shutdown and hard-error handling for all other environment subsystems. It also supports Virtual DOS Machines (VDMs), which allow MS-DOS and 16-bit Windows (Win16) applications to run on Windows NT. There is a specific MS-DOS VDM that runs in its own address space and which emulates an Intel 80486 running MS-DOS 5.0. Win16 programs, however, run in a Win16 VDM. Each program, by default, runs in the same process, thus using the same address space, and the Win16 VDM gives each program its own thread on which to run. [...] However, Windows NT does allow users to run a Win16 program in a separate Win16 VDM, which allows the program to be preemptively multitasked, as Windows NT will pre-empt the whole VDM process, which only contains one running application. The Win32 environment subsystem process (csrss.exe) also includes the window management functionality, sometimes called a [...] "window manager". It handles input events (such as from the keyboard and mouse), then passes messages to the applications that need to receive this input. Each application is responsible for drawing or refreshing its own windows and menus, {{in response to these}} messages.|$|E
5000|$|Read news {{either in}} the {{internal}} browser or a Rich <b>Text</b> <b>window</b> ...|$|E
5000|$|Chat - {{there is}} chat box that {{allows users to}} talk without {{changing}} the <b>text</b> <b>window</b> ...|$|E
50|$|Windows are {{primarily}} associated with graphical displays, {{where they can}} be manipulated with a pointer by employing some kind of pointing device. Text-only displays can also support windowing, as a way to maintain multiple independent display areas, such as multiple buffers in Emacs. <b>Text</b> <b>windows</b> are usually controlled by keyboard, though some also respond to the mouse.|$|R
50|$|The {{concept of}} room {{descriptions}} in top-down view CRPGs {{is carried on}} in titles with limited budgets for voice acting or limited graphics, such as the indie titles of the Avernum series by Spiderweb Software and the Eschalon series by Basilisk Games. Like in the Amiga version of Temple of Apshai, the descriptions are presented in <b>text</b> <b>windows</b> within the game.|$|R
40|$|Systems using <b>text</b> <b>windows</b> {{to model}} word {{contexts}} have mostly been using fixed-sized windows and uniform weights. The window size is often selected {{by trial and}} error to maximize task results. We propose a non-supervised method for selecting weights for each window distance, effectively removing the need to limit window sizes, by maximizing the mutual generation of two sets of samples of the same word. Experiments on Semeval Word Sense Disambiguation tasks showed considerable improvements. ...|$|R
50|$|The clean {{interface}} {{consists of}} a <b>text</b> <b>window,</b> and a graphics window. The <b>text</b> <b>window</b> contains fully editable notebooks, and the graphics window the graphics output. Graphics {{can be added to}} the notebook window too, or can be exported in various formats (PNG, SVG, WMF, Clipboard). Graphic types include line, bar or point plots in 2D and 3D, including anaglyph plots of 3D surfaces and other 3D plots. Euler has an API to use the open raytracer POV-Ray.|$|E
5000|$|... #Caption: A {{graphical}} interface {{from the}} late 1980s, which features a TUI window for a man page. Another <b>text</b> <b>window</b> for a Unix shell is partially visible.|$|E
5000|$|Omegle was {{initially}} a text-only chat that paired users at random to communicate as [...] "strangers". However, in 2010, Omegle introduced a video mode {{to complement the}} text chat mode, which pairs together strangers who are using webcams and microphones. The video chat also has a built in <b>text</b> <b>window.</b>|$|E
50|$|As {{the game}} starts, players are {{introduced}} to their character through a narrative sequence that allows the selection of their character and love interest. The players relationship with their love interest can be both straight or gay, depending on their choice. From there, the game begins its narrative, told through <b>text</b> <b>windows</b> supported by character portraits. Players make choices in dialogue and in action to alter {{the course of the}} story and change the fate of their protagonist.|$|R
5000|$|Microsoft's Windows Mobile 6.1 was {{announced}} on April 1, 2008 and introduced instant messaging-like <b>texting.</b> [...] <b>Windows</b> Mobile 6.1 was built upon Windows CE 5.|$|R
500|$|The game's {{multiplayer}} {{nature and}} [...] "free-form" [...] gameplay encourage creating personal networks, and cooperating and fighting with other players. Players interact with Anarchy Onlines interface via a keyboard and mouse. The game's heads-up display {{consists of a}} series of windows, menus and buttons located {{on the periphery of the}} screen. Players communicate with each other by typing <b>text</b> in chat <b>windows,</b> and occasionally through emotive character animations. Communication with computer-controlled characters is executed via <b>text</b> <b>windows,</b> in which players chose from a menu of possible responses to the conversation being shown. Like most role playing games, Anarchy Online provides structure for role-playing events. Most major cities include night clubs and other venues specifically for this. Events are organized either by players, or officially by Funcom staff.|$|R
50|$|The {{second step}} is to bind event {{handlers}} to events so that the correct function is called when the event takes place. Graphical editors combine the first two steps: double-click on a button, and the editor creates an (empty) event handler associated with the user clicking the button and opens a <b>text</b> <b>window</b> so you can edit the event handler.|$|E
5000|$|The point-and-click {{approach}} {{means that}} no text commands are used except for occasional speech entered {{in a dialog}} box. Events {{taking place in the}} graphic window, as well {{as the result of the}} [...] "examine" [...] command (similar to [...] "look" [...] in other adventure games) are explained in a <b>text</b> <b>window</b> which also acts as a log of recent gameplay.|$|E
50|$|The Base Services Layer is {{the lowest}} level {{reachable}} by user-side operations; it includes the File Server and User Library, a Plug-In Framework which manages all plug-ins, Store, Central Repository, DBMS and cryptographic services. It also includes the <b>Text</b> <b>Window</b> Server and the Text Shell: the two basic services from which a completely functional port can be created {{without the need for}} any higher layer services.|$|E
50|$|The insert/overtype mode {{toggling}} is not global for {{the computer}} or even for a single application but rather local to the <b>text</b> input <b>window</b> in which the Insert key was pressed.|$|R
40|$|Developing {{distributed}} systems {{is a complex}} task. Even more complex is to explain to other people how a particular distributed system works. Until recently such systems could only be demonstrated by means of scrolling <b>text</b> <b>windows</b> accompanied by pictures that explained {{the architecture of the}} system. Program visualisation can help a lot in gaining more insight in how such systems work, more than scrolling text and static pictures. In this thesis we answer {{the question of how to}} visualise applications in open distributed environments. In our approach we developed a generic method for visualising distributed applications and applied this method to CORBA systems. ...|$|R
2500|$|... – Unicode plain <b>text</b> {{editor for}} <b>Windows</b> 95/98/NT/2000 (with E-o support) ...|$|R
50|$|Gameplay is {{designed}} using a point-and-click interface. The player {{is given a}} toolbar of the functions walk, look, action, and talk as well as inventory items. This was an evolution over earlier games in the King's Quest series in which the player must perform actions by typing commands in a <b>text</b> <b>window.</b> King's Quest VI was the second game in the series to feature this interface, after King's Quest V.|$|E
50|$|Many 1980s 8-bit home {{computers}} feature gutterboxing display mode, because the TV screens normally used as monitors {{at that time}} tended to distort the image near {{the border of the}} screen, {{to such an extent that}} text displayed in that area became illegible. Moreover, due to the overscanned nature of television video, the precise edges of the visible area of the screen varied from television set to television set, so characters near the expected border of the active screen area might be behind the bezel or off the edge of the screen. The Commodore 64, VIC-20, and Commodore 128 (in 40-column mode) featured coloured gutterboxing of the main <b>text</b> <b>window,</b> while the Atari 8-bit family featured a blue <b>text</b> <b>window</b> with a black border. The original IBM PC CGA display adapter was the same, and the monochrome MDA, the predecessor of the CGA, as well as the later EGA and VGA, also featured gutterboxing; this is also called underscanned video. The Fisher-Price PXL-2000 camcorder of the late 1980s recorded a windowboxed image to compensate partially for low resolution.|$|E
50|$|The Windows 8 {{version of}} Paint mostly corrects a long-standing defect from {{previous}} versions involving {{an inability to}} scroll the window when editing in Zoom view over 100%. However, when inserting text in Zoom view, the user cannot move the text beyond the zoomed viewport while the <b>text</b> <b>window</b> is in edit mode with either the mouse or keyboard (scrollbars are disabled). The same version of the app resides {{in the first three}} releases of Windows 10.|$|E
5000|$|Version 2.0: Multiple Bible <b>windows,</b> Bible <b>text</b> formatting, Dockable <b>windows</b> and layouts ...|$|R
5000|$|Basic-256 is {{a simple}} version of BASIC, the code editor, <b>text</b> output <b>window</b> and {{graphics}} editor window are all visible in the same screen. However the successive versions haven been adding new features, namely: ...|$|R
5000|$|... #Caption: Simple Xlib {{application}} {{drawing a}} box and <b>text</b> in a <b>window.</b> Without window manager decorations.|$|R
50|$|Mixing {{multiple}} graphics modes in one {{display is}} done simply by providing different character or map mode {{instructions for the}} desired position on screen. For example, the Atari Operating System graphics modes 1 through 8 offer full screen display, or an option for a four-line <b>text</b> <b>window</b> {{at the bottom of}} the screen. This split screen feature is accomplished using the inherent capabilities of ANTIC and its Display List without any CPU interrupts or custom manipulation of the video hardware.|$|E
5000|$|The [...] key {{was meant}} to lock all {{scrolling}} techniques, and is a remnant from the original IBM PC keyboard. In the original design, [...] was intended to modify {{the behavior of the}} arrow keys. When the [...] mode was on, the arrow keys would scroll the contents of a <b>text</b> <b>window</b> instead of moving the cursor. In this usage, [...] is a toggling lock key like Num Lock or Caps Lock, which have a state that persists after the key is released.|$|E
50|$|Bash is {{a command}} {{processor}} that typically {{runs in a}} <b>text</b> <b>window,</b> where the user types commands that cause actions. Bash can also read and execute commands from a file, called a script. Like all Unix shells, it supports filename globbing (wildcard matching), piping, here documents, command substitution, variables, and control structures for condition-testing and iteration. The keywords, syntax and other basic features of the language are all copied from sh. Other features, e.g., history, are copied from csh and ksh. Bash is a POSIX-compliant shell, but {{with a number of}} extensions.|$|E
2500|$|On December 5, 2011, a {{full-length}} feature cut {{of one of}} the Season 3 trilogies of episodes (the one composed by [...] "Nightsisters," [...] "Monster," [...] and [...] "Witches of the Mist") was released for download on iTunes as an uninterrupted movie that was previously shown at selected screenings in 2010. The three episodes were written by Katie Lucas, who had previously written the Season 1 episode [...] "Jedi Crash" [...] as well as the Season 3 episodes [...] "Sphere of Influence" [...] and [...] "Assassin." [...] A repeat of season one aired in [...] "decoded" [...] episode format. Each installment contained unobtrusive <b>text</b> <b>windows</b> giving supplemental information about the characters and events playing out on screen.|$|R
5000|$|A Tablet PC is {{a special}} {{notebook}} computer that is outfitted with a digitizer tablet and a stylus, and allows a user to handwrite text on the unit's screen. The operating system recognizes the handwriting and converts it into typewritten <b>text.</b> <b>Windows</b> Vista and Windows 7 include personalization features that learn a user's writing patterns or vocabulary for English, Japanese, Chinese Traditional, Chinese Simplified and Korean. The features include a [...] "personalization wizard" [...] that prompts for samples of a user's handwriting and uses them to retrain the system for higher accuracy recognition. This system is distinct from the less advanced handwriting recognition system employed in its Windows Mobile OS for PDAs.|$|R
5000|$|On December 5, 2011, a {{full-length}} feature cut {{of one of}} the Season 3 trilogies of episodes (the one composed by [...] "Nightsisters," [...] "Monster," [...] and [...] "Witches of the Mist") was released for download on iTunes as an uninterrupted movie that was previously shown at selected screenings in 2010. The three episodes were written by Katie Lucas, who had previously written the Season 1 episode [...] "Jedi Crash" [...] as well as the Season 3 episodes [...] "Sphere of Influence" [...] and [...] "Assassin." [...] A repeat of season one aired in [...] "decoded" [...] episode format. Each installment contained unobtrusive <b>text</b> <b>windows</b> giving supplemental information about the characters and events playing out on screen.|$|R
