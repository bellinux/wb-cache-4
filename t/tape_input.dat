20|206|Public
5000|$|... {{external}} storage: 8-track punched <b>tape.</b> <b>Input</b> device: {{paper tape}} reader FS-1501 (up to 1500 symbols/second). Output device: tape punch PL-80 (up to 80 characters per second) ...|$|E
5000|$|Paper <b>tape</b> <b>input</b> at 200 {{characters}} {{per second}} (cps), paper tape output at about 50 cps or teleprinter output at 10 cps. Four magnetic tape units added in 1958 ...|$|E
50|$|Backing {{store was}} {{magnetic}} drum and optionally one-inch-, half-inch- or quarter-inch-wide magnetic <b>tape.</b> <b>Input</b> was from 80-column punched cards and optionally 160-column punched cards and punched paper tape. Output was to 80-column punched cards, line printer, and optionally to punched paper tape.|$|E
50|$|RREAC had a 36-bit {{word and}} 24K words of core store, and used five-hole paper <b>tape</b> for <b>input</b> and output, and {{magnetic}} tape for data storage.|$|R
50|$|The ORACLE pre-dated {{input from}} disks {{and the use}} of punch cards with computers; it used paper <b>tape</b> for <b>input</b> and {{breakage}} of the tape was a frequent problem.|$|R
5000|$|An <b>input</b> <b>tape</b> {{containing}} all the ARGUS {{programs at}} the installation.|$|R
50|$|The Pro Bass {{includes}} {{compression and}} a 9 band graphic equalizer. A foot switchable 3 band equalizer {{can also be}} used to change the EQ during a performance. It has an onboard stereo chorus, overdrive, <b>tape</b> <b>input,</b> tuner output and headphone output.|$|E
50|$|A Schmitt {{trigger circuit}} {{is used on}} the <b>tape</b> <b>input</b> to remove noise. AII types of {{information}} may be saved such as programs, data, arrays, blocks of memory screen displays. After saving, correct recording may be verified before deleting information in memory. Remote motor control of tape recorder is provided; essential for the loading and saving of data files.|$|E
50|$|The {{original}} Mark 1 had to {{be programmed}} by entering alphanumeric characters representing a five-bit value that could be represented on the paper <b>tape</b> <b>input.</b> The engineers {{decided to use the}} simplest mapping between the paper holes and the binary digits they represented, but the mapping between the holes and the physical keyboard was never meant to be a binary mapping. As a result, the characters representing the values from 0-31 (five-bit numbers) looked entirely random, specifically /E@A:SIU½DRJNFCKTZLWHYPQOBG"MXV£.|$|E
50|$|Coding {{and data}} entry {{services}} include editing completed questionnaires, developing a coding scheme, and transcribing the data on to diskettes or magnetic <b>tapes</b> for <b>input</b> into the computer. NRC Data Systems provides such services.|$|R
50|$|The two {{tapes of}} a {{transducer}} are typically {{viewed as an}} <b>input</b> <b>tape</b> and an output tape. On this view, a transducer is said to transduce (i.e., translate) the contents of its <b>input</b> <b>tape</b> to its output tape, by accepting a string on its <b>input</b> <b>tape</b> and generating another string on its output tape. It may do so nondeterministically and it may produce more than one output for each input string. A transducer may also produce no output for a given input string, in which case {{it is said to}} reject the input. In general, a transducer computes a relation between two formal languages.|$|R
5000|$|An <b>input</b> <b>tape</b> {{to contain}} all the machine {{language}} programs - unchanged, new or reassembled.|$|R
50|$|From the announcement:The all-transistorized IBM 1401 Data Processing System {{places the}} {{features}} found in {{electronic data processing}} systems {{at the disposal of}} smaller businesses, previously limited to the use of conventional punched card equipment. These features include: high speed card punching and reading, magnetic <b>tape</b> <b>input</b> and output, high speed printing, stored program, and arithmetic and logical ability.'The 1401 may be operated as an independent system, in conjunction with IBM punched card equipment, or as auxiliary equipment to IBM 700 or 7000 series systems.|$|E
50|$|Data storage was {{strictly}} serial on paper tape, {{and then later}} to magnetic tape: the use of data storage within readily accessible memory was not cost-effective.Significant developments took place in 1959 with IBM announcing the 1401 computer and in 1962 with ICT (International Computers & Tabulators) making delivery of the ICT 1301. Like all machines during this time the core processor together with the peripherals - magnetic tape decks, discs, drums, printers and card and paper <b>tape</b> <b>input</b> and output required considerable space in specially constructed air conditioned accommodation. Often parts of the punched card installation, in particular sorters, were retained to present the card input to the computer in a pre-sort form that reduced the processing time involved in sorting large amounts of data.|$|E
50|$|MOBIDIC was a 36-bit binary machine, {{a common}} word size for early computers. The system used 36-bit data throughout, but stored it as 40-bit values to add {{additional}} sign and parity bits, and two spares. This {{allowed it to}} store the full range from -(1 - 2−36) to +(1 - 2−36). Machines were normally equipped with two parallel banks of core memory with 4096 words each, but was expandable to seven banks maximum. It could support up to 63 tape drives, punch <b>tape</b> <b>input</b> and output, {{as well as a}} Flexowriter. One connection could also be dedicated to sending data to another MOBIDIC system. The tape drives used one of the spare bits in the 40-bit word as a STOP indicator.|$|E
5000|$|Automatically winding {{the tape}} to a <b>tape</b> counter value <b>input</b> on the keypad ("go to").|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThere {{is a need}} for a fast method of analyzing bathythermograph traces and this need is approached by the means of a high-speed digital computer. The theory behind the computer program is outlined. Both synthetic and real data cases are run as examples using both data card decks and magnetic <b>tape</b> <b>inputs.</b> The program has been designed to read digitized bathythermograph traces and then analyze them objectively by Gaussian and non-Gaussian methods for the top, center, and base of the main thermocline. Additionally, such features as multiple thermoclines, inversions, and thermal transients are identified also and their key points are included in the informational data printout. [URL] United States Nav...|$|R
2500|$|... {{there exists}} a polynomial-time Turing machine that halts with f(w) on its <b>tape</b> on any <b>input</b> w.|$|R
50|$|With the Medium System, a {{computer}} could be simultaneously running a batch payroll system, inputting bank checks on a MICR reader sorter, compiling COBOL applications, supporting on-line transactions, and doing test runs on new applications (colloqially called 'the mix', as the console command 'MX' would shows that jobs were executing). It {{was not unusual}} to be running eight or ten programs on a medium-size B2500. Medium System installations often had tape clusters (four drives integrated into a mid-height cabinet) for magnetic <b>tape</b> <b>input</b> and output. Free-standing tape drives were also available, but they were much more expensive. Tape was a major storage medium on these computers, in early days it was often used for father-son batch updating; with additional disk becoming cheaper as time moved on it became relegated as a library/backup device that contained all the data files and sometimes the program files (using the MFSOLT utility) for a particular application or customer/client.|$|E
50|$|The ICT 1301, and its smaller cousin the ICT 1300, used {{germanium}} transistors {{and core}} memory. Backing store was magnetic drum, and optionally one-inch-, half-inch- or quarter-inch-wide magnetic <b>tape.</b> <b>Input</b> was from 80-column punched cards and optionally 160-column punched cards and punched paper tape. Output was to 80-column punched cards, printer and optionally to punched paper tape. The first customer delivery was in 1962, a 1301 {{sold to the}} University of London. One of their main attractions was that they performed British currency calculations (pounds, shillings and pence) in hardware. They also {{had the advantage of}} programmers not having to learn binary or octal arithmetic as the instruction set was pure decimal and the arithmetic unit had no binary mode, only decimal or pounds, shillings and pence. Its clock ran at 1 MHz. The London University machine still exists (January 2006) and is being reinstated to working condition by a group of enthusiasts.|$|E
50|$|The APEXC is an {{incredibly}} simple machine.Instruction and data words are always 32 bits long. The processor uses integer arithmetic with 2's complement representation. Addresses are 10 bits long. The APEXC has no RAM, except for a 32-bit accumulator and a 32-bit data register (used along with the 32-bit accumulator to implement 64-bit shift instructions and hold the 64-bit result of a multiplication). Instructions and data are stored in two magnetic drums, {{for a total of}} 32 circular magnetic tracks of 32 words. Since the rotation rate is 3750rpm (62.5 rotations per second), the program execution speed can go from as high as the theoretical maximum of 1 kIPS to lower than 100IPS if program instructions and data are not contiguous. Nowadays, many say a pocket calculator is faster.One oddity {{is that there is no}} program counter: each machine instruction includes the address of the next instruction. This design may sound weird, but it is the only way to achieve optimal performance with this cylinder-based memory.The machine code is made of 15 instructions only, namely addition, subtraction, multiplication, load (3 variants), store (2 variants), conditional branch, right arithmetic bit shift, right bit rotation, punched-card input, punched-card output, machine stop, and bank-switching (which is never used on the APEXC, since it only has 1024 words of storage, and addresses are 10-bit-long). A so-called vector mode enables to repeat the same operation 32 times with 32 successive memory locations. Note the lack of bitwise and/or/xor and division. Also, note the lack of indirect addressing modes: dynamic modification of opcodes is the only way one may simulate it.Another oddity is that the memory bus and the ALU are 1-bit-wide. There is a 64 kHz bit-clock and a 2 kHz word-clock, and each word memory and arithmetic operation is decomposed into 32 1-bit memory and arithmetic operations: this takes 32 bit cycles, for a total of 1 word cycle.The processor is fairly efficient: most instructions take only 2 word cycles (1 for fetch, 1 for read operand and execute), with the exception of stores, shifts and multiplications. The APEXC CPU qualifies as RISC; there is no other adequate word.Note there is no read-only memory (ROM), and therefore no bootstrap loader or default start-up program whatsoever. It is believed that no executive or operating system was ever written for the APEXC, although there were subroutine libraries of sorts for common arithmetic, I/O and debug tasks. Operation of the machine is normally done through a control panel which allows the user to start, stop and resume the central processing unit, and to alter registers and memory when the CPU is stopped. When starting the machine, the address of the first instruction of the program to be executed must be entered in the control panel, then the run switch must be pressed. Most programs end with a stop instruction, which enables the operator to check the state of the machine, possibly run some post-mortem debugging procedures (a core dump routine is described in an APEXC programming book), then enter the address of another program and run it.Two I/O devices were supported: a paper tape reader, and a paper tape puncher. The puncher output could be fed to a printer ('teletyper') unit when desirable. Printer output is emulated and is displayed on screen. <b>Tape</b> <b>input</b> was either computer-generated by the APEXC, or hand-typed with a special 32-key keyboard (each tape row had 5 data holes (<-> bits), which makes 32 differentvalues).|$|E
50|$|Jobs {{were read}} from cards or paper tape to {{temporary}} files on magnetic disk or <b>tape</b> by an <b>input</b> module.|$|R
40|$|Abst rac t. We {{prove the}} first superlinear lower bound for a concrete, {{polynomial}} time recognizable d cision problem on a Taring machine with one work tape and a two-way <b>input</b> <b>tape</b> (also called off-line 1 -tape Turing machine). In particular, for offline Turing machines {{we show that}} two tapes are better than one and that three pushdown stores are better than two (both in the deterministic and in the nondeterministic case). Key words, off-line 1 -tape Turing machines; two tapes; lower bounds; time; nondeterminism. Subject classifications. 68 Q 05, 68 Q 25. 1. In t roduct ion A 1 -tape off-line Turing machine (see Hennie 1965, p. 166) is a Turing machine (TM) with one work tape and an additional two-way <b>input</b> <b>tape,</b> i. e., an <b>input</b> <b>tape</b> with end markers on which the associated read-only input head can move without restriction in both directions. These TM's are used as the standard model {{for the analysis of}} the space complexity of TM-computations. In addi-tion, they are of interest as an intermediate model between the relatively slow 1 -tape TM without <b>input</b> <b>tape</b> and the relatively powerful 2 -tape TM. No non-trivial ower bounds are known for the recognition of polynomial time computable languages on 2 -tape Turing machines. On the other hand, lower bound arguments for concrete languages on restricted TM's have pro-gressed from 1 -tape TM's without <b>input</b> <b>tape</b> (Hennie 1965, Rabin 1963) t...|$|R
5000|$|The {{keyboard}} of the CPT 4200 had action keys for [...] "skip" [...] and [...] "read" [...] and mode keys for [...] "word", [...] "line", [...] "paragraph," [...] and [...] "page." [...] Pressing [...] "read" [...] transferred a word, line, paragraph, or page, {{depending on}} which mode key had been selected. from the <b>input</b> <b>tape</b> to both the paper and the output tape. Line boundaries recorded on the <b>input</b> <b>tape</b> were ignored or retained depending {{on whether or not}} an [...] "adjust" [...] key had been selected. Alternatively, pressing [...] "skip" [...] moved past the corresponding amount of text on the <b>input</b> <b>tape</b> without sending it to the typewriter or to the output tape. It acted like a delete key, though text was not actually deleted, only bypassed.|$|R
40|$|PDPGENER~enables {{the user}} to {{generate}} original program listings and source decks from machine readable PDP- 9 /L computer object code in either card or paper tape form. The reconstructed listings contain alphanumeric labelling and complete cross reference tables. PDPGENER may {{also be used to}} update and punch new card object decks from card or paper <b>tape</b> <b>input,</b> thus eliminating slow paper <b>tape</b> <b>input</b> to the PDP- 9 /L. Users of other small computers may also edit object decks by specifying the object card format to PDPGENER...|$|E
40|$|This report {{describes}} a computer subprogram for magnetic <b>tape</b> <b>input</b> and {{control on the}} IBM 360. The subprogram is written in OS/ 360 assembler language and is compatible with both Fortran and PL/ 1. This subprogram gives the Fortran or PL/ 1 programmer more direct control over read errors, ends-of-file, and extremely short and long blocks. Peer reviewed: NoNRC publication: Ye...|$|E
40|$|This paper {{describes}} a program written {{to analyze the}} results of educational tests on an interactive computer. The program accepts <b>tape</b> <b>input</b> from an optical scanner. Included in the output are (a) score lists; (b) a frequency distribution, histogram, and statistics for the total scores; (c) measures of item difficulty and discrimination; (d) option analysis; and (e) simple estimates of latent trait mental test parameters...|$|E
50|$|The EF86 is {{much less}} noisy than other pentodes, but {{slightly}} noisier than some triodes at about 2 µV equivalent input noise to 10 kHz. Although used in circuits such as <b>tape</b> recorder <b>input</b> stages and instrument amplifiers, microphony can be a problem, even when mounted in a vibration-reducing valve holder.|$|R
5000|$|For a three-tape quantum Turing machine (one <b>tape</b> {{holding the}} <b>input,</b> a second <b>tape</b> holding {{intermediate}} calculation results, {{and a third}} tape holding output): ...|$|R
40|$|Could system {{integration}} and cooperation be improved with agentified enterprise components? he ubiquity of the Internet enables enterprises {{to line up}} into virtual alliances with loosely coupled business processes organized along the axis of the virtual value chain, resulting in competition between rather than within vertical industries. This highly challenging process has recently evolved through several levels of integration from isolated legacy silos of enterprise information to agile and cooperative information systems. Batch data transfers have traditionally been accomplished through nightly magnetic <b>tape</b> <b>inputs</b> in banking systems. These have evolved into real-time point-to-point interfaces extensively used in banking, health care, and manufacturing systems to coordinate data flow between systems. This traditional Enterprise Application Integration (EAI) is tedious, expensive, and inflexible. More recently, business object components {{have been used to}} provide a services-oriented interface to external systems and allow interoperability between systems. Tightl...|$|R
40|$|A color {{enhancement}} {{system designed}} for the Applications Technology Satellite (ATS) spin scan experiment has been adapted {{for the analysis of}} Nimbus infrared radiation measurements. For a given scene recorded on magnetic tape by the Nimbus scanning radiometers, a virtually unlimited number of color images can be produced at the ATS Operations Control Center from a color selector paper <b>tape</b> <b>input.</b> Linear image interpolation has produced radiation analyses in which each brightness-color interval has a smooth boundary without any mosaic effects. An annotated latitude-longitude gridding program makes it possible to precisely locate geophysical parameters, which permits accurate interpretation of pertinent meteorological, geological, hydrological, and oceanographic features. Includes errata sheets. Prepared at Goddard Space Flight Center. Cover title. Includes bibliographical references (p. 7 - 8). A color enhancement system {{designed for the}} Applications Technology Satellite (ATS) spin scan experiment has been adapted for the analysis of Nimbus infrared radiation measurements. For a given scene recorded on magnetic tape by the Nimbus scanning radiometers, a virtually unlimited number of color images can be produced at the ATS Operations Control Center from a color selector paper <b>tape</b> <b>input.</b> Linear image interpolation has produced radiation analyses in which each brightness-color interval has a smooth boundary without any mosaic effects. An annotated latitude-longitude gridding program makes it possible to precisely locate geophysical parameters, which permits accurate interpretation of pertinent meteorological, geological, hydrological, and oceanographic features. Mode of access: Internet...|$|E
40|$|ITEMAN is a {{comprehensive}} item and test/scale analysis pro-gram. Special features include recoding of item responses, accept-ance of card or <b>tape</b> <b>input</b> from optical scoring machines, and analysis of scales with up to 10 response alternatives. The program can be executed with as few as three control cards. The output provides item statistics, test/scale statistics, a frequency distribution and histogram, and item response analysis. Written in ANSI FOR-TRAN, the program is compatible with machines such as the IBM 360 / 70, UNIVAC 1108, and CDC 6600. ITEMAN will accommodate a test with up to 300 items divided into 50 subtests. The number of cases is restricted to 99, 999...|$|E
40|$|TRIPS (TALON Reporting and Information Processing System) is an {{interactive}} software system for generating reports to NLM on regional medical library network activity and constitutes {{a vital part}} of a network management information system (NEMIS) for the South Central Regional Medical Library Program. Implemented on a PDP-lOfSRU 1108 interfaced system, TRIPS accepts paper <b>tape</b> <b>input</b> describing network transactions and generates output statistics on disposition of requests, elapsed time for completing filled requests, time to clear unfilled requests, arrival time distribution of requests by day of month, and various other measures of activity andjor performance. Emphasized in the TRIPS design are flexibility, extensibility, and system integrity. Processing costs, neglecting preparation of input which may be accomplished in several ways, are estimated at $. 05 per transaction, a transaction being the transmittal of a message from one library to another...|$|E
5000|$|An <b>input</b> <b>tape</b> {{containing}} {{a library of}} macros. These macros would be added into the ARGUS code during assembly and before translation into machine code.|$|R
40|$|AbstractAn {{off-line}} {{machine is}} a Turing machine {{with a separate}} read-only <b>input</b> <b>tape.</b> Such a machine {{is said to have}} a ‘Brownian’ input head if it has no control over and cannot observe the moves of the read-only head scanning the <b>input</b> <b>tape.</b> It is shown in this note that the binary languages (i. e., languages over a two-symbol alphabet) recognized by such machines are all regular. The proof is not constructive and relies heavily on the so-called ‘finite sequences theorem’ in the theory of well-partial-ordering...|$|R
50|$|File 1 just emptied {{and became}} the new output file. One run is left on each <b>input</b> <b>tape,</b> and merging those runs {{together}} will make the sorted file.|$|R
