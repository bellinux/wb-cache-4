593|774|Public
2500|$|A <b>triangle</b> <b>mesh</b> {{object is}} {{commonly}} used in 3D body modeling. Normally the collision function is a triangle to triangle intercept or a bounding shape associated with the mesh. [...] A triangle centroid is a center of mass location such that it would balance on a pencil tip. [...] The simulation need only add a centroid dimension to the physics parameters. [...] Given centroid points in both object and target {{it is possible to}} define the line segment connecting these two points.|$|E
5000|$|... #Caption: Gouraud-shaded <b>triangle</b> <b>mesh</b> {{using the}} Phong {{reflection}} model ...|$|E
5000|$|By {{applying}} Petersen's theorem to {{the dual}} graph of a <b>triangle</b> <b>mesh</b> and connecting pairs of triangles {{that are not}} matched, one can decompose the mesh into cyclic strips of triangles. With some further transformations it {{can be turned into}} a single strip, and hence gives a method for transforming a <b>triangle</b> <b>mesh</b> such that its dual graph becomes hamiltonian.|$|E
40|$|In {{the last}} years <b>triangle</b> <b>meshes</b> have become {{increasingly}} popular and are nowad ays intensively used in many different areas of computer graphics and geometry p rocessing. In classical CAGD irregular <b>triangle</b> <b>meshes</b> developed into a valuable alternative to traditional spline surfaces, since their conceptual simplicity a llows for more flexible and highly efficient processing. This course discusses the whole geometry processing pipeline based on <b>triangle</b> <b>meshes...</b>|$|R
40|$|Ray tracing {{acceleration}} {{methods are}} usually applied to scenes defined by <b>triangle</b> <b>meshes.</b> These scenes contain {{a large number}} of triangles. In contrast, CSG scenes contain orders of magnitude less more complex primitives primitives. In this thesis we will present the Operation KD-tree. This acceleration method applies the KD-tree [...] - modern acceleration method developed for <b>triangle</b> <b>meshes</b> [...] - directly to the CSG scene. This is done on the premise, that the huge reduction in primitive count will yield enhanced performance, when rendering a scene using CSG instead of <b>triangle</b> <b>meshes...</b>|$|R
40|$|The {{importance}} of <b>triangle</b> <b>meshes</b> {{with a special}} kind of connectivity, the so-called subdivision connectivity is still growing. Therefore it is important to develop effi-cient algorithms for converting a given mesh with arbi-trary connectivity into one with subdivision connectivity. In this paper we have focused on 2 -manifold <b>triangle</b> <b>meshes</b> with boundary and no holes. We discuss the {{importance of}} a parametrization with minimal distortion for the pro-cess of remeshing. Based on the concept of most isometric parametrizations we have developed a remeshing algorithm for the given class of <b>triangle</b> <b>meshes.</b> A series of examples shows the advantages of our approach. 1...|$|R
5000|$|Collision shapes include: sphere, box, cylinder, cone, {{convex hull}} using GJK, non-convex and <b>triangle</b> <b>mesh</b> ...|$|E
5000|$|... #Caption: An {{example of}} normal mapping used to add detail {{to a low}} poly (500 <b>triangle)</b> <b>mesh</b> ...|$|E
5000|$|Shape types: Convex polyhedron, box, sphere, cone, cylinder, capsule, compound, and static <b>triangle</b> <b>mesh</b> with auto {{deactivation}} mode ...|$|E
40|$|International audienceGeometry processing, or mesh processing, is {{a fast-growing}} area of {{research}} that uses concepts from applied mathematics, computer science, and engineering to design efficient algorithms for the acquisition, reconstruction, analysis, manipulation, simulation, and transmission of complex 3 D models. Applications of geometry processing algorithms already cover {{a wide range of}} areas from multimedia, entertainment, and classical computer-aided design, to biomedical computing, reverse engineering, and scientific computing. Over the last several years, <b>triangle</b> <b>meshes</b> have become increasingly popular, as irregular <b>triangle</b> <b>meshes</b> have developed into a valuable alternative to traditional spline surfaces. This book discusses the whole geometry processing pipeline based on <b>triangle</b> <b>meshes.</b> The pipeline starts with data input, for example, a model acquired by 3 D scanning techniques. This data can then go through processes of error removal, mesh creation, smoothing, conversion, morphing, and more. The authors detail techniques for those processes using <b>triangle</b> <b>meshes...</b>|$|R
40|$|<b>Triangle</b> <b>meshes</b> {{are widely}} used in {{representing}} surfaces in computer vision and computer graphics. Although 2 D image processing-based edge detection techniques have been popular in many application areas, they are not well developed for surfaces represented by <b>triangle</b> <b>meshes.</b> This paper proposes a robust edge detection algorithm for <b>triangle</b> <b>meshes</b> and its applications to surface segmentation and adaptive surface smoothing. The proposed edge detection technique is based on eigen analysis of the surface normal vector field in a geodesic window. To compute the edge strength of a certain vertex, the neighboring vertices in a specified geodesic distance are involved. Edge information are used further to segment the surfaces with watershed algorithm and to achieve edgepreserved, adaptive surface smoothing. The proposed algorithm is novel in robustly detecting edges on <b>triangle</b> <b>meshes</b> against noise. The 3 D watershed algorithm is an extension from previous work. Experimental results on surfaces reconstructed from multi-view real range images are presented...|$|R
40|$|Remeshing {{triangulated}} surfaces with optimal parameterizations The use of polygonal <b>meshes,</b> especially <b>triangle</b> <b>meshes,</b> is manifold, {{but a lot}} of algorithms {{require the}} mesh to be structured in a certain way and cannot be applied to an arbitrarily structured mesh. The process of replacing an arbitrarily structured mesh by a structured one is called remeshing and the most important class of structered <b>meshes</b> are <b>triangle</b> <b>meshes</b> with subdivision connectivity. In this paper we present an algorithm for remeshing <b>triangle</b> <b>meshes</b> with boundary that is based on parameterizing the mesh over a planar domain. We discuss what kind of parameterizations are optimal for the purpose of remeshing and show the advantages of our approach in a series of examples...|$|R
50|$|A nonobtuse <b>triangle</b> <b>mesh</b> is {{composed}} {{of a set of}} triangles in which no angle is obtuse, i.e. greater than 90°. If each (triangle) face angle is strictly less than 90°, then the <b>triangle</b> <b>mesh</b> is said to be acute. The immediate benefits of a nonobtuse or acute mesh include more efficient and more accurate geodesic computation using fast marching, and guaranteed validity for planar mesh embeddings via discrete harmonic maps.|$|E
50|$|The fast marching method can {{be viewed}} as a {{continuous}} version of Dijkstra's algorithm which computes the geodesic distance on a <b>triangle</b> <b>mesh.</b>|$|E
50|$|Triangle strips are efficient, {{however the}} {{drawback}} {{is that it}} may not be obvious how or convenient to translate an arbitrary <b>triangle</b> <b>mesh</b> into strips.|$|E
40|$|Highly {{detailed}} geometric {{models are}} rapidly becoming commonplace in computer graphics. These models, often represented as complex <b>triangle</b> <b>meshes,</b> challenge rendering performance, transmission bandwidth, and storage capacities. This paper introduces the progressive mesh (PM) representation, a new scheme for storing and transmitting arbitrary <b>triangle</b> <b>meshes.</b> This efficient, lossless, continuous-resolution representation addresses several practical problems in graphics: smooth geomorphing of level-of-detail approximations, progressive transmission, mesh compression, and selective refinement. In addition...|$|R
40|$|A simple image coder {{based on}} <b>triangle</b> <b>meshes</b> is proposed, and several mesh-generation methods are presented, some {{previously}} proposed and some new. Then, our coder {{is used to}} evaluate the performance of the various mesh-generation methods. One of our proposed mesh-generation schemes, inspired by the work of Garland and Heckbert, is shown to perform best. The performance of linear and Clough-Tocher interpolation is also compared. Linear interpolation is found to perform better than Clough-Tocher interpolation, with the latter performing more poorly largely due to overshoot/undershoot near image edges. Index Terms — image coding, <b>triangle</b> <b>meshes,</b> mesh generation, interpolation 1...|$|R
5000|$|Procedural {{emitters}} {{to apply}} emitter materials to entities {{that are not}} <b>triangle</b> <b>meshes</b> - such as hair/fur, particles and grass.|$|R
50|$|A <b>triangle</b> <b>mesh</b> {{is a type}} of {{polygon mesh}} in {{computer}} graphics. It comprises a set of triangles (typically in three dimensions) that are connected by their common edges or corners.|$|E
50|$|The {{rest of the}} file, {{which is}} {{described}} in the file format specification, contains the <b>triangle</b> <b>mesh</b> information. This includes a compressed triangle index array and compressed vertex arrays (one array for each vertex attribute).|$|E
5000|$|... 3D {{models are}} most-often {{represented}} as triangulated polyhedra forming a <b>triangle</b> <b>mesh.</b> Non triangular surfaces {{can be converted}} to an array of triangles through tessellation. Attributes from the vertices are typically interpolated across mesh surfaces.|$|E
40|$|This {{document}} is {{the support of}} a SIGGRAPH 2007 course. In the last years <b>triangle</b> <b>meshes</b> have become increasingly popular and are nowadays intensively used in many different areas of computer graphics and geometry processing. In classical CAGD irregular <b>triangle</b> <b>meshes</b> developed into a valuable alternative to traditional spline surfaces, since their conceptual simplicity allows for more flexible and highly efficient processing. Moreover, the consequent use of <b>triangle</b> <b>meshes</b> as surface representation avoids error-prone conversions, e. g., from CAD surfaces to mesh-based input data of numerical simulations. Besides classical geometric modeling, other major areas frequently employing <b>triangle</b> <b>meshes</b> are computer games and movie production. In this context geometric models are often acquired by 3 D scanning techniques and have to undergo post-processing and shape optimization techniques before being actually used in production. This course discusses the whole geometry processing pipeline based on <b>triangle</b> <b>meshes.</b> We will first introduce general concepts of surface representations and point out the advantageous properties of <b>triangle</b> <b>meshes</b> in Chapter 2, and present efficient data structures for their implementation in Chapter 3. The different sources of input data and types of geometric and topological degeneracies and inconsistencies are described in Chapter 4, as well as techniques for their removal, resulting in clean two-manifold meshes suitable for further processing. Mesh quality criteria measuring geometric smoothness and element shape together with the corresponding analysis techniques are presented in Chapter 6. Mesh smoothing reduces noise in scanned surfaces by generalizing signal processing techniques to irregular <b>triangle</b> <b>meshes</b> (Chapter 7). Similarly, the underlying concepts from differential geometry are useful for surface parametrization as well (Chapter 8). Due to the enormous complexity of meshes acquired by 3 D scanning, mesh decimation techniques are required for error-controlled simplification (Chapter 9). The shape of triangles, which is important for the robustness of numerical simulations, can be optimized by general remeshing methods (Chapter 10). After optimizing meshes with respect to the different quality criteria, we finally present techniques for intuitive and interactive shape deformation (Chapter 11). Since solving linear systems is a commonly required component for many of the presented mesh processing algorithms, we will discuss their efficient solution and compare several existing libraries in Chapter 12...|$|R
5000|$|... <b>triangle</b> <b>meshes</b> or polygon meshes are {{a common}} unit from which scenes are {{composed}}, which are in turn composed of connected vertices.|$|R
40|$|We {{describe}} {{a method for}} constructing multi resolution models (MRM) of complex <b>triangle</b> <b>meshes</b> and show how these representations {{can be used to}} create view dependent adaptive approximations of <b>triangle</b> <b>meshes</b> on the fly with guaranteed approximation error. We use a modified one-sided Hausdorff distance as a geometrically meaningful error value between the original and the simplified mesh. Since this distance is parameterization-independent, its use as error measure is superior {{to the use of the}} L 1 -Norm between parameterized surfaces. The proposed multi-resolution model supports progressive transmission, smooth geomorphing of different levels of detail approximations, mesh compression and selective error tolerance editing. Various examples demonstrate the excellent results that were achieved by this new method with <b>triangle</b> <b>meshes</b> from different application areas such as volume rendering, terrain modeling and the approximations of parameterized surfaces. CR Descriptors: [...] ...|$|R
50|$|Due to {{the many}} steps of data {{processing}} that are required for implementing the compression, interacting with the file format directly is usually more complex than interacting with other, uncompressed <b>triangle</b> <b>mesh</b> file formats (for instance STL and PLY).|$|E
5000|$|Various {{methods of}} storing {{and working with}} a mesh in {{computer}} memory are possible. With the OpenGL and DirectX APIs there are two primary ways of passing a <b>triangle</b> <b>mesh</b> to the graphics hardware, triangle strips and index arrays.|$|E
50|$|Creation of the {{textured}} 3D models requires {{definition of}} the relationship between all the <b>triangle</b> <b>mesh</b> vertices and the corresponding image points. Collinearity condition can be used in order to find that relationship, but image interior and exterior orientation parameters need to be known.|$|E
5000|$|OpenCTM is an {{open source}} project that has evolved around a {{technology}} for compressing 3D <b>triangle</b> <b>meshes.</b> The technology {{is divided into three}} different parts: ...|$|R
40|$|Abstract Surface <b>triangle</b> <b>meshes</b> {{and volume}} data are two {{commonly}} used representations of digital geometry. Converting from <b>triangle</b> <b>meshes</b> to volume data is challenging, since <b>triangle</b> <b>meshes</b> often contain defects such as small holes, internal structures, or self-intersections. In the extreme case, {{we may be}} simply presented {{with a set of}} arbitrarily connected triangles, a “triangle soup”. This paper presents a novel method to generate volume data represented as an octree from a general 3 D triangle soup. Our motivation is the Faraday cage from electrostatics. We consider the input triangles as forming an approximately closed Faraday cage, and set its potential to zero. We then introduce a second conductor surrounding it, and give it a higher constant potential. Due to the electrostatic shielding effect, the resulting electric field approximately lies in that part of space outside the shape implicitly determined by the triangle soup. Unlike previous approaches, our metho...|$|R
40|$|In a {{broad range}} of {{computer}} graphics applications the representation of geometric shape is based on <b>triangle</b> <b>meshes.</b> General purpose data structures for polygonal meshes typically provide fast access to geometric objects (e. g. points) and topologic entities (e. g. neighborhood relation) but the memory requirements are rather high due to the many special configurations. In this paper we present a new data structure which is specifically designed for <b>triangle</b> <b>meshes.</b> The data structure enables to trade memory for access time by either storing internal references explicitly or by locally reconstructing them on demand. The trade-off can be hidden from the programmer by an object-oriented API and automatically adapts to the available hardware resources or the complexity of the mesh (scalability). 1 Introduction Many algorithms use <b>triangle</b> <b>meshes</b> for representing geometric surfaces. The simple triangle can serve as a basic surface primitive to adaptively approximate smooth freefo [...] ...|$|R
50|$|PolyMLib™ is an {{object-oriented}} software toolkit {{that provides a}} set of objects and corresponding methods to repair, optimize, review and edit <b>triangle</b> <b>mesh</b> models. It {{can be used to}} analyze surface properties, such as smoothness and curvature distribution, as well as to repair and optimize surface meshes.|$|E
50|$|The Open Dynamics Engine is {{used for}} {{simulating}} the dynamic interactions between bodies in space. It is not tied to any particular graphics package although it includes a basic one called drawstuff. It supports several geometries: box, sphere, capsule (cylinder capped with hemispheres), <b>triangle</b> <b>mesh,</b> cylinder and heightmap.|$|E
5000|$|While point clouds can be {{directly}} rendered and inspected, [...] usually point clouds themselves are generally not directly usable in most 3D applications, and therefore are usually converted to polygon mesh or <b>triangle</b> <b>mesh</b> models, NURBS surface models, or CAD models through a process {{commonly referred to as}} surface reconstruction.|$|E
40|$|<b>Triangle</b> <b>meshes</b> are {{a popular}} {{representation}} of surfaces in computer graphics. Our {{aim is to}} detect feature on such surfaces. Feature regions distinguish themselves by high curvature. We are using discrete curvature analysis on <b>triangle</b> <b>meshes</b> to obtain curvature values in every vertex of a mesh. These values are then thresholded resulting in a so called binary feature vector. By adapting morphological operators to <b>triangle</b> <b>meshes,</b> noise and artifacts can {{be removed from the}} feature. We introduce an operator that determines the skeleton of the feature region. This skeleton can then be converted into a graph representing the desired feature. Therefore a description of the surface's geometrical characteristics is constructed. Introduction There are several different representations for surfaces used in computer graphics, ranging e. g. from parametric surfaces defined as functions over a parameter domain to surfaces described by constructive solid geometry that allows combin [...] ...|$|R
40|$|In {{the field}} of reverse {{engineering}} one often faces the problem of repairing triangulations with holes, intersecting triangles, Möbius-band-like structures or other artifacts. In this paper we present a novel approach for generating manifold <b>triangle</b> <b>meshes</b> from such incomplete or imperfect triangulations. Even for heavily damaged triangulations, representing closed surfaces with arbitrary genus, our algorithm results in correct manifold <b>triangle</b> <b>meshes.</b> The algorithm {{is based on a}} randomized optimization technique from probability calculus called simulated annealing. Keywords: CAD-repair; repairing triangulations; simulated annealing. 1991 Mathematics Subject Classification: 52 B 70, 60 J 05 1...|$|R
40|$|This paper {{presents}} a usage of algorithms for progressive compression of <b>triangle</b> <b>meshes</b> {{in a network}} applications with a single server and is composed from two major parts. First one describes algorithm proposed by Alliez and Desbrun, which is used for progressive compression and reconstruction of <b>triangle</b> <b>meshes.</b> The second part considers our experience with distribution the data between clients using a single server. Different distribution rules were implemented and tested. Because server can send data only to one client at the time, this approach is suitable only for small server applications...|$|R
