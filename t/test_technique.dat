684|9959|Public
2500|$|The [...] {{of a given}} vehicle {{will vary}} {{depending}} on which wind tunnel it is measured in. Variations of up to 5% have been documented and variations in <b>test</b> <b>technique</b> and analysis can also make a difference. So if the same vehicle with a [...] was measured in a different tunnel it could be anywhere from [...] to [...]|$|E
50|$|Pterygium (conjunctiva) can be {{diagnosed}} without {{need for a}} specific exam, however corneal topography is a practical <b>test</b> (<b>technique)</b> as the condition worsens.|$|E
50|$|While the {{software}} is being tested, the tester learns things that together with experience and creativity generates new good tests to run. Exploratory testing is often {{thought of as a}} black box testing technique. Instead, those who have studied it consider it a test approach that can be applied to any <b>test</b> <b>technique,</b> at any stage in the development process. The key is not the <b>test</b> <b>technique</b> nor the item being tested or reviewed; the key is the cognitive engagement of the tester, and the tester's responsibility for managing his or her time.|$|E
40|$|Mechanical <b>testing</b> <b>techniques,</b> {{electrical}} and electronics <b>testing</b> <b>techniques,</b> thermal <b>testing</b> <b>techniques,</b> and optical <b>testing</b> <b>techniques</b> {{are the subject}} of the compilation which provides technical information and illustrations of advanced testing devices. Patent information is included where applicable...|$|R
40|$|The {{choice of}} a {{software}} <b>testing</b> <b>technique</b> can have severe implications on the quality and efficiency of a testing project. One of the fundamental steps in managing a testing project should be selecting an effective <b>testing</b> <b>technique.</b> This paper discusses a methodology {{that can be used}} for experimentally assessing the effectiveness of two or more <b>testing</b> <b>techniques</b> in practice. The work should help quality managers and related researchers to learn how two or more <b>testing</b> <b>techniques</b> can be compared experimentally when one needs to choose an effective <b>testing</b> <b>technique</b> for a project. The primary motivation behind this paper is to advocate selecting an effective <b>testing</b> <b>technique</b> in practice in testing projects and providing a framework that can be readily adopted in practical testing projects. The <b>testing</b> <b>techniques</b> used to demonstrate the above are trivial in practice, and we did not intend to report the results of their comparisons here...|$|R
40|$|Where the development, understanding, and {{assessment}} of software testing and regression testing tech-niques are concerned, controlled experimentation is an indispensable research methodology. Obtaining the infrastructure necessary to support rigorous controlled experimentation with <b>testing</b> <b>techniques,</b> however, is dif£cult and expensive. As a result, progress in experimentation with <b>testing</b> <b>techniques</b> has been slow, and empirical data on the costs and effectiveness of <b>testing</b> <b>techniques</b> remains relatively scarce. To help address this problem, we have been designing and constructing infrastructure to support controlled experimentation with software testing and regression <b>testing</b> <b>techniques.</b> This paper reports on the challenges faced by re-searchers experimenting with <b>testing</b> <b>techniques,</b> including those that inform the design of our infrastructure. The paper then describes the infrastructure that we are creating {{in response to these}} challenges, and that we are now making available to other researchers, and discusses the impact that this infrastructure has and can be expected to have on controlled experimentation with <b>testing</b> <b>techniques...</b>|$|R
50|$|Some {{critics have}} argued that Diop's melanin dosage <b>test</b> <b>technique</b> lacks {{sufficient}} evidence. They contend the test is inappropriate to apply to ancient Egyptian mummies, due {{to the effects of}} embalming and deterioration over time.|$|E
50|$|HALT is a <b>test</b> <b>technique</b> called test-to-fail, where {{a product}} is tested until failure. HALT does not help to {{determine}} or demonstrate the reliability value or failure probability in field. Many accelerated life tests are test-to-pass, meaning {{they are used to}} demonstrate the product life or reliability.|$|E
5000|$|The [...] {{of a given}} vehicle {{will vary}} {{depending}} on which wind tunnel it is measured in. Variations of up to 5% have been documented and variations in <b>test</b> <b>technique</b> and analysis can also make a difference. So if the same vehicle with a [...] was measured in a different tunnel it could be anywhere from [...] to [...]|$|E
40|$|The use of {{evidence}} based software engineering (EBSE) {{and the use}} of systematic literature reviews (SLRs) in software engineering has been growing in the last years. In 2004 Juristo et. al. analyzed the maturity level of the knowledge about <b>testing</b> <b>techniques</b> by examining the previous 25 years (1978 - 2004) of <b>Testing</b> <b>Technique</b> Experiments. We believe it is time to update {{the state of the art}} in <b>testing</b> <b>technique</b> experiments by using a SLR. Objective: To analyzed the maturity level of the knowledge about <b>testing</b> <b>techniques</b> by examining <b>testing</b> <b>technique</b> experiments between years 2000 and 2013. This work tries to complement the previous analysis of Juristo et. al. in 2004 where they analyzed the maturity level of the knowledge about <b>testing</b> <b>techniques</b> by examining the previous 25 years (1978 - 2004). Method: We undertook a systematic review of papers <b>testing</b> <b>techniques</b> experiments carried out between years 2000 and 2013. Studies were classified with respect to the <b>testing</b> <b>technique</b> family and grouped by their affinity as regards the techniques studied. Results: In the search and selection process we identified 22 relevant papers reporting 26 <b>testing</b> <b>techniques</b> published in Software Engineering conferences and journals between 2000 and mid- 2013, after data extraction we reduce this to a list of 16 primary studies belong to four families. Based on this primary studies we extracted and analyzed the necessary information to compare them between each other’s in order to generate our appreciations. Systematic review; Systematic literature review; Mapping study; Experiment; Experimental study; Experimental comparison; Experimental analysis; Experimental evidence; Experimental setting; Experimentation; Empirical study; Empirical evaluation; Experimen...|$|R
40|$|Mutation {{analysis}} is widely employed {{to evaluate the}} effectiveness of various software <b>testing</b> <b>techniques.</b> In most situations, mutation operators are uniformly applied to the original programs, while the faults tend to be clustered in practice. This may result in the inappropriate simulation of faults, and thus cannot deliver the reliable evaluation results. To overcome this, we propose a distribution-aware mutation analysis technique and conducted empirical studies to investigate the impact of the mutation distribution on the effectiveness evaluation of <b>testing</b> <b>techniques.</b> As an illustration, we select the commonly practiced random <b>testing</b> <b>technique</b> and two versions of dynamic random <b>testing</b> <b>techniques</b> and apply them to testing Web services. Results of empirical studies suggest that the mutation distribution significantly affects the evaluation results. This observation further indicates that the effectiveness of <b>testing</b> <b>techniques</b> previously evaluated with the uniform mutation analysis needs further realignments. © 2012 IEEE. IEEE; IEEE Computer SocietyMutation {{analysis is}} widely employed {{to evaluate the effectiveness}} of various software <b>testing</b> <b>techniques.</b> In most situations, mutation operators are uniformly applied to the original programs, while the faults tend to be clustered in practice. This may result in the inappropriate simulation of faults, and thus cannot deliver the reliable evaluation results. To overcome this, we propose a distribution-aware mutation analysis technique and conducted empirical studies to investigate the impact of the mutation distribution on the effectiveness evaluation of <b>testing</b> <b>techniques.</b> As an illustration, we select the commonly practiced random <b>testing</b> <b>technique</b> and two versions of dynamic random <b>testing</b> <b>techniques</b> and apply them to testing Web services. Results of empirical studies suggest that the mutation distribution significantly affects the evaluation results. This observation further indicates that the effectiveness of <b>testing</b> <b>techniques</b> previously evaluated with the uniform mutation analysis needs further realignments. © 2012 IEEE...|$|R
40|$|Where the creation, understanding, and {{assessment}} of software testing and regression <b>testing</b> <b>techniques</b> are concerned, controlled experimentation is an indispens-able research methodology. Obtaining the infrastructure necessary to support such experimentation, however, is difficult and expensive. As a result, progress in exper-imentation with <b>testing</b> <b>techniques</b> has been slow, and empirical data on the costs and effectiveness of tech-niques remains relatively scarce. To help address this problem, we have been designing and constructing in-frastructure to support controlled experimentation with testing and regression <b>testing</b> <b>techniques.</b> This paper reports on the challenges faced by researchers experi-menting with <b>testing</b> <b>techniques,</b> including those that in...|$|R
50|$|The {{initial set}} of courses enhances {{materials}} developed under {{a series of}} grants from the National Science Foundation. These materials are used in traditional university courses and in courses for practitioners, such as those offered by AST. The AST courses run 4 weeks each and focus on a single topic or <b>test</b> <b>technique.</b> AST is planning new courses by additional instructors.|$|E
50|$|Induced pulses are of {{much lower}} energy than threat pulses {{and so are}} more {{practicable}} to create, but they are less predictable. A common <b>test</b> <b>technique</b> {{is to use a}} current clamp in reverse, to inject a range of damped sine wave signals into a cable connected to the equipment under test. The damped sine wave generator is able to reproduce the range of induced signals likely to occur.|$|E
50|$|On December 10, 2005, Alliant Techsystems (ATK) {{successfully}} flight-tested an air-breathing, liquid JP-10 (hydrocarbon) fuelled scramjet-powered free-flight vehicle from NASA Wallops Flight Facility, Wallops Island, Virginia. The {{flight test}} was conducted under the Defense Advanced Research Projects Agency (DARPA)/ Office of Naval Research (ONR) Freeflight Atmospheric Scramjet <b>Test</b> <b>Technique</b> (FASTT)http://www.atk.com/Customer_Solutions_MissionSystems/cs_ms_w_hs_fastt.asp project. This latest flight was a {{culmination of a}} three-year, three-flight program to successfully demonstrate the feasibility of using ground-launched sounding rockets as a low-cost approach to hypersonic flight testing, and represents the world's first flight test of an air-breathing, scramjet-powered vehicle using hydrocarbon fuel.|$|E
40|$|We have a {{great number}} of {{software}} <b>testing</b> <b>techniques</b> at our disposal for testing a software product. Although the utilization of these techniques is growing, we do have a very inadequate knowledge about their relative quantitative and qualitative statistics. The choice of a software <b>testing</b> <b>technique</b> in software <b>testing</b> influences both process and product quality. So it is imperative for us to find a <b>testing</b> <b>technique</b> which is effective as well as efficient. However it is not sufficient if <b>testing</b> <b>techniques</b> are only compared on fault detecting ability. They should also be evaluated to check which among them enhances reliability most. To establish a useful theory for testing, we need to evaluate existing and novel <b>testing</b> <b>techniques</b> not only for effectiveness and efficiency but also for their ability of enhancing software reliability...|$|R
50|$|Almost all {{measurement}} and <b>testing</b> <b>techniques</b> require collimated beams. He has proposed and demonstrated {{large number of}} collimation <b>testing</b> <b>techniques</b> based on interferometry, shear interferometry, Talbot interferometry and phase-conjugation. These techniques are self-referencing and provide double the sensitivity.|$|R
40|$|In {{this paper}} we {{describe}} our taxonomy of object-oriented classes that catalogs each class in an application {{based on the}} characteristics of that class. We present a mapping algorithm that matches the class under test to a list of implementation-based <b>testing</b> <b>techniques,</b> providing feedback to the tester describing the characteristics of the class that are suitably tested by each <b>testing</b> <b>technique</b> together with the characteristics that are not suitably tested by any of the <b>testing</b> <b>techniques</b> in the list. Our study shows that the number of entities to be analyzed by a tester when selecting implementation-based <b>testing</b> <b>techniques</b> can be reduced by 50 % if the class under test is first cataloged using our taxonomy of OO classes. ...|$|R
5000|$|Flexural strength, {{also known}} as modulus of rupture, or bend strength, or {{transverse}} rupture strength is a material property, defined as the stress in a material just before it yields in a flexure test. The transverse bending test is most frequently employed, in which a specimen having either a circular or rectangular cross-section is bent until fracture or yielding using a three point flexural <b>test</b> <b>technique.</b> The flexural strength represents the highest stress experienced within the material at its moment of yield. It is {{measured in terms of}} stress, here given the symbol [...]|$|E
50|$|As {{long as the}} ATE {{manufacturer}} provides {{with the}} test program generator that can use UTSL as an input the cumbersome task of translating a test program from one platform to another can be significantly simplified. In other words, the task of rewriting of the test programs for a specific platform can {{be replaced by the}} automatically generating the code from the UTSL based test specification. Prerequisite for this is that the UTSL description of tests is sufficiently detailed with definition of the <b>test</b> <b>technique</b> as well as the description of all the necessary inputs and outputs.|$|E
50|$|Air Test and Evaluation Squadron TWO ONE (HX-21) {{performs}} developmental {{testing and}} evaluation of all Navy, Marine Corps and Coast Guard rotary wing/tilt-rotor aircraft, Unmanned Aerial Vehicles (UAVs) and associated sensor and weapons systems. A wide range of aircraft testing and support is provided to include flying qualities, aircraft performance and aeromechanics, shipboard suitability, tactical aircraft mission systems testing, ordnance compatibility, ballistics, system reliability and maintainability assessments, flight simulator/simulation fidelity, and aircraft software development. Support is also provided {{to a variety of}} industry and international developmental efforts to include shipboard envelope development and expansion, day and night electro-optical capabilities, and flight <b>test</b> <b>technique</b> improvements.|$|E
50|$|Demonstrated {{miniaturized}} reactor <b>test</b> <b>techniques.</b>|$|R
40|$|Boolean {{expressions}} {{are major}} focus of specifications {{and they are very}} much prone to introduction of faults, this survey presents various Boolean specification based <b>testing</b> <b>techniques,</b> and covers more than 30 papers for the same. The various Boolean specification based <b>testing</b> <b>techniques</b> like Cause effect graph, fosters strategy, meaningful impact strategy, Branch Operator Strategy (BOR), Modified Condition / Decision Coverage (MCDC) compared {{on the basis of their}} fault detection effectiveness and the size of test suite. This collection represents most of the existing work performed on Boolean specification based <b>testing</b> <b>techniques.</b> This survey describes the basic algorithms used by these strategies and it also includes operator and operand fault categories for evaluating the performance of above mentioned <b>testing</b> <b>techniques.</b> Finally, this survey contains short summaries of all the papers that use Boolean specification based <b>testing</b> <b>techniques.</b> These techniques have been empirically evaluated by various researchers on a simplified safety related real time control system...|$|R
40|$|Identifying {{vulnerabilities}} {{and ensuring}} security functionality by security testing {{is a widely}} applied measure to evaluate and improve the security of software. Due to the openness of modern software-based systems, applying appropriate security <b>testing</b> <b>techniques</b> is of growing importance and essential to perform effective and efficient security testing. Therefore, an overview of actual security <b>testing</b> <b>techniques</b> is of high value both for researchers to evaluate and refine the techniques and for practitioners to apply and disseminate them. This chapter fulfills this need and {{provides an overview of}} recent security <b>testing</b> <b>techniques.</b> For this purpose, it first summarize the required background of testing and security engineering. Then, basics and recent developments of security <b>testing</b> <b>techniques</b> applied during the secure software development lifecycle, i. e., model-based security testing, code-based testing and static analysis, penetration testing and dynamic analysis, as well as security regression testing are discussed. Finally, the security <b>testing</b> <b>techniques</b> are illustrated by adopting them for an example three-tiered web-based business application...|$|R
50|$|Focus mitts are {{specific}} to training a fighter’s hand speed, punch combinations, timing, punching power, defense, and counter-punching and may {{also be used to}} practice elbow strikes. Heavy bag training is a conditioning and power exercise that reinforces the techniques practiced on the pads. Sparring is a means to <b>test</b> <b>technique,</b> skills, range, strategy, and timing against a partner. Sparring is often a light to medium contact exercise because competitive fighters on a full schedule are not advised to risk injury by sparring hard. Specific tactics and strategies can be trained with sparring including in close fighting, clinching and kneeing only, cutting off the ring, or using reach and distance to keep an aggressive fighter away.|$|E
5000|$|This is {{also the}} first episode to use the digital ink and paint as a proof of concept, {{which led to the}} {{decision}} to have The Simpsons animation converted from traditional cel to digital ink and paint. It was a good episode to <b>test</b> <b>technique</b> on due to the cloning sequences which required many different layers of animation for each of the clones. According to Al Jean, in the dub for the scene where Homer is being cloned Matt Groening said [...] "let's just throw a couple screams in there", and sound archive locator Norm supplied them. The effect coming out of the hammock is meant to resemble a Xerox light. This was one of two years that did not feature special Halloween names of The Simpsons staff in the credits. Al Jean said that to some people, the names took up so much space across the screen that the result was a [...] "green smear". They were brought back due to popular demand. The image of Homer strangling Homer was pitched in the writers room by one of the audio commentators.|$|E
40|$|The {{application}} of a flight test maneuver auto-pilot <b>test</b> <b>technique</b> for collecting aerodynamic and structural flight research data on a highly maneuverable aircraft is described. This newly developed flight <b>test</b> <b>technique</b> was applied at the Dryden Flight Research Facility of the NASA Ames Research Center on the highly maneuverable aircraft technology (HiMAT) vehicle. A primary flight experiment was done to verify the design techniques used to develop the HiMAT aerodynamics and structures. This required the collection of large quantities of high-quality pressure distribution, loads, and deflection data. The effectiveness of the flight <b>test</b> <b>technique</b> is illustrated with a flight test example comparing various pressure distribution measurements...|$|E
40|$|Test {{techniques}} {{for evaluation of}} how well {{electrical and electronic equipment}} withstands the indirect effects of lightning were studied. The existing <b>test</b> <b>techniques,</b> and the philosophy behind some of the existing or evolving standards are discussed. Possible avenues of improvement in <b>test</b> <b>techniques</b> are suggested...|$|R
40|$|This {{thesis is}} the study of testing {{object-oriented}} programs. Aspects of object-oriented programs for which <b>testing</b> <b>techniques</b> are developed include classes, methods, inheritance, polymorphism, and encapsulation. The application of these techniques are illustrated, and a comparison between traditional <b>testing</b> <b>techniques</b> and object-oriented techniques is also drawn...|$|R
40|$|The {{importance}} of properly selecting <b>testing</b> <b>techniques</b> is widely {{accepted in the}} software engineering community. However, there are chiefly two reasons why the selections now made by software developers cannot be classed as correct. Firstly, they have limited knowledge of all the techniques now available, which means {{that there are a}} lot of techniques with which the average developer is unfamiliar. Secondly, the information now available with regard to the different existing <b>testing</b> <b>techniques</b> is mostly procedural (that is, focused on how to use the technique), whereas there is almost no pragmatic information (focused on the result of using the technique). The open problem addressed in this research is precisely how to help developers improve software <b>testing</b> <b>technique</b> selection. A <b>testing</b> <b>technique</b> characterisation schema is proposed to achieve this objective. Being instantiated for multiple techniques, the schema can be used to build a repository containing information on <b>testing</b> <b>techniques.</b> This schema systematically describes all the <b>testing</b> <b>techniques,</b> focusing mainly on pragmatic aspects of the techniques, leading to more objective selections. The proposed characterisation schema is composed of a non-flat set of attributes, grouped around the elements of the testing process to which they refer. These elements are then grouped around the different testing process stages. This logical grouping makes the schema information coherent. An empirical and iterative process was followed to arrive at this schema. An empirical process was used, because <b>testing</b> <b>techniques</b> are not founded on a solid theoretical basis. This means that the schema needs to be founded not only on testing theory, but also on what the different subjects related to software <b>testing</b> know about <b>techniques.</b> It is iterative, because a schema based on the theory now existing on testing will be created. This schema is gradually refined with the knowledge of developers, researchers and experts in the area. The completed characterisation schema was evaluated in two different ways. Firstly, the schema is verified empirically by instantiating it for multiple <b>testing</b> <b>techniques.</b> Secondly, an experiment is carried out, in which the repository created in the earlier verification is put into use to select <b>testing</b> <b>techniques</b> for different projects. Finally, the original contribution of this research is a conceptual tool that can be used by developers to systematically and objectively select the <b>testing</b> <b>techniques</b> to be used in a software project...|$|R
40|$|Abstract: The {{workload}} buildup flight <b>test</b> <b>technique</b> {{is a new}} <b>test</b> <b>technique</b> in {{the field}} of handling qualities. It was introduced by Gray in 2004 and is based on the Boundary Avoidance Tracking (BAT) theory which considers the pilot as someone who tracks away from threatening conditions (boundaries) when they become dominant. The workload buildup flight <b>test</b> <b>technique</b> is basically a modification of conventional head-up display-based tracking tasks. In addition to the target, boundaries are displayed which decrease in regular intervals and must not be exceeded. In addition to the original continuous approach a level-based variant of the workload buildup flight <b>test</b> <b>technique</b> is proposed. Advantages and disadvantages of both approaches as well as associated fields of application are discussed. In the frame of a simulator study with trained test pilots of the German air force several variations of the workload buildup were investigated and their potential for future research was evaluated. These variations include biased or delayed movements of target and boundaries, different representations of the boundary, the possibility to exceed the boundary for a short time as well as visual and aural warnings. This paper summarizes the most important aspects of the task and display variations and provides a starting point for further research {{in the field of}} the workload buildup flight <b>test</b> <b>technique...</b>|$|E
40|$|Aiming {{at three}} kinds of Internet-based system quality problems, which is performance, {{liability}} and security, the paper proposes a kind of test template during multi-user login and resource access control, which includes test requirement, login script, role-resource correlating and mutation <b>test</b> <b>technique.</b> Some Internet-based systems are tested and diagnosed by automation <b>test</b> <b>technique</b> of test template. At last, system quality can be verified and improved through the realization mechanism of test template...|$|E
40|$|This paper {{presents}} {{an analysis of}} test results of digital model approach on Analogue-to-digital converter (ADC). The approach is to inject primary input with arbitrary frequencies and periodical digital pulse. The output response is sampled and analysed in order to distinguish between GO or No-GO. Furthermore, the proposed technique is also coupled with power supply voltage control <b>test</b> <b>technique</b> to investigate the fault coverage margin. Histogram test, conventional industrial <b>test</b> <b>technique,</b> simulates concurrently were also employed as a comparison study...|$|E
5000|$|... #Subtitle level 2: General {{questioning}} and <b>testing</b> <b>techniques</b> ...|$|R
40|$|Automated {{validation}} of flight-critical embedded systems {{is being done}} at ARC Dryden Flight Research Facility. The automated <b>testing</b> <b>techniques</b> {{are being used to}} perform closed-loop {{validation of}} man-rated flight control systems. The principal design features and operational experiences of the X- 29 forward-swept-wing aircraft and F- 18 High Alpha Research Vehicle (HARV) automated test systems are discussed. Operationally applying automated <b>testing</b> <b>techniques</b> has accentuated flight control system features that either help or hinder the application of these techniques. The paper also discusses flight control system features which foster the use of automated <b>testing</b> <b>techniques...</b>|$|R
40|$|Different <b>testing</b> <b>techniques</b> {{are being}} {{proposed}} in software testing to improve systems quality and increase development productivity. However, {{it is difficult}} to determine from a given set of <b>testing</b> <b>techniques,</b> which is the most effective <b>testing</b> <b>technique</b> for a certain domain, particularly if they are random-based. We are proposing a strategy and a framework that can evaluate such <b>testing</b> <b>techniques.</b> Our framework is defined compositionally and parametrically. This allows us to characterize different aspects of systems in an incremental way as well as test specific hypothesis about the system under test. In this paper we focus on GUIbased systems. That is, the specific internal behavior of the system is unknown but it can be approximated by probabilistic behaviors. And the empirical evaluation is based on the probabilistic model checker PRISM. ...|$|R
