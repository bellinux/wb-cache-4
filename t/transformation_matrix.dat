1408|1254|Public
25|$|The {{transformation}} {{rules for}} three-dimensional velocities and accelerations are very awkward; even above in standard configuration the velocity equations are quite complicated owing to their non-linearity. On the other hand, {{the transformation of}} four-velocity and four-acceleration are simpler {{by means of the}} Lorentz <b>transformation</b> <b>matrix.</b>|$|E
25|$|A {{specific}} {{application of}} linear maps is for geometric transformations, {{such as those}} performed in computer graphics, where the translation, rotation and scaling of 2D or 3D objects is performed {{by the use of}} a <b>transformation</b> <b>matrix.</b> Linear mappings also are used as a mechanism for describing change: for example in calculus correspond to derivatives; or in relativity, used as a device {{to keep track of the}} local transformations of reference frames.|$|E
25|$|Virtual {{entities}} {{may contain}} and {{be controlled by}} assorted attributes, such as transform values (location, orientation, and scale) stored in an object's <b>transformation</b> <b>matrix.</b> Animation is the change of an attribute over time. Multiple methods of achieving animation exist; the rudimentary form {{is based on the}} creation and editing of keyframes, each storing a value at a given time, per attribute to be animated. The 2D/3D graphics software will change with each keyframe, creating an editable curve of a value mapped over time, in which results in animation. Other methods of animation include procedural and expression-based techniques: the former consolidates related elements of animated entities into sets of attributes, useful for creating particle effects and crowd simulations; the latter allows an evaluated result returned from a user-defined logical expression, coupled with mathematics, to automate animation in a predictable way (convenient for controlling bone behavior beyond what a hierarchy offers in skeletal system set up).|$|E
50|$|Linear transformations are not {{the only}} ones that can be {{represented}} by <b>matrices.</b> Some <b>transformations</b> that are non-linear on an n-dimensional Euclidean space Rn can be represented as linear transformations on the n+1-dimensional space Rn+1. These include both affine transformations (such as translation) and projective transformations. For this reason, 4×4 <b>transformation</b> <b>matrices</b> are widely used in 3D computer graphics. These n+1-dimensional <b>transformation</b> <b>matrices</b> are called, depending on their application, affine <b>transformation</b> <b>matrices,</b> projective <b>transformation</b> <b>matrices,</b> or more generally non-linear <b>transformation</b> <b>matrices.</b> With respect to an n-dimensional matrix, an n+1-dimensional matrix can be described as an augmented matrix.|$|R
40|$|The {{different}} three-phase circuit coordinate <b>transformation</b> <b>matrixes</b> {{are given}} in relevant literatures, which may cause some difficulties to understand and apply the coordinate transformation. The paper presents a general expression of the coordinate <b>transformation</b> <b>matrixes</b> in three-phase circuit and {{points out that the}} coordinate <b>transformation</b> <b>matrixes</b> having different specific expressions are due to existing the parameters which can be selected in the general expression. On this basis, the three often used expressions of coordinate <b>transformation</b> <b>matrixes</b> rotating at arbitrary speed are obtained through selecting these different parameters, which are Park transformation, orthogonal transformation and the coordinate transformation in the theory of instantaneous power. The paper further points out that, through particularly choosing coordinate rotation speed,it can get commonly used special coordinate <b>transformation</b> <b>matrixes</b> between the three-phase stationary coordinate systems, and between the stationary coordinate system and synchronous rotating coordinate system by matrix general expression. The work of this paper shows that the three-phase circuit coordinate <b>transformation</b> <b>matrixes</b> are essentially uniformed, though their forms and practical applications are different, which is helpful to further understanding and correctly using the coordinate transformation theory of three-phase circuit...|$|R
5000|$|... #Subtitle level 2: Examples {{of linear}} <b>transformation</b> <b>matrices</b> ...|$|R
25|$|Properties {{meaningful}} for {{projective geometry}} are respected by this new idea of transformation, {{which is more}} radical in its effects than can be expressed by a <b>transformation</b> <b>matrix</b> and translations (the affine transformations). The first issue for geometers {{is what kind of}} geometry is adequate for a novel situation. It is not possible to refer to angles in projective geometry as it is in Euclidean geometry, because angle {{is an example of a}} concept not invariant with respect to projective transformations, as is seen in perspective drawing. One source for projective geometry was indeed the theory of perspective. Another difference from elementary geometry is the way in which parallel lines can be said to meet in a point at infinity, once the concept is translated into projective geometry's terms. Again this notion has an intuitive basis, such as railway tracks meeting at the horizon in a perspective drawing. See projective plane for the basics of projective geometry in two dimensions.|$|E
500|$|Matrices and matrix {{multiplication}} {{reveal their}} essential features when related to linear transformations, {{also known as}} linear maps. A real m-by-n matrix A {{gives rise to a}} linear transformation Rn → Rm mapping each vector x in Rn to the (matrix) product Ax, which is a vector in Rm. Conversely, each linear transformation f: Rn → Rm arises from a unique m-by-n matrix A: explicitly, the [...] of A is the ith coordinate of f(ej), where ej = (0,...,0,1,0,...,0) is the unit vector with 1 in the jth position and 0 elsewhere. The matrix A is said to represent the linear map f, and A is called the <b>transformation</b> <b>matrix</b> of f.|$|E
2500|$|Translation and {{rotation}} {{combined in}} one <b>transformation</b> <b>matrix</b> is: ...|$|E
5000|$|... #Subtitle level 3: Ordinary Lorentz <b>transformations</b> <b>matrices</b> do {{not suffice}} ...|$|R
30|$|The above feature {{transformation}} techniques estimate <b>transformation</b> <b>matrices</b> in {{the training}} stage. However, to improve recognition accuracy for unknown conditions in the evaluation stage, the adaptation strategy of estimating feature <b>transformation</b> <b>matrices</b> for evaluation data is also effective. This paper deals with basis feature-space maximum likelihood linear regression (basis fMLLR) [20], which can estimate <b>transformation</b> <b>matrices</b> robustly even {{in the cases of}} short utterances. In addition, {{in the training}} stage, speaker adaptive training (SAT) [11] is also used. It trains acoustic models in a canonical speaker space based on the MLLR framework in order to obtain better feature transformation in the adaptation stage.|$|R
5000|$|... {{the three}} <b>transformation</b> <b>matrices</b> in the ternary tree of {{primitive}} Pythagorean triples ...|$|R
2500|$|The current <b>transformation</b> <b>matrix</b> (CTM), which {{determines the}} {{coordinate}} system ...|$|E
2500|$|If we {{call this}} <b>transformation</b> <b>matrix</b> , then we can find the minimal {{polynomial}} by applying the Cayley–Hamilton theorem to [...]|$|E
2500|$|The <b>transformation</b> <b>matrix</b> is {{universal}} for all four-vectors, not just 4-dimensional spacetime coordinates. If [...] is any four-vector, then in tensor index notation ...|$|E
25|$|The postulates {{of special}} {{relativity}} constrain the exact form the Lorentz <b>transformation</b> <b>matrices</b> take.|$|R
25|$|Assuming that {{translation}} {{is not used}} transformations can be combined by simply multiplying the associated <b>transformation</b> <b>matrices.</b>|$|R
5000|$|... #Caption: Comparison of {{the effects}} of {{applying}} 2D affine and perspective <b>transformation</b> <b>matrices</b> on a unit square.|$|R
2500|$|Consequently, the <b>transformation</b> <b>matrix</b> [...] for {{rotations}} {{about the}} x-axis through an angle θ [...] may {{be written in}} terms of Pauli matrices and the unit matrix as ...|$|E
2500|$|In such media, an {{electromagnetic}} wave with any given state of polarization may be decomposed into two orthogonally polarized components that encounter different propagation constants. The effect of propagation over a given path {{on those two}} components is most easily characterized {{in the form of}} a complex 2×2 <b>transformation</b> <b>matrix</b> J known as a Jones matrix: ...|$|E
2500|$|The second {{proposed}} a new chromaticity space, {{guided by a}} principle {{that has become the}} holy grail of color spaces: perceptual uniformity (chromaticity distance should be commensurate with perceptual difference). By means of a projective transformation, Judd found a more [...] "uniform chromaticity space" [...] (UCS) in which to find the CCT. Judd determined the [...] "nearest color temperature" [...] by simply finding the point on the Planckian locus nearest to the chromaticity of the stimulus on Maxwell's color triangle, depicted aside. The <b>transformation</b> <b>matrix</b> he used to convert X,Y,Z tristimulus values to R,G,B coordinates was: ...|$|E
30|$|Data {{structures}} such as 24 - and 32 -bit color records, rectangle records, 2 D <b>transformation</b> <b>matrices,</b> etc.|$|R
5000|$|In the Weyl basis, {{explicit}} <b>transformation</b> <b>matrices</b> for a boost [...] and for {{a rotation}} [...] are the following: ...|$|R
3000|$|... [...]) complexity, but is {{somewhat}} {{higher than the}} grouping routine and caused by the factor needed for multiplying <b>transformation</b> <b>matrices.</b>|$|R
50|$|The Hunt and RLAB color {{appearance}} models use the Hunt-Pointer-Estevez <b>transformation</b> <b>matrix</b> (MHPE) for conversion from CIE XYZ to LMS. This is the <b>transformation</b> <b>matrix</b> {{which was}} originally {{used in conjunction}} with the von Kries transform method, and is therefore also called von Kries <b>transformation</b> <b>matrix</b> (MvonKries).|$|E
50|$|The {{above-mentioned}} augmented matrix {{is called}} an affine <b>transformation</b> <b>matrix,</b> or projective <b>transformation</b> <b>matrix</b> (as {{it can also}} be used to perform projective transformations).|$|E
50|$|The {{original}} CIECAM97s color appearance model {{uses the}} Bradford <b>transformation</b> <b>matrix</b> (MBFD) (as does the LLAB color appearance model). This is a “spectrally sharpened” <b>transformation</b> <b>matrix</b> (i.e. the L and M cone response curves are narrower and more distinct from each other). The Bradford <b>transformation</b> <b>matrix</b> {{was supposed to}} work {{in conjunction with a}} modified von Kries transform method which introduced a small non-linearity in the S (blue) channel. However, outside of CIECAM97s and LLAB this is often neglected and the Bradford <b>transformation</b> <b>matrix</b> is used in conjunction with the linear von Kries transform method, explicitly so in ICC profiles.|$|E
3000|$|... [...]. The {{backward}} prediction {{counterpart of}} this optimization problem is similarly solved using 2 [*]×[*] 2 lower triangular <b>transformation</b> <b>matrices</b> [...]...|$|R
3000|$|Compute the <b>transformation</b> <b>{{matrices}}</b> U and V of 2 D–PCA (or 2 D–PLS, respectively), {{using the}} reduced t–f matrices set [...]...|$|R
40|$|Abstract. We find <b>transformation</b> <b>matrices</b> {{allowing}} {{to express}} non-commutative three dimensional harmonic oscillator {{in terms of}} an isotropic commutative oscillator, following “philosophy of simplicity ” approach. Non-commutative parameters have physical interpretation {{in terms of an}} external magnetic field. Furthermore, we show that for a particular choice of noncommutative parameters there is an equivalent anisotropic representation, whose <b>transformation</b> <b>matrices</b> are far more complicated. We indicate a way to obtain the more complex solutions from the simple ones...|$|R
5000|$|... in Dirac notation. This {{corresponds}} to the <b>transformation</b> <b>matrix</b> ...|$|E
5000|$|Translation and {{rotation}} {{combined in}} one <b>transformation</b> <b>matrix</b> is: ...|$|E
5000|$|The current <b>transformation</b> <b>matrix</b> (CTM), which {{determines the}} {{coordinate}} system ...|$|E
3000|$|... [...]. The linear <b>transformation</b> <b>matrices</b> can effect rotation, scaling and/or shear {{and have}} to be invertible. The {{associated}} Jacobians can be defined as [...]...|$|R
30|$|Once the multi-freedom {{constraint}} <b>transformation</b> <b>matrices</b> {{are evaluated}} for each displacement direction, a total form of these matrices, [T_c] _tot, {{can be built}} up.|$|R
3000|$|On {{the other}} hand, the {{methodology}} of Algorithm 1 needed a lower quantity of components, which is reflected in a lower feature space dimensionality; but Algorithm 2 allows larger matrices with almost the same performance. In {{the case of the}} 1 D methodology (methods 1 to 4), and for data matrices of size (F·T)×K, it is necessary to compute <b>transformation</b> <b>matrices</b> of size (F·F)×n, while for the 2 D methodology (methods 5 to 8), two <b>transformation</b> <b>matrices</b> of F×n [...]...|$|R
