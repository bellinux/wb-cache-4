228|354|Public
50|$|As {{examinations}} {{typically are}} performed under {{the legal and}} task restraints of investigative authorities such as courts, prosecutors, district attorneys or police, there are constraints as to cost, time, objectivity and <b>task</b> <b>specification</b> depending on local law.|$|E
50|$|These CAD {{methods for}} motion design find {{applications}} in animation in computer graphics (key frame interpolation), trajectory planning in robotics (taught-position interpolation), spatial navigation in virtual reality, computer-aided geometric design of motion via interactive interpolation, CNC tool path planning, and <b>task</b> <b>specification</b> in mechanism synthesis.|$|E
50|$|Tasks {{can have}} entries for {{synchronisation}} (a form of synchronous message passing). Task entries are declared in the <b>task</b> <b>specification.</b> Each task entry can {{have one or}} more accept statements within the task body. If the control flow of the task reaches an accept statement, the task is blocked until the corresponding entry is called by another task (similarly, a calling task is blocked until the called task reaches the corresponding accept statement). Task entries can have parameters similar to procedures, allowing tasks to synchronously exchange data. In conjunction with select statements {{it is possible to}} define guards on accept statements (similar to Dijkstra's guarded commands).|$|E
40|$|Introduction My {{group at}} Penn has been {{exploring}} {{the use of}} Natural Language instructions and other high-level <b>task</b> <b>specifications</b> to create realistic animated simulations of virtual human agents carrying out tasks. The work builds on Jack TM, an animation system developed at the University of Pennsylvania's Center for Human Modelling and Simulation. Jack provides biomechanically reasonable and anthropometrically-scaled human models with a growing repertoire of naturalistic behaviors such as walking, stepping, looking, reaching, turning, grasping, strength-based lifting, and both obstacle and self-collision avoidance [1]. The value in using high-level <b>task</b> <b>specifications</b> to create animated simulations {{is that the same}} specification will produce agent behavior that is appropriate to different environments and/or different conditions, without additional animator or programmer intervention. The resulting simulations thus afford a relati...|$|R
5000|$|Task {{partitioning}} {{refers to}} innovation {{projects that are}} partitioned into smaller tasks. Hippel proposes that [...] "problem-solving inter-dependence among tasks can be predicted in many projects and can then be managed by strategies involving (1) adjustment of the <b>task</b> <b>specifications</b> and/or (2) reduction of the barriers to problem-solving interaction across selected or all task boundaries." ...|$|R
5000|$|... #Caption: Fig. 3: <b>Task</b> {{knowledge}} <b>specification,</b> verification {{and execution}} concept in MASSiVE.|$|R
40|$|This paper shows a {{technique}} that allows adaptive user interfaces, spanning multiple devices, to be rendered from the <b>task</b> <b>specification</b> at runtime {{taking into account the}} context of use. The designer can specify a task model using the ConcurTaskTrees Notation and its contextdependent parts, and deploy the user interface immediately from the specification. By defining a set of context-rules in the design stage, the appropriate context-dependent parts of the <b>task</b> <b>specification</b> will be selected before the concrete interfaces will be rendered. The context will be resolved by the runtime environment and does not require any manual intervention. This way the same <b>task</b> <b>specification</b> can be deployed for several di#erent contexts of use. Traditionally, a context-sensitive <b>task</b> <b>specification</b> only took into account a variable single deployment device. This paper extends this approach as it takes into account task specifications that can be executed by multiple co-operating devices...|$|E
40|$|In {{the next}} decades, {{practically}} viable robotic/agent systems {{are going to}} be mixed-initiative in nature. Humans will request help from such systems and such systems will request help from humans in achieving the complex mission tasks required. Pragmatically, one requires a distributed <b>task</b> <b>specification</b> language to define tasks and a suitable data structure which satisfies the specification and can be used flexibly by collaborative multi-agent/robotic systems. This paper defines such a <b>task</b> <b>specification</b> language and an abstract data structure called <b>Task</b> <b>Specification</b> Trees which has many of the requisite properties required for mixedinitiative problem solving and adjustable autonomy in a distributed context. A prototype system has been implemented for this delegation framework and has been used practicall...|$|E
40|$|Under some views, {{a crucial}} {{function}} for conversation policies is to "constrain the messages that {{appear on the}} wire," for {{there can be a}} many-to-many mapping between an agent’s intention and the message primitive used to express that intention. In this paper, we argue that the way to constrain messages is to constrain intentions. We propose a pragmatic approach to doing this through an abstract <b>task</b> <b>specification</b> or model. Abstract task specifications are based on a simple state-space representation for problem formulation, and this representation can be used to delimit the agents’ task intentions and discourse intentions. This analysis supports a flexible and pragmatic way of handling "unexpected" messages by reference to the abstract <b>task</b> <b>specification.</b> We see an abstract <b>task</b> <b>specification</b> as one component of a publicly posted conversation policy. A simple search-assistant agent was implemented within a BDI architecture to illustrate application of these ideas...|$|E
40|$|An {{alternative}} approach to modelling the discrete-event dynamic systems (DEDS) and to knowledge-based control {{of them is}} presented in this paper. Petri nets and oriented graphs are simultaneously used in order to express in analytical terms the new combined model of DEDS and to represent analytically knowledge about the control <b>task</b> <b>specifications</b> (like criteria, constraints, etc.) by means of such a new combine approach. Both the DEDS model and the knowledge base are simultaneously used in the procedure of the control system synthesis. Key Words. Control system synthesis, discrete-event dynamic systems, knowledge representation, knowledge-based control, modelling, oriented graphs, Petri nets 1. INTRODUCTION In order to synthetize the control of DEDS (discrete-event dynamic systems) two basic requirements cannot be usually avoided - a correct model of the system to be controlled and a domain oriented knowledge base (KB) expressing knowledge about the control <b>task</b> <b>specifications.</b> DED [...] ...|$|R
40|$|This {{paper is}} a {{progress}} report summarizing theoretical and practical results concerning integration of design and control aspects of manipulator arms for industrial or space applications. The relationships between <b>task</b> <b>specifications,</b> gross motions, fine motions, actuator type and location, size and strength of structural members, control servos and strategies, and overall design evaluation are briefly discussed, with some technical examples...|$|R
40|$|Abstract — Given a robot {{model and}} {{a class of}} {{admissible}} environments, this paper provides a framework for automatically and verifiably composing controllers that satisfy high level <b>task</b> <b>specifications</b> expressed in suitable temporal logics. The desired <b>task</b> <b>specifications</b> can express complex robot behaviors such as search and rescue, coverage, and collision avoidance. In addition, our framework explicitly captures sensor specifications that depend on the environment with which the robot is interacting, resulting in a novel paradigm for sensor-based temporal logic motion planning. As one robot {{is part of the}} environment of another robot, our sensor-based framework very naturally captures multi-robot specifications. Our computational approach is based on first creating discrete controllers satisfying so-called General Reactivity(1) formulas. If feasible, the discrete controller is then used in order to guide the sensor-based composition of continuous controllers resulting in a hybrid controller satisfying the high level specification, but only if the environment is admissible. Index Terms — Motion planning, temporal logics, sensorbased planning, controller synthesis, hybrid control...|$|R
40|$|New robotic {{applications}} {{often require}} physical {{interaction between the}} robot and its environment. To this purpose, external sensors might be needed, {{as well as a}} suitable way to specify the tasks. One complication that might cause problems in the task execution is orientation representation singularities. In this paper quaternions are used as a singularity-free orientation representation within the constraint-based <b>task</b> <b>specification</b> framework. The approach is experimentally verified in a force controlled assembly task. The task chosen contains a redundant degree of freedom that is exploited using the constraint-based <b>task</b> <b>specification</b> framework...|$|E
40|$|Task- and artefact-centric {{business}} process models (BPMs) are mostly used in isolation. This entails, e. g., problems with formal and automated verification of BPMs through model checking. We address this gap through semantic <b>task</b> <b>specification,</b> which {{is transferred from}} more widely known semantic service specification. In summary, we present a new and systematic approach for connecting a task-centric BPM (in BPMN) with a model of an artefact-centric object life cycle through semantic <b>task</b> <b>specification.</b> As a consequence, we achieve a seamless approach for formal and automated verification of BPMs using model checking...|$|E
40|$|This paper {{introduces}} a systematic constraint-based approach to specify complex tasks of general sensorbased robot systems consisting of rigid links and joints. The approach integrates both instantaneous <b>task</b> <b>specification</b> and estimation of geometric uncertainty in a unified framework. Major components are {{the use of}} feature coordinates, defined with respect to object and feature frames, which facilitate the <b>task</b> <b>specification,</b> {{and the introduction of}} uncertainty coordinates to model geometric uncertainty. While the focus of the paper is on <b>task</b> <b>specification,</b> an existing velocity based control scheme is reformulated in terms of these feature and uncertainty coordinates. This control scheme compensates for the effect of time varying uncertainty coordinates. Constraint weighting results in an invariant robot behavior in case of conflicting constraints with heterogeneous units. The approach applies to a large variety of robot systems (mobile robots, multiple robot systems, dynamic human-robot interaction, etc.), various sensor systems, and different robot tasks. Ample simulation and experimental results are presented...|$|E
40|$|This paper {{presents}} {{a method for}} optimal trajectory generation for discrete-time nonlinear systems with linear temporal logic (LTL) <b>task</b> <b>specifications.</b> Our approach is based on recent advances in stochastic optimization algorithms for optimal trajectory generation. These methods rely on estimation of the rare event of sampling optimal trajectories, {{which is achieved by}} incrementally improving a sampling distribution so as to minimize the cross-entropy. A key component of these stochastic optimization algorithms is determining whether or not a trajectory is collision-free. We generalize this collision checking to efficiently verify whether or not a trajectory satisfies a LTL formula. Interestingly, this verification can be done in time polynomial in the length of the LTL formula and the trajectory. We also propose a method for efficiently re-using parts of trajectories that only partially satisfy the specification, instead of simply discarding the entire sample. Our approach is demonstrated through numerical experiments involving Dubins car and a generic point-mass model subject to complex temporal logic <b>task</b> <b>specifications...</b>|$|R
5000|$|While Lorraine {{was accused}} by Kimberly for being {{disruptive}} during the task, Sir Alan was somewhat {{more critical of}} her, chiding her for hypocrisy after she accused her teams idea of not fitting the brief, despite suggesting a brand that contradicted the <b>tasks</b> <b>specifications.</b> Despite this, he felt she was {{not responsible for the}} loss and implied very early on in the boardroom that she would not be facing dismissal.|$|R
40|$|Presented at the Joint Automatic Control Conference, Austin, TX, June 18 - 21, 1974. This {{paper is}} a {{progress}} report summarizing theoretical and practical results concerning integration of design and control aspects of manipulator arms for industrial or space applications. The relationships between <b>task</b> <b>specifications,</b> gross motions, fine motions, actuator type and location, size and strength of structural members, control servos and strategies, and overall design evaluation are briefly discussed, with some technical examples...|$|R
40|$|Abstract — iTASC (acronym for ‘instantaneous <b>task</b> <b>specification</b> and control) [1] is a {{systematic}} constraint-based approach to specify complex tasks of general sensor-based robot systems. iTASC integrates both instantaneous <b>task</b> <b>specification</b> and estimation of geometric uncertainty in a unified framework. Automatic derivation of controller and estimator equations follows from a geometric task model that is obtained using {{a systematic}} task modeling procedure. The approach applies {{to a large}} variety of robot systems (mobile robots, multiple robot systems, dynamic human-robot interaction, etc.), various sensor systems, and different robot tasks. Using an example task, this paper shows that iTASC is {{a powerful tool for}} multi-sensor integration in robot manipulation. The example task includes multiple sensors: encoders, a force sensor, cameras, a laser distance sensor and a laser scanner. The paper details the systematic modeling procedure for the example task and elaborates on the task specific choice of two types of task coordinates: feature coordinates, defined with respect to object and feature frames, which facilitate the <b>task</b> <b>specification,</b> and uncertainty coordinates to model geometric uncertainty. Experimental results for the example task are presented. I...|$|E
40|$|Abstract — A {{reconfiguration}} {{method for}} the model-checking-based motion planning of single- and multi-agent systems under infeasible local LTL specifications is proposed. The method describes how to synthesize the motion plan that fulfills the infeasible <b>task</b> <b>specification</b> the most, {{and how the}} infeasible <b>task</b> <b>specification</b> is relaxed. The novelty is {{the introduction of a}} metric within the atomic proposition domain, and the relative weighting between the implementation cost of a motion plan and its distance to the original specification. For multi-agent systems, a dependency relation and relative priorities are incorporated when the tasks are assigned independently to each agent. Simulations are presented to illustrate the method. I...|$|E
40|$|Abstract. This paper {{describes}} {{the solution of}} Hello World transformations in MOLA transformation language. Transformations implementing the task are relatively straightforward and easily inferable from the <b>task</b> <b>specification.</b> The required additional steps related to model import and export are also described. ...|$|E
40|$|International audienceCollaborative Information Seeking/Retrieval (CIS/CIR) {{has given}} rise to several {{challenges}} in terms of search behavior analysis, retrieval model formalization as well as interface design. However, the major issue of evaluation in CIS/CIR is still underexplored. The goal of this workshop is to investigate the evaluation challenges in CIS/CIR with the hope of building standardized evaluation frameworks, methodolo-gies, and <b>task</b> <b>specifications</b> that would foster and grow the research area (in a collaborative fashion) ...|$|R
40|$|Mobile robots {{are complex}} systems that combine {{mechanical}} {{elements such as}} wheels and gears, electromechanical devices such as motors, clutches and brakes, digital circuits such as processors and smart sensors, and software programs such as embedded controllers. They have mechanical constraints (e. g., a car-like robot cannot move sideways), limited energy resources, and computation, sensing, and communication capabilities. They operate in environments cluttered with possibly moving and shape changing obstacles, and their objectives can change over time, {{such as in the}} case of appearing and disappearing targets. Robot motion planning and control is the problem of automatic construction of robot control strategies from <b>task</b> <b>specifications</b> given in high-level, human-like language. The challenge in this area is the development of computationally efficient frameworks allowing for systematic, provably correct, control design accommodating both the robot constraints and the complexity of the environment, while at the same time allowing for expressive <b>task</b> <b>specifications.</b> A typical motion task for one robot moving in an environment with obstacles is simply stated as “go from A to B and avoid obstacles. ” A common approach to this problem is based on...|$|R
50|$|ConcurTaskTrees (CTT) is a {{notation}} for <b>task</b> model <b>specifications</b> {{useful to}} support design of interactive applications specifically tailored for user interface model-based design.|$|R
40|$|Abstract—This note {{presents}} {{an approach that}} integrates elements from grammatical inference and game theory {{to address the problem}} of supervising finite-state transition systems operating in adversarial, partially known, rule-governed environments. The combined formulation produces controllers which guarantee that a transition system satisfies a <b>task</b> <b>specification</b> in the form of a logical formula, if and only (a) the true model of the environment is in the class of models inferable from positive data presentation (observations), (b) a characteristic sample of the environment’s behavior is observed, and (c) the <b>task</b> <b>specification</b> is satisfiable given the capabilities described by the abstractions of the system and its environment. Index Terms—Hybrid systems, symbolic control, grammatical infer-ence, algorithmic game theory. I...|$|E
40|$|Abstract — This paper {{shows the}} {{application}} of a systematic approach for constraint-based <b>task</b> <b>specification</b> for sensorbased robot systems [1] to a laser tracing example. This approach integrates both <b>task</b> <b>specification</b> and estimation of geometric uncertainty in a unified framework. The framework consists of an application independent control and estimation scheme. An automatic derivation of controller and estimator equations is achieved, based on a geometric task model that is obtained using a systematic task modeling procedure. The paper details the systematic modeling procedure for the laser tracing task and elaborates on the task specific choice of two types of task coordinates: feature coordinates, defined with respect to object and feature frames, which facilitate the <b>task</b> <b>specification,</b> and uncertainty coordinates to model geometric uncertainty. Furthermore, the control and estimation scheme for this specific task is studied. Simulation and real world experimental results are presented for the laser tracing example. o 2 a o 1 b o 2 b f 1 b f 2 b o 1 a f 1 a f 2 a Fig. 1. The object and feature frames for simultaneous laser tracing on a plane and a barrel. I...|$|E
40|$|Abstraction is a {{powerful}} mechanism for describing objects and relationships from multiple, yet consistent, perspectives. When properly applied to interface design, abstraction mechanisms can provide the interaction flexibility and simplicity so desperately needed and demanded by today's diverse user community. Fundamental to achieving such goals has been the integration of visual programming techniques with a unique blend of abstraction mechanisms to support user interaction and <b>task</b> <b>specification.</b> The research {{presented in this paper}} describes crucial abstraction mechanisms employed within the Taskmaster environment to support top-down and bottom-up <b>task</b> <b>specification.</b> In particular, this paper (a) provides an overview of the Taskmaster environment, (b) describes top-down specification based on multi-level, menu-driven interaction and (c) describes bottom-up specification based on cutset identification and pseudo-tool concepts...|$|E
40|$|The {{subject of}} the diploma thesis is the design and static {{analysis}} of roof structure. It is prestressed roof shell (membrane) supported by a cable. The whole thesis is divided into several separated units according to <b>task's</b> <b>specification.</b> The text section describes {{the introduction to the}} issue of presstressed suspension cable constructions and displays their possible shapes, types and realizations. There is also technical report of solved shell, which was written on the base of the documents, drawn drawings and structural (static) analysis...|$|R
40|$|Abstract — We {{consider}} {{a class of}} multi-robot motion plan-ning problems where each robot is associated with multiple objectives and decoupled <b>task</b> <b>specifications.</b> The problems are formulated as an open-loop non-cooperative differential game. A distributed anytime algorithm is proposed to compute a Nash equilibrium of the game. The following properties are proven: (i) the algorithm asymptotically converges to the set of Nash equilibrium; (ii) for scalar cost functionals, the price of stability equals one; (iii) for the worst case, the computational complexity and communication cost are linear in the robot number. I...|$|R
40|$|Abstract — Many robotic <b>task</b> <b>specifications</b> can be {{naturally}} {{expressed by}} boolean combinations of arbitrary constraints. This allows {{a separation of}} problem description and solu-tion strategy. In this paper, we present a novel approach to solve non-linear constraint systems based on Satisfiability Modulo Theories. While most SMT-based techniques emphasize completeness, we intentionally use an incomplete local search strategy. Despite this incompleteness, the presented solution is {{able to deal with}} many real world problems like task allocation or robot positioning. We show that our approach is able to exploit the logical structure to solve highly complex tasks almost in real-time. I...|$|R
40|$|<b>Task</b> <b>specification</b> models {{define the}} {{activities}} {{to be executed}} by a robot {{in order to achieve}} its goal. Classical examples are the sequences involved in assembly or pick and place tasks. This work introduces the preview coordination execution model, an extension to the traditional way in which the execution of such task specifications is coordinated at runtime. Instead of taking activities one-by-one as defined in the <b>task</b> <b>specification</b> model, preview coordination optimizes the task scheduling based on knowledge about the likelihood that not just the activities required by the current state can be executed, but that also one or more of those related to future states of the system can be activated. An experiment with mobile manipulation tasks illustrates the benefits of preview coordination. status: publishe...|$|E
40|$|Abstract. This paper {{describes}} the activity diagram migration from UML 1. 4 to UML 2. 2 in MOLA transformation language. Transformations implementing the migration task are relatively straightforward and easily inferable from the <b>task</b> <b>specification.</b> The required additional steps related to model import and export are also described. ...|$|E
40|$|Abstract — This paper {{presents}} a new framework for constraint-based <b>task</b> <b>specification</b> of robot controllers. A <b>task</b> <b>specification</b> language (eTaSL) {{is defined as}} well as a corre-sponding implementation of a controller (eTC). This new frame-work is based on feature variables and a new concept referred to as expression graphs. It avoids some of the common pitfalls in previous frameworks, and provides a flexible and composable way to define robot control tasks. An architecture for a robot controller is proposed, {{as well as a}}n implementation that can execute tasks described in the new specification language. Typical usage patterns for the new framework are explained on an example consisting of a kinematically redundant, bi-manual task on a PR 2 robot. A comparison with existing frameworks shows the advantages of the new approach. I...|$|E
40|$|Abstract — We {{present a}} {{mathematical}} programming-based method for optimal control of discrete-time dynamical systems subject to temporal logic <b>task</b> <b>specifications.</b> We use linear temporal logic (LTL) to specify {{a wide range}} of properties and tasks, such as safety, progress, response, surveillance, repeated assembly, and environmental monitoring. Our method directly encodes an LTL formula as mixed-integer linear constraints on the continuous system variables, avoiding the computationally expensive processes of creating a finite abstraction of the system and a Büchi automaton for the specification. In numerical experiments, we solve temporal logic motion planning tasks for high-dimensional (10 + continuous state) dynamical systems. I...|$|R
40|$|Abstract: A precise {{model of}} the {{behavioral}} dynamics is a necessary precondition {{for the development of}} collaborative environments. In this paper we present a specification framework for collaborative environments. In particular we highlight the interplay of <b>task</b> <b>specifications</b> and domain models. The framework consists of two components: A formal specification language (called CTML) and the tool CTML Editor and Simulator. CTML has a precisely defined syntax and semantics and is designed to model actors, roles, collaborative tasks and their dependency and impact on the domain. The CTML Editor and Simulator is an Eclipse IDE for the interactive creation and simulation of CTML specifications...|$|R
40|$|The paper {{provides}} a brief outline of methods for automated synthesis of mechanical systems in general, with primary focus on application domains involving kinematics of mechanical motions. Two application domains {{described in this}} paper, mechanisms and machine tool design, employ methods of selecting and assembling appropriate building blocks to satisfy given functional (motion) specifications. This is called Synthesis by Composition. The functionality of the precompiled building blocks {{as well as the}} design <b>task</b> <b>specifications</b> are captured mathematically in a unified representation scheme. Generation of alternate designs is accomplished by manipulation of matrices representing functions. The paper also presents another method of Synthesis b...|$|R
