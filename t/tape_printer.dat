8|45|Public
5000|$|Morkrum Model 11 <b>Tape</b> <b>Printer</b> - The Model 11 Typewheel <b>Tape</b> <b>Printer,</b> {{at about}} 45 words-per-minute, {{was a bit}} faster the Morkrum Printing Telegraph Blue and Green-Code printers, and was modeled after the European Baudot Telegraph System printer. The Model 11 was a <b>Tape</b> <b>Printer</b> which used gummed paper tape that could be pasted onto a {{telegram}} blank. This was the first teleprinter to successfully operate from an airplane.|$|E
50|$|The Teletype Model 31 is {{a compact}} and {{light-weight}} five-level start-stop <b>tape</b> <b>printer</b> designed for mobile {{operation in the}} air and on the sea.|$|E
50|$|The main {{units of}} the system were: keyboard, controlling-reading unit, input punched tape, output punched <b>tape,</b> <b>printer,</b> {{magnetic}} tape memory, ferrite memory, ALU (arithmetical logical unit), CPU (central processing unit), and power supply.|$|E
5000|$|Ports: Television, cartridge/expansion, <b>tape</b> recorder, <b>printer</b> ...|$|R
50|$|In addition, NEL {{developed}} NELOS, a batch {{operating system}} which provided input-output for magnetic <b>tapes,</b> <b>printers,</b> and telecom equipment, provided sequenced compiling of jobs, and a symbol library permitting linking of very large computer applications and executing them on-line. These included suites of information management programs, including databases, free form queries with a precursor of IBM's GIS, and reporting applications. NECPA and NELOS went to sea in 1966.|$|R
50|$|The Honeywell {{hardware}} system for CP-6 {{consisted of a}} mainframe host processor (L66, DPS8, DPS8000, DPS90), to which connected disks, <b>tapes,</b> <b>printers,</b> and card equipment were connected. A high-speed channel connected this host to a Level 6 mini computer, which provided processing and connection for terminals, communications lines, and high-speed channel to remote computers, including LADC and customers for on-line support, new version download and problem fix patches. A terminal emulator allowed use of PCs as CP-6 terminals.|$|R
5000|$|Model 14 (1925) - On December 23, 1924, Howard Krum and Sterling Morton {{filed an}} {{application}} on the 14-Type type-bar <b>tape</b> <b>printer</b> which matured into Patent No. 1,745,633. The Model 14 {{was a family}} of devices, printing, reading or punching narrow tapes; Baudot code. About 60,000 were built.|$|E
50|$|All {{machines}} were also supplied with a Ferranti TR5 or TR7 photo-electric paper tape reader that read at 300 characters a second, and a slower Teletype paper <b>tape</b> <b>printer</b> (no speed is given, likely 110). Further input/output was offered through two input and two output channels, normally {{connected to a}} five-way switch box that allowed the operator to select which devices were fed to which channels. Magnetic tape, punched card, printers and other common I/O devices were supported through these channels.|$|E
50|$|During {{initial program}} load (IPL) of current MVS systems, the Nucleus Initialization Program (NIP) reads {{necessary}} information from the I/O Definition File (IODF) and uses it to build the UCBs. The UCBs are stored in system-owned memory, in the Extended System Queue Area (ESQA). After IPL completes, UCBs are owned by Input/Output Support. Some of the information stored in the UCB are: device type (disk, <b>tape,</b> <b>printer,</b> terminal, etc.), address of the device (such as 1002), subchannel identifier and device number, channel path ID (CHPID) which defines {{the path to the}} device, for some devices the volume serial number (VOLSER), and a large amount of other information, including OS Job Management data.|$|E
5000|$|A bell code (sometimes bell character) is {{a device}} control code {{originally}} sent to ring a small electromechanical bell on tickers and other teleprinters and teletypewriters to alert operators {{at the other}} end of the line, often of an incoming message. Though tickers punched the bell codes into their <b>tapes,</b> <b>printers</b> generally do not print a character when the bell code is received. Bell codes are usually represented by the label [...] "". They have been used since 1870 (initially in Baudot code).|$|R
5000|$|...DEVD: Device {{description}} (communications {{device for}} lines, workstations, <b>printers</b> <b>tape</b> drives, etc.) ...|$|R
5000|$|... {{peripheral}} devices (teleprinters, punched <b>tape</b> reader/punchers, parallel <b>printers</b> {{and punched}} card readers).|$|R
50|$|In 1924 Creed & Company, {{founded by}} Frederick G. Creed, entered the {{teleprinter}} field with their Model 1P, a page printer, which was soon superseded by the improved Model 2P. In 1925 Creed acquired the patents for Donald Murray's Murray code, a rationalised Baudot code. The Model 3 <b>tape</b> <b>printer,</b> Creed’s first combined start-stop machine, {{was introduced in}} 1927 for the Post office telegram service. This machine printed received messages directly on to gummed paper tape {{at a rate of}} 65 words per minute. Creed created his first keyboard perforator, which used compressed air to punch the holes. He also created a reperforator (receiving perforator) and a printer. The reperforator punched incoming Morse signals on to paper tape and the printer decoded this tape to produce alphanumeric characters on plain paper. This was the origin of the Creed High Speed Automatic Printing System, which could run at an unprecedented 200 words per minute. His system was adopted by the Daily Mail for daily transmission of the newspaper contents. The Creed Model 7 page printing teleprinter was introduced in 1931 and was used for the inland Telex service. It worked at a speed of 50 baud, about 66 words a minute, using a code based on the Murray code.|$|E
40|$|ABSTRACT The {{development}} {{and application of}} an automated weighing and analysis system for growth and feed efficiency studies are described. The system consists of an electronic balance connected, via a BCD interface cable, to a portable desk-top computer. Integral features of the computer are a display, paper <b>tape</b> <b>printer,</b> and a cassette tape drive for programs and data storage, {{all of which are}} necessary for efficient data procurement. Twenty-four pens of chicks and the remaining feed can be weighed, with electronic weight transfer to the computer, and a compre-hensive output of raw data, calculated results, and statistical analyses can be obtained in approxi-mately 1 hr. No manual data entries or calculations are necessary after weighing has been initiated. The results of a chick growth and feed efficiency experiment are presented. (Key words: computers, electronic balances, automated weights, data calculations, statistical analyses...|$|E
50|$|HP's {{designers}} did {{not specifically}} plan for IEEE 488 to be a peripheral interface for general-purpose computers; {{the focus was}} on instrumentation. But when HP's early microcomputers needed an interface for peripherals (disk drives, <b>tape</b> drives, <b>printers,</b> plotters, etc.), HP-IB was readily available and easily adapted to the purpose.|$|R
40|$|Ideally, {{the most}} {{meaningful}} {{learning experience for}} students in an undergraduate OS course would be to develop fully-functional OS’s on their own. This can be accomplished using µMPS, a hardware emulator for a pedagogically undergraduate-appropriate hardware architecture, along with Kaya, a specification for a multi-layer OS supporting multiprocessing, VM, thread synchronization, external devices (disks, terminals, <b>tape,</b> <b>printers,</b> and network interfaces) and a file system. Traditional OS projects like Nachos[3] or OS/ 161 [9] provide students with a significant starting code base. Students then modify existing OS modules or add new ones. With µMPS/Kaya students undergo an innovative and pedagogically different experience of starting only with a hardware emulator (i. e. no initial OS code base for students to build on/replace) and ending with a completely student written OS capable of running student written C programs...|$|R
50|$|The {{machines}} {{printed a}} series of ticker symbols (usually shortened forms of a company's name), followed by brief information {{about the price of}} that company's stock; the thin strip of paper on which they were printed was called ticker tape. The word ticker comes from the distinct tapping (or ticking) noise the machines made while printing. Pulses on the telegraph line made a letter wheel turn step by step until the correct symbol was reached and then printed. A typical 32-symbol letter wheel had to turn on average 15 steps until the next letter could be printed resulting in a very slow printing speed of one character per second. In 1883, ticker transmitter keyboards resembled the keyboard of a piano with black keys indicating letters and the white keys indicating numbers and fractions, corresponding to two rotating type wheels in the connected ticker <b>tape</b> <b>printers.</b>|$|R
50|$|Peripheral devices included: {{high-density}} magnetic <b>tapes,</b> {{high-speed line}} <b>printers,</b> fast card and paper tape readers and punches to high-capacity random access magnetic disc memories, optical scanners, self-correcting orthoscanners and data communications devices.|$|R
50|$|In its favor, the Adam {{had a large}} {{software}} library from the start. It was derived from and compatible with the ColecoVision's software and accessories, and, in addition, the popular CP/M operating system was available as an option. Its price gave a complete system: an 80 kB RAM computer, <b>tape</b> drive, letter-quality <b>printer,</b> and software including the Buck Rogers: Planet of Zoom video game. The IBM PCjr sold for $669 but included no peripherals, and although the popular Commodore 64 sold for around $200, its price was not much lower after {{the purchase of a}} <b>printer,</b> <b>tape</b> or disk drive, and software.|$|R
5000|$|Mill Hill School has an Elliott 803 with 8192 {{memory in}} the 1970s. It had five-track paper <b>tape</b> reader and <b>printer</b> {{but no other}} I/O devices. The school had Elliott 803 autocode and Algol compilers.|$|R
50|$|The Panasonic FS-A1WSX was {{the last}} MSX2+ made by Panasonic. It was the {{successor}} of FS-A1WX and incorporated few changes like S-Video output, no <b>tape</b> support, color <b>printer</b> support and an improved A1 Internal Cockpit software with a Kanji color word processor.|$|R
50|$|Aside from {{technical}} phone {{support for}} its products, Kodak offers onsite service for other {{devices such as}} document scanners, data storage systems (optical, <b>tape,</b> and disk), <b>printers,</b> inkjet printing presses, microfilm/microfiche equipment, photograph kiosks, and photocopiers, for which it despatches technicians who make repairs in the field.|$|R
50|$|The basic Orion machine {{included}} 4,096 48-bit {{words of}} slow, 12µs, core memory, {{which could be}} expanded to 16,384 words. Each word could be organized as eight 6-bit characters, a single 48-bit binary number, or a single floating-point number with a 40-bit fraction and an 8-bit exponent. The system included built-in capabilities for working with Pound sterling before decimalization. The core memory was backed by one or two magnetic drums with 16k words each. Various offline input/output included magnetic disks, tape drives, punched cards, punched <b>tape</b> and <b>printers.</b>|$|R
5000|$|During [...] "The Cover-Up", one of {{his clients}} informs him that their Sabre printer catches fire, which worries Andy. When he decides to {{investigate}} the matter, he enlists Darryl to assist him. However, Darryl wants to get revenge on Andy for almost getting him fired a while back over mistaken shipments, and goes along with the ploy by playing up his fears. But when Andy video <b>tapes</b> the <b>printer</b> that catches on fire, it confirms his suspicions. This prompts Darryl to call off his prank, when he realizes it could get himself in trouble.|$|R
50|$|Unlike the MITS Altair 8800, the EDUC-8 {{included}} two serial input and two serial output ports {{at the back}} of the computer. The EDUC-8 also had front panel lights and switches to program the computer. The later articles included a variety of peripherals, allowing the computer to interface to a keypad, octal display, paper tape loader, paper <b>tape</b> puncher, <b>printer,</b> keyboard, music player, teleprinter, magnetic tape recorder and alphanumeric display. The articles were collected into a book, where additional information was published detailing how to expand the number of I/O ports to 256, adding up to 32KB of additional memory, and using the computer to control various switches.|$|R
50|$|Though often grouped {{with flat}} belts, they are {{actually}} a different kind. They consist of a very thin belt (0.5-15 millimeters or 100-4000 micrometres) strip of plastic and occasionally rubber. They are generally intended for low-power (less than 10 watts), high-speed uses, allowing high efficiency (up to 98%) and long life. These are seen in business machines, <b>printers,</b> <b>tape</b> recorders, and other light-duty operations.|$|R
5000|$|In {{the early}} 1960s the B5500 Master Control Program (MCP) {{operating}} system included virtual printers, called [...] "Printer Backups" [...] {{in the form}} of <b>Printer</b> Backup <b>Tapes</b> (PBT) and <b>Printer</b> Backup Disks (PBD). IBM's VM/370 operating system allows users to spool a virtual printer (or punch) file to another user, who can read it as input. This provides a basic means of file transfer.|$|R
50|$|Computer systems {{generally}} {{consist of}} three main parts: the {{central processing unit}} (CPU) that processes data, memory that holds the programs and data to be processed, and I/O (input/output) devices as peripherals that communicate with the outside world. An early computer might contain a hand-wired CPU of vacuum tubes, a magnetic drum for main memory, and a punch <b>tape</b> and <b>printer</b> for reading and writing data respectively. A modern system might have a multi-core CPU, DDR4 SDRAM for memory, a solid-state drive for secondary storage, a graphics card and LCD as a display system, a mouse and keyboard for interaction, and a Wi-Fi connection for networking. In both examples, computer buses of {{one form or another}} move data between all of these devices.|$|R
40|$|This {{standard}} specifies {{functional requirements}} for SCSI- 3 Stream Commands (SSC). SSC permits SCSI streaming {{devices such as}} <b>tape</b> and <b>printer</b> devices to attach to computers and provides the definitions for their use. This standard does not contain material related to any service delivery subsystem {{which is used to}} transport the commands, command parameter data, command response data, and status specified in this standard. iv American National Standard Approval of an American National Standard requires verification by ANSI that the requirements for due process, consensus, and other criteria for approval have been met by the standards developer. Consensus is established when, in the judgment of the ANSI Board of Standards Review, substantial agreement has been reached by directly and materially affected interests. Substantial agreement means much more than a simple majority, but not necessarily unanimity. Consensus requires that all views and objections be considered, and that effo [...] ...|$|R
50|$|The device {{interface}} was interchangeable, and {{could use a}} selected board to attach to an IBM FIPS channel, or to a Cray channel, CDC channel, or to a communications link so it could communicate with remote installations. A major product was RDS (Remote Device Support), in which an IBM mainframe could connect to an adapter through its FIPS channel, which would communicate over a trunk to an adapter with a comms link, possibly to another continent, where it could drive a remote FIPS channel to drive IBM peripherals such as <b>tape</b> units, <b>printers</b> and the like. This gave remote backup possibilities to save data onto a remote site in real time, to protect data in case of disaster at the host location. Both sites could have host computers, and backup could be bidirectional. For RDS, the remote adapter emulated the IBM host by producing the channel protocol.|$|R
5000|$|Consumers were {{reportedly}} much more {{excited about the}} also-new Apple Macintosh, more sophisticated than the PCjr but only US$300 more expensive with accessories and software. Its price was close {{to that of the}} Coleco Adam, but the Adam also included a <b>tape</b> drive, a <b>printer,</b> and software. The Times warned that [...] "your initial expenditure of $1,000 or so will probably grow to more than $2,000 - even if you purchase the entry model" [...] after adding peripherals; other packages cost $3,000 or more, even while IBM did not include batteries for the wireless keyboard.|$|R
50|$|The PDP-1 was {{supplied}} standard with 4096 {{words of}} core memory, 18-bits per word, and ran at a basic speed of 100,000 operations per second. It was constructed using many System Building Blocks that were packaged into several 19-inch racks. The racks were themselves packaged {{into a single}} large mainframe case, with a hexagonal control panel containing switches and lights mounted to lay at table-top height {{at one end of}} the mainframe. Above the control panel was the system's standard input/output solution, a punch tape reader and writer. Most systems were purchased with two peripherals, the Type 30 vector graphics display, and a Soroban Engineering modified IBM Model B Electric typewriter that was used as a printer. The Soroban system was notoriously unreliable, and often replaced with a modified Friden Flexowriter, which also contained its own punch tape system. A variety of more-expensive add-ons followed, including magnetic tape systems, punched card readers and punches, and faster punch <b>tape</b> and <b>printer</b> systems.|$|R
5000|$|The [...] {{statement}} {{is used to}} reference data. This statement links a program's internal description of a dataset to the data on external devices: disks, <b>tapes,</b> cards, <b>printers,</b> etc. The DD may provide information such as a device type (e.g. '181','2400-5','TAPE'), a volume serial number for tapes or disks, and {{the description of the}} data file, called the [...] subparameter after the Data Control Block (DCB) in the program used to identify the file. Information describing the file can come from three sources: The DD card information, the dataset label information for an existing file stored on tape or disk, and the DCB macro coded in the program. When the file is opened this data is merged, with the DD information taking precedence over the label information, and the DCB information taking precedence over both. The updated description is then written back to the dataset label. This can lead to unintended consequences if incorrect DCB information is provided.|$|R
50|$|An early {{successful}} teleprinter {{was invented}} by Frederick G. Creed. In Glasgow he created his first keyboard perforator, which used compressed air to punch the holes. He also created a reperforator (receiving perforator) and a printer. The reperforator punched incoming Morse signals on to paper <b>tape</b> and the <b>printer</b> decoded this <b>tape</b> to produce alphanumeric characters on plain paper. This was {{the origin of the}} Creed High Speed Automatic Printing System, which could run at an unprecedented 200 words per minute. His system was adopted by the Daily Mail for daily transmission of the newspaper contents.|$|R
5000|$|The U.S. {{military}} {{had their own}} system of identifying the various models, often identifying various improvements, included options / features, etc. The TT-47/UG was the first Model 28 KSR, and while Teletypes designation for the basic machine remained the same over the next 20+ years, the TT-47/UG took on suffixes to identify the specific version. The last TT-47/UG was the TT-47L/UG. The U.S. Navy also assigned some [...] "set" [...] designations using the standard Army/Navy system, such as the AN/UGC-5, a Teletype Model 28 ASR which has a keyboard, <b>printer,</b> <b>tape</b> punch and reader facilities all in one cabinet.|$|R
50|$|One of {{the first}} teams to build a {{complete}} system around the 8008 was Bill Pentz' team at California State University, Sacramento. The Sac State 8008 was possibly the first true microcomputer, with a disk operating system built with IBM Basic assembly language in PROM, all driving a color display, hard drive, keyboard, modem, audio/paper <b>tape</b> reader and <b>printer.</b> The project started {{in the spring of}} 1972, and with key help from Tektronix the system was fully functional a year later. Bill assisted Intel with the MCS-8 kit and provided key input to the Intel 8080 instruction set, which helped make it useful for the industry and hobbyists.|$|R
