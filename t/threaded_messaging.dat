2|147|Public
50|$|On March 9, 2017, Google {{announced}} that it would be evolving Hangouts into two products: Hangouts Meet and Hangouts Chat. Hangouts Meet would focus on video conferences and Hangouts Chat would be focused on instant messaging with additional features such as bot assistant and <b>threaded</b> <b>messaging.</b>|$|E
40|$|This report {{contains}} {{the result of}} a Master Thesis in which the usability aspects of innovative software design concepts on mobile phones are studied. More precisely, the study is divided in the following two main parts: 1) Threaded Messaging; the investigation of message threading as an innovative way of presenting text messages in a conversation like manner on mobile phones. 2) Usability versus Aesthetics; the investigation of how aesthetics of mobile phone Graphical User Interfaces (GUIs) influence peoples ’ judgements of usability and how people admit different levels of innovation and aesthetics in graphic design of mobile phones. In the study, three different mobile GUI prototypes were developed, which had different message handling solutions and varying levels of usability and aesthetics. The prototypes were then tested thoroughly in a usability lab using 16 participants from different age groups. The results elicited from the tests included that <b>Threaded</b> <b>Messaging</b> is a usabl...|$|E
40|$|Abstract—This paper {{presents}} an algorithms combination for representation of discussion <b>threads</b> <b>messages</b> in fora for distance education. This combination inputs discussion threads from distance education fora and outputs specific strings representing the <b>messages</b> of these <b>threads</b> according to concrete modelling based {{in a formal}} language. Keywords- algorithms; distance education; fora; discussion thread; modelling I...|$|R
50|$|The related program ezmlm-idx {{originated}} as an add-on to ezmlm. It {{now exists}} {{as a complete}} package on its own, but can still be considered essentially as an extension to ezmlm. It adds multi-message <b>threaded</b> <b>message</b> retrieval from the archive, digests, message and subscription moderation, {{and a number of}} remote administration functions. The latest version, 7.2.2, was released May 15, 2014.|$|R
50|$|Accurate <b>threading</b> of <b>messages</b> {{requires}} {{the software to}} identify messages that are replies to other messages.|$|R
5000|$|Alef—concurrent, with <b>threads</b> and <b>message</b> passing, for system {{programming}} in early versions of Plan 9 from Bell Labs ...|$|R
50|$|The {{second major}} {{version of the}} Shacknews comment system, named ja.zz, was used until June 2007.Essentially a <b>threaded</b> <b>message</b> board, ja.zz was a unique message board written by Sander Pilon for the Shack. Posts could be moderated into one of many {{categories}}, which allowed users to filter what categories could be seen. Comments could be viewed in several ways, flat, threaded, or dthread (Dynamic thread) mode which was the most advanced and quickly became the most popular view for the users.|$|R
50|$|It can be {{difficult}} to absorb important information when viewing large lists of <b>messages.</b> Grouping <b>threads</b> of <b>messages</b> can allow users to preview messages quicker.|$|R
50|$|Beginning as a webzine, {{the site}} {{featured}} weekly comedy articles from Sir John Hargrave {{and a host}} of collaborators. As ZUG’s readership expanded, the site launched a <b>threaded</b> <b>message</b> board in 1998 called “GAB on ZUG” to allow readers to contribute additional humor content. This message board eventually became the backbone of the site, with “the world’s funniest comedy community” providing everything from comedy articles to caption contests. “GAB on ZUG” was renamed “ZUG Live” in October 2008, during a complete redesign of the site.|$|R
40|$|A {{method for}} {{communicating}} data between peripheral devices and an embedded processor that includes receiving, at a data buffer {{unit of the}} embedded processor, the data from a peripheral device. The method also includes copying data from the data buffer unit into the bridge buffer of the embedded processor as a bridge buffer message. Additionally, the method includes creating, after storing the data as a bridge buffer message, a peripheral device message comprising the bridge buffer message, and sending the peripheral device <b>message</b> to a <b>thread</b> <b>message</b> queue of a subscriber...|$|R
40|$|Structured mapping and {{coordination}} techniques are effective for {{making sense of}} conversations and building organizational memory. We present a new method for summarizing e-mail that brings these benefits to mailing lists. Our technique leverages existing e-mail conventions instead of requiring participants to communicate within an imposed framework. Our prototype processes a standard e-mail folder, automatically generating a concise, conversation-like overview of the discussion in progress. We believe the outlines produced by our technique are more readable and effective than the <b>threaded</b> <b>message</b> views that e-mail clients currently provide...|$|R
40|$|Middleware is the {{software}} that typically sits between applications and the operating system in distributed computing systems. As robotics components become more sophisticated and more commodity priced many of the difficult but interesting problems in programming robotic behaviour can be located in a smart middleware. We discuss middleware programming models and issues for supporting distributed robots and our prototype software architecture which uses a multi <b>threaded</b> <b>message</b> oriented structure. We also discuss the fusion of non conventional robotics programming languages and environments {{such as that of}} Java, together with conventional AI languages such as Prolog...|$|R
5000|$|... 1616/OS was {{initially}} {{little more than}} a powerful monitor, with commands for dumping and modifying memory, loading and saving to tape, and a built in macro assembler and full screen editor. Over time, the operating system gained a hierarchical file system, preemptive multitasking, support for multiple users with access controls (although no memory protection), lightweight <b>threads,</b> <b>message</b> passing primitives and pipes. Ultimately, the operating system had around 250 system calls, and 78 commands built into the shell. The operating system had enough similarity to Unix that porting Unix source to the 1616/OS was relatively painless.|$|R
5000|$|General {{improvements}} to text messaging - especially for longer <b>message</b> <b>threads</b> ...|$|R
5000|$|... tribe.net {{features}} many [...] "tribes", {{loosely based}} on the theory of urban tribes propounded by Michel Maffesoli and Ethan Watters. In practice, these tribes {{are a kind of}} topical forum. A new tribe may be created by any registered user. When a user creates a new tribe, that user is the moderator of the tribe. Any user may in principle join any tribe, although some tribes are private or require permission from the moderator to join. In addition to <b>threaded</b> <b>messages,</b> members can use tribes to post photos, announce upcoming parties, concerts, or other events easily and reach select audiences. Currently there are thousands of tribes, with more being added daily.|$|R
5000|$|Complete and {{efficient}} support for communication between <b>threads,</b> including mailbox, <b>message</b> queues, event flag; ...|$|R
50|$|It {{supports}} multiple NNTP servers, <b>message</b> <b>threads,</b> scoring, X-Face headers (reading and posting), {{and international}} character sets.|$|R
50|$|The lack of {{individual}} message control can prevent messaging systems from {{being used as}} to-do lists (a common function of email folders). Individual messages that contain information relevant to a to-do item can easily get lost in a long <b>thread</b> of <b>messages.</b>|$|R
40|$|Weblogs or blogs {{are being}} heralded as the “next big thing” in education. In {{this article we}} examine the {{advantages}} and disadvantages of this form of Internet-based interaction using the Community of Inquiry model with its focus on social, cognitive and teaching presences. We conclude that blogging has distinct advantages over more common threaded discussion in its support of style, ownership and identity, and its public nature may enhance resolution phases of cognitive presence. However, its lack of safety and the current inefficiencies of linking and <b>threading</b> <b>messages</b> present greater challenges than the more familiar threaded discussion or email list. Perhaps the blog’s greatest relative advantage is for non formal and open education that takes learning beyond the traditional course...|$|R
40|$|Article {{published}} in International Journal of Digital Information and Wireless Communications (IJDIWC) This paper examines {{the use of}} social network media at three aspects in African and Libyan perspective. Firstly, to use social network media as an open network learning environment that provide service for interaction necessary for learners to support socialization and collaboration during problem solving. Secondly, to use social media {{as a tool to}} support blended learning in e-learning system and encourage non-native English students to express their ideas and fill the gap of communication problems. Thirdly, to analyze the interaction of the learner in social media <b>threaded</b> <b>messages</b> and its relation to group and individual performance using different social schema and social network analyses. Quasi-experimental results indicate that there is an increase on the cognitive level of students at different level while qualitative results reveal that it helps deepen learning, memorable, have freedom to express opinions and lessen pressure and increase communication and socialization. This paper examines the use of social network media at three aspects in African and Libyan perspective. Firstly, to use social network media as an open network learning environment that provide service for interaction necessary for learners to support socialization and collaboration during problem solving. Secondly, to use social media as a tool to support blended learning in e-learning system and encourage non-native English students to express their ideas and fill the gap of communication problems. Thirdly, to analyze the interaction of the learner in social media <b>threaded</b> <b>messages</b> and its relation to group and individual performance using different social schema and social network analyses. Quasi-experimental results indicate that there is an increase on the cognitive level of students at different level while qualitative results reveal that it helps deepen learning, memorable, have freedom to express opinions and lessen pressure and increase communication and socialization...|$|R
50|$|The {{conversation}} view groups related {{messages in}} a linear stack which a user can expand and collapse. Labelling (tagging) {{is limited to}} <b>message</b> <b>threads.</b>|$|R
40|$|Email {{archives}} {{have the}} promise of serving as great resources for historians and social scientists. However, {{making sense of the}} information in these archives is a challenge. Email messages are often not self-contained and are instead a part of an ongoing discussion. The process of determining when discussions commence and conclude is a difficult task to automate. <b>Threading</b> <b>messages</b> by common subject lines and reply-chain information in email headers has been a common way of assembling messages into discussions. However, even though email provides this structured information, it does not usually reflect the user’s behavior. Our work helps email archive explorers interpret the archived messages by providing access to the full scope of discussions that stretch beyond the thread. We present an interactive visualization that allows explorers to perceive a discussion and navigate over time and people to gain the context they need...|$|R
40|$|Emails in the {{workplace}} are often intentional calls to action for its recipients. We propose to annotate these emails for what action its recipient will take. We argue that our approach of action-based annotation is more scalable and theory-agnostic than traditional speech-act-based email intent annotation, while still carrying important semantic and pragmatic information. We show that our action-based annotation scheme achieves good inter-annotator agreement. We also show that we can leverage <b>threaded</b> <b>messages</b> from other domains, which exhibit comparable intents in their conversation, with domain adaptive RAINBOW (Recurrently AttentIve Neural Bag-Of-Words). On a collection of datasets consisting of IRC, Reddit, and email, our reparametrized RNNs outperform common multitask/multidomain approaches on several speech act related tasks. We also experiment with a minimally supervised scenario of email recipient action classification, and find the reparametrized RNNs learn a useful representation. Comment: AAAI 201...|$|R
40|$|Structured mapping and {{coordination}} techniques are effective for {{making sense of}} conversations and building organizational memory. This paper proposes a new method for processing e-mail that brings these benefits to mailing lists. The technique leverages existing e-mail conventions instead of requiring participants to communicate within an imposed framework. Zest, a prototype browser for e-mail discussions, processes a standard e-mail folder, and displays a concise, conversation-like overview of the discussion in progress. In effect, Zest transforms an ordinary mailing list into a structured conversation system, {{without the need for}} special client software, and without the rigid formalism that previous such systems forced upon their users. Informal evidence suggests that the overviews shown by Zest are more readable and effective than the <b>threaded</b> <b>message</b> views that e-mail clients currently provide, and also that Zest stands a better chance of adoption than previous structured conversation tools...|$|R
50|$|Channelized in a {{telecommunications}} environment {{means that the}} line that communications have been transmitted over contains more than one <b>message</b> <b>thread,</b> separated in some fashion.|$|R
5000|$|Some clients allow {{operations}} on entire <b>threads</b> of <b>messages.</b> For example, the text-based newsreader nn has a [...] "kill" [...] function which automatically deletes incoming messages {{based on the}} rules {{set up by the}} user matching the message's subject or author. This can dramatically reduce the amount of messages one has to manually check and delete.|$|R
40|$|This paper {{examines}} {{the use of}} social network media at three aspects in African and Libyan perspective. Firstly, to use social network media as an open network learning environment that provide service for interaction necessary for learners to support socialization and collaboration during problem solving. Secondly, to use social media {{as a tool to}} support blended learning in e-learning system and encourage non-native English students to express their ideas and fill the gap of communication problems. Thirdly, to analyze the interaction of the learner in social media <b>threaded</b> <b>messages</b> and its relation to group and individual performance using different social schema and social network analyses. Quasi-experimental results indicate that there is an increase on the cognitive level of students at different level while qualitative results reveal that it helps deepen learning, memorable, have freedom to express opinions and lessen pressure and increase communication and socialization...|$|R
40|$|Thread {{migration}} is {{established as a}} mechanism for achieving dynamic load sharing and data locality. However, migration has not been used with fine-grained parallelism due to the relatively high overheads associated with <b>thread</b> and <b>messaging</b> packages. This paper describes a high performance thread migration system for fine-grained parallelism, implemented with user level threads and user level <b>messages.</b> The <b>thread</b> system supports an extensible event mechanism which permits an efficient interface between the <b>thread</b> and <b>messaging</b> systems without compromising the modularity of either. Migration is supported by user level primitives; applications may implement different migration policies {{on top of the}} migration interface provided. The system is portable and can be used directly by application and library writers or serve as a compilation target for parallel programming languages. Detailed performance metrics are presented to evaluate the system. The system runs on a cluster of S [...] ...|$|R
50|$|Danyell DeVille’s arrest led {{to front}} page print {{newspaper}} coverage in Canada along with television news feature segments. The story {{was picked up}} and reported on news sites and music blogs worldwide. With most outlets focusing almost exclusively on DeVille and Pantychrist, the overt sensationalism featured in some articles and the perceived fairness of reporting caused debate on comment <b>threads</b> and <b>message</b> boards.|$|R
50|$|The {{original}} {{operating system}} for the original iPhone was iPhone OS 1, marketed as OS X, and included Visual Voicemail, multi-touch gestures, HTML email, Safari web browser, <b>threaded</b> text <b>messaging,</b> and YouTube. However, many features like MMS, apps, and copy and paste were not supported at release, leading hackers jailbreaking their phones to add these features. Official software updates slowly added these features.|$|R
40|$|Abstract: In {{this paper}} we propose {{the use of the}} Distributed Shared Memory (DSM) {{paradigm}} for parallel volume visualisation. The goal is to offer a comprehensive and portable programming model that exploits the parallelism and data coherency commonly found in volume visualisation. Our approach is based on the development of a library layer that offers a simple and straightforward programming interface. This programming model allows users to implement volume visualisation programs that run on sequential and parallel computing environments. The library provides a contiguous shared memory space, synchronisation, task scheduling, data spatial partitioning and I/O services. In order to achieve better performance, users should tune their programs through re-configurable parameters such as loop scheduling, volume data access mode, block shape, and cache size. Preliminary results are presented based on a library implementation that runs over IEEE POSIX <b>threads,</b> <b>Message</b> Passing Interface (MPI) and UNIX interfaces on an MEIKO-CS 2 Multicomputer with 10 processing elements...|$|R
40|$|Since its inception, the Internet {{has been}} a hotbed of several {{successful}} communications channels, starting off with e-mail, IRC and newsgroups and more recently adding web annotation, instant messaging (IM), and news feeds. Although these channels were developed fairly independently, in many cases their respective functionalities and uses have grown to overlap significantly. For instance, users often have separate identifiers for e-mail, chat, and instant messaging, and clients for these systems all have their own implementations of <b>threaded</b> <b>message</b> views. Furthermore, multiple modalities {{may be involved in}} the completion of a single task: to notify a friend {{that you are going to}} be out for the day, you may start off using IM but switch to e-mail if he or she is not online. We believe these peculiarities stem from a lack of a common data model and user interface. The opportunity exists to take a “big picture ” look at the situatio...|$|R
50|$|Windows GUI {{programs}} are event-driven. After starting a process, Windows maintains an individual message queue for it. Windows places messages into that queue whenever mouse activity occurs on that process's window, whenever keyboard activity occurs while that process's window has focus, {{and at other}} times. A process can also add messages to its own queue. To accept user input, and for other reasons, each process must continuously retrieve messages from its queue, and act on them. A programmer makes the process do that by writing a loop that calls GetMessage (which blocks for a message and retrieves it), and then calls DispatchMessage (which dispatches the message), and repeats indefinitely. This is the message loop. It is usually part of the main program, which runs on the main <b>thread.</b> <b>Messages</b> for every window of the process pass through its message queue, and are handled by its message loop. A message loop is one kind of event loop.|$|R
5000|$|... 1. Daily {{the show}} {{features}} the currently most popular <b>threads</b> on the <b>message</b> board being highlighted, {{to bring them}} {{to the attention of the}} listening audience and encourage participation on the message boards.|$|R
40|$|Since its inception, the Internet {{has been}} a hotbed of several {{successful}} communications channels, starting off with e-mail, Internet Relay Chat and Usenet newsgroups and more recently adding Web annotation, instant messaging, and news feeds. However, these channels were developed fairly independently, {{and in many cases}} their respective functionalities have grown to overlap significantly. For instance, users of these systems have separate identifiers for e-mail, chat, and instant messaging, and clients for these systems all have their own implementations of <b>threaded</b> <b>message</b> views. We believe these problems stem from a lack of a common user interface and data model. In this paper we use basic concepts from the Semantic Web and RDF to unify and model these seemingly disparate messaging paradigms. We also demonstrate a generalized user interface for messaging that uses the data model we have developed. From this process we realize a number of synergies that result from the reduction of overlap and the finer-grained control users are given over message composition, transmission, storage and retrieval...|$|R
40|$|Screen reader {{programs}} (such as JAWS for Windows) provide {{output in}} a linear, either audio or Braille, format. Due to this linearity, {{it is much}} easier for blind users to get disoriented in a complex hypertext environment. iCare-Assistant attempts to address content accessibility challenges for students without sight in accessing educational materials (as lecture notes, syllabi, assignments, project descriptions, and announcements) from existing course servers. In particular, in this paper we focus on the challenges associated with accessing discussion boards, used by teachers, assistants, and students, to exchange information. <b>Threads</b> of <b>messages</b> in discussion boards evolve with new postings, thus just by investigating the subject headings or contents of earlier postings in a <b>message</b> <b>thread,</b> a blind student {{may not be able to}} guess the contents of the postings deeper in the hierarchy. We see that, in order to overcome the navigatio...|$|R
