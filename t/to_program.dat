8511|10000|Public
5|$|Allen has bankrolled a {{range of}} {{wildlife}} conservation projects {{over the past several}} years, including contributing millions in direct gifts and grants <b>to</b> <b>program,</b> projects, initiatives and charities. By marrying technology development with philanthropic interests, he is working to address the trafficking of endangered species and ensure stable or thriving generations of wild animals.|$|E
5|$|Miyamoto {{himself had}} {{high hopes for}} his new project. He lacked the {{technical}} skills <b>to</b> <b>program</b> it alone, so instead came up with concepts and consulted technicians {{to see if they}} were possible. He wanted to make the characters different sizes, move in different manners and react in various ways. Yokoi thought Miyamoto's original design was too complex, though he had some difficult suggestions himself, such as using see-saws to catapult the hero across the screen (eventually found too hard <b>to</b> <b>program,</b> though a similar concept would appear in the aforementioned Popeye arcade game). Miyamoto then thought of using sloped platforms, barrels and ladders. When he specified that the game would have multiple stages, the four-man programming team complained that he was essentially asking them to make the game repeatedly. Nevertheless, they followed Miyamoto's design, creating a total of approximately 20kilobytes of content. Yukio Kaneoka composed a simple soundtrack to serve as background music for the levels and story events.|$|E
5|$|The {{album was}} {{recorded}} at Skyline Studios in New York City. Skyline {{was only a}} few blocks away from the Public Access Synthesizer Studio, where the band had recorded their previous albums. Alan Bezozi and John Flansburgh worked together to create atypical drum tracks, including one that samples the sound of Flansburgh's kitchen sink and refrigerator being struck with a drum stick. An Alesis SR-16 drum machine was used <b>to</b> <b>program</b> the drums.|$|E
5000|$|... • As a {{non-profit}} organization, Mission Hospital commits {{ten percent of}} its net income <b>to</b> <b>programs</b> benefiting the underserved and 1.5 percent of its operating expenses <b>to</b> <b>programs</b> that benefit the community.|$|R
50|$|The Pennsylvania Lottery is {{the only}} US lottery that targets all of its {{proceeds}} <b>to</b> <b>programs</b> for its elderly residents. Since {{the beginning of the}} Lottery in 1972, more than $20.1 billion has been contributed <b>to</b> <b>programs.</b>|$|R
50|$|Mag Rack (formerly Lifeskool) is a Video on Demand (VoD) {{television}} channel. Its {{primary focus}} is providing viewers with informational programs {{when they want}} them. These programs range from how <b>to</b> <b>programs</b> <b>to</b> <b>programs</b> that spotlight past and present products.|$|R
5|$|A common {{neologism}} in the Python {{community is}} pythonic, which {{can have a}} wide range of meanings related <b>to</b> <b>program</b> style. To say that code is pythonic is to say that it uses Python idioms well, that it is natural or shows fluency in the language, that it conforms with Python's minimalist philosophy and emphasis on readability. In contrast, code that is difficult to understand or reads like a rough transcription from another programming language is called unpythonic.|$|E
5|$|A {{version of}} the game with VGA {{graphics}} and sound card audio appeared in 1991. Leisure Suit Larry 1: In the Land of the Lounge Lizards used the new game engine Sierra's Creative Interpreter and was released in 1991 for the Amiga, DOS, and Macintosh platforms. For the first remake, Al Lowe served as director and designer, also helping <b>to</b> <b>program</b> the game, and Ken Williams became executive producer. Other key people included Stuart Moulder (producer), William R. Davis Sr. (creative director), William D. Skirvin (art designer), Mark Seibert (music director), Oliver Brelsford (lead programmer), and the music other than the theme song was composed by Chris Braymen.|$|E
5|$|Before any {{products}} are sold, the company pre-cooks the ingredients and holds {{them in a}} heated holding cabinet. To ensure that product consistency is maintained and {{to reduce the amount}} of products discarded as waste, Burger King utilizes a computerized monitoring system created by Integrated Control Corp, or ICC. The system, called Kitchen Minder, monitors time and temperature in the cabinets and notifies staff and managers when to prepare more food and discard older products. Initially developed from 1998 to 2000, the system is designed to work with a holding cabinet system that was developed by Duke. The initial test designs were time-consuming <b>to</b> <b>program</b> because each bay in the holding units had to be programmed manually. This meant several minutes were required for each product, which added up to several hours <b>to</b> <b>program</b> up to six units with eight bays each. When BK finally deployed the system in 2001, the updated units utilized a Palm Pilot to configure the units using a custom program designed to easily configure the units via Infrared or serial port. A kitchen flow software system that helps centralize information about the system was deployed in 2007; combined with the new equipment, it helped further reduce costs for the company and its franchises by calculating projected sales and actual usage. Along with the holding system, Burger King deployed newer high-speed toasters to decrease make times; the new toasters, while faster, require more maintenance, which increases overall labor costs.|$|E
50|$|In {{addition}} <b>to</b> <b>programming</b> from TBN, {{the station}} airs educational <b>programming</b> <b>to</b> prepare local {{students for the}} GED.|$|R
40|$|AbstractWe {{present the}} left inverse of Reynolds’ defunctionalization and we show its {{relevance}} <b>to</b> <b>programming</b> and <b>to</b> <b>programming</b> languages. We propose two methods <b>to</b> transform a <b>program</b> {{that is almost}} in defunctionalized form into one that is actually in defunctionalized form, and we illustrate them with a recognizer for Dyck words and with Dijkstra’s shunting-yard algorithm...|$|R
40|$|The {{model of}} {{formation}} of the rational contents of teaching <b>to</b> <b>programming</b> in described in the article in view of specificity of supplementary education and features of visual surroundings of programming. The realization of structure {{of the contents of}} training <b>to</b> <b>programming</b> is written stage by stage...|$|R
5|$|Chris Stamper {{was born}} in 1958. He had a long-standing {{interest}} in electronics, and built an oscilloscope in his youth. While at university, he built a kit computer with an 8-bit processor and taught himself how <b>to</b> <b>program</b> by creating traffic light signalling software. He attended Loughborough University of Technology {{with the intent of}} earning degrees in electronics and physics, but left the university in 1981 to pursue computer programming full-time. Chris worked with arcade machine electronics, resolving software bugs and converting Space Invaders into Galaxian machines. He persuaded his brother Tim, two years younger (b. February 1961) to join him. The brothers worked as game designers at the arcade game company Associated Leisure with a college friend, John Lathbury. They followed the company's director when he started his own business, Zilec Electronics, which worked on arcade conversions. They worked on 12 arcade games, including Gyruss and Blue Print, and others whose names were kept secret and sold to other arcade manufacturers, including Konami and Sega. The job included international travel to Japan, where the brothers became acquainted with the Japanese game industry. During this time, Chris purchased, studied, and taught himself <b>to</b> <b>program</b> the new ZX80 processor within two years.|$|E
5|$|During a {{thorough}} study, the national BSA staff interviewed participants, parents, and leaders. They distributed questionnaires <b>to</b> <b>program</b> participants, reviewed the White Stag literature, and observed {{the program in}} action. They also conducted a statistical analysis of troops taking part in White Stag and compared them to non-participating units. In December 1965, Chief Scout Executive Joseph Brunton received the White Stag Report. It stated that offering leadership development to youth was a unique opportunity for Scouting to provide a practical benefit to youth and would add substantial support to Scouting's character development goals. It recommended that Wood Badge {{should be used to}} experiment with the leadership development principles of White Stag. The program had until this time taught the adults the same Scoutcraft skills a boy was required to learn to become a First Class Scout along with concepts of the patrol method.|$|E
5|$|In 2000, McMullen {{sold the}} team to Puck Holdings, an {{affiliate}} of YankeeNets, for $176million. The owners wanted <b>to</b> <b>program</b> Devils games on what eventually became the YES Network and move {{the team to}} a new arena in Newark. Neither of these proposals became reality under Puck Holdings' ownership. For {{the start of the}} next season, Lamoriello was appointed CEO of both the Devils and the New Jersey Nets National Basketball Association team. He remained {{at the helm of the}} basketball team until it was sold with the intention of moving it to Brooklyn in 2004.|$|E
50|$|The {{program has}} been lauded for its success {{compared}} <b>to</b> similar <b>programs</b> in other cities. In April 2015, President Obama visited Louisville <b>to</b> praise the <b>program</b> and <b>to</b> {{use it as an}} example of the federal TechHire initiative that provides grants <b>to</b> similar <b>programs.</b> An effort is also underway <b>to</b> create a <b>program</b> <b>to</b> teach others cities how <b>to</b> run similar <b>programs.</b>|$|R
5000|$|Automatic {{generation}} of links <b>to</b> <b>programming</b> language documentation ...|$|R
50|$|The Wiring IDE {{uses the}} GNU toolchain and AVR Libc <b>to</b> compile <b>programs,</b> and uses avrdude <b>to</b> upload <b>programs</b> <b>to</b> the board.|$|R
5|$|Mitsuda {{was born}} in Tokuyama, Japan, on January 21, 1972, and {{was raised in the}} Kumage District of Yamaguchi Prefecture. He took piano lessons {{beginning}} at the age of five, but was more interested in sports at the time and did not take music seriously, quitting by the age of six. For a while, he wanted to become a professional golfer. While in high school, Mitsuda rediscovered music, inspired by Vangelis' Blade Runner and Henry Mancini's The Pink Panther film scores. After watching Railman, he decided to become a music composer. He became interested in PCs after his father bought him one, which was a rare item at the time. He started <b>to</b> <b>program</b> computer games and compose music for them, as well as take more technically oriented classes.|$|E
5|$|Perl's text-handling {{capabilities}} can be {{used for}} generating SQL queries; arrays, hashes, and automatic memory management make it easy to collect and process the returned data. For example, in Tim Bunce's Perl DBI application programming interface (API), the arguments to the API can be the text of SQL queries; thus it is possible <b>to</b> <b>program</b> in multiple languages at the same time (e.g., for generating a Web page using HTML, JavaScript, and SQL in a here document). The use of Perl variable interpolation to programmatically customize each of the SQL queries, and the specification of Perl arrays or hashes as the structures to programmatically hold the resulting data sets from each SQL query, allows a high-level mechanism for handling large amounts of data for post-processing by a Perl subprogram.|$|E
5|$|Peter Molyneux {{stated that}} {{he came up with}} the idea of {{creating}} Theme Park because he felt the business genre was worth pursuing. He said that Theme Park is a game he had always wanted to create, and wanted to avoid the mistakes of his earlier business simulation game, The Entrepreneur: he wanted to create a business simulation game and make it fun so people would want to play it. In an interview, he explained that the primary reason he created Theme Park was because he wanted players to create their dream Theme Park. Another reason is he wanted players to understand the kind of work running one entails. The three difficulty settings enable players to choose the desired depth: simply having fun creating a theme park, or making all the business decisions too. Molyneux stated that the most difficult part <b>to</b> <b>program</b> was the visitors' behaviour.|$|E
5000|$|There are {{two general}} {{approaches}} <b>to</b> <b>programming</b> language implementation: ...|$|R
50|$|Dovlin's behind-the-scenes work led him <b>to</b> {{syndicated}} television <b>programming,</b> {{where he}} contributed <b>to</b> <b>programs</b> including Extra, Entertainment Tonight, Hard Copy and Access Hollywood.|$|R
40|$|Abstract: Computer Programming {{learning}} is a difficult process. Experience has demonstrated that many students find it difficult <b>to</b> use <b>programming</b> languages <b>to</b> write <b>programs</b> that solve problems. In this paper we describe several educational computer tools used successfully <b>to</b> support <b>Programming</b> learning and we present a global environment which integrates them, allowing a broader approach <b>to</b> <b>Programming</b> teaching and learning. This environment uses program animation and the Computer-Supported Collaborative Learning (CSCL) paradigm...|$|R
5|$|Python {{can serve}} as a {{scripting}} language for web applications, e.g., via mod_wsgi for the Apache web server. With Web Server Gateway Interface, a standard API has evolved to facilitate these applications. Web frameworks like Django, Pylons, Pyramid, TurboGears, web2py, Tornado, Flask, Bottle and Zope support developers in the design and maintenance of complex applications. Pyjs and IronPython can be used to develop the client-side of Ajax-based applications. SQLAlchemy can be used as data mapper to a relational database. Twisted is a framework <b>to</b> <b>program</b> communications between computers, and is used (for example) by Dropbox.|$|E
5|$|Representatives enthusiastically {{described}} {{a language that}} could work {{in a wide variety}} of environments, from banking and insurance to utilities and inventory control. They agreed unanimously that more people should be able <b>to</b> <b>program</b> and that the new language should not be restricted by the limitations of contemporary technology. A majority agreed that the language should make maximal use of English, be capable of change, be machine-independent and be easy to use, even at the expense of power.|$|E
5|$|The 808 was {{the first}} drum machine with the ability <b>to</b> <b>program</b> an entire {{percussion}} track from beginning to end, complete with breaks and rolls. It includes volume knobs for each voice, numerous audio outputs, and a DIN sync port (a precursor to MIDI) to synchronize with other devices through the Digital Control Bus interface, which was considered groundbreaking. The machine has three trigger outputs, {{which can be used}} to synchronize with synthesizers and other equipment.|$|E
2500|$|Security best {{practices}} (system functions access, access control <b>to</b> <b>programs)</b> ...|$|R
50|$|ACS give a sound {{ground for}} {{applicative}} approach <b>to</b> <b>programming.</b>|$|R
5000|$|Cooper, Doug Oh My! Modula-2: An Introduction <b>to</b> <b>Programming,</b> 1991, ...|$|R
5|$|The {{development}} toolkit for the Motorola CPU {{included a}} compiler for the C programming language, {{which the two}} programmers were familiar with. After Atari had conducted performance evaluations, it approved usage of the language. Cerny and Flanagan's decision <b>to</b> <b>program</b> Marble Madness in the C language had positive and negative consequences. Atari games had previously been programmed in assembly language. The C language was easier <b>to</b> <b>program,</b> but was less efficient, so the game operates at the slower speed of 30Hz instead of the normal 60Hz frequency of arcade games at the time. Cerny decided to use a trackball system (marketed by Atari as Trak-Ball) to give the game a unique control system, and he chose a motorized trackball for faster spinning and braking when the in-game ball traveled downhill and uphill, respectively. As it was building the prototypes, Atari's design department informed Cerny that the motorized trackball's design had an inherent flaw—one of the four supports had poor contact with the ball—and {{the use of a}} regular trackball was more feasible. Additionally, Cerny had anticipated the use of powerful custom chips that would allow RAM-based sprites to be animated by the CPU, but the available hardware was a less-advanced system using ROM-based, static sprites.|$|E
5|$|The {{game was}} {{conceived}} by Yuji Horii around 1981, {{when he was}} 27 years old, shortly after he bought his first computer and learned <b>to</b> <b>program</b> with it by modifying other games. During this time, he read a PC magazine article about a computer game genre in the United States, text adventures. Horii noticed the lack of such games in the Japanese market and decided to create an adventure game of his own. Horii also cited the manga authors Tetsuya Chiba, Mitsuru Adachi and Katsuhiro Otomo as influences. The game was developed using the BASIC programming language.|$|E
5|$|While {{the five}} women worked on ENIAC, they {{developed}} subroutines, nesting, and other fundamental programming techniques, and arguably invented {{the discipline of}} programming digital computers. Bartik's programming partner on the ENIAC was Betty Holberton. Together, they created the master program for the ENIAC and led the ballistics programming group. The team also learned to physically modify the machine, moving switches and rerouting cables, in order <b>to</b> <b>program</b> it. In addition to performing the original ballistic trajectories they were hired to compute, they soon became operators on the Los Alamos nuclear calculations, and generally expanded the programming repertoire of the machine. Bartik was chosen along with Betty Holberton to write a program to display trajectory simulations for the first public demonstration of the ENIAC.|$|E
5000|$|High school {{students}} use AgentSheets as introduction <b>to</b> <b>programming</b> tool ...|$|R
5000|$|Security best {{practices}} (system functions access, access control <b>to</b> <b>programs)</b> ...|$|R
5000|$|... {{providing}} access <b>to</b> <b>programs</b> such {{as health}} and education; and ...|$|R
