1|457|Public
50|$|A trace tree is a data {{structure}} {{that is used}} in the runtime compilation of programming code. Trace trees are used in a type of 'just in time compiler' that <b>traces</b> <b>code</b> executing during hotspots and compiles it. When those hotspots are entered again the compiled code is run instead. It traces each statement executed, including within other function calls, and this entire execution path is compiled. This is different from compiling individual functions. The compiler can gain more information for the optimizer to operate on, and remove some of the overhead of the calls. Anytime the compiled code makes a call to code that has not been jitted, the interpreter is called to continue.|$|E
40|$|Abstract—We present linear codes over finite {{commutative}} rings {{which are}} not necessarily Frobenius. We treat the notion of syndrome decoding by using Pontrjagin duality. We also give a version of Delsarte’s theorem over rings relating <b>trace</b> <b>codes</b> and subring subcodes. Keywords—Codes, Finite Rings, Pontrjagin Duality, <b>Trace</b> <b>Codes.</b> I...|$|R
40|$|We report {{benchmarking}} of EC absorption and CD {{from the}} GEN-RAY ray <b>tracing</b> <b>code</b> against {{results from the}} well-known TORAY ray <b>tracing</b> <b>code</b> for ITER and DIII-D conditions. The code is then applied to calculate nonthermal cyclotron emission from the DIII-D tokamak for high power, low density discharges, using CQL 3 D distri-butions functions. Radiation temperature is four times the Thomson temperature. The GENRAY ray <b>tracing</b> <b>code</b> [1, 2] is an all-frequencies ray <b>tracing</b> <b>code</b> in three dimensional geometry. Presently, the ray tracing uses toroidal equilibria as speci-fied by the EQDSK format, with optional toroidal variations in magnetic field and plasma parameters. Several alternative wave dispersion calculations are supported, including the fully relativistic relation of Mazzucato-Fidone-Granata[3]. Current drive is obtained with the Cohen adjoint module[4]. For modeling of high power RF injection, GENRAY is coupled to the CQL 3 D Fokker-Planck code[5]...|$|R
40|$|The {{objectives}} {{of this research}} include supporting the Aerothermodynamics Branch's research by developing graphical visualization tools for both the branch's adaptive grid code and flow field ray <b>tracing</b> <b>code.</b> The completed research for the reporting period includes development of a graphical user interface (GUI) and its implementation into the NAS Flowfield Analysis Software Tool kit (FAST), for both the adaptive grid code (SAGE) and the flow field ray <b>tracing</b> <b>code</b> (CISS) ...|$|R
40|$|AbstractA <b>trace</b> <b>coding</b> is an {{injective}} morphism {{between two}} trace monoids. This definition naturally extends the classical notion of word coding between two free monoids. We prove that any lifting of a <b>trace</b> <b>coding</b> {{is a word}} coding. More precisely, given a trace codingF, let us choose for any lettera, a representative wordf(a) of the traceF(a). Then, the word morphismfis also a coding. This result positively solves a problem proposed by Ochmański...|$|R
40|$|The {{classical}} Tonks-Langmuir {{one dimensional}} (1 D) free fall ion model of sheath is adapted and generalized to two dimensional (2 D) geometries, giving a rigorous base to ion <b>tracing</b> <b>codes.</b> The reduction of integro-differential equations to a coupled system of partial differential equa-tion (PDE), suitable for 2 D applications, is performed. The distinction between plasma core and frontal plasma is natu-rally introduced. Numerical {{results of this}} model (still lim-ited to positive ion case for simplicity) and comparisons with an ad hoc developed <b>tracing</b> <b>code</b> are given...|$|R
40|$|An {{insightful}} view {{into the}} design of traitor <b>tracing</b> <b>codes</b> should necessarily consider the worst case attacks that the colluders can lead. This paper takes an information-theoretic point of view where the worst case attack {{is defined as the}} collusion strategy minimizing the achievable rate of the traitor <b>tracing</b> <b>code.</b> Two different decoders are envisaged, the joint decoder and the simple decoder, as recently defined by P. Moulin Moulin 08 universal. Several classes of colluders are defined with increasing power. The worst case attack is derived for each class and each decoder when applied to Tardos' codes and a probabilistic version of the Boneh-Shaw construction. This contextual study gives the real rates achievable by the binary probabilistic traitor <b>tracing</b> <b>codes.</b> Attacks usually considered in literature, such as majority or minority votes, are indeed largely suboptimal. This article also shows the utmost importance of the time-sharing concept in a probabilistic codes. Comment: submitted to IEEE Trans. on Information Forensics and Securit...|$|R
30|$|A {{variety of}} skills {{necessary}} for programming has been discussed in the literature. Researchers found that <b>code</b> <b>tracing</b> must be learned before code writing (Lopez et al. 2008; Thompson et al. 2008; Harrington and Cheng 2018). Further evidence proves relationships between <b>code</b> <b>tracing,</b> <b>code</b> writing, and code explaining (Lister et al. 2009; Venables et al. 2009). A strong positive correlation was found between <b>code</b> <b>tracing</b> and <b>code</b> writing (Lister et al. 2010). Harrington and Cheng (2018) conducted a study with 384 students, to investigate whether a gap exists between the ability of students to <b>trace</b> and write <b>code.</b> The {{study was conducted in}} an examination setting, where students were given two questions. The participants were randomly assigned to perform <b>code</b> <b>tracing</b> on one question and code writing on other. The results show that 56 % of the students had almost no gap between their <b>code</b> <b>tracing</b> and <b>code</b> writing skills. For the remaining students who had of at least two out of eight marks, a strong negative correlation was found between the learners’ performance in the course {{and the size of the}} gap. Regardless of whether the student was better in either <b>code</b> <b>tracing</b> or <b>code</b> writing, authors suggest that a large gap was more likely due to the student struggling in the course. The authors found that underachieving students were struggling with understanding the core programming concepts. The conclusion of the authors is also supported by literature, as learners need both declarative knowledge and procedural knowledge (Anderson, 1982). Students often struggle to translate problems into manageable tasks due to the absence of mental models (Winslow 1996). Ahmadzadeh et al. (2005) conducted a study on the debugging patterns of novices and found that most learners competent in debugging were also advanced programmers (66 %). However, only 39 % of advanced programmers were also competent in debugging. These findings provide evidence that debugging someone else’s program requires a higher order of skill than code writing.|$|R
40|$|Abstract. The {{generalized}} Hamming weights of {{a linear}} code are fundamental code parameters {{related to the}} minimal overlap structures of the subcodes. In this paper, some results are presented on the estimates of generalized Hamming weights of cyclic codes, which connect their corresponding <b>trace</b> <b>codes.</b> 1...|$|R
50|$|Atmospheric optics ray <b>tracing</b> <b>codes</b> - {{this article}} list codes for light {{scattering}} using ray-tracing technique to study atmospheric optics phenomena such as rainbows and halos. Such particles can be large raindrops or hexagonal ice crystals. Such codes {{are one of}} many approaches to calculations of light scattering by particles.|$|R
40|$|OECD/NEA ROSA/LSTF project {{tests are}} {{performed}} on the Large Scale Test Facility (LSTF). LSTF is a full-height, full-pressure and 1 / 48 volumetrically-scaled two-loop system which aims to simulate Japanese Tsuruga- 2 Westinghouse-type 4 -loop PWR. ROSA-V Test 6 - 1 simulates a pressure vessel (PV) upper-head small break loss-of-coolant accident (SBLOCA) with a break size equivalent to 1. 9 % of the volumetrically scaled cross-sectional area of the reference PWR cold leg. The main objective of present thesis {{is to build a}} TRACE calculation model for simulating thermal hydraulic behaviors in LSTF and PV upper-head SBLOCA, so as to assess different modeling options and parameters of <b>TRACE</b> <b>code.</b> The results show that <b>TRACE</b> <b>code</b> well reproduce the complex physical phenomena involved in this type of SBLOCA scenarios. Almost all the events in the experiment are well predicted by the model based on <b>TRACE</b> <b>code.</b> In addition, the sensitivity of different models and parameters are investigated. For example, the code slightly overestimates the break mass flow from upper head which affects the accuracy of the results significantly. The rising of core exit temperature (CET) is significantly influenced by the flow area of leakage between downcomer and hot leg. Besides, the effect of the break location, low pressure injection system (LPIS) and accumulator setup are also studied...|$|R
40|$|NASA's current {{predictive}} capabilities {{using the}} ray tracing program (RTP) are validated using helicopter noise data taken at Eglin Air Force Base in 2007. By including refractive propagation effects due to wind and temperature, the ray <b>tracing</b> <b>code</b> {{is able to}} explain large variations in the data observed during the flight test...|$|R
5000|$|The Promises tab {{allows for}} <b>tracing</b> of <b>code</b> through {{asynchronous}} operations.|$|R
40|$|The recent {{benchmarking}} activity involving ECH codes [1] {{resulted in}} a good confidence about the reliability of their results. The beam <b>tracing</b> <b>code</b> TORBEAM [2], as well as GRAY [3], has been used extensively {{during the past few}} years to evaluate the performance of different layouts proposed for the upper ECRH launcher for ITER. Th...|$|R
40|$|International audienceWe build a {{class of}} codes using {{hermitian}} forms and the functional <b>trace</b> <b>code.</b> Then we give a general expression of the r-th minimum distance of our code and compute general bounds for the weight hierarchy by using exponential sums. We also get the minimum distance and calculate the r-th generalized Hamming weight dr in some special cases...|$|R
40|$|We {{construct}} {{a family of}} two-Lee-weight codes over the ring $R_k,$ which is defined as <b>trace</b> <b>codes</b> with algebraic structure of abelian codes. The Lee weight distribution of the two-weight codes is given. Taking the Gray map, we obtain optimal abelian binary two-weight codes by using the Griesmer bound. An application to secret sharing schemes is also given...|$|R
40|$|The uniform {{distribution}} of the trace map lends itself very well {{to the construction of}} binary and non-binary codes from Galois fields and Galois rings. In this paper we study the {{distribution of the}} trace map with the argument ax 2 over the Galois field GF(p, 2). We then use this distribution to construct two-weight, self-orthogonal, <b>trace</b> <b>codes...</b>|$|R
40|$|This paper {{reports on}} a {{replication}} of earlier studies into a possible hierarchy of programming skills. In this study, the students from whom data was collected were at a university that had not provided data for earlier studies. Also, the students were taught the programming language “Python”, which had not been used in earlier studies. Thus this study serves {{as a test of}} whether the findings in the earlier studies were specific to certain institutions, student cohorts, and programming languages. Also, we used a non–parametric approach to the analysis, rather than the linear approach of earlier studies. Our results are consistent with the earlier studies. We found that students who cannot <b>trace</b> <b>code</b> usually cannot explain code, and also that students who tend to perform reasonably well at code writing tasks have also usually acquired the ability to both <b>trace</b> <b>code</b> and explain code...|$|R
40|$|Thepresent paper dealswith the {{analytical}} {{study of the}} PKL experiment G 3. 1 performed using the <b>TRACE</b> <b>code</b> (version 5. 0 patch 1). The test G 3. 1 simulates a fast cooldown transient, namely, a main steam line break. This leads to a strong asymmetry caused by an increase of the heat transfer from the primary to the secondary side that induces a fast cooldown transient on the primary sideaffected loop. The asymmetric overcooling effect requires {{an assessment of the}} reactor pressure vessel integrity considering PTS (pressurized thermal shock) and an assessment of potential recriticality following entrainment of colder water into the core area. The aim of this work is the qualification of the heat transfer capabilities of the <b>TRACE</b> <b>code</b> from primary to secondary side in the intact and affected steamgenerators (SGs) during the rapid depressurization and the boiloff in the affected SG against experimental data...|$|R
40|$|AbstractWords {{in certain}} binary <b>trace</b> <b>codes</b> {{correspond}} to algebraic curves over finite fields of characteristic 2 and correspond to quadratic forms over F 2. Via the relation ?with quadratic forms we construct subcodes {{in which all}} non-zero words have minimum weight. We show how the relation between quadratic forms, codes and curves {{can be used to}} construct curves with many rational points...|$|R
40|$|Abstract. The uniform {{distribution}} of the trace map lends itself very well {{to the construction of}} binary and non-binary codes from Galois fields and Galois rings. In this paper we study the {{distribution of the}} trace map with the argument ax 2 over the Galois field GF (p, 2). We then use this distribution to construct two-weight, self-orthogonal, <b>trace</b> <b>codes...</b>|$|R
40|$|For planned optimization, the 1 /ν neoclassical {{transport}} is {{studied for}} the torsatron Uragan- 2 M (U- 2 M) [1]. For stellarators where the finite plasma pressure causes a weak {{influence on the}} equilibrium (e. g., U- 2 M) the effective ripple, ǫeff, can be calculated using the field line <b>tracing</b> <b>code</b> [2] (NEO code) in real space coordinates. Also, an optimizing procedur...|$|R
40|$|The {{response}} {{function of the}} magnetic spectrometer PRISMA is studied via a Monte Carlo simulation that employs a ray <b>tracing</b> <b>code</b> to determine the trajectories of individual rays through the electromagnetic fields. The calculated response is tested on angular and energy distributions provided by theoretical calculations for the (48) Ca + (64) Ni multinucleon transfer reaction and applied to the corresponding experimental data...|$|R
40|$|Execution) is a {{tracing system}} {{developed}} by Larus and Ball which is incorporated {{as part of}} the Gnu C compiler [3]. Its goal is to generate very small traces which can be saved and then reused for multiple simulation runs. The modified compiler actually produces two executable programs. The first is the modified application. In addition to normal compilation, the compiler uses the notion of abstract execution to insert <b>tracing</b> <b>code</b> in the application code. Abstract execution is based upon control-flow tracing {{to reduce the amount of}} <b>trace</b> <b>code</b> necessary. The resulting trace produced by the modified application is only a tiny part of the full trace. This allows traces representing long execution runs to be saved on disk. The compiler also produces an application specific trace regeneration program. The regeneration program is a post-processing tool which accepts the compacted trace and outputs the full execution trace. The tracing overhead, including the cost of saving the compacted tra [...] ...|$|R
40|$|In {{the short}} term period use of {{advanced}} Small Modular (SMR) {{is one of the}} most promising options for deployment of nuclear technology. The validation and assessment of the best estimate thermal hydraulic system <b>code</b> <b>TRACE</b> against SMR thermal hydraulic phenomena is a novel effort. In this framework the use of the natural circulation database developed at the OSU-MASLWR test facility, simulating the MASLWR reactor prototype, is of interest for analyses of the <b>TRACE</b> <b>code</b> capability in predicting natural circulation and primary/containment coupled behavior in SMR. The target of this paper is to analyze the TRACE V 5 capability for the simulation of natural circulation phenomena, at different primary and secondary side conditions, and to simulate the primary/containment coupling behavior, typical of the MASLWR design in Beyond Design-Basis Accidents (BDBA) by using a 3 D TRACE model of the containment. The results of the calculated data show that the <b>TRACE</b> <b>code</b> is able to predict, from a quantitative point of view, the primary natural circulation mass flow rate, and that a 3 D TRACE model of the containment is able to predict the main thermal hydraulic parameters, characterizing the primary/containment coupled thermal-hydraulic behavior...|$|R
40|$|In both {{algebraic}} geometry and coding theory, {{there is a}} great deal of interest in finding curves with many rational points. In particular, the correspondence between <b>trace</b> <b>codes</b> and Artin-Schreier curves gives a relation between the weights of codewords and the number of rational points on such curves, low weight codewords yielding curves with a large number of rational points. Further, subcodes of these codes correspon...|$|R
40|$|Regulatory Commission. The {{calculations}} {{presented in}} the report comprise an assessment case which {{is a part of}} the in-kind contribution of Finland to the CAMP program. The assessed case was to first build up a <b>TRACE</b> thermal hydraulic <b>code</b> simulation model for horizontal steam generator of the Parallel Channel Test Loop (PACTEL) facility. Secondly, the case consisted of calculations to test the <b>TRACE</b> <b>code</b> capabilities. A loss-of feedwater, LOF- 10, experiment was chosen for this assessment. The calculation results showed that the <b>TRACE</b> <b>code</b> is capable in simulating the horizontal steam generator behavior both in steady state and during loss-of feedwater transient. Three models with different nodalization were introduced. The calculation results differed from experiment to some extent. At the final state the calculated secondary side collapsed level decrease was more than in the experiment. The heat transfer from primary to the secondary side degraded gradually during the uncovery of the heat exchange tubes. The calculations overestimated this heat transfer. In the experiment the steam started to superheat immediately when the uppermost tube layer had uncovered. The steam superheating in the calculations was possible only after the uppermost cell on the secondary side had voided thoroughly. Because of the use of lumped pipe representation of the heat exchange pipes in th...|$|R
40|$|The {{radiation}} shielding in the Fermilab Main Injector (FMI) complex {{has been}} carried out by adopting a number of prescribed stringent guidelines established by a previous safety analysis. Determination of the required amount of radiation shielding at various locations of the FMI has been done using Monte Carlo computations. A three dimensional ray <b>tracing</b> <b>code</b> as well as a code based upon empirical observations have been employed in certain cases...|$|R
40|$|The {{document}} {{describes a}} detailed benchmark of two CFD methods, the elsA and the <b>TRACE</b> <b>code.</b> Both methods {{were applied to}} typical turbomachinery problems, a transonic turbine stage and a subsonic, single-stage compressor. The code comparison includes steady state as well as unsteady computations. Apart from a detailed code-to-code comparison with respect to performance and aerodynamic results, comparisons with available steady and time resolved measurement data are presented and discussed...|$|R
40|$|AbstractWords of low {{weight in}} <b>trace</b> <b>codes</b> {{correspond}} to curves with many points {{and the same}} holds for subcodes of low weight via the fibre product construction. In 1996 Heijnen and Pellikaan gave an algorithm to determine a basis of minimum weight subcodes of generalized Reed–Muller codes. We show how this algorithm {{can be used to}} produce curves with many points and also some new families of curves which reach the Hasse–Weil upper bound...|$|R
40|$|This paper {{describes}} {{response time}} measurements made by inserting <b>tracing</b> <b>code</b> in the UNIX® System device driver for the Digital Equipment Corporation TM (DEC**) RA 81 disks {{attached to a}} DEC UDA 50 controller. The goals and methodology of the measurements are described. Detailed analysis of data derived from the measurements is provided, and some conclusions are drawn {{about the effect of}} UNIX file system mechanisms on response times as seen by user processes...|$|R
40|$|This paper {{presents}} a new decoder for probabilistic binary traitor <b>tracing</b> <b>codes</b> {{which is based}} on classical hypothesis testing and estimation theory. This new decoder is blind, in the sense of ignoring a priori the collusion attack it is facing. It basically performs a joint estimation of the collusion channel and the probability that each user takes part in the collusion. The experimental results shown in the paper have been obtained with the classical Tardos code, although the proposed decoder works with arbitrary probabilistic binary codes. Another remarkable advantage of this blind decoder is its ability to successfully cope with collusion channels far more general than the classical Marking Assumption, including channels that produce erasures and random decoding errors. Index Terms — Traitor <b>tracing,</b> Tardos <b>code,</b> collusion channel estimation, likelihood ratio, optimal decoding...|$|R
30|$|We {{presented}} {{correlations between}} time per attempts and normalized gains {{for both the}} novice and advanced students. Bearing in mind that learners {{were not allowed to}} skip any activity, the average time per attempt is indicative of the performance of the learners. We showed evidence that the performance of novices on debugging code is positively correlated with their performance in <b>tracing</b> <b>code.</b> Moreover, their performance on <b>code</b> <b>tracing</b> is also positively correlated with their performance on fixing code. Lastly, their performance on fixing code is also positively correlated with their performance in debugging. All these are significant strong correlations, showing evidence that students with lower prior knowledge perform similarly across various coding activities of debugging, <b>tracing</b> and fixing <b>code.</b> However, we did not yield the same result between <b>code</b> <b>tracing</b> and <b>code</b> fixing when we considered both score and time per attempt (Table 8). However, we think that this might be related to the possible issue of controls in code fixing activities mentioned by the participants (“Comments and suggestions from participants” section). Therefore, we have reasons to accept that our illustration in Fig. 4 still holds. Our results showing relationships between skills is consistent with literature as Harrington and Cheng (2018) also found indications that underachieving students usually have a large gap between coding skills as they are most likely struggling in core programming concepts. Core programming concepts are essential in learning coding skills of debugging, tracing, and fixing. We see further confirmation of this when we looked at correlations between the same measures for students with higher prior knowledge. For advanced students, only their time per attempt on debugging revealed a significant correlation with <b>code</b> <b>tracing.</b> The performance of advanced students in identifying errors showed a strong positive correlation with their performance on output prediction, which demonstrated the relationship between debugging and <b>code</b> <b>tracing</b> skills (Table 7). Similarly, a moderate positive correlation was shown between debugging and <b>code</b> <b>tracing</b> when we had taken both scores and time per attempts into consideration (Table 8). Our results demonstrated how various coding skills are interrelated and how it differs between students of varying prior knowledge.|$|R
40|$|This talk {{presents}} 3 different tools developed {{recently for}} contamination analysis:HTML QCM analyzer: {{runs in a}} web browser, and allows for data analysis of QCM log filesJava RGA extractor: can load in multiple SRS. ana files and extract pressure vs. time dataC++ Contamination Simulation code: 3 D particle <b>tracing</b> <b>code</b> for modeling transport of dust particulates and molecules. Uses residence time to determine if molecules stick. Particulates can be sampled from IEST-STD- 1246 and be accelerated by aerodynamic forces...|$|R
40|$|Reed-Solomon (RS) codes over GF$(2 ^m) $ have {{traditionally}} been the most popular non-binary codes in almost all practical applications. The distance properties of RS codes result in excellent performance under hard-decision bounded-distance decoding. However, efficient and implementable soft decoding for high-rate (about 0. 9) RS codes over large fields (GF(256), say) continues to remain a subject of research with a promise of further coding gains. In this work, our objective is to propose and investigate $ 2 ^m$-ary codes with non-trivial binary <b>trace</b> <b>codes</b> {{as an alternative to}} RS codes. We derive bounds on the rate of a $ 2 ^m$-ary code with a non-trivial binary <b>trace</b> <b>code.</b> Then we construct certain subcodes of RS codes over GF($ 2 ^m$) that have a non-trivial binary trace with distances and rates meeting the derived bounds. The properties of these subcodes are studied and low-complexity hard-decision and soft-decision decoders are proposed. The decoders are analyzed, and their performance is compared with that of comparable RS codes. Our results suggest that these subcodes of RS codes could be viable alternatives for RS codes in applications. Comment: submitted to IEEE Transactions on Information Theor...|$|R
40|$|International audienceThis paper {{presents}} a new decoder for probabilistic binary traitor <b>tracing</b> <b>codes</b> under the marking assumption. It {{is based on}} a binary hypothesis testing rule which integrates a collusion channel relaxation so as to obtain numerical and simple accusation functions. This decoder is blind as no estimation of the collusion channel prior to the accusation is required. Experimentations show that using the proposed decoder gives better performance than the well-known symmetric version of the Tardos decoder for common attack channels...|$|R
