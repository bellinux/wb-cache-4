0|164|Public
3000|$|... (iii)The accurately-timed model adds {{set up time}}s which {{simulate}} the duration necessary to initialize a parallel <b>transfer</b> <b>controller</b> like Texas Instruments Enhanced Direct Memory Access (EDMA [40]). This set up time is scheduled in the core which sends the transfer.|$|R
40|$|Abstract: This paper {{presents}} a control system for manual pulsed Gas Metal Arc Welding (GMAW). This system {{consists of a}} current controller, which {{makes it possible to}} shape the current during welding, and two important components, which are the key issues discussed in this paper. These components include an arc length controller and a metal <b>transfer</b> <b>controller.</b> The arc length controller is based on a non-linear SISO model of the arc length process and uses feedback linearisation for cancellation of non-linear terms. The metal <b>transfer</b> <b>controller</b> uses a melting speed model to determine when liquid drops {{at the tip of the}} electrode should be detached. Tests are carried out in a simulation environment...|$|R
50|$|The MSP430 line {{offers two}} types of analog-to-digital {{conversion}} (ADC). 10- and 12-bit successive approximation converters, {{as well as a}} 16-bit Sigma-Delta converter. Data <b>transfer</b> <b>controllers</b> and a 16 word conversion-and-control buffer allow the MSP430 to convert and store samples without CPU intervention, minimizing power consumption.|$|R
5000|$|RT to <b>Controller</b> <b>Transfer.</b> The Bus <b>Controller</b> sends one {{transmit}} command word to a Remote Terminal. The Remote Terminal then sends {{a single}} Status word, immediately followed by 1 to 32 words.|$|R
50|$|The H8S/2258 {{group is}} {{high-performance}} microcomputers {{made up of}} the internal 32-bit configuration H8S/2000 CPU as their cores, and the peripheral functions required to configure a system. On-chip peripheral functions required for system configuration include data <b>transfer</b> <b>controller</b> (DTC) bus masters, ROM and RAM, a 16-bit timer-pulse unit (TPU), 8-bit timer (TMR), watchdog timer (WDT), serial communication interface (SCI), I2C bus interface (IIC), IEBus Controller (IEB), A/D converter, D/A converter, and I/O ports.|$|R
40|$|In {{recent years}} {{simulation}} tools for agent-environment interactions have included increasingly complex and physically realistic conditions. These simulations pose challenges for researchers interested in evolutionary robotics because the computational expense of running multiple evaluations {{can be very}} high. Here, we address this issue by applying evolutionary techniques to a simplified simulation of a simulation itself. We show this approach to be successful when <b>transferring</b> <b>controllers</b> evolved for example visual tasks from a simplified simulation to a comparatively rich visual simulation...|$|R
40|$|The {{continued}} {{increase in}} Internet throughput {{and the emergence}} of broadband access networks drive the development of communication processors. Other developing arenas for the application of intelligent I/O are storage area networks and system area networks used to cluster computers and mass storage systems, respectively. However, given all advantages of such devices, they have a common memory bottleneck originating from the internal bus that connects the I/O ports with the internal processor's core. This paper presents a novel intelligent I/O architecture that eliminates this bottleneck by implementing a novel data <b>transfer</b> <b>controller</b> that grants a four-fold improvement over conventional designs. I...|$|R
40|$|Abstract. In recent years, the {{evolution}} of artificial neural networks or neuroevolution has brought promising results in solving difficult reinforcement learning problems. But, like standard RL methods, it requires that solutions be discovered in simulation and then {{be transferred to the}} real world. To date, transfer has been studied primarily in mobile robot problems that exhibit stability. This paper presents the first study of transfer in an unstable environment. Using the double pole balancing task, we simulate the process of <b>transferring</b> <b>controllers</b> from simulation to the real-world, and show that the appropriate use of noise during evolution can improve transfer significantly by compensating for inaccuracy in the simulator. ...|$|R
40|$|This paper {{examines}} {{the performance of}} active isolation systems for microgravity space experiments {{as a function of}} desired transmissibilities that are chosen to be either much below or close to what can be tolerated. The control system utilizes two feedback signals: absolute acceleration and relative displacement of the controlled mass. The <b>controller</b> <b>transfer</b> function for acceleration feedback is chosen to avoid marginally stable pole-zero cancellations. The <b>controller</b> <b>transfer</b> function for relative displacement feedback is determined to achieve the desired transmissibility function. The issue of stability and properness of this <b>controller</b> <b>transfer</b> function are discussed. The required input forces and equivalent closed-loop stiffness are examined for various examples of desired transmissibilities...|$|R
30|$|The CU generates {{different}} command sequences {{for either}} of these modules. In card read sequence, the CRM reads the data block from the card along with the CRC bits and publish it to the I/O interfacing unit. In card write sequence, the CWM receives the data block as an input from the I/O interfacing unit and writes the received block along with CRC to the card and receives the CRC response from the card. After read/write operation, CRM/CWM issues a DONE signal and itself goes to the power saving mode. Finally after completion of entire data <b>transfer,</b> <b>controller</b> generates the ACK signal to the external world through the I/O interfacing unit to intimate that the work is successfully completed.|$|R
5000|$|... {{with the}} PID <b>controller</b> <b>transfer</b> functionThere exists a nice {{example of the}} {{closed-loop}} system discussed above. If we take ...|$|R
40|$|Commonly used Proportional-Integral-Derivative based UAV flight {{controllers}} {{are often}} seen {{to provide adequate}} trajectory-tracking performance, but only after extensive tuning. The gains of these controllers are tuned to particular platforms, which makes <b>transferring</b> <b>controllers</b> from one UAV to other time-intensive. This paper formulates the problem of control-transfer from a source system to a transfer system and proposes a solution that leverages well-studied techniques in adaptive control. It is shown that concurrent learning adaptive controllers improve the trajectory tracking performance of a quadrotor with the baseline linear controller directly imported from another quadrotor whose inertial characteristics and throttle mapping are very different. Extensive flight-testing, using indoor quadrotor platforms operated in MIT's RAVEN environment, is used to validate the method. United States. Office of Naval Research. Multidisciplinary University Research Initiative (Grant N 000141110688...|$|R
40|$|This article {{introduces}} a new software tool that provides an accurate simulation of Sony Aibo robots and {{the capability to}} <b>transfer</b> <b>controller</b> programs from the simulation to the real robot. Five components are described: (1) a simulated physics-based model of the Sony Aibo ERS- 210 (A) and ERS- 7 quadruped robots; (2) a graphical user interface for controlling the simulated and real robots; (3) a wireless communication protocol for controlling the robot from within Webots; (4) software components on the robot that enable remote control; and (5) a method for cross-compiling Webots robot controllers. The complete system has been calibrated and proof tested. It enables simultaneous control of both a simulated and a real Aibo robot and provides the user with a platform for convenient robot programming without any knowledge of the underlying robot firmware...|$|R
5000|$|... where [...] and [...] {{denote the}} plant and <b>controller's</b> <b>transfer</b> {{function}} in a basic closed loop control System, using unity negative feedback.|$|R
40|$|Commonly used Proportional-Integral-Derivative based UAV flight {{controllers}} {{are often}} seen {{to provide adequate}} trajectory-tracking performance only after extensive tuning. The gains of these controllers are tuned to particular platforms, which makes <b>transferring</b> <b>controllers</b> from one UAV to other time-intensive. This paper suggests the use of adaptive controllers in speeding up the process of extracting good control performance from new UAVs. In particular, it is shown that a concurrent learning adaptive controller improves the trajectory tracking performance of a quadrotor with baseline linear controller directly imported from another quadrotors whose inertial characteristics and throttle mapping are very di fferent. Concurrent learning adaptive control uses specifi cally selected and online recorded data concurrently with instantaneous data and is capable of guaranteeing tracking error and weight error convergence without requiring persistency of excitation. Flight-test results are presented on indoor quadrotor platforms operated in MIT's RAVEN environment. These results indicate the feasibility of rapidly developing high-performance UAV controllers by using adaptive control to augment a <b>controller</b> <b>transferred</b> from another UAV with similar control assignment structure. United States. Office of Naval Research. Multidisciplinary University Research Initiative (Grant N 000141110688) National Science Foundation (U. S.). Graduate Research Fellowship Program (Grant 0645960) Boeing Scientific Research Laboratorie...|$|R
40|$|Abstractâ€”This paper {{addresses}} bumpless <b>transfer</b> between observer-based <b>controllers</b> with {{integral action}} in a gain-scheduling architecture with application to wind turbine con-trol. Two methods based on the Youla-Kucera parameterization are applied to achieve bumpless <b>transfer</b> between <b>controllers</b> having equal or different number of control signals and integrators while preserving stability guarantees. Both methods handle reference signals to the controllers. The scheduling variable is described by a continuous func-tion, and even in situations where a transfer between two con-trollers is only initiated but not finalized, stability is sustained and no bumps are introduced in the control signals. The gain-scheduling approaches are verified by simulation on a non-linear model of a wind turbine. I...|$|R
2500|$|... where [...] {{is also a}} constant. Now if we set , , and , we {{can express}} the PID <b>controller</b> <b>transfer</b> {{function}} in series form as ...|$|R
40|$|We {{present a}} design style and {{synthesis}} algorithm that encompasses both asynchronous and synchronous state machines. Our proposed design style not only supports generalized "burst-mode" multiple-input change asynchronous designs [21], but also allows the automatic synthesis of any synchronous Moore machine using only basic gates (and no state-holding elements). Moreover, the synthesis method covers many circuit styles {{in the range}} between burst-mode and fully synchronous. We can easily specify and synthesize sequential circuits which change state on both rising and falling clock edges, have multiple-phase clocks, etc., and mixed synchronous/asynchronousdesigns, subject only to setup and holdtime constraints. To demonstrate {{the effectiveness of the}} design style and the synthesis tool, we present a modified version of a previously published large practical controller design [...] - the SCSI data <b>transfer</b> <b>controller</b> [14] redesigned to improve performance and to eliminate preprocessing circuit [...] ...|$|R
40|$|New {{digital control}} {{algorithms}} {{were developed to}} achieve the desired acceleration transmissibility function. The attractive electromagnets have been taken as actuators. The relative displacement and the acceleration of the mass were used as feedback signals. Two approaches were developed to find that <b>controller</b> <b>transfer</b> function in Z-domain, which yields the desired transmissibility at each frequency. In the first approach, the <b>controller</b> <b>transfer</b> function is obtained by assuming that the desired transmissibility is known in Z-domain. Since the desired transmissibility H sub d(S) = 1 /(tauS+ 1) (exp 2) is given in S-domain, the first task is to obtain the desired transmissibility in Z-domain. There are three methods to perform this task: bilinear transformation, and backward and forward rectangular rules. The bilinear transformation and backward rectangular rule lead to improper <b>controller</b> <b>transfer</b> functions, which are physically not realizable. The forward rectangular rule does lead to a physically realizable controller. However, this controller {{is found to be}} marginally stable because of a pole at Z= 1. In order to eliminate this pole, a hybrid control structure is proposed. Here the control input is composed of two parts: analog and digital. The analog input simply represents the velocity (or the integral of acceleration) feedback; and the digital controller which uses only relative displacement signal, is then obtained to achieve the desired closed-loop transfer function. The stability analysis indicates that the <b>controller</b> <b>transfer</b> function is stable for typical values of sampling period. In the second approach, the aforementioned hybrid control structure is again used. First, an analog <b>controller</b> <b>transfer</b> function corresponding to relative displacement feedback is obtained to achieve the transmissibility as 1 /(tauS+ 1) (exp 2). Then the transfer function for the digital control input is obtained by discretizing this analog <b>controller</b> <b>transfer</b> function via bilinear transformation. The stability of the resulting Z-domain closed loop system is analyzed. Also, the frequency response of the Z-domain closed-loop transfer function is determined to evaluate the performance of the control system...|$|R
40|$|This paper {{presents}} a simple approach to low-thrust optimal-fuel and optimal-time transfer problems between two elliptic orbits using the Cartesian coordinates system. In this case, an orbit {{is described by}} its specific angular momentum and Laplace vectors with a free injection point. Trajectory optimization with the pseudospectral method and nonlinear programming are supported by the initial guess generated from the Chang-Chichka-Marsden Lyapunov-based <b>transfer</b> <b>controller.</b> This approach successfully solves several low-thrust optimal problems. Numerical {{results show that the}} Lyapunov-based initial guess overcomes the difficulty in optimization caused by the strong oscillation of variables in the Cartesian coordinates system. Furthermore, a comparison of the results shows that obtaining the optimal transfer solution through the polynomial approximation by utilizing Cartesian coordinates is easier than using orbital elements, which normally produce strongly nonlinear equations of motion. In this paper, the Earth's oblateness and shadow effect are not taken into account...|$|R
50|$|At 18:58, the {{approach}} <b>controller</b> <b>transferred</b> Flight 383 to the Cincinnati tower frequency. At 18:59, Flight 383 received clearance {{from the tower}} controller to land on runway 18.|$|R
40|$|In this paper, we {{introduce}} {{the architecture of}} a new embedded field programmable processor array (E-FPPA) which consists of a low-power multiprocessor system embedded with standard programmable logic blocks and memory. Each block (processor, programmable logic, [...] .) is coupled to a <b>transfer</b> <b>controller</b> (TC) responsible of all the transfers between blocks. Instead of using a classical crossbar interconnection network, we propose a low cost hierarchical ring which combines simple interface and high performance communications when data locality is observed. Based on the E-FPPA, high performance reconfigurable systems can be easily built and we demonstrate that this architecture is an interesting alternative to traditional DSP for low-power applications. By using the 8 -bit CoolRisc processor [1, 2], an E-FPPA including a cluster of 16 processors, 16 TC, working respectively at 25 and 50 MHz, and 1 kbytes data SRAM for each processor, consumes 2 W with a peak performance of 1200 Mops. The chip [...] ...|$|R
5000|$|Introduced in 2009, The RX610 is {{a general}} purpose MCU with 100 MHz clock frequency, {{a large amount of}} {{integrated}} flash memory and peripherals enabling a system to be configured without external memory and peripheral devices reducing the total system cost. The core architecture supports DSP functions with 32-bit multiplier, Divider and Multiply-accumulator: Integrated memory up to 2 Mb of flash memory, 128 Kb of RAM and 32 kB of data flash memory. Integrated analogue functions including 16 channels of 10-bit ADC, 2 channels of 10 bit DAC. Also included are on-chip peripherals of Direct memory access <b>controller</b> (DMAC), Data <b>transfer</b> <b>controller</b> (DTC), 16-bit timer pulse unit (TPU) Ã— 12 channels, 16-bit compare match timer Ã— 4 channels, 8-bit timer (TMR) Ã— 4 channels. For communications there are 7 channels of serial communication interface (SCI) and 2 channels of I2C bus interface. Package options for the RX610 are 144-pin LFQFP and 176-pin LFBGA.|$|R
5000|$|<b>Controller</b> to RT <b>Transfer.</b> The Bus <b>Controller</b> sends one 16-bit receive command word, {{immediately}} {{followed by}} 1 to 32 16-bit data words. The selected Remote Terminal then sends a single 16-bit Status word.|$|R
2500|$|Evolutionary {{robotics}} is {{done with}} many different objectives, often at the same time. These include creating useful controllers for real-world robot tasks, exploring the intricacies of evolutionary theory (such as the Baldwin effect), reproducing psychological phenomena, and finding out about biological neural networks by studying artificial ones. Creating controllers via artificial evolution requires {{a large number of}} evaluations of a large population. This is very time consuming, {{which is one of the}} reasons why controller evolution is usually done in software. Also, initial random controllers may exhibit potentially harmful behaviour, such as repeatedly crashing into a wall, which may damage the robot. <b>Transferring</b> <b>controllers</b> evolved in simulation to physical robots is very difficult and a major challenge in using the ER approach. The reason is that evolution is free to explore all possibilities to obtain a high fitness, including any inaccuracies of the simulation [...] This need for a large number of evaluations, requiring fast yet accurate computer simulations, is one of the limiting factors of the ER approach [...]|$|R
50|$|The DMA <b>controller</b> <b>transfers</b> {{data from}} one address to another {{across the entire}} address range without CPU intervention. The DMA {{increases}} the throughput of peripheral modules and reduces system power consumption. The module features up to three independent transfer channels.|$|R
40|$|A {{continuum}} {{model for}} the SCOLE configuration has been derived using <b>transfer</b> matrices. <b>Controller</b> designs for distributed parameter systems have been analyzed. Pole-assignment controller design is considered easy to implement but stability is not guaranteed. An explicit transfer function of dynamic controllers has been obtained and no model reduction is required before the controller is realized. One specific LQG controller for continuum models had been derived, but other optimal controllers for more general performances need to be studied...|$|R
40|$|This paper {{describes}} one {{of possible}} approaches to control of MIMO control loops with utilisation of binding members and correction members. Binding members are used here for ensuring autonomy of control loop. Binding members are determined from so called main controllers, which are main diagonal {{elements of the}} <b>transfer</b> matrix of <b>controller</b> GR. The design of main controllers is carried out by any SISO method of synthesis. Correction members of <b>transfer</b> matrix of <b>controller</b> GKC serve for ensuring invariance of control loop and they are determined by using analogy of SISO branched control loops with measuring of dominant disturbance variable. Simulation verification was carried out for three-variable loop of a steam turbine...|$|R
5000|$|RT to RT <b>Transfers.</b> The Bus <b>Controller</b> {{sends out}} one receive command word {{immediately}} followed by one transmit command word. The transmitting Remote Terminal sends a Status word immediately followed by 1 to 32 data words. The receiving Terminal then sends its Status word.|$|R
40|$|This paper {{presents}} CoopDynSim, a multi-robot 3 D simulator. The main {{motivations for}} the development of a new simulation software lie in the need to emulate specific, custom made sensors, combined with the desire to smoothly <b>transfer</b> <b>controller</b> code from simulation to real implementation. The latter is achieved through the use of the same middleware layer already implemented in the real platforms. The high modularity of the solution allows the user to easily add new components or design new platforms. By having independent simulation threads for each robot, distributed control algorithms can easily be tested, abetted by a socket based connection, granting the possibility for an asynchronous, over the network, controller architecture. The ability to run simulations in real or simulated time, as well as a play back option, represent valuable features of the software. The simulator has been used in several projects, with different platforms and distinct control applications, proving it as a heterogeneous and flexible solution. Furthermore, its usage as a teaching tool in a roboticsâ€™ summer school as well as in an introductory robotics class in our university, upholds its simplicity and user-friendliness. FundaÃ§Ã£o para a CiÃªncia e a Tecnologia (FCT) - ref. SFRH/BD/ 38885 / 200...|$|R
5000|$|<b>Controller</b> to RT(s) <b>Transfer.</b> The Bus <b>Controller</b> sends one receive command {{word with}} a Terminal address of 31 {{signifying}} a broadcast type command, immediately followed by 0 to 32 data words. All Remote Terminals that implement broadcasts {{will accept the}} data but no Remote Terminals will respond.|$|R
50|$|During the April 1, 2015 Nintendo Direct, it was {{announced}} that Nintendo 64 games on the Wii U would feature Rumble Pak support not available on the Wii Virtual Console versions, as well as the original manuals, but support for <b>Transfer</b> Pak and <b>Controller</b> Pak features remain unavailable.|$|R
50|$|Each {{device is}} {{assigned}} a unique static {{address in the}} numeric range 0 to 63, making possible up to 64 devices in a basic system. Addresses may be arbitrarily assigned and devices need not be mapped to contiguous addresses (gaps may exist in the address map). DALI gateways {{can be used to}} implement systems that have more than 64 devices. Data is <b>transferred</b> between <b>controller</b> and devices by means of an asynchronous, half-duplex, serial protocol over a two-wire bus, with a fixed data transfer rate of 1200 bit/s.|$|R
40|$|Abstractâ€”In {{order to}} develop more {{energy-saving}} control algorithm, an electric vehicle air conditioning system model is established. Electric air conditioning system compressor model, compartment thermal load model, heat <b>transfer</b> model, <b>controller</b> model and temperature calculation model are built based on certain pure electric commercial vehicle air conditioning system. A compound control method applying fuzzy and PID theory is put forward in this paper. A secondary development of EV model is established in ADVISOR. As the result shows, the Fuzzy-PID control method is more accuracy and consuming less energy. Optimized control algorithm for air conditioning is realized. Keywords-electric air conditioning; fuzzy-PID; modeling I...|$|R
40|$|Abstract. In {{order to}} develop more {{energy-saving}} control algorithm, an electric vehicle air conditioning system model is established. Electric air conditioning system compressor model, compartment thermal load model, heat <b>transfer</b> model, <b>controller</b> model and temperature calculation model are built based on certain pure electric commercial vehicle air conditioning system. A compound control method applying fuzzy and PID theory is put forward in this paper. A secondary development of EV model is established in ADVISOR. As the result shows, the Fuzzy-PID control method is more accuracy and consuming less energy. Optimized control algorithm for air conditioning is realized...|$|R
40|$|A linear {{quadratic}} Gaussian with loop <b>transfer</b> recovery (LQG/LTR) <b>controller</b> is {{proposed for the}} efficient control of the output voltage of a buck-boost DC-DC power converter. The proposed control scheme guarantees excellent regulation of the output voltage. This is true even {{in the presence of}} large variations of the duty ratio and circuit parameter...|$|R
