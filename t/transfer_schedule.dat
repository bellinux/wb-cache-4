36|208|Public
5000|$|Convert, <b>transfer,</b> <b>schedule</b> and {{playback}} 2D or 3D {{video clips}} ...|$|E
5000|$|The same <b>transfer</b> <b>schedule</b> {{can also}} be used {{following}} a conventional overcall over 1NT as long as this overcall indicates an anchor suit. For instance: following an Asptro 2 overcall (showing [...] and another suit) over partner's 1NT opening, the bids 2NT, 3 and 3 would be transfers to the next strain, whilst 3 would be an asking bid.|$|E
40|$|The {{problem of}} {{optimizing}} the balancing of processing load originating {{at the various}} sites of heterogeneous processors is examined. The optimal amounts of load exchange among the sending and receiving processors are derived. The necessary and sufficient condition {{for the absence of}} synchronization delay is derived. The minimum communication capacity needed for the optimal load exchange is determined. Although not unique, the specified optimal load <b>transfer</b> <b>schedule</b> is amenable to simple implementation. Practical implementation of the specified bandwidth partitioning may employ any appropriate scheme of communication multiplexing available on the given nwork. An example with specific problem parameters is used to illustrate the determination and implementation of the optimal load <b>transfer</b> <b>schedule...</b>|$|E
40|$|ACM Computing Classification System (1998) : I. 2. 8, G. 1. 6. In {{this paper}} a file <b>transfer</b> <b>scheduling</b> problem is considered. This problem {{is known to}} be NP-hard, and thus {{provides}} a challenging area for metaheuristics. A variable neighborhood search algorithm is designed for the <b>transfer</b> <b>scheduling</b> of files between various nodes of a network, by which the overall transfer times are to be minimized. Optimality of VNS solutions on smaller size instances has been verified by total enumeration. For several larger instances optimality follows from reaching the elementary lower bound of a problem...|$|R
50|$|Analysis of {{clinical}} trial data may {{be carried out}} by laboratories, image processing specialists or other third parties. The clinical data manager liaises with such data providers and agree data formats and <b>transfer</b> <b>schedules.</b> Data may be reconciled against the CRF to ensure consistency.|$|R
40|$|In a {{conventional}} dial-a-ride-system passengers are moved {{with the same}} vehicle between their pickup and their drop-off location. In a dial-a-ride-system with transfer, it is possible (or even standard) that passengers change the vehicle once or several times. <b>Transfer</b> <b>Scheduling</b> Constraints (TSC) are imposed {{in order to ensure}} that the comfort of the transfer remains on an acceptable level by avoiding too short or too long transfer times but also for limiting the total riding time between the initial pickup location to the final destination. In this contribution, we investigate the dial-a-ride-problem with <b>transfer</b> <b>scheduling</b> constraints (DARP-TSC) as an example for routing scenarios with TSC. We provide initial insights into the consequences of introducing TSCs using computational experiments with a memetic algorithm metaheuristic...|$|R
40|$|This paper {{incorporates}} {{the phenomenon of}} time inconsistency into the problem of designing an optimal <b>transfer</b> <b>schedule</b> under income shocks and asymmetric information. The optimal solution reflects the dilemma that a principal has to face when playing the roles of self-control enforcer and consumption smoother simultaneously. Time Inconsistency...|$|E
40|$|DOE`s Environmental Management Program at Oak Ridge has {{developed}} an integrated tank waste management plan that combines the accelerated deployment of innovative technologies with an aggressive waste <b>transfer</b> <b>schedule.</b> Oak Ridge is cleaning out waste from aging underground storage tanks in preparation of waste processing, packaging and final safe disposal. During remediation this plan will {{reduce the risk of}} environmental, worker, and civilian exposure, save millions of dollars, and cut years off of tank remediation schedules at Oak Ridge...|$|E
40|$|An {{efficient}} {{technology transfer}} from advanced {{to developing countries}} is explored by extending dynamic input-output optimization models. We include capital investments for the transferred technologies that affect the structural change and the welfare streams of consumption and the environmental state in the developing country. This technology transfer model is then linearized to solve larger problems. The linearized model was estimated and applied to assess the optimal technology <b>transfer</b> <b>schedule</b> from Japan to the Philippines. Technology Transfer, Environmental Protection, Dynamic Input-output Models, Linear Programming,...|$|E
40|$|This paper {{presents}} {{our work}} on online data backup systems in which users store their backup data in data centers and/or on peers. We analyze the system performance of various data placement schemes {{and evaluate the}} choices of implemented <b>transfer</b> <b>scheduling</b> techniques with different user resource profiles...|$|R
5000|$|... #Subtitle level 3: <b>Transfer</b> of <b>schedule</b> and {{affiliation}} to WTVG-DT2 ...|$|R
50|$|Samples {{collected}} during {{a clinical trial}} may be sent to a single central laboratory for analysis. The clinical data manager liaises with the central laboratory and agrees data formats and <b>transfer</b> <b>schedules</b> in Data <b>Transfer</b> Agreement. The sample collection date and time may be reconciled against the CRF {{to ensure that all}} samples collected have been analysed.|$|R
40|$|This paper {{investigates the}} {{provision}} of insurance to workers against searchinduced wage ‡uctuations. I rely on numerical simulations of a model of on-the-job search and precautionary savings. The model is calibrated to low skilled workers in the U. S [...] The extent of insurance {{is determined by the}} degree of progressivity of a non-linear <b>transfer</b> <b>schedule.</b> The fundamental trade-o ¤ is that a more generous provision of insurance reduces incentives to search for better paying jobs, which is detrimental to the production e ¢ ciency of the economy. I show that progressivity raises the search intensity of unemployed worker, which reduces the equilibrium rate of unemployment, but lowers the search intensity of employed job seekers, which results in a lower output level. I also solve numerically for the optimal non-linear <b>transfer</b> <b>schedule.</b> The optimal policy is to provide almost no insurance up to a monthly income level of $ 1450, such as to preserve incentives to move up the wage ladder, and full insurance above $ 1650. This policy halves the standard deviation of labor incomes, increases output by 2. 4 % and generates a consumption-equivalent welfare gain of 1. 3 %. Forbidding private savings does not fundamentally change the shape of the optimal transfer function, but tilts the optimal policy towards more insurance at the expense of production e ¢ ciency...|$|E
40|$|I study a {{model of}} moral hazard with soft information. The risk-averse agent takes an action and she alone observes the {{stochastic}} outcome; hence the principal faces a problem of ex post adverse selection as well. With limited instruments, the principal cannot solve these two problems independently. To elicit ex post information revelation, he must use an audit mechanism and distort the <b>transfer</b> <b>schedule,</b> {{as compared to the}} standard moral hazard problem. This is socially costly in that these transfer distortions imply effort distortions. These results are robust and suggest high-power contracts may have to be revisited when information is soft...|$|E
40|$|Mobile {{programs}} {{require that}} the executable be transfered prior to execution. In the case of languages like java which support dynamic class loading, class transfers across the network occur {{during the course of}} the entire program execution. This paper examines the feasibility of a push based scheme for downloading the class files as opposed to the traditional "on-demand" approach. This scheme involves an initial static analysis phase to determine a possible <b>transfer</b> <b>schedule.</b> The scheme also proposes a way of dynamically altering this schedule based on runtime profile information. The entire project has been implemented at the JDK level without any modification to the JVM. Some preliminary tests show that using the new scheme gives good results...|$|E
40|$|Data <b>transfers</b> <b>scheduling</b> {{process is}} an {{important}} part of almost all distributed virtual walkthrough applications because of network restrictions. The restrictions can be reduced using multi-resolution data representation, download priority determination and data prefetching algorithms. Advanced priority determination and prefetching methods use mathematic description of motion to predict next position of a user. In the case of sudden but regular changes in user motion direction, these algorithms are not sufficient to predict future position with required accuracy and at required distance. The main contribution of this thesis is a location-aware data <b>transfers</b> <b>scheduling</b> method which solves also such cases. The proposed scheme exploits results of next location prediction methods to compute the download priority or additionally prefetch data needed to render a scene in advance. Experiments show that the proposed scheduling method outperforms the state-of-the-art motion functions in both data transfer efficiency and rendered image quality...|$|R
40|$|This paper {{presents}} new {{modifications of}} Variable Neighborhood Search approach for solving the file <b>transfer</b> <b>scheduling</b> problem. To obtain better solutions {{in a small}} neighborhood of a current solution, we implement two new local search procedures. As Gaussian Variable Neighborhood Search showed promising results when solving continuous optimization problems, its implementation in solving the discrete file <b>transfer</b> <b>scheduling</b> problem is also presented. In order to apply this continuous optimization method to solve the discrete problem, mapping of uncountable set of feasible solutions into a finite set is performed. Both local search modifications gave better results for the large size instances, as well as better average performance for medium and large size instances. One local search modification achieved significant acceleration of the algorithm. The numerical experiments showed that the results obtained by Gaussian modifications are comparable with the results obtained by standard VNS based algorithms, developed for combinatorial optimization. In some cases Gaussian modifications gave even better results. [Projekat Ministarstava nauke Republike Srbije, br. 174010...|$|R
40|$|Quality {{of service}} {{capability}} of input queued packet switches is investigated. A packet <b>transfer</b> <b>scheduling</b> problem is formulated whereby each input-output pair is <b>scheduled</b> for packet <b>transfers</b> by regularly spaced deadlines, {{in compliance with}} a specified data rate. Suitable applications include ATM networks and satellite switched TDMA systems that support periodic traffic with delay guarantees. Two heuristic scheduling algorithms are proposed and their performances are studied numerically...|$|R
40|$|I study {{a simple}} model of moral hazard with soft information. The risk-averse agent takes an action and she alone observes the {{stochastic}} outcome; hence the principal faces {{a problem of}} ex post adverse selection. Some measure of truthful revelation is necessary to implement any eort, for which an audit is required. And for eort to be induced the agent must be oered a rent. There exists a truth-telling equilibrium, and one with partial pooling, with eort in either case. To accommodate ex post information revelation, the principal must distort the <b>transfer</b> <b>schedule,</b> {{as compared to the}} standard moral hazard problem. Then eort is implemented for a smaller set of parameters than in the standard problem. ...|$|E
40|$|Work-ahead {{smoothing}} is {{a technique}} whereby a server, transmitting stored compressed video to a client, utilizes client buffer space to reduce the rate variability of the transmitted stream. The technique requires the server to compute a schedule of transfer under the constraints that the client buffer neither overflows nor underflows. Recent work established an optimal off-line algorithm (which minimizes peak, variance and rate variability of the transmitted stream) under the assumptions of fixed client buffer size, known worst case network jitter, and strict playback of the client video. In this paper, we examine the practical considerations of heterogeneous and dynamically variable client buffer sizes, variable worst case network jitter estimates, and client interactivity. These conditions require on-line computation of the optimal <b>transfer</b> <b>schedule.</b> We focus on techniques for reducing on-line computation time. Specifically, (i) we present an algorithm for precomputing and storing [...] ...|$|E
40|$|Virtual machine {{migration}} (VMM) is one {{of important}} services {{is used as a}} tool to facilitate system maintenance, load balancing, fault tolerance, on-demand service offerings. Live VMM transfers an active Virtual Machine (VM) from one physical host to another across different data centres. It involves a sequence of operations in iteration under a specific protocol/method for migrating execution context (active memory) and control data of a VM to the destination machine. These operations are dependent on data <b>transfer</b> <b>schedule,</b> availability of resources and overall timing constraints. The migration process is implemented by establishing shared network storage and/or a network communication channel. Along with the execution context the security configuration of the VM need to be transferred. In this paper we have proposed a security context migration framework. Both the static as well as dynamic security context is considered for migration...|$|E
40|$|Abstract—In this paper, a Q-Learning {{method for}} trasfer {{scheduling}} of freight cars in a train is proposed. In the proposed method, {{the number of}} freight-movements in order to line freights in the desired order is reflected by evaluation value for each pair of freight-layout and removal-destination at a freight yard. The best <b>transfer</b> <b>scheduling</b> can be derived by selecting the removal-action of freight that has the best evaluation value at each freight-layout...|$|R
40|$|Abstract. This paper {{presents}} an optimization mechanism {{to increase the}} performance of cloud services that transfer groups of deduplicated virtual machine (VM) images. This is necessary as the naive data transfer approach for groups of deduplicated VM images is extremely inefficient as it generates highly random disk access pattern. The optimization mechanism presented significantly improves the VM image transfer performance through intelligent buffering, blocklevel <b>transfer</b> <b>scheduling,</b> and data indexing to increase disk access sequentiality. 1...|$|R
40|$|In this paper, {{we propose}} to employ two {{optimizations}} – multi-hop path splitting and multi-pathing – {{to improve the}} performance of data transfers over shared public networks. We present a path determination algorithm which integrates the aforesaid optimizations {{in order to improve}} the performance of single file transfers. Finally, we develop a file <b>transfer</b> <b>scheduling</b> algorithm based on this framework, and evaluate its effectiveness on a wide-area testbed. Categories and Subject Descriptor...|$|R
40|$|Optimising the {{container}} <b>transfer</b> <b>schedule</b> at the multimodal terminals {{is known to}} be NP-hard, which implies that the best solution becomes computationally infeasible as problem sizes increase. Genetic Algorithm (GA) techniques are used to reduce container handling/transfer times and ships' time at the port by speeding up handling operations. The GA is chosen due to the relatively good results that have been reported even with the simplest GA implementations to obtain near-optimal solutions in reasonable time. Also discussed, is the application of the model to assess the consequences of increased scheduled throughput time as well as different strategies such as the alternative plant layouts, storage policies and number of yard machines. A real data set used for the solution and subsequent sensitivity analysis is applied to the alternative plant layouts, storage policies and number of yard machines...|$|E
40|$|By {{now there}} is {{substantial}} experimental evidence that people make use of "moral wiggle room" (Dana et al., 2007), that is, they tend to exploit moral excuses for selfish behavior. However, this evidence is limited to dictator games. In our experiment, a trust game variant, we study whether moral wiggle room also prevails, when reciprocity is a potential motivation for being generous. Trustees 4 back transfer choices are elicited for five different transfer levels of the trustor. Moreover, we ask trustees to provide their back <b>transfer</b> <b>schedule</b> for different scenarios that vary the implementation probability of the back transfer. This design allows us to identify subjects who reciprocate and analyze how these reciprocators respond to the provision of moral wiggle room. Our results suggest that moral wiggle room exists {{as well in the}} context of reciprocity. Among our subjects, 40...|$|E
40|$|The {{objective}} of this work is to evaluate the schedule and technical issues associated with consolidation of Remote Handled Transuranic (RH-TRU) sludges in the Melton Valley Storage Tanks (MVSTs). This work supports the DOE Transuranic Waste (TRU) Program plans for private sector treatment of all ORNL TRU sludges for disposal at the Waste Isolation Pilot Plant (WIPP). Transfer of these sludges must be completed in FY 2000 to meet the required schedule for beginning shipment of treated sludges to the WIPP by 2002. This study was performed to (1) evaluate the sludge <b>transfer</b> <b>schedule,</b> (2) evaluate the ability of existing tank systems to contain and manage the sludges and liquids generated during the transfers, and (3) evaluate the costs and schedules of different solid/liquid separation and solids-monitoring methods used during sludge transfer for management of sluice waters...|$|E
50|$|GetRight is able {{to pause}} and resume {{download}}s, download from multiple servers to speed up download time (segmented file <b>transfer),</b> <b>scheduling</b> the starting and stopping of downloads and shutting off the computer or disconnecting the modem when the downloads have finished. It is also able to integrate with Microsoft's Internet Explorer, and Mozilla Firefox with the FlashGot extension.It features support for the BitTorrent protocol, Metalink, and podcast support, along with built-in verification MD5 and SHA-1 checksums.|$|R
40|$|This paper {{considers}} the <b>transfer</b> batch <b>scheduling</b> {{problem for a}} two-stage flowshop with identical parallel machines at each stage. Two cases of separable and inseparable setup times and processing times are examined. A scheduling rule similar to Johnson's rule is suggested to minimize makespan. The scheduling method developed in this paper subsumes many existing methods for two-stage flowshop makespan minimization. A numerical example is presented to illustrate the scheduling method. two-stage flexible flowshop <b>transfer</b> batch <b>scheduling</b> makespan...|$|R
40|$|This {{dissertation}} {{introduces the}} Composite Endpoint Protocol (CEP) which solves two related problems: large- scale high performance transfers, and partial content distribution. Achieving high performance in large-scale networks, with speeds above 1 Gbps and latency up to 200 ms, is difficult; individual machines {{can not fully}} exploit overall system capacity, and existing protocols (e. g. TCP) have well-known problems. Similarly, while whole-file content distribution is well studied, when individual clients each desire different parts of a file new techniques are required. The core algorithms and abstractions needed to exploit large scale networks or provide sub-file distribution semantics do not exist. The underlying problem is fundamental: <b>transfer</b> <b>scheduling.</b> Given a set of heterogeneous nodes which have data and nodes which need some subset of that data, perform transfers to best satisfy all nodes' demands. No strong semantics are implied here; subsets of this data may be replicated, missing, not fall on block/word boundaries, etc. The solution is a transfer scheduler which implicitly or explicitly specifies which nodes transfer what data and when. CEP solves the <b>transfer</b> <b>scheduling</b> problem using minimal centralization for metadata/scheduling and infrastructure for fully distributed data transmission. Hybrid centralized/distributed algorithms and heuristics dynamically generate the most desirable transfers as system state evolves. In this way, CEP enables both large- scale high performance transfers and provides rich partial content distribution semantics. The dissertation includes the following contributions. 1. An efficient mechanism for multiple heterogeneous nodes/processes (a composite endpoint) {{to take part in}} a single logical connection, where core algorithms run in O(n log n) for the common case; Simple, flexible interfaces for describing data layouts and composite endpoint communication, backed by a general mathematical abstraction; 3. Multiple <b>transfer</b> <b>scheduling</b> algorithms which produce high performance (over 10 Gbps), high resolution, and when possible provably optimal output, with detailed analysis of each; 4. A scalable and robust composite endpoint architecture which supports tens of thousands of participants and transparently survives server failures. Analysis of the algorithms involved, discuss two implementations of the Composite Endpoint Protocol, as provide an empirical evaluation showing the benefits of CEP under a variety of conditions: over 10 x faster than Apache, BitTorrent, DHTs, or uniform striping technique...|$|R
40|$|The `Preliminary Low-Level Waste Feed Staging Plan` was updated {{to reflect}} the latest {{requirement}} in the Tank Waste Remediation Privatization Request for Proposals (RFP) and amendments. The updated plan develops the sequence and <b>transfer</b> <b>schedule</b> for retrieval of DST supernate by the management and integration contractor and delivery of the staged supernate to the private low-activity waste contractors for treatment. Two DSTs are allocated as intermediate staging tanks. A transfer system conflict analysis provides part of the basis for determining transfer system upgrade requirements to support both low-activity and high-level waste feed delivery. The intermediate staging tank architecture and retrieval system equipment are provided as a planning basis until design requirements documents are prepared. The actions needed to successfully implement the plan are identified. These include resolution of safety issues and changes to the feed envelope limits, minimum order quantities, and desired batch sizes...|$|E
40|$|Abstract — The recent {{standard}} for {{broadband wireless access}} networks, IEEE 802. 16, {{which resulted in the}} development of metropolitan area wireless networks, includes two network organization modes: Point to Multi Point and Mesh. The mesh mode provides distributed channel access operations of peering nodes and uses TDMA technique for channel access modulation. According to IEEE 802. 16 MAC protocol, there are two scheduling algorithms for assigning TDMA slots to each network node: centralized and distributed. In distributed scheduling algorithm, network nodes have to transmit scheduling message in order to inform other nodes about their <b>transfer</b> <b>schedule.</b> In this paper a new approach is proposed to improve distributed scheduling efficiency in IEEE 802. 16 mesh mode, with respect to network condition in every transferring opportunity. For evaluating the proposed algorithm efficiency, several extensive simulations are performed in various network configurations and the most important system parameters which affect the network performance are analyzed...|$|E
40|$|The {{emerging}} {{open cloud}} computing model will provide users with great freedom to dynamically migrate virtualized computing services to, from, and between clouds over the wide-area. While this freedom leads to many potential benefits, the running services must be minimally disrupted by the migration. Unfortunately, current solutions for wide-area migration incur too much disruption {{as they will}} significantly slow down storage I/O operations during migration. The resulting increase in service latency could be very costly to a business. This paper presents a novel storage migration scheduling algorithm that can greatly improve storage I/O performance during wide-area migration. Our algorithm is unique in that it considers individual virtual machine’s storage I/O workload such as temporal locality, spatial locality and popularity characteristics to compute an efficient data <b>transfer</b> <b>schedule.</b> Using a fully implemented system on KVM and a trace-driven framework, we show that our algorithm provides large performance benefits across {{a wide range of}} popular virtual machine workloads...|$|E
40|$|Given two {{replication}} schemes Xold and Xnew, the Replica <b>Transfer</b> <b>Scheduling</b> Problem (RTSP) aims at reaching Xnew, {{starting from}} Xold, with minimal implementation cost. In this paper we generalize the problem description to include special cases, where deadlocks can occur {{while in the}} process of implementing Xnew. We address this impediment by introducing artificial (dummy) transfers. We then prove that RTSP-decision is NP-complete and propose two kinds of heuristics. The first attempts to replace dummy transfers with valid ones, while the second minimizes the implementation cost. Experimental evaluation of the algorithms illustrates the merits of our approach. © 2007 IEEE...|$|R
40|$|File <b>Transfer</b> <b>Scheduling</b> (FTS) is an {{application}} {{in a network}} management system {{which is used to}} launch multiple File transfer session between a network management system and a managed Network Element (NE). The FTS application supervises parallel NE software download or NE Management Information Base (MIB) backup sessions for multiple supported NEs. FTS operations are based on “JOB”, which can be defined as a descriptor file which contains list of NEs and all the parameters required for action to be scheduled. This paper proposes a system which could be used for file transfer operations using SWIM framework...|$|R
40|$|This paper {{addresses}} the data <b>transfer</b> <b>scheduling</b> problem for Grid environments, presenting a centralized scheduler developed with dynamic and adaptive features. The algorithm offers a reservation system for user transfer requests that allocates them transfer times and bandwidth, {{according to the}} network topology and the constraints the user specified for the requests. This paper presents the projects related to the data transfer field, {{the design of the}} framework for which the scheduler was built, the main features of the scheduler, the steps for transfer requests rescheduling and two tests that illustrate the system’s behavior for different types of transfer requests. 1...|$|R
