1|10000|Public
40|$|PSpice A/D is a {{simulation}} package {{that is used}} to analyze and predict the performance of analog and mixed signal circuits. It is very popular especially among Printed Circuit Board (PCB) engineers to verify board level designs. However, PSpice A/D currently lacks the ability to simulate analog components connected to digital circuits that are modeled using Hardware Descriptive Languages (HDLs), such as VHDL and Verilog HDL. Simulation of HDL models in PSpice A/D is necessary to verify mixed signal PCBs where programmable logic devices like Field Programmable Gate Arrays (FPGAs) and Complex Programmable Logic Devices (CPLDs) are connected to discrete analog components. More than 60 % of the PCBs that are designed today contain at least one FPGA or CPLD. This thesis investigates the possibility of simulating VHDL models in PSpice A/D. A new design methodology and the necessary tools to achieve this goal are presented. The new design methodology achieves <b>total</b> <b>system</b> <b>verification</b> at PCB level. <b>Total</b> <b>system</b> <b>verification</b> reduces design failures and hence increases reliability. It also allows reducing the overall time to market. A mixed signal design from NASA Goddard Space Flight Center for a brushless three phase motor that runs a space application is implemented by following the proposed design methodology...|$|E
40|$|The {{goal of the}} {{research}} project that is presented in this paper, {{is the development of}} a mixed analog/digital silicon compiler. The compiler is targeted to the architectural design of a mixed analog/digital signal acquisition and processing chain for space applications. The user has to describe the functionality and performance requirements of a system to be de signed. The compiler then translates the system description into an architecture of low level modules such as A/D converters, amplifiers and filters, as well as digital control sections. The layouts of the different modules will be generated by dedicated analog or digital module generators. Finally, the compiler assembles the layout of the <b>total</b> <b>system.</b> The necessary <b>verifications</b> at different levels during the design process will be performed by a mixed signal simulator. The general requirements and design flow of the silicon compiler will be discussed, together with the application domain of the compiler...|$|R
40|$|INTRODUCTION: The strict {{regulatory}} and compliance requirements for SAR {{and more recently}} hearing aid compatibility have increased the need for accurate and precise testing methodologies. This is also required for conforming to quality management accreditation guidelines such as ISO/IEC 17025. Though rigorous steps are taken to assure that every instrument in the testing process is within strict specifications, <b>system</b> <b>verification</b> is the fundamental way {{to assure that the}} <b>total</b> <b>system</b> is operating withi...|$|R
40|$|In this paper, a {{real-time}} 105 -channel {{data acquisition}} platform based on FPGA for imaging {{will be implemented}} for mm-wave imaging systems. PC platform is also realized for imaging results monitoring purpose. Mm-wave imaging expands our vision by letting us see things under poor visibility conditions. With this extended vision ability, {{a wide range of}} military imaging missions would benefit, such as surveillance, precision targeting, navigation, and rescue. Based on the previously designed imager modules, this project would go on finishing the PCB design (both schematic and layout) of the following signal processing systems consisting of Programmable Gain Amplifier(PGA) (4 PGA for each ADC) and 16 -channel Analog to Digital Converter (ADC) (7 ADC in <b>total).</b> Then the <b>system</b> <b>verification</b> would be performed on the Artix- 7 35 T Arty FPGA with the developing of proper controlling code to configure the ADC and realize the communication between the FPGA and the PC (through both UART and Ethernet). For the verification part, a simple test on a breadboard with a simple analog input (generated from a resistor divider) would first be performed. After the PCB design is finished, the whole system would be tested again with a precise reference and analog input. Comment: This paper has been withdrawn by the author due to a crucial sign error in figure...|$|R
5000|$|... #Subtitle level 2: Applicable {{standards}} and guidelines, <b>system</b> <b>verification</b> ...|$|R
40|$|This paper {{gives an}} {{overview}} on the approach applied for Galileo <b>system</b> <b>verification.</b> It also describes {{the methods and}} necessary tools for the <b>verification</b> on <b>system</b> level. Background: The high level Galileo mission requirements, which capture user requirements, have been translated into the Galileo system requirements. These system requirements have {{formed the basis for}} specifying the Galileo system, segments, and elements. Thus, for the verification of the Galileo system it is necessary to verify the Galileo system against the system requirements. This paper addresses the approach for <b>system</b> <b>verification</b> and elaborates on methods and tools to be applied throughout the various system development phases up to full deployment and operational readiness of the Galileo system. These methods and tools to be used for each phase of <b>system</b> <b>verification</b> have been integrated into the <b>System</b> <b>Verification</b> Plan [RD 4]. P...|$|R
5000|$|July 2012 Acquired world's first ISO 14045 {{eco-efficiency}} {{assessment of}} product <b>systems</b> <b>verification</b> ...|$|R
5000|$|Windows <b>System</b> Requirements <b>Verification</b> Tool from ManufacturerMacintosh <b>System</b> Requirements <b>Verification</b> Tool from Manufacturer ...|$|R
40|$|Details of {{the design}} and <b>system</b> <b>verification</b> test results are {{presented}} for a six-man-rated oxygen generation system. The system configuration incorporates components and instrumentation for computer-controlled operation with automatic start-up/shutdown sequencing, fault detection and isolation, and with self-contained sensors and controls for automatic safe emergency shutdown. All fluid and electrical components, sensors, and electronic controls {{are designed to be}} easily maintainable under zero-gravity conditions. On-board component spares are utilized in the system concept to sustain long-term operation (six months minimum) in a manned spacecraft application. The system is centered on a 27 -cell solid polymer electrolyte water electrolysis module which, combined with the associated system components and controls, forms a <b>total</b> <b>system</b> envelope 40 in. high, 40 in. wide, and 30 in. deep...|$|R
5000|$|CAV (Computer Aided Veriﬁcation) Award for {{fundamental}} {{contributions to}} the theory of real-time <b>systems</b> <b>veriﬁcation,</b> 2008 (with David Dill).|$|R
5000|$|Model-based design {{provides}} a common design environment, which facilitates general communication, data analysis, and <b>system</b> <b>verification</b> between various (development) groups.|$|R
5000|$|Professor Joseph Sifakis, Verimag, University of Grenoble, in {{recognition}} of his contribution {{to the field of}} Computer Science and <b>System</b> <b>Verification</b> ...|$|R
5000|$|Theoretical Computer Science Focus Areas: Logic, Process Algebra, Reactive <b>Systems,</b> <b>Verification,</b> Cryptology, Cryptography, Machine Learning, Bioinformatics, Complexity Theory, Quantum Computation, Algorithms ...|$|R
40|$|The Voyager Flight Project - DSN Telecommunications Compatibility Test Program {{consisted}} of three phases: Subsystem Design, System Design, and <b>System</b> <b>Verification</b> Tests. Subsystem Design Tests were performed during mid 1976. System Design Tests were performed during late 1976 and early 1977. <b>System</b> <b>Verification</b> Tests were performed during {{the spring and summer}} of 1977. This article describes the System Design Tests and test results that provided the basis for establishment of telecommunications design between the DSN and the Voyager Flight Project...|$|R
40|$|Shrinking feature {{sizes and}} {{increasing}} speeds of operation make interconnect-related effects very relevant for current circuit verification methodologies. Reliable and accurate <b>system</b> <b>verification</b> requires the full analysis of circuits {{together with the}} environment that surrounds them, including the common substrate, the packaging structures, and perhaps even board information. In this paper we discuss circuit-level simulation algorithms that enable {{the analysis of the}} impact of strongly coupled interconnect structures on nonlinear circuit operation, so as to allow reliable and accurate <b>system</b> <b>verification.</b> ...|$|R
5000|$|In 1996, Pnueli {{received}} the Turing Award for seminal work introducing temporal logic into computing science and for outstanding contributions to program and <b>systems</b> <b>verification.</b>|$|R
40|$|There are {{numerous}} application examples for hybrid <b>systems</b> <b>verification</b> in recent literature. Most {{of them were}} introduced to illustrate {{a new approach to}} hybrid <b>systems</b> <b>verification,</b> and are therefore of a limited size. Others are case studies that serve to prove that an approach can be applied to real world problems. Verification of these typically requires a lot of domain experience to obtain a tractable, verifiable model. Verification of a case study yields a singular result that is hard to compare and time-consuming to reproduce...|$|R
5000|$|Standard and {{customized}} laser {{and resistance}} systems - Application qualification and testing, system specification, assembly, <b>system</b> <b>verification,</b> and installation and training. Included are gloveboxes and dryboxes, tooling, motion, optics, software, monitoring.|$|R
40|$|LVT is a {{framework}} developed {{to provide an}} automated, consolidated environment for systematic land surface model evaluation Includes support {{for a range of}} in-situ, remote-sensing and other model and reanalysis products. Supports the analysis of outputs from various LIS subsystems, including LIS-DA, LIS-OPT, LIS-UE. Note: The Land Information <b>System</b> <b>Verification</b> Toolkit (LVT) is a NASA software tool designed to enable the evaluation, analysis and comparison of outputs generated by the Land Information System (LIS). The LVT software is released under the terms and conditions of the NASA Open Source Agreement (NOSA) Version 1. 1 or later. Land Information <b>System</b> <b>Verification</b> Toolkit (LVT) NOSA...|$|R
40|$|The IEEE- 1800 SystemVerilog [20] <b>system</b> {{description}} and <b>verification</b> language integrates dedicated verification fea-tures, like constraint random stimulus generation and func-tional coverage, {{which are the}} building blocks of the Univer-sal Verification Methodology (UVM) [3], the emerging stan-dard for electronic <b>systems</b> <b>verification.</b> In this article, we introduce our <b>System</b> <b>Verification</b> Methodology (SVM) as a SystemC library for advanced Transaction Level Modeling (TLM) testbench implementation. As such, we first present SystemC libraries for the support of verification features like functional coverage and constrained random stimulus gen-eration. Thereafter, we introduce the SVM with advanced TLM support based on SystemC and compare it to UVM and related approaches. Finally, we demonstrate the appli-cation of our SVM by means of a testbench for a two wheel self-balancing electric vehicle...|$|R
5000|$|Reform our {{immigration}} <b>system</b> with employment <b>verification</b> <b>systems</b> and global legal immigration centers.|$|R
40|$|This {{thesis is}} {{about the use of}} model {{checking}} tools for real-time <b>system</b> <b>verification.</b> A general overview of formal methods and a model checking technique with regard to ordinary automata is given prior to a discussion on timed automata based model checking technique for real-time <b>system</b> <b>verification.</b> The final chapter describes a project that involved the verification of medium-sized real-time software. Due to a contract of confidentiality with the company that funded the project, the original names of events and locations in the models are not revealed in this thesis. However, a general discussion of the strategies and lessons learned from the experience is given...|$|R
40|$|The {{first part}} of this paper {{describes}} a multi-purpose dynamic simulator for the Heidrun oil production plant. The simulator integrates a commercial dynamic simulation model with the actual process control system to enable dynamic simulation, control <b>system</b> <b>verification</b> and operator training within the same framework and based on the same models and configuration data. The control system configuration can be imported directly into the simulator. This simplifies simulator maintenance and ensure consistency between the simulator and the real plant. The entire system runs on standard Unix work stations. The simulator has so far been used for initial operator training, control <b>system</b> <b>verification</b> and controller tuning...|$|R
40|$|Abstract. <b>System</b> <b>verification</b> is a {{technique}} used to improve the correctness of hardware and software systems. It aims to discover bugs in early development steps. A common approach of <b>system</b> <b>verification</b> consists of exploring and analyzing the reachable states graph, which represents the system behavior in an exhaustive manner. This graph is often too large to be entirely explored: its size grows exponentially {{in the number of}} <b>system</b> components. The <b>verification</b> task then becomes a task of partial exploration, subject to constraints on memory and verification time. Several methods of random partial exploration have been proposed based mostly on random walk. In this paper 1, we present a general strategy of randomized algorithms, in particular a Uniform Random Search to perform partial, but considerable, state space exploration with little memory and time requirements. ...|$|R
50|$|Successful {{application}} areas include process control, <b>system</b> <b>verification,</b> explanation, {{autonomous spacecraft}} support, failure analysis and on-board diagnosis of vehicle systems, automated generation of control software for photocopiers, conceptual knowledge capture in ecology, and intelligent aids for human learning.|$|R
40|$|Biomedical {{research}} is increasingly using formal modeling and analysis methods {{to improve the}} understanding of complex <b>systems.</b> <b>Verification</b> methods for Stochastic Hybrid Systems (SHSs) are burdened with the curse of dimensionality; however, probabilistic analysis methods such as Monte Carlo (MC) method...|$|R
40|$|This paper {{focuses on}} "system verification," the {{activity}} of mechanically proving properties of computer systems. Distinguishing characteristics of systems include their large size, their multiple layers of abstraction, and their frequent concern with multiple programming languages and, more generally, multiple models of computation. <b>System</b> <b>verification</b> <b>systems</b> require supreme integration of their component parts. To reason formally about systems one {{must be able to}} reason about the relations between its disparate modules, layers of abstraction, and various models of computation. Facilitating <b>system</b> <b>verification</b> is, we believe, the underlying theme of this "Workshop on the Effective Use of Automated Reasoning Technology in System Development. " We address that theme explicitly in this paper. We make an important, often overlooked, but essentially trivial point: to reason formally about the relations between various ideas, those ideas must be formalized. However, the popular approach to [...] ...|$|R
40|$|The Distributed Computing Column {{covers the}} theory of systems that are {{composed}} {{of a number of}} interacting computing elements. These include problems of communication and networking, databases, distributed shared memory, multiprocessor architectures, operating <b>systems,</b> <b>verification,</b> Internet, and the Web. This issue consists of...|$|R
50|$|The first {{engine to}} test (FETT) {{completed}} its first test run in April 2016.With 375 cycles and 335 test hours, validated its architecture (as a system, {{as opposed to}} a bunch of modules) for aerodynamic performance, mechanical <b>system</b> <b>verification</b> and aerothermal heating validation.|$|R
40|$|Next-generation {{identity}} <b>verification</b> <b>systems</b> {{will require}} the ability to integrate with numerous distributed applications and services during the authentication process. This paper describes the architecture, design and prototype implementation of a real-time <b>verification</b> <b>system</b> that exposes <b>verification</b> methods using XML Web Services. 8 page(s...|$|R
40|$|The {{system design}} tests and test results that {{provided}} the basis for establishment of telecommunications design between the DSN and Viking 1975 were described. The Viking 1975 /DSN Telecommunications Compatibility Test Program Consisted of three phases: subsystem design, system design, and <b>system</b> <b>verification</b> tests which were performed at JPL and at the Air Force Eastern Test Range and Kennedy Space Center complexes. Subsystem design tests were performed with the Viking Orbiter (VO) and the Viking Lander (VL) during 1973. System design compatibility tests were performed with the Viking Proof Test Orbiter, Viking Spacecraft Test Lander, and a multiple Viking spacecraft configuration during the summer of 1974. <b>System</b> <b>verification</b> tests were performed with the Viking Orbiter, Viking Lander and Viking spacecraft during {{the spring and summer of}} 1975...|$|R
50|$|Van der Aalst's {{research}} {{interest is}} {{in the fields of}} information systems, business process management, simulation, Petri nets, process models, workflow management <b>systems,</b> <b>verification</b> techniques, process mining, enterprise resource planning systems, computer supported cooperative work, web services, business process redesign, resource allocation and interorganizational business processes.|$|R
40|$|Computer {{systems that}} earn {{a high degree}} of trust must be backed by {{rigorous}} verification methods. A <b>verification</b> <b>system</b> is an interactive environment for writing formal specifications and checking formal proofs. <b>Verification</b> <b>systems</b> allow large complicated proofs to be managed and checked interactively. We desire evaluation criteria that provide a means of finding which <b>verification</b> <b>system</b> is suitable for a specific research environment and what needs of a particular project the tool satisfies. Therefore, the purpose of this thesis is to develop a methodology and set of evaluation criteria to evaluate <b>verification</b> <b>systems</b> for their suitability to improve the assurance that systems meet security objectives. A specific <b>verification</b> <b>system</b> is evaluated with respect to the defined methodology. The main goals are to evaluate whether the <b>verification</b> <b>system</b> has the capability to express the properties of software systems and to evaluate whether the <b>verification</b> <b>system</b> can provide inter-level mapping, a feature required for understanding how a system meets security objectives. Naval Postgraduate School author (civilian) ...|$|R
40|$|Many {{tools for}} {{distributed}} <b>systems</b> <b>verification</b> Relying on different formalisms Solving different problems Applying formal methods to dedicated cases studies Running on different OS Requiring some difficult installation procedures Technological transfer to industry uneasy Étienne André (Paris 13) The CosyVerif Platform 11 th December 2014 2 / 3...|$|R
40|$|Automated model {{generation}} {{methods are}} becoming {{an increasingly important}} component of methodologies for effective <b>system</b> <b>verification,</b> especially for mixed-signal electronic systems. In this paper, we organize and review the fundamental principles, development and applicability of the algorithmicallybased model generation methods available today for linear and nonlinear systems. I...|$|R
40|$|This paper {{presents}} the results of the development of one of the modules of the <b>system</b> <b>verification</b> of parallel algorithms that are used to verify the inference engine. This module is designed to build the specification requirements, the feasibility of which on the algorithm is necessary to prove (test) ...|$|R
