340|1994|Public
25|$|Texture mapping is {{a method}} for adding detail, surface texture, or colour to a computer-generated graphic or 3D model. Its {{application}} to 3D graphics was pioneered by Dr Edwin Catmull in 1974. A <b>texture</b> <b>map</b> is applied (mapped) {{to the surface of}} a shape, or polygon. This process is akin to applying patterned paper to a plain white box. Multitexturing is the use of more than one texture at a time on a polygon. Procedural textures (created from adjusting parameters of an underlying algorithm that produces an output texture), and bitmap textures (created in an image editing application or imported from a digital camera) are, generally speaking, common methods of implementing texture definition on 3D models in computer graphics software, while intended placement of textures onto a model's surface often requires a technique known as UV mapping (arbitrary, manual layout of texture coordinates) for polygon surfaces, while non-uniform rational B-spline (NURB) surfaces have their own intrinsic parameterization used as texture coordinates. Texture mapping as a discipline also encompasses techniques for creating normal maps and bump maps that correspond to a texture to simulate height and specular maps to help simulate shine and light reflections, as well as environment mapping to simulate mirror-like reflectivity, also called gloss.|$|E
5000|$|... newmtl Textured Ka 1.000 1.000 1.000 Kd 1.000 1.000 1.000 Ks 0.000 0.000 0.000 d 1.0 illum 2 map_Ka lemur.tga # {{the ambient}} <b>texture</b> <b>map</b> map_Kd lemur.tga # the diffuse <b>texture</b> <b>map</b> (most of the time, it will # {{be the same}} as the ambient <b>texture</b> <b>map)</b> map_Ks lemur.tga # {{specular}} color <b>texture</b> <b>map</b> map_Ns lemur_spec.tga # specular highlight component map_d lemur_alpha.tga # the alpha <b>texture</b> <b>map</b> map_bump lemur_bump.tga # some implementations use 'map_bump' instead of 'bump' below ...|$|E
50|$|Displacement mapping {{includes}} the term mapping {{which refers to}} a <b>texture</b> <b>map</b> being used to modulate the displacement strength. The displacement direction is usually the local surface normal. Today, many renderers allow programmable shading which can create high quality (multidimensional) procedural textures and patterns at arbitrary high frequencies. The {{use of the term}} mapping becomes arguable then, as no <b>texture</b> <b>map</b> is involved anymore. Therefore, the broader term displacement is often used today to refer to a super concept that also includes displacement based on a <b>texture</b> <b>map.</b>|$|E
40|$|<b>Texture</b> <b>mapping</b> has {{traditionally}} been used to add realism to computer graphics images. In recent years, this technique has moved from the domain of software rendering systems to that of high performance graphics hardware. But <b>texture</b> <b>mapping</b> hardware {{can be used for}} many more applications than simply applying diffuse patterns to polygons. We survey applications of <b>texture</b> <b>mapping</b> including simple <b>texture</b> <b>mapping,</b> projective <b>textures,</b> and image warping. We then describe <b>texture</b> <b>mapping</b> techniques for drawing anti-aliased lines, air-brushes, and anti-aliased text. Next we show how <b>texture</b> <b>mapping</b> may be used as a fundamental graphics primitive for volume rendering, environment mapping, color interpolation, contouring, and many other applications...|$|R
50|$|To {{render a}} 3D scene, <b>textures</b> are <b>mapped</b> {{over the top}} of polygon meshes. This is called <b>texture</b> <b>mapping</b> and is {{accomplished}} by <b>texture</b> <b>mapping</b> units (TMUs) on the videocard. Texture fill rate {{is a measure of the}} speed with which a particular card can perform <b>texture</b> <b>mapping.</b>|$|R
50|$|Projective <b>texture</b> <b>mapping</b> is {{a method}} of <b>texture</b> <b>mapping</b> that allows a {{textured}} image to be projected onto a scene as if by a slide projector. Projective <b>texture</b> <b>mapping</b> is useful {{in a variety of}} lighting techniques and it is the starting point for shadow mapping.|$|R
50|$|<b>Texture</b> <b>map</b> {{statements}} {{may also}} have option parameters (see full spec).|$|E
50|$|They {{may have}} 1-3 dimensions, {{although}} 2 dimensions are most common for visible surfaces. For use with modern hardware, <b>texture</b> <b>map</b> data may {{be stored in}} swizzled or tiled orderings to improve cache coherency. Rendering APIs typically manage <b>texture</b> <b>map</b> resources (which may be located in device memory) as buffers or surfaces, and may allow 'render to texture' for additional effects such as post processing, environment mapping.|$|E
5000|$|... #Caption: Examples of multitexturing (click {{for larger}} image);1: Untextured sphere, 2: Texture and bump maps, 3: <b>Texture</b> <b>map</b> only, 4: Opacity and texture maps.|$|E
50|$|Projective <b>texture</b> <b>mapping</b> is {{essentially}} a special matrix transformation which is performed per-vertex and then linearly interpolated as standard <b>texture</b> <b>mapping.</b>|$|R
40|$|Conventional <b>texture</b> <b>mapping</b> is {{a special}} case of {{three-dimensional}} image warping. Therefore, all transformations embodied in the <b>texture</b> <b>mapping</b> equations are also embodied in the three-dimensional image warping equations. In this work, we show that three-dimensional image warping can be factored into a pre-warp step followed by conventional <b>texture</b> <b>mapping.</b> ...|$|R
50|$|Modern Graphics {{processing}} units provide specialised fixed function units called texture samplers or <b>texture</b> <b>mapping</b> {{units to}} perform <b>texture</b> <b>mapping,</b> usually with trilinear filtering or better multi-tap anisotropic filtering and hardware for decoding specific formats such as DXTn. As of 2016, <b>texture</b> <b>mapping</b> hardware is ubiquitous as most SOCs contain a suitable GPU.|$|R
50|$|Polypainting {{allows users}} to paint on an object's surface without the need to first assign a <b>texture</b> <b>map</b> by adding color {{directly}} to the polygons.|$|E
5000|$|In {{order to}} simplify and {{streamline}} development time, three base character skeletons were shared amongst the six character classes. [...] Characters were modeled then multiple texture maps were applied. Specular and normal maps {{were added to}} the model prior to the main <b>texture</b> <b>map.</b> The <b>texture</b> <b>map</b> was then added with any team-colorized sections painted in greyscale tones. [...] A team color mask is then applied to give the character a team-aligned texture. [...] Robot characters also have multiple texture maps to signify damage received. The music for the game was composed by Cris Velasco of Monarch Audio.|$|E
50|$|LSCM {{is used in}} {{computer}} graphics {{as a method of}} producing a UV map from a polygonal mesh to a <b>texture</b> <b>map</b> such that the shape of the polygons as mapped to the texture is relatively undistorted.|$|E
40|$|The e#ects of {{the texture}} {{coordinate}} precision {{to the image}} for procedural <b>texture</b> <b>mapping</b> is presented. In our project, {{we are trying to}} implement procedural solid <b>texture</b> <b>mapping</b> by hardware. By reducing the number of parameters for our <b>texture</b> <b>mapping</b> model and precision of texture coordinate, we can implement procedural <b>texture</b> <b>mapping</b> with small number of gates. We checked that how many bits were required to produce the image without degrading original by simulation and confirmed that we could have good textured image even with small number of bit width...|$|R
50|$|In GPGPU, <b>texture</b> <b>maps</b> in 1,2, or 3 {{dimensions}} {{may be used}} {{to store}} arbitrary data. By providing interpolation, the <b>texture</b> <b>mapping</b> unit provides a convenient means of approximating arbitrary functions with data tables.|$|R
40|$|As {{graphics}} hardware {{is available}} on most PCs these days, hardware-assisted real-time rendering becomes more important in many applications, such as games or virtual reality. <b>Texture</b> <b>mapping</b> is also important in graphics rendering, because it gives much visual detail without modeling of complex geometry. Conventional <b>texture</b> <b>mapping</b> by graphics hardware relies on the linear interpolations of the texture coordinates inside the triangles. Although this approximation works fine for most applications, the nonlinear modeling of texture coordinates is needed in some applications. This dissertation discusses how to model and implement nonlinear <b>texture</b> <b>mapping</b> with graphics hardware. Two applications using nonlinear texture parameterizations are introduced. They are cylindrical projective <b>texture</b> <b>mapping</b> and interactive image warping. Nonlinear <b>texture</b> <b>mapping</b> for these applications are modeled and implemented using environment mapped bump mapping (EMBM) capability and programmable pixel shader. By the decomposition of the nonlinear texture parameterization into the linear and nonlinear components, nonlinear residuals can be controlled by EMBM or pixel shader, while the linear components are used as texture coordinates for the conventional <b>texture</b> <b>mapping...</b>|$|R
50|$|Another {{completely}} {{different approach to}} panorama portrait is the Wraparound Face <b>Texture</b> <b>Map,</b> used commonly by 3D artists to provide a realistic texture and elements {{to be placed on}} 3D face models to create a highly realistic 3D virtual head.|$|E
50|$|Reflectance Transformation Imaging uses special {{procedures}} {{to create a}} polynomial <b>texture</b> <b>map</b> of an object. These PTMs are created from a set of images using a stationary camera and a single source of light that can be held in different positions.|$|E
5000|$|A texel, texture element, or texture pixel is the {{fundamental}} unit of a <b>texture</b> <b>map,</b> used in computer graphics. Textures are represented by arrays of texels representing the texture space, just as other images are represented by arrays of pixels.|$|E
40|$|The {{simulation}} {{result of}} the e#ects of the coordinate texture precision to the image for procedural <b>texture</b> <b>mapping</b> is presented. In our project, {{we are trying to}} implement procedural solid <b>texture</b> <b>mapping</b> by hardware. By reducing the number of parameters for our <b>texture</b> <b>mapping</b> model and precision of texture coordinate, we can implement it with small number of gates. We checked that how many bits were required to produce the image without degrading original by simulation and confirmed that we could have good textured image even with small number of bit width. 1 Introduction <b>Texture</b> <b>mapping</b> is a common method to add realism to the computer generated objects. Either pre-defined or procedurally defined <b>texture</b> is <b>mapped</b> to the objects. In a basic <b>texture</b> <b>mapping,</b> pre-defined image has to be generated in texture coordinate, usually rectangular and the image is stored in memory. Texture coordinate is associated with object coordinate. Corresponding pixel in an object is replaced with the [...] ...|$|R
40|$|A {{compression}} {{scheme for}} calibrated images depicting a static scene from arbitrary viewpoints is presented. 3 -D scene geometry is reconstructed, and view-dependent <b>texture</b> <b>maps</b> are generated from all images. Texture is wavelet-coded using the SPIHT coding scheme extended to 4 -D, exploiting correlations within {{as well as}} between <b>texture</b> <b>maps.</b> During decoding, all <b>texture</b> <b>maps</b> are simultaneously and progressively reconstructed. The coder provides 3 -D scene geometry and multiple <b>texture</b> <b>maps,</b> enabling the use of graphics hardware to accelerate the rendering process. Three image sets acquired from real-world objects are used to evaluate the model-based coding scheme. Coding eÆciency is shown for geometry approximations of dierent accuracy...|$|R
40|$|This paper {{looks at}} the {{motivation}} for simulating painting directly on 3 D objects, and investigates the main issues faced by such systems. These issues include the provision of natural user interfaces, the reproduction of realistic brush effects and the surface parameterization for <b>texture</b> <b>mapping</b> so {{that the results of}} the painting can be stored on <b>texture</b> <b>maps.</b> The paper further investigates the issues involved in using a haptic interface for simulating 3 D painting, and the issues in surface parameterization for <b>texture</b> <b>mapping</b> with application to 3 D painting. A survey of some work related to 3 D painting, haptic rendering and surface parameterization for <b>texture</b> <b>mapping</b> is presented...|$|R
50|$|UV {{coordinates}} are optionally applied per face,. This means {{a shared}} spatial vertex position can have different UV coordinates {{for each of}} its triangles, so adjacent triangles can be cut apart and positioned on {{different areas of the}} <b>texture</b> <b>map.</b>|$|E
50|$|In July 2013, Flash Player 11.8 was released, which {{increased}} the maximum <b>texture</b> <b>map</b> size to 4096 x 4096, {{in addition to}} supporting rectangular (non-square) texture maps for Stage3D content. This allowed for greater detail in texture maps, and larger texture atlases to be created enabling better performance.|$|E
50|$|Lance J. Williams (born 25 September 1949) is a {{prominent}} graphics researcher who made major contributions to <b>texture</b> <b>map</b> prefiltering, shadow rendering algorithms, facial animation, and antialiasing techniques. Williams {{was one of}} the first people to recognize the potential of computer graphics to transform film and video making.|$|E
40|$|A first <b>texture</b> <b>mapping</b> unit generates <b>texture</b> {{coordinates}} {{and associated}} Red, Blue, Green (RGB) values {{in response to}} coordinatcs rcccivcd from a rastcrizcr. Thc first tcxturc mapping unit makes use of compressed texture mipmaps to reduce memory storage and bandwidth reqnirements. The compressed <b>texture</b> <b>maps</b> may be generated by a compression system employing principles of Block Truncation Coding (BTC) and Color Cell Compression (CCC). A second <b>texture</b> <b>mapping</b> unit generates <b>texture</b> coordinates and associated RGB values in response to coordinates receivcd from a rastefizer. The second <b>texture</b> <b>mapping</b> refit inclndes a memory organization allowing two mipmap levels to be retrieved in a single access, and 8 -port Color Lookup Table (CLUT), a trilinear interpolator and a video port. A footprint assembly system <b>maps</b> <b>textures</b> onto surfaces by approximating thc projcction of a pixcl onto a tcxturc by a numbcr of square mipmapped texcls. The second <b>texture</b> <b>mapping</b> unit also perfoms enviromnent mapping, reflectance mapping and detail maps...|$|R
40|$|This paper {{examines}} {{two methods}} of computer-based car styling: <b>texture</b> <b>mapping</b> and direct computer modelling. An overview of current {{activity in the}} field precedes a comparison and evaluation of the methods within a typical framework for automobile concept design. Three case studies illustrate the direct modelling method, showing differences of computer use in each case. Further developments of <b>texture</b> <b>mapping</b> are reported, with a proposal for iterative combining of <b>texture</b> <b>mapping</b> and direct modelling. ...|$|R
5000|$|<b>Texture</b> <b>mapping</b> http://www.seamless3d.com/tut/texture_mapping/index.html ...|$|R
50|$|Paint was {{an image}} editing program for {{manipulation}} of bitmap graphics - its <b>texture</b> <b>map</b> support {{focused on the}} RLA, SGI, Cineon (now DPX) and TIFF file formats. Support for 16 bit integer textures, sequencing capabilities for rotoscoping in addition to paint cloning from adjacent frames in the timeline.|$|E
5000|$|This process {{projects}} a <b>texture</b> <b>map</b> onto a 3D object. The letters [...] "U" [...] and [...] "V" [...] denote the axes of the 2D texture because [...] "X", [...] "Y" [...] and [...] "Z" [...] are already used to denote the axes of the 3D object in model space.|$|E
50|$|In a shader implementation, {{this test}} {{would be done}} at the {{fragment}} level. Also, care needs to be taken when selecting the type of <b>texture</b> <b>map</b> storage to be used by the hardware: if interpolation cannot be done, the shadow will appear to have a sharp jagged edge (an effect that can be reduced with greater shadow map resolution).|$|E
50|$|Some engines {{were able}} to render <b>texture</b> <b>mapped</b> Heightmaps (e.g. Nova Logic's Voxel Space, and the engine for outcast) via Bresenham-like {{incremental}} algorithms, producing {{the appearance of a}} <b>texture</b> <b>mapped</b> landscape without the use of traditional geometric primitives.|$|R
40|$|Abstract. <b>Texture</b> <b>mapping</b> {{technique}} is realized by <b>texture</b> filtering. Mipmap <b>mapping</b> technique use square filter to pre-filter the texture. Generally {{the image of}} it’s pixel on the screen is anisotropy, the method of use square as the filter is error to some extent, and the error make the projection not accurate. In this study, Mipmap <b>texture</b> <b>mapping</b> technology-based analysis of the principles and methods of pre-filtering, <b>texture</b> <b>mapping</b> for some systems require a higher accuracy, a former post as the rectangular quad division method, and the method in theory is discussed. ...|$|R
40|$|Image-Based Rendering by Warping (IBRW) creates {{three-dimensional}} {{scene by}} deforming several 2 D images with depth information. Image-based rendering has an advantage compared to traditional polygon rendering that the rendering time is still constant {{even if a}} scene becomes complex. Relief <b>texture</b> <b>mapping</b> decomposes IBRW into a very simple 1 D image operation and a traditional <b>texture</b> <b>mapping,</b> which allows more effective computations. In this paper, we try to apply some hi-quality shading effects such as reflection <b>mapping</b> for relief <b>texture</b> <b>mapping.</b> Their effects can be realized by per-pixel shading technology of today’s graphics hardware. Our method for relief <b>texture</b> <b>mapping</b> allows fast and almost the same shading as well as traditional polygon rendering...|$|R
