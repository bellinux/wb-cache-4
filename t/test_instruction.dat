29|413|Public
25|$|The 6809 was {{assembler}} source-compatible {{with the}} 6800, though the 6800 had 78 {{instructions to the}} 6809's 59. Some instructions were replaced by more general ones which the assembler translated into equivalent operations and some were even replaced by addressing modes. The instruction set and register complement were highly orthogonal, making the 6809 easier to program than the 6800 or 6502. Like the 6800, the 6809 included an undocumented address bus <b>test</b> <b>instruction</b> which came to be nicknamed Halt and Catch Fire (HCF).|$|E
2500|$|... if = return [...] // if ZF is 0, <b>test</b> <b>instruction</b> {{resulted}} in 0 and MSB is not set.|$|E
5000|$|... the <b>TEST</b> <b>{{instruction}}</b> (equivalent to the AND instruction without storing the result).|$|E
5000|$|<b>TEST</b> <b>{{instructions}}</b> (equivalent to AND instructions without storing the result).|$|R
40|$|If {{children}} fail {{to understand}} <b>test</b> <b>instructions,</b> measurements of their competence may be unfair and invalid. This is especially relevant for students with special educational needs (SEN) because they face greater challenges in comprehending instructions. Two interventions were designed to facilitate the comprehension of test requirements by presenting intensified instructions and to enhance students’attention by engaging them in physical activity before receiving the <b>test</b> <b>instructions.</b> Three-hundred forty-eight students with SEN aged 8 – 12 years {{were randomly assigned to}} an experimental condition or a control group. Even after controlling for relevant variables (reading speed, basic cognitive skills), students participating in the interventions performed better in a reading test than controls. As hypothesized, the intensified <b>test</b> <b>instructions</b> reduced the number of responses that were not compliant with instructions. In conclusion, this study shows the importance of adapting <b>test</b> <b>instructions</b> for students with SEN, and it proposes interventions that can be implemented in other assessments...|$|R
40|$|TIS is an instruction-level {{methodology}} for processor core self-testing that enhances instruction set of a CPU with <b>test</b> <b>instructions.</b> Since the functionality of <b>test</b> <b>instructions</b> {{is the same}} as the NOP instruction, NOP instructions can be replaced with <b>test</b> <b>instructions.</b> Online <b>testing</b> can be accomplished without any performance penalty. TIS tests different parts of the processor and detects stuck-at faults. This method can be employed in offline and online testing of single-cycle, multicycle and pipelined processors. But, TIS is more appropriate for online testing of pipelined architectures in which NOP instructions are frequently executed because of data, control and structural hazards. Running <b>test</b> <b>instructions</b> instead of these NOP instructions, TIS utilizes the time that is otherwise wasted by NOPs. In this article, two different implementations of TIS are presented. One implementation employs a dedicated hardware modules for test vector generation, while the other is a software-based approach that reads test vectors from memory. These two approaches are implemented on a pipelined processor core and their area overheads are compared. To demonstrate the appropriateness of the TIS test technique, several programs are executed and fault coverage results are presented...|$|R
5000|$|... (b) Adult {{education}} services, including adult basic education, adult general education, adult secondary education, and General Educational Development <b>test</b> <b>instruction.</b>|$|E
50|$|In the x86 {{assembly}} language, the <b>TEST</b> <b>instruction</b> {{performs a}} bitwise AND on two operands. The flags SF, ZF, PF are modified while {{the result of}} the AND is discarded. The OF and CF flags are set to 0, while AF flag is undefined. There are 9 different opcodes for the <b>TEST</b> <b>instruction</b> depending on the type and size of the operands. It can compare 8-bit, 16-bit, 32-bit or 64-bit values. It can also compare registers, immediate values and register indirect values.|$|E
50|$|Most Branch {{instructions}} take conditional effect {{based on}} the state of the condition codes in the PSW. A Branch instruction was typically preceded by a two-operand CMP (compare) or BIT (bit test) or a one-operand TST (<b>test)</b> <b>instruction.</b> Arithmetic and logic instructions also set the condition codes. In contrast to Intel processors in the x86 architecture, MOV instructions set them too, so a Branch instruction could be used to branch depending on whether the value moved was zero or negative.|$|E
50|$|FEAST {{tests are}} {{designed}} for beginners with no background in ATC. The <b>tests</b> <b>instructions</b> are very detailed and ensure that everything is explained before the tests start.|$|R
40|$|Self-testing {{manufacturing}} defects in a system-on-a-chip (SOC) by running test programs using a programmable core has several potential benefits including, at-speed testing, low DfT overhead due to elimination of dedicated test circuitry and better power and thermal management during testing. However, such a self-test strategy might require a lengthy test program {{and might not}} achieve a high enough fault coverage. We propose a DfT methodology to improve the fault coverage and reduce the test program length, by adding <b>test</b> <b>instructions</b> to an on-chip programmable core such as a microprocessor core. This paper discusses a method of identifying effective <b>test</b> <b>instructions</b> which could result in highest benefits with low area/performance overhead. The experimental results show that with the added <b>test</b> <b>instructions,</b> a complete fault coverage for testable path delay faults can be achieved with a greater than 20 % reduction in the program size and the program runtime, {{as compared to the}} case without instruction-level DfT. 1...|$|R
50|$|DIALANG offers {{separate}} {{test for}} reading, writing, listening, grammatical structures and vocabulary. DIALANG provides <b>test</b> <b>instructions,</b> controls, help pages, explanations, self-assessment statements, test results, feedback and advice in all 14 languages.|$|R
50|$|The 6809 was {{assembler}} source-compatible {{with the}} 6800, though the 6800 had 78 {{instructions to the}} 6809's 59. Some instructions were replaced by more general ones which the assembler translated into equivalent operations and some were even replaced by addressing modes. The instruction set and register complement were highly orthogonal, making the 6809 easier to program than the 6800 or 6502. Like the 6800, the 6809 included an undocumented address bus <b>test</b> <b>instruction</b> which came to be nicknamed Halt and Catch Fire (HCF).|$|E
50|$|ThinkTank Learning {{provides}} standardized <b>test</b> <b>instruction</b> {{to students}} and college admissions counseling. It operates in the State of California and China, where it opened its first office in 2009. By 2010 the company operated five centers with Ma serving as CEO. The company opened two more offices in China between 2009 and 2011. In its college admissions counseling program, the company helps students with their applications, including helping prospective students how to write their resume. It uses software the company calls Predictor to determine the specific metrics of a student and how they measure up to admissions criteria. The company can start {{as early as the}} beginning of high school though most packages last less than a year.|$|E
30|$|Pilot <b>test</b> <b>instruction</b> before completion.|$|E
5000|$|Taylor Electric Company {{provided}} the [...] "Better Board", including {{floppy disk drive}} interface enhancements, enhancements to PFM, and corrections to the original assembly and <b>testing</b> <b>instructions</b> bundled with the Big Board.|$|R
50|$|The test {{is finally}} produced. Trial {{questions}} are included and various {{versions of the}} test are prepared to avoid cheating. The test is printed in booklets that include <b>test</b> <b>instructions</b> and <b>test</b> items.|$|R
40|$|Waste {{pretreatment}} and immobilization {{requires the}} tank waste to be retrieved. Retrieval from tanks may require dilution. This test determines {{the effects of}} dilution on the mass of solids and their composition. This test plan gives <b>test</b> <b>instructions,</b> example data sheets, a waste compatibility review, and a waste stream fact sheet...|$|R
40|$|New Bulgarian University Library {{gradually}} shifts {{its focus}} toward adopting green technologies {{and resources for}} information literacy. Two new technological trends in education: BYOD (bring your own device) and games and gamification are steadily being recognized and adopted by librarians. A jQuery-generated site for mobile devices is used to gamify students' introduction to information literacy. We seek to achieve: 1. a paperless environment; 2. a dynamic and mobile access to information and feedback; 3. switching from a lecture-based teaching style to a more constructivist approach, and encourage students to build knowledge on their own while pursuing a game-like activity; 4. better interaction with lecturers in subject-based teaching. The <b>test</b> <b>instruction</b> was adopted from a library project at St. Cloud State University. The process of collaboration with campus faculty, during the <b>test</b> <b>instruction</b> presented viable opportunity to introduce paperless pedagogy and gaming, as a legitimate pedagogical practice across disciplines on campus...|$|E
40|$|Abstract—This paper {{presents}} a high-level automatic <b>test</b> <b>instruction</b> generation (HATIG) technical that allows, {{for the first}} time, to test the scheduling unit of an out-of-order superscalar processor. This technique leverages on existing bounded model checking tools in order to generate software-based self-testing programs from a global EFSM model of the processor under test. The experimental results have demonstrated {{the efficiency of the}} proposed technique...|$|E
40|$|We {{continue}} {{the line of}} research started in "Broadword Implementation of Rank/Select Queries" proposing broadword (a. k. a. SWAR, "SIMD Within A Register") algorithms for finding matching closed parentheses and the k-th far closed parenthesis. Our algorithms work in time O(log w) on a word of w bits, and contain no branch and no <b>test</b> <b>instruction.</b> On 64 -bit (and wider) architectures, these algorithms {{make it possible to}} avoid costly tabulations, while providing a very significant speedup with respect to for-loop implementations...|$|E
30|$|The three deleted {{items were}} ‘The more I study for an English test, the more {{confused}} I get’ (FLCAS 12); ‘I have less difficulty than average {{college students in}} getting English <b>test</b> <b>instructions</b> straight’ (CTAS 1); ‘During the CET- 4, I {{have the feeling that}} I am not doing well’ (CTAS 12).|$|R
5000|$|Right to {{equitable}} recruitment, admissions, readmissions, <b>testing,</b> education, <b>instruction</b> {{and assessment}} ...|$|R
40|$|Handbook of Food Analytical Chemistry - Water proteins, Enzymes, Lipids, and Carbohydrates gives a good {{overview}} of principles {{in the analysis}} of these important components of food. Advisory comments and recommendations how to carry out the <b>test</b> <b>instructions,</b> which are normally found in other sources, makes the compendium particularly valuable. JRC. D. 8 -Food safety and qualit...|$|R
40|$|Abstract 1 This paper {{addresses}} {{the problem of}} testing path delay faults in a microprocessor core using its instruction set. We propose to self-test a processor core by running an automatically synthesized test program which can achieve a high path delay fault coverage. This paper discusses the method and the prototype software framework for synthesizing such a test program. Based on the processor's instruction set architecture, micro-architecture, RTL netlist as well as gate-level netlist on which the path delay faults are modeled, the method generates deterministic tests (in the form of instruction sequences) by cleverly combining structural and instruction-level test generation techniques. The experimental results for two microprocessors indicate that the <b>test</b> <b>instruction</b> sequences can be successfully generated for {{a high percentage of}} testable path delay faults. 1...|$|E
30|$|The data, {{gathered}} in July 2012, comprise {{a sample of}} N[*]=[*] 504 learners {{in the middle of}} their vocational education as industrial clerks. To compare apprentices working in a dual system against students engaged in school-based training, 290 of the participants were undergoing a dual and 214 a school-based VET. In total, 55 % of the survey participants were women, and 47 % of the students had a migrational background. However, neither gender nor migrational background correlated with the variables featured in our analysis, so we did not control for them. To research the relation between vocational identity and vocational competence, we conducted objective competence tests empirically of N[*]=[*] 187 industrial apprentices in March 2013 at four vocational schools (Munich, Hanover, Bielefeld, and Paderborn). 47 of the apprentices were tested after 1.5  years and 140 apprentices after 2.5  years of their vocational training. The test took 125  minutes, including the <b>test</b> <b>instruction</b> (10  minutes) and completion of the identity survey (10  minutes).|$|E
40|$|The stab {{resistance}} of textiles and membranes {{is a very}} important property for several areas. For many applications, which are used in the protection area, aramid woven structures are normally used. A main problem of these panels is the missing yarn friction, whichleads to a high yarn slippage. It allows a knife or another sharp blade to penetrate the fabric, because the yarns slide apart. One solution is to reduce the slippage of the yarns during the penetration through the knife and resultant of this effect a higher absorbing of the impact energy. To determine the influence of this effect, fourdifferent woven aramidstructures with different properties and pattern, were tested against shift by determining the seam slippage by using the fixed seam opening method. Due to this, the behaviourof stab {{resistance of}} the different aramid fabrics were tested according to theVPAM <b>test</b> <b>instruction</b> “Stab-and impact protection”. The interdependence betweenthe yarn slippage and the stab penetration was tested. A better understanding of this process allows improving fabrics for membranes against stab attacks in future...|$|E
5000|$|The [...] "Break" [...] {{flag of the}} {{processor}} {{is very different from}} the other flag bits. It has no flag setting, resetting, or <b>testing</b> <b>instructions</b> of its own, and is not affected by the PHP and PLP instructions. It exists only on the stack, where BRK and PHP always write a 1, while IRQ and NMI always write a 0.|$|R
40|$|Directed forgetting and {{prospective}} memory methods were combined to examine {{differences in the}} control of memory access. Between studying two lists of target words, participants were either instructed to forget the first list, or to continue remembering the first list. After study participants performed a lexical decision task with an additional requirement to respond with a designated key to targets from {{one or both of}} the lists. List discrimination performance supported the assumption that contextual representations associated with the two lists are more differentiated following forget instructions. Test instructions which directed participants towards both lists or to particular list(s) were more or less compatible with these contextual representations. Lexical decisions on non-target trials were slower when <b>test</b> <b>instructions</b> were compatible with study contexts compared to when incompatible, indicating that contexts reinstated by <b>test</b> <b>instructions</b> influenced the complexity of memory access. This finding is most compatible with theories of memory which locate an important component of control at the pre-decision stage...|$|R
40|$|Abstract Automated GUI tests {{typically}} {{comprise of}} several test steps that are executed on the GUI before reaching {{a point of}} assertion. Comparing a longer and complex exe-cution of a GUI test to its <b>test</b> <b>instructions</b> for debugging is a laborious task: re-establish the test environment, slow down test execution for human perception, and locate the currently executed test step. Video documentation of GUI tests for debugging purposes is already present in several industry tools. However, it is not optimized for effective documentation of on-screen actions nor synched with the executed <b>test</b> <b>instructions.</b> We present a video-based documentation of automated GUI tests that links the executed <b>test</b> case <b>instruction</b> to the on-screen response of the application under test. Screen recording is optimized for speed and memory consumption while all relevant details are captured. Additional browsing capabilities for easier debugging are introduced. Concepts of aspect-oriented programming are adapted for tracing of pre-compiled test case scripts. Our concepts are evaluated by a working implementation, a series of performance measurements during a technical experiment, and industrial experience from 370 real-world test cases carried out in a large software company. The limits of our implementation regarding video capturing and code tracing are explored with a specialized test frame...|$|R
40|$|The aim of {{this study}} is to know the {{differences}} of enhancement in mathematical problem solving ability (MPSA) between the students who received soft skill- based metacognitive learning (SSML) with the students who got conventional learning (CL). This research is a quasi experimental design with pretest-postest control group. The population in this study is the students of Junior High School in Pekanbaru city. The sample consist of 135 students, 68 of them are from the high-level school, and 67 students are from the middle-level school. The instruments are mathematical prior knowledge (MPK) test, MPSA <b>test,</b> <b>instruction</b> observation sheet, students journal about the lesson, and the guideline for interview. The data was analyzed using t-test and two-way ANOVA. The result of data analysis indicates: (1) overall, the enhancement of students 2 ̆ 7 MPSA with SSML approach significantly is higher than those with conventional learning (CL); (2) there is no interaction between the learning approach (SSML and CL) with the school level (high and middle) toward the enhancement of MPSA; (3) there is no interaction between the learning approach (SSML and CL) with MPK (upper, middle, and low) toward the enhancement of MPSA...|$|E
40|$|The aim of {{this study}} is to know  the  {{differences}} of enhancement  in mathematical problem  solving ability (MPSA)   between  the students who received   soft skill-  based metacognitive learning (SSML) with the students who got conventional learning (CL). This research is a quasi experimental design  with pretest-postest control group.   The population in this study is the students of Junior High School in Pekanbaru city.   The sample consist of  135 students, 68 of them are from the high-level school, and 67 students are from the middle-level school. The instruments are mathematical prior knowledge (MPK) test, MPSA <b>test,</b> <b>instruction</b> observation sheet, students journal about the lesson, and the guideline for interview. The data was analyzed using t-test  and two-way ANOVA. The result of data analysis  indicates: (1) overall, the enhancement of students’ MPSA with SSML approach significantly  is higher than those with conventional learning (CL); (2) there is no interaction between the learning approach (SSML and CL) with the school level (high and middle) toward the enhancement of MPSA; (3) there is no interaction between the learning approach (SSML and CL)   with MPK (upper, middle, and low) toward the enhancement of MPSA. Keywords: Mathematical Problem Solving Ability, Soft Skills-Based, Metacognitive Learning   DOI : [URL] </p...|$|E
40|$|The {{objective}} of this field <b>test</b> <b>instruction</b> is to provide technical guidance for aqueous injection emplacement of an extension apatite permeable reactive barrier (PRE) for the sequestration of strontium- 90 (Sr- 90) using a high concentration amendment formulation. These field activities will be conducted according to the guidelines established in DOE/RL- 2010 - 29, 100 -NR- 2 Design Optimization Study, hereafter {{referred to as the}} DOS. The DOS supports the Federal Facility Agreement Consent Order (EPA et al., 1989), Milestone M- 16 - 06 - 01, and 'Complete Construction of a Permeable Reactive Barrier at 100 -N. ' Injections of apatite precursor chemicals will occur at an equal distance intervals on each end of the existing PRE to extend the PRB from the existing 91 m (300 ft) to at least 274 m (900 ft). Field testing at the 100 -N Area Apatite Treatability Test Site, as depicted on Figure 1, shows that the barrier is categorized by two general hydrologic conceptual models based on overall well capacity and contrast between the Hanford and Ringold hydraulic conductivities. The upstream portion of the original barrier, shown on Figure 1, is characterized by relatively low overall well specific capacity. This is estimated from well development data and a lower contrast in hydraulic conductivity between the Hanford formation and Ringold Formations. Comparison of test results from these two locations indicate that permeability contrast between the Hanford formation and Ringold Formation is significantly less over the upstream one-third of the barrier. The estimated hydraulic conductivity for the Hanford formation and Ringold Formation over the upstream portion of the barrier based on observations during emplacement of the existing 91 m (300 ft) PRB is approximately 12 and 10 m/day (39 and 32 ft/day), respectively (PNNL- 17429). However, these estimates should be used as a rough guideline only, as significant variability in hydraulic conductivity is likely to be observed in the barrier extension wells, particularly those in the Ringold formation. The downstream portion of the original barrier, shown on Figure 1, is characterized by generally higher well specific capacity and a larger hydraulic conductivity contrast between the Hanford formation and Ringold Formation. Hydraulic conductivity rates for the Hanford formation and Ringold Formation over the downstream portion of the barrier were estimated at 29 and 9 m/day (95 and 29 ft/day), respectively (with the Hanford formation hydraulic conductivity being greater in the downstream portion than the upstream portion). Once again, {{it should be noted that}} the actual conductivities may vary significantly, and the values state above should only be used as a rough initial estimates. Optimum apatite emplacement has been shown to occur when injections targeting the Hanford formation and the Ringold Formation are performed separately. The remainder of this <b>test</b> <b>instruction</b> provides details for conducting these formation-targeted injections...|$|E
40|$|Data {{relating}} to the development and testing of a model predicting {{the perception of the}} degree of timbral brightness imparted by to a recording by the microphone used to make that recording. Archive comprises audio files, listening <b>test</b> <b>instructions</b> and MaxMSP interfaces, MATLAB code and listening test results. References A. Pearce, "Perceived differences between microphones", PhD Thesis, Institute of Sound Recording, University of Surrey, UK...|$|R
30|$|Wise and Kong (2005) {{proposed}} {{using item}} response times {{to distinguish between}} solution behavior and rapid guessing behavior (Wise 2017). Following this notion, we assume that engaged item completion (i.e., solution behavior) involves taking at least a certain minimum amount of time required to read and understand the <b>test</b> <b>instructions,</b> process the stimulus’ content, and finally give a response, whereas disengaged test-taking behavior means taking less time or guessing rapidly.|$|R
40|$|In {{this paper}} we will present an on-chip method for testing high {{performance}} memory devices, that occupies minimal area and retains full flexibility. This is achieved through microcode <b>test</b> <b>instructions</b> {{and the associated}} on-chip state machine. In addition, the proposed methodology will enable at-speed testing of memory devices. The relevancy of this work is placed in context with an introduction to memory testing and the techniques and algorithms generally used today...|$|R
