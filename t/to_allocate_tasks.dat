91|10000|Public
5|$|Initially, Titan used Jaguar's 10 PB of Lustre storage with a {{transfer}} speed of 240 GB/s, but in April 2013, the storage was upgraded to 40 PB with {{a transfer}} rate of 1.4 TB/s. GPUs {{were selected for}} their vastly higher parallel processing efficiency over CPUs. Although the GPUs have a slower clock speed than the CPUs, each GPU contains 2,688 CUDA cores at 732 MHz, resulting in a faster overall system. Consequently, the CPUs' cores are used <b>to</b> <b>allocate</b> <b>tasks</b> to the GPUs rather than directly processing the data as in conventional supercomputers.|$|E
50|$|Multi{{processing}} {{is the use}} of two or {{more central}} processing units (CPUs) within a single computer system. The term also refers to the ability of a system to support more than one processor or the ability <b>to</b> <b>allocate</b> <b>tasks</b> between them. There are many variations on this basic theme, and the definition of multiprocessing can vary with context, mostly as a function of how CPUs are defined (multiple cores on one die, multiple dies in one package, multiple packages in one system unit, etc.).|$|E
50|$|Initially, Titan used Jaguar's 10 PB of Lustre storage with a {{transfer}} speed of 240 GB/s, but in April 2013, the storage was upgraded to 40 PB with {{a transfer}} rate of 1.4 TB/s. GPUs {{were selected for}} their vastly higher parallel processing efficiency over CPUs. Although the GPUs have a slower clock speed than the CPUs, each GPU contains 2,688 CUDA cores at 732 MHz, resulting in a faster overall system. Consequently, the CPUs' cores are used <b>to</b> <b>allocate</b> <b>tasks</b> to the GPUs rather than directly processing the data as in conventional supercomputers.|$|E
5000|$|Hoogeweegen, Martijn R., et al. [...] "Modular Network Design: Using Information and Communication Technology <b>to</b> <b>Allocate</b> Production <b>Tasks</b> in a Virtual Organization*." [...] Decision Sciences 30.4 (1999): 1073-1103.|$|R
40|$|A {{major problem}} in {{employing}} networks of microcomputers for the real-time simulation of complex systems is <b>to</b> <b>allocate</b> computational <b>tasks</b> <b>to</b> the various microcomputers {{in such a way}} that idle time and time lost in interprocess communication is minimized. The research reported in this paper is directed to the development of a software interface between a higher-level simulation language and a network of microcomputers. A CSSL-IV source program is translated to a data flow graph. This graph is then analyzed automatically so as <b>to</b> <b>allocate</b> computing <b>tasks</b> <b>to</b> the various processors...|$|R
5000|$|Portable Batch System (or simply PBS) is {{the name}} of {{computer}} software that performs job scheduling. Its primary <b>task</b> is <b>to</b> <b>allocate</b> computational <b>tasks,</b> i.e., batch jobs, among the available computing resources. It is often used in conjunction with UNIX cluster environments.|$|R
5000|$|Closer to home, {{he gives}} this example: [...] "If someone fixing a broken water pipe says, 'Hand me the wrench,' his co-worker will not, {{generally}} speaking, say, 'And what do I get for it?' ... The {{reason is simple}} efficiency... : if you really care about getting something done, {{the most efficient way}} to go about it is obviously <b>to</b> <b>allocate</b> <b>tasks</b> by ability and give people whatever they need to do them." [...] Moreover, we tend to ask and give without thinking for things like asking directions, or small courtesies like asking for a light, or even for a cigarette. It seems more legitimate to ask a stranger for a cigarette than for an equivalent amount of cash, or even food; in fact, if one has been identified as a fellow smoker, it's rather difficult to refuse such a request. In such cases—a match, a piece of information, holding the elevator—one might say the [...] "from each" [...] element is so minimal that most of us comply without even thinking about it. Conversely, the same is true if another person's need—even a stranger's—is particularly spectacular or extreme: if he is drowning, for example. If a child has fallen onto the subway tracks, we assume that anyone who is capable of helping her up will do so. The thing which makes it [...] "everyday" [...] is this argument: [...] "communism is the foundation of all human sociability. It is what makes society possible. There is always an assumption that anyone who is not actually an enemy can be expected to act on the principle of [...] "from each according to their abilities," [...] at least to an extent, which is to say, the extent just described.|$|E
40|$|The {{mathematical}} {{models of}} process {{of a power}} consumption for regular and not regular modes are offered which derivate the whole cycle of tasks theoretical, imitating and experimental. A number(line) of such tasks is given, among which it is necessary <b>to</b> <b>allocate</b> <b>tasks</b> of statistical data processing of measurements of process...|$|E
40|$|In {{this paper}} we propose a {{run-time}} approach to organization that is contingent on the task structure of the problem being solved and the environmental conditions under which it is being solved. We use TÆMS as the underlying representation for our problems and describe a framework that uses Organizational Self-Design (OSD) <b>to</b> <b>allocate</b> <b>tasks</b> and resources to the agents and coordinate their activities...|$|E
5000|$|A unit of computation. In a {{parallel}} job, {{two or more}} concurrent tasks work together through message passing and shared memory. Although it is common <b>to</b> <b>allocate</b> one <b>task</b> per physical or logical processor, the terms [...] "task" [...] and [...] "processor" [...] are not interchangeable.|$|R
40|$|We {{consider}} {{the problem of}} scheduling tasks on multiprocessor architectures {{in the presence of}} communication delays. Given a set of dependent tasks, the scheduling problem is <b>to</b> <b>allocate</b> the <b>tasks</b> <b>to</b> processors such that the pre-specified precedence constraints among the tasks are obeyed and certain cost-measures (such as the computation time) are minimized. Several cases of the scheduling problem hav...|$|R
30|$|In {{solving the}} multi-{{contingency}} problem, each contingency requires repeated calculations, {{which is the}} most time-consuming place as well. As the size of the system expands, the time in this place even occupies more than 90 % of the total computing time. Therefore, aiming at the main time-consuming part of the program, a parallel algorithm is designed in this paper <b>to</b> <b>allocate</b> the <b>tasks</b> according <b>to</b> the expected multi-contingency.|$|R
40|$|This study {{centers on}} harmonizing {{cognitive}} tasks {{to the knowledge}} and capacities of the human task performers in automated workplaces. Two research questions are distinguished. (i) How <b>to</b> <b>allocate</b> <b>tasks</b> to persons so that each person can execute his or her {{part of the job}} well? (ii) How to design an aiding function for the computer which can compensate possible knowledge and capacity deficiencies of the human task performer?. ...|$|E
40|$|This work investigates {{allocation}} of tasks to multi-robots when tasks are spatially distributed and constrained {{to be executed}} within assigned time windows. Our work explores the interaction between scheduling and optimal routing. We propose the Time-Sensitive Sequential Single Item Auction algorithm as a method <b>to</b> <b>allocate</b> <b>tasks</b> with time windows in multi-robot systems. We show, experimentally, that the proposed algorithm outperforms other auction algorithms that we modified to handle time windows...|$|E
40|$|Abstract — This paper {{describes}} {{two measures}} of performance {{that can be}} used <b>to</b> <b>allocate</b> <b>tasks</b> in a multirobot foraging problem. These heuristics can be used by a human supervisor or an automated control algorithm to adjust the number of robots exploring the environment versus the number of robots greedily harvesting based on current knowledge. A numerical simulation study is presented that offers preliminary support for the usefulness of these heuristics. I...|$|E
50|$|On 29 October 1962 the U.S.S.R. {{decided to}} take the {{missiles}} and other offensive weapons out of Cuba. Nine vessels, including the Metallurg Anosov, were <b>allocated</b> <b>to</b> the <b>task.</b>|$|R
40|$|Abstract: Managing {{resources}} in a radar {{system is a}} challenging task that requires integrated optimisation and scheduling. Resources need <b>to</b> be <b>allocated</b> <b>to</b> <b>tasks</b> {{with the objective of}} minimizing system error while ensuring that the tasks can be scheduled with the chosen parameters. Radar scheduling is affected not only by timing requirements of tasks but physical factors such as energy and heat. We propose an integrated framework for utility maximization and dwell scheduling in modern radar systems. Our approach uses novel concepts such as the schedulability envelope and temporal distanceconstrained task model for radar tasks...|$|R
50|$|An {{uncommon}} {{feature of}} the MTA is several workloads can be interleaved with good performance. Typically, supercomputers are dedicated to a task at a time. The MTA allows idle threads <b>to</b> be <b>allocated</b> <b>to</b> other <b>tasks</b> with very {{little effect on the}} main calculations.|$|R
40|$|DWMM ????????? ??? ?????????? ???????????? ???????????? ?????????? ? ??????? ?????????? ??????????. ????????? ?????????? ?[- 1, 1] ??? ??????? ????????????? ????????? ??????. ???????? ???????? ???????? ??????????? ?????? ?? ????????, ?? ??????? ????, ?? ?????? ???? ???????????? ? ?????????? ????? ????????????? ???????????. ???????????? ????????? ??????? ?? ??????????? ????? ??????. The article gives {{improved}} DWMM algorithm for optimizing {{the parameters}} of the job opportunities {{in the form of the}} allowable range. Introduced coefficient ? [- 1, 1] for each optimizes task. The algorithm allows for more flexibility <b>to</b> <b>allocate</b> <b>tasks</b> to resources, due to the fact that the problem can donate to optimize the allowable limits. Efficiency of the algorithm increases with the number of customers in the system...|$|E
30|$|Within the {{framework}} of structure and coordination, organizational design boils down to who does what when, or how <b>to</b> <b>allocate</b> <b>tasks,</b> resources, customers, etc. {{to each of the}} small problems and how to coordinate these small units and tasks. This gives {{the framework}} within which experimentation should be done. However, experimentation also requires a theoretical framework with which the experimentation should be done to allow the required ability to generalize. One such framework is the information-processing paradigm.|$|E
40|$|This paper {{presents}} a reinforcement learning algorithm used <b>to</b> <b>allocate</b> <b>tasks</b> to agents in an uncertain real-time environment. In such environment, tasks {{have to be}} analyzed and allocated really fast for the multiagent system to be effective. To analyze those tasks, described {{by a lot of}} attributes, we have used a selective perception technique to enable agents to narrow down the description of each task, enabling the reinforcement learning algorithm to work on a problem with a reasonable number of possible states. 1...|$|E
40|$|How should <b>tasks</b> be <b>allocated</b> {{dynamically}} {{between people}} and intelligent machines? What are the initial issues? Previous work on static task allocation and work on human performance when multi-tasking and when interrupted provides suggestions on how <b>to</b> dynamically <b>allocate</b> <b>tasks</b> between humans and machines. We use these results to explore previous theories of task allocation. Some of these theories have direct suggestions for dynamic task allocation and some have indirect implications. We use both types to provide a list of suggestions for creating systems that do dynamic task allocation. The context we will be working with {{is a type of}} pilot’s associate that has a description of the pilot’s tasks and flight mission built within a cognitive architecture. The proposed associate has an additional component that can match the pilot’s performance to these tasks, predict the flight phase and pilot’s current tasks, and use this information <b>to</b> dynamically <b>allocate</b> these <b>tasks</b> between the pilot and the automation. These suggestions are to inform the design of a high-level intelligent controller...|$|R
40|$|Given paper contain {{proposed}} approached for {{task scheduling}} which {{is done on}} a group of computers. Analysis of process data part by dividing them into number of fixed part & merge into single set that as good as previous original data set. Parallelism an approach for doing jobs in amount of time i. e very fast. The paper contain dynamic approach for process migration using thread level paradigm. Creating a thread of process into number of task, that leads to reduce total execution time of process. An algorithm is used to calculate PCB for decision purpose to achieve load balancing. Fair share approach is considered <b>to</b> <b>allocating</b> <b>task</b> <b>to</b> every processor using preemption strategy. The MPI[4] [10]is used for process communication. This system has defined to reduce total execution time on onboard & between board times. Open knoppix & MOSIX platform(Middleware) are used to show the results. Prime number calculation code is used to show parallel architecture like SIMD computer. Cluster computing is way of resource managing & scheduling strategy...|$|R
40|$|A novel modular connectionist {{architecture}} {{is presented in}} which the networks composing the architecture compete to learn the training patterns. As {{a result of the}} competition, different networks learn different training patterns and, thus, learn to compute different functions. The architecture performs task decomposition {{in the sense that it}} learns to partition a task into two or more functionally independent vii <b>tasks</b> and <b>allocates</b> distinct networks <b>to</b> learn each task. In addition, the architecture tends <b>to</b> <b>allocate</b> <b>to</b> each <b>task</b> the network whose topology is most appropriate to that <b>task,</b> and tends <b>to</b> <b>allocate</b> the same network to similar tasks and distinct networks to dissimilar tasks. Furthermore, it can be easily modified so as to [...] ...|$|R
40|$|In {{this paper}} a dynamic task {{allocation}} and controller design methodology for cooperative robot teams is presented. Fuzzy logic based utility functions are derived to quantify each robot's {{ability to perform}} a task. These utility functions are used <b>to</b> <b>allocate</b> <b>tasks</b> in real-time through a limited lookahead control methodology partially based on {{the basic principles of}} discrete event supervisory control theory. The proposed controller design methodology accommodates flexibility in task assignments, robot coordination, and tolerance to robot failures and repairs. Implementation details of the proposed methodology are demonstrated through a warehouse patrolling case study...|$|E
40|$|We {{present an}} auction-based {{approach}} <b>to</b> <b>allocate</b> <b>tasks</b> that have complex time constraints and interdependencies {{to a group}} of cooperative agents. The approach combines the advantages of planning and scheduling with the ability to make distributed decisions. We focus on methods for modeling and evaluating the decisions an agent must make when deciding how to schedule tasks. In particular, we discuss how to specify task schedules when requesting quotes from other agents. The way tasks are scheduled affects the number and types of bids received, and therefore the quality of the solutions that can be produced...|$|E
40|$|Cloud {{computing}} {{provides a}} pool of virtualized computing resources and adopts pay-per-use model. Schedulers for cloud computing make decision on how <b>to</b> <b>allocate</b> <b>tasks</b> of workflow to those virtualized computing resources. In this report, I present a flexible particle swarm optimization (PSO) based scheduling algorithm to minimize both total cost and makespan. Experiment is conducted by varying computation of tasks, number of particles and weight values of cost and makespan in fitness function. The {{results show that the}} proposed algorithm achieves both low cost and makespan. In addition, it is adjustable according to different QoS constraints...|$|E
50|$|There was no rush to {{liberate}} the islands. The Germans were prisoners of war who did not {{even have to be}} guarded. Because of the shortage of infantry, troops <b>allocated</b> <b>to</b> <b>Task</b> Force 135 were being sent to join the main army fighting in Europe.|$|R
40|$|In {{this paper}} we provide a {{distributed}} solution to perform Design Rule Checking (DRC) of a layout by exploiting either spatial independence or layer independence in layout data. We {{show that the}} former approach to DRC can result in reasonable speedup only for large layouts, whereas, the latter approach shows a better performance for smaller layouts. We also provide an algorithm to optimally partition a layout and a scheme <b>to</b> <b>allocate</b> DRC <b>tasks</b> <b>to</b> idle processors in a Distributed Computing Environment (DCE) to attain load balancing...|$|R
50|$|In August 1978, it was {{proposed}} <b>to</b> <b>allocate</b> the <b>task</b> of raising, training and sustaining the counter-terrorist {{force to the}} Special Air Service Regiment to follow similar lines from the British Army with their counter-terrorist team from within their SAS. The force was {{to be called the}} TAG and was to be commanded by the Commanding Officer SASR. On 3 May 1979, the Government approved the raising of a dedicated counter-terrorist force in the SASR, with final authorisation to raise the TAG given on 31 August 1979.|$|R
40|$|AbstractGoogle Docs is a {{powerful}} collaborating tool. Traditionally, collaboration {{can be done by}} attaching documents to e-mail and sending them to collaborators. By using Google Docs, one needs to have only one copy of document which is kept in the web. To collaborate, one needs to create a Google document and invite others as collaborators. The document owner needs <b>to</b> <b>allocate</b> <b>tasks</b> to collaborators so that each of the collaborators knows which part they are supposed to contribute. This paper aims to introduce Google Docs as a useful collaborating tool and how it facilitates academicians in collaborating with others...|$|E
40|$|Desktop Grid is {{different}} from Grid {{in terms of the}} characteristics of resources as well as types of sharing. Particularly, resource providers in Desktop Grid are volatile, heterogeneous, faulty, and malicious. These distinct features make it difficult for a scheduler <b>to</b> <b>allocate</b> <b>tasks.</b> Moreover, they deteriorate reliability of computation and performance. To overcome the problems, we propose a new Desktop Grid scheduling coupled with resource grouping, which constructs a computational overlay network (CON) according to capability, dedication, volatility, and trust of resource providers. Scheduling is performed on the basis of characteristics and topology of the CON...|$|E
40|$|International audienceCloud systems {{include both}} locally based servers at user {{premises}} and remote servers and multiple Clouds {{that can be}} reached over the Internet. This paper describes a smart distributed system that combines local and remote Cloud facilities. It operates with a task allocation system that takes decisions <b>to</b> <b>allocate</b> <b>tasks</b> dynamically to the service that offers the best overall Quality of Service and a routing overlay which optimizes network delay for data transfer between clouds. Experimental results are conducted at the global intercontinental level, both to collect data for decision making and to illustrate the effectiveness of our approach...|$|E
40|$|In {{the last}} twenty years, {{disasters}} throughout the world have become important social and political concerns. In disaster environments, heterogenous resources with limited energy and capabilities need <b>to</b> be <b>allocated</b> <b>to</b> <b>tasks</b> under multiple constraints. Hence, how to effectively and efficiently manage such resources to complete as many tasks as possible is an important and challenging research topic. This thesis aims at (1) investigating challenging issues of resource management in disaster environments and (2) developing multi-agent approaches to achieve efficient task-based resource management in disaster environments. In the thesis, four multi-agent approaches are proposed and developed to achieve effective and efficient resource management in disaster environments...|$|R
40|$|Policies are {{typically}} chosen by politicians and bureaucrats. This paper investigates the normative criteria with which <b>to</b> <b>allocate</b> policy <b>tasks</b> <b>to</b> elected policymakers (politicians) or non elected bureaucrats. Politicians are preferable if ability {{is less important}} than effort or there is little uncertainty about whether the policymakers has the required abilities; if there is uncertainty about social preferences and flexibility is valuable; if time inconsistency is not an issue; if vested interests do not have large stakes in the policy outcome; if policy complementarities and compensation of losers is important...|$|R
40|$|We {{propose a}} tool for {{managing}} tasks of Research and Development (R&D) projects. We define an R&D project as a network of tasks and we assume that different amounts of resources may be <b>allocated</b> <b>to</b> a <b>task,</b> leading to different costs and different average execution times. The advancement of a task is stochastic, and the management may reallocate resources while the task is being performed,according to its progress. The operational cash flows depend on the task completion time, and their expected values follow a stochastic process. We consider that a strategy for completing a task {{is a set of}} rules that define the level of resources <b>to</b> be <b>allocated</b> <b>to</b> the <b>task</b> at each moment. We discuss the evaluation of strategies for completing a task, and we address the problem of finding the optimal strateg...|$|R
