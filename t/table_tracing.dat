4|53|Public
60|$|The first-named gentleman drew up an {{elaborate}} <b>table</b> <b>tracing</b> the Croker pedigree {{as far back}} as the battle of Agincourt. The Croker crest—“Deus alit eos”—was granted to Sir John Croker, who accompanied Edward IV. on his expedition to France in 1475, as cup and standard-bearer; but without going back to the original generation, or tracing the Limerick or any other branch of the family, it will be sufficient to say here that the Crokers, if they did not “come over with William the Conqueror” came originally from Devonshire, and settled in Ireland in the reign of Elizabeth. Thomas Crofton Croker was the only son of Thomas Croker, who, after twenty-five years of arduous and faithful military service in North America, Holland, and Ireland, and after having purchased every step in the army, was gazetted brevet-major on the 11th May, 1802, in the same regiment which he had at first joined (the 38th, or 1st Staffordshire Foot), and in which he had uninterruptedly served. Indeed, he was so much attached to his regiment, that, in his case at least, the Staffordshire knot became perfectly symbolic. The closer the knot was drawn the firmer the tie became. He commenced, continued, and ended an honourable life of activity in the service of his country from mere boyhood, until ill-health and a broken constitution forced him to sell his commission. Thomas Croker was the eldest son of Richard Croker, of Mount Long in the county of Tipperary, who died on the 1st January, 1771; and his mother was Anne, the daughter of James Long of Dublin, by the Honourable Mary Butler, daughter of Theobald the seventh Earl of Cahir. Thomas Croker was born on the 29th March, 1761. In 1796 he married Maria, eldest daughter and co-heir of Croker Dillon of Baltidaniel in the county of Cork, and on the 15th January, 1798, Thomas Crofton Croker was born at the house of his maternal grandmother in Buckingham Square, Cork, receiving his first Christian name after his father, and his second after his godfather, the Honourable Sir E. Crofton, Bart.|$|E
5000|$|Hyrum Smith and John Whitmer, also {{witnesses}} in 1829, {{are reported to}} have stated that the rings holding the plates together were, in Hyrum's words, [...] "in {{the shape of the}} letter D, which facilitated the opening and shutting of the book". Smith's wife Emma and his younger brother William said they had examined the plates while wrapped in fabric. Emma said she [...] "felt of the plates, as they thus lay on the <b>table,</b> <b>tracing</b> their outline and shape. They seemed to be pliable like thick paper, and would rustle with a metallic sound when the edges were moved by the thumb, as one does sometimes thumb the edges of a book". William agreed that the plates could be rustled with one's thumb like the pages of a book.|$|E
40|$|Contains: large genealogical <b>table</b> <b>tracing</b> Koppel family {{roots to}} 17 th century; 2 {{identical}} manuscripts, one typewritten and one printed, also with genealogical data 				starting in 17 th century. Carol ChristensenProcessed for digitizationSent for digitizationReturned from digitizationLinked to online manifestationdigitize...|$|E
50|$|The {{following}} <b>table</b> <b>traces</b> the specification's {{evolution in}} terms of environmental tailoring to meet a specific user's needs.|$|R
50|$|The {{following}} <b>table</b> <b>traces</b> {{for each}} {{occasion of the}} competition the winner, the place at which the prime team ended and the host city.|$|R
50|$|The Paranapanema River has {{in total}} eight dams and their {{respective}} reservoirs. The following <b>table</b> <b>traces</b> a list going {{in the direction of}} the Paraná River.|$|R
40|$|This paper investigates {{and argues}} for Harkness learning: an {{approach}} to education that inculcates a culture of enquiry, driven by students in dialogue around a <b>table.</b> <b>Tracing</b> {{the history of the}} Harkness reforms in education at Phillips Exeter Academy, their pedagogical and philosophical roots are considered. Although partly inspired by the Oxford tutorial system and the Socratic concept of dialogue, Harkness departs from there to a radical classroom dynamic. The teacher is required to be more open-minded and less controlling over outcomes, to take the risk of listening more and saying less. This shift in emphasis fits with a distinctly American philosophical respect for the sanctity of the free thought and originality of the individual, which here is traced to Transcendentalist ideals that have permeated American culture. It can also be compared with Problem-Based Learning and there are certain significant overlaps between these pedagogies. However, Harkness is sometimes narrowly misunderstood as a technique for teaching, which takes the approach out of context. It needs to be understood in the broad frame of cultural reform of an institution – it is a useful symbol for a community committed to student discourse and problem solving. In this respect, Harkness owes a further debt to pragmatism – another great American philosophical-educational tradition...|$|E
40|$|Seven {{separate}} {{family tree}} <b>tables</b> <b>tracing</b> {{descendants of the}} following individuals: Reb Begum, Berger (first name unknown), Jakob Gruenpeter, David Joseph (later 				Dublon), Loebel Tichauer, Moses Wolf, and Zernik (first name unknown). Individual family members are listed along with their basic vital statistics where available. Accompanying the 				tables is a hand-drawn family tree. Photocopy of family tree for Simon Tichauer and of text of the Tichauer family genealogy. Michelle B. Tichauer FanwickProcessed for digitizationSent for digitizationReturned from digitizationLinked to online manifestationdigitize...|$|R
50|$|In the '90s, he {{published}} a coffee <b>table</b> book <b>tracing</b> {{the origins of}} the musical Oklahoma!. Later he wrote Schmucks with Underwoods--Conversations with Hollywood's Classic Screenwriters.|$|R
40|$|In this paper, we {{demonstrate}} how to design an optimized processor to achieve fast IP packet forwarding. By developing 2 customized instructions, we show {{how to achieve}} one routing lookup with 2 instructions compared with 100 + instructions with standard RISC processor. By using real routing <b>table</b> <b>traces</b> collected from backbone routers and packet traces, we show that we can achieve more than 10 million lookups per second (MLPS) in the worst case compared to 2 MLPS using general-purpose CPUs. Using a customized processor for routing lookup provides more flexibility and extensibility which allows users to put their own data structure and algorithms to meet their specific needs while for ASIC solution it is tied to a fixed data structure and algorithms...|$|R
50|$|AMX-10 RATAC: An unarmed AMX-10P with a RATAC {{fire control}} radar mounted over its turret ring and a <b>tracing</b> <b>table</b> located inside the hull.|$|R
40|$|<b>Tables</b> that <b>trace</b> the {{descendants}} of Naftali Stern (born 1740) and Levi Sonneborn (1833 - 1911) of Breidenbach, many of whom settled in the United States. Basic vital information is provided for most family members, and some members also have thumbnail biographies or information about professional activities. A. P. OppenheimerProcessed for digitizationSent for digitizationReturned from digitizationLinked to online manifestationdigitize...|$|R
40|$|This paper {{presents}} a general framework to derive tabular algorithms {{for a very}} large class of stack-based computations, not only in Context-Free Parsing but also in Logic Programming and more generally {{for all kinds of}} "information" domains (abstract domains, constraint domains). Tabular algorithms store in a <b>table</b> <b>traces</b> of computations to achieve computation sharing, which is interesting when dealing with non-deterministic computations. By considering what can be naively described as partial information on stack elements, we interpret these traces as stack fragments. By tuning the exact amount of information present in these traces, we improve tabular evaluation of stack-based computations by increasing the sharing of partial computations and unify within the same framework different tabular algorithms. Keywords: Tabulation / Push-Down Automata / Logic Programming / Parsing Introduction Stacks {{are one of the most}} useful structure for computer science. They are used, among others, [...] ...|$|R
40|$|We {{describe}} a data-mining approach to creating central parts of loop invariants. The approach {{is based on}} producing a <b>trace</b> <b>table</b> by recording the values of program variables each time the condition of a loop is evaluated. From this <b>trace</b> <b>table,</b> functional dependencies between program variables can be extracted which may {{play a vital role}} in loop invariants. The extraction process is accomplished through the use of genetic programming which performs a symbolic regression on the data contained by the <b>trace</b> <b>table.</b> We illustrate our approach with examples. 1 Introduction A central difficulty encountered by formal methods for program verification is the availability of appropriate loop invariants. The necessity and nature of loop invariants is most clearly visible and understandable in connection with loop constructs as they occur in imperative programming languages. Verifying an (imperative) program P means showing that it is correct with respect to a given pre-condition Φ and [...] ...|$|R
40|$|The trace cache is a {{recently}} proposed solution to achieving high instruction fetch bandwidth by buffering and reusing dynamic instruction traces. This work presents a new block-based trace cache implementation that can achieve higher IPC performance with more efficient storage of traces. Instead of explicitly storing instructions of a trace, pointers to blocks constituting a trace {{are stored in}} a much smaller <b>trace</b> <b>table.</b> The block-based <b>trace</b> cache renames fetch addresses at the basic block level and stores aligned blocks in a block cache. Traces are constructed by accessing the replicated block cache using block pointers from the <b>trace</b> <b>table.</b> Performance potential of the blockbased trace cache is quantified and compared with perfect branch prediction and perfect fetch schemes. Comparing to the conventional trace cache, the block-based design can achieve higher IPC, with less impact on cycle time. Results: Using the SPECint 95 benchmarks, a 16 -wide realistic design of a block-based t [...] ...|$|R
40|$|Two traces {{initiated}} on 13 Nov 2012. Report includes site description, geologic and hydrogeologic background, geographical context figure including dye inputs, sampling points and inferred groundwater flow paths, a <b>table</b> summarizing <b>trace</b> results in detail and a {{detailed discussion of}} results and implications. A collaborative effort between the Minnesota Department of Natural Resources and the University of Minnesota. This work was supported by grants from the Legislative-Citizens Commission on Minnesota Resources...|$|R
40|$|VBF is a {{collection}} of C++ classes designed for analyzing vector Boolean functions (functions that map a Boolean vector to another Boolean vector) from a cryptographic perspective. This implementation uses the NTL library from Victor Shoup, adding new modules that call NTL functions and complement the existing ones, making it better suited to cryptography. The class representing a vector Boolean function can be initialized by several alternative types of data structures such as Truth <b>Table,</b> <b>Trace</b> Representation, and Algebraic Normal Form (ANF), among others. The most relevant cryptographic criteria for both block and stream ciphers as well as for hash functions can be evaluated with VBF: it obtains the nonlinearity, linearity distance, algebraic degree, linear structures, and frequency distribution of the absolute values of the Walsh Spectrum or the Autocorrelation Spectrum, among others. In addition, operations such as equality testing, composition, inversion, sum, direct sum, bricklayering (parallel application of vector Boolean functions as employed in Rijndael cipher), and adding coordinate functions of two vector Boolean functions are presented. Finally, three real applications of the library are described: the first one analyzes the KASUMI block cipher, the second one analyzes the Mini-AES cipher, and the third one finds Boolean functions with very high nonlinearity, a key property for robustness against linear attacks...|$|R
60|$|They {{mounted the}} stair in silence, and still with an {{occasional}} awestruck glance at the dead body, proceeded more thoroughly to examine {{the contents of the}} cabinet. At one <b>table,</b> there were <b>traces</b> of chemical work, various measured heaps of some white salt being laid on glass saucers, as though for an experiment in which the unhappy man had been prevented.|$|R
3000|$|Let T be {{a set of}} all syntax trees {{obtained}} from an audit trail A and recorded in a syntax tree <b>table.</b> A workload <b>trace</b> of an audit trail A is denoted by W_A and W_A[i] = [...] _T∈T W_T[i], ∀ i= 1,...,|U|, i.e. it is a sum of workload traces of all syntax trees included in a syntax tree table.|$|R
50|$|A <b>trace</b> <b>table</b> is a {{technique}} used to test algorithms, {{in order to make}} sure that no logical errors occur whilst the algorithm is being processed. The table usually {{takes the form of a}} multi-column, multi-row table; With each column showing a variable, and each row showing each number input into the algorithm and the subsequent values of the variables.|$|R
50|$|<b>Trace</b> <b>tables</b> are {{typically}} used {{in schools and}} colleges when teaching students how to program. They can be an essential tool in teaching students how a certain algorithm works and the systematic process that is occurring when the algorithm is executed. They can also be useful for debugging applications, helping the programmer to easily detect what error is occurring, and why it may be occurring.|$|R
30|$|DTrace sets up all jump {{tables in}} user mode before the {{application}} starts execution. The application then sends the base addresses of the jump <b>tables</b> to the <b>Trace</b> Analyzer. The user mode runtime talks with kernel to enable and stop Intel PT {{before and after}} application execution. These operations are implemented in constructor and destructor, declared with GCC constructor and destructor attributes and invoked automatically by C runtimes.|$|R
40|$|As Wireless Mesh Networks (WMNs) are {{continuously}} gathering momentum, {{security has}} become a pivotal issue. Denial of Service (DoS) attack is a serious threat looming over WMNs due to their plug-and-play architecture. Unfortunately, a DoS attack {{is very difficult to}} stop due to the rampant spoofing of source IP addresses by the attackers. The best anti-dote, is to fix the problem at its root by identifying the source of attack. As a solution to this problem, we present a novel technique that elegantly performs hop-by-hop traceback using MAC identifiers. We use OPNET as the simulation tool to model WMNs and modify the wireless module of OPNET to incorporate at each node, a <b>trace</b> <b>table</b> to record the trace information. We record in the <b>trace</b> <b>table</b> of each forwarding mesh router, two tuple entries of the incoming MAC address and source IP address of the packet. This information is then used to perform hop-by-hop traceback from the victim back to the source. We finally illustrate the effectiveness of our scheme in attack path reconstruction through simulation in OPNET...|$|R
40|$|The thesis {{deals with}} problem of urban mass transportation. Theoretical part {{is focused on}} mass transportation. The thesis {{contains}} delimination of area - Olomoucky Region - and its mass transportation - integrated transport system "IDSOK". The {{main part of the}} thesis deals with Urban Mass Transportation in Olomouc. There are analyzed selected problems of urban mass transportation as comfort, adherence to time <b>tables,</b> new tram <b>traces</b> routing - operating expenses of trams and buses - and communication with passengers...|$|R
5000|$|The New Westminster riding {{originally}} {{included all}} of the Lower Mainland outside of the City of New Westminster, such that all Fraser Valley and Vancouver ridings are derivatives of the New Westminster riding, which became a three-member renamed Westminster for the 1890 election before being partitioned into four ridings. The following <b>table</b> attempts to <b>trace</b> the lineage of the Lower Mainland ridings (other than those in Vancouver or the North Shore, {{which can be found}} on Vancouver (electoral districts): ...|$|R
40|$|A new tropospheric mapping {{function}} is derived {{which is more}} accurate than previous {{mapping function}}s above elevations of 4 deg. The error due to the given analytic aproximation {{is estimated to be}} less than 0. 2 percent for elevation angles larger than 6 deg (less than 0. 4 cm at 6 deg). The mathematical expansion used in the derivation is valid for any laterally homogeneous atmospheric model of refractivity. The new mapping function, computer-generated ray <b>tracing</b> <b>tables,</b> and other mapping functions are compared...|$|R
50|$|A {{pantograph}} {{is a long}} {{design that}} spans {{the length of the}} longarm table. The longarm quilter will take the pantograph design and place it beneath the plastic layer on the <b>table</b> and then <b>trace</b> this design using the laser or stylus found on their machine head. The design typically spans the length of the quilt and can be repeated in rows to produce an all-over design on the quilt top. This method of longarm machine quilting is popular due to the minimal amount of work required by the longarm quilter themselves.|$|R
40|$|Pipelined ASIC {{architectures}} {{are increasingly}} being used in forwarding engines for high speed IP routers. We explore optimization issues {{in the design of}} memory-efficient data structures that support fast incremental updates in such forwarding engines. Our solution aims to balance the memory utilization across the multiple pipeline stages. We also propose a series of optimizations that minimize the disruption to the forwarding process caused by route updates. These optimizations reduce the update overheads by a factor of 2 - 5 for a variety of different core routing <b>tables</b> and update <b>traces...</b>|$|R
5000|$|The Rabbi cites an {{alternate}} yet similar lineage table citing the patrilineal family source {{to a certain}} [...] ""נוריש יהוידע הכהן" [...] ("Heritage of Yehoyada HaKohen"). This lineage <b>table</b> seems to <b>trace</b> back an additional step from the said [...] "Yitzchok HaKohen the elder" [...] who had emigrated from Israel to Djerba at the Second Temple Destruction, the alternate lineage source seems to hint that the family traced itself to biblical Yehoyada Kohen Gadol, an artifact that is somewhat plausible based on Rav Hai Gaon's known letter penned to the kohanim of Djerba.|$|R
40|$|In this paper, we {{describe}} an IP-Lookup method for network routing. We extend the basic Range Trie data-structure to support Longest Prefix Match (LPM) and incremental updates. Range Tries improve {{on the existing}} Range Trees allowing shorter comparisons than the address width. In so doing, Range Tries scale better their lookup latency and memory requirements with the wider upcoming IPv 6 addresses. However, as in Range Trees, a Range Trie does not inherently support LPM, while incremental updates have a performance and memory overhead. We describe the additions required to the basic Range Trie structure and its hardware design in order to store and dynamically update prefixes for supporting LPM. The proposed approach is prototyped in a Virtex 4 FPGA and synthesized for 90 -nm ASICs. Range Trie is evaluated using Internet Routing <b>Tables</b> and <b>traces</b> of updates. Supporting LPM roughly doubles the memory size of the basic Range Trie, which is still half compared to the second best related work. The proposed design performs one lookup per cycle and one prefix update every four cycles...|$|R
50|$|Initially an Eastern Football Alliance was run in 1891-92 {{with eight}} teams - Adventurers, Armdale, Bathgate Rovers, Bo'ness, broxburn, Kirkcaldy (who withdrew {{early in the}} season), Broxburn Shamrock and Mossend Swifts. Leith Hibernians who were {{actually}} the old Hibernian that disbanded in 1891 were also members but withdrew before the new season. They were replaced by Adventurers. Many matches remained unplayed with Mossend Swifts leading the <b>table</b> from results <b>traced.</b> The Eastern Alliance was wound up at the season's end. The first league called Eastern Football League was formed in 1893-94 by Bathgate, Bo'ness Broxburn and Broxburn Shamrock, but again {{seems to have been}} abandoned midway through the season.|$|R
50|$|Shenton soon {{constructed}} a cosmology, based partly on {{his interpretation of}} Genesis, that the earth was a flat disk centred on the North Pole with the zetetic notion of the South Pole being an impenetrable wall of ice, that marked {{the edge of the}} pit that is the earth in the endless flat plane forming the universe. The sun cast a narrow beam like a flashlight moving over a <b>table</b> as it <b>traced</b> flat circles that varied over the 365-day cycles. The sun was 32 mi in diameter 3000 mi above the earth and the moon also 32 miles in diameter but only 2550 mi above the earth.|$|R
30|$|The Arthur Road Bay is an oval-shaped {{depression}} (580  m {{long and}} 360  m wide) with a sand rim (Fig.  2). It has been modified by anthropogenic activity (draining and clearing). Two ditches drain water from this bay. Data were collected along two profiles that transected the bay perpendicularly (Fig.  2). Gas measurements were made every 50  m along both profiles (Fig.  2). The maximum detected H 2 concentration was > 0.11  % (detector saturation), {{with an average}} of 233  ppm across 23 measurements (Additional file 1 : <b>Table</b> SI- 1). <b>Traces</b> of C 2 + hydrocarbons were detected in the laboratory analysis of one soil gas sample (Arthur Road Bay, Table  1).|$|R
50|$|This example {{shows the}} {{systematic}} process {{that takes place}} whilst the algorithm is processed. The initial value of x is zero, but i, although defined, has not been assigned a value. Thus, its initial value is unknown. As we execute the program, line by line, the values of i and x change, reflecting each statement of the source code in execution. Their new values are recorded in the <b>trace</b> <b>table.</b> When i reaches the value of 11 because of the i++ statement in the for definition, the comparison i <= 10 evaluates to false, thus halting the loop. As we also {{reached the end of}} the program, the table test also ends.|$|R
40|$|Abstract Tools {{can boost}} {{software}} developer productivity, but building custom tools is prohibitively expensive, especially for small organizations. For example, embedded programmers {{often have to}} use low-level C with limited IDE support, and integrated into an off-the-shelf tool chain in an ad-hoc way. To address these challenges, we have built mbeddr, an extensible language and IDE for embedded software development based on C. mbeddr is a largescale instantiation of the Jetbrains MPS language workbench. Exploiting its capabilities for language modularization and composition, projectional editing and multi-stage transformation, mbeddr is an open and modular framework that lets third parties add extensions to C with minimal effort and without invasive changes. End users can combine extensions in programs as needed. To illustrate the approach, {{in this paper we}} discuss mbeddr’s support for state machines, components, decision <b>tables,</b> requirements <b>tracing,</b> product line variability and program verification and outline their implementation. We also present our experience with building mbeddr, which shows that relying on language workbenches dramatically reduces the effort of building customized, modular and extensible languages and IDEs to the point where this is affordable by small organizations. Finally, we report on the experience of using mbeddr in a commercial project, which illustrates the benefits to end users...|$|R
40|$|The {{practical}} and conceptual {{challenges faced by}} the analysis of trace elements present in natural waters are not merely, as is often thought, an endless race towards lower detection limits or {{to the development of}} techniques allowing the determination of any possible chemical species formed by all chemical elements. Rather, as discussed in this paper, they include the development of (i) robust, cheap, and reliable methods that could also be used by laypeople (the experience gained in the development of field kits for As is discussed as an example from which similar developments for other elements may be drawn); (ii) more environmentally-friendly methods (the current guiding criteria probably being too simplistic); and (iii) methods making it possible to follow diel concentration changes and sharp concentration variations caused by the probable increase of heavy rainfall events. This paper also claims that neither the measurement of total concentrations (reliable methods are lacking for many elements of the periodic <b>table</b> of <b>trace</b> elements, as illustrated through the cases of Bi, Te, and Sb), nor chemical speciation analysis, are as mature as often thought. In particular, chemical speciation studies demand the development of a better, comprehensive conceptual framework. A trial is carried out to lay the basis of such a framework...|$|R
