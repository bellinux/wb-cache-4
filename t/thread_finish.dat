1|39|Public
40|$|There is a {{requirement}} (within the food packaging industry) for a greater analytical knowledge and more scientific understanding of the ROPP capping process and of the interaction of caps (closures) with the threaded part of the glass container (finish). Threads used within the industry have largely developed empirically from metal thread profiles. An improved understanding is needed so that problems associated with that process can be better understood and solved. Such problems can be manifest in damaged closures, ‘spinners’ and closures that are just too difficult to open. The term ‘spinners’ is used for closures that do not break the pilfer band (a tamper evident safety feature) when twisted. The same term {{is also used to}} describe closures that have been turned the wrong way (i. e. clockwise) on opening, stripping the thread whilst not breaking the pilfer band. To combat this problem it is desirable to produce a closure system that has a high torque when twisted in the wrong direction (known as the over torque) whilst maintaining good seal integrity and a low torque for correct opening procedure. A successful feasibility study was carried out to investigate the appropriateness of using finite element techniques to investigate closure systems and gain the required understanding to improve these systems. The follow on project utilised these finite element techniques and experimental testing using a single-head capping machine. The Project focuses on the industry standard glass <b>thread</b> <b>finish</b> called the GF 305 that utilises an extra deep, aluminium ROPP closure. The results of this work so far are presented here...|$|E
5000|$|The [...] method executes {{the code}} {{added in the}} {{construct}} (...) method in a separate thread.To be alerted when the background <b>thread</b> <b>finishes,</b> one need only override the [...] method. The [...] method can return a result which can later be retrieved using SwingWorker's [...] method.|$|R
5000|$|... dynamic: Here, {{some of the}} {{iterations}} are {{allocated to}} {{a smaller number of}} threads. Once a particular <b>thread</b> <b>finishes</b> its allocated iteration, it returns to get another one from the iterations that are left. The parameter chunk defines the number of contiguous iterations that are allocated to a thread at a time.|$|R
50|$|A {{variety of}} {{standard}} finishes {{are available for}} aluminium bottlecans {{that are designed to}} work with industry standard closures and caps, in addition to standard bottle filling operations. Some traditional finishes include: 26 mm standard crown cap, 38 mm lug finish, 38 mm continuous thread with plastic sleeve, 38 mm ROPP and 28 mm continuous <b>thread</b> <b>finishes.</b>|$|R
30|$|Since two <b>threads</b> <b>finished,</b> they {{directly}} merge {{and a new}} thread {{is created}} and then same process is lunched again. New created thread will inherit queue shared between his parents. Thus it can restart research. It {{is also important to}} mention that there is no hierarchical order in thread merging, only criteria is finishing time. We mention also that one neighbor cannot be inserted twice. It is a precaution in order to minimize consumed cache. More formal description of merging techniques is given in by algorithm 2.|$|R
50|$|Twisted {{supports}} {{an abstraction}} over raw threads — using a thread as a deferred source. Thus, a deferred is returned immediately, which {{will receive a}} value when the <b>thread</b> <b>finishes.</b> Callbacks can be attached which will run in the main thread, thus alleviating the need for complex locking solutions. A prime example of such usage, which comes from Twisted's support libraries, is using this model to call into databases. The database call itself happens on a foreign thread, but {{the analysis of the}} result happens in the main thread.|$|R
50|$|Thread {{synchronization}} {{is defined}} as a mechanism which ensures that two or more concurrent processes or threads do not simultaneously execute some particular program segment known as critical section. Processes' access to critical section is controlled by using synchronization techniques. When one thread starts executing the critical section (serialized segment of the program) the other thread should wait until the first <b>thread</b> <b>finishes.</b> If proper synchronization techniques are not applied, it may cause a race condition where the values of variables may be unpredictable and vary depending on the timings of context switches of the processes or threads.|$|R
40|$|The most {{successful}} parallel SAT and MaxSAT solvers follow a portfolio approach, where each thread applies a different algorithm (or the same algorithm configured differently) {{to solve a}} given problem instance. The main goal of building a portfolio is to diversify the search process being carried out by each thread. As soon as one <b>thread</b> <b>finishes,</b> the instance can be deemed solved. In this paper we present a new open source distributed solver for MaxSAT solving that addresses two issues commonly found in multicore parallel solvers, namely memory contention and scalability. Preliminary results show that our non-portfolio distributed MaxSAT solver outperforms its sequential version {{and is able to}} solve more instances as the number of processes increases...|$|R
5000|$|Finally, the gouged {{pieces of}} cane soaked and [...] "shaped" [...] on a shaper with razor blades {{and allowed to}} dry before the final steps. The shaped piece of cane is then re-soaked and tied onto a [...] "staple" [...] for oboe reeds and formed on a mandrel for bassoon reeds. Bassoon reeds are wrapped with nylon thread or cotton thread, {{depending}} on the musician's preference. Oboe reeds are most commonly tied with nylon <b>thread.</b> <b>Finishing</b> both bassoon and oboe reeds requires the reed-maker to scrape along the cane section of the reed with a scraping knife to specific dimensions and lengths depending on the reed style and the musician's preference. Bassoon and oboe reeds are finished when the reeds play in tune or can make a sufficient [...] "crow"-like noise.|$|R
50|$|He {{began the}} 2007-2008 season, with {{connections}} dreaming of the Cheltenham Gold Cup and started {{off in the}} 2007 Betfair Chase, where {{he was unable to}} trouble the odds on favourite Kauto Star and eventually finished 5th. Connections, however, were not too disheartened and were sure their gelding would come on for the run when he contested the Grade 1 King George VI Chase at Cheltenham. He was sent off 13/2 3rd favourite behind odds on favourite Kauto Star and Exotic Dancer. But he never managed to get into the race and was eventually pulled up. Alan King then reverted him back to hurdles {{for the remainder of the}} season, but My Way De Solzen was still unable to regain the winning <b>thread,</b> <b>finishing</b> 2nd in the National Spirit Hurdle, and 5th and 6th respectively in the World Hurdle at Cheltenham in March and the Aintree Hurdle in April.|$|R
50|$|Indeed, {{there are}} many corollaries to Godwin's law, some {{considered}} more canonical (by being adopted by Godwin himself) than others. For example, there is a tradition in many newsgroups and other Internet discussion forums that once such a comparison is made, the <b>thread</b> is <b>finished</b> and whoever mentioned Hitler has automatically lost whatever debate was in progress. This principle is itself frequently referred to as Godwin's law.|$|R
40|$|Protein {{structure}} {{prediction is}} a challenging optimisation {{problem to the}} computer scientists. A large number of existing single-point search algorithms attempt {{to solve the problem}} by exploring possible structures and finding the one with the minimum free energy. However, these algorithms perform poorly on large sized proteins due to an astronomically wide search space. In this paper, we present a multi-point local search framework that uses parallel processing techniques to expedite exploration by starting from different points. In our approach, a set of random initial solutions are generated and distributed to different threads. We allow each thread to run for a pre-defined period of time. The improved solutions are stored thread-wise. When the <b>threads</b> <b>finish,</b> the solutions are merged together and the duplicates are removed. A selected distinct set of solutions are then split to different threads again. We tested our approach on large sized proteins for simplified models. The experimental results show that our new parallel framework significantly improves over the results obtained by the state-of-the-art single-point search approaches for the hydrophobic-polar energy model and the three dimensional face-centred-cubic lattice. Griffith Sciences, School of Information and Communication TechnologyNo Full Tex...|$|R
5000|$|When James V {{moved around}} Scotland the tapissiers or 'tapestry men' packed up the {{tapestries}} {{and set them}} up at his destination, and carried out running repairs. George Steill bound up twelve scenes of the History of Aeneas with cords and carried them from Edinburgh to St Andrews in May 1539 for the marriage of Joanna Gresmore to the Laird of Creich. Eight pieces of tapestry were specially repaired for the coronation of Mary of Guise in January 1540, and others were often relined with new canvas. Jacques Habet, William Edbe and George Steill lined the rough or newly plastered walls of the castle at Crawfordjohn to save wear on tapestries in July 1541. Apart from this work, the men also made up and embroidered state beds with luxury imported silks and taffetas with hanks of gold <b>thread,</b> <b>finished</b> with passementerie and ostrich feather trimmings. Guillaume, hired in France in 1538, Habet, and the embroiderer Robinet, were doubtless Frenchmen, but William Edbe was Scottish. Habet {{may have been the}} [...] "Jacques Hebert" [...] later hired by the Parisian master weaver Girard Laurens in 1564.|$|R
5000|$|Buttonhole {{stitches}} catch a loop of {{the thread}} {{on the surface}} of the fabric and needle is returned to the back of the fabric at a right angle to the original start of the <b>thread.</b> The <b>finished</b> stitch in some ways resembles a letter [...] "L" [...] depending on the spacing of the stitches. For buttonholes the stitches are tightly packed together and for blanket edges they are more spaced out. The properties of this stitch make it ideal for preventing raveling of woven fabric.|$|R
40|$|Protein {{structure}} {{prediction is}} computationally a very challenging problem. A {{large number of}} existing search algorithms attempt {{to solve the problem}} by exploring possible structures and finding the one with the minimum free energy. However, these algorithms perform poorly on large sized proteins due to an astronomically wide search space. In this paper, we present a multipoint spiral search framework that uses parallel processing techniques to expedite exploration by starting from different points. In our approach, a set of random initial solutions are generated and distributed to different threads. We allow each thread to run for a predefined period of time. The improved solutions are stored threadwise. When the <b>threads</b> <b>finish,</b> the solutions are merged together and the duplicates are removed. A selected distinct set of solutions are then split to different threads again. In our ab initio protein structure prediction method, we use the three-dimensional face-centred-cubic lattice for structure-backbone mapping. We use both the low resolution hydrophobic-polar energy model and the high-resolution 20 × 20 energy model for search guiding. The experimental results show that our new parallel framework significantly improves the results obtained by the state-of-the-art single-point search approaches for both energy models on three-dimensional face-centred-cubic lattice. We also experimentally show the effectiveness of mixing energy models within parallel threads...|$|R
5000|$|Even after a {{condition}} variable {{appears to have}} been signaled from a waiting thread's point of view, the condition that was awaited may still be false. One of the reasons for this is a spurious wakeup; that is, a thread might be awoken from its waiting state even though no thread signaled the condition variable. For correctness it is necessary, then, to verify that the condition is indeed true after the <b>thread</b> has <b>finished</b> waiting. Because spurious wakeup can happen repeatedly, this is achieved by waiting inside a loop that terminates when the condition is true, for example: ...|$|R
50|$|A denier weight {{specification}} states {{how many}} grams 9,000 meters of the thread weighs. Unlike {{the common thread}} weight system, the greater the denier number, the thicker the thread. The denier weight system, like the common weight system, also specifies the number of strands of the specified weight which were wrapped together to make the <b>finished</b> <b>thread.</b>|$|R
40|$|Copyright © 2014 Mahmood A. Rashid et al. This is an {{open access}} article {{distributed}} under the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. Protein structure prediction is computationally a very challenging problem. A large number of existing search algorithms attempt {{to solve the problem}} by exploring possible structures and finding the one with theminimum free energy. However, these algorithms perform poorly on large sized proteins due to an astronomically wide search space. In this paper, we present a multipoint spiral search framework that uses parallel processing techniques to expedite exploration by starting fromdifferent points. In our approach, a set of random initial solutions are generated and distributed to different threads. We allow each thread to run for a predefined period of time. The improved solutions are stored threadwise. When the <b>threads</b> <b>finish,</b> the solutions are merged together and the duplicates are removed. A selected distinct set of solutions are then split to different threads again. In our ab initio protein structure prediction method, we use the three-dimensional face-centred-cubic lattice for structure-backbone mapping. We use both the low resolution hydrophobic-polar energy model and the high-resolution 20 × 20 energy model for search guiding. The experimental results show that our new parallel framework significantly improves the results obtained by the state-of-the-art single-point search approaches for both energy models on three-dimensional face-centred-cubic lattice. We also experimentally show the effectivenes...|$|R
40|$|This paper {{discusses}} {{an approach}} to avoid incorrect results in the execution of automatic tests of multi-threaded systems. We argue that such incorrect results have two main sources. First, it is typically difficult to determine when all <b>threads</b> have <b>finished</b> processing and thus when {{it is safe to}} perform the test assertions. Second, background threads can change the system state while assertions are being performed, thus producing non-deterministic results. The main contributions of this work are: (i) a generic approach that ensures that test assertions are performed in a safe moment; (ii) implementation details of such an approach using Aspect-Oriented Programming (AOP); and (iii) an evaluation of the proposed approach. 1...|$|R
30|$|In addition, the Fork/Join {{framework}} {{employs a}} “work stealing” technology {{to enhance the}} thread usage efficiency. The so-called “work stealing” occurs when a <b>thread</b> has already <b>finished</b> executing all tasks in its own task queue, and it attempts to steal tasks from other runners, so that all threads are kept in working state {{as far as possible}} with less task queue contention.|$|R
5000|$|Thread block-based CAWS (criticality aware warp scheduling) - The {{emphasis}} of this scheduling policy is on improving the execution {{time of the}} thread blocks. It allocated more time resources to the warp that shall take the longest time to execute. By giving priority to the most critical warp, this policy allows <b>thread</b> blocks to <b>finish</b> faster, such that the resources become available quicker.|$|R
60|$|The {{dressmaker}} {{was delighted}} with the thread that was given her. It matched the stuffs so perfectly, and never tied itself in knots, or broke perpetually, as most <b>thread</b> did. She <b>finished</b> her work much quicker than she expected and the bride said {{she was to be}} sure to come to the church and see her in her wedding dress.|$|R
50|$|Yarn {{is a long}} {{continuous}} {{length of}} interlocked fibres, suitable {{for use in the}} production of textiles, sewing, crocheting, knitting, weaving, embroidery, and ropemaking. Thread is a type of yarn intended for sewing by hand or machine. Modern manufactured sewing <b>threads</b> may be <b>finished</b> with wax or other lubricants to withstand the stresses involved in sewing. Embroidery threads are yarns specifically designed for hand or machine embroidery.|$|R
40|$|Fork/Join is a {{framework}} for parallelizing calculations using recursive decomposition, also called divide and conquer. These algorithms occasionally end up duplicating work, especially {{at the beginning of}} the run. We can reduce wasted CPU cycles by implementing a reserved caching scheme. Before a task starts its calculation, it tries to reserve an entry in the shared map. If it is successful, it immediately begins. If not, it blocks until the other <b>thread</b> has <b>finished</b> its calculation. Unfortunately this might result in a significant number of blocked threads, decreasing CPU utilization. In this talk we will demonstrate this issue and offer a solution in the form of the ManagedBlocker. Combined with the Fork/Join, it can keep parallelism at the desired level...|$|R
50|$|In a hut hidden {{deep in a}} forest, three {{beautiful}} maidens spend each waking moment weaving gold flax into yarn. A cruel {{older woman}} supervises them, collecting every <b>finished</b> <b>thread.</b> She leaves them only for short journeys - always leaving a full slate of work along with the warning to keep their eyes on their work, and to speak to no man; otherwise the gold will lose its shine and great misfortunes will follow.|$|R
6000|$|The {{first edition}} of [...] "Tully's Tripoli" [...] is {{entitled}} Narrative of a Ten Years' Residence in Tripoli In Africa: From the original correspondence {{in the possession of}} the Family of the late Richard Tully, Esq., the British Consul, 1816, 410. The book {{is in the form of}} letters (so says the Preface) written by the Consul's sister. The description of Haidée's dress is taken from the account of a visit to Lilla Kebbiera, the wife of the Bashaw (p. 30); the description of the furniture and refreshments from the account of a visit to [...] "Lilla Amnani," [...] Hadgi Abderrahmam's Greek wife (pp. 132-137). It is evident that the [...] "Chiel" [...] who took these [...] "notes" [...] was the Consul's sister, not the Consul: [...] "Lilla Aisha, the Bey's wife, is thought to be very sensible, though rather haughty. Her apartments were grand, and herself superbly habited. Her chemise was covered with gold embroidery at the neck; over it she wore a gold and silver tissue jileck, or jacket without sleeves, and over that another of purple velvet richly laced with gold, with coral and pearl buttons set quite close together down the front; it had short sleeves finished with a gold band not far below the shoulder, and discovered a wide loose chemise of transparent gauze, with gold, silver, and ribband strips. She wore round her ancles ... a sort of fetter made of a thick bar of gold so fine that they bound it round the leg with one hand; it is an inch and a half wide, and as much in thickness: each of these weighs four pounds. Just above this a band three inches wide of gold <b>thread</b> <b>finished</b> the ends of a pair of trousers made of pale yellow and white silk." ...|$|R
5000|$|Buttonhole or blanket {{stitches}} also catch a loop of {{the thread}} {{on the surface}} of the fabric but the principal difference is that the needle does not return to the original hole to pass back to the back of the fabric. In the classic buttonhole stitch, the needle is returned to the back of the fabric at a right angle to the original start of the <b>thread.</b> The <b>finished</b> stitch in some ways resembles a letter [...] "L" [...] depending on the spacing of the stitches. For buttonholes the stitches are tightly packed together and for blanket edges they are more spaced out. The properties of this stitch make it ideal for preventing raveling of woven fabric. This stitch is also the basis for many forms of needle lace. Examples of buttonhole or blanket stitches.|$|R
5000|$|Specification 5C3 of the American Petroleum Institute standardizes 14 casing sizes from 4.5 in to 20 in outside {{diameter}} ("OD"). This and related API documents also promulgate {{standards for the}} <b>threaded</b> end <b>finish,</b> the wall thickness (several are available in each size to satisfy various design parameters, and in fact are indirectly specified by standardized nominal weights per linear foot; thicker pipe obviously being heavier), and the strength and certain chemical characteristics of the steel material. Several material strengths—termed [...] "Grades" [...] and ranging from [...] to [...] minimum yield strength—are available for most combinations of OD and wall thickness to meet various design needs. Finally, the API publications provide performance minimums for longitudinal strength ("joint strength") as well as resistance to internal (bursting) and external (collapsing) pressure differentials.|$|R
50|$|The Barmen {{machine has}} its {{spindles}} {{arranged in a}} circle, each one carrying a large bobbin of thread. These can pass each other, so their threads twine together in a complex way. The threads run towards the centre, where the finished lace appears, rising upwards. The machine can only make one width at a time, and has a maximum width of about 120 threads. The lace is made as a cylinder. When <b>finished,</b> <b>threads</b> are removed to allow the flat strip to appear.|$|R
5000|$|During the 2011 {{year the}} band {{was working on the}} {{upcoming}} debut album. 11 tracks were planned initially to be put on CD and the topics of nobility, generosity, fortitude, lust for life, plus a few oddities and self-irony had to run through it like a red <b>thread.</b> After almost <b>finished</b> work on the music side of the album {{at the end of the}} 2011 {{the band was}} seeking for a [...] "true artist" [...] who would draw its artwork.|$|R
40|$|The recent {{discovery}} {{of a new kind}} of thermo-Active coiled polymeric wires has opened new perspectives for the implementation of a novel class of actuators that can be easily and effectively manufactured using low-cost materials such as sewing <b>threads</b> or <b>finishing</b> lines. These new devices feature large displacements in response to temperature variations and show very promising performance in terms of energy and power densities. With the aim of providing information and data useful for the future engineering applications of polymeric coiled actuators, a custom experimental test-bench and procedure have been developed and employed to characterise their thermo-mechanical response. Such a test-bench has been designed to run isothermal and isometric tensile tests on a set of sample actuators that are fabricated with a repeatable process. This paper provides technical details on the manufacturing process of such sample actuators and on the design and operation of the test-bench. Preliminary experimental results are finally reported...|$|R
40|$|This {{project is}} focused on {{redesign}} the current model of shearing testing instrument {{and it is also}} used for testing the shear in sandwich constructions in order of driving the need for efficient, sale cost effective and stability of sandwich core upon the shear loading. The device consists of two main components; a stationary upper platform and a lower platform that contains a base as stage. The principle of operation is that the tissue samples are affixed to both the upper and lower platforms using a thin layer of superglue then bathed in an appropriate physiological solution. The lower platform is moved relative to the fixed upper platform using the base stage in order to applied load. The test is performed by clamping a test specimens attached in a 20 millimeters width specimen between two metal fixtures. An upper punch is then forced through the base in the metal fixture causing shear {{along the edge of the}} facing. A universal testing machine is used to push the punch until shearing of the specimen occurs. The manufacturing process included in this project is cutting of material, machining, drilling, <b>threading</b> and <b>finishing...</b>|$|R
50|$|The {{most common}} weight system {{specifies}} {{the length of}} the thread in kilometres required to weigh 1 kilogram. Therefore, a greater weight number (indicated in the American standard by the abbreviation wt) indicates a thinner, finer thread. The American standard of thread weight was adopted from the Gunze Count standard of Japan which uses two numbers separated by a forward slash. The first number corresponds to the wt number of the thread and the second number indicates how many strands of fiber were used to compose the <b>finished</b> <b>thread.</b> It is common to wrap three strands of the same weight to make one thread, though this is not a formal requirement in the US standard (which is therefore less informative).|$|R
40|$|This paper motivates and {{presents}} a program logic for reasoning about multithreaded Java-like programs with concurrency primitives such as dynamic thread creation, thread joining and reentrant object monitors. The logic {{is based on}} concurrent separation logic. It is the first detailed adaptation of concurrent separation logic to a multithreaded Java-like language. The program logic associates a unique static access permission with each heap location, ensuring exclusive write accesses and ruling out data races. Concurrent reads are supported through fractional permissions. Permissions can be transferred between threads upon thread starting, thread joining, initial monitor entrancies and final monitor exits. This paper presents the basic principles to reason about thread creation and <b>thread</b> joining. It <b>finishes</b> with an outlook how this logic will evolve into a full-fledged verification technique for Java (and possibly other multithreaded languages) ...|$|R
40|$|The elastic yarns and fabrics {{are gaining}} {{popularity}} in {{last few years}} {{all over the world}} because of their wearing comfort and functionality. The elastane ratio and the subsequent finishing processes influence the fabric mechanical properties and hence performance during sewing. In this paper an attempt has been made to investigate the effect of Lycra percentage, type of sewing <b>thread</b> and silicone <b>finish</b> on sewability of denim fabrics. The seam efficiency was found to be increased with Lycra percentage, while the seam pucker and needle damage were affected by the weights of the fabric rather than the Lycra percentage. The seam slippage does not show any trend with either of the Lycra percentage or fabric weight. The use of silicone finish reduces the seam efficiency, seam pucker and needle damage while the seam slippage is increased. The use of cores pun thread though helps to achieve higher seam efficiency; the seam pucker, seam slippage and needle damage is increased...|$|R
40|$|The {{strength}} retention {{after exposure}} to elevated tem-perature in air of continuous filament and staple spun PPTA sewing thread and the precursor yarns was determined. For both types, {{the process of}} converting the greige yarn to thread reduced the amount of strength retained after thermal exposure. The continu-ous filament products retained more strength than the staple products. The data was fitted to a kinetic rate model in which two strength loss processes occurred. The first process occurred within about the first 5 minutes of thermal exposure and is hypothesized to be hydrolytic degradation. The estimated secondary degradation process activation energy suggests this to be thermo-oxidative degradation. Optical microscopy of filaments indicates {{a higher level of}} kink banding and other damage in continuous filament versus sta-ple products and in <b>finished</b> <b>thread</b> versus the precur-sor yarns. The kink bands and damage are believed to be caused by the staple manufacturing process and the downstream processing of precursor yarn to fin-ished sewing thread. The kink bands and damage are hypothesized to be responsible for the differences in strength retention...|$|R
