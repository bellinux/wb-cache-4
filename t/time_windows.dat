3522|6828|Public
5|$|In the episode, the Doctoran alien time-traveller {{played by}} David Tennantand his {{companion}} Rose Tyler (Billie Piper) and Mickey Smith (Noel Clarke) find <b>time</b> <b>windows</b> on a 51st-century spaceship leading to 18th-century France {{and a group}} of clockwork androids using them to stalk Madame de Pompadour throughout her life.|$|E
5|$|The {{product was}} {{released}} to manufacturing on August 1, 2012 and became generally available on September 4, 2012. However, not all editions of Windows Server 2012 were released {{at the same}} <b>time.</b> <b>Windows</b> Server 2012 Essentials was released to manufacturing on October 9, 2012 and was made generally available on November 1, 2012. As of September 23, 2012, all students subscribed to DreamSpark program can download Windows Server 2012 Standard or Datacenter free of charge.|$|E
5|$|The {{homogeneous}} Poisson {{process can}} be defined and generalized in different ways. It can be defined such that its index set is the real line, and this stochastic process is also called the stationary Poisson process. If the parameter constant of the Poisson process is replaced with some non-negative integrable function of , the resulting process is called an inhomogeneous or nonhomogeneous Poisson process, where the average density of points of the process is no longer constant. Serving as a fundamental process in queueing theory, the Poisson process is an important process for mathematical models, where it finds applications for models of events randomly occurring in certain <b>time</b> <b>windows.</b>|$|E
40|$|Abstract: Vehicle routing {{problem is}} a kind of common problem in {{logistics}} distribution center, in order to solve the high delivery cost of VRP and time constraint problem, the VRP model with the object level and constraints by semi-soft <b>time</b> <b>window</b> is built. Aiming to the semi-soft <b>time</b> <b>window</b> constraints the optimization of the model is discussed. Finally the numerical examples prove the superiority of the semi-soft <b>time</b> <b>window</b> constraints than other types of <b>time</b> <b>window...</b>|$|R
30|$|Ideally, {{in order}} to detect all the contact of the vessels, the time {{interval}} of the data should be 1 s. Due to the data storage pressure and the devices’ communication capability, the data collection of trajectories is always in sparse granularity. Researchers use sliding <b>time</b> <b>window</b> algorithm {{to deal with the}} data sparseness problem. The algorithm assumes that there is a <b>time</b> <b>window</b> sliding on the timeline. The objects in the <b>time</b> <b>window</b> are checked with each other to detect whether other objects are in their communication range. Then, they make the <b>time</b> <b>window</b> slide forward {{to the end of the}} timeline. If a large <b>time</b> <b>window</b> is selected, the algorithm may detect some false contacts which do not exist. If a small <b>time</b> <b>window</b> is selected, the algorithm may ignore some real contacts which exist [16].|$|R
30|$|The task <b>time</b> <b>window</b> and imaging <b>time</b> <b>window</b> {{exist at}} the same time, so the new problem {{is a lot more}} {{complicated}} than the general scheduling problem.|$|R
5|$|Back on the ship, the Doctor and {{his companions}} find several {{additional}} <b>time</b> <b>windows</b> and learn that each leads to a different moment in Madame de Pompadour's life. In one of them, the Doctor sees another clockwork creature menacing her and steps through the window to defend her. The Doctor tells Reinette to give the android orders, and it obeys her. It tells her {{that it is a}} repair android and that their spaceship was damaged in an ion storm. The androids did not have the parts necessary to repair the ship and killed the crew to use their organs for parts. The androids need one last part; Reinette's brain. Confused, the Doctor creates a telepathic link with Reinette, but is startled to find that she can also see into his mind. The androids capture Rose and Mickey and are about to harvest them for parts when the Doctor rescues them. The Doctor discovers that the androids plan to open a time window to Reinette's life at the age of 37, believing that her brain at that age will be compatible with the ship's systems. The clockwork androids appear at a costume ball and take Reinette and her guests hostage. At one end of the room is an enormous mirror, which is actually a time window. The Doctor {{and his companions}} can see through it, but they cannot enter without smashing the window and breaking the connection as the androids locked it after the Doctor's previous interruptions.|$|E
5|$|The androids {{threaten}} to decapitate Reinette, but the Doctor on Arthur crashes through {{the mirror to}} save her. The androids give up and shut down when the Doctor tells them that they now cannot return to their ship to finish the repairs. Reinette tells the Doctor that she had her fireplace moved to Versailles {{in the hope that}} he would return. The Doctor finds that the fireplace is still an operating time window and uses it to return to the spaceship. He tells Reinette to pack a bag and prepare to leave. The Doctor returns to the fireplace seconds later but discovers that seven years have passed in Reinette's time. King Louis XV finds the Doctor, tells him that Reinette has died and gives him a letter in which Reinette expresses her hopes for the Doctor's quick return and confesses her love for him. The Doctor returns to the TARDIS and watches the <b>time</b> <b>windows</b> close before leaving the ship. The TARDIS crew muse about the reasons the androids wanted Madame de Pompadour's brain to complete their repairs, and the Doctor conjectures that the ship's memory banks were damaged by the ion storm. When the TARDIS dematerializes, a portrait can be seen stating the birth and death date of Madame de Pompadour. As the episode ends, the lifeless ship drifts through space; its name is SS Madame de Pompadour.|$|E
25|$|The h-index can be {{timed to}} analyze its {{evolution}} during one's career, employing different <b>time</b> <b>windows.</b>|$|E
3000|$|...]: Soft <b>time</b> <b>window</b> {{of client}} i, where ta is the upper bound of the <b>time</b> <b>window</b> and tb is the lower bound {{of the time}} window; [...]...|$|R
3000|$|...]: The hard <b>time</b> <b>window</b> of {{customer}} i, where ta′ is the upper bound of the <b>time</b> <b>window</b> and tb′ is the lower bound {{of the time}} window; [...]...|$|R
30|$|In this pig trade network, {{the farms}} {{illustrate}} the nodes {{of the network}} and the trade contacts between the farms represent the edges. Networks with increasing <b>time</b> <b>window</b> lengths (1 – 548  days) were constructed in order to evaluate how the chosen <b>time</b> <b>window</b> length may affect {{the outcome of the}} temporal correlation coefficient. This means that for a <b>time</b> <b>window</b> length of 1  day 1096 single snapshots of the network were created. If the <b>time</b> <b>window</b> length is doubled to 2  days, the number of snapshots halves to 548. And finally for a <b>time</b> <b>window</b> length of 548  days, only 2 single snapshots were generated. Due to the predefined length of the observation window with 1096  days, the last snapshot may contain less days than the previous snapshots. This was the case if the length of the <b>time</b> <b>window</b> was not a proper divisor of 1096 which corresponds to the length of the whole observation period. These incomplete snapshots were excluded from the further analysis.|$|R
25|$|To {{ensure that}} it {{automatically}} runs every <b>time</b> <b>Windows</b> starts, it drops a copy of itself or its EXE component using a random file name into the %APPDATA% folder.|$|E
25|$|The {{time periods}} between such devastating {{environmental}} events give <b>time</b> <b>windows</b> for the possible {{origin of life}} in the early environments. If the deep marine hydrothermal setting was the site for the origin of life, then abiogenesis could have happened as early as 4.0 to 4.2Ga. If the site was at the surface of the Earth, abiogenesis could only have occurred between 3.7 and 4.0Ga.|$|E
25|$|Neuronal spiking is {{generally}} considered the basis for information transfer in the brain. For such a transfer, information needs to be coded in a spiking pattern. Different types of coding schemes have been proposed, such as rate coding and temporal coding. Neural oscillations could create periodic <b>time</b> <b>windows</b> in which input spikes have larger effect on neurons, thereby providing a mechanism for decoding temporal codes.|$|E
30|$|In this study, {{we propose}} a new {{approach}} to improve the accuracy of the PCA, which estimates the back-azimuth by introducing a variable-length <b>time</b> <b>window</b> instead of the conventional fixed-length <b>time</b> <b>window.</b>|$|R
30|$|Finally, the {{percentage}} of customers selecting a delivery <b>time</b> <b>window</b> influences the results significantly. The additional costs are on average 10 %, 15 %, 21 % and 25 % for respectively 25, 50, 75 and 100 % of the customers choosing a delivery <b>time</b> <b>window.</b> The more customers select a <b>time</b> <b>window,</b> the more restrictions there are on the I-OP-VRP resulting in higher costs.|$|R
30|$|Formula: f 0 is {{the sample}} {{sampling}} frequency, TP 80 is the calculated <b>time</b> <b>window</b> size of P 80, and np is the unit <b>time</b> <b>window</b> {{the degree of}} eye closure exceeds 80 % <b>times.</b> Sliding <b>time</b> <b>window</b> is used to fuse the two feature data, and KNN classification method is used to build a fatigue driving detection model to judge the fatigue of the test samples.|$|R
25|$|In Division 1, {{groups have}} six teams (meaning more matches {{and thus more}} travel), a {{significant}} fraction of the players {{are assumed to be}} professional or semi-professional (meaning that fixtures are, as often as possible, scheduled within the IRB's international fixtures <b>time</b> <b>windows</b> when clubs must release players for national duty), and only one team is promoted and one relegated every two years (meaning that the competitions are more stable).|$|E
25|$|When a user inserts a CD-ROM into a {{drive or}} {{attaches}} a USB camera, Windows detects the arrival and starts {{a process of}} examining the device or searching the medium. It is looking for properties of the device or content on the medium so that AutoPlay can present a set of meaningful options to the user. When the user makes a particular choice, they also {{have the option to}} make that selection automatic the next <b>time</b> <b>Windows</b> sees that content or device.|$|E
25|$|The {{light green}} area in Fig. 5 {{indicates}} those neural maps and processing modules, which process a syllable {{as a whole}} unit (specific processing time window around 100ms and more). This processing comprises the phonetic map and the directly connected sensory state maps within the sensory-phonetic processing modules and the directly connected motor plan state map, while the primary motor map {{as well as the}} (primary) auditory and (primary) somatosensory map process smaller <b>time</b> <b>windows</b> (around 10ms in the ACT model).|$|E
3000|$|In this article, we {{consider}} allocation of downlink power and subcarriers in orthogonal frequency division multiplexing (OFDM) 4 G cellular systems for semi-elastic applications. The user’s satisfaction is modeled by a sigmoid {{function of the}} average rate over a <b>time</b> <b>window.</b> The {{goal is to create}} algorithms that allocate power and subcarriers in each time slot in a manner that optimizes total average user utility over time. The difficulty with maximizing utility over many time slots is that the system should consider both the current channel and the likely achievable average rates {{by the end of the}} <b>time</b> <b>window.</b> For instance, if a user’s channel is poor at the beginning of a <b>time</b> <b>window,</b> should the system allocate resources for this user or should it wait to see if the user’s channel improves later in the <b>time</b> <b>window?</b> If a user’s accumulated rate in a <b>time</b> <b>window</b> is low, when should the system respond by increasing the user’s resource allocation and when should the system give up on the user’s performance in this <b>time</b> <b>window</b> and allocate resources to other users? [...]...|$|R
50|$|Using {{a moving}} average method, in a <b>time</b> <b>window</b> that slides forward, the client counts the total bytes being {{transmitted}} and received, and divides the sums by the <b>time</b> <b>window</b> size to get connection download/upload rates.|$|R
30|$|We {{propose to}} model a user’s utility as a sigmoid {{function}} over {{the average rate}} over a <b>time</b> <b>window.</b> Both {{the choice of a}} sigmoid function and of an average rate over a <b>time</b> <b>window</b> deserve discussion.|$|R
25|$|The TSP {{has several}} {{applications}} {{even in its}} purest formulation, such as planning, logistics, and the manufacture of microchips. Slightly modified, it appears as a sub-problem in many areas, such as DNA sequencing. In these applications, the concept city represents, for example, customers, soldering points, or DNA fragments, and the concept distance represents travelling times or cost, or a similarity measure between DNA fragments. The TSP also appears in astronomy, as astronomers observing many sources will want to minimize the time spent moving the telescope between the sources. In many applications, additional constraints such as limited resources or <b>time</b> <b>windows</b> may be imposed.|$|E
25|$|Median power {{frequency}} {{is often used}} {{as a way to}} track fatigue using EMG. Using the median {{power frequency}}, raw EMG data is filtered to reduce noise and then relevant <b>time</b> <b>windows</b> are Fourier Transformed. In the case of fatigue in a 30-second isometric contraction, the first window may be the first second, the second window might be at second 15, and the third window could be the last second of contraction (at second 30). Each window of data is analyzed and the median power frequency is found. Generally, the median power frequency decreases over time, demonstrating fatigue. Some reasons why fatigue is found are due to action potentials of motor units having a similar pattern of repolarization, fast motor units activating and then quickly deactivating while slower motor units remain, and conduction velocities of the nervous system decreasing over time.|$|E
500|$|Gartner {{research}} {{data showed that}} while the total smartphone industry grew 27% between 2008 and 2009, Windows Mobile's share of the smartphone market fell 2.7% in that same period. [...] It also decreased by 20% in Q3 2009. [...] At one <b>time</b> <b>Windows</b> Mobile {{was the most popular}} handset for business use, but by 2009 this was no longer the case; 24% of planned business deployments of mobile application were for Windows Mobile, putting it in 3rd place, behind Blackberry (61%) and iPhone (27%); ...|$|E
40|$|In {{this thesis}} a {{heuristic}} decomposition approach for the multi-stage capacitated lot-sizing problem is developed. This problem {{is an important}} problem for production planning as it determines lot-sizes and lays the foundation for subsequent processes as detailed scheduling and material requirements planning. It is also well-known to be NP-hard. The proposed approach decomposes the mathematical model of the problem into subproblems. Each subproblem is characterised by a <b>time</b> <b>window.</b> Within this <b>time</b> <b>window</b> the setup variables are binary as in the original problem. The <b>time</b> <b>window</b> rolls over the planning horizon. If the <b>time</b> <b>window</b> rolls forward, variables before the <b>time</b> <b>window</b> are fixed to the values obtained in previously solved subproblems, whereas variables after the <b>time</b> <b>window</b> are relaxed. If the <b>time</b> <b>window</b> rolls backward, the opposite applies to the variables outside the <b>time</b> <b>window.</b> For problems without setup times this procedure with either forward or backward rolling <b>time</b> <b>window</b> guarantees a feasible {{solution to the problem}} at hand. The solution quality of this approach can be increased by adding valid inequalities for the whole problem to each sub-problem. (l,S) - and Mixed-Integer-Rounding-Inequalities, which are well-known from literature, have proven to be especially successful. Also, restrictions on the minimum number of setups or capacity excess constraints can tighten the problem formulation. In problems with setup times the capacity consumption is underestimated due to the linearised variables. It has proven valuable to introduce correction factors to anticipate this behaviour. Different variants of this approach were tested with more than 600 well-known test instances. Solutions were found to all test instances where feasible solutions were known as well as to some previously unsolved ones. For many test instances which presently cannot be solved to optimality new best solutions were obtained with the heuristic decomposition approach...|$|R
3000|$|As {{discussed}} in the Introduction, the novel part of this maximization problem {{is the use of}} a sigmoid utility function and its dependence upon the average rate achieved over a <b>time</b> <b>window.</b> The major challenge of this problem is that power allocation in the current time slot affects not only the current rate but also the utility that may be earned {{at the end of the}} <b>time</b> <b>window.</b> The system should consider both the current channel and the likely achievable average rates by the end of the <b>time</b> <b>window.</b> For instance, suppose that it is early in the <b>time</b> <b>window</b> and a user currently faces a worse than average channel. Policies for inelastic applications would respond to a poor channel by increasing power, while policies for elastic applications would respond by allocating less power and waiting for a better channel. However, for video conferencing, utility is a function of the average rate over a <b>time</b> <b>window,</b> not of instantaneous rate, and it is a sigmoid function. Should the network allocate less than average power, figuring that later in the <b>time</b> <b>window</b> it can make up the difference? Does this depend on the auto-correlation of the channel? If late in the <b>time</b> <b>window</b> this user has experienced an average rate that places it in the convex portion of the utility function, should the network respond by increasing the transmission power? Alternatively, should the network give up on this user obtaining decent performance in this <b>time</b> <b>window,</b> and use the power to increase the utility of other users? [...]...|$|R
40|$|Abstract—In {{order to}} improve the {{prediction}} accuracy of chaotic time series, a chaotic time series forecasting method based on online weighted least squares support vector machine regression (WLS-SVM) is proposed. In this method, a sliding <b>time</b> <b>window</b> is built and data in the sliding <b>time</b> <b>window</b> are employed to construct the dynamic model of a system. The model {{of the system is}} refreshed on-line with the rolling of the <b>time</b> <b>window.</b> In order to make full use of data information, different weights are assigned to different data in the sliding <b>time</b> <b>window.</b> Online WLS-SVM prediction method is applied to predict the GDP data in macro economy. Results show that the proposed method can be realized easily and has good performance in robustness and precision in chaotic time series prediction. Index Terms—online weighted least squares support vector machine, regression, chaotic time series, forecasting, sliding <b>time</b> <b>window,</b> GDP I...|$|R
500|$|Microsoft's work on {{handheld}} {{portable devices}} began with research projects in 1990, {{with the work}} on [...] Windows CE beginning in 1992. Initially, the OS and the user interface were developed separately. With Windows CE being based on Windows 95 code and a separate team handing the user interface which was codenamed WinPad (later Microsoft At Work for Handhelds). Windows 95 had strong pen support making porting easy; with some saying [...] "At this <b>time,</b> <b>Windows</b> 95 offers outstanding pen support. It is treating pens right for the first time." [...] WinPad was delayed due to price and performance issues, before being scrapped in early 1995 due to touchscreen driver problems relating to WriteTouch technology, made by NCR Microelectronic Products. Although WinPad was never released as a consumer product, Alpha builds were released showcasing many interface elements. During development of WinPad a separate team worked on a project called Pulsar; {{designed to be a}} mobile communications version of WinPad, described as a [...] "pager on Steroids". This project was also canceled around the same time as WinPad. The two disbanded groups would form the Pegasus project in 1995. Pegasus would work on the hardware side of the Windows CE OS, attempting to create a form factor similar to a PC-esque PDA like WinPad, with communications functionality like Pulsar. A hardware reference guide was created and devices began shipping in 1996, although most of these device bore little resemblance to the goal of a pen-based touchscreen handheld device.|$|E
2500|$|Time {{dependent}} vehicle routing {{problem with}} <b>time</b> <b>windows</b> (TDVRPTW) ...|$|E
2500|$|Vehicle routing {{problem with}} <b>time</b> <b>windows</b> and {{multiple}} service workers (VRPTWMS) ...|$|E
30|$|In both designs, a {{distinction}} {{needs to be}} made between two sets of factors: general factors which affect an instance’s structure (geographical spread of the customers), and factors which only affect <b>time</b> <b>window</b> characteristics (<b>time</b> <b>window</b> width, percentage of customers selecting a preferred time slot and number of orders). For each factor level of the general factor, 30 instances are generated. The generation of these instances is further explained in section 4.2. All these instances are then solved using the integrated algorithm for different levels of the second type of factors which only affect <b>time</b> <b>window</b> characteristics. This creates dependent observations (“repeated measures”), which results in greater statistical power. However, as observations for some of the factors are no longer independent, a mixed-model ANOVA is required to analyse the main and interaction effects of the factors (with <b>time</b> <b>window</b> width, percentage of customers selecting a <b>time</b> <b>window</b> and number of orders being examples of within-subjects factors and geographical spread of customers as between-subjects factor).|$|R
3000|$|... 3 -month {{forecast}}: Same {{as for the}} 1 -day class but {{the forecast}} time-window length is 3 months. The first <b>time</b> <b>window</b> starts at midnight on 1 November 2009, the second <b>time</b> <b>window</b> starts at midnight of 1 February 2010, and so on.|$|R
50|$|The <b>Time</b> <b>Window</b> is {{the period}} {{over which the}} {{throughput}} is measured. Choice of an appropriate <b>time</b> <b>window</b> will often dominate calculations of throughput, and whether latency is taken into account or not will determine whether the latency affects the throughput or not.|$|R
