10000|10000|Public
5|$|In June 2005, ECMA {{approved}} edition 3 of the C# specification, {{and updated}} ECMA-334. Additions included partial classes, anonymous methods, nullable types, and generics (somewhat similar to C++ <b>templates).</b>|$|E
5|$|In C. elegans this {{initiation}} {{response is}} amplified through {{the synthesis of}} a population of 'secondary' siRNAs during which the dicer-produced initiating or 'primary' siRNAs are used as <b>templates.</b> These 'secondary' siRNAs are structurally distinct from dicer-produced siRNAs and appear to be produced by an RNA-dependent RNA polymerase (RdRP).|$|E
5|$|Like all C++ class <b>templates,</b> instantiations of {{standard}} library containers with different allocator arguments are distinct types. A function expecting an std::vector argument will therefore only accept a vector instantiated with the default allocator.|$|E
3000|$|... - There are {{two methods}} to {{register}} a template: <b>template</b> extraction and <b>template</b> upload. The function described in <b>Template</b> extraction from existing tenant extracts a valid <b>template</b> in an extraction case. In the other side, the <b>template</b> sharing function validates a <b>template</b> in a <b>template</b> upload case because a <b>template</b> {{described by a}} user may have format or logical errors.|$|R
5000|$|<b>Template</b> parsing: Stags (a {{specific}} FuelPHP <b>template</b> engine) and Mustache <b>template</b> {{engines are}} included; drivers for Markdown, Smarty, Twig, Haml, Jade and Dwoo <b>template</b> engines.|$|R
40|$|A {{generalized}} {{kinetic model}} for dilute radical <b>template</b> polymerizations involving preferential monomer adsorption by the <b>template</b> and following classical kinetics is described. By simulation, {{the influence of}} preferential monomer adsorption and of various rate constants pertaining to complexation, <b>template</b> propagation, and <b>template</b> termination of growing chain radicals on the rate enhancement induced by a <b>template</b> was examined {{as a function of}} <b>template</b> concentration. This model has been applied to some known <b>template</b> polymerization systems. For some of these, <b>template</b> rate constants could be estimated by curve fitting to experimentally determined polymerization rate vs <b>template</b> concentration plots...|$|R
5|$|The Unseen University Cut Out Book was {{published}} in 2006 developed with Alan Bately and Bernard Pearson. The book contains cut-out <b>templates</b> of seven of the major buildings in the Unseen University.|$|E
5|$|Because {{of their}} size, shape, and {{well-defined}} chemical structures, viruses {{have been used}} as <b>templates</b> for organising materials on the nanoscale. Recent examples include work at the Naval Research Laboratory in Washington, D.C., using Cowpea mosaic virus (CPMV) particles to amplify signals in DNA microarray based sensors. In this application, the virus particles separate the fluorescent dyes used for signalling to prevent the formation of non-fluorescent dimers that act as quenchers. Another example is the use of CPMV as a nanoscale breadboard for molecular electronics.|$|E
5|$|From facial {{measurements}} and still {{photographs of the}} human <b>templates,</b> sculpting supervisor John Brown constructed Cliff Richard, while Brian Bennett was entrusted to Christine Glanville, Hank Marvin to Terry Curtis, John Rostill to Mary Turner and Bruce Welch to Tim Cooksey. Curtis went on to sculpt Zero-X crewmembers Captain Paul Travers and Co-Pilot Greg Martin, modelling the first on 1960s James Bond actor, Sean Connery and the latter partly on himself, {{in addition to the}} Glenn Field Controller, Commander Casey.|$|E
3000|$|... are {{elements}} of fuzzy feedback MIN <b>template</b> and fuzzy feedback MAX <b>template,</b> fuzzy feed-forward MIN <b>template,</b> and fuzzy feed-forward MAX <b>template</b> in X-layer, respectively; p [...]...|$|R
40|$|Automatic <b>template</b> {{instantiation}} in DIGITAL C++ version 6. 0 {{employs a}} compile-time scheme that generates instantiation object files into a repository. This paper {{provides an overview}} of the C++ <b>template</b> facility and the <b>template</b> instantiation process, including manual and automatic instantiation techniques. It reviews the features of <b>template</b> instantiation in DIGITAL C++ and focuses on {{the development and implementation of}} automatic <b>template</b> instantiation in DIGITAL C++ version 6. 0. The <b>template</b> facility within the C++ language allows the user to provide a <b>template</b> for a class or function and then apply specific arguments to the <b>template</b> to specify a type or function. The process of applying arguments to a <b>template,</b> referred to as <b>template</b> instantiation, causes specific code to be generated to implement the functions and static data members of the instantiated <b>template</b> as needed by the program. Automatic <b>template</b> instantiation relieves the user of determining which <b>template</b> entities need to be instantiated and where they should be instantiated. In this paper, we review the C++ <b>template</b> facility and describe approaches to implementing automatic <b>template</b> instantiation. We follow that with a discussion of the facilities, rationale, and experience of the DIGITAL C++ automatic <b>template</b> instantiation support. We then describe the design of the DIGITAL C++ version 6. 0 automatic <b>template</b> instantiation facility and indicate areas to be explored for further improvement. C++ <b>Template</b> Facility The C++ language provides a <b>template</b> facility that allows the user to create a family of classes or functions that are parameterized by type. 1, 2 For example, a user may provide a Stack <b>template,</b> which defines a stack class for its argument type. Consider the following <b>template</b> declaration: <b>template</b> class Stack { T *top_of_stack; public: void push (T arg); void pop (T & arg); The act of applying the arguments to the <b>template</b> is referred to as <b>template</b> instantiation. An instantiation of a <b>template</b> creates a new type or function that is defined for the specified types. Stack creates a class that provides a stack of the type int. Stack creates a class that provides a stack of user_class. The types int and user_class are the arguments for the <b>template</b> Stack...|$|R
30|$|The <b>Template</b> module {{defines the}} <template> element and its attributes. More than one <b>template</b> may be {{specified}} in a TAL document. A <template> {{must have the}} id attribute. The extends attribute can be used if the <b>template</b> extends another <b>template,</b> referenced by this attribute value. In this case, the <b>template</b> inherits the vocabulary, constraints, resources, and relationships defined in the extended <b>template.</b>|$|R
5|$|Pokémon Channel was {{developed}} by Nintendo subsidiary Ambrella and published by Nintendo and The Pokémon Company. It was created both {{to serve as a}} spiritual successor to Hey You, Pikachu!—a similar digital pet-type game wherein the player plays with a Pikachu—and to promote the Nintendo e-Reader peripheral device. The game included three e-Reader-compatible cards, but not the e-Reader device itself. When scanned, the cards upload new <b>templates</b> for the player to paint and for Smeargle to critique.|$|E
5|$|With the {{introduction}} of <b>templates</b> into the C++ programming language, {{and the advent of}} generic programming techniques pioneered by the Standard Template Library, the need for a mechanism for obtaining the type of an expression, commonly referred to as typeof, was recognized. In generic programming, it is often difficult or impossible to express types that depend on template parameters, in particular the return type of function template instantiations.|$|E
5|$|Approximately 50 {{people work}} {{together}} in animating and producing an episode of SpongeBob SquarePants. Throughout its run, production of the series has been handled domestically at Nickelodeon Animation Studio in Burbank, California, while the finished animation has been created overseas at Rough Draft Studios in South Korea. Storyboarding for each episode {{is done by the}} crew in California. The storyboards are then used as <b>templates</b> by the crew in Korea, who animate by hand, color cels on computers, and paint backgrounds. Episodes are finished in California, where they are edited and have music added. Every season, character designs are updated or modified to solve technical issues in the animation.|$|E
3000|$|After {{receiving}} the cancelable <b>template</b> {{of the counter}} partner, receiving party merges his own cancelable <b>template</b> with the received cancelable <b>template.</b> Say, sender has its own cancelable <b>template</b> T [...]...|$|R
5000|$|<b>Templating</b> (using {{a native}} <b>template</b> engine {{although}} other <b>templating</b> engines can be used, such as jquery.tmpl) ...|$|R
30|$|Rate of <b>template</b> copying chemistry: {{chemical}} <b>template</b> copying {{occurs on}} the same timescale as <b>template</b> and substrate degradation.|$|R
5|$|CASS4 (Crk {{associated}} substrate 4) is {{the fourth}} and last described member of the CAS protein family. CASS4 was detected by Singh et al. in 2008 following in silico screening of databases describing expressed sequence tags from an evolutionarily diverse group of organisms, using the CAS-related proteins (p130Cas, NEDD9/HEF1 and EFS) mRNAs as <b>templates.</b> Singh et al. subsequently cloned and characterized the CASS4 gene, originally assigning the name HEPL (HEF1-EFS-p130Cas-like) for similarity to the other three defined CAS genes. The official name was subsequently changed to CASS4 by the Human Genome Organization (HUGO) Gene Nomenclature Committee (HGNC).|$|E
5|$|CDTM is an {{expansion}} of the traditional pharmacist scope of practice, allowing for pharmacist-lead management of drug related problems (DRPs) with an emphasis on a collaborative, interdisciplinary approach to pharmacy practice in the healthcare setting. The terms of a CPA are decided by the collaborating pharmacist and physician, though <b>templates</b> exist online. CPAs can be specific to a patient population of interest to the two parties, a specific clinical situation or disease state, and/or may outline an evidence-based protocol for managing the drug regimen of patients under the CPA. CPAs have become the subject of intense debate within the pharmacy and medical professions.|$|E
5|$|Medieval {{construction}} was seasonal, work on site being undertaken {{only in the}} spring and summer, when the light was good and the weather more reliable. Each autumn, all exposed surfaces were covered and lagged against frost damage. The architects worked over winter in the tracing house (that of York has both a fireplace and a privy) to prepare designs for the next season's campaign. They translated the designs into sets of planed oak cross-sectional <b>templates,</b> which were given to the stone-cutters. Construction of cathedrals and major churches almost invariably started at the eastern arm, and then proceeded westwards, with towers erected last.|$|E
3000|$|... are {{elements}} of fuzzy feedback MIN <b>template</b> and fuzzy feedback MAX <b>template,</b> fuzzy feed-forward MIN <b>template</b> and fuzzy feed-forward MAX <b>template,</b> respectively; ⋀ and ⋁ denote the fuzzy AND and fuzzy OR operation, respectively; [...]...|$|R
5000|$|The Jinja <b>template</b> engine allows {{customization}} of tags, filters, tests, and globals. [...] Also, {{unlike the}} Django <b>template</b> engine, Jinja allows the <b>template</b> designer to call functions with arguments on objects.Jinja is Flask's default <b>template</b> engine.|$|R
30|$|When we update a stack, {{orchestration}} functions check {{a difference}} between previous <b>template</b> and new <b>template,</b> then create, delete or update resources to fill up the difference. Specifically, a resource which is in previous <b>template</b> and is not in new <b>template</b> is deleted, a resource which is not in previous <b>template</b> and is in new <b>template</b> is created, a resource which is changed from previous <b>template</b> to new <b>template</b> is created after deletion or updated. In OpenStack, some resources can be updated but some cannot be. (e.g. network connection change can be updated but VM RAM size change needs to delete VM once, then create new one).|$|R
5|$|Polymerases are {{enzymes that}} {{synthesize}} polynucleotide chains from nucleoside triphosphates. The sequence {{of their products}} is created based on existing polynucleotide chains—which are called <b>templates.</b> These enzymes function by repeatedly adding a nucleotide to the 3′ hydroxyl group {{at the end of}} the growing polynucleotide chain. As a consequence, all polymerases work in a 5′ to 3′ direction. In the active site of these enzymes, the incoming nucleoside triphosphate base-pairs to the template: this allows polymerases to accurately synthesize the complementary strand of their template. Polymerases are classified according to the type of template that they use.|$|E
5|$|Reveton {{initially}} began spreading {{in various}} European countries in early 2012. Variants were localized with <b>templates</b> branded with the logos of different law enforcement organizations {{based on the}} user's country; for example, variants used in the United Kingdom contained the branding of {{organizations such as the}} Metropolitan Police Service and the Police National E-Crime Unit. Another version contained the logo of the royalty collection society PRS for Music, which specifically accused the user of illegally downloading music. In a statement warning the public about the malware, the Metropolitan Police clarified that they would never lock a computer {{in such a way as}} part of an investigation.|$|E
5|$|The {{method of}} {{construction}} is fairly well understood by historians. The {{patron of the}} aqueduct– a rich individual or the city of Nîmes itself– would have hired a large team of contractors and skilled labourers. A surveyor or mensor planned the route using a groma for sighting, the chorobates for levelling, {{and a set of}} measuring poles five or ten Roman feet long. His figures and perhaps diagrams were recorded on wax tablets, later to be written up on scrolls. The builders may have used <b>templates</b> to guide them with tasks that required a high degree of precision, such as carving the standardised blocks from which the water conduit was constructed.|$|E
5000|$|Many <b>template</b> {{systems are}} a {{component}} of a larger programming platform or framework. They {{are referred to as}} the [...] "platform's <b>template</b> system". Some <b>template</b> systems have the option of substituting a different <b>template</b> language or engine.|$|R
30|$|The {{function}} of <b>template</b> extraction extracts a <b>template</b> from an existing environment. Our implementation extracts JSON or HOT <b>template</b> and the extracted <b>template</b> can be deployed both by Amazon CloudFormation and OpenStack Heat because a <b>template</b> is abstract text information {{and does not}} depend on IaaS platform. To generalize and adapt extracted <b>template</b> format to other IaaS platforms, we can use this function for Cloud migration to another platform or Cloud federation on plural platforms.|$|R
2500|$|Many <b>template</b> {{systems are}} a {{component}} of a larger programming platform or framework. They {{are referred to as}} the [...] "platform's <b>template</b> system". [...] Some <b>template</b> systems have the option of substituting a different <b>template</b> language or engine.|$|R
25|$|<b>Templates</b> - Templates: These include leaked {{commercial}} website <b>templates</b> coded by companies.|$|E
25|$|<b>Templates</b> are {{different}} from macros: while both of these compile-time language features enable conditional compilation, <b>templates</b> are not restricted to lexical substitution. <b>Templates</b> {{are aware of the}} semantics and type system of their companion language, as well as all compile-time type definitions, and can perform high-level operations including programmatic flow control based on evaluation of strictly type-checked parameters. Macros are capable of conditional control over compilation based on predetermined criteria, but cannot instantiate new types, recurse, or perform type evaluation and in effect are limited to pre-compilation text-substitution and text-inclusion/exclusion. In other words, macros can control compilation flow based on pre-defined symbols but cannot, unlike <b>templates,</b> independently instantiate new symbols. <b>Templates</b> are a tool for static polymorphism (see below) and generic programming.|$|E
25|$|The {{desirability}} of custom <b>templates</b> for non-compact group is {{in conflict with}} the principle of learning invariant representations. However, for certain kinds of regularly encountered image transformations, <b>templates</b> might be the result of evolutionary adaptations. Neurobiological data suggests that there is Gabor-like tuning in the first layer of visual cortex. The optimality of Gabor <b>templates</b> for translations and scales is a possible explanation of this phenomenon.|$|E
30|$|Jain et al. [18] {{reviewed}} the existing work of fingerprint <b>template</b> protection such as encryption, <b>template</b> transformation, and crypto-biometric systems. They analyzed the practical {{issues involved in}} applying these techniques for biometric <b>template</b> protection. They compared the existing solutions of <b>template</b> protection {{on the basis of}} <b>template</b> security and matching accuracy of biometrics in transformed domain.|$|R
3000|$|... are {{elements}} of fuzzy feedback MIN <b>template</b> and fuzzy feedback MAX <b>template,</b> fuzzy feed-forward MIN <b>template,</b> and fuzzy feed-forward MAX <b>template</b> in Y -layer, respectively; ∧ and ∨ denote the fuzzy AND and fuzzy OR operation, respectively; u [...]...|$|R
30|$|During {{the update}} process, the first frame <b>template</b> {{and the newly}} arrived <b>template</b> are {{considered}} simultaneously. However, when the target is occluded, the arrived <b>template</b> usually cannot describe the real target effectively. Therefore, the weight μ of the arrived <b>template</b> should decrease at this time. Otherwise, the weight μ should increase due to the accurately estimate of the arrived <b>template</b> without other disturbance factors. In this paper, we set the parameter μ change with the reconstruction error. If On increases, which denotes the target may be disturbed by some factors, such as illumination and occlusion, the arrived <b>template</b> may be inaccurate, hence {{the weight of the}} <b>template</b> should decrease, while the weight of the first frame <b>template</b> should increase.|$|R
