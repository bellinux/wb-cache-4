69|953|Public
2500|$|... a <b>trigger</b> <b>condition</b> which {{when not}} met, the {{business}}-level event is not created, {{but when the}} <b>trigger</b> <b>condition</b> is met, the higher-level business event is created; ...|$|E
2500|$|Triggered {{abilities}} have a <b>trigger</b> <b>condition</b> and an effect. They {{are written}} as [...] ", [...] ", and {{begin with the}} word [...] "when", [...] "whenever", or [...] "at". Whenever the trigger event occurs, the ability is put on the stack the next time a player would receive priority and stays there until it's countered, it resolves, or it otherwise leaves the stack. See rule 603, [...] "Handling Triggered Abilities".|$|E
2500|$|A business-level <b>trigger</b> <b>condition</b> {{enables the}} SOA 2.0 {{architecture}} to establish real-time customer intelligence, marketing automation and customer loyalty solutions, among other features. Business objects model real-world entities in the architecture such as customers, accounts, loans, and travel itineraries. When {{the state of}} one of these objects changes, and a monitoring agent notices this change is significant (when compared to the list of criteria to monitor), an event is created and passed to other monitoring agents.|$|E
25|$|When the anticipatory warrant is {{predicated}} on a <b>triggering</b> <b>condition,</b> the Fourth Amendment requires that there is probable cause {{to believe that the}} <b>triggering</b> <b>condition</b> will occur, and that if it occurs, that there is a fair probability that the contraband will be found at the place to be searched. In this case, the warrant application satisfied both conditions, based on the delivery of the tape as the <b>triggering</b> <b>condition.</b>|$|R
40|$|Event-triggered {{control is}} a control method that the {{measured}} signal {{is sent to the}} controller only when a certain <b>triggering</b> <b>condition</b> on the measured signal is satisfied. In this paper, we propose a linear quadratic regulator (LQR) with decentralized <b>triggering</b> <b>conditions.</b> First, a suboptimal solution to the design problem of LQRs with decentralized <b>triggering</b> <b>conditions</b> is derived. A state-feedback gain can be obtained by solving a convex optimization problem with LMI (linear matrix inequality) constraints. Next, the relation between centralized and decentralized <b>triggering</b> <b>conditions</b> is discussed. It is shown that control performance of an LQR with decentralized event-triggering is better than that with centralized event-triggering. Finally, a numerical example is illustrated...|$|R
40|$|AbstractIn {{this article}} we present how the {{component}} triggering in SaveCCM, a component model intended for embedded vehicular systems, can be extended {{by means of an}} event algebra. The extension allows components to be triggered by complex event patterns, and not only by clock signals or single external events. Separating the detection of <b>triggering</b> <b>conditions</b> from the definition of the triggered services permits more general components and thus improves component reusability. Providing event detection mechanisms within the component model means that <b>triggering</b> <b>conditions</b> are explicitly available for system analysis at design time. An event algebra is used to define the complex <b>triggering</b> <b>conditions.</b> This algebra has a relatively simple declarative semantics and well documented algebraic properties, which facilitates formal and informal reasoning about the system. The algebra also ensures that detection of <b>triggering</b> <b>conditions</b> can be efficiently implemented with limited resources, which is critical in embedded applications...|$|R
5000|$|... a <b>trigger</b> <b>condition</b> which {{when not}} met, the {{business}}-level event is not created, {{but when the}} <b>trigger</b> <b>condition</b> is met, the higher-level business event is created; ...|$|E
50|$|After {{the mode}} is chosen, a <b>trigger</b> <b>condition</b> must be set. A <b>trigger</b> <b>condition</b> {{can range from}} simple (such as {{triggering}} on a rising or falling edge of a single signal) to the very complex (such as configuring the analyzer to decode the higher levels of the TCP/IP stack and triggering on a certain HTTP packet).|$|E
50|$|The target {{does not}} stop when the logic {{analyzer}} triggers, so each time the user changes the probes or <b>trigger</b> <b>condition,</b> they have to reset the environment and start again from the beginning.|$|E
40|$|Abstract This paper {{deals with}} {{applications}} of the vector triggering Random Decrement tech-nique. This technique is nelu and developed {{with the aim of}} minimizing estimation time and iden-tification ‘ewors. The theory behind the technique is discussed in an acccompanying paper. The re-suits presented in this paper should be regarded as a father documentation of the technique. The key point in Random Decrement estimation is the for-mulation of a <b>triggering</b> <b>condition.</b> If the <b>triggering</b> <b>condition</b> is fulfilled a time segment from each mea-surement is picked out and averaged with previous time segments. The final result is (I Random Decre-ment function from each measurement. In tradi-tional Random Decrement estimation the <b>triggering</b> <b>condition</b> is a scalar condition, which should only be fulfilled in a single measurement. In vector trig-gering Random Decrement the <b>triggering</b> <b>condition</b> is a vector condition. The advantage of this new approach should be a reduction in estimation time without a significant loss of accuracy, since the vec-tor <b>triggering</b> <b>conditions</b> ensure cross information between the measurements in the Random Decre-ment functions. The different problems with this technique is highlighted in two examples. A simu-lation study of a 4 degree of freedom system and the identification of a laboratory bridge model, both loaded by white noise, is made...|$|R
5000|$|Once these <b>trigger</b> <b>conditions</b> are met, Video Share session control policies, {{such as the}} following, can be applied: ...|$|R
50|$|In a {{conventional}} finite state machine, {{the transition is}} associated with a set of input Boolean conditions and a set of output Boolean functions. In an extended finite state machine (EFSM) model, the transition can be expressed by an “if statement” consisting of a set of <b>trigger</b> <b>conditions.</b> If <b>trigger</b> <b>conditions</b> are all satisfied, the transition is fired, bringing the machine from the current state to the next state and performing the specified data operations.|$|R
5000|$|Triggered {{abilities}} have a <b>trigger</b> <b>condition</b> and an effect. They {{are written}} as [...] "condition, effect", and {{begin with the}} word [...] "when", [...] "whenever", or [...] "at". Whenever the trigger event occurs, the ability is put on the stack the next time a player would receive priority and stays there until it's countered, it resolves, or it otherwise leaves the stack. See rule 603, [...] "Handling Triggered Abilities".|$|E
50|$|In game theory, grim trigger (also {{called the}} grim {{strategy}} or just grim) is a trigger strategy for a repeated game, {{such as an}} iterated prisoner's dilemma. Initially, a player using grim trigger will cooperate, {{but as soon as}} the opponent defects (thus satisfying the <b>trigger</b> <b>condition),</b> the player using grim trigger will defect for the remainder of the iterated game. Since a single defect by the opponent triggers defection forever, grim trigger is the most strictly unforgiving of strategies in an iterated game.|$|E
5000|$|A business-level <b>trigger</b> <b>condition</b> {{enables the}} SOA 2.0 {{architecture}} to establish real-time customer intelligence, marketing automation and customer loyalty solutions, among other features. Business objects model real-world entities in the architecture such as customers, accounts, loans, and travel itineraries. When {{the state of}} one of these objects changes, and a monitoring agent notices this change is significant (when compared to the list of criteria to monitor), an event is created and passed to other monitoring agents. [...] For example, the detection of an actual business problem or opportunity could lead to increased revenue. If a customer cancels an order, extra manufacturing capacity could reduce the profitability of the production run. A SOA 2.0 event could notify marketing department to create a special sales campaign that would resell the excess capacity, thereby recapturing the original profitable cost-per-unit. Automatic monitoring of events in operational business process activities as processes execute to see if any immediate action needs to be taken either inside or outside the enterprise. These monitoring agents continually test for specific business conditions and changes in business operations. If necessary, the agents alert people, make recommendations, send messages to other applications or invoke whole business processes when such conditions or changes occur.|$|E
40|$|The NA 62 and NA 48 / 2 {{experiments}} at CERN {{collected a}} large sample of charged kaon decays {{with a low}} intensity beam and minimum bias <b>trigger</b> <b>conditions</b> in 2004 (NA 48 / 2) and 2007 (NA 62). This allowed measurements {{of a number of}} rare decays that are difficult to address in conventional high intensity experiments with highly selective <b>trigger</b> <b>conditions.</b> In particular, large samples of K±→ π±γγ decays have been collected, allowing precision tests of the Chiral Perturbation Theory...|$|R
2500|$|The U.S. Court of Appeals for the Ninth Circuit reversed. [...] Relying on Ninth Circuit precedent, {{the court}} held that the Fourth Amendment's {{requirement}} that warrants describe with particularity the things, persons, or places to be searched fully applied to the <b>triggering</b> <b>conditions</b> necessary for an anticipatory search warrant. [...] Because the postal inspectors failed to present the application affidavitthe only document in which the <b>triggering</b> <b>conditions</b> were listedto Grubbs or his wife, the court ruled that the [...] "warrant was...inoperative, and the search was illegal." [...] The U.S. Supreme Court granted certiorari and reversed.|$|R
40|$|International audienceWe {{present the}} concept of pattern-triggered tasks which are {{released}} when a particular pattern of events occur. A formal event algebra is used to define complex <b>triggering</b> <b>conditions</b> for these tasks, and the detection of <b>triggering</b> <b>conditions</b> is performed within the system by code generated automatically from these definitions. The implementation of the algebra has many desirable features for resource constrained real-time systems, including bounded and low execution time and memory consumption. Furthermore, we present novel schedulability analysis for our pattern-triggered tasks that leverage on existing analysis for fixed-priority and dynamic-priority scheduling policies...|$|R
3000|$|... [...]. The tag {{definitions}} {{for these}} stereotypes define other {{properties of the}} represented tasks, including trigger conditions, computational workload indices, and sent data tokens. The index of tagged value lists represent an individual <b>trigger</b> <b>condition</b> and its related actions (operations to be calculated, data {{to be sent to}} the next tasks) when the <b>trigger</b> <b>condition</b> is satisfied.|$|E
3000|$|... {{between two}} tasks. The {{direction}} of the data flow in the channel {{is the same as}} the {{direction of the}} activity edge. The names of the channels are directly referenced as strings in <b>trigger</b> <b>condition</b> as well as in tagged values indicating outgoing channels.|$|E
40|$|Trigger-based code (malicious in many cases, but not necessarily) only executes when {{specific}} inputs are received. Symbolic execution {{has been}} one of the most powerful techniques in discovering such malicious code and analyzing the <b>trigger</b> <b>condition.</b> We propose a novel automatic malware obfuscation technique to make analysis based on symbolic execution difficult. Unlike previously proposed techniques, the obfuscated code from our tool does not use any cryptographic operations and makes use of only linear operations which symbolic execution is believed to be good in analyzing. The obfuscated code incorporates unsolved conjectures and adds a simple loop to the original code, making it less than one hundred bytes longer and hard to be differentiated from normal programs. Evaluation shows that applying symbolic execution to the obfuscated code is inefficient in finding the <b>trigger</b> <b>condition.</b> We discuss strengths and weaknesses of the proposed technique...|$|E
40|$|The NA 62 {{experiment}} at CERN SpS {{collected a}} large sample of charged kaon decays {{with a low}} intensity beam and minimum bias <b>trigger</b> <b>conditions</b> in 2007. This allowed measurements {{of a number of}} rare decays that are difficult to address in conventional high intensity experiments with highly selective <b>trigger</b> <b>conditions.</b> In particular, large samples of K > pi gamma gamma and K > e nu gamma decays have been collected, allowing precision tests of the Chiral Perturbation Theory. The status and first results of these analyses are presented...|$|R
5000|$|Event: A {{statement}} describing an instantaneous, discontinuous {{change in}} a set of variables of any type (species concentration, compartment size or parameter value) when a <b>triggering</b> <b>condition</b> is satisfied.|$|R
5000|$|Reporting Schemes — There {{are various}} {{reporting}} schemes (BRCB & URCB) for reporting data from server through a server-client relationship {{which can be}} triggered based on pre-defined <b>trigger</b> <b>conditions.</b>|$|R
40|$|This paper {{describes}} {{the architecture of}} the TriggerMan asynchronous trigger processor. TriggerMan processes triggers after updates have committed in the source database. It is designed to be able to gather updates {{from a wide variety of}} sources, including relational databases, object-relational databases, legacy databases, flat files, the web, and others. TriggerMan achieves the ability to gather updates from so many sources using an extensible data source mechanism. TriggerMan supports single-table (single data-source) triggers, sophisticated multiple-table (multiple-data-source) triggers, and temporal triggers. It maintains persistent copies of derived data (including materialized views and time series objects) to enable highperformance <b>trigger</b> <b>condition</b> testing. In order to take advantage of an existing database storage manager rather then create a new one, TriggerMan is being implemented as an extension to an object-relational DBMS. To do parallel <b>trigger</b> <b>condition</b> testing, Trigge [...] ...|$|E
40|$|Fuzzy {{triggers}} are database triggers incorporating fuzzy concepts. The approach {{leads to}} the application of approximate reasoning to trigger-based decision making. In C-fuzzy triggers, fuzzy rules may be specified in the <b>trigger</b> <b>condition</b> part. The C-fuzzy trigger model is presented, and an implementation thereof in the TEMPO Server—a prototype active database system—is described. The performance test results are included...|$|E
40|$|Currently {{aircraft}} noise monitoring systems use a mesh of single microphones distributed around an airport to continuously sample the noise level. This fact requires a manual process of {{aircraft noise}} event detection and classification {{in order to}} distinguish aircraft events {{from the rest of}} noise events in the recording. In the present paper a 3 -meter-long 12 -microphone linear array is used to automatically obtain a background noise free aircraft noise recording. The beamforming process separates the noise impinging in the array from above (potential aircraft noise) and the noise impinging from below (urban noise and reflections), the results are enhanced by the use of a <b>trigger</b> <b>condition</b> on the difference between both. The theoretical results reveals that the background noise in the aircraft noise recording can be attenuated by about 8 dB if the microphone array is optimally placed. The experimental tests shows that even in non optimal placements the array still provides better results than a single microphone if the threshold value in the <b>trigger</b> <b>condition</b> is properly set. Peer ReviewedPostprint (published version...|$|E
40|$|In {{this paper}} we propose two languages, called Future Temporal Logic (FTL) and Past Temporal Logic (PTL), for specifying {{temporal}} triggers. Some examples of <b>trigger</b> <b>conditions</b> that can be specified in our language are the following: "The value of a certain attribute increases by more than 10 % in ten minutes", "A tuple that satisfies a certain predicate {{is added to the}} database at least 10 minutes before another tuple, satisfying a different condition, is added to the database". Such triggers are important for monitor and control applications. In addition to the languages, we present algorithms for processing the <b>trigger</b> <b>conditions</b> specified in these languages, namely, procedures for determining when the <b>trigger</b> <b>conditions</b> are satisfied. These methods can be added as a "temporal" component to an existing database management systems. A preliminary prototype of the temporal component that uses the FTL language has been built on top of Sybase running on SUN workstations. Index Terms: Acti [...] ...|$|R
40|$|AbstractIn this paper, the {{development}} of a simulation program that can automatically generate equations of motion for mutibody systems in the discrete event simulation framework is presented. The need to analyze the dynamic response of mechanical systems that are under event <b>triggered</b> <b>conditions</b> is increasing. General mechanical systems can be defined as multibody systems that are collections of interconnected rigid bodies, consistent with various types of joints that limit the relative motion of pairs of bodies. For complex multibody systems, a systematic approach is required to efficiently set up the mathematical models. Therefore, a dynamics kernel was developed to automatically generate the equations of motion for multibody systems based on multibody dynamics. The developed dynamics kernel also provides the numerical solver for the dynamic analysis of multibody systems. The general multibody dynamics kernel cannot deal with discontinuous state variables, event <b>triggered</b> <b>conditions,</b> and state <b>triggered</b> <b>conditions,</b> though. To enable it to deal with multibody systems in discontinuous environments, the multibody dynamics kernel was integrated into a discrete event simulation framework, which was developed based on the discrete event system specification (DEVS) formalism. DEVS formalism is a modular and hierarchical formalism for modeling and analyzing systems under event <b>triggered</b> <b>conditions,</b> which are described by discontinuous state variables. To verify the developed program, it was applied to an block-lifting and transport simulation, and dynamic analysis of the system is carried out...|$|R
30|$|The 3 rd Generation Partnership Project [2] {{supports}} {{the development of}} standards used for technologies and solutions deployed in CSP wireless networks. Additionally, this organization promotes a general framework for Self-Organizing Networks (SON) [3] which enables self-optimizing [4] and self-healing [5] functionalities. These functionalities can be initiated through <b>trigger</b> <b>conditions</b> [4, 5] based on alarms or detection of faults. However, 3 GPP does not standardize the underlying methods or algorithms themselves. The delta algorithm may be one such solution for creating <b>trigger</b> <b>conditions</b> of anomalous events observed in network metrics that CSPs can leverage for SON solutions in their network.|$|R
40|$|Predictions {{from the}} RQMD model are {{systematically}} compared to recently published charged hadron distributions of AGS Experiment 802 for central Si+Au collisions at 14. 6 A GeV/c, {{taking into account}} both the experimental <b>trigger</b> <b>condition</b> and acceptance. The main features of the data, including K + production, can be understood quantitatively to better than 20 % {{within the framework of}} the model, although several discrepancies are found, most importantly for the proton spectra. 1...|$|E
40|$|AbstractTakotsubo {{cardiomyopathy}} is {{a recognized}} cardiac syndrome that mimics acute coronary syndrome, without occlusion of the coronary artery. This syndrome is usually triggered by emotional or physical stress. Acute infection as a <b>trigger</b> <b>condition</b> is rarely reported. We report {{a case of}} an elderly woman who experienced chest pains with ST-segment elevation on electrocardiography, and who was later confirmed to have this cardiac syndrome by cardiac catheterization in coexistence with shock status related to suspected acute infection...|$|E
40|$|The {{previously}} obtained {{approximation of}} lateral distribution of atmospheric Cherenkov light in EAS for primary protons gives {{the possibility for}} fast Monte Carlo simulation with large statistics of the detector response and thus estimation of detector efficiency. Several billions of events are simulated taking into account inclined showers, the quantum efficiency of the photomultiplier, axis distribution etc. Several <b>trigger</b> <b>condition</b> for HECRE experiment are proposed and studied. The constant efficiency registration for different primaries is investigated...|$|E
5000|$|The U.S. Court of Appeals for the Ninth Circuit reversed. [...] Relying on Ninth Circuit precedent, {{the court}} held that the Fourth Amendment's {{requirement}} that warrants describe with particularity the things, persons, or places to be searched fully applied to the <b>triggering</b> <b>conditions</b> necessary for an anticipatory search warrant. [...] Because the postal inspectors failed to present the application affidavit - the only document in which the <b>triggering</b> <b>conditions</b> were listed - to Grubbs or his wife, the court ruled that the [...] "warrant was...inoperative, and the search was illegal." [...] The U.S. Supreme Court granted certiorari and reversed.|$|R
40|$|The {{contributions}} to the trigger rate of an imaging atmospheric Cherenkov telescope and the optimization of the <b>trigger</b> <b>conditions</b> are discussed. Among the trigger options studied are cameras with trigger regions of different sizes, triggers requiring a coincidence of 2, 3 and 4 pixels as well as <b>triggers</b> imposing additional <b>conditions</b> on topology of the trigger pixels. A two-pixel trigger based on neighboring trigger pixels is shown to provide full efficiency, at considerably reduced random trigger rates. Numerical examples of effective areas and rates are given based on {{the parameters of the}} new HEGRA Cherenkov telescopes. Especially addressed are <b>trigger</b> <b>conditions</b> for the observation of extended sources with angular size #approx# 1. (orig.) SIGLEAvailable from TIB Hannover: RO 6920 (1996, 17) / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekDEGerman...|$|R
40|$|We {{present the}} design of a common trigger and DAQ system for the high energy Physics {{experiment}} NA 62. The first level of trigger runs on-line as usual in such kind of experiments, but here is designed as a segment of the DAQ chain, instead of an additional independent system. FPGAs are used to evaluate fast <b>trigger</b> <b>conditions,</b> entirely on the digitized information from read-out electronics. In this way, the whole digitized information from detector is available for triggering and no separate branchs of read-out electronics are necessary. We shall present the architecture of the system, the involved harware, the fast <b>trigger</b> <b>conditions</b> which we are considering for implementation on FPGAs and our preliminary tests. © 2008 IEEE...|$|R
