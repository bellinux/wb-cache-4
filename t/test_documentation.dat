106|789|Public
25|$|In 1952, {{following}} his graduation from Whitworth University, Grose joined {{the staff at}} Boeing, working with the Applied Physics department. While at Boeing, he wrote the <b>test</b> <b>documentation</b> for the Minuteman intercontinental ballistic thermonuclear missile. He was also responsible for Boeing's initial testing, which utilized three separate and dynamic environments at the same time. He remained with Boeing through 1959. After working with Boeing, Grose joined the staff of Litton Industries in Woodland Hills, California, where he served as the Director of Reliability and Program Manager of Project SPARR, an Air Force program designed to address general and applied research problems related to space systems. He was responsible for overseeing an applied research space systems risk management program {{on behalf of the}} United States Air Force.|$|E
2500|$|For {{information}} assurance, CM can {{be defined}} as the management of security features and assurances through control of changes made to hardware, software, firmware, documentation, test, test fixtures, and <b>test</b> <b>documentation</b> throughout the life cycle of an information system. [...] CM for information assurance, sometimes referred to as Secure Configuration Management, relies upon performance, functional, and physical attributes of IT platforms and products and their environments to determine the appropriate security features and assurances that are used to measure a system configuration state. For example, configuration requirements may be different for a network firewall that functions as part of an organization's Internet boundary versus one that functions as an internal local network firewall.|$|E
2500|$|In 2014, the American Educational Research Association (AERA), American Psychological Association (APA), and National Council on Measurement in Education (NCME) {{published}} {{a revision of}} the Standards for Educational and Psychological Testing, which describes standards for test development, evaluation, and use. [...] The Standards cover essential topics in testing including validity, reliability/errors of measurement, and fairness in testing. [...] The book also establishes standards related to testing operations including test design and development, scores, scales, norms, score linking, cut scores, test administration, scoring, reporting, score interpretation, <b>test</b> <b>documentation,</b> and rights and responsibilities of test takers and test users. [...] Finally, the Standards cover topics related to testing applications, including psychological testing and assessment, workplace testing and credentialing, educational testing and assessment, and testing in program evaluation and public policy.|$|E
5000|$|<b>Testing</b> <b>documentation</b> (<b>test</b> data, test conditions, {{expected}} results, instructions) {{to allow}} compliance testing.|$|R
5000|$|NKT Flexibles perform total riser and {{flowline}} system design, engineering, procurement, manufacture, <b>testing,</b> <b>documentation</b> and delivery.|$|R
50|$|It {{can involve}} {{controlled}} laboratory experiments, subjective evaluations by people, or field <b>testing.</b> <b>Documentation</b> is important: formal test method, test report, photographs, video, etc.|$|R
50|$|ISO/IEC/IEEE 29119 Software Testing - <b>Test</b> <b>Documentation,</b> {{includes}} templates {{and examples}} of <b>test</b> <b>documentation</b> that are produced during the test process. The templates support ISO/IEC/IEEE 29119-2 Test Processes, i.e. by the test process {{in which they are}} produced.|$|E
5000|$|ISO/IEC/IEEE 29119-3: <b>Test</b> <b>Documentation,</b> {{published}} September 2013 ...|$|E
5000|$|... 829-2008 IEEE Standard for Software and System <b>Test</b> <b>Documentation</b> ...|$|E
5000|$|When {{implementing}} specific programs, {{this involves}} acquiring the requisite resources, developing the process, training, process <b>testing,</b> <b>documentation,</b> and integration with (and/or conversion from) legacy processes ...|$|R
50|$|CIP-Tool permits {{models to}} be {{automatically}} converted to executable code. This greatly facilitates <b>testing,</b> <b>documentation</b> and final implementation. Currently the languages C/C++ and Java are supported as output formats.|$|R
50|$|When {{the three}} tracks are {{complete}} they all {{end up in}} the final deployment. This phase requires planning and should include pre-deployment <b>testing,</b> <b>documentation,</b> training and maintenance and support.|$|R
5000|$|... 829-1983 IEEE Standard for Software <b>Test</b> <b>Documentation</b> (superseded by 829-1998) ...|$|E
5000|$|... #Subtitle level 3: ISO/IEC/IEEE 29119-3 (Part 3) - <b>Test</b> <b>Documentation</b> ...|$|E
5000|$|Security Features User's Guide, Trusted Facility Manual, <b>Test</b> <b>Documentation</b> and Design Documentation ...|$|E
50|$|Dupuis {{has worked}} at the {{computer}} software company ResearchWare, providing software <b>testing,</b> <b>documentation,</b> and technical support for HyperRESEARCH since the company was incorporated in 1991, and she also manages the company's administrative side.|$|R
5000|$|Dr. David Gelperin {{chaired the}} working groups {{developing}} the IEEE 829-1989 software <b>testing</b> <b>documentation</b> standard. [...] With Jerry E. Durant {{he went on}} to develop the High Impact Inspection Technology that builds upon traditional inspections but utilizes a test driven additive.|$|R
50|$|Procedural {{information}} may {{include not only}} safety procedures but also procedures for avoiding contamination, calibration of equipment, equipment <b>testing,</b> <b>documentation,</b> and all other relevant issues. These procedural protocols {{can be used by}} skeptics to invalidate any claimed results if flaws are found.|$|R
50|$|Dr. David Gelperin and Dr. William C. Hetzel {{developed}} the Systematic Test and Evaluation Process (STEP) methodology {{in order to}} implement the original IEEE-829 Standard for Software <b>Test</b> <b>Documentation.</b>|$|E
50|$|Gelperin and Hetzel {{developed}} the STEP methodology for implementing the original IEEE-829-1998 Standard for Software and System <b>Test</b> <b>Documentation.</b> Their firm {{was instrumental in}} gaining recognition for testing as a separate discipline within the software industry.|$|E
5000|$|TPT <b>test</b> <b>documentation</b> {{according}} to IEEE 829 presents {{the result of}} the test evaluation to the tester in a HTML, report, in which not only the pure information [...] "success", [...] "failed" [...] or [...] "unknown" [...] can be depicted as the test result for each test case, but also details such as characteristic parameters or signals that have been observed in the test execution or computed in the test evaluation. Since the test assessment returns proper information about the timing and the checked behaviour this information can be made available in the report.The content of the <b>test</b> <b>documentation</b> as well as the structure of the document can be freely configured {{with the help of a}} template.|$|E
5000|$|... (1986) Software Validation, Verification, <b>Testing,</b> and <b>Documentation</b> (Editor), Petrocelli Books ...|$|R
50|$|For special purposes, such as network <b>testing,</b> <b>documentation,</b> {{and other}} applications, IANA also {{reserves}} {{a set of}} special-use domain names. This list contains domain names such as example, local, localhost, and test. Other top-level domain names containing trade marks are registered for corporate use. Cases include brands such as BMW, Google, and Canon.|$|R
40|$|The {{point of}} this work is {{creating}} web aplication, that means analysis of functional and non-functional requirements, plan, realization, <b>testing,</b> <b>documentation</b> of source code and user's documentation. The result of the work will be functional aplication, {{which can be used}} by any kind of sporty club to improve organizational and communication processes...|$|R
5000|$|IEEE 829-2008, {{also known}} as the 829 Standard for Software <b>Test</b> <b>Documentation,</b> is an IEEE {{standard}} that specifies the form of a set of documents for use in defined stages of software testing, each stage potentially producing its own separate type of document. These stages are: ...|$|E
50|$|TESSY {{automatically}} executes tests, {{evaluates the}} test results, and generates the test reports. This makes TESSY suitable for regression testing. TESSY includes the Classification Tree Editor CTE, {{a tool to}} support the Classification Tree Method for Test Case Specification. TESSY supports <b>test</b> <b>documentation</b> in various formats, e.g., HTML, Word, Excel.|$|E
50|$|Currently ISO/IEC/IEEE 29119 {{has five}} parts. The set of {{standards}} use a layered approach to defining software testing, which is common to many ISO standards. This {{set of standards}} presents: test definitions and concepts (part 1); test processes (part 2); <b>test</b> <b>documentation</b> (part 3); test techniques (part 4); and keyword-driven testing (part 5).|$|E
50|$|Brooks {{describes}} how programming systems projects are typically run as formal projects that follow industry best practices and will comprise <b>testing,</b> <b>documentation</b> and ongoing maintenance activities {{as well as}} activities {{to ensure that the}} product is generalized to work in different scenarios including on systems other than the development systems on which it was created.|$|R
50|$|In {{addition}} to functioning as an integrated development environment, Understand provides tools for metrics and reports, standards <b>testing,</b> <b>documentation,</b> searching, graphing, and code knowledge. It {{is capable of}} analyzing projects with millions of lines of code and works with code bases written in multiple languages. Developed originally for Ada, it now supports development in several common programming languages. Integration with the Eclipse development environment is also supported.|$|R
40|$|The {{objective}} of the research is to know the increasing of students’ learning achievement in XI IPS 2 with demonstration method by document transaction media. This research is class room action research held in two cycles. The subject {{of this research is}} a class XI IPS 2 which totaled 30 student. Technique of data collecting is done by, <b>testing,</b> <b>documentation,</b> <b>testing,</b> observation, and interviews. The data validity used source triangulation and method triangulation. The data analysis used quantitative analysis method and qualitative analysis method. The result of the research shows that can improve accounting learning achievement, see in (1) Learning outcomes showing an increase 18, 8...|$|R
50|$|The {{standard}} forms {{part of the}} training syllabus of the ISEB Foundation and Practitioner Certificates in Software Testing promoted by the British Computer Society. ISTQB, following the formation of its own syllabus based on ISEB's and Germany's ASQF syllabi, also adopted IEEE 829 as the reference standard for software and system <b>test</b> <b>documentation.</b>|$|E
50|$|Surplus {{military}} rifles {{have been}} used for hunting; and ammunition was manufactured in Otterup and by Norma Precision after World War II. Documentation is scarce for the design pressure specifications of these surplus firearms. Although modern weapons may have been designed for smokeless powder loadings, their similarity to arms designed for gunpowder loadings causes uncertainty about the safety of firing modern cartridges in weapons lacking proof <b>test</b> <b>documentation.</b>|$|E
50|$|Gelperin {{received}} his PhD in Computer Science from Ohio State University. Together {{with his partner}} William C. Hetzel, he co-founded the Software Quality Engineering consultancy firm in 1986. The firm {{played a leading role}} in organizing the International Conference on Software Testing and the Software Testing Analysis & Review conference. Gelperin and Hetzel had developed the STEP methodology for implementing the original IEEE-829 Standard for <b>Test</b> <b>Documentation.</b> Their firm was instrumental in gaining recognition for testing as a separate discipline within the software industry.|$|E
50|$|Commercial design tools simplify and {{automate}} memory-mapped register specification and code generation for hardware, firmware, hardware verification, <b>testing</b> and <b>documentation.</b>|$|R
40|$|Software Design Laboratory is an {{undergraduate}} practicum in software design, {{which focuses on}} principles and practices of large-scale software design. Concepts and examples borrowed from elsewhere in Computer Science are applied {{to the construction of}} a significant project, namely a command interpreter resembling the Bourne shell. The course focus is on long-lived software systems of a size requiring group effort. We therefore address maintenance, <b>testing,</b> <b>documentation,</b> code readability, version control, and group dynamics. 1...|$|R
40|$|This course covers {{software}} testing strategies, along with established best practices, so students {{learn how to}} test their software in a complete and systematic (vice ad-hoc) manner. Particular {{attention is paid to}} planning, writing, and executing software <b>testing</b> <b>documentation,</b> i. e., software test plan, to include documented results. Various projects are assigned, designed to illustrate various challenges associated with {{software testing}}, and to reinforce the strategies and techniques used to overcome these challenge...|$|R
