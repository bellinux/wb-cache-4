8|19|Public
5000|$|An example {{identifier}} [...] "" [...] can {{be broken}} down into two parts: the owner identifier which indicates the issuer of the FPI, and the <b>text</b> <b>identifier</b> which indicates the particular document or object the FPI identifies. In the example, the owner identifier is [...] "" [...] and the <b>text</b> <b>identifier</b> is [...] "". The two parts are separated by a double slash.|$|E
50|$|The textual {{data can}} be {{specified}} in multiple languages. In the actual device description only text identifiers are used. Separate text lists (for each supported language one is necessary) link the corresponding language-dependent text to the <b>text</b> <b>identifier.</b> Usually all of the text lists {{are included in the}} main file. For subsequent translation into other languages the text lists can be provided as separate files to leave the main file unchanged.|$|E
5000|$|Text {{identifiers}} can {{be broken}} down into the class, description and language. In this case the class is [...] "", indicating that the FPI represents a document type definition; the description is [...] ""; and the language is [...] "" [...] which suggests that the document type definition is written in English (though documents conforming to the DTD {{do not need to be}} in English). The class is separated from the description using a space character; the description is separated from the language using a double slash. The <b>text</b> <b>identifier</b> may optionally contain a version indicator after the language, also separated by a double slash.|$|E
50|$|ISO/IEC 9070 -- Information {{technology}} -- SGML support facilities -- Registration {{procedures for}} public <b>text</b> owner <b>identifiers.</b> Describes the procedures whereby assignments of owner prefixes to owners of public text are made.|$|R
50|$|He {{is one of}} the key {{technical}} {{contributors to}} the Unicode specifications, being the primary author or co-author of Bi-directional Algorithm (used worldwide to display Arabic and Hebrew text), Collation (used for sorting and searching), Normalization, Scripts, <b>Text</b> segmentation, <b>Identifiers,</b> Regular Expressions, Compression, Character Conversion, and Security.|$|R
5000|$|C-squares {{provides}} a hierarchical nomenclature for dividing 10°x10° World Meteorological Organization (WMO) squares into smaller units (each an individual [...] "c-square") of 5°x5°, 1°x1°, 0.5°x0.5°, 0.1°x0.1°, etc., using an alternating base 2, base 5 linear division, {{as fine as}} may be required. Each cell of the resulting subdivision is allocated a unique alphanumeric identifier (c-squares code), such that the position of an object or objects {{on the surface of}} the Globe can be represented by a set of one or more such codes that define the cell(s) within which the object occurs. Storing these codes as <b>text</b> <b>identifiers,</b> for example in a database, repository of spatial metadata, searchable text file or web page, then offers the functionality for a simple, text-based spatial search, without the requirement for any more complex geographic information system (GIS). Once stored (or if desired, generated on-the-fly using a c-squares encoder), a code or set of codes can also be rendered on a map by a utility (for example, the web-accessible c-squares mapper) that incorporates the relevant decoding routines.|$|R
50|$|DIF stores {{everything}} in an ASCII text file to mitigate many cross-platform issues {{back in the}} days of its creation. However modern spreadsheet software, e.g. OpenOffice.org Calc and Gnumeric, offer more character encoding to export/import. The file is divided into 2 sections: header and data. Everything in DIF is represented by a 2- or 3-line chunk. Headers get a 3-line chunk; data, 2. Header chunks start with a <b>text</b> <b>identifier</b> that is all caps, only alphabetic characters, and less than 32 letters. The following line must be a pair of numbers, and the third line must be a quoted string. On the other hand, data chunks start with a number pair and the next line is a quoted string or a keyword.|$|E
30|$|The {{secondary}} node A which cooperates with node B sends a message, which contains plain <b>text</b> <b>identifier</b> A, random Na, Nb, identifier B, and identifier A, identifier B, random Na encrypted with the pre-shared key Kas.|$|E
30|$|After {{receiving}} the messages sent by secondary nodes A, B encrypts the encrypted message {A,B,Na}_K_as and identifier A, random Nb with pre-shared key Kbs, along with plain <b>text</b> <b>identifier</b> B, and sends {{them to the}} control node S.|$|E
40|$|A federated query portal in an {{electronic}} health record infrastructure enables large epidemiology studies by combining data from geographically dispersed medical institutions. However, an individual’s health record {{has been found}} to be distributed across multiple carrier databases in local settings. Privacy regulations may prohibit a data source from revealing clear <b>text</b> <b>identifiers,</b> thereby making it non-trivial for a query aggregator to determine which records correspond to the same underlying individual. In this paper, we explore this problem of privately detecting and tracking the health records of an individual in a distributed infrastructure. We begin with a secure set intersection protocol based on commutative encryption, and show how to make it practical on comparison spaces as large as 1010 pairs. Using bigram matching, precomputed tables, and data parallelism, we successfully reduced the execution time to a matter of minutes, while retaining a high degree of accuracy even in records with data entry errors. We also propose techniques to prevent the inference of identifier information when knowledge of underlying data distributions is known to an adversary. Finally, we discuss how records can be tracked utilizing the detection results during query processing...|$|R
50|$|IUID is {{physically}} marked on tangible items or assets using a two-dimensional (2D) Data Matrix symbol {{with the data}} formatted in accordance with specified standards. The encoded data is identified {{by the use of}} data identifiers, application <b>identifiers</b> or <b>text</b> element <b>identifiers.</b> The choice of which identifier to use is based upon normal industry practices of the organization assigning the serialization. The formatted data is called a Unique Item Identifier (UII). The Data Matrix symbol is a machine-readable representation of the UII.|$|R
40|$|Previous {{studies have}} shown that text genres can be {{computationally}} distinguished by sophisticated computational and statistical methods. The current study adds to the previous body of work by incorporating phrasal verbs as a <b>text</b> genre <b>identifier.</b> Results indicate that phrasal verbs significantly distinguish between both the spoken/written and formal/informal dimensions, with considerably less computational expense than previous studies. Phrasal verbs also indicate degree of spokenness and formality that is significantly similar to previous computationally expensive studies. The study offers useful findings for text-identification research and for materials developers in the field of English as a second language. ...|$|R
40|$|Infiniband ™ uses both {{text and}} binary {{identifiers}} to identify protocols such as SRP. The same identifiers could {{or should be}} used with SRP over VI or other RDMA transport protocols. If these assignments are approved as proposed herein, NCITS {{may need to be}} notified of their use. 1. SRP <b>Text</b> <b>Identifier</b> SRP text identifiers appear in the ServiceName field(s) of the ServiceEntries attribute (Infiniband ™ Architecture Release 1. 0, volume 1, clause 16. 3. 3. 5). The base <b>text</b> <b>identifier</b> for SRP shall be: SRP. T 10. NCITS Variant text identifiers, if they should prove necessary, shall be of the form: xx. SRP. T 10. NCITS where the values of "xx " are specified by the SRP standard. Example: the current focus of SRP is its use on Infiniband ™ reliable connection channels. However, it will operate without alteration on reliable datagram channels, and the modifications needed for operation on unreliable connection channels are straightforward. There is a proposal (01 - 085) for multiple channel operation, which may distinguish between control and data channels. This might lead to...|$|E
40|$|Click on the DOI link {{below to}} access the article (may not be free). Glyphs are {{representations}} of multivariate data used for quickly discriminating information. They can represent values {{on more than one}} data dimension via physical attributes such as shape, size, and color (Ward, 2002). The United States military uses a set of glyph symbology (MILSTD 2525) to represent soldiers, equipment and personnel on the battlefield. In this study the authors selected a subset of features from these glyphs to i) evaluate their search efficiency, ii) determine whether differences in efficiency exist between levels of the same feature, and iii) identify the overall difficulty of search. The study compared 4 features: the length and orientation of a line, a central symbol and a <b>text</b> <b>identifier.</b> These represented air speed and direction, aircraft type and a unique aircraft identifier, respectively. Two variations of each feature were used to evaluate search efficiency across different levels of a given feature. Participants identified which side of the screen contained an oddball glyph, or if they saw no oddball. Set sizes 6, 12, and 18 were tested, with target absent trials occurring 10 % of the time. Distractors were a set of homogenous glyphs from which the target stimuli only differed by a change in one of the tested features. Response time and accuracy were the major dependent variables, with search slopes being calculated for analysis. Results indicate that participants were not able to distinguish changes in text identifiers, with poor accuracy and relatively slow search efficiencies. Performance for most of the other features was excellent. Participants were slower at identifying a low level of air speed and directional change versus higher levels. This finding is consistent with other work in search asymmetries and indicates that interpretation of these glyphs may be more difficult for some situations than others...|$|E
40|$|The Bank Holding Companies (BHCs) shall {{provide the}} data each {{month in a}} single text file. This will be a “month-end” file {{produced}} each month and reported no later than thirty (30) calendar days {{after the end of}} the reporting month. This file will contain one record per active loan in the contributor’s inventory. All loans meeting the definition of FR Y- 9 C, Schedule HC-C, item 1. c. (2) (a) (first lien closed-end loans secured by 1 - 4 family residential real estate) shall be reported. In addition, the following loans shall be included:: All inventory that has been transferred to another servicer, but only if transferred in the month that it was transferred All inventory that was liquidated, but only if liquidated during the reporting month. Additional Formatting: � Options for all fields are comprehensive identifying a valid value for all loans regardless of status. If a value is Unknown or Unavailable the field should be left NULL- populated with a sequence of two pipes with no intervening spaces or explicit N/A coding. � No quotation marks should be used as <b>text</b> <b>identifiers.</b> � Do not provide a header row. � Inactive inventory that was paid off in one manner or another (servicing transfer, involuntary liquidation or paidin-full by borrower) before the beginning of the reporting month should not be included. � The table on the pages following shows the fields that should be contained in the file...|$|R
5000|$|In May 2014, {{fans who}} {{originally}} preordered the album through the RISC Store received a [...] "mystery gift" [...] {{in lieu of}} the actual album, due to Victory Records not releasing any physical copies to the band. Fans received a white Digipak with a photograph of an orange tabby cat on its front cover and booklet cover, with no <b>text</b> or <b>identifiers</b> other than the track listing on the back cover. The booklet contains the lyrics to all ten songs, photographs of the band, and Aesop's Fable The Dog and the Wolf on its final page. The Digipak contained a blank CD-R with nondescript artwork of a barren tree, with the band stating on their Facebook page: ...|$|R
5000|$|K. Yee of the Foresight Institute proposes [...] "extended {{fragment}} identifiers" [...] delimited with colons and {{a keyword}} to differentiate them from anchor <b>identifiers.</b> A <b>text</b> search fragment <b>identifier</b> with [...] "fragment specification scheme" [...] id [...] "" [...] {{is the first}} proposal in this scheme. [...] The following example would search a document for the first occurrence of the string [...] "some context for a search term" [...] and then highlight the words [...] "search term": ...|$|R
30|$|The mrinit and mrfin {{messages}} {{contain the}} peer id field which uniquely identifies the master and the slaves in a peer group. The task list field presents {{a set of}} tuples in a <b>text</b> string: group <b>identifier,</b> slave identifier, input data, task instructions related to MapReduce operations, e.g., a slave retrieves a data chunk from an FTP server and executes the mapper operation. When finishing tasks, the slaves send results together with their peer identifier to the master in the mrfin messages.|$|R
40|$|We {{present a}} {{database}} of annotated biomedical text corpora merged into a portable data structure with uniform conventions. MedTag combines three corpora, MedPost, ABGene and GENETAG, within a common relational database data model. The GENETAG corpus has been modified to reflect new definitions of genes and proteins. The MedPost corpus has been updated to include 1, 000 additional sentences from the clinical medicine domain. All data have been updated with original MEDLINE <b>text</b> excerpts, PubMed <b>identifiers,</b> and tokenization independence to facilitate data accuracy, consistency and usability...|$|R
40|$|The {{problem of}} {{detecting}} aliases - multiple <b>text</b> string <b>identifiers</b> {{corresponding to the}} same entity - is increasingly important in the domains of biology, intelligence, marketing, and geoinformatics. This report investigates {{the extent to which}} probabilistic methods can help. Aliases arise from entities who are trying to hide their identities, from a person with multiple names, or from words which are unintentionally or even intentionally misspelled. While purely orthographic methods (e. g. string similarity) can help solve unintentional spelling cases, many types of alias (including those adopted with malicious intent) can fool these methods. However, if an entity has a changed name in some context, several or all of the set of other entities with which it has relationships can remain stable. Thus, the local social network can be exploited by using the relationships as semantic information. The proposed combined algorithm takes advantage of both orthographic and semantic information to detect aliases. By applying the best combination of both types of information, the combined algorithm outperforms the ones built solely on one type of information or the other. Empirical results on three real world data sets support this claim...|$|R
40|$|An {{important}} task in information extraction (IE) from biomedical articles is term identification (TI), which concerns linking entity mentions (e. g., terms denoting proteins) in <b>text</b> to unambiguous <b>identifiers</b> in standard databases (e. g., RefSeq). Previous work on TI {{has focused on}} species-specific documents. However, biomedical documents, especially full-length articles, often talk about entities across a number of species, in which case resolving species ambiguity becomes an indispensable part of TI. This paper describes our rule-based and machine-learning based approaches to species disambiguation and demonstrates that performance of TI can be improved by over 20 % if the correct species are known. We also show that using the species predicted by the automatic species taggers can improve TI by a large margin. ...|$|R
40|$|we {{extracted}} absolute longitudes/latitudes of each {{location for}} the use in Google Map and Google Earth applications. Finally we combined the geospatial hierarchy from Wikipedia with the BioCaster ontology (BCO). The preliminary results show a geospatial ontology with two administrative levels: 243 countries and 4, 025 sub-countries. The geospatial ontology was integrated into the extant BCO, a multilingual public health ontology focusing on infectious diseases and was available at &#x 22;[URL] geospatial ontology was used to develop an algorithm for detecting locations of outbreaks that occur in news stories. Firstly, locations in news stories are automatically tagged with a named entity recognizer based on a support vector machine trained on 1, 000 manually annotated texts. Secondly, we mapped location names from the <b>text</b> to <b>identifiers</b> in the geospatial ontology at the country and sub-country levels. Grounding proceeded as follows: First, we ranked pairs of disease-location by frequency {{in a set of}} collected articles which shared similar date stamps. We then chose the top disease-location pairs to re-map into each news story. The re-mapping process is done by regular expression matching. In order to infer country names where this information was missing from the text we manually constructed a ranked list of sub-country and country pairs based on population size. |$|R
40|$|Obliq is a lexically-scoped, untyped, {{interpreted}} {{language that}} supports distributed object-oriented computation. Obliq objects have state and are local to a site. Obliq computations can roam over the network, while maintaining network connections. Distributed lexical scoping {{is the key}} mechanism for managing distributed computations. 1. Introduction A simple guiding principle separates Obliq from other distributed procedural languages: adherence to lexical scoping in a distributed context. This principle {{has a number of}} interesting consequences: it supports a natural and consistent semantics of distributed computation, and enables elegant techniques for distributed programming. In lexically scoped languages, the binding location of every identifier is determined by simple analysis of the program <b>text</b> surrounding the <b>identifier.</b> Therefore, one can be sure of the meaning of program identifiers, and can much more easily reason about the behavior of programs. In a distributed language [...] ...|$|R
40|$|International audienceText Cloning {{occurs when}} a {{processor}} is storing {{in one or more}} levels of its cache hierarchy the same text multiple times. There are several causes of Text Cloning and we classify them either as Extrinsic or Intrinsic. Extrinsic Text Cloning can happen due to user and software practices, or middleware policies, which result into making multiple copies of a binary and concurrently executing the multiple copies on the same processor. Intrinsic Text Cloning can happen when an instruction cache is Virtually Indexed/Virtually Tagged and the process identifier is included in the tag. A simultaneous multithreaded processor, that employs such cache, will map the text of concurrent processes of the same binary to different instruction cache space due to their distinct process <b>identifier.</b> <b>Text</b> cloning can be wasteful to performance, especially for simultaneous multithreaded processors, because concurrent processes compete for cache space to store the same instruction blocks. Experimental results on simultaneous multithreaded processors indicate that the performance overhead of this type of undesirable cloning is significant. Theses findings call for OS and/or architectural support to reduce or eliminate Text Cloning...|$|R
40|$|Automated UI testing {{suffers from}} {{fragility}} due to contin- uous - although minor - {{changes in the}} UI of applications. Such fragility has been shown especially for the web domain, though no clear evidence is available for mobile applications. Our goal is to perform an exploratory assessment of the extent and causes of the fragiliy of UI automated tests for mobile applications. For this purpose, we analyzed a small test suite -that we developed using five different testing frameworks- for an Android application (K- 9 Mail) and observed the changes induced in the tests by {{the evolution of the}} UI. We found that up to 75 % of code-based tests, and up to 100 % of image recognition tests, had to be adapted because of the changes induced by the evolution of the application between two different versions. In addition we identified the main causes of such fragility: changes of <b>identifiers,</b> <b>text</b> or graphics, removal or relocation of elements, activity flow variation, execution time variation, and usage of physical buttons. The preliminary assessment showed that the fragility of UI tests can be a relevant issue also for mobile applications. A few common causes were found that can be used as the basis for providing guidelines for fragility avoidance and repai...|$|R
40|$|Privacy {{is one of}} {{the most}} {{important}} social and political issues in our information society, characterized by a growing range of enabling and supporting technologies and services. Amongst these are communications, multimedia, biometrics, big data, cloud computing, data mining, internet, social networks, and audio–video surveillance. Each of these can potentially provide the means for privacy intrusion. De-identification {{is one of the}} main approaches to privacy protection in multimedia contents (text, still images, audio and video sequences and their combinations). It is a process for concealing or removing personal identifiers, or replacing them by surrogate personal identifiers in personal information in order to prevent the disclosure and use of data for purposes unrelated to the purpose for which the information was originally obtained. Based on the proposed taxonomy inspired by the Safe Harbour approach, the personal identifiers, i. e., the personal identifiable information, are classified as non-biometric, physiological and behavioural biometric, and soft biometric identifiers. In order to protect the privacy of an individual, all of the above identifiers will have to be de-identified in multimedia content. This paper presents a review of the concepts of privacy and the linkage among privacy, privacy protection, and the methods and technologies designed specifically for privacy protection in multimedia contents. The study provides an overview of de-identification approaches for non-biometric <b>identifiers</b> (<b>text,</b> hairstyle, dressing style, license plates), as well as for the physiological (face, fingerprint, iris, ear), behavioural (voice, gait, gesture) and soft-biometric (body silhouette, gender, age, race, tattoo) identifiers in multimedia documents...|$|R

