414|193|Public
25|$|Lee Felsenstein, a {{computer}} engineer {{who played a}} central role in the development of the personal computer, criticized the centralized, <b>top-down</b> <b>design</b> and distribution of the OLPC.|$|E
5000|$|... #Caption: {{screen shot}} {{captured}} from a SolidWorks <b>top-down</b> <b>design</b> approach.|$|E
5000|$|... #Subtitle level 3: <b>Top-down</b> <b>design</b> {{by large}} {{international}} institutions vs. bottom-up grassroots coalitions ...|$|E
40|$|The <b>top-down</b> {{collaborative}} assembly <b>design</b> {{is a high}} parallel, {{dynamic and}} stochastic process. A concise design process model should be explored for effective process control and the system <b>design</b> of the <b>top-down</b> collaborative assembly <b>design.</b> In this paper the activity characteristics of <b>top-down</b> collaborative assembly <b>design</b> are analyzed, the typical sub-process models of collaborative design activities are constructed using Hierarchical Object-oriented Petri Net (HOOPN). The activity process of the <b>top-down</b> collaborative assembly <b>design</b> is modeled and the system architecture framework {{is built based on}} the activity process model. 1...|$|R
40|$|The {{design of}} a complex {{mechanical}} product is usually a top-down process carried out by different teams or designers that are geographically distributed. A systematical variation propagation mechanism {{is very important to}} fully support such a design process. In this paper, based on the framework for collaborative <b>top-down</b> assembly <b>design</b> previously proposed by the authors, an agent based approach is presented for addressing variation propagation for collaborative <b>top-down</b> assembly <b>design.</b> The approach achieves variation propagation during the collaborative <b>top-down</b> assembly <b>design</b> through the interaction and cooperation of the agents located at the clients and server. To make the variation propagation automated and intelligent, four kinds of variation reasoning including hierarchical variation reasoning, engineering constraint variation reasoning, feature variation reasoning, and assembly constraint variation reasoning are identified, and the corresponding algorithms are developed and utilized. Meanwhile, a distributed assembly model is put forward to effectively support the design variation propagation for the collaborative <b>top-down</b> assembly <b>design.</b> The approach is implemented and a variation propagation example is given. Key Words：Top-down, Collaborative assembly design, Agent, Variation propagatio...|$|R
40|$|This paper {{presents}} a system framework {{to support the}} collaborative <b>top-down</b> assembly <b>design.</b> As the first step, the framework is devised to enable distributed designers to conduct collaborative layout design, 3 D skeleton design and detailed design of a product in a top-down manner in a distributed environment. To effectively support the collaborative <b>top-down</b> assembly <b>design,</b> a multi-resolution and distributed product assembly model is proposed as a product representation in the framework. With {{the help of the}} framework the designers could conduct those <b>design</b> activities of <b>top-down</b> assembly <b>design</b> that need plenty of collaboration such as the collaborative determination of assembly relationship and coupled structural parameters. A variation propagation mechanism is also developed to guarantee the consistency of the distributed assembly model. A preliminary system prototype based on replicated client-server architecture is implemented...|$|R
50|$|<b>Top-down</b> <b>design</b> {{is focused}} on {{high-level}} functional requirements, with relatively less focus on existing implementation technology. A top level spec is repeatedly decomposed into lower level structures and specifications, until the physical implementation layer is reached. The risk of a <b>top-down</b> <b>design</b> {{is that it may}} not take advantage of more efficient applications of current physical technology, due to excessive layers of lower-level abstraction due to following an abstraction path which does not efficiently fit available components e.g. separately specifying sensing, processing, and wireless communications elements even though a suitable component that combines these may be available. The positive value of <b>top-down</b> <b>design</b> is that it preserves a focus on the optimum solution requirements.|$|E
50|$|The {{language}} design focuses strongly on structured programming, and has {{a special}} construction for stepwise refinement, allowing students to focus on <b>top-down</b> <b>design,</b> and bottom-up coding.|$|E
50|$|Lee Felsenstein, a {{computer}} engineer {{who played a}} central role in the development of the personal computer, criticized the centralized, <b>top-down</b> <b>design</b> and distribution of the OLPC.|$|E
50|$|A {{structure}} chart is a <b>top-down</b> modular <b>design</b> tool, constructed of squares representing the different modules in the system, and lines that connect them. The lines represent the connection and or ownership between activities and subactivities {{as they are}} used in organization charts.|$|R
50|$|Hierarchy: Complex {{structures}} can {{be created}} very clearly on several (logic) layers. This facilitates a <b>Top-down</b> and bottom-up <b>design</b> approach.|$|R
40|$|Traditionally, <b>top-down</b> and {{bottom-up}} <b>design</b> {{approaches have}} competed {{with each other}} in Algorithmics and Software Engineering. In the <b>top-down</b> approach, <b>design</b> process starts with specifying the global system state and assuming that each component has global knowledge of the system, as in a centralized approach. The solution is then decentralized by replacing global knowledge with communication. In the bottom-up approach, on the other hand, the design starts with specifying requirements and capabilities of individual components, and the global behavior is said to emerge out of interactions among constituent components and between components and the environment. In this paper we present a comparative study of both approaches with particular emphasis on applications to multi–agent system engineering...|$|R
50|$|Often, the École des Beaux-Arts {{school of}} design {{is said to have}} {{primarily}} promoted <b>top-down</b> <b>design</b> because it taught that an architectural design should begin with a parti, a basic plan drawing of the overall project.|$|E
50|$|During development, the {{programmer}} {{uses the}} interpreter in REPL mode to execute and test each little piece {{as it is}} developed. Most Forth programmers therefore advocate a loose <b>top-down</b> <b>design,</b> and bottom-up development with continuous testing and integration.|$|E
50|$|A part-centric <b>top-down</b> <b>design</b> may {{eliminate}} some of {{the risks}} of <b>top-down</b> <b>design.</b> This starts with a layout model, often a simple 2D sketch defining basic sizes and some major defining parameters, which may include some Industrial design elements. Geometry from this is associatively copied down to the next level, which represents different subsystems of the product. The geometry in the sub-systems is then used to define more detail in levels below. Depending on {{the complexity of the}} product, a number of levels of this assembly are created until the basic definition of components can be identified, such as position and principal dimensions. This information is then associatively copied to component files. In these files the components are detailed; this is where the classic bottom-up assembly starts.|$|E
40|$|To {{accelerate}} the design cycle for analog circuits and mixed-signal systems, we {{have proposed a}} <b>top-down,</b> constraint-driven <b>design</b> methodology [1]. In this paper we present a complete design flow to illustrate this design methodology {{as it applies to}} the design of a second order sigma-delta (S-D) analog-to-digital (A/D) converter. We start from its performance and functional specifications and ending with the testing of the fabricated parts. Experimental results are presented. 1 Introduction As the level of system integration increases, one apparent bottleneck is the design of the analog circuit components. Though these components are often small in area, their design times can be high. To address this problem we have proposed a <b>top-down,</b> constraintdriven <b>design</b> methodology [1], and, with it, have provided a variety of design tools such as behavioral level simulators, optimization tools, and physical layout tools. To show the effectiveness of this methodology, we have undertaken desi [...] ...|$|R
40|$|To {{accelerate}} the design cycle for analog circuits and mixed-signal systems, we {{have proposed a}} <b>top-down,</b> constraint-driven <b>design</b> methodology [1]. In this paper we present a design which demonstrates the two principal advantagesthat this methodologyprovides [...] a high probability for first silicon which meets all specifications and fast design times. We examine the design of three different 10 -bit digital-to-analog (D/A) converters beginning from their performance and functional specifications and ending with the testing of the fabricated parts. Critical technology mismatch information gathered from the testing phase is provided. 1 Introduction As the level of system integration increases, one apparent bottleneck is {{the design of the}} analog circuit components. Though these components are often small in area, their design times can be high. To address this problem we have proposed a <b>top-down,</b> constraintdriven <b>design</b> methodology [1], and with it, have provided a variety of design tools [...] ...|$|R
50|$|Apparitional {{experiences}} have relevance to psychological theories of perception, {{and in particular}} to the distinction between top-down and bottom-up approaches (cf. article on <b>Top-down</b> and bottom-up <b>design).</b> <b>Top-down</b> theories, {{such as that of}} Richard Langton Gregory, who conceives of perception as a process whereby the brain makes a series of hypotheses about the external world, stress the importance of central factors such as memory and expectation in determining the phenomenological content of perception; while the bottom-up approach, exemplified by the work of James J. Gibson, emphasises the role of the external sensory stimulus.|$|R
5000|$|The <b>top-down</b> <b>design</b> {{is usually}} {{separation}} of the program into [...] "vocabularies" [...] that are then used as high-level sets of tools to write the final program. A well-designed Forth program reads like natural language, and implements not just a single solution, but also sets of tools to attack related problems.|$|E
50|$|Following a <b>top-down</b> <b>design,</b> {{the problem}} at hand is reduced into smaller and smaller subproblems, until only simple {{statements}} and control flow constructs remain. Nassi - Shneiderman diagrams reflect this top-down decomposition in a straightforward way, using nested boxes to represent subproblems. Consistent with the philosophy of structured programming, Nassi - Shneiderman diagrams have no representation for a GOTO statement.|$|E
50|$|The {{issue in}} {{hardware}} development {{is most often}} a <b>top-down</b> <b>design</b> problem. This is perceived by the three domains of behaviour, structure, and the layout that goes top-down to more detailed abstraction levels. The designer can select one of the perspectives and then switch from one view to another. Generally, the design process is not following a specific sequence in this diagram.|$|E
40|$|The Interim Service Integrated Services Digital Network (ISDN) Satellite (ISIS) Network Model for Advanced Satellite Designs and Experiments {{describes}} a model suitable for discrete event simulations. A <b>top-down</b> model <b>design</b> uses the Advanced Communications Technology Satellite (ACTS) as its basis. The ISDN modeling abstractions {{are added to}} permit the determination and performance for the NASA Satellite Communications Research (SCAR) Program...|$|R
40|$|Function {{transfer}} based modelling {{techniques are}} applied to the IEEE VHDL language to develop behavioral analogue models. This allows mixed-signal simulations integrated into a <b>top-down</b> ASIC <b>design</b> flow for system designers. An application to a clock module for a DSP-core ASIC, integrating a Phase-Locked Loop, demonstrates the usefulness of such an approach for the validation of large systems containing {{a small portion of}} analogue functionalities...|$|R
40|$|Abstract. According to the {{characteristics}} of the <b>design</b> process of <b>top-down</b> collaborative assembly <b>design,</b> process planning dynamic model based on HOOPN (hierarchical object-oriented Petri-net) is constructed for <b>top-down</b> collaborative assembly <b>design.</b> The outside and inside task dependent relationships among the task groups include parallel, sequence and coupling are implemented. The definitions of attribute for each element and the activation rules are presented for Petri-net. The fuzzy overall evaluation model is applied for risk evaluation of design process, and the local and global risk level is determined. The whole process planning is adjusted and controlled based on special risk decision-making mechanism...|$|R
5000|$|Context effects employ <b>top-down</b> <b>design</b> when {{analyzing}} information. Top down design fuels understanding {{of an image}} by using prior experiences and knowledge to interpret a stimulus. This process helps us analyze familiar scenes and objects when encountering them. [...] During perception of any kind, people generally use either sensory data (bottom-up design) or prior knowledge of the stimulus (<b>top-down</b> <b>design)</b> {{when analyzing}} the stimulus. Individuals generally use both types of processing to examine stimuli. The use of both sensory data and prior knowledge to reach a conclusion is a feature of optimal probabilistic reasoning, known as Bayesian inference; cognitive scientists have shown mathematically how context effects can emerge from the Bayesian inference process. [...] When context effects occur, individuals are using environmental cues perceived while examining the stimuli {{in order to help}} analyze it. In other words, individuals often make relative decisions that are influenced by the environment or previous exposure to objects.|$|E
50|$|As an IBM {{research}} fellow, Mills adapted existing {{ideas from}} engineering {{and computer science}} to software development. These included automata theory, the structured programming theory of Edsger Dijkstra, Robert W. Floyd, and others, and Markov chain-driven software testing. His Cleanroom software development process emphasized <b>top-down</b> <b>design</b> and formal specification. Mills contributed his ideas to the profession in six books and over fifty refereed articles in technical journals.|$|E
5000|$|Skeleton {{programming}} facilitates a <b>top-down</b> <b>design</b> approach, where {{a partially}} functional system with complete high-level structures is designed and coded, and {{this system is}} then progressively expanded {{to fulfill the requirements}} of the project. Program skeletons are also sometimes used for high-level descriptions of algorithms. A program skeleton may also be utilized as a template that reflects syntax and structures commonly used in a wide class of problems.|$|E
40|$|This book {{presents}} {{approaches to}} address key challenges {{based on a}} vehicle level view and with a special emphasis on Drive-by-Wire systems. The design and testing of modern vehicle electronics {{are becoming more and}} more demanding due to increasing interdependencies among components and the safety criticality of tasks. The development towards Drive-by-Wire functionalities in vehicles with multiple actuators for vehicle control further increases the challenge. The book explicitly takes into account the interactions between components  and aims at bridging the gap between the need to generate additional customer benefits and the effort to achieve functional safety. The book follows a twofold approach: on the one side, it presents a toolchain to support efficient further development of novel functionalities for Drive-by-Wire vehicles. The toolchain comprises appropriate software tools and scaled and full-scale experimental vehicles. On the other side, development towards functionally safe and flexible Drive-by-Wire vehicles is addressed by proposing a <b>top-down</b> <b>designed</b> architecture for vehicle electronics that is enabled by suitable mechanisms. The resulting goal achievement with regard to functional safety is evaluated based on a novel hierarchical approach...|$|R
50|$|Minicraft is a 2D <b>top-down</b> action game <b>designed</b> and {{programmed}} by Markus Persson, {{the creator}} of Minecraft, for the Ludum Dare #22, a 48-hour game programming competition. The game was released on December 19, 2011.|$|R
40|$|Based on {{mismatch}} measurements {{performed on}} very different CMOS technologies and large operating temperature range, we propose to model more adequately the mismatch in weak and moderate inversion {{by adding a}} new term related to the mismatch of the body effect factor dependence on the gate voltage. The model is introduced in a <b>top-down</b> analog <b>design</b> methodology, applied to the current mirror case, revealing some nonobvious design rules as well as typical misconceptions. Anglai...|$|R
50|$|Further terminology, used in {{diagrams}} visualizing finite {{parts of}} descendant trees, is explained in Figure 1 {{by means of}} an artificial abstract tree.On the left hand side, a level indicates the basic <b>top-down</b> <b>design</b> of a descendant tree.For concrete trees, such as those in Figure 2, resp. Figure 3, etc., the level is usually replaced by a scale of orders increasing from the top to the bottom.A vertex is capable (or extendable) if it has at least one immediate descendant, otherwise it is terminal (or a leaf).Vertices sharing a common parent are called siblings.|$|E
5000|$|Bottom-up design {{tends to}} focus on the {{capabilities}} of available real-world physical technology, implementing those solutions which this technology is most suited to. When these bottom-up solutions have real-world value, bottom-up design can be much more efficient than <b>top-down</b> <b>design.</b> The risk of bottom-up design is that it very efficiently provides solutions to low-value problems. The focus of bottom-up design is [...] "what can we most efficiently do with this technology?" [...] rather than the focus of top-down which is [...] "What is the most valuable thing to do?" ...|$|E
50|$|A better {{formulation}} {{has been}} produced during the MAAT EU FP7 Project. A new design method that couples the above bottom-up optimization with a preliminary system level <b>top-down</b> <b>design</b> has been formulated. The two step design {{process has been}} motivated by considering that constructal and modular design does not refer to any objective to be reached in the design process. A theoretical formulation has been provided in a recent paper, and applied with success {{to the design of}} a small aircraft, the conceptual design of innovative commuter aircraft, the design ofa new entropic wall, and an innovative off-road vehicle designed for energy efficiency.|$|E
40|$|This paper {{presents}} {{a discussion of}} a <b>top-down</b> VLSI <b>design</b> approach which involves system level performance modeling, block level cycle based simulation, RTL/VHDL simulation and gate level emulation. An MPEG- 2 Audio/Video decoder design example illustrates {{the use of this}} top-down approach. Most of the discussion concentrates on the concept of block level cycle based (BLCB) simulation. HW/SW co-design also {{played an important role in}} this work and our approach towards such co-design is discusse...|$|R
50|$|The {{research}} framework {{introduced by}} the neuroheuristic paradigm appears as an essential step for {{the investigation of the}} information processing effected by the brain because it is the outcome of nature and nurture, at the crossing of <b>top-down</b> and bottom-up <b>design.</b>|$|R
50|$|The {{building}} {{was designed by}} the Gollins Melvin Ward Partnership in the international style: the stark rectilinear geometry and detailing of the {{building was}} influenced by Ludwig Mies van der Rohe and is somewhat reminiscent of his Seagram Building in New York City. It was built by Taylor Woodrow Construction as one of only four high-rise buildings in London using a <b>top-down</b> engineering <b>design</b> where the lower office floors are suspended from above rather than supported from below.|$|R
