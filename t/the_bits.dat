2365|10000|Public
5|$|Most of <b>the</b> <b>bits</b> encode UTC time, day of year, year of century, and UT1 {{correction}} up to ±0.7s.|$|E
5|$|The {{algorithm}} {{accepts a}} 32-bit floating-point number as the input and stores a halved value for later use. Then, treating <b>the</b> <b>bits</b> representing the floating-point number as a 32-bit integer, a logical shift right by one bit is performed {{and the result}} subtracted from the magic number 0x5F3759DF. This is the first approximation of the inverse square root of the input. Treating <b>the</b> <b>bits</b> again as a floating-point number, it runs one iteration of Newton's method, yielding a more precise approximation.|$|E
5|$|The {{encryption}} {{resembles the}} RSA algorithm. This algorithm encodes data in 3-byte blocks. First, the each byte is permuted through an 8-position permutation, then <b>the</b> <b>bits</b> are {{split into two}} 12-bit integers (by taking the low 4 bits of the second byte and the 8 bits of the first byte as the first 12-bit integer, and the 8 bits of the third byte and the 4 high bits of the second integer as the second 12-bit integer). Each is individually encrypted by taking them to the 3491st power, mod 4097; <b>the</b> <b>bits</b> are then reassembled into 3 bytes. The encrypted text is then stored in a string variable {{as part of the}} program. To shroud the would be visible and noticeable text it is compressed with the simple Lzw before final storage. As the Macintosh Common Lisp compiler compresses the main program code into the executable, this was not that necessary.|$|E
25|$|The {{center of}} <b>the</b> <b>bit</b> is a tapered screw thread. This screws {{into the wood}} as <b>the</b> <b>bit</b> is turned, and pulls <b>the</b> <b>bit</b> into <b>the</b> wood. There {{is no need for}} any force to push <b>the</b> <b>bit</b> into <b>the</b> workpiece, only the torque to turn <b>the</b> <b>bit.</b> This is ideal for a bit for a hand tool. The radial cutting edges remove a slice of wood of {{thickness}} equal to the pitch of the central screw for each rotation of <b>the</b> <b>bit.</b> To pull <b>the</b> <b>bit</b> from <b>the</b> hole, either the female thread in the wood workpiece must be stripped, or the rotation of <b>the</b> <b>bit</b> must be reversed.|$|R
5000|$|<b>The</b> eight's <b>bit</b> is {{followed}} by <b>the</b> four's <b>bit,</b> then <b>the</b> two's <b>bit,</b> then <b>the</b> one's <b>bit.</b> <b>The</b> fractional <b>bits</b> continue <b>the</b> pattern set by <b>the</b> integer <b>bits.</b> <b>The</b> next <b>bit</b> is <b>the</b> half's <b>bit,</b> then <b>the</b> quarter's <b>bit,</b> then <b>the</b> ⅛'s <b>bit,</b> and so on. For example:This form of encoding cannot represent some values in binary. For example, the fraction , 0.2 in decimal, the closest approximations would be as follows: ...|$|R
50|$|<b>The</b> <b>bit</b> error {{probability}} pe is the expectation value of <b>the</b> <b>bit</b> error ratio. <b>The</b> <b>bit</b> error ratio {{can be considered}} as an approximate estimate of <b>the</b> <b>bit</b> {{error probability}}. This estimate is accurate for a long time interval and a high number of bit errors.|$|R
5|$|The rough idea {{of these}} inapproximability results is {{to form a}} graph that {{represents}} a probabilistically checkable proof system for an NP-complete problem such as the Boolean satisfiability problem. In a probabilistically checkable proof system, a proof is represented as a sequence of bits. An instance of the satisfiability problem should have a valid proof {{if and only if}} it is satisfiable. The proof is checked by an algorithm that, after a polynomial-time computation on the input to the satisfiability problem, chooses to examine a small number of randomly chosen positions of the proof string. Depending on what values are found at that sample of bits, the checker will either accept or reject the proof, without looking at the rest of <b>the</b> <b>bits.</b> False negatives are not allowed: a valid proof must always be accepted. However, an invalid proof may sometimes mistakenly be accepted. For every invalid proof, the probability that the checker will accept it must be low.|$|E
25|$|<b>The</b> <b>bits</b> are indexed {{with the}} least {{significant}} bit (LSB) as 0.|$|E
25|$|<b>The</b> <b>bits</b> in the LFSR {{state that}} {{influence}} the input are called taps.|$|E
40|$|This device takes {{advantage}} of the centrifugal forces that are generated when a coring bit is rotated, and a granular sample is entered into <b>the</b> <b>bit</b> while it is spinning, making it adhere to the internal wall of <b>the</b> <b>bit,</b> where it compacts itself into the wall of <b>the</b> <b>bit.</b> <b>The</b> <b>bit</b> can be specially designed to increase the effectiveness of regolith capturing while turning and penetrating <b>the</b> subsurface. <b>The</b> <b>bit</b> teeth can be oriented such that they direct the regolith toward <b>the</b> <b>bit</b> axis during <b>the</b> rotation of <b>the</b> <b>bit.</b> <b>The</b> <b>bit</b> can be designed with an internal flute that directs the regolith upward inside <b>the</b> <b>bit.</b> <b>The</b> use of both the teeth and flute can be implemented in <b>the</b> same <b>bit.</b> <b>The</b> <b>bit</b> can also be designed with an internal spiral into which the various particles wedge. In another implementation, <b>the</b> <b>bit</b> can be designed to collect regolith primarily from a specific depth. For that implementation, <b>the</b> <b>bit</b> can be designed such that when turning one way, the teeth guide the regolith outward of <b>the</b> <b>bit</b> and when turning in the opposite direction, the teeth will guide the regolith inward into <b>the</b> <b>bit</b> internal section. This mechanism can be implemented with or without an internal flute. The device is based on the use of a spinning coring bit (hollow interior) as a means of retaining granular sample, and the acquisition is done by inserting <b>the</b> <b>bit</b> into <b>the</b> subsurface of a regolith, soil, or powder. To demonstrate the concept, a commercial drill and a coring <b>bit</b> were used. <b>The</b> <b>bit</b> was turned and inserted into the soil that was contained in a bucket. While spinning <b>the</b> <b>bit</b> (at speeds of 600 to 700 RPM), the drill was lifted and the soil was retained inside <b>the</b> <b>bit.</b> To prove this point, the drill was turned horizontally, and the acquired soil was still inside <b>the</b> <b>bit.</b> <b>The</b> basic theory behind the process of retaining unconsolidated mass that can be acquired by the centrifugal forces of <b>the</b> <b>bit</b> is determined by noting that in order to stay inside the interior of <b>the</b> <b>bit,</b> <b>the</b> frictional force must be greater than the weight of <b>the</b> sample. <b>The</b> <b>bit</b> can be designed with an internal sleeve to serve as a container for granular samples. This tube-shaped component can be extracted upon completion of the sampling, and the bottom can be capped by placing <b>the</b> <b>bit</b> onto a corklike component. Then, upon removal of the internal tube, the top section can be sealed. The novel features of this device are: center dot A mechanism of acquiring and retaining granular samples using a coring bit without a closed door. center dot An acquisition bit that has internal structure such as a waffle pattern for compartmentalizing or helical internal flute to propel the sample inside <b>the</b> <b>bit</b> and help in acquiring and retaining granular samples. center dot A bit with an internal spiral into which the various particles wedge. center dot A design that provides a method of testing frictional properties of the granular samples and potentially segregating particles based on size and density. A controlled acceleration or deceleration may be used to drop the least-frictional particles or to eventually shear the unconsolidated material near <b>the</b> <b>bit</b> center...|$|R
2500|$|<b>The</b> <b>bit</b> {{positions}} {{that affect the}} next state are called the taps. In the diagram the taps are [...] <b>The</b> rightmost <b>bit</b> of <b>the</b> LFSR is called <b>the</b> output <b>bit.</b> <b>The</b> taps are XOR'd sequentially with <b>the</b> output <b>bit</b> and then fed back into <b>the</b> leftmost <b>bit.</b> <b>The</b> sequence of <b>bits</b> in <b>the</b> rightmost position is called the output stream.|$|R
30|$|If we take <b>the</b> maximum <b>bit</b> rate needed {{into account}} and also {{consider}} that <b>the</b> <b>bit</b> rate in each recursion {{is not allowed}} to exceed <b>the</b> maximum <b>bit</b> rate, we can change <b>the</b> <b>bit</b> rate while encoding. This causes less redundancy to be added to <b>the</b> <b>bit</b> stream and higher security. We describe this in more details in Section 3.|$|R
25|$|<b>The</b> <b>bits</b> are M9 through M0, {{presented}} on address lines A9 through A0 during a load mode register cycle.|$|E
25|$|In {{the uniform}} {{crossover}} scheme (UX) individual bits in the string are compared between two parents. <b>The</b> <b>bits</b> are swapped with a fixed probability, typically 0.5.|$|E
25|$|With {{only one}} exception, {{starting}} with any number in two's-complement representation, if all <b>the</b> <b>bits</b> are flipped and 1 added, the two's-complement {{representation of the}} negative of that number is obtained. Positive 12 becomes negative 12, positive 5 becomes negative 5, zero becomes zero(+overflow), etc.|$|E
50|$|<b>The</b> <b>bit</b> {{positions}} {{that affect the}} next state are called the taps. In the diagram the taps are 16,14,13,11. <b>The</b> rightmost <b>bit</b> of <b>the</b> LFSR is called <b>the</b> output <b>bit.</b> <b>The</b> taps are XOR'd sequentially with <b>the</b> output <b>bit</b> and then fed back into <b>the</b> leftmost <b>bit.</b> <b>The</b> sequence of <b>bits</b> in <b>the</b> rightmost position is called the output stream.|$|R
5000|$|The phrases [...] "on the bit", [...] "behind the bit" [...] and [...] "above the bit" [...] are equestrian terms used to {{describe}} a horse's posture relative to the reins and <b>the</b> bridle <b>bit.</b> A position on <b>the</b> <b>bit</b> is submissive to the rider's rein aids, given through <b>the</b> <b>bit.</b> When a horse is behind <b>the</b> <b>bit,</b> <b>the</b> head is tucked too far down and rearward. If above <b>the</b> <b>bit,</b> then <b>the</b> head is too high.|$|R
5000|$|If <b>the</b> leftmost <b>bit</b> is {{considered}} <b>the</b> 1st <b>bit,</b> then <b>the</b> 24th <b>bit</b> is zero and <b>the</b> 25th <b>bit</b> is 1; thus, in rounding to 24 bits, let's attribute to <b>the</b> 24th <b>bit</b> <b>the</b> {{value of the}} 25th, yielding: ...|$|R
25|$|Many users (hobbyists, graphic artists, architects, students, and others) may be {{familiar}} with collets as the part of an X-Acto or equivalent knife that holds the blade. Another common example is the collet that holds <b>the</b> <b>bits</b> of a Dremel or equivalent rotary file.|$|E
25|$|<b>The</b> <b>bits</b> of batter (known as tenkasu) are scooped {{out between}} batches of tempura, {{so they do}} not burn and leave a bad flavor in the oil. A small mesh scoop (Ami jakushi) is used for this purpose. Tenkasu are often {{reserved}} as ingredients in other dishes or as a topping.|$|E
25|$|In {{the half}} uniform {{crossover}} scheme (HUX), exactly {{half of the}} nonmatching bits are swapped. Thus first the Hamming distance (the number of differing bits) is calculated. This number is divided by two. The resulting number is how many of <b>the</b> <b>bits</b> that do not match between the two parents will be swapped.|$|E
50|$|The diagram to {{the right}} shows <b>the</b> <b>bit</b> error (shown in blue text) and the bad parity created (shown in red text) in the red and green circles. <b>The</b> <b>bit</b> error can be {{detected}} by computing the parity of the red, green, and blue circles. If a bad parity is detected then <b>the</b> data <b>bit</b> that overlaps only the bad parity circles is <b>the</b> <b>bit</b> with <b>the</b> error. In the above example, the red and green circles have bad parity so <b>the</b> <b>bit</b> corresponding to <b>the</b> intersection of red and green but not blue indicates <b>the</b> errored <b>bit.</b>|$|R
5000|$|The phrase [...] "take <b>the</b> <b>bit</b> in his/her teeth" [...] is a colloquial {{reference}} to bolting. However, in reality, a bolting horse usually {{does not take}} <b>the</b> <b>bit</b> in its teeth, as <b>the</b> <b>bit</b> rests on <b>the</b> gums in an interdental space {{where there are no}} teeth. What a horse actually does is to raise its head and tighten its jaw in a manner that allows it to ignore bit pressure. While a horse can move <b>the</b> <b>bit</b> to its molars and chew on it, this is not generally how a horse evades <b>the</b> <b>bit</b> when bolting.|$|R
40|$|Case Presentation This adult {{was working}} on a ladder during a home {{restoration}} project. She placed <b>the</b> <b>bit</b> in her mouth while changing <b>the</b> screwdriver <b>bit,</b> then fell from the ladder and inadvertently swallowed <b>the</b> <b>bit.</b> In <b>the</b> emergency room, her review of systems and laboratories were unremarkable. Imaging revealed <b>the</b> <b>bit</b> to be within the duodenal lumen and after four days of serial xrays, <b>the</b> <b>bit</b> was retrieved by snare colonoscopy at the ileocecal junction. The patient remained asymptomatic and had no complications...|$|R
25|$|Birla Institute of Technology & Science, Pilani - Hyderabad Campus (shortened to BITS Pilani, Hyderabad Campus or BPHC) is a {{technical}} and science institute {{for higher education}} in India, located in Hyderabad, Telangana, India. One of the 4 campuses of <b>the</b> <b>BITS</b> Pilani university, it commenced in 2008 with the first batch graduating in 2012.|$|E
25|$|Housing {{more than}} 30,000 books along with {{thousands}} of e-journals, periodicals and e-books, the Central Library, located in the Academic Block, is a fully air-conditioned two-storey building with reading areas and Wi-fi facilitated internet connectivity {{for the use of}} students, faculty and staff of <b>the</b> <b>BITS</b> Pilani community and their immediate affiliates.|$|E
25|$|Boolean {{operations}} {{are used in}} digital logic to combine <b>the</b> <b>bits</b> carried on individual wires, thereby interpreting them over {0,1}. When a vector of n identical binary gates are used to combine two bit vectors each of n bits, the individual bit operations can be understood collectively as a single operation on values from a Boolean algebra with 2n elements.|$|E
30|$|The {{final output}} y is {{obtained}} after the calculation {{in each layer}} of the proposed structure. The output y represents the increase/decrease factor of <b>the</b> segment <b>bit</b> rate. Therefore, <b>the</b> next <b>bit</b> rate is <b>the</b> <b>bit</b> rate closest to Qlast[*]+[*]y, where Qlast represents <b>the</b> <b>bit</b> rate of last segment.|$|R
5000|$|What it is: The {{center of}} the {{mouthpiece}} has short [...] "keys" [...] extending from it, which are movable on <b>the</b> <b>bit.</b> <b>The</b> keys rest on the tongue, below <b>the</b> <b>bit.</b>|$|R
30|$|After {{reaching}} the desired coring depth, we disconnect the socket (Fig.  2 g) from the square end of <b>the</b> <b>bit</b> and attach <b>the</b> {{handle of the}} increment borer. After manually retrieving the sample core, we connect the smart increment borer (Smartborer) again to <b>the</b> <b>bit</b> end. By simply reversing the rotation setting of the electric wrench, we can rotate <b>the</b> <b>bit</b> counter-clockwise and extract <b>the</b> <b>bit</b> out from <b>the</b> stem. We needed lower torque at bit extraction than insertion.|$|R
25|$|Named {{after the}} French {{mathematician}} Évariste Galois, an LFSR in Galois configuration, {{which is also}} known as modular, internal XORs, or one-to-many LFSR, is an alternate structure that can generate the same output stream as a conventional LFSR (but offset in time). In the Galois configuration, when the system is clocked, bits that are not taps are shifted one position to the right unchanged. The taps, on the other hand, are XORed with the output bit before they are stored in the next position. The new output bit is the next input bit. The effect of this is that when the output bit is zero, all <b>the</b> <b>bits</b> in the register shift to the right unchanged, and the input bit becomes zero. When the output bit is one, <b>the</b> <b>bits</b> in the tap positions all flip (if they are 0, they become 1, and if they are 1, they become 0), and then the entire register is shifted to the right and the input bit becomes 1.|$|E
25|$|Out {{of all the}} campuses of <b>the</b> <b>BITS</b> Pilani university, the Hyderabad {{campus is}} the one which has taken charge of {{developing}} a course for Electronics and Communications Engineering. This {{is because of the}} campus's presence in Hyderabad, which is notable for a large talent pool in this area. The Goa campus started offering Electronics & Communication Engineering from the academic year 2017-18.|$|E
25|$|BITS {{transfers}} {{files on}} behalf of requesting applications asynchronously, i.e., once an application requests <b>the</b> <b>BITS</b> service for a transfer, it will be free to do any other task, or even terminate. The transfer will continue in the background {{as long as the}} network connection is there and the job owner is logged in. BITS jobs do not transfer when the job owner is not signed in.|$|E
3000|$|... {{which is}} {{independent}} of <b>the</b> <b>bit</b> index n, so that <b>the</b> <b>bit</b> index can be dropped. Hence, the same biased distribution {{can be used to}} reduce the variance of <b>the</b> individual <b>bit</b> error probability estimates [...]...|$|R
5000|$|If <b>the</b> 2 <b>bits</b> after <b>the</b> sign <b>bit</b> are [...] "00", [...] "01", or [...] "10", {{then the}} {{exponent}} field consists of <b>the</b> 8 <b>bits</b> following <b>the</b> sign <b>bit</b> (<b>the</b> 2 <b>bits</b> mentioned plus 6 bits of [...] "exponent continuation field"), and the significand is <b>the</b> remaining 23 <b>bits,</b> with an implicit leading 0 bit, shown here in parentheses: ...|$|R
5000|$|<b>The</b> <b>BIT</b> {{predicate}} {{is often}} {{examined in the}} context of first-order logic, where we can examine the system resulting from adding <b>the</b> <b>BIT</b> predicate to first-order logic. In descriptive complexity, the complexity class FO + BIT resulting from adding <b>the</b> <b>BIT</b> predicate to FO results in a more robust complexity class. [...] The class FO + BIT, of first-order logic with <b>the</b> <b>BIT</b> predicate, is <b>the</b> same as the class FO + PLUS + TIMES, of first-order logic with addition and multiplication predicates.|$|R
