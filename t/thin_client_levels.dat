0|1317|Public
50|$|A <b>thin</b> <b>client</b> is {{a minimal}} sort of <b>client.</b> <b>Thin</b> <b>clients</b> use the {{resources}} of the host computer. A <b>thin</b> <b>client</b> generally only presents processed data provided by an application server, which performs the bulk of any required data processing. A device using web application (such as Office Web Apps) is a <b>thin</b> <b>client.</b>|$|R
50|$|The Smart <b>Thin</b> <b>Client</b> {{works by}} {{connecting}} to an Application Server which generally {{does all the}} processing {{on behalf of the}} Smart <b>Thin</b> <b>Client,</b> meaning the <b>thin</b> <b>client</b> only needs to be responsible for displaying forms and taking input. This means the computer running the <b>thin</b> <b>client</b> {{does not have to be}} a very powerful computer, and it does not require a fast network connection as it is not loading data from the database - JADE <b>thin</b> <b>clients</b> are often run over a dial-up connection. This is the reason they are called <b>thin</b> <b>clients,</b> as there is not a heavy requirement on computational power to run these clients.|$|R
5000|$|SUSE Linux Enterprise <b>Thin</b> <b>Client</b> (SLETC) is a {{modified}} version of SLED targeted at <b>thin</b> <b>client</b> terminals.|$|R
40|$|<b>Thin</b> <b>Client</b> {{technology}} boasts {{an impressive}} range of financial, technical and administrative benefits. Combined with virtualisation technology, higher bandwidth availability and cheaper high performance processors, {{many believe that}} <b>Thin</b> <b>Clients</b> have come of age. But despite {{a growing body of}} literature documenting successful <b>Thin</b> <b>Client</b> deployments there remains an undercurrent of concern regarding user acceptance of this technology and a belief that greater efforts are required to understand how to integrate <b>Thin</b> <b>Clients</b> into existing, predominantly PC-based, deployments. It would be more accurate to state that the challenge facing the acceptance of <b>Thin</b> <b>Clients</b> is a combination of architectural design and integration strategy rather than a purely technical issue. Careful selection of services to be offered over <b>Thin</b> <b>Clients</b> is essential to their acceptance. Through an evolution of three case studies the user acceptance issues were reviewed and resolved resulting in a 92 % acceptance rate of the final <b>Thin</b> <b>Client</b> deployment. No significant bias was evident in our comparison of user attitudes towards desktop services delivered over PCs and <b>Thin</b> <b>Clients...</b>|$|R
50|$|Thinvent is {{a company}} {{creating}} Linux based firmware for <b>thin</b> <b>clients.</b> The company was founded in 2007. Thinvent's Thinux firmware is bundled by major manufacturers like VXL and HP with their <b>thin</b> <b>clients.</b> Thinvent also manufactures its own range of <b>thin</b> <b>clients,</b> called MicroClients.|$|R
50|$|Lineo was a <b>thin</b> <b>client</b> and {{embedded}} systems company {{spun out of}} Caldera <b>Thin</b> <b>Clients,</b> on 20 July 1999.|$|R
50|$|T50 - Compact, {{economical}} <b>thin</b> <b>client</b> running Ubuntu Linux operating system. Sets a new price/performance {{standard for}} <b>thin</b> <b>clients.</b>|$|R
5000|$|Browser access via kiosks and <b>thin</b> <b>clients</b> access. <b>Thin</b> <b>client</b> {{firmware}} for CMS {{has been}} specially developed by Thinvent Technologies.|$|R
50|$|On November 17, 2009, DisplayLink {{announced}} their first <b>Thin</b> <b>Client</b> product {{based on their}} USB 2.0 virtual graphics technology, designed for Microsoft Windows MultiPoint Server. <b>Thin</b> <b>client</b> manufacturer HP {{was the first to}} announce a product based on DisplayLink USB Graphics technology with the launch of the t100 <b>Thin</b> <b>Client.</b>|$|R
40|$|This thesis {{focuses on}} {{designing}} {{and developing a}} centralized management and configuration solution for the <b>thin</b> <b>clients</b> offered by the OldanyGroup s. r. o. company. The purpose of this application is to simplify the <b>thin</b> <b>client</b> administration and control for customers {{as well as to}} improve the competitiveness of the whole <b>thin</b> <b>client</b> solution offered by the company...|$|R
50|$|In addition, Uniface Anywhere (formerly Uniface JTi or Java <b>Thin</b> <b>Client</b> Interface) {{can deliver}} client/server Uniface {{applications}} to any computer {{connected to the}} Internet as a <b>thin</b> <b>client</b> solution.|$|R
40|$|Abstract: This paper {{explores the}} issues and the {{techniques}} of enabling multimedia applications for the <b>thin</b> <b>client</b> computing. A prototype of a video communication system based on H. 323 family of ITU-T recommendations is used to demonstrate the support of multimedia applications with a terminal server and <b>thin</b> <b>clients</b> such as Windows-based terminals. The studies on the network applications over <b>thin</b> <b>clients</b> are composed of two parts: (1) the collaborative client–server conference system and (2) the universal plug-in architecture. With the proposed architecture, an application of multi-user audio/video conference system is devised for illustrative purposes. The universal plug-in technique is devised to shift jobs from <b>thin</b> <b>clients</b> to a supporting server, thus reducing the computing overhead required by the clients. The processed result at the supporting server is transcoded to a pre-defined universal format and then {{sent back to the}} <b>thin</b> <b>client.</b> This plug-in architecture is implemented and empirically evaluated. Key Words: <b>thin</b> <b>client</b> computing, resource sharing, universal plug-in. 1...|$|R
50|$|Neoware was {{a company}} that {{manufactured}} and marketed <b>thin</b> <b>clients.</b> It also developed and marketed enterprise software, <b>thin</b> <b>client</b> appliances, and related services aimed at reducing the TCO of IT infrastructure.|$|R
50|$|In 2011, IGEL Technology {{commissioned}} {{a study from}} Faunhofer on the ecological impact of <b>thin</b> <b>clients</b> as compared to PCs. The study found that under equivalent usage, a <b>thin</b> <b>client</b> combined with a terminal server causes around 63% lower greenhouse gas emissions than a comparable desktop PC. A <b>thin</b> <b>client</b> combined with a desktop virtualization solution causes 30-42% lower greenhouse gas emissions than a comparable PC.|$|R
50|$|IGEL Technology’s product {{portfolio}} of Zero (IZ) Clients and Universal Desktop (UD) <b>thin</b> <b>clients</b> includes both traditional desktop clients and integrated LCD <b>thin</b> <b>client</b> units equipped with either Linux or Microsoft Windows operating systems.|$|R
25|$|Caldera {{was one of}} {{the major}} {{distributors}} of Linux between 1994 and 1998. In August 1998, the company split into Caldera Systems and Caldera <b>Thin</b> <b>Clients,</b> with Caldera Systems taking over the Linux systems business and Caldera <b>Thin</b> <b>Clients</b> concentrating on the <b>Thin</b> <b>Clients</b> and embedded business. The parent and shell company Caldera, Inc. ceased to exist in 2000 after a settlement with Microsoft in the Caldera v. Microsoft lawsuit.|$|R
50|$|In November 2007, {{the company}} won Europe's largest <b>Thin</b> <b>client</b> tender thus far, to supply 20,000 <b>Thin</b> <b>client</b> PC's and {{management}} software to RZF, the tax {{authority of the}} State of North Rhine-Westphalia in Germany.|$|R
40|$|<b>Thin</b> <b>Client</b> systems provide {{affordable}} solution in environments where little computation power is needed, such as academic institutes, and small and medium businesses. Existing open source <b>Thin</b> <b>Client</b> systems are however not scalable {{and have the}} server as the single point of failure. In this paper, we present the design and implementation of a server cluster backend which makes the <b>Thin</b> <b>Client</b> solution highly available and scalable. We have used LTSP (Linux Terminal Server Project) <b>Thin</b> <b>Clients</b> for our implementation but our design is generic and {{can be applied to}} other systems as well. Our design goals are to use open source software and to keep hardware cost low...|$|R
50|$|One {{common use}} of AnywhereTS is {{recycling}} old computers into <b>thin</b> <b>clients.</b> The modest hardware requirements (Pentium II with 32 MB RAM) {{have made it}} possible even for many organizations in developing countries to convert PCs to <b>thin</b> <b>clients.</b>|$|R
40|$|The <b>thin</b> <b>client</b> {{model is}} uniquely suited for lowbandwidth mobile environments, where resource-poor devices {{may need to}} access {{critical}} applications over wireless networks. In this paper, we argue for the significant advantages of using <b>thin</b> <b>clients,</b> {{and in the same}} time point to how high network latency could limit its utility. We introduce the concept of localization as an optimization approach to reduce the ill effect of high latency on <b>thin</b> <b>client</b> performance, especially in active media applications. We present our localization approach and algorithm, and show the results of four experimental case studies that quantify the benefit of localization, and the potential success of using <b>thin</b> <b>clients</b> in high latency wireless networks...|$|R
40|$|<b>Thin</b> <b>client</b> {{computing}} trades {{local processing}} for network bandwidth consumption by offloading application logic to remote servers. User input and display updates are exchanged between client and server through a <b>thin</b> <b>client</b> protocol. This <b>thin</b> <b>client</b> protocol traffic {{can lead to}} a significantly higher power consumption of the radio interface of the wireless device. In this contribution, we present a cross-layer algorithm that exploits <b>thin</b> <b>client</b> protocol layer information to determine intervals where no traffic from the server is expected. During these intervals, the wireless network interface card (WNIC) is instructed to enter the energy conserving sleep mode. Using this algorithm for a remote text editor, WNIC energy consumption reductions of 21 - 52 % can be achieved...|$|R
50|$|Another {{possible}} {{approach to}} limiting {{the consequences of}} laptop theft is to issue <b>thin</b> <b>client</b> devices to field employees instead of conventional laptops, so that all data will reside on the server and therefore may be less liable to loss or compromise. If a <b>thin</b> <b>client</b> is lost or stolen, it can easily and inexpensively be replaced. However, a <b>thin</b> <b>client</b> depends on network access to the server, which is not available aboard airliners or any other location without network access.|$|R
5000|$|In November 1995, Citrix and Wyse {{shared a}} {{booth at the}} Comdex tradeshow. Wyse {{introduced}} the Winterm windows terminal (now {{referred to as a}} <b>thin</b> <b>client)</b> models 2000 and 2500. Citrix introduced WinFrame, the Windows NT-based “Windows mainframe” software it connected to. At the show, the Wyse Winterm was awarded the “Best of Comdex” award. [...] Later, Wyse secured a patent (# 5918039) for the <b>thin</b> <b>client</b> design. In 1997, Microsoft released Windows NT Terminal Service Edition, which supported the Wyse <b>thin</b> <b>clients.</b>|$|R
40|$|This {{bachelor}} thesis {{deals with}} designing of the hardware configuration and the software equipment {{of a new}} <b>thin</b> <b>client</b> device, which is designated to effectively replace the foreign-made <b>thin</b> <b>clients</b> in OldanyGroup company’s product offering. The design also includes development of support programs and utilities...|$|R
40|$|The key {{unification}} of e-business and information retrieval systems is a structured quagmire. Given {{the current status}} of psychoacoustic technology, steganographers obviously desire the investigation of <b>thin</b> <b>clients.</b> We probe how simulated annealing [?] {{can be applied to the}} deployment of <b>thin</b> <b>clients.</b> I...|$|R
50|$|<b>Thin</b> <b>clients</b> {{have their}} roots in {{multi-user}} systems, traditionally mainframes accessed by some sort of terminal computer. As computer graphics matured, these terminals transitioned from providing a command-line interface to a full graphical user interface, as is common on modern advanced <b>thin</b> <b>clients.</b> The prototypical multiuser environment along these lines, Unix, began to support fully graphical X terminals, i.e., devices running display server software, from about 1984. X terminals remained relatively popular even after the arrival of other <b>thin</b> <b>clients</b> in the mid-late 1990s. Modern Unix derivatives like BSD and Linux continue {{the tradition of the}} multi-user, remote display/input session. Typically, X software is not made available on non-X-based <b>thin</b> <b>clients,</b> although no technical reason for this exclusion would prevent it.|$|R
5000|$|Major {{corporations}} tend to instead implement <b>thin</b> <b>clients</b> (using Microsoft Windows Terminal Server {{or other}} such software), since much lower specification hardware {{can be used}} for the client (which essentially acts as a simple [...] "window" [...] into the central server which is actually running the users operating system as a login session). Of course, diskless nodes can also be used as <b>thin</b> <b>clients.</b> Moreover, <b>thin</b> <b>client</b> computers are increasing in power {{to the point where they}} are becoming suitable as fully-fledged diskless workstations for some applications.|$|R
5000|$|... open ThinClient {{provides}} a comprehensive Java based GUI which enables administrators to manage {{all aspects of}} the <b>thin</b> <b>clients</b> in their network.On top of that it makes the integration of LDAP or MS ADS possible. openThinClient differs from other <b>thin</b> <b>client</b> solutions in the following points: ...|$|R
50|$|Diskless nodes {{share these}} {{advantages}} with <b>thin</b> <b>clients.</b>|$|R
50|$|A {{collective}} term encompassing both <b>thin</b> <b>client</b> computing, and its technological predecessor, text terminals (which are text-only), is centralized computing. <b>Thin</b> <b>clients</b> and text terminals can both require powerful central processing {{facilities in the}} servers, in order to perform all significant processing tasks {{for all of the}} clients.|$|R
40|$|This survey {{examines}} some of {{the leading}} commercial Virtualisation and <b>Thin</b> <b>Client</b> technologies. Reference is made {{to a number of}} academic research sources and to prominent industry specialists and commentators. A basic virtualisation Laboratory model is assembled to demonstrate fundamental <b>Thin</b> <b>Client</b> operations and to clarify potential problem areas...|$|R
50|$|Thinc is a <b>thin</b> <b>client</b> protcol, {{currently}} at the research stage. Thinc {{is capable of}} playing full screen video and sound remotely which is notably a difficult problem for <b>thin</b> <b>client</b> protocols. There is a working VMware appliance available which runs Debian Sid. The appliance also works in VirtualBox.|$|R
50|$|Peripheral support Diskless nodes are {{typically}} ordinary personal computers or workstations with no hard drives supplied, {{which means the}} usual large variety of peripherals can be added. By contrast, <b>thin</b> <b>clients</b> {{are typically}} very small, sealed boxes with no possibility for internal expansion, and limited or non-existent possibility for external expansion. Even if e.g. a USB device can be physically attached to a <b>thin</b> <b>client,</b> the <b>thin</b> <b>client</b> software might not support peripherals beyond the basic input and output devices - for example, {{it may not be}} compatible with graphics tablets, digital cameras or scanners.|$|R
5000|$|<b>Thin</b> <b>client</b> {{hardware}} generally {{consists of}} a computer terminal which provides I/O for a keyboard, mouse, monitor, jacks for sound peripherals, and open ports for USB devices, e.g. printer, flash drive, webcam, card reader, smartphone, etc. Some <b>thin</b> <b>clients</b> include legacy serial and/or parallel ports to support older devices such as receipt printers, scales, time clocks, etc. <b>Thin</b> <b>client</b> software typically {{consists of a}} GUI (graphical user interface), cloud access agents (e.g. RDP, ICA, PCoIP), a local web browser, terminal emulations (in some cases), and a basic set of local utilities.|$|R
40|$|In a <b>thin</b> <b>client</b> {{computing}} environment, applications run on server {{farms and}} are accessed through <b>thin</b> <b>client</b> protocols like Remote Frame Buffer (RFB), or Remote Desktop Protocol (RDP). Although they {{work well in}} high and stable bandwidth networks, <b>thin</b> <b>client</b> protocols require some modifications {{to adapt to the}} varying characteristics of wireless networks and to reduce the energy consumption of <b>thin</b> <b>client</b> mobile devices. In this paper we present both upstream and downstream adaptive protocol optimizations. In the upstream direction, user events are buffered to reduce packetization overhead. In the downstream direction an adaptive scheduling-based transmission pattern is adopted. Our solution shows we can reduce the bandwidth consumption while preserving the Quality of Experience. Those adaptive mechanisms were developed as part of MobiThin FP 7 -funded European project...|$|R
5000|$|... ・ExpEther <b>Client</b> (CPU less <b>thin</b> <b>client</b> {{connected}} through ExpEther) ...|$|R
