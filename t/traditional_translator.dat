0|15|Public
50|$|In {{the early}} 2000s, options for machine {{translation}} between spoken and signed languages were severely limited. It {{was a common}} belief that deaf individuals could use <b>traditional</b> <b>translators.</b> However, stress, intonation, pitch, and timing are conveyed much differently in spoken languages compared to signed languages. Therefore, a deaf individual may misinterpret or become confused {{about the meaning of}} written text that is based on a spoken language.|$|R
5000|$|RFC 3022 Traditional IP Network Address <b>Translator</b> (<b>Traditional</b> NAT) ...|$|R
5000|$|RFC 3022 [...] - [...] "Traditional IP Network Address <b>Translator</b> (<b>Traditional</b> NAT)" ...|$|R
5000|$|Carter, Steven D., {{editor and}} <b>translator,</b> <b>Traditional</b> Japanese Poetry: An Anthology. Stanford University Press, 1991 ...|$|R
5000|$|An {{advanced}} datatype system, {{independent of}} <b>traditional</b> datatypes. MyHDL's <b>translator</b> tool automatically writes conversion functions when the target language requires them.|$|R
5000|$|Karen Brazell (Editor), James T. Araki (<b>Translator)</b> <b>Traditional</b> Japanese Theater: An Anthology of Plays (Translations {{from the}} Asian Classics Series), 1998.|$|R
40|$|In {{this paper}} we {{describe}} the translation facilities {{as a component of}} EDM- 2 database. We introduce a new approach to translation that is different from the <b>traditional</b> <b>translators</b> in databases and the standard neutral file approach. First, we define design views, which are different from database views in that they allow manipulation of data, and they represent the same object or information in different formats. Second, we define object structures that capture the different representations of objects and define the relationships among them. The two main relationships here are the specialization lattice and the composition lattice. Third, {{we describe the}} basic steps of the translation process and generalize the common ones. We provide facilities for developing translators that take advantage of this generalization. We present an example of the most common representations in engineering design (IGES and DXF) to illustrate the various steps and structures in our model. INTRODUCTION: [...] ...|$|R
40|$|The {{professional}} profile emerging to address today’s demands {{in business and}} industry bears {{little resemblance to the}} <b>traditional</b> view of <b>translators</b> as solitary all-rounders. Translators and technical writers are now increasingly seen as problem-solvers, working in teams and interacting with other experts. They act as text coordinators, language leads, localisers, information designers or content managers. </span...|$|R
40|$|In {{this paper}} we {{describe}} a new iterative translation process designed to leverage the massive number of online users who have minimal or no bilingual skill. The iterative process {{is supported by}} combining existing machine translation methods with monolingual human speakers. We have built a Web-based prototype {{that is capable of}} yielding high quality translations at much lower cost than <b>traditional</b> professional <b>translators.</b> Preliminary evaluation results of this prototype confirm the validity of the approach. Author Keywords Monolingual, translation, translation interface, human computation, distributed human computation, wisdom of crowds, crowdsourcing, machine translation. ACM Classification Keywords H 5. m. Information interfaces and presentation (e. g., HCI) ...|$|R
50|$|Modern {{language}} industry has developed rapidly following {{availability of the}} internet. Achievements of the industry include the ability to quickly translate long texts into many languages. This has created new challenges {{as compared with the}} <b>traditional</b> activity of <b>translators,</b> such as that of quality assurance. There are various quality standards such as the International Organization for Standardization's ISO 17100, EN 15038 in Europe, the CAN CGSB 131.10 in Canada and ASTM F2575-06 in the USA.|$|R
40|$|The {{need for}} more {{effective}} communication across different countries has increased as the interactions between them have been growing. Communication is often difficult because of both language differences and cultural differences. Although {{there have been many}} attempts to meet the communication need on the level of language with machine translators and dictionaries, many problems related to cultural and conceptual differences still remain. To improve <b>traditional</b> machine <b>translators</b> and cross-cultural communication aids, it is necessary to develop automated mechanisms to analyze cultural differences and similarities. This thesis approaches the problems with automatic computation of cultural differences and similarities. This thesis, GlobalMind, provides common-sense databases of various countries and languages and two inference modules to analyze and compute the cultural differences and similarities from the databases. I describe the design of GlobalMind databases, the implementation of its inference modules, the results of an evaluation of GlobalMind, and available applications. by Hyemin Chung. Thesis (S. M.) [...] Massachusetts Institute of Technology, School of Architecture and Planning, Program in Media Arts and Sciences, 2006. Includes bibliographical references (p. 103 - 106) ...|$|R
40|$|Of all the Ethiopian (N= 110) and Afghan (N= 59) {{refugees}} {{seen at the}} Refugee Screening Clinic at San Francisco General Hospital Medical Center between May 1982 and July 1983, {{most were}} young men and more than 80 % of each group were unable to speak English. The most frequently noted medical conditions in both groups were pathogenic parasites, dental caries and skin disorders. Most had positive PPD tests, {{but only a few}} cases of class A or class B tuberculosis were found. Among the Ethiopians two active cases each of Plasmodium vivax malaria and trachoma were diagnosed. Although a wide range of diseases were seen, most were common rather than exotic. In addition to the need for <b>translators,</b> <b>traditional</b> beliefs and customs must be sensitively considered when providing health care to these groups...|$|R
40|$|The {{professional}} profile emerging to address today's demands {{in business and}} industry bears {{little resemblance to the}} <b>traditional</b> view of <b>translators</b> as solitary all-rounders. Translators and technical writers are now increasingly seen as problem-solvers, working in teams and interacting with other experts. They act as text coordinators, language leads, localisers, information designers or content managers. The complex task of designing multilingual, multimedia information products requires extensive cooperation between many qualified experts (technical writers, editors, translators, localisers, graphic designers, developers, etc.). It is this collaboration that makes inter-cultural text design possible in the first place, yet at the same time, also places new challenges on the translation process and the field of cooperative text design. Both translators and technical communicators alike play key roles in inter-cultural text design, ye...|$|R
40|$|The willed {{interaction}} of laws in Europe entails an {{interaction of}} languages. Yet, {{the defenders of}} uniformization of laws ignore the linguistic stakes {{in a way that}} can only summon the traductologist. Given his epistemic assumptions, the latter is however led to react in a way that lawyers will readily find subversive. Sensitive to the fact that law is carried by language, the traductologist explains how lawyers account neither for language’s persistence nor for its transience. For these two admittedly paradoxical reasons, the traductologist argues that lawyers largely underestimate the impact of language on the ongoing process of uniformization of laws. Undoubtedly, the traductologist’s reaction to the uniformization agenda stands in contrast to the <b>translator’s</b> <b>traditional</b> image, which is that of a servant or mediator. But the translator has been invisible long enough and should now be disposed to criticize those normative texts that imply a linguistic diversity and yet postulate the univocity of meaning. Through his work, the traductologist emphasizes the immense value of interdisciplinarity, which alone permits a more sensitive understanding of the implications of uniformization of law...|$|R
40|$|A dynamic binary {{translator}} is a just-in-time compiler {{that translates}} source architecture binaries into target architecture binaries on the fly. It enables the fast {{running of the}} source architecture binaries on the target architecture. <b>Traditional</b> dynamic binary <b>translators</b> invalidate their translations when a module is unloaded, so later re-loading of the same module {{will lead to a}} full retranslation. Moreover, most of the loading and unloading are performed on a few “hot ” modules, which causes the dynamic binary translator to spend a significant amount of time on repeatedly translating these “hot ” modules. Furthermore, the retranslation may lead to excessive memory consumption if the code pages containing the translated codes that have been invalidated are not timely recycled. In addition, we observed that the overhead for translating real-life desktop applications is a big challenge to the overall performance of the applications, and our detailed analysis proved that real-life desktop applications dynamically load and unload modules much more frequently as compared to popular benchmarks, such as SPEC CPU 2000. To address these issues, we propose a translation reuse engine that uses a novel verification method and a module-aware memory management mechanism. The proposed approach was fully implemented in IA- 32 Execution Layer (IA- 32 EL) [1], a commercial dynamic binary translator that enables the execution of IA- 32 applications on Intel ® Itanium ® processor family. Collected results show that the module-aware translation improves the performance of Adobe * Illustrator by 14. 09 % and Microsoft* Publisher by 9. 73 %. The overhead brought by the translation reuse engine accounts for no more than 0. 2 % of execution time...|$|R

