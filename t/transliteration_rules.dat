21|4|Public
2500|$|In 2006, the Hebrew Academy {{replaced}} their 1953 <b>transliteration</b> <b>rules</b> {{with new}} rules, {{and these were}} adopted as a United Nations standard in 2007. , migration to the new transliteration standard is still underway, and many signs and documents still use the 1953 conventions. The new 2006 rules attempt to more closely follow Israeli Hebrew vowel habits (such as the collapse of many shva na), but stop short of adopting most of the informal transliteration patterns. It still transliterates the diphthong [...] as /e/, and it still transliterates separate /ẖ/ and /kh/ in all cases. It is unspecific about rules governing the transliteration of phonemes not traditionally native to Hebrew.|$|E
50|$|Note: The Arabic {{words in}} this article are written using the Bikdash Arabic <b>Transliteration</b> <b>Rules.</b>|$|E
50|$|Ukrainian {{pronunciation}} of {{the name}} Олег is different from Russian, though the same Cyrillic letters are used in writing. Ukrainian Олег becomes Oleh in English according to the <b>transliteration</b> <b>rules</b> and the name is pronounced as |ɔːlˈeh| (with unstressed |ɔːl| and stressed |ˈe|, as in already and |h| like in help).|$|E
40|$|In this paper, {{we present}} methods of {{transliteration}} and back-transliteration. In Korean technical documents and web documents, many English words and Japanese words are transliterated into Korean words. These transliterated words are usually technical terms and proper nouns, {{so it is}} hard to find them in a dictionary. Therefore an automatic transliteration system is needed. Previous transliteration models restrict an information length to two or three letters per letter. However, most transliteration phenomena cannot be explained with a single standard rule especially in Korean. Various rules such as the origin of a word and profession of users are applied to each transliteration. The restriction of information length may lose the discriminative information of each <b>transliteration</b> <b>rule.</b> In this paper, we propose the methods that find similar words which have the longest overlap with an input word. To find similar words without the loss of each <b>transliteration</b> <b>rule,</b> phoneme chunks that do not have a length limit are used. By merging phoneme chunks, an input word is transliterated. With our proposed method, we could get 86 % character accuracy and 53 % word accuracy in an English-to-Korean transliteration test. Keywords: Transliteration; Back-transliteration; Phoneme Chunks. 1...|$|R
5000|$|Prabhát Saḿgiit has {{two most}} {{commonly}} used definitions, namely: [...] "Songs of a New Down" [...] and [...] "Songs of Prabhat". It has many spelling variants, with the following reasons: the word saḿgiit has two different spellings in Bengali, there is no fix <b>transliteration</b> <b>rule</b> for most Indian languages, there are also different transcription conventions used in English for Indian languages, the Sanskrit pronunciation has an [...] "a" [...] {{at the end of}} both words, which is normally silent in Bengali and Hindi.|$|R
2500|$|The name [...] "Cina" [...] is {{commonly}} {{believed to have}} been derived from [...] the Qin (Tsin or Chin in older <b>transliterations)</b> dynasty which <b>ruled</b> in China from 221 BC, or the preceding state of Qin which existed since the 9th century BC. [...] The Greco-Romans referred to China as Sina, or Sinae.|$|R
5000|$|There {{are also}} tables for the {{transliteration}} of names written using Cyrillic and Arabic scripts, mainly based on <b>transliteration</b> <b>rules</b> into English.For example, the Russian surname Горбачёв is transcribed [...] "Gorbachev" [...] in English {{and according to}} the ICAO 9303 rules, [...] "Gorbatschow" [...] (in German,"Gorbatchov" [...] in French, [...] "Gorbachov" [...] in Spanish, [...] "Gorbaczow" [...] in Polish, and so on).|$|E
50|$|The {{following}} Hangul {{tables of}} consonants and vowels (jamo) display the basic forms in {{blue in the}} first row, and their derivatives in the following rows. They are separated into tables of initials, vowels and finals. Jamo are romanized according to the Revised Romanization's <b>transliteration</b> <b>rules.</b> Thus, the table {{should not be used}} for normal transcription of Korean language, as sound changes must be observed.|$|E
5000|$|When published, {{the generic}} name was spelt as [...] "Omalanthus". Since the {{name comes from}} the ancient Greek word homalos meaning [...] "smooth" [...] and anthos meaning [...] "flower", this {{original}} spelling was inconsistent with the general Greek <b>transliteration</b> <b>rules,</b> and many later authors changed it to Homalanthus. According to ICBN, Homalanthus, {{which can be found}} in its Appendix III, has now been conserved against the original Omalanthus.|$|E
5000|$|Yiddishkeit (Yiddish: ייִדישקייט — yidishkeyt {{using the}} YIVO <b>transliteration</b> <b>rules,</b> yidishkayt in quasi-phonetic transcription) {{literally}} means [...] "Jewishness", i. e. [...] "a Jewish way of life", in the Yiddish language. It {{can refer to}} Judaism or forms of Orthodox Judaism when used by religious or Orthodox Jews. In {{a more general sense}} it has come to mean the [...] "Jewishness" [...] or [...] "Jewish essence" [...] of Ashkenazi Jews in general and the traditional Yiddish-speaking Jews of Eastern and Central Europe in particular.|$|E
50|$|The {{different}} Latin spellings of Grigorenko's name exist due to {{the lack}} of uniform <b>transliteration</b> <b>rules</b> for the Ukrainian names in the middle of 20th century, when he became internationally known. The correct modern transliteration would be Petro Hryhorenko. However, according to the American identification documents of the late general the official spelling of his name was established as Petro Grigorenko. The same spelling is engraved on his gravestone at the Ukrainian Orthodox Church of St. Andrew in South Bound Brook, New Jersey, USA. The same spelling is also retained by his surviving American descendants: son Andrew and granddaughters Tatiana and Olga.|$|E
5000|$|In 2006, the Hebrew Academy {{replaced}} their 1953 <b>transliteration</b> <b>rules</b> {{with new}} rules, {{and these were}} adopted as a United Nations standard in 2007. , migration to the new transliteration standard is still underway, and many signs and documents still use the 1953 conventions. The new 2006 rules attempt to more closely follow Israeli Hebrew vowel habits (such as the collapse of many shva na), but stop short of adopting most of the informal transliteration patterns. It still transliterates the diphthong [...] as /e/, and it still transliterates separate /ẖ/ and /kh/ in all cases. It is unspecific about rules governing the transliteration of phonemes not traditionally native to Hebrew.|$|E
5000|$|The typical {{circulation}} {{in the 21st century}} {{is a few}} thousand. The Yiddish Forward still appears weekly and is also available in an online edition. It remains in wide distribution, together with [...] (der algemeyner zhurnal - Algemeiner Journal; algemeyner = general), a Lubavitcher newspaper which is also published weekly and appears online. The widest-circulation Yiddish newspapers are probably the weekly issues [...] (דער איד = The Jew), [...] (דער בלאַט; blat = paper) and [...] (די צייטונג = the newspaper). Several additional newspapers and magazines are in regular production, such as the weekly אידישער טריביון Yiddish Tribune and the monthly publications [...] (Der Shtern; shtern = star) and [...] (Der Blick; blik = view). (The romanized titles cited in this paragraph are in the form given on the masthead of each publication and may be at some variance both with the literal Yiddish title and the <b>transliteration</b> <b>rules</b> otherwise applied in this article.) Thriving Yiddish theater, especially in the New York City Yiddish Theater District, kept the language vital. Interest in klezmer music provided another bonding mechanism.|$|E
40|$|Abstract: The work {{proposes a}} method of cross-lingual <b>transliteration</b> <b>rules</b> generation. The method is based on {{analysis}} of a training set. Process of generation {{is divided into two}} stages: the first is extraction of simple (initial) rules, the second one is generation of complicated rules. The first stage uses the new alignment algorithm described in the paper. The transliteration is conducted by a finite-state machine constructed from a system of <b>transliteration</b> <b>rules.</b> Note: Publication language:russia...|$|E
40|$|NEW Transliterator: The Transliterator class saves {{a set of}} <b>transliteration</b> <b>rules</b> for {{repeated}} use. The class constructor returns {{a function}} which will apply the saved <b>transliteration</b> <b>rules</b> to a string and return the new string. CHANGE Model. simplify() : Now removes empty Map objects as well. CHANGE Orthography: If the provided data is already an instance of the Orthography class, the same data will be returned from the constructor. CHANGE Orthography. prototype. abbreviation: Now defaults to an empty String...|$|E
40|$|It {{has been}} shown so far that using <b>transliteration</b> <b>rules</b> to extract Japanese Katakana and English word pairs is highly useful and promising. But for Japanese-French pairs, the method is not {{guaranteed}} to work, because only a very few Japanese Katakana words are borrowed directly from French. In this paper we will show the possibility of extracting Japanese Katakana and French word pairs based on transliteration from loosely aligned Japanese French bilingual corpora. The method applies all the existing <b>transliteration</b> <b>rules</b> to each mora unit in a Katakana word, and extracts the French word which matches or partially-matches one of these transliteration candidates as translation. For instance, if we have `グラフ ' in the Japanese part of a bilingual corpora, we generate such transliteration candidates as , , , [...] . and identify similar words from French part of the corpora. The method performed reasonably well, achieving 80 % precision at 20 % recall. We had also observed that Japanese-English <b>transliteration</b> <b>rules</b> worked well for extracting Katakana-French word pairs. 1...|$|E
40|$|This paper {{describes}} an accurate, extensible method for automatically classifying unknown foreign words that requires minimal monolingual resources and no bilingual training data (which {{is often difficult}} to obtain for an arbitrary language pair). We use a small set of phonologically-based <b>transliteration</b> <b>rules</b> to generate a potentially unlimited amount of pseudo-data {{that can be used to}} train a classifier to distinguish etymological classes of actual words. We ran a series of experiments on identifying English loanwords in Korean, in order to explore the consequences of using pseudo-data in place of the original training data. Results show that a sufficient quantity of automatically generated training data, even produced by fairly low precision <b>transliteration</b> <b>rules,</b> can be used to train a classifier that performs within 0. 3 % of one trained on actual English loanwords (≈ 96 % accuracy). 1...|$|E
40|$|Roman {{alphabet}} {{is often}} adopted {{as a means}} of writing for input data and for their internal processing in the case of mechanical processing of Japanese language. And yet it is hoped that the final results of processing are written at least in Japanese syllabary (kana), which is more familiar to Japanese than Roman alphabet. Then a program which transliterates Roman alphabet into kana is required. First, specific features of Japanese strings written in Roman alphabet and writing rules of special symbols and strings which are not to be transliterated are collected. It is followed by an outline of the transliteration procedure based on the specific features and the writing rules. Then the directions for use of the actually constructed transliteration program RKHKN are given. An example of using the RKHKN and examples of the processing by the program are also presented. Finally, RKHKN is briefly compared with the KANA, which is also a transliteration program written by Takeya. RKHKN, written in COBOL, describes <b>transliteration</b> <b>rules</b> rather procedurally. KANA, on the other hand, has <b>transliteration</b> <b>rules</b> in the form of finite automaton, or transition network, and the procedure which drives the automaton. RKHKN is implemented on FACOM 230 - 28 and also on FACOM 230 - 38 S...|$|E
40|$|Abstract [...] Machine {{transliteration}} {{plays an}} important role in natural language applications such as information retrieval and machine translation, especially for handling proper nouns and technical terms. Transliteration is a crucial factor in CLIR and MT. It is important for Machine Translation, especially when the languages do not use the same scripts. This paper addresses the issue of statistical machine transliteration from English to Punjabi. Statistical Approach to transliteration is used for transliteration from English to Punjabi using MOSES, a statistical machine translation tool. After applying <b>transliteration</b> <b>rules</b> average %age accuracy and BLEU score of this transliteration system comes out to be 63. 31 % and 0. 4502 respectively...|$|E
40|$|International audienceMachine Transliteration is to {{transcribe}} a word {{written in a}} script with approximate phonetic equivalence in another lan- guage. It is useful for machine transla- tion, cross-lingual information retrieval, multilingual text and speech processing. Punjabi Machine Transliteration (PMT) is a special case of machine translitera- tion and {{is a process of}} converting a word from Shahmukhi (based on Arabic script) to Gurmukhi (derivation of Landa, Shardha and Takri, old scripts of Indian subcontinent), two scripts of Punjabi, ir- respective of the type of word. The Punjabi Machine Transliteration System uses <b>transliteration</b> <b>rules</b> (charac- ter mappings and dependency rules) for transliteration of Shahmukhi words into Gurmukhi. The PMT system can translit- erate every word written in Shahmukhi...|$|E
40|$|In {{this paper}} we present an {{automatic}} Dzongkha text to Braille forward transliteration system. Dzongkha {{is the national}} language of Bhutan. The system is aimed at providing low cost efficient access mechanisms for blind people. It also addresses the problem of scarcity of having automatic Braille transliteration systems in language slime Dzongkha. The present system can be configured to take Dzongkha text document as input and based on some <b>transliteration</b> <b>rules</b> it generates the corresponding Braille output. We further extended the system to support an Audio QWERTY editor which allows a blind person {{to read and write}} Dzongkha texts or its equivalent Braille through a computer. The editor also contains Dzongkha voice feedbacks to further ease the use...|$|E
40|$|Machine Transliteration is an {{essential}} task for many NLP applications. However, names and loan words typically originate from various languages, obey different <b>transliteration</b> <b>rules,</b> and therefore may benefit from being modeled independently. Recently, transliteration models based on Bayesian learning have overcome issues with over-fitting allowing for many-to-many alignment in the training of transliteration models. We propose a novel coupled Dirichlet process mixture model (cDPMM) that simultaneously clusters and bilingually aligns transliteration data within a single unified model. The unified model decomposes into two classes of non-parametric Bayesian component models: a Dirichlet process mixture model for clustering, {{and a set of}} multinomial Dirichlet process models that perform bilingual alignment independently for each cluster. The experimental results show that our method considerably outperforms conventional alignment models. ...|$|E
40|$|Automatic {{transliteration}} and back-transliteration across languages with drastically different alphabets and phonemes inventories such as English/Korean, English/Japanese, English/Arabic, English/Chinese, etc, have practical {{importance in}} machine translation, cross-lingual information retrieval, and automatic bilingual dictionary compilation, etc. In this paper, a bi-directional {{and to some}} extent language independent methodology for English/Korean transliteration and back-transliteration is described. Our method is composed of character alignment and decision tree learning. We induce <b>transliteration</b> <b>rules</b> for each English alphabet and back-transliteration rules for each Korean alphabet. For the training of decision trees we need a large labeled examples of transliteration and back-transliteration. However this kind of resources are generally not available. Our character alignment algorithm is capable of highly accurately aligning English word and Korean transliteration in a desired way. 1...|$|E
40|$|This paper {{proposes a}} {{complete}} {{system for the}} automatic diacritization and transliteration of proper nouns from Arabic to English using a database of name pairs in Arabic and English languages. The system consists of three phases: Correction, Diacritization, and Transliteration. Correction phase corrects the Common Arabic Mistakes (initial Hamza, final Yaa, and final Taa errors) using Normalization and corrects normal concatenation errors. The most frequent transliteration is considered in case of exact match with saved normalized tokens generated from proper names database. The missing diacritics are restored using Sakhr’s Morphological Analyzer for analyzed tokens or from the best matching with patterns (for Arabic and Non-Arabic names) and consecutive characters obtained from the diacritized proper names. <b>Transliteration</b> <b>rules</b> are applied for the diacritized proper name to obtain the English equivalent (transliteration). Our results show an average accuracy of 89 % on blind test sets with forced spelling mistakes (and 95 % for correct input) ...|$|E

