1|3|Public
5000|$|The {{following}} example uses Entity Framework and configures the <b>TodoList</b> {{class to}} be stored in the database table Lists and defines a primary and a foreign key. The code should be understood more or less as: [...] "A <b>TodoList</b> has key TodoListID, its entity set name is Lists and it has many TodoItem's {{each of which has}} a required TodoList".|$|E
40|$|Abstract. We {{describe}} <b>todolists</b> (top-down skiplists), {{a variant}} of skiplists (Pugh 1990) that can execute searches using at most log 2 −εn +O(1) binary comparisons per search and that have amortized update timeO(ε− 1 logn). A variant of <b>todolists,</b> called working-todolists, can execute a search for any element x using log 2 −εw(x) + o(logw(x)) binary comparisons and have amortized search time O(ε− 1 logw(w)). Here, w(x) is the “working-set number ” of x. No previous data structure is known to achieve a bound better than 4 log 2 w(x) comparisons. We show through exper-iments that, if implemented carefully, <b>todolists</b> are comparable to other common dictionary implementations in terms of insertion times and outperform {{them in terms of}} search times...|$|R
40|$|We {{describe}} <b>todolists</b> (top-down skiplists), {{a variant}} of skiplists (Pugh 1990) that can execute searches using at most _ 2 -ε n + O(1) binary comparisons per search and that have amortized update time O(ε^- 1 n). A variant of <b>todolists,</b> called working-todolists, can execute a search for any element x using _ 2 -ε w(x) + o(w(x)) binary comparisons and have amortized search time O(ε^- 1 w(w)). Here, w(x) is the "working-set number" of x. No previous data structure is known to achieve a bound better than 4 _ 2 w(x) comparisons. We show through experiments that, if implemented carefully, <b>todolists</b> are comparable to other common dictionary implementations in terms of insertion times and outperform {{them in terms of}} search times. Comment: 18 pages, 5 figure...|$|R
40|$|Traditionally {{personal}} information management (PIMs) tools support {{people in their}} daily tasks. While research around {{personal information}} management focuses on how to store and retrieve information e ciently, {{we focus on the}} use of spatial (geographic) aspects in personal information. Tasks and appointments are represented in calendars or <b>todolists,</b> often including temporal and sometimes even spatial information. Unfortunately the spatial information is seldom used for task planning or execution support. Therefore current PIM applications, e. g. on mobile phones, do not use the full power of the devices, and they too often simply resemble a piece of paper with the relevant information on it. The research goal is to extend the possibilities of modern GIS and enable ubiquitous GPS technology to pro-actively support the user in his daily tasks. ...|$|R

