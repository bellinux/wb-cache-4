6|260|Public
50|$|Due to {{the extra}} traffic the West Gate Freeway was attracting—and {{due to the}} safety {{concerns}} of having excess <b>traffic</b> <b>filter</b> through connector streets in South Melbourne—the freeway was finally extended to Kings Way above the Grant Street intersection using elevated carriageways in 1987. Expansion of the original two lane freeway {{on the western side}} of the bridge to three lanes each way was carried out in 1993, and expansion to four lanes followed in 2000. With the subsequent completion of the Western Ring Road joining the West Gate Interchange to the freeway's west and CityLink to the freeway's east, it also funnels traffic from northern and western suburbs around Melbourne, acting as a bypass freeway.|$|E
40|$|Abstract — MPLS over DiffServ couples the diffserv’s per hop {{guarantees}} with MPLS {{traffic engineering}} capabilities to provide {{better quality of}} service (QoS) guarantees than that provided by MPLS or DiffServ alone. Linux provides powerful traffic control features to ensure proper traffic classification and differentiation. However, the current implementation of the <b>traffic</b> <b>filter,</b> used for MPLS over DiffServ architecture on Linux, exhibits certain drawbacks. This paper discusses the shortcomings of the current filter implementation and proposes a new filter {{that is capable of}} alleviating the problems...|$|E
40|$|Detection of fast-spreading Internet worms is {{a problem}} for which no {{adequate}} defenses exist. In this paper we present a Simple Worm Detection scheme (SWorD). SWorD is designed as a statistical detection method for detecting and automatically filtering fast-spreading TCP-based worms. SWorD is a simple two-tier counting algorithm designed to be deployed on the network edge. The first-tier is a lightweight <b>traffic</b> <b>filter</b> while the second-tier is more selective and rarely invoked. We present results using network traces from both a small and large network to demonstrate SWorD’s performance. Our results show that SWorD accurately detects over 75 % of all infected hosts within six seconds, making it an attractive solution for the worm detection problem...|$|E
40|$|This {{article is}} {{dedicated}} to the analysis list of a set of rules to <b>traffic</b> <b>filtering,</b> which is a multi-di-mensional structure, where each dimension is a set of networking field or the field of action, measuring the cost of the rules to <b>traffic</b> <b>filtering</b> on computer networks, allowing to determine the difference between definition of the rules and the control of the packet fields. Furthermore, the article were considered a hierarchical model to optimize <b>traffic</b> <b>filtering,</b> which reduces the overhead <b>traffic</b> <b>filtering</b> rules and provides the semantic integrity of the original set of rules to <b>traffic</b> <b>filtering.</b> The hierarchical structure of the design and optimization of <b>traffic</b> <b>filtering</b> was researched. And also was developed the hierarchical approach to optimize <b>traffic</b> <b>filtering</b> for reducing set of rules <b>traffic</b> <b>filtering.</b> Analyzed the algorithm optimal solutions and algorithm of random search filters that, allowing you to find the shortest way to a set of rules to <b>traffic</b> <b>filtering.</b> Moreover, in this article was presented the effectiveness evaluation of the process accelerating <b>traffic</b> <b>filtering</b> proposed by HAOTF...|$|R
40|$|Abstract — We {{study the}} {{deployment}} and {{configuration of the}} next generation of network <b>traffic</b> <b>filters</b> within a quantitative framework. Graph-theoretic and optimization methods are utilized to find optimal network <b>traffic</b> <b>filtering</b> strategies that achieve various security or cost objectives subject to hardware or security level constraints. We rely on graph-theoretic concepts such as centrality measures to assess the importance of individual routers within the network, given a traffic pattern. In addition, we consider several possible objectives involving financial costs associated with <b>traffic</b> <b>filtering,</b> the cost of failing to <b>filter</b> <b>traffic,</b> a utility associated with <b>filtering</b> <b>traffic,</b> and combinations of these costs and this utility. These optimization problems are solved taking into account constraints on networkwide filtering capabilities, individual filter capabilities, and also lower and upper bounds on the effective sampling rate for source-destination pairs. Centralized but dynamic solutions of the resulting problems are obtained under varying network traffic flows. The resulting optimal filtering strategies are simulated in MATLAB using real traffic data obtained from the Abilene project. Simulations comparing these strategies with some heuristic approaches demonstrate that they are more effective in achieving network <b>traffic</b> <b>filtering</b> objectives. I...|$|R
5000|$|A cyclist or {{motorcyclist}} {{riding in}} the unused space surrounding the lane stripe to overtake stopped <b>traffic</b> (<b>filtering</b> forward).|$|R
40|$|Abstract—Nowadays, we {{are facing}} with network threats that cause {{enormous}} damage to the Internet community day by day. In this situation, {{more and more people}} try to prevent their network security using some traditional mechanisms including firewall, Intrusion Detection System, etc. Among them honeypot is a versatile tool for a security practitioner, of course, they are tools that are meant to be attacked or interacted with to more information about attackers, their motives and tools. In this paper, we will describe usefulness of low-interaction honeypot and high-interaction honeypot and comparison between them. And then we propose hybrid honeypot architecture that combines low and high-interaction honeypot to mitigate the drawback. In this architecture, low-interaction honeypot is used as a <b>traffic</b> <b>filter.</b> Activities like port scanning can be effectively detected by low-interaction honeypot and stop there. Traffic that cannot be handled by low-interaction honeypot is handed over to high-interaction honeypot. In this case, low-interaction honeypot is used as proxy whereas high-interaction honeypot offers the optimal level realism. To prevent the high-interaction honeypot from infections, containment environment (VMware) is used. Keywords—Low-interaction honeypot, High-interaction honeypot, VMware, Prox...|$|E
40|$|Distributed {{denial of}} service (DDoS) attacks seriously {{threaten}} Internet services yet there is currently no defence against such attacks that provides both early detection, allowing time for counteraction, and an accurate response. Traditional detection methods rely on passively sniffing an attacking signature and are inaccurate {{in the early stages}} of an attack. Current counteractions such as <b>traffic</b> <b>filter</b> or rate-limit methods do not accurately distinguish between legitimate and illegitimate traffic and are difficult to deploy. This work seeks to provide a method that detects SYN flooding attacks in a timely fashion and that responds accurately and independently on the victim side. We use the knowledge of network traffic delay distribution and apply an active probing technique (DARB) to identify half-open connections that, suspiciously, may not arise from normal network congestion. This method is suitable for large network areas and is capable of handling bursts of traffic flowing into a victim server. Accurate filtering is ensured by a counteraction method using IP address and time-to-live(TTL) fields. Simulation results show that our active detection method can detect SYN flooding attacks accurately and promptly and that the proposed rate-limit counteraction scheme can efficiently minimize the damage caused by DDoS attacks and guarantee constant services to legitimate users. Department of Computin...|$|E
40|$|Web servers {{are usually}} {{located in a}} well-organized data center where these servers connect with the outside Internet {{directly}} through backbones. Meanwhile, the application-layer distributed denials of service (AL-DDoS) attacks are critical threats to the Internet, particularly to those business web servers. Currently, there are some methods designed to handle the AL-DDoS attacks, {{but most of them}} cannot be used in heavy backbones. In this paper, we propose a new method to detect AL-DDoS attacks. Our work distinguishes itself from previous methods by considering AL-DDoS attack detection in heavy backbone traffic. Besides, the detection of AL-DDoS attacks is easily misled by flash crowd traffic. In order to overcome this problem, our proposed method constructs a Real-time Frequency Vector (RFV) and real-timely characterizes the traffic as a set of models. By examining the entropy of AL-DDoS attacks and flash crowds, these models can be used to recognize the real AL-DDoS attacks. We integrate the above detection principles into a modularized defense architecture, which consists of a head-end sensor, a detection module and a <b>traffic</b> <b>filter.</b> With a swift AL-DDoS detection speed, the filter is capable of letting the legitimate requests through but the attack traffic is stopped. In the experiment, we adopt certain episodes of real traffic from Sina and Taobao to evaluate our AL-DDoS detection method and architecture. Compared with previous methods, the results show that our approach is very effective in defending AL-DDoS attacks at backbones. © 2013 Elsevier B. V. All rights reserved...|$|E
50|$|To {{minimize}} latency, Polipo both pipelines multiple resource {{requests and}} multiplexes multiple transactions onto the same TCP/IP connection. Polipo is HTTP 1.1-compliant, supports IPv4, IPv6, <b>traffic</b> <b>filtering</b> and privacy-enhancement.|$|R
50|$|TCP Intercept is a <b>traffic</b> <b>filtering</b> {{security}} feature that protects TCP servers from TCP SYN flood attacks, {{which are a}} type of denial-of-service attack. TCP Intercept is available for IP traffic only.|$|R
40|$|Abstract—Today {{it is hard}} {{to imagine}} {{education}} in schools, universities and commercial organizations without usage of Internet resources. At the same time monitoring, control and <b>filtering</b> of Internet <b>traffic</b> are still hardly ever used. One of the main causes of low usage of internet <b>traffic</b> <b>filtering</b> systems is the dynamic and rapidly growing nature of modern Internet, which makes traditional tools, methods and approaches not applicable to this problem. We propose applying new Data mining multiclass multi-label classification methods to the problem of Internet <b>traffic</b> <b>filtering</b> and a scalable, distributed system architecture, based on these methods...|$|R
40|$|Abstract. Network {{operators}} often apply policy-based <b>traffic</b> <b>filtering</b> at the egress of edge networks. These policies can {{be detected}} by performing active measurements; however, doing so involves instrumenting every network one wishes to study. We investigate a methodology for detecting policy-based service-level <b>traffic</b> <b>filtering</b> from passive observation of traffic markers within darknets. Such markers represent traffic we expect to arrive and, therefore, whose absence is suggestive of network filtering. We study the approach with data from five large darknets {{over the course of}} one week. While we show the approach has utility to expose filtering in some cases, there are also limits to the methodology. ...|$|R
5000|$|RTMPT, {{which is}} {{encapsulated}} within HTTP requests to traverse firewalls. RTMPT is frequently found utilizing cleartext requests on TCP ports 80 and 443 to bypass most corporate <b>traffic</b> <b>filtering.</b> The encapsulated session may carry plain RTMP, RTMPS, or RTMPE packets within.|$|R
40|$|Conventional {{firewalls}} rely on topology {{restrictions and}} controlled network entry points to enforce <b>traffic</b> <b>filtering.</b> Furthermore, a firewall cannot <b>filter</b> <b>traffic</b> {{it does not}} see, so, effectively, everyone on the protected side is trusted. While this model has worked well for small to medium size networks, networking trends such as increased connectivity, higher line speeds, extranets, and telecommuting threaten to make it obsolete. To addres...|$|R
50|$|Most AMT {{features}} are available OOB, regardless of PC power state. Other features require the PC {{to be powered}} up (such as console redirection via serial over LAN (SOL), agent presence checking, and network <b>traffic</b> <b>filtering).</b> Intel AMT has remote power-up capability.|$|R
50|$|IEEE Wireless Communications is a {{bimonthly}} scientific journal {{published by}} the IEEE Communications Society. Papers highlight such topics as portable telephones, communicating palmtop computers, protocols, messaging, communications, and personalized <b>traffic</b> <b>filtering.</b> It also covers such policy issues as spectrum allocation, industry structure, and technology evolution.|$|R
40|$|The Internet {{is crucial}} to business, government, {{education}} and many other facets of society, but the easy access and wide usage {{of the most common}} network services make it a primary target for the propagation of viral infections or worms. It has been widely experienced that the massive worldwide spreading of very fast and aggressive worms may easily disrupt or damage the connectivity of large sections of the Internet, affecting millions of users. Classical containment strategies, based on manual application of <b>traffic</b> <b>filters</b> will be almost totally ineffective in the wide area. Consequently, developing an automated self-distributing containment strategy is the most viable way to defeat the worm propagation in an acceptable time The objective of our work is to develop a distributed and cooperative containment strategy based on having <b>traffic</b> <b>filtering</b> information dynamically disseminate throughout the network at a speed that is faster than (or at least comparable with) the propagation of worms. Our framework based on BGP extensions to distribute <b>traffic</b> <b>filtering</b> information has the advantage of using the existing infrastructure and inter-as communication channels. We envision that the above solution {{will be one of the}} most effective and challenging lines of defense against next-generation more aggressive worms. Â© 2007 Elsevier Ltd. All rights reserved...|$|R
40|$|Microsoft Windows {{provides}} {{a variety of}} methods by which security software can perform network <b>traffic</b> <b>filtering</b> and other security-related tasks. However, these same capabilities can be used by malicious software, also known as malware, to tap into the operating system’s network architecture in order to circumvent security software, open backdoors, and steal information. ...|$|R
40|$|We {{introduce}} a novel worm containment strategy that integrates two complementary worm quarantine techniques. The two techniques are linked, with one strategy employing {{the other as}} an indicator of worm infection. A group defense mechanism shares such indicators among neighboring networks, and when enough corroboration occurs, the network engages in <b>traffic</b> <b>filtering</b> to halt infection attempts...|$|R
40|$|<b>Traffic</b> <b>filters</b> block clients from {{communicating}} with certain Internet destinations. To prevent clients from evading the <b>filtering</b> policies, <b>traffic</b> <b>filters</b> may also block access to well-known anonymizing proxies. In response, researchers have designed more sophisticated solutions techniques {{that rely on}} implicit proxies lying along the path to unfiltered destinations. An implicit proxy transparently deflects traffic directed to an unfiltered destination toward the filtered destination. However, the effectiveness of implicit proxies highly depends on their presence in paths between clients and unfiltered destinations. In this paper we formulate and {{solve the problem of}} proxy placement, and evaluate our algorithms on snapshots of the Internet topology for a variety of client and destination sets. We also consider smart filtering techniques that select alternate routes to avoid implicit proxies, as well as the effects of asymmetric Internet routing. Our results show that {{a relatively small number of}} proxies can satisfy a large group of clients across a range of geographic locations. 1...|$|R
50|$|Almost all AMT {{features}} are available {{even if the}} PC is in a powered-off state but with its power cord attached, if the operating system has crashed, if the software agent is missing, or if hardware (such as a hard drive or memory) has failed. The console-redirection feature (SOL), agent presence checking, and network <b>traffic</b> <b>filters</b> are available after the PC is powered up.|$|R
40|$|This {{document}} {{defines a}} new Border Gateway Protocol Network Layer Reachability Information (BGP NLRI) encoding format {{that can be}} used to distribute traffic flow specifications. This allows the routing system to propagate information regarding more specific components of the traffic aggregate defined by an IP destination prefix. Additionally, it defines two applications of that encoding format: one {{that can be used}} to automate inter-domain coordination of <b>traffic</b> <b>filtering,</b> such as what is required in order to mitigate (distributed) denial-of-service attacks, and a second application to provide <b>traffic</b> <b>filtering</b> in the context of a BGP/MPLS VPN service. The information is carried via the BGP, thereby reusing protocol algorithms, operational experience, and administrative processes such as inter-provider peering agreements. Status of This Memo This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited...|$|R
40|$|Suppose that an {{organization}} Os {{wants to do}} the following: to reveal only part of its network map; to <b>filter</b> unwanted <b>traffic</b> passing through its network; and to route, to the right destination, legitimate traffic intended for hidden parts of its network. This would enable Os to perform <b>traffic</b> <b>filtering</b> and routing with improved resistance against network mapping attacks. This paper proposes a provably-secure hierarchical identity-based group signature scheme which meets the above requirements, and is scalable to large, distributed, and hierarchically-structured networks...|$|R
40|$|Traffic and spam are {{the main}} {{problems}} in the data transmission through the network. Many <b>traffic</b> <b>filtering</b> systems have been proposed to find and <b>filter</b> the <b>traffic</b> over the network. The system Optimal Source Filtering (OSF) has implemented a new and optimal filtering mechanism. The new mechanism named as DROP, which monitors and filters the spam and malicious traffic over a network effectively. <b>Traffic</b> <b>filtering</b> systems have been proposed to detect the spammer and malicious traffic, using the optimal rules and policies. Further these systems are highly ineffective when they encounter malicious traffic. The proposed system introduced OSF protocol, which helps to improve {{the efficiency of the}} firewall and filters based on the user rule. The proposed filtering scheme provides TFS false filtering when the flash crowd occurred. The protocol verifies users and firewall rules and policies with the data priority model, which makes the filtering process more robust and fastest manner. The Proposed spam detection project identifies and eliminates unwanted messages by monitoring outgoing messages. The spam detection is the main challenging task in the network. In the existing system spam detection has implemented after the data received. According to the user rule and request the current system identifies th...|$|R
40|$|Conventional {{firewalls}} rely on {{a strict}} outside/inside topology where the gateway(s) enforce some sort of <b>traffic</b> <b>filtering.</b> Some claims that with the evolving connectivity of the Internet, the traditional firewall has been obsolete. High speed links, dynamic topology, end-to-end encryption, threat from internal users are all issues that must be addressed. Steven M. Bellovin {{was the first to}} propose a ``distributed firewall'' that addresses these shortcomings. In this master thesis, the design and implementation of a ``distributed firewall'' with an intrusion detection mechanism is presented using Python and a scriptable firewall (IPTables, IPFW, netsh) ...|$|R
40|$|The {{successful}} {{operation of}} peer-to-peer network {{depends on the}} resilience of its peer‘s communications. On the Internet, direct communications between peers are often limited by restrictions like NATs and <b>traffic</b> <b>filtering.</b> Addressing such problem is particularly pressing for peer-to-peer networks that {{do not wish to}} rely on any trusted infrastructure, which might otherwise help the participant establish communication channels. Modern peer-to-peer networks employ various techniques {{to address the problem of}} restricted connectivity on the Internet. One interesting development is that various overlay networks now support multiple communication protocols to improve resilience and counteract service degradation...|$|R
40|$|This work {{deals with}} the packet {{classification}} algorithms for <b>traffic</b> <b>filtering</b> in computer networks. It contains summary of different areas where packet classification is used. It describes various algorithms and their memory and speed characteristics. Then this work describes implementation of two chosen algorithms based on bit paralelism and bit vectors which were integrated into Netbench, framework for evaluation and experiments with packet processing algorithms. There are described memory requirements of both these algorithms which were tested for different sets of rules. These requirements are compared with other algorithms in Netbench...|$|R
40|$|The {{increasing}} number of disasters around the world calls for a new direction in building the networks; this direction is known as disaster-resilient networks. In this paper, we consider the effect of post-disaster traffic on the core network performance. We evaluate the network blocking during single node flooding with different flood sizes. Then we study four mitigation approaches to maximally serve the traffic floods using the excess capacity, <b>traffic</b> <b>filtering,</b> rerouting and Differentiated-Services. The {{results show that the}} studied approaches reduce blocking by 50 % in the worst cases...|$|R
40|$|A {{method for}} {{protecting}} an Internet server against a bandwidth-consuming DDoS attack is proposed and analyzed. Incoming traffic is monitored continuously and "dangerous " traffic intensity rises are detected. Such an event activates a <b>traffic</b> <b>filtering</b> rule which pushes down the incoming aggregate traffic to {{an acceptable level}} by discarding excess packets according to the measured relative traffic levels of active sources. Compared to other studies, our method has a structurally stronger base: legitimate traffic to the server is not necessarily hindered because of the attack or the traffic suppression. The method is supported by an analysis and a simulation as well...|$|R
40|$|Abstract — A {{high-speed}} network featuring next generation networking technology {{is being built}} by the Centre for Networking Technologies for the Information Economy (CeNTIE) [1]. It consists of multi-gigabit MANs in Sydney and Perth, linked by DWDM interstate links. Optical fibre and Gigabit Ethernet are used for transport and switching. VLAN and <b>traffic</b> <b>filters</b> are configured to define administrative boundaries and enforce policy. Quality of Service is enabled to provide differentiated network services. The CeNTIE network will provide the research user community with broadband access to valuable supercomputing resources and collaboration opportunities. I. DESIGN REQUIREMENTS Metropolitan area networks have been built b...|$|R
50|$|A network {{monitoring}} {{interface card}} or NMIC {{is similar to}} a network card (NIC). However, unlike a standard network card, an NMIC is designed to passively (and silently) listen on a network. At a functional level, an NMIC may differ from a NIC, in that the NMIC may not have a MAC address, may lack the ability to transmit and may not announce its presence on a network. Advanced NMICs have features that include an ability to offload CPU intensive processing from a system's CPU, accurate time measurement, <b>traffic</b> <b>filtering,</b> and an ability to perform other application specific processing.|$|R
40|$|In {{wireless}} sensor networks (WSNs) {{contextual information}} such as the information regarding whether, when, and where the data is collected cannot be protected using only traditional measures (e. g., encryption). Contextual information can be protected against global eavesdroppers by periodic packet transmission combined with dummy <b>traffic</b> <b>filtering</b> at proxy nodes. In this paper, through a Linear Programming (LP) framework, we analyze lifetime limits of WSNs preserving event-unobservability with different proxy assignment methodologies. We show that to maximize the network lifetime data flow should pass through multiple proxies that are organized as a general directed graph {{rather than as a}} tree...|$|R
50|$|Without CBAC, <b>traffic</b> <b>filtering</b> {{is limited}} to access list {{implementations}} that examine packets at the network layer, or at most, the transport layer. However, CBAC examines not only network layer and transport layer information but also examines the application-layer protocol information (such as FTP connection information) {{to learn about the}} state of the TCP or UDP session. This allows support of protocols that involve multiple channels created as a result of negotiations in the FTP control channel. Most of the multimedia protocols as well as some other protocols (such as FTP, RPC, and SQL*Net) involve multiple control channels.|$|R
40|$|Cyclop is {{intrusion}} detection system. This tool provide for network administrator way to easily monitor unwanted or potentially unsecure network traffic. Cyclop {{is able to}} detect portscans, can perform pattern matching against regular expression and <b>filter</b> <b>traffic</b> with pcap <b>filter</b> (as known from tools like tcpdump or ethereal). All this rules are configurable through smart configuration file...|$|R
40|$|Abstract — A {{method for}} {{protecting}} an Internet server against a bandwidth-consuming DDoS attack is proposed and analyzed. Incoming traffic is monitored continuously and “dangerous” traffic intensity rises are detected. Such an event activates a <b>traffic</b> <b>filtering</b> rule which pushes down the incoming aggregate traffic to {{an acceptable level}} by discarding excess packets according to the measured relative traffic levels of active sources. Compared to other studies, our method has a structurally stronger base: legitimate traffic to the server is not necessarily hindered because of the attack or the traffic suppression. The method is supported by an analysis and a simulation as well. 1...|$|R
