0|3127|Public
40|$|TOGAF is an Enterprise Architecture {{framework}} {{that provides a}} method for developing Enterprise Architecture called architecture development method (ADM). The {{purpose of this paper}} is whether TOGAF ADM can be used for developing software <b>application</b> <b>architecture.</b> Because the software <b>application</b> <b>architecture</b> is one of the disciplines in application development life cycle, it is important to find out how the enterprise architecture development method can support the <b>application</b> <b>architecture</b> development. Having an open standard that can be used in the <b>application</b> <b>architecture</b> development could help in outsourcing of software development. If ADM could be used for software <b>application</b> <b>architecture</b> development, then we could consider its usability in outsourcing of software development...|$|R
50|$|In {{information}} systems, <b>applications</b> <b>architecture</b> or <b>application</b> <b>architecture</b> is one {{of several}} architecture domains that form the pillars of an enterprise architecture (EA).|$|R
50|$|Hypermedia as the Engine of Application State (HATEOAS) is a {{constraint}} of the REST <b>application</b> <b>architecture</b> {{that distinguishes}} it from other network <b>application</b> <b>architectures.</b>|$|R
50|$|Note {{that the}} <b>{{application}}s</b> <b>architecture</b> {{is about the}} application portfolio, not the internal architecture of a single application - which is often called the <b>application</b> <b>architecture.</b>|$|R
50|$|Note {{that the}} <b>applications</b> <b>architecture</b> {{is about the}} choice of and {{relationships}} between applications in the enterprise's application portfolio, not about the internal architecture of a single application (which is often called <b>application</b> <b>architecture).</b>|$|R
5000|$|<b>Applications</b> <b>Architecture</b> : The <b>Applications</b> <b>Architecture</b> {{describes}} the major types of applications that manage data {{to produce the}} information needed to support {{the activities of the}} Corporation. The <b>Applications</b> <b>Architecture</b> provides a framework that enables the migration from the current applications catalog and software development environment to the target integrated applications, development and engineering environments. The target architecture promotes the use of commercial and government off-the-shelf products, consolidating applications, where applicable, and the use of emerging technologies where appropriate.|$|R
5000|$|... #Subtitle level 3: Runtime <b>application</b> <b>architecture</b> (secondary) ...|$|R
5000|$|... #Subtitle level 3: IBM Insurance <b>Application</b> <b>Architecture</b> (IAA) ...|$|R
40|$|Alignment of <b>application</b> <b>architecture</b> to {{business}} architecture {{is a central}} problem in the design, acquisition and implementation of information systems in current large-scale information-processing organizations. Current research in architecture alignment is either too strategic or too software implementation-oriented to be of use to the practicing information systems architect. This paper presents a framework to analyze the alignment problem and operationalizes this as an approach to <b>application</b> <b>architecture</b> design given a business context. We summarize guidelines for <b>application</b> <b>architecture</b> design and illustrate our approach and guidelines with an example...|$|R
50|$|The best {{practices}} and design templates {{that have come}} out of the Java community facilitate the creation of quality <b>application</b> <b>architectures</b> on which to develop the applications. However, developing an <b>application</b> <b>architecture</b> from scratch, based on templates, is costly, repetitive and more open to errors that starting with an existing one.|$|R
5000|$|<b>Applications</b> <b>architecture</b> {{strategy}} involves {{ensuring the}} applications and the integrations align {{with the growth}} strategy of the organization. If an organization is a manufacturing organization with fast growth plans through acquisitions, the <b>applications</b> <b>architecture</b> should be nimble enough to encompass inherited legacy systems {{as well as other}} large competing [...]|$|R
5000|$|... #Subtitle level 2: Comparison with Traditional Object/Relational Web <b>Application</b> <b>Architectures</b> ...|$|R
5000|$|Applications {{typically}} follow one of {{the following}} industry-standard <b>applications</b> <b>architecture</b> patterns: ...|$|R
50|$|Optimizing code {{generators}} and cross-debuggers provided support for several popular <b>application</b> <b>architectures.</b>|$|R
40|$|Special Issue This {{research}} {{examines the}} impacts of the assimilation and use of IT on the financial performance of hospitals. We identify two dimensions of IT assimilation and use. They are the IT <b>applications</b> <b>architecture</b> spread, which is {{the adoption of a}} broad array of IT solutions, and IT <b>applications</b> <b>architecture</b> longevity, which is the length of experience with use of specific IT solutions. We examine {{the extent to which these}} dimensions of assimilation within the business and clinical work processes impact hospital performance. Compared with the effects of IT <b>applications</b> <b>architecture</b> spread, we find that the IT <b>applications</b> <b>architecture</b> longevity has a more significant effect on financial performance. In addition, the effects of assimilation manifest differently across the business and clinical process domains. Our results enhance understanding about the manner in which the assimilation and use of IT contributes to the financial performance of hospitals...|$|R
5000|$|The IBM Insurance <b>Application</b> <b>Architecture</b> is a {{reference}} architecture for the Insurance domain.|$|R
5000|$|... 2002 - Patterns of Enterprise <b>Application</b> <b>Architecture,</b> by Martin Fowler. Addison-Wesley Longman, Inc.|$|R
50|$|Applications can be {{classified}} in various types depending on the <b>applications</b> <b>architecture</b> pattern they follow.|$|R
50|$|Solution architects {{in large}} {{organizations}} often {{act as the}} bridge between <b>architecture</b> and <b>applications</b> <b>architecture.</b>|$|R
5000|$|Peer-to-peer, a {{computing}} or networking distributed <b>application</b> <b>architecture</b> that partitions tasks or workloads among peers ...|$|R
50|$|In {{addition}} to the client-server model, distributed computing applications often use the peer-to-peer (P2P) <b>application</b> <b>architecture.</b>|$|R
50|$|Rapid {{prototyping}} {{is commonly}} applied in software engineering {{to try out}} new business models and <b>application</b> <b>architectures.</b>|$|R
40|$|Requirements such as {{integrated}} view of {{the customer}} or global business process integration make enterprise wide management of master data a prerequisite for achieving business goals. The master data <b>application</b> <b>architecture,</b> {{as a part of}} enterprise master data management, plays a critical role in enterprises. Choosing the right master data <b>application</b> <b>architecture</b> is a controversial subject in many enterprises. Unfortunately, {{the current state of the}} art in research does not provide sufficient guidance for enterprises dealing with this subject. The paper aims at overcoming this gap in research by presenting a decision model for supporting enterprises in the decision-making process regarding the choice of the right master data <b>application</b> <b>architecture.</b> To design the model, Multiple-Criteria Decision Analysis and Design Science Research Methodology were applied...|$|R
5000|$|... 2002. Patterns of Enterprise <b>Application</b> <b>Architecture.</b> With David Rice, Matthew Foemmel, Edward Hieatt, Robert Mee, and Randy Stafford. Addison-Wesley[...]|$|R
5000|$|<b>Applications</b> <b>Architecture</b> - Definition of {{the major}} kinds of {{applications}} needed to manage that data and support the business functions.|$|R
50|$|Uniface has {{a variety}} of {{component}} types that are intended for use in different layers of a multi-tier <b>application</b> <b>architecture.</b>|$|R
50|$|Application Discovery and Dependency Mapping (ADDM) {{solutions}} {{exist to}} automate {{the process of}} mapping transactions and applications to underlying infrastructure components. When preparing to implement a runtime <b>application</b> <b>architecture,</b> {{it is necessary to}} ensure that up/down monitoring is in place for all nodes and servers within the environment (aka, bottom-up monitoring). This helps lay the foundation for event correlation and provides the basis for a general understanding on how network topologies interact with <b>application</b> <b>architectures.</b>|$|R
5000|$|Since Stephen Spewak's {{book called}} {{enterprise}} architecture planning (EAP) in 1993, and perhaps before then, {{it has been}} normal to recognise four types of architecture domain. The British Computer Society's [...] "Reference Model for Enterprise and Solution Architecture" [...] also follows this subdivision but additionally mentions the (single) <b>application</b> <b>architecture</b> level just below the <b>applications</b> <b>architecture</b> {{as well as the}} domains of information architecture, information systems architecture, or security architecture (a cross-cutting concern): ...|$|R
5000|$|The {{framework}} {{also includes}} modeling disciplines {{and practices of}} software systems, {{for the purpose of}} designing software applications. Furthermore, SOMF [...] offers a variety of architectural styles, such as enterprise <b>architecture,</b> <b>application</b> <b>architecture,</b> service-oriented architecture, and cloud computing.|$|R
50|$|Another {{benefits}} of the XRX Web <b>application</b> <b>architecture</b> is that it avoids {{most of the problems}} around the object-relational impedance mismatch.|$|R
5000|$|... 2003. [...] "Aligning <b>application</b> <b>architecture</b> to the {{business}} context." [...] With others in: Advanced Information Systems Engineering. Springer Berlin Heidelberg, 2003.|$|R
40|$|A {{peer-to-peer}} <b>application</b> <b>architecture</b> {{is proposed}} {{that has the}} potential to eliminate the back-end servers for hosting services on the Internet. The proposed <b>application</b> <b>architecture</b> has been modeled as a distributed system for delivering an Internet service. The service thus created, though chaotic and fraught with uncertainties, would be highly scalable and capable of achieving unprecedented levels of robustness and viability with {{the increase in the number}} of the users. The core issues relating to the architecture, such as service discovery, distributed <b>application</b> <b>architecture</b> components, and inter-application communications, have been analysed. It is shown that the communications for the coordination of various functions, among the cooperating instances of the application, may be optimised using a divide-and-conquer strategy. Finally, the areas where future work needs to be directed have been identified. Comment: 23 pages, 9 Figure...|$|R
30|$|Figure  1 shows our <b>application</b> <b>architecture,</b> {{with all}} nodes in the SDDL core network (DDS Domain) and our Fleet Tracking and Management application.|$|R
3000|$|Enterprise <b>Application</b> <b>Architecture</b> Patterns hasSubcategories Data Source Architectural Patterns, Object Relational Behavioural Patterns, Object Relational Metadata Mapping Patterns, Object Relational Structural Patterns [...]...|$|R
5000|$|Al Shalloway, Corollary to Conway's Law. When {{development}} groups {{change how}} their development staff are organized, their current <b>application</b> <b>architecture</b> will work against them.|$|R
40|$|The {{topic of}} the thesis is putting up the <b>application</b> <b>architecture</b> of the {{organization}} based othe the actual state, identified requirements, the operational model. The thesis contains description of the business architecture domain, requirements metodology and creation of the operational model of the organization. For the main solution is used the conceptual data model. <b>Application</b> <b>architecture</b> design is presented by the aplication landscape model with the desctiption of the architecture layers and the integration concept including a master data managment concept...|$|R
