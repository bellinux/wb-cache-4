168|10000|Public
5000|$|Both Paxos and Gbcast {{are subject}} to the FLP impossibility result. [...] Thus neither {{protocol}} can be guaranteed live under all possible conditions. At best we can talk about the conditions under which liveness is guaranteed, expressed as predicates on <b>the</b> <b>failure</b> <b>detection</b> mechanism: if the condition for liveness holds, then the protocol will be live. The liveness conditions of Basic Paxos and Gbcast are similar but not identical.|$|E
40|$|Abstract. Node {{failures}} and ungraceful departures are important {{issues to be}} dealt with in overlay multicast. Fast detection is key to minimizing the disruption of service to the affected nodes participating in the multicast session. In this paper, we propose a cooperative failure detection mechanism that can greatly reduce <b>the</b> <b>failure</b> <b>detection</b> time. A significant contribution of the paper is that we quantify three important measures, i. e., the expected detection time, the probability of false failure detection, and the overhead. This allows us to study the fundamental tradeoff among them in <b>the</b> <b>failure</b> <b>detection</b> mechanisms. The analysis and simulations show that the proposed cooperative failure detection mechanism can significantly reduce <b>the</b> <b>failure</b> <b>detection</b> time while maintaining the probability of false positive at the same level, at the cost of slightly increased overhead. ...|$|E
30|$|Monitoring and Discovery Systems (MDS- 2) {{in theory}} can support the task crash failure {{detection}} functionality through the GRRP (Gullapalli et al. 2001) notification protocol and the Grid Resource Information Service/Grid Index Information Server (GRIS/GIIS) framework. However, {{in case of}} Globus heart beat monitor, it is not straight forward to use MDS- 2 to construct <b>the</b> <b>failure</b> <b>detection</b> services. The MDS- 2 is in fact designed to develop grid information services rather than <b>the</b> <b>failure</b> <b>detection</b> services. Moreover user-defined exceptions cannot be detected using the MDS- 2 (Hwang and Kesselman 2003; Czajkowski et al. 2001).|$|E
5000|$|By {{employing}} SMT, {{the production}} process speeds up, but the risk of defects also increase due to the components miniaturization and denser packing of boards. In those conditions, <b>the</b> <b>failures</b> <b>detection</b> have become critical for any SMT manufacturing process.|$|R
5000|$|Identify <b>the</b> {{means of}} <b>failure</b> <b>detection,</b> {{isolation}} and compensation ...|$|R
40|$|The {{study of}} this thesis is focused on {{reducing}} <b>the</b> link <b>failure</b> <b>detection</b> time in OSPF network. When a link failure occurs, OSPF protocol detects it using RouterDeadInterval time. This timer is fired only after a predefined time interval, thus increasing the time of convergence after <b>the</b> link <b>failure.</b> There are previous studies to reduce the RouterDeadInterval time, but they introduce other effects which are discussed later in the thesis. So, a novel approach is proposed in this thesis to reduce <b>the</b> link <b>failure</b> <b>detection</b> time with <b>the</b> help of emerging network architecture Software Defined Networking (SDN) and OpenFlow Protocol. ...|$|R
40|$|It {{is shown}} that the {{estimator}} part of the Modified Partitioned Adaptive Controller, (MPAC) developed for nonlinear aircraft dynamics of a small jet transport can adapt to sensor failures. In addition, an investigation is made into the potential usefulness of the configuration detection technique used in the MPAC and <b>the</b> <b>failure</b> <b>detection</b> filter is developed that determines how a noise plant output {{is associated with a}} line or plane characteristic of a failure. It is shown by computer simulation that the estimator part and the configuration detection part of the MPAC can readily adapt to actuator and sensor failures and that <b>the</b> <b>failure</b> <b>detection</b> filter technique cannot detect actuator or sensor failures accurately for this type of system because of the plant modeling errors. In addition, it is {{shown that the}} decision technique, developed for <b>the</b> <b>failure</b> <b>detection</b> filter, can accurately determine that the plant output is related to the characteristic line or plane in the presence of sensor noise...|$|E
40|$|Results of an {{investigation}} of velocity failure detection and isolation for 3 inertial measuring units (IMU) and 2 inertial measuring units (IMU) configurations are presented. <b>The</b> <b>failure</b> <b>detection</b> and isolation algorithm performance was highly successful and most types of velocity errors were detected and isolated. <b>The</b> <b>failure</b> <b>detection</b> and isolation algorithm also included attitude FDI but was not evaluated {{because of the lack}} of time and low resolution in the gimbal angle synchro outputs. The shuttle KT- 70 IMUs will have dual-speed resolvers and high resolution gimbal angle readouts. It was demonstrated by these tests that a single computer utilizing a serial data bus can successfully control a redundant 3 -IMU system and perform FDI...|$|E
3000|$|Proof: In RECRA, the {{worst-case}} time complexity {{is proportional to}} <b>the</b> <b>failure</b> <b>detection</b> and recovery. Let us assume that the time to detect a failure or receive a movement notification message is f. In the worst case, {{the time it takes}} to establish connectivity is equal to [...]...|$|E
30|$|This ranks {{the ability}} of planned tests and {{inspections}} to remove defects or detect failure modes in time. The assigned detection number measures the risk that <b>the</b> <b>failure</b> will escape <b>detection.</b> A high detection number indicates that the chances are high that <b>the</b> <b>failure</b> will escape <b>detection</b> or, in other words, that the chances of detection are low.|$|R
3000|$|In this paper, we {{described}} the architecture {{and implementation of}} <b>the</b> Internet <b>Failure</b> <b>Detection</b> Service (IFDS). IFDS configures itself to meet the QoS requirements of multiple simultaneous applications as well as network conditions. Two strategies (η [...]...|$|R
40|$|Abstract: The {{performance}} of multi-homed transport protocols tolerant of network failure is studied. It evaluates the {{performance of}} different retransmission policies combined with path <b>failure</b> <b>detection</b> thresholds, infinite or finite receive buffers for various path bandwidths, delays and loss rate conditions through stream control transmission protocol simulation. The results show that retransmission policies perform differently with different path <b>failure</b> <b>detection</b> threshold configurations. It identifies that retransmission of all data on an alternate path with <b>the</b> path <b>failure</b> <b>detection</b> threshold set to zero performs the best in symmetric path conditions but its performance degrades acutely in asymmetric path conditions even when the alternate path delay is shorter than the primary path delay. It illustrates that retransmission of all data on the same path with <b>the</b> path <b>failure</b> <b>detection</b> threshold set to one or zero gives the most stable performance in all path configurations. ...|$|R
40|$|Adaptive Random Testing (ART) was {{developed}} to enhance <b>the</b> <b>failure</b> <b>detection</b> capability of Random Testing. The basic principle of ART is to enforce random test cases evenly spread inside the input domain. Various distribution metrics {{have been used to}} measure different aspects of the evenness of test case distribution. As expected, it has been observed that <b>the</b> <b>failure</b> <b>detection</b> capability of an ART algorithm is related to how evenly test cases are distributed. Motivated by such an observation, we propose a new family of ART algorithms, namely distribution metric driven ART, in which, distribution metrics are key drivers for evenly spreading test cases inside ART. Our study uncovers several interesting results and shows that the new algorithms can spread test cases more evenly, and also have better failure detection capabilities...|$|E
40|$|Abstract—Due to the {{variations}} of the network in actual distributed system, failure detectors without adaptive mechanism cannot {{meet the requirements of}} QOS of applications. Adaptive failure detectors should dynamically adjust the detecting quality according to the real-time state of the network. Assuming that delay of the message and loss of the messages is a random probability, <b>the</b> <b>failure</b> <b>detection</b> model based on the predicted message delay is proposed in this paper. A PAC-AFD adaptive failure detection algorithm is realized based on the above model based on the prediction from historical message delay and it contains checking idea. Experimental results show that the algorithm can relieve the effect of delay of the message and loss of the message on <b>the</b> <b>failure</b> <b>detection</b> while ensuring the accuracy and completeness of detection. Index Terms—failure detection, QOS, distributed system, adaptive, checking...|$|E
40|$|Flight {{test results}} of a vector-based {{fault-tolerant}} algorithm for a redundant strapdown inertial measurement unit are presented. Because the inertial sensors provide flight-critical information for flight control and navigation, failure detection and isolation is developed {{in terms of a}} multi-level structure. Threshold compensation techniques for gyros and accelerometers, developed to enhance the sensitivity of <b>the</b> <b>failure</b> <b>detection</b> process to low-level failures, are presented. Four flight tests, conducted in a commercial transport type environment, were used to determine the ability of <b>the</b> <b>failure</b> <b>detection</b> and isolation algorithm to detect failure signals, such a hard-over, null, or bias shifts. The algorithm provided timely detection and correct isolation of flight control- and low-level failures. The flight tests of the vector-based algorithm demonstrated its capability to provide false alarm free dual fail-operational performance for the skewed array of inertial sensors...|$|E
30|$|Estimate <b>the</b> ease of <b>failure</b> <b>detection.</b> If <b>the</b> <b>detection</b> of <b>failure</b> {{takes too}} long, {{it may become}} late to repair the {{situation}} and {{the magnitude of the}} problem will become much greater.|$|R
40|$|Revisions to <b>the</b> {{advanced}} sensor <b>failure</b> <b>detection,</b> isolation, and accommodation (DIA) algorithm, developed under <b>the</b> sensor <b>failure</b> <b>detection</b> system {{program were}} studied {{to eliminate the}} steady state errors due to estimation filter biases. Three algorithm revisions were formulated and one revision for detailed evaluation was chosen. The selected version modifies the DIA algorithm to feedback the actual sensor outputs to the integral portion of the control for the nofailure case. In case of a <b>failure,</b> <b>the</b> estimates of the failed sensor output is fed back to the integral portion. The estimator outputs are fed back to the linear regulator portion of the control all the time. The revised algorithm is evaluated and compared to the baseline algorithm developed previously...|$|R
40|$|<b>Failure</b> <b>detection</b> is a {{basic service}} for {{building}} dependable systems. The large-scale distribution of computing systems naturally makes failure detectors much harder to build. Moreover, providing QoS (qua-lity of service) guarantees {{in this context is}} a challen-ging task. The objective of this paper is twofold: (i) proposing a complete set of classification criteria to compare different <b>failure</b> <b>detection</b> mechanisms, and based on these criteria (ii) surveying <b>the</b> main <b>failure</b> <b>detection</b> solutions for large-scale distributed systems. 1...|$|R
40|$|The {{functional}} {{framework of}} a failure detection algorithm for the Space Shuttle Main Engine (SSME) is developed. The basic algorithm is based only on existing SSME measurements. Supplemental measurements, expected to enhance failure detection effectiveness, are identified. To support the algorithm development, a figure of merit is defined to estimate the likelihood of SSME criticality 1 failure modes and the failure modes are ranked in order of likelihood of occurrence. Nine classes of failure detection strategies are evaluated and promising features are extracted {{as the basis for}} <b>the</b> <b>failure</b> <b>detection</b> algorithm. <b>The</b> <b>failure</b> <b>detection</b> algorithm provides early warning capabilities {{for a wide variety of}} SSME failure modes. Preliminary algorithm evaluation, using data from three SSME failures representing three different failure types, demonstrated indications of imminent catastrophic failure well in advance of redline cutoff in all three cases...|$|E
40|$|The {{problem of}} <b>the</b> <b>failure</b> <b>detection</b> in the {{aircraft}} control {{system in the}} presence of disturbance is considered. A history based model-free nonstatistical method using the aircraft control and state data measurements only is proposed. The method needs no a priori information about the model of an aircraft, solving the prediction, identification and training problems...|$|E
30|$|Others studies lack {{many details}} about <b>the</b> <b>failure</b> <b>{{detection}}</b> process. For instance, in [27], failure detection is implemented together with failure mitigation (recovery) {{in a process}} called Fault Injection. This process aims to evaluate the framework capacity to handle failover possibilities. Also, in [7], authors proposed a HA middleware inside VMs for monitoring and restarting in case of failures.|$|E
40|$|Abstract. Unreliable failure {{detectors}} {{are recognized}} as important building blocks for implementing fault-tolerant distributed systems. Further, {{there has been a}} lot of discussion on how to provide them with sophisticated features that allow for adaptation, flexible use, scalability and quality of service enforcement. Despite that, we are not aware of any real distributed system that uses a sophisticated <b>failure</b> <b>detection</b> service. In fact, most systems deployed use <b>the</b> trivial <b>failure</b> <b>detection</b> scheme provided by the underlying communication technologies (e. g. TCP/IP timeouts). We believe that this state of affairs is due to two main reasons: i) there is no widely supported <b>failure</b> <b>detection</b> service API that incorporates these advanced features in a suitable way; and ii) the benefits of using a sophisticated <b>failure</b> <b>detection</b> service are not clearly understood. This paper targets the first issue by proposing a <b>failure</b> <b>detection</b> service that addresses the main necessities of widely distributed systems and implements <b>the</b> state-of-the-art in <b>failure</b> <b>detection</b> mechanisms. Moreover, to improve the usability of the service we took special care in the design of its programming interface. 1...|$|R
40|$|In this paper, {{we present}} the SNMP-FD system. This {{system is a}} novel <b>failure</b> <b>detection</b> service entirely based on the SNMP standard. The {{advantage}} {{of this approach is}} better interoperability, and the possibility to rely on different sources of information for <b>failure</b> <b>detection,</b> including network equipment. This, in turn, gives us more precise failure information. This paper presents the architecture of the SNMP-FD system and discusses its advantages, both from the system engineering and interoperability angle, and the quality of <b>the</b> resulting <b>failure</b> <b>detection</b> service. リサーチレポート（北陸先端科学技術大学院大学情報科学研究科...|$|R
40|$|<b>The</b> {{contribution}} of <b>failure</b> <b>detection,</b> diagnosis and prognosis {{to the energy}} challenge is discussed. Areas of special emphasis included energy management, techniques for <b>failure</b> <b>detection</b> in energy related systems, improved prognostic techniques for energy related systems and opportunities for detection, diagnosis and prognosis in the energy field...|$|R
3000|$|..., {{given the}} input values {{provided}} by the application: the upper bound on the detection time (T_D^U), upper bound on the average mistake duration (T_M^U), and lower bound on the average mistake recurrence time (T_MR^L). First, θ is computed (line 12) which reflects <b>the</b> <b>failure</b> <b>detection</b> probability, based on both {{the probability that a}} message is received (1 −p [...]...|$|E
40|$|In this paper, we {{formulate}} <b>the</b> <b>failure</b> <b>detection</b> {{and isolation}} problem in frequency domain which will answer {{the following questions}} in a natural way: (i) How do we determine the minimum length of the window of observations that is required for detection and isolation? (ii) Can we generate all possible parity vectors from a given minimum order parity vectors...|$|E
40|$|The design {{problem of}} filters for robust Failure De-tection and Isolation, (FDI) is {{addressed}} in this pa-per. <b>The</b> <b>failure</b> <b>detection</b> problem will be consid-ered with respect to both modeling errors and distur-bances. Both an approach based on failure detection observers {{as well as an}} approach based on a standard setup optimization is presented in this paper. ...|$|E
30|$|If the breaker {{fails to}} trip, the fault current {{will keep the}} level of the current above the pickup setting of <b>the</b> breaker <b>failure</b> <b>detection</b> element, <b>the</b> timer will time out and IED 4 will trip the {{required}} breakers (the transformer breaker and the distribution bus sectionalizing breaker) to clear the fault as shown in Fig.  15.|$|R
30|$|The SCTP {{multihoming}} method supports multipath association, which enhances network transmission performance. SCTP supports multihoming {{and develops}} an original transmission performance. <b>The</b> path <b>failure</b> <b>detection</b> mechanism requires suitable path management in a wireless network. A good path management approach effectively distinguishes path conditions (e.g., active or inactive) and efficiently switches among multiple destination addresses (e.g., active or passive path switching).|$|R
40|$|Abstract—Car <b>failure</b> <b>detection</b> is a {{complicated}} process and requires high level of expertise. Any attempt of developing an expert system dealing with car <b>failure</b> <b>detection</b> has to overcome various difficulties. This paper describes a proposed knowledge-based system for car <b>failure</b> <b>detection.</b> <b>The</b> paper explains {{the need for an}} expert system and the some issues on developing knowledge-based systems, <b>the</b> car <b>failure</b> <b>detection</b> process and <b>the</b> difficulties involved in developing the system. The system structure and its components and their functions are described. The system has about 150 rules for different types of failures and causes. It can detect over 100 types of <b>failures.</b> <b>The</b> system has been tested and gave promising results. Keywords—Expert system, car failure diagnosis, knowledgebased system, CLIPS. I...|$|R
40|$|International audienceWe {{present in}} this paper the recent {{developments}} done in P 2 P-MPI, a grid middleware, concerning the fault management, which covers fault-tolerance for applications and fault detection. P 2 P-MPI provides a transparent fault tolerance facility based on replication of com- putations. Applications are monitored by a distributed set of external modules called failure detectors. The contribution {{of this paper is}} the analysis of the advantages and drawbacks of such detectors for a real implementation, and its integration in P 2 P-MPI. We pay especially at- tention to the reliability of <b>the</b> <b>failure</b> <b>detection</b> service and to <b>the</b> <b>failure</b> <b>detection</b> speed. We propose a variant of the binary round-robin protocol, which is more reliable than the application execution in any case. Exper- iments on applications of up to 256 processes, carried out on Grid' 5000 show that the real detection times closely match the predictions...|$|E
40|$|This paper {{presents}} a design method for digital self-reorganizing control systems which is optimally tolerant of failures in aircraft sensors. The functions {{of this system}} are accomplished with software instead of the popular and costly technique of hardware duplication. The theoretical development, based on M-ary hypothesis testing, results in a bank of M Kalman filters operating in parallel in <b>the</b> <b>failure</b> <b>detection</b> logic. A moving window of the innovations of each Kalman filter drives the detection logic to decide the failure state of the system. The detection logic also selects the optimal state estimate (for control logic) from the bank of Kalman filters. The design process {{is applied to the}} design of a self-reorganizing control system for a current configuration of the space shuttle orbiter at Mach 5 and 120, 000 feet. <b>The</b> <b>failure</b> <b>detection</b> capabilities of the system are demonstrated using a real-time simulation of the system with noisy sensors...|$|E
40|$|Random testing (RT) is a {{fundamental}} software testing technique. Adaptive random testing (ART), an enhancement of RT, generally uses fewer test cases than RT to detect the first failure. ART generates test cases in a random manner, together with additional test case selection criteria to enforce that the executed test cases are evenly spread over the input domain. Some {{studies have been conducted}} to measure how evenly an ART algorithm can spread its test cases with respect to some distribution metrics. These studies observed that there exists a correlation between <b>the</b> <b>failure</b> <b>detection</b> capability and the evenness of test case distribution. Inspired by this observation, we aim to study whether failure detection capability of ART can be enhanced by using distribution metrics as criteria for the test case selection process. Our simulations and empirical results show that the newly proposed algorithms not only improve the evenness of test case distribution, but also enhance <b>the</b> <b>failure</b> <b>detection</b> capability of ART...|$|E
40|$|Abstract—Failure {{detection}} is a {{basic service}} for building dependable systems. The large scale distribution of computing systems naturally makes failure detectors much harder to build. Moreover, providing QoS (quality of service) guarantees {{in this context is}} a challenging task. The objective of this paper is twofold: (1) proposing a complete set of classification criteria to compare different <b>failure</b> <b>detection</b> mechanisms, and based on these criteria (2) surveying <b>the</b> main <b>failure</b> <b>detection</b> solutions for large scale distributed systems. Keywords-failure detectors; large scale systems, quality of service I...|$|R
40|$|In {{this work}} a careful review {{describing}} {{different types of}} failures in electrical machines, their characteristic signals generated and diagnosis methods is performed. Additionally, {{a comparison of the}} advantages between <b>the</b> known <b>failure</b> <b>detection</b> methods based on the information required for diagnosis, the occurrence and importance of <b>failures</b> <b>detection,</b> <b>the</b> effectiveness for anticipating a malfunction or <b>failure</b> and <b>the</b> final diagnosis accuracy is also made. Particularly, this review will help to provide a straightforward up date about the most recent work and research in this field...|$|R
40|$|This paper {{presents}} a formal veri cation of two consensus protocols for distributed systems presented in [T. Deepak Chandra and S. Toueg, Unreliable failure detectors for reliable distributed systems, J. ACM, 1996]. These two protocols rely on two underlying <b>failure</b> <b>detection</b> protocols. We formalize an abstract model of <b>the</b> underlying <b>failure</b> <b>detection</b> protocols and building upon this abstract model, formalize the two consensus protocols. We prove that both algorithms satisfy {{the properties of}} uniform agreement, uniform integrity, termination and uniform validity assuming the correctness of their corresponding failure detectors. ...|$|R
