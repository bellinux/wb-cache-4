380|190|Public
25|$|Reuse of {{information}} {{has a tremendous}} return on investment for organizations whose documentation is translated into many languages. <b>Translation</b> <b>memory</b> systems can store text {{that has already been}} translated into dozens of languages for retrieval and reuse.|$|E
2500|$|The {{original}} Sun 1 was a single-board computer {{built around}} the Motorola 68000 microprocessor and introduced in 1982. It included the original Sun 1 memory management unit that provided address <b>translation,</b> <b>memory</b> protection, memory sharing and memory allocation for multiple processes running on the CPU. [...] All access of the CPU to private on-board RAM, external Multibus memory, on-board I/O and the Multibus I/O ran through the MMU, where they were translated and protected in uniform fashion. The MMU was implemented in hardware on the CPU board.|$|E
50|$|When copying a <b>translation</b> <b>memory,</b> {{you must}} copy all five <b>translation</b> <b>memory</b> files. Otherwise, Translator's Workbench {{displays}} an error message when opening the copied <b>translation</b> <b>memory.</b>|$|E
50|$|OmegaT shares many {{features}} with mainstream CAT tools. These include creating, importing and exporting <b>translation</b> <b>memories,</b> {{fuzzy matching}} from <b>translation</b> <b>memories,</b> glossary look-up, and reference and concordance searching.|$|R
50|$|Trados {{can also}} work with {{server-based}} <b>translation</b> <b>memories.</b>|$|R
40|$|In {{this paper}} we {{introduce}} a technique for creating searchable <b>translation</b> <b>memories.</b> Linear B’s searchable <b>translation</b> <b>memories</b> allow a translator to type in a phrase and retrieve a ranked {{list of possible}} translations for that phrase, which is ordered based on {{the likelihood of the}} translations. The searchable <b>translation</b> <b>memories</b> use <b>translation</b> models similar to those used in statistical machine translation. In this paper we first describe the technical details of how the TMs are indexed and how translations are assigned probabilities, and then evaluate a searchable TM using precision and recall metrics. ...|$|R
50|$|The <b>translation</b> <b>memory</b> (TM) {{format of}} memoQ is {{proprietary}} and stored {{as a group}} of files in a folder bearing the name of the <b>translation</b> <b>memory.</b> External data can be imported in delimited text formats and <b>Translation</b> <b>Memory</b> eXchange format (TMX), and <b>translation</b> <b>memory</b> data can be exported as TMX. memoQ can also work with server-based translation memories on the memoQ Server or, using a plug-in, other external <b>translation</b> <b>memory</b> sources. memoQ Translation memories are bilingual.|$|E
50|$|The {{concept of}} the bitext shows certain {{similarities}} {{with that of the}} <b>translation</b> <b>memory.</b> Generally, the most salient difference between a bitext and a <b>translation</b> <b>memory</b> is that a <b>translation</b> <b>memory</b> is a database in which its segments (matched sentences) are stored {{in a way that is}} totally unrelated to their original context; the original sentence order is lost. A bitext retains the original sentence order. However, some implementations of <b>translation</b> <b>memory,</b> such as <b>Translation</b> <b>Memory</b> eXchange (TMX), a standard XML format for exchanging translation memories between computer-assisted translation (CAT) programs, allow preserving the original order of sentences.|$|E
50|$|When {{creating}} a new (file-based) <b>translation</b> <b>memory,</b> SDL Trados Studio creates a database file in which all translation units are stored. The <b>translation</b> <b>memory</b> also stores structural and context information to link all the different segments and their position in a document. This allows the tool to select the most relevant <b>translation</b> <b>memory</b> segment.|$|E
5000|$|... #Subtitle level 2: Handling of <b>translation</b> <b>memories</b> and glossaries ...|$|R
5000|$|... {{technological}} competence, {{especially in}} handling <b>translation</b> <b>memories</b> and terminology management ...|$|R
5000|$|... finding {{translations}} of subsentential elements, e.g. terminology, in bitexts and <b>translation</b> <b>memories</b> ...|$|R
50|$|Pairaphrase {{translates}} the 22 {{file types}} listed below. Existing translation memories from competitive <b>translation</b> <b>memory</b> software can be imported to Pairaphrase in <b>translation</b> <b>memory</b> exchange (.tmx) format.|$|E
50|$|<b>Translation</b> <b>Memory</b> eXchange (TMX) is an XML {{specification}} for {{the exchange}} of <b>translation</b> <b>memory</b> data between computer-aided translation and localization tools {{with little or no}} loss of critical data.|$|E
5000|$|The xml:tm (XML-based Text Memory) {{approach}} to <b>translation</b> <b>memory</b> {{is based on}} the concept of text memory which comprises author and <b>translation</b> <b>memory.</b> [...] xml:tm has been donated to Lisa OSCAR by XML-INTL.|$|E
5000|$|Ensuring {{that the}} {{document}} is completely translated (<b>translation</b> <b>memories</b> {{do not accept}} empty target segments) ...|$|R
40|$|We {{describe}} a machine learning based method to identify incorrect entries in <b>translation</b> <b>memories.</b> It extends previous work by Barbu (2015) through incorporating recall-based machine translation and part-of-speech-tagging features. Our system ranked {{first in the}} Binary Classification (II) task for {{two out of three}} language pairs: English-Italian and English-Spanish. Comment: Presented at the 2 nd Workshop on Natural Language Processing for <b>Translation</b> <b>Memories</b> (NLP 4 TM 2016...|$|R
5000|$|The {{translator}} {{is able to}} re-utilize <b>translation</b> <b>memories,</b> glossaries, dictionaries {{and other}} features of the CAT tool being used ...|$|R
50|$|OmegaT is {{intended}} for professional translators. Its features include customisable segmentation using regular expressions, <b>translation</b> <b>memory</b> with fuzzy matching and match propagation, glossary matching, dictionary matching, <b>translation</b> <b>memory</b> and reference material searching, and inline spell-checking using Hunspell spelling dictionaries.|$|E
5000|$|As stated previously, <b>translation</b> <b>memory</b> {{managers}} may not {{be suitable}} for text that lacks internal repetition or which does not contain unchanged portions between revisions. Technical text is generally best suited for <b>translation</b> <b>memory,</b> while marketing or creative texts will be less suitable.|$|E
5000|$|The MetaTexis {{products}} can also import and export several file types for {{the exchange of}} data, in especially MetaTexis support TMX files for <b>translation</b> <b>memory</b> exchange with other <b>translation</b> <b>memory</b> tools. MetaTexis can also import TBXfiles for terminology exchange with other CAT tools.|$|E
5000|$|Accelerating {{the overall}} {{translation}} process; since <b>translation</b> <b>memories</b> [...] "remember" [...] previously translated material, translators have to translate it only once.|$|R
5000|$|In 1988, Harris {{published}} one of {{the first}} articles on <b>translation</b> <b>memories</b> (which he called [...] "bitexts") and designed software for them.|$|R
50|$|OmegaT can {{translate}} multiple files in multiple file formats in multiple subfolders simultaneously, and consult multiple <b>translation</b> <b>memories,</b> glossaries and dictionaries (limited only by available computer memory).|$|R
50|$|One recent {{development}} {{is the concept of}} 'text memory' in contrast to <b>translation</b> <b>memory.</b> This is also the basis of the proposed LISA OSCAR standard. Text memory within xml:tm comprises 'author memory' and 'translation memory'. Author memory is used to keep track of changes during the authoring cycle. <b>Translation</b> <b>memory</b> uses the information from author memory to implement <b>translation</b> <b>memory</b> matching. Although primarily targeted at XML documents, xml:tm can be used on any document that can be converted to XLIFF format.|$|E
5000|$|Gettext Portable Object format. Though {{often not}} {{regarded}} as a <b>translation</b> <b>memory</b> format, Gettext PO files are bilingual files that are also used in <b>translation</b> <b>memory</b> processes {{in the same way}} translation memories are used. Typically, a PO <b>translation</b> <b>memory</b> system will consist of various separate files in a directory tree structure. Common tools that work with PO files include the GNU Gettext Tools and the Translate Toolkit. Several tools and programs also exist that edit PO files as if they are mere source text files.|$|E
5000|$|The name Wordfast is {{used for}} any {{of a number of}} <b>translation</b> <b>memory</b> {{products}} developed by Wordfast LLC. [...] The original Wordfast product, now called Wordfast Classic, was developed by Yves Champollion in 1999 as a cheaper alternative to Trados, a well-known <b>translation</b> <b>memory</b> program. The current Wordfast products run on a variety of platforms, but use largely compatible <b>translation</b> <b>memory</b> formats, and often also have similar workflows. The software is most popular with freelance translators, although some of the products are also suited for corporate environments.|$|E
5000|$|WFS {{supports}} <b>Translation</b> <b>memories</b> in TMX or Wordfast TM (txt) format, leverages up to 1,000 TMs containing 1 billion TUs {{each and}} serves up to 50,000 users simultaneously ...|$|R
5000|$|Trobador: Online {{web server}} for <b>translation</b> <b>memories</b> search and management. Supports the TMX format and allows {{multiple}} projects and users management. Released on 2011 under a MIT license.|$|R
50|$|<b>Translation</b> <b>memories</b> are {{typically}} {{used in conjunction}} with a dedicated computer assisted translation (CAT) tool, word processing program, terminology management systems, multilingual dictionary, or even raw machine translation output.|$|R
5000|$|Centralized and {{simplified}} <b>Translation</b> <b>memory</b> and terminology management ...|$|E
5000|$|TM {{technology}} only became {{commercially available}} on a wide scale in the late 1990s, so the efforts made by several engineers and translators. Of note is the first TM tool called Trados (SDL Trados nowadays). In this tool, when opening the source file and applying the <b>translation</b> <b>memory</b> so that any [...] "100% matches" [...] (identical matches) or [...] "fuzzy matches" [...] (similar, but not identical matches) within the text are instantly extracted and placed within the target file. Then, the [...] "matches" [...] suggested by the <b>translation</b> <b>memory</b> can be either accepted or overridden with new alternatives. If a translation unit is manually updated, then it is stored within the <b>translation</b> <b>memory</b> for future use {{as well as for}} repetition in the current text. In a similar way, all segments in the target file without a [...] "match" [...] would be translated manually and then automatically added to the <b>translation</b> <b>memory.</b> Another significant milestone of TMS is the projects at IBM's European Language Services (Denmark) in which massive <b>translation</b> <b>memory</b> were used to remove language barrier.|$|E
50|$|<b>Translation</b> <b>memory</b> tools {{often provide}} {{automatic}} retrieval and substitution.|$|E
50|$|Not all {{dictionaries}} are the same, {{and neither}} are all corpora.Apart from <b>translation</b> <b>memories,</b> corpus resources {{with a potential}} use for professional translators could be classified from “robust” to “virtual”.|$|R
50|$|MultiTerm Widget is a {{lightweight}} application designed {{that allows you}} to highlight a word from any application on your desktop and retrieve its meaning and translation immediately from your project glossaries and <b>translation</b> <b>memories.</b>|$|R
40|$|In this paper, {{we propose}} a new method for extracting bilingual {{collocations}} from a parallel corpus to provide phrasal <b>translation</b> <b>memories.</b> The method integrates statistical and linguistic information to achieve effective extraction of bilingual collocations. The linguistic information includes parts of speech, chunks, and clauses. The method involves first obtaining an extended list of English collocations {{from a very}} large monolingual corpus, then identifying the collocations in a parallel corpus, and finally extracting translation equivalents of the collocations based on word alignment information. Experimental results indicate that phrasal <b>translation</b> <b>memories</b> can be effectively used for computer assisted language learning (CALL) and computer assisted translation (CAT) ...|$|R
