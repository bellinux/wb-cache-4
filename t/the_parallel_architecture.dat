182|10000|Public
50|$|The current Córdoba Gate is {{the result}} of various renovations to the {{original}} Roman gate and to the still extant wall ascending the adjacent hill. It has three columns with Corinthian capitals set {{on each side of the}} entranceway and configured in the classical manner, standing on an Attic base without a plinth on a double socle; they are flanked by two semi-octagonal watchtowers. <b>The</b> <b>parallel</b> <b>architecture</b> dates the works to the reign of Augustus or Tiberius. The north tower was rebuilt after being destroyed in the earthquake of 1504. The current appearance of the gate is due to the intervention of the architect José Carmona of Echamorro, 1786-1800.|$|E
50|$|The Parallel Virtual File System (PVFS) is an {{open source}} {{parallel}} file system. A parallel file system {{is a type of}} distributed file system that distributes file data across multiple servers and provides for concurrent access by multiple tasks of a parallel application. PVFS was designed for use in large scale cluster computing. PVFS focuses on high performance access to large data sets. It consists of a server process and a client library, both of which are written entirely of user-level code. A Linux kernel module and pvfs-client process allow the file system to be mounted and used with standard utilities. The client library provides for high performance access via the message passing interface (MPI). PVFS is being jointly developed between <b>The</b> <b>Parallel</b> <b>Architecture</b> Research Laboratory at Clemson University and the Mathematics and Computer Science Division at Argonne National Laboratory, and the Ohio Supercomputer Center. PVFS development has been funded by NASA Goddard Space Flight Center, Argonne, NSF PACI and HECURA programs, and other government and private agencies. PVFS is now known as OrangeFS in its newest development branch.|$|E
40|$|This thesis {{studies the}} floating-point analog-to-digital {{converter}} (FP-ADC). The first attempt is to analyze <b>the</b> <b>parallel</b> <b>architecture</b> of the floating-point converter, {{which is our}} research base. The characteristics and specifications of the floating-point AID converter are described. Simulations of <b>the</b> <b>parallel</b> <b>architecture</b> of the floating-point A/D converter were conceived, run and presented here to support the theoretically derived FP-ADC transfer characteristics. After analyzing <b>the</b> <b>parallel</b> <b>architecture</b> of the floating-point A/D converter, the following work {{is to provide a}} way of minimizing the conversion time as well as keeping the precision of the floating point A/D converter (FP-ADC) by implementing <b>the</b> <b>parallel</b> <b>architecture</b> with Field Programmable Gate Arrays (FPGA). The thesis presents the design and practical implementation of the parallel FP-ADC, based on a FPGA and other hybrid components-of-the-shelf. The correctness of the design was verified by computer simulation, while the functionality of the implemented FP-ADC was tested on a test bench controlled by a PC. (Abstract shortened by UMI. ...|$|E
40|$|The paper {{discusses}} {{the architecture of}} MIMO channel sounders. The semi-sequential design is contrasted with the sequential and <b>the</b> <b>parallel</b> <b>architectures.</b> Measurements with an eight parallel receiver semisequential sounder performed in both indoor and outdoor environments at 2 GHz using different antenna arrays will be presented. <b>The</b> <b>parallel</b> receiver <b>architecture</b> is also shown to provide simultaneous multiple frequency measurements in the 2 - 6 GHz frequency bands. 1...|$|R
40|$|Traditionally, {{parallel}} programming paradigms {{are associated with}} only a single class of <b>parallel</b> <b>architecture.</b> This {{has resulted in a}} lack of portability of software between <b>parallel</b> <b>architectures,</b> also a lack of portability of programmers' skills. This report describes the author's work in unifying <b>the</b> basic <b>parallel</b> <b>architecture</b> classes with <b>the</b> aim of producing a single, unified <b>parallel</b> <b>architecture</b> class. Such a unified class would be capable of supporting all <b>the</b> <b>parallel</b> programming paradigms traditionally associated with <b>the</b> individual <b>parallel</b> <b>architecture</b> classes unified to form <b>the</b> single <b>parallel</b> <b>architecture</b> class. <b>The</b> results of this unification process demonstrate that all <b>parallel</b> <b>architecture</b> classes are capable of efficiently simulating the computation (control methods and memory access) of all other <b>parallel</b> <b>architecture</b> classes, communication can not be so simulated efficiently due to certain architecture classes being non-scalable in terms of bandwidth. [...] ...|$|R
50|$|<b>The</b> <b>parallel</b> <b>architectures</b> of {{supercomputers}} often {{dictate the}} use of special programming techniques to exploit their speed. Software tools for distributed processing include standard APIs such as MPI and PVM, VTL, and open source-based software solutions such as Beowulf.|$|R
30|$|<b>The</b> <b>{{parallel}}</b> <b>architecture</b> of {{this paper}} relies on MATLAB parallel computing toolbox. The key method is running parallel for-loops on workers within contingencies.|$|E
40|$|Abstract—The large {{commercial}} transactions data implied lots of useful knowledge for business decisions, the hidden patterns and relationships {{could be found}} by data mining. This paper analyzed and pointed out the characteristics and the deficiency of the general architecture of the data mining, the general architecture of data mining was improved by the parallel processing technology {{and the results of}} data mining be saved. <b>The</b> <b>parallel</b> <b>architecture</b> of the data mining which made for business intelligence applications with the model storage was presented, and its characteristics were analyzed, the analysis showed that <b>the</b> <b>parallel</b> <b>architecture</b> of data mining has a possibility for business intelligence. Index Terms—parallel data mining, architecture, business intelligence, pattern base I...|$|E
40|$|A {{parallel}} converter architecture {{based on}} the resonant pole inverter (RPI) topology is presented. It is shown that this architecture minimizes the output magnetics required for current sharing. A new current control scheme is introduced which reduces peak currents, losses, and output voltage ripple for many operating conditions. This new control method is applicable to both the single RPI and <b>the</b> <b>parallel</b> <b>architecture.</b> Additionally, the paper analytically quantifies the degree of passive ripple cancellation between cells of a parallel architecture. It is shown that the RMS ripple current of an N cell paralleled converter system is a factor of 1 √(N) lower than for an equivalent single converter. These results are verified using a piecewise-linear model. We conclude that <b>the</b> <b>parallel</b> <b>architecture</b> overcomes {{some of the major}} disadvantages of the conventional RPI. Bose Foundatio...|$|E
50|$|This {{category}} {{includes all}} <b>the</b> <b>parallel</b> <b>architectures</b> that coordinate concurrent execution in lockstep fashion {{and do so}} via mechanisms such as global clocks, central control units or vector unit controllers. Further subdivision of this category is made primarily {{on the basis of}} the synchronization mechanism.|$|R
40|$|This {{monograph}} presents {{examples of}} best practices when combining bioinspired algorithms with <b>parallel</b> <b>architectures.</b> <b>The</b> book includes recent work by leading {{researchers in the}} field and offers a map with the main paths already explored and new ways towards <b>the</b> future. <b>Parallel</b> <b>Architectures</b> and Bioinspired Algorithms will be of value to both specialists in Bioinspired Algorithms, Parallel and Distributed Computing, as well as computer science students trying to understand the present and <b>the</b> future of <b>Parallel</b> <b>Architectures</b> and Bioinspired Algorithms...|$|R
30|$|This work {{presents}} a <b>parallel</b> context-modeling coding <b>architecture</b> and a matching arithmetic coder (MQ-coder) for the embedded block coding (EBCOT) {{unit of the}} JPEG 2000 encoder. Tier- 1 of the EBCOT consumes most of the computation time in a JPEG 2000 encoding system. <b>The</b> proposed <b>parallel</b> <b>architecture</b> can increase <b>the</b> throughput rate of the context modeling. To match the high throughput rate of <b>the</b> <b>parallel</b> context-modeling <b>architecture,</b> an efficient pipelined architecture for context-based adaptive arithmetic encoder is proposed. This encoder of JPEG 2000 can work at 180 MHz to encode one symbol each cycle. Compared with the previous context-modeling <b>architectures,</b> our <b>parallel</b> <b>architectures</b> can improve <b>the</b> throughput rate up to 25 %.|$|R
40|$|Motion {{planning}} {{is a fundamental}} problem {{in a number of}} application areas, including robotics, automation, and virtual reality. This paper describes a parallel implementation of a motion planning algorithm particularly suited for complex systems characterized by many degrees of freedom. The implementation is based on the concurrent exploration of the search space by a randomized planner replicated on each node of <b>the</b> <b>parallel</b> <b>architecture.</b> All processing elements compete to obtain a solution over the entire search space in an OR-parallel fashion. Reported results refer to a low-cost cluster of PCs and an SGI Onyx 2 parallel machine. The experiments emphasize the effectiveness of the approach for complex, high-dimensionality planning problems. We believe that the approach may be useful in other complex search problems, especially when <b>the</b> <b>parallel</b> <b>architecture</b> exhibits relatively high communication latency. ...|$|E
40|$|Abstract- Standard VLSI {{implementation}} of turbo decoding requires substantial memory and incurs a long latency, which cannot be tolerated in some applications. A novel parallel VLSI architecture for low-latency turbo decoding is described, comprising multiple SISO elements, operating jointly on one turbo coded block, {{and a new}} parallel interleaver. The design algorithm for the parallel interleaver is presented, enhancing the error correction performance of <b>the</b> <b>parallel</b> <b>architecture.</b> Latency is reduced up to twenty times and throughput for large blocks is increased up to fivefold relative to sequential decoders, using the same silicon area, and achieving very high coding gain. <b>The</b> <b>parallel</b> <b>architecture</b> scales favorably — latency and throughput improvement with growing block size and chip area. Index Terms: maximum a posteriori (MAP) algorithm, turbo codes, parallel architecture, VLSI architecture, decoders, interleaver. 1...|$|E
40|$|We analize in {{this paper}} the {{possibility}} of simulating <b>the</b> <b>parallel</b> <b>architecture</b> SIMD-MC 2, {{also known as the}} two-dimensional mesh, with P systems with dynamic communication graphs. We illustrate this simulation for an algorithm which computes the sum of given integers. Next, we show how to extend the formalism to the reduction problem...|$|E
40|$|Abstract. <b>The</b> Integral <b>Parallel</b> <b>Architecture</b> (IPA) {{developed}} by BrightScale is a low-power & low-area one-chip solution to solve intense com-putational problems using data-parallel, time-parallel and speculative-parallel mechanisms. BrightScale technology is presented and analyzed {{from the point}} of view of each of the 13 computational motifs proposed in The Berkeley’s View [1]. IPA emerges from the Stephen Kleene’s computational model of the partial recursive functions [3] as <b>the</b> simplest <b>parallel</b> <b>architecture,</b> a good starting point for a true science of parallel computation. We briefly investigate how such an elementary <b>parallel</b> <b>architecture</b> performs, for <b>the</b> main computational motifs, in solving the problems of programmability, portability, flexibility, data movement between computational cells, and between cells and the main memory. 1...|$|R
40|$|This paper {{presents}} a rather simple method to model cluster architectures using Stochastic Automata Networks (SAN) formalism. Although, the modeling power of SAN, the presented models are quite simple {{and do not}} fully describe the complexity of existing clusters. It is not {{the purpose of this}} paper to proposed ready-to-evaluate models to real clusters, but just introduce the formalism to <b>the</b> <b>parallel</b> <b>architectures</b> community. <b>The</b> conclusion of this paper discusses the further steps in order to perform a real case evaluation. 1...|$|R
5000|$|<b>The</b> major <b>parallel</b> DBMS <b>architectures</b> {{which are}} {{induced by the}} {{underlying}} hardware architecture are: ...|$|R
40|$|We {{took part}} in the Web and Relevance Feedback tracks, using the ClueWeb 09 corpus. To process the corpus, we {{developed}} a parallel processing pipeline which avoids the generation of an inverted file. We describe the components of <b>the</b> <b>parallel</b> <b>architecture</b> and the pipeline and how we ran the TREC experiments, and we present effectiveness results. ...|$|E
40|$|This paper {{describes}} {{the architecture of}} a VLSI fuzzy processor, which is fabricated in the 0. 7 #m digital CMOS technology from ES 2. Due to <b>the</b> <b>parallel</b> <b>architecture</b> of the fuzzy rule block, very high performance is achieved. The architecture supports fine tuning and optimization of fuzzy systems by the possibility to weight each fuzzy rule separately...|$|E
30|$|Since the {{communication}} needs for this application {{are important and}} computation needs are much heavier, we have chosen the simplest hardware communication solution (using point-to-point connections). Thus, the multistage architecture-based point-to-point links are used since it satisfies the application communication needs for relatively low implementation costs and reduces {{the communication}} overhead to have {{little effect on the}} global computation time. To this end, the developed video bus drives the input image through <b>the</b> <b>parallel</b> <b>architecture</b> where all processing nodes are independent and perform different image sizes. Thanks to CubeGen framework, the parameterization of <b>the</b> <b>parallel</b> <b>architecture</b> makes it possible to match the specific application needs in terms of BRAM memory and FIFO size that need to buffer large amounts of data. In addition, the two-pipeline architecture represents staged computation where parallelism can be achieved by computing different stages simultaneously on different inputs, mainly when dealing with more than one side simultaneously.|$|E
40|$|We {{propose a}} model for {{describing}} and predicting <b>the</b> <b>parallel</b> performance of multigrid numerical software on distributed memory architectures for which different data partitioning and mapping strategies may be used. The goal of the model is to allow reliable predictions to be made as to the execution time of a given code on {{a large number of}} processors of a given parallel system, by only benchmarking the code on small numbers of processors. Despite its relative simplicity the model is shown to be accurate and robust with respect to both <b>the</b> <b>parallel</b> <b>architectures</b> and <b>the</b> data partitioning strategies that are used...|$|R
40|$|Some {{common issues}} in the {{application}} of the Fired-Rules-Hyper-Cube (FRHC) concept for fast fuzzy logic based control or decision malung are considered. <b>The</b> layered <b>parallel</b> <b>architecture</b> has a very short processing time and can be realized in programmable blocks for implementing sophisticated systems...|$|R
40|$|Holographic optical {{tweezers}} allow the three dimensional, dynamic, multipoint manipulation of micron sized dielectric objects. Exploiting <b>the</b> massive <b>parallel</b> <b>architecture</b> of modern GPUs we can generate highly optimized holograms at video frame rate allowing the interactive micro-manipulation of 3 D structures. Comment: 13 pages, 8 figure...|$|R
40|$|Contra Jackendoff, {{we argue}} that, within <b>the</b> <b>parallel</b> <b>architecture</b> {{framework}} developped in "Foundations of language", the generality of language {{does not require}} a rich conceptual structure. To show this we put forward a delegation model of specialization. We find Jackendoff's alternative, the subdivision model, insufficiently supported. In particular, the computational consequences of his representational notion of modularity need to be clarified...|$|E
40|$|Systems, {{have been}} {{successfully}} applied to model robot controllers. GPGPU is an innovative technological paradigm which applies <b>the</b> <b>parallel</b> <b>architecture</b> of graphic cards to solve parallel, general–purpose problems. In previous work, a GPU simulator for ENPS was introduced. In this paper, a performance analysis on the simulator is performed in order to experimentally measure the speed-up factors resulting from the simulations...|$|E
40|$|The {{special issue}} of The Linguistic Review on "The Role of Linguistics in Cognitive Science" {{presents}} a variety of viewpoints that complement or contrast with the perspective offered in Foundations of Language (Jackendoff 2002 a). The present article {{is a response to}} the special issue. It discusses what it would mean to integrate linguistics into cognitive science, then shows how <b>the</b> <b>parallel</b> <b>architecture</b> proposed in Foundations seeks to accomplish this goal by altering certain fundamental assumptions of generative grammar. It defends this approach against criticisms both from mainstream generative grammar and from a variety of broader attacks on the generative enterprise, and it reflects on the nature of Universal Grammar. It then shows how <b>the</b> <b>parallel</b> <b>architecture</b> applies directly to processing and defends this construal against various critiques. Finally, it contrasts views in the special issue with that of Foundations with respect to what is unique about language among cognitive capacities, and it conjectures about the course of the evolution of the language faculty...|$|E
5000|$|This was unusual, {{being driven}} by <b>the</b> {{synchronous}} <b>parallel</b> processing <b>architecture.</b> <b>The</b> basic philosophy can be summarized as follows: ...|$|R
40|$|Transactional {{memory is}} a {{promising}} programming model to enable high performance programs with reasonable programmer effort on <b>the</b> <b>parallel</b> <b>architectures</b> favored by modern processor manufacturers. This paper introduces dependence-aware transactions, a new method {{for maintaining the}} conflict serializability safety property of memory transactions while allowing significant freedom for an implementation’s version management and conflict detection. The paper evaluates two implementations of dependence-aware transactional memory: one all-software implementation and one mostly-hardware implementation. The results of micro-benchmarks indicate the promise of dependence-aware transactions to increase {{the performance of a}} transactional memory system, with no change in the transactional programming model...|$|R
50|$|In Part I, Muthesius {{discusses}} the individuals involved in <b>the</b> <b>parallel</b> development of <b>architecture</b> and the Arts and Crafts Movement.|$|R
40|$|This paper {{describes}} our {{entry into}} the TREC 2010 Web track. We extracted and ranked results for both last year’s and this year’s topics from the ClueWeb 09 corpus using a parallel processing pipeline that avoids the generation of an inverted file. We describe the components of <b>the</b> <b>parallel</b> <b>architecture</b> and the pipeline and how we ran the TREC experiments, and we present effectiveness results. ...|$|E
40|$|International audienceThis paper proposes an {{efficient}} method for implementing parallel AES-GCM cores using FPGAs. The proposed method improves {{the performance of}} <b>the</b> <b>parallel</b> <b>architecture</b> (Throughput/Slice). Presented architectures {{can be used for}} applications which require encryption and authentication with slow changing keys like Virtual Private Networks (VPNs). Our architectures were evaluated using Virtex 5 FPGAs. It is shown that the performance of the presented parallel AES-GCM architecture outperforms the previously reported ones...|$|E
40|$|An {{algorithm}} {{to solve}} the eigenproblem for non-symmetric matrices on an N × N array of mesh connected processors, isomorphic to the architecture described by Brent and Luk for symmetric matrices, is presented. This algorithm is a generalization of the classical Jacobi method, which holds promise for parallel architectures. The rotational parameters for the non-symmetric case are carefully analyzed; many examples of a working program, simulating <b>the</b> <b>parallel</b> <b>architecture,</b> are given...|$|E
40|$|This manual {{describes}} {{a set of}} functions for using image pyramids on the Connection Machine. These functions are an extension of *LISP which itself {{is an extension of}} *LISP. The functions were designed to work on the Connection Machine 2 of <b>the</b> Northeast <b>Parallel</b> <b>Architectures</b> Center located at Syracuse University...|$|R
40|$|The main {{emphasis}} of the author's work has been directed towards achieving efficient <b>parallel</b> solutions to <b>the</b> complex computing problems encountered in scientific and engineering applications, by developing high performance <b>parallel</b> <b>architectures</b> and efficient mapping of algorithms onto these. Besides investigating the theoretical aspects of algorithms and architectures and carrying out simulation studies on them, {{he has also been}} able to build hardware testbeds for many of <b>the</b> proposed <b>parallel</b> <b>architectures...</b>|$|R
40|$|Abstract. We {{present a}} family of {{algorithms}} for local optimization that exploit <b>the</b> <b>parallel</b> <b>architectures</b> of contemporary computing systems to accomplish significant performance enhancements. This capability is important for demanding real time applications, as well as, for prob-lems with time–consuming objective functions. The proposed concurrent schemes namely nomadic and bundle search are based upon well es-tablished techniques such as quasi-Newton updates and line searches. The parallelization strategy consists of (a) distributed computation of an approximation to the Hessian matrix and (b) parallel deployment of line searches on different directions (bundles) and from different start-ing points (nomads). Preliminary results showed that <b>the</b> new <b>parallel</b> algorithms can solve problems in less iterations than their serial rivals...|$|R
