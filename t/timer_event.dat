4|87|Public
5000|$|Pharo has an {{implementation}} in the Collections-Sequenceable package {{along with a}} set of test cases. A heap is used in the implementation of the <b>timer</b> <b>event</b> loop.|$|E
30|$|This {{category}} groups {{two types}} of events: <b>Timer</b> <b>event,</b> denoting the time on which the associated action is scheduled for execution; and Repeat event, specifying the time on which {{the execution of the}} associated action will be repeated. We have defined a new class for each type of those events: TimerEvent and RepeatEvent.|$|E
30|$|Leandro et al. [26] {{contribute}} DRINA, {{a lightweight}} and reliable routing approach for in-network aggregation. DRINA follows a cluster-based approach and builds a shortest path tree to sink. Nodes in each cluster forward the sensed {{data to the}} cluster head, which then relays the data to the sink. This solution relies on a dedicated node to perform data aggregation, which means all nodes in the cluster must transmit the sensed data to the cluster head. Jongsoo et al. [27] propose Lump to perform Quality-of-Service aware aggregation for heterogeneous traffic. Lump prioritises packet based on the latency requirements. Lump maintains a queue for each next-hop address, where it stores the packets. Lump uses a periodic send-timer, which raises the priority level of the packets on each <b>timer</b> <b>event.</b> Whenever the priority is raised to the highest level, all packets in the queue are aggregated and transmitted.|$|E
5000|$|... {{peripherals}} such as <b>timers,</b> <b>event</b> counters, PWM generators, and watchdog ...|$|R
40|$|Virtual Machine Monitors (VMM) {{have become}} popular in {{different}} application areas. Some applications may require {{to generate the}} <b>timer</b> <b>events</b> with high resolution and precision. This however may be challenging due {{to the complexity of}} VMMs. In this paper we focus on the timer functionality provided by five different VMMs-Xen, KVM, Qemu, VirtualBox and VMWare. Firstly, we evaluate resolutions and precisions of their <b>timer</b> <b>events.</b> Apparently, provided resolutions and precisions are far too low for some applications (e. g. networking applications with the quality of service). Then, using Xen virtualization we demonstrate the improved timer design that greatly enhances both the resolution and precision of achieved <b>timer</b> <b>events...</b>|$|R
50|$|SIM.JS {{supports}} entities, resources (Facility, Buffers and Stores), communication (via <b>Timers,</b> <b>Events</b> and Messages) {{and statistics}} (with Data Series, Time Series and Population statistics).|$|R
40|$|Hard disk-based {{personal}} {{video recorders}} {{have the capacity}} to store large quantities of video contents. A personal video recorder serving one household may have to cater for the diverse entertainment tastes imposed by different family members. <b>Timer</b> <b>event</b> programmed video recordings have a tendency to accumulate {{and it is difficult to}} access large video collections on current generation personal video recorders. This is because the recordings often are presented linearly in a chronologically ordered list that is accessed using the navigation keys on a remote control. In this study an alternative strategy for accessing large video collections via the navigation keys of a remote control is investigated. The strategy automatically clusters the video recording using cuts that are perceptually meaningful to the viewers and that minimize the retrieval effort. However, the results suggest that navigation keys do not meet the needs of large video collection browsing. 1...|$|E
50|$|The Timer Service {{provides}} {{two types}} of timers: single <b>event</b> <b>timers</b> and periodic <b>timers.</b> Single <b>event</b> <b>timers</b> will expire once and are deleted after notification. Periodic timers will expire each time a specified duration is reached, and the process is notified about the expirations. Periodic timers have to be explicitly deleted by invoking a timer deletion function.|$|R
50|$|At T minus zero, the two SRBs are ignited, under {{command of}} the four onboard computers; {{separation}} of the four explosive bolts on each SRB is initiated; the two T-0 umbilicals (one {{on each side of}} the spacecraft) are retracted; the onboard master timing unit, <b>event</b> <b>timer</b> and mission <b>event</b> <b>timers</b> are started; the three SSMEs are at 100%; and the ground launch sequence is terminated.|$|R
40|$|International audienceFollowing {{the trend}} to combine {{techniques}} to cover several {{facets of the}} development of modern systems, an integration of Z and CSP, called, has been proposed as a refinement language; its relational model, based on the unifying theories of programming (UTP), justifies refinement in the context of both Z and CSP. In this paper, we introduce, a timed extension of, and present a new UTP time theory, which we use to give semantics to and to validate some of its laws. In addition, we provide a framework for validation of timed programs based on FDR, the CSP model-checker. In this technique, a syntactic transformation strategy is used to split a timed program into two parallel components: an untimed program that uses <b>timer</b> <b>events,</b> and a collection of timers. We show that, with the <b>timer</b> <b>events,</b> it is possible to reason about time properties in the untimed language, and so, using FDR. Soundness is established using a Galois connection between the untimed UTP theory of (and CSP) and our time theory...|$|R
30|$|Our {{framework}} {{allows for}} user-defined <b>timer</b> <b>events.</b> Statistics for incoming/outgoing packet activity {{as well as}} queue lengths are all logged using counters. The NCRAWL logger periodically retrieves statistics and notifies the user at runtime about the flow stability and the corresponding queue lengths. The latter are also available {{for use in the}} NC algorithm if needed. Finally, the developer may also implement additional debugging support for inspecting the algorithm configuration at runtime using Click’s read handler.|$|R
50|$|Supports <b>Event</b> <b>Timers</b> {{allowing}} multiprocessing.|$|R
5000|$|BOLT enables {{viewing of}} AJAX pages that are written using ECMA-262 version 3/JavaScript 1.6 standard. The Web pages that use <b>timer</b> related <b>events</b> are not {{currently}} supported.|$|R
40|$|Presented are {{equations}} {{for time}} synchronization of laser ranging stations. The system {{consists of a}} satellite fitted with laser retroreflectors associated to a light detector and an <b>event</b> <b>timer</b> and two laser ranging stations with their own <b>event</b> <b>timers.</b> Methods of determining the Lasso intercalibration constant are given...|$|R
5000|$|Most {{domestic}} VCRs {{are equipped}} with a television broadcast receiver (tuner) for TV reception, and a programmable clock (timer) for unattended recording of a television channel from a start time to an end time specified by the user. These features began as simple mechanical counter-based single-event timers, but were later replaced by more flexible multiple-event digital clock timers. In later models the multiple <b>timer</b> <b>events</b> could be programmed through a menu interface displayed on the playback TV screen ("on-screen display" [...] or OSD). This feature allowed several programs to be recorded at different times without further user intervention, and became a major selling point.|$|R
50|$|Media Foundation {{provides}} a Media Session object {{that can be}} used to set up the topologies, and facilitate a data flow, without the application doing it explicitly. It exists in the control layer, and exposes a Topology loader object. The application specifies the required pipeline topology to the loader, which then creates the necessary connections between the components. The media session object manages the job of synchronizing with the presentation clock. It creates the presentation clock object, and passes a reference to it to the sink. It then uses the <b>timer</b> <b>events</b> from the clock to propagate data along the pipeline. It also changes the state of the clock to handle pause, stop or resume requests from the application.|$|R
5000|$|To {{lighten the}} game there are special events with {{hard to beat}} opponents, [...] "Realm vs Realm" [...] etc. - Alliance and Solo Events {{constantly}} change based on a <b>timer.</b> Solo <b>events</b> are grouped by castle level (difficulty): Ranges 1-10 / 11-20 / 21-30.|$|R
40|$|We {{present a}} {{complete}} framework {{to design and}} deploy adaptive low power wireless networks. The framework consists of Fennec Fox, a four-layer network protocol stack, and Swift Fox, a high-level programming language. At run-time, Fennec Fox dynamically reconfigures services running on the network protocol stack layers using a library of modules optimizing a layer’s performance with respect to some metric (delay, power consumption, etc.). While network reconfiguration is triggered by sensing or <b>timer</b> <b>events,</b> policies specifying how a network should be reconfigured when given events occur are programmed in Swift Fox at design time. We discuss a network that reconfigures its communication services to support 3 scenarios and that was tested on mica 2, intelMote 2, and telosB architectures, the last one requiring 21 KB of ROM and 2 KB of RAM...|$|R
50|$|This {{service is}} used when LCS client wants to track several MS. Triggers can be <b>timers</b> or MS <b>events</b> like change of location.|$|R
40|$|Tanenbaum’s MINIX Operating System was {{extended}} with a Real-Time microkernel {{and services to}} conform MINIX 4 RT, a Real-Time Operating System for academic uses that includes more flexible Interprocess Communications facilities supporting basic priority inheritance protocol, a fixed priority scheduler, <b>timer</b> and <b>event</b> driven interrupt management, statistics and Real-Time metrics gathering keeping backward compatibility with standard MINIX versions...|$|R
40|$|Up to now, two {{internal}} events influence scheduling {{decisions of}} contemporary operating systems: <b>timer</b> <b>events</b> and I/O-related interrupts. Timing information supports preemption and priority adjustment. Knowledge about issued or completed I/O operations helps to wake-up sleeping processes and {{to boost their}} priority. Preferring deblocked processes {{at the end of}} I/O operations improves the interactive performance and saves buffer space because available data is consumed short after its availability. With the upcoming of processors clocked with hundreds of megahertz, the processor speed exceeds the speed of affordable memory by factors. If it is accepted to influence execution priorities by slow I/O events, why should scheduling neglect events related to other slow devices like main memory and memory data paths? Our novel approach to scheduling is based on knowledge derived from counters in the memory subsystem. We demonstrate that the usage of information related to cache- a [...] ...|$|R
40|$|Distributed and {{concurrent}} systems tend {{to generate}} {{large numbers of}} events which require further processing, such as filtering and establishment of co-relations, {{in order to become}} useful for human or automated managers. This work focuses on the detection of composite events defined through event expressions involving primitive events and some operators: boolean conjunction and disjunction; sequence, repetition, and absolute, periodic and relative <b>timer</b> <b>events.</b> A concrete result of this work was the design and implementation of a general-purpose Event Processing Service (EPS) which may be used by monitoring applications to be informed about the occurrence of primitive and composite events. Composite events are commonly represented as trees where the leaf nodes represent primitive event types and the intermediate nodes represent any of the supported event operators. The main contribution of this work is the description of a method to process composite events that share common sub-expressions with other composite events. The Event Processing Service was implemented in Java {{within the framework of the}} Sampa Project...|$|R
40|$|Tanenbaum’s MINIX {{operating}} system [1] was extended by Wainer with Real-Time (RT) services to conform RT-MINIX [2, 3]. This work is on RT-MINIXv 2, {{a new version}} for academic uses that includes a RT-microkernel with more flexible IPC facilities supporting basic priority inheritance protocol, a fixed priority scheduler, <b>timer</b> and <b>event</b> driven interrupt management, statistics and RTmetrics collection keeping backward compatibility with standard MINIX versions...|$|R
40|$|The {{test unit}} is a custom photodetector/event timer, PET, {{built for the}} Smithsonian Astrophysical Observatory, SAO, by Los Alamos which records elapsed time in 10 ps steps. The 1 Kg, 12 cm {{diameter}} PET unit uses 10 watts of electrical power and was tested to SAO`s specified flight conditions. The <b>event</b> <b>timer</b> has two inputs [...] a reference clock oscillator input and a stop signal. Like a stop watch with split timing capability, the <b>event</b> <b>timer</b> records the instant a stop signal arrives. At that sample instant, the number of elapsed clock cycles are stored and the sample instant position between two reference clock edges is interpolated and stored. Then that stored data can be shifted serially to an external computer. The photodetector part of the PET responds to an optical input and provides the electrical output signal to the <b>event</b> <b>timer</b> specifying the sample instant. This test report discusses the <b>event</b> <b>timer</b> test results. Test equipment is shown {{for most of the}} operational tests. The relay rack contains test pursers and clocks. The environmental chamber controls temperature. The computer reads and records the serial data from the PET. Reported testing topics include: Pulse shapes to be used as test inputs, test results obtained using the electrical source`s input, optical test results which are the best simulation of specified operational conditions, heat sink operation in vacuum. Vibration tests performed to SAO`s specification...|$|R
5000|$|Most modern browsers allow [...] {{to execute}} {{only if it}} was called by a user {{interaction}} (e.g., a mouse click) event handler. Any non-interactive calls (<b>timer</b> callback, load <b>events,</b> etc.) to [...] result in the new window being blocked.|$|R
50|$|The CM pilot {{served as}} navigator, so his control panel (center) {{included}} the Guidance and Navigation computer controls, the caution and warning indicator panel, the <b>event</b> <b>timer,</b> the Service Propulsion System and RCS controls, {{and the environmental}} control system controls.|$|R
50|$|Newer {{motherboards}} include additional counters {{through the}} Advanced Configuration and Power Interface (ACPI), a counter on the Local Advanced Programmable Interrupt Controller (Local APIC), and a High Precision <b>Event</b> <b>Timer.</b> The CPU itself also provides the Time Stamp Counter (TSC) facility.|$|R
50|$|Each player's game {{record was}} {{represented}} in non-volatile memory as {{the set of}} items they had in their inventory, the visit counters of all possible nodes in the game (unvisited nodes having a count of zero), the scene toggle information (item used/taken/etc.), applicable <b>timers</b> (real-time <b>events</b> would suspend when games were saved), and their trained speech sampled data. To resume play, all one {{had to do was}} speak their name when asked to do so by Halcyon.|$|R
30|$|Finally, we must define how the {{admission}} control mechanism on each node will behave in the <b>event</b> of <b>timer</b> expiration {{depending on the}} type of timer. Since per flow timer expiration occurs when {{the admission}} control mechanism cannot confirm the minimum bandwidth required for transmission, all reservations made on behalf of this flow are removed and all per request timers are canceled. On the other hand, the per sub-request <b>timer</b> expiration <b>event</b> occurs when the flow is partially confirmed and the portion of bandwidth required, which has not been confirmed, is released.|$|R
50|$|Within a micro {{instruction}} execution cycle, the CPU {{as well as}} an input / output controller is connected to an external 16 kByte huge random access memory device (RAM). Via the input-output controller device, communication with virtual input and output devices is supported by Direct Memory Access mode (DMA), Inter-Integrated Circuit Connection (I2C), and Interrupt request functionality (IRQ). A output port, a display, a <b>timer,</b> an <b>event</b> trigger, a digital-analog converter, a keyboard and data input / output channel is provided as virtual IC device for explaining didactically the communication with external devices.|$|R
40|$|Gibbs et al (2007, these proceedings) {{reports on}} a major upgrade and {{expansion}} of capability at the Space Geodesy Facility, Herstmonceux, UK. A prerequisite of the laser ranging upgrade to kHz repetition rate is the in-house build of a ps-level precision <b>event</b> <b>timer,</b> based on Thales clock units and dubbed HxET. Extensive us...|$|R
40|$|A {{status report}} is {{presented}} {{for a time}} transfer experiment which compares the times of flight in the east-west and west-east directions of short pulses of light sent from a laser coupled to the 48 -inch telescope at the NASA Goddard Optical Research Facility to the U. S. Naval Observatory and reflected back over the same path. The times t and t when each light pulse leaves GORE and returns are measured 1 3 with an <b>event</b> <b>timer</b> referenced to a hydrogen maser. The time t 2 when the pulse is reflected at USNO is measured with a portable <b>event</b> <b>timer</b> and maser combination carried in a heated and air-conditioned truck. Each maser is mintained in a temperature-controlled environment. The portable maser enclosure is supported by pnemtic shock and vibration suppression mounts. The quantity is determined. The apparatus is calibrated by performing correspondin...|$|R
40|$|Abstract—Hierarchical {{scheduling}} frameworks (HSFs) provide {{means for}} composing complex real-time systems from well-defined subsystems. This paper describes {{an approach to}} provide hierarchically scheduled real-time applications with virtual <b>event</b> <b>timers,</b> motivated by the need for integrating priority processing applications in an HSF. Specifically, the paper proposes a tech-nique to minimize the overhead of event handling in HSFs and outlines a simple implementation. I...|$|R
40|$|The Space Borne <b>Event</b> <b>Timer</b> {{is a part}} of the NASA laser ranging {{system that}} is {{intended}} to operate aboard the Space Shuttle orbiting over California. The object is to measure, by laser ranging, the earth movement along the San Andreas fault and possibly forecast future earthquakes. A number of cube reflector targets will be placed along both sides of the fault. The ranging system aboard the Space Shuttle will fire a burst of laser pulses at each target and detect the reflected light. Time differences between pulses from the two sides of the fault will indicate earth displacements. The Space Borne <b>Event</b> <b>Timer</b> is a CAMAC compatible system that provides extremely accurate timing data and controls the operation of the ranging system. For each event the time is given in 19. 53 increments from the instant of firing the laser to the instant the reflected light is received back, within a range of 130 days...|$|R
50|$|The High Precision <b>Event</b> <b>Timer</b> (HPET) is a {{hardware}} timer used in personal computers. It was developed jointly by AMD and Microsoft {{and has been}} incorporated in PC chipsets since circa 2005. Formerly referred to by Intel as a Multimedia Timer, the term HPET was selected to avoid confusion with the multimedia timers as a software feature introduced in the MultiMedia Extensions to Windows 3.0.|$|R
30|$|NCRAWL {{has been}} {{developed}} in the Click modular router framework[10]. Click {{can be used to}} develop primarily OSI layer 3 packet processors, which can be directly deployed inside the standard Linux network stack. A Click processor is mainly comprised of (a) processing stages which are called elements and (b) an element interconnection configuration that indicates the processing flow. Execution in Click is event-driven, with four different types of asynchronous events, namely the incoming packet event, the ready-to-forward packet <b>event,</b> the <b>timer</b> expire <b>event,</b> and the external read or write events to Click memory. Since all Click events are asynchronous, a Click packet processor leverages internal queues to temporarily store incoming packets, since they are to be forwarded asynchronously.|$|R
