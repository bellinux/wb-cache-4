10000|10000|Public
5|$|The {{controller}} {{is central}} to the correct function of an Xgrid, as this node is responsible for the distribution, supervision and coordination of <b>tasks</b> on agents. The program running on the controller can assign and reassign <b>tasks</b> to handle individual agent failures on demand. The number of <b>tasks</b> assigned to an agent depend on two factors: the number of agents on an Xgrid and the number of processors in each node. The number of agents on an Xgrid determines how the controller will assign <b>tasks.</b> The <b>tasks</b> may be assigned simultaneously for a large number of agents, or queued for a small number of agents. When a node with more than one processor is detected on an Xgrid, the controller may assign one task per processor; this only occurs if the number of agents on the network is lower than the number of <b>tasks</b> the controller has to complete.|$|E
5|$|A {{computer}} {{can act as}} one or {{all three of these}} components at the same time. The Xgrid protocol provides the basic infrastructure for computers to communicate, but is not involved in the processing of the specified calculation. Xgrid is targeted towards time consuming computations that can be easily segregated into smaller <b>tasks,</b> sometimes called embarrassingly parallel <b>tasks.</b> This includes Monte Carlo calculations, 3D rendering and Mandelbrot maps.|$|E
5|$|In 2005, Amazon.com {{launched}} the Amazon Mechanical Turk. The web-based software application coordinates programming <b>tasks</b> with human intelligence, inspired {{in part by}} the way Kempelen's Turk operated. The program is designed to have humans perform <b>tasks,</b> such as color comparisons, that computers struggle with.|$|E
50|$|The Action Alliance has 14 <b>Task</b> Forces: Infrastructure <b>Task</b> Forces {{include the}} Data and Surveillance <b>Task</b> Force, the National Strategy for Suicide Prevention <b>Task</b> Force, and the Research Prioritization <b>Task</b> Force. High-Risk Populations <b>Task</b> Forces include the American Indian/Alaska Native <b>Task</b> Force, the LGBT Populations <b>Task</b> Force, the Military/Veterans <b>Task</b> Force, the Suicide Attempt Survivors <b>Task</b> Force, and the Survivors of Suicide Loss <b>Task</b> Force. Interventions <b>Task</b> Forces include the Clinical Care and Intervention <b>Task</b> Force, the Clinical Workforce Preparedness <b>Task</b> Force, the Faith Communities <b>Task</b> Force, the Public Awareness and Education <b>Task</b> Force, the Workplace <b>Task</b> Force, and the Youth in Contact with the Juvenile Justice System <b>Task</b> Force.|$|R
50|$|Multi-jurisdictional Units: Probation Officers are {{assigned}} to multi-jurisdictional <b>task</b> forces such as the U.S. Marshal's Fugitive <b>Task</b> Force, Narcotics <b>Task</b> Force, FBI <b>Task</b> Force, North County Regional Gang <b>Task</b> Force, East County Gang <b>Task</b> Force and the Violent Crime <b>Task</b> Force.|$|R
50|$|The Sixth Fleet is operationally {{organized}} into <b>task</b> forces. Naval Striking and Support Forces, South included <b>Task</b> Force 502 (Carrier Forces, effectively <b>Task</b> Force 60), <b>Task</b> Force 503 (Amphibious Forces), <b>Task</b> Force 504 (Landing Forces), <b>Task</b> Force 505 (Logistics Forces), and <b>Task</b> Force 506 (Special Operations Forces).|$|R
5|$|In {{addition}} to PET and fMRI, which show which {{areas of the}} brain are activated by certain <b>tasks,</b> researchers also use diffusion tensor imaging (DTI), which shows the neural pathways that connect different brain areas, thus providing insight into how different areas interact. Functional near-infrared spectroscopy (fNIRS) is another hemodynamic method used in language <b>tasks.</b>|$|E
5|$|J â€“ Securing <b>tasks</b> {{defined by}} special legal enactments.|$|E
5|$|Like her siblings, Louise {{was brought}} up with the strict {{programme}} of education devised by her father, Prince Albert, and his friend and confidant, Baron Stockmar. The young children were taught practical <b>tasks,</b> such as cooking, farming, household <b>tasks</b> and carpentry.|$|E
5000|$|<b>Task</b> {{analysis}} is {{the analysis of}} how a <b>task</b> is accomplished, including {{a detailed description of}} both manual and mental activities, <b>task</b> and element durations, <b>task</b> frequency, <b>task</b> allocation, <b>task</b> complexity, environmental conditions, necessary clothing and equipment, and any other unique factors involved in or required for one or more people to perform a given <b>task.</b>|$|R
40|$|Information system (IS) {{support of}} human problem solving during the complex <b>task</b> of {{auditing}} within a computer environment was investigated. 74 computer audit specialist professionals from nine firms {{participated in the}} field experiment. <b>Task</b> accomplishment behavior was recorded via a computerized activity-logging technique. Theoretical constructs of interest included: 1) IS problem-solving support, 2) <b>task</b> domain knowledge, and 3) decision-making behavior. It was theorized that <b>task</b> domain knowledge influences the type of IS most functionally appropriate for usage by that individual. IS <b>task</b> presentation served as the treatment variable. <b>Task</b> domain knowledge was investigated as a moderating factor of <b>task</b> accomplishment <b>Task</b> accomplishment, the dependent variable, was defined as search control strategy and quality of <b>task</b> performance. A subject's <b>task</b> domain knowledge was assessed over seven theoretical domains. Subjects were assigned to higher or lower <b>task</b> domain knowledge groups based on performance on professional competency examination questions. Research hypothesis one investigated the effects of <b>task</b> domain knowledge on <b>task</b> accomplishment behavior. Several <b>task</b> domain knowledge bases were found to influence both search control strategy and <b>task</b> performance. <b>Task</b> presentation ordering effects, hypothesis two, were not found to significantly influence search control strategy or <b>task</b> performance. The third hypothesis investigated interaction effects of a subject's <b>task</b> domain knowledge and <b>task</b> presentation ordering treatments on <b>task</b> accomplishment behavior. An interaction effect was found to influence the subject's search control strategy. The computer-specific knowledge base and <b>task</b> presentation ordering treatments were found to interact as joint moderators of search control strategy. <b>Task</b> performance was {{not found to be}} significantly influenced by interaction effects. Users' <b>task</b> accomplishment was modeled based upon problem-solving behavior. A subject's level of <b>task</b> domain knowledge was found to serve as a moderating factor of IS usage. Human information-processing strategies, IS usage, and <b>task</b> domain knowledge were integrated into a comprehensive IS user <b>task</b> model. This integrated model provides a robust characterization scheme for IS problem-solving support in a complex <b>task</b> environment...|$|R
40|$|The {{selective}} {{transfer of}} <b>task</b> knowledge {{within the context}} of artificial neural networks is studied in the MTL learning framework, {{a modified version of the}} multiple <b>task</b> learning (MTL) method of functional transfer. MTL is a knowledge based inductive learning system that uses prior <b>task</b> knowledge to adjust its inductive bias. MTL employs a separate learning rate for each <b>task</b> output node. The learning rate for each secondary <b>task</b> varies as a function of a measure of relatedness between that <b>task</b> and the primary <b>task.</b> A definition of <b>task</b> relatedness is given. Eight <b>task</b> relatedness measures are presented and are compared empirically. Experiments demonstrate that from impoverished training sets MTL develops predictive models which have superior generalization ability compared with models produced by single <b>task</b> learning or multiple <b>task</b> learning. KEY WORDS <b>task</b> knowledge transfer, neural networks, <b>task</b> relatedness 1...|$|R
5|$|Python {{has been}} used in {{artificial}} intelligence <b>tasks.</b> As a scripting language with modular architecture, simple syntax and rich text processing tools, Python is often used for natural language processing <b>tasks.</b>|$|E
5|$|SAS macros are {{pieces of}} code or {{variables}} that are coded once and referenced to perform repetitive <b>tasks.</b>|$|E
25|$|There is less {{interference}} between {{visual and}} spatial <b>tasks</b> than between two visual <b>tasks</b> or two spatial <b>tasks.</b>|$|E
50|$|The ISSC manages three <b>task</b> forces: the Growing Areas <b>task</b> force, the Processing and Distribution <b>task</b> force, and Administration <b>task</b> force. Committees {{are often}} {{appointed}} to assist <b>task</b> forces in developing recommendations. Delegates from each state shellfish control agency vote on recommendations {{submitted by the}} <b>task</b> forces.|$|R
40|$|We {{propose a}} novel {{power-aware}} <b>task</b> scheduling algorithm for DVS-enabled real-time multiprocessor systems. Unlike the existing algorithms, the proposed DVS algorithm can handle conditional <b>task</b> graphs (CTGs) which model more complex precedence constraints. We first propose a condition-unaware <b>task</b> scheduling algorithm integrating the <b>task</b> ordering algorithm for CTGs and the <b>task</b> stretching algorithm for unconditional <b>task</b> graphs. We then describe a condition-aware <b>task</b> scheduling algorithm which assigns to each <b>task</b> the start {{time and the}} clock speed, taking account of the condition matching and <b>task</b> execution profiles. Experimental {{results show that the}} proposed condition-aware <b>task</b> scheduling algorithm can reduce the energy consumption by 50 % on average over the non-DVS <b>task</b> scheduling algorithm...|$|R
5000|$|... 1969 - The ALA's Social Responsibilities Round Table (SRRT) {{is formed}} as a forum to promote social {{responsibility}} as a core value of librarianship. Today, SRRT includes several <b>task</b> forces: Feminist <b>Task</b> Force; Hunger, Homelessness, and Poverty <b>Task</b> Force (HHPTF); International Responsibilities <b>Task</b> Force; Martin Luther King Jr. Holiday <b>Task</b> Force (MLKTF); The Rainbow Project <b>Task</b> Force; and <b>Task</b> Force on the Environment.|$|R
25|$|In virtual reality, {{participants}} perform prospective memory <b>tasks</b> in {{a virtual}} world on a computer. Experimenters can create event-based <b>tasks</b> such as remembering to label boxes as fragile before moving or time-based <b>tasks</b> such as allowing a removal man to enter the house in five minutes. All <b>tasks</b> involve daily and other real life actions that rely on some aspects of prospective memory.|$|E
25|$|The kernel and {{scheduling}} is distributed across the SPEs. <b>Tasks</b> are synchronized using mutexes or semaphores as {{in a conventional}} operating system. Ready-to-run <b>tasks</b> wait in a queue for an SPE to execute them. The SPEs use shared memory for all <b>tasks</b> in this configuration.|$|E
25|$|Divers may be {{employed}} professionally to perform <b>tasks</b> underwater. Some of these <b>tasks</b> {{are suitable for}} scuba.|$|E
40|$|The author {{presents}} {{an analysis of}} reconnaissance and counterreconnaissance missions in the U. S. Army armor and mechanized infantry <b>task</b> force. An introduction to reconnaissance and counterreconnaissance provides background information essential {{to the analysis of}} each mission. The impact of information processing within the <b>task</b> force and its effect on mission execution is discussed. A systematic approach to mission, or <b>task,</b> analysis using four <b>task</b> variables (<b>task</b> characteristics, <b>task</b> environment, inter-unit <b>task</b> interdependence, technology) identifies the uncertainty in the <b>task</b> and the subsequent impact on information processing. An analysis of reconnaissance and counterreconnaissance using the four variables reveals the uncertainty in each <b>task</b> and its effect on the information processing capability of the <b>task</b> force. A unique command and control architecture is developed for each <b>task</b> which addresses the uncertainty in the <b>task</b> and facilitates information processing within the <b>task</b> force[URL] Army (USA) autho...|$|R
40|$|Bottom-up biases {{are widely}} thought to {{influence}} <b>task</b> {{choice in the}} voluntary <b>task</b> switching paradigm. Definitive support for this hypothesis is lacking, however, because <b>task</b> choice and <b>task</b> performance are usually confounded. We therefore revisited this hypothesis using a paradigm in which <b>task</b> choice and <b>task</b> performance are temporally separated. As predicted, participants tended to choose the <b>task</b> that was primed by bottom-up biases. Moreover, such choices were linked to increased switch costs during subsequent <b>task</b> performance. These findings provide compelling evidence that bottom-up biases influence voluntary <b>task</b> choice. They also suggest that succumbing to such biases reflects a reduction of top-down control that persists to influence upcoming <b>task</b> performance...|$|R
25|$|Deadlock, where <b>task</b> A can't {{continue}} until <b>task</b> B finishes, {{but at the}} same time, <b>task</b> B can't {{continue until}} <b>task</b> A finishes.|$|R
25|$|Standardized {{tests have}} been created to uniformly test {{prospective}} memory and can incorporate different event-based and time-based <b>tasks</b> at the same time. Experimenters can test prospective memory by having people perform <b>tasks</b> in order, perform <b>tasks</b> in order but with interruptions, and multitask.|$|E
25|$|<b>Tasks</b> {{that fall}} within the {{paradigm}} of reinforcement learning are control problems, games and other sequential decision making <b>tasks.</b>|$|E
25|$|Generic Task Type: This layer {{identifies}} the constituent <b>tasks</b> of generic, repetitive processes and the logical dependencies between these <b>tasks.</b>|$|E
30|$|We {{evaluate}} the proposed system with 2 teleoperation <b>task</b> experimentation, pick-and-place <b>task</b> and door opening <b>task.</b> In the experiments one operator achieved <b>task.</b>|$|R
5000|$|Deadlock, where <b>task</b> A can't {{continue}} until <b>task</b> B finishes, {{but at the}} same time, <b>task</b> B can't {{continue until}} <b>task</b> A finishes.|$|R
40|$|This annual {{technical}} progress report summarizes the work accomplished {{during the third}} year of the program, January-December 2005, in the following <b>task</b> areas: <b>Task</b> 1 [...] Conceptual Design, <b>Task</b> 2 [...] Laboratory Scale Evaluations, <b>Task</b> 3 [...] OTM Development, <b>Task</b> 4 [...] Economic Evaluation and Commercialization Planning and <b>Task</b> 5 [...] Program Management...|$|R
25|$|McDaniel et al. (2004) further {{distinguished}} event-based prospective memory into immediate-execute <b>tasks</b> and delayed-execute <b>tasks.</b> Immediate-execute <b>tasks</b> {{involve a}} response {{as soon as}} a particular cue is noticed, while delayed-execute <b>tasks</b> involve delays between the perception of the relevant cue and the performance of the intended action. Delayed-execute <b>tasks</b> more commonly occur in real life when circumstances of a situation prevent intermediate action once the cue has been perceived. Research was performed by McDaniel et al. (2004), in which participants completed <b>tasks</b> involving various delays and interruptions between cues and responses. It was demonstrated that correct performance suffered when there was a delay or interruption during a task. However, it was further shown that the use of reminders for participants eliminated the effects of the interruption task.|$|E
25|$|Amnesic {{patients}} {{do as well}} on perceptual priming <b>tasks</b> as healthy patients, however they show some difficulties completing conceptual priming <b>tasks,</b> depending on the specific test. For example, they perform normally on category instance production <b>tasks,</b> but show impaired priming on any task that involves answering general knowledge questions.|$|E
25|$|Synchronization of <b>Tasks</b> with Outlook 2007. Also Outlook {{can send}} mails to OneNote, or open pages in OneNote that {{are linked to}} <b>tasks,</b> contacts, appointments/meetings.|$|E
40|$|Electronic {{medical records}} are now often {{replacing}} paper documents, {{and thus the}} importance of information processing in medical fields has increased. We have already organized the NTCIR- 10 MedNLP pilot <b>task.</b> It has been the very first shared <b>task</b> attempt to evaluate technologies to retrieve important information from medical reports written in Japanese, whereas the NTCIR- 11 MedNLP- 2 <b>task</b> has been designed for more advanced and practical use for the medical fields. This <b>task</b> was consisted of three sub tasks: (<b>Task</b> 1) the <b>task</b> to extract disease names and dates, (<b>Task</b> 2) the <b>task</b> to add ICD- 10 code to disease names, (<b>Task</b> 3) free <b>task.</b> Ten groups (24 systems) participated in <b>Task</b> 1, 9 groups (19 systems) participated in <b>Task</b> 2, and 2 groups (2 systems) participated in <b>Task</b> 3. This report is to present results of these groups with discussions that are to clarify the issues to be resolved in medical natural language processing fields...|$|R
40|$|In {{this paper}} we propose <b>task</b> {{swapping}} networks for <b>task</b> reassignments by using <b>task</b> swappings in distributed systems. Some classes of <b>task</b> reassignments are achieved by using iterative local <b>task</b> swappings between software agents in distributed systems. We use group-theoretic methods to find a minimum-length sequence of adjacent <b>task</b> swappings needed from a source <b>task</b> assignment to a target <b>task</b> assignment in a <b>task</b> swapping network of several well-known topologies. Comment: This is a preprint of a paper whose final and definite form is published in: Int. J. Comput. Math. 90 (2013), 2221 - 2243 (DOI: 10. 1080 / 00207160. 2013. 772985...|$|R
5000|$|... 0x80041324: The <b>Task</b> Scheduler service {{attempted}} {{to run the}} <b>task,</b> but the <b>task</b> did not run due {{to one of the}} constraints in the <b>task</b> definition.|$|R
