129|211|Public
25|$|Mohammad Taghi Mesbah Yazdi, Islamic Political Theory (Legislation) Vol. 1 (English {{translation}} by Mansoor Limba, <b>Translation</b> <b>Unit,</b> Cultural Affairs Department, The Ahl al-Bayt (‘a) World Assembly (ABWA), 2008.|$|E
5000|$|Preprocessing notably {{consists}} of expanding a source file to recursively replace all [...] directives with the literal file declared in the directive (usually header files, but possibly other source files); {{the result of}} this step is a preprocessing <b>translation</b> <b>unit.</b> Further steps include macro expansion of [...] directives, and conditional compilation of [...] directives, among others; this translates the preprocessing <b>translation</b> <b>unit</b> into a <b>translation</b> <b>unit.</b> From a <b>translation</b> <b>unit,</b> the compiler generates an object file, which can be further processed and linked (possibly with other object files) to form an executable program.|$|E
50|$|In {{the field}} of translation, a <b>translation</b> <b>unit</b> is a segment of a text which the {{translator}} treats as a single cognitive unit {{for the purposes of}} establishing an equivalence. The <b>translation</b> <b>unit</b> may be a single word, a phrase, one or more sentences, or even a larger unit.|$|E
5000|$|... armcc in C90 mode {{provides}} [...] and [...] semantics {{that are}} the same as in C++: Such definitions will emit a function shared among <b>translation</b> <b>units</b> if required. In C99 mode, [...] always emits a function, but like in C++, it will be shared among <b>translation</b> <b>units.</b> Thus, the same function can be defined [...] in different <b>translation</b> <b>units.</b> This matches the traditional behavior of Unix C compilers for multiple non- definitions of uninitalized global variables.|$|R
50|$|The Terminology Coordination Unit (TermCoord) is a {{supporting}} <b>unit</b> to the <b>translation</b> <b>units</b> of the Directorate-General for Translation (DG TRAD) of the European Parliament. TermCoord {{was created in}} 2008 to stimulate and coordinate the terminology work of the 24 <b>translation</b> <b>units</b> of the European Parliament in Luxembourg.|$|R
5000|$|Development of sub-micrometric {{actuators}} and <b>translation</b> <b>units</b> for cryogenic environments.|$|R
50|$|If {{the name}} has {{external}} linkage, the entity that name denotes may {{be referred to}} from another <b>translation</b> <b>unit</b> using a distinct declaration for that same name, and from other scopes within the same <b>translation</b> <b>unit</b> using distinct declarations. Were the name given internal linkage, such a declaration would denote a distinct entity, although using the same name, but its entity could be referred to by distinct declarations within the same <b>translation</b> <b>unit.</b> A name that has no linkage at all cannot be referred to from declarations in different scopes, not even from within the same <b>translation</b> <b>unit.</b> Examples of such names are parameters of functions and local variables. The details differ between C (where only objects and functions - but not types - have linkage) and C++ and between this simplified overview.|$|E
50|$|In general, a <b>translation</b> <b>unit</b> shall {{contain no}} more than one {{definition}} of any class type. In this example, two definitions of the class type C occur in the same <b>translation</b> <b>unit.</b> This typically occurs if a header file is included twice by the same source file without appropriate header guards.|$|E
5000|$|A single C++ <b>translation</b> <b>unit</b> might define two {{functions}} named f (...) : ...|$|E
5000|$|No {{more than}} 100 000 <b>translation</b> <b>units</b> per <b>translation</b> memory ...|$|R
2500|$|... : Up to 1 Million <b>translation</b> <b>units</b> each, for 231 {{language}} pairs.|$|R
50|$|Terminology {{coordination}} involves constant {{cooperation with}} {{a network of}} about 100 terminologists responsible for terminology matters in their <b>translation</b> <b>units</b> and carrying out terminology assignments set by TermCoord; volunteer groups working on certain projects; and rotating terminologists seconded to the unit for three months. The rotating terminologists’ main responsibilities include participating in TermCoord’s work on IATE, in particular doing updates in their native language, and liaising with the <b>translation</b> <b>units</b> to identify best practices.|$|R
50|$|MISRA C:2012 {{separately}} classifies each guideline {{as either}} Single <b>Translation</b> <b>Unit</b> or System.|$|E
5000|$|... {{which tells}} the {{compiler}} not to instantiate the template in this <b>translation</b> <b>unit.</b>|$|E
5000|$|Germans visit Utah to see {{language}} <b>translation</b> <b>unit,</b> Richard Nash, The Deseret News, Aug. 21, 1980 ...|$|E
40|$|This paper {{presents}} {{a study of}} three statistical query translation models that use different <b>units</b> of <b>translation.</b> We begin with a review of a word-based translation model that uses cooccurrence statistics for resolving translation ambiguities. The translation selection problem is then formulated under the framework of graphic model resorting to which the modeling assumptions and limitations of the co-occurrence model are discussed, and the research of finding better <b>translation</b> <b>units</b> is motivated. Then, two other models that use larger, linguistically motivated <b>translation</b> <b>units</b> (i. e., noun phrase and dependency triple) are presented. For each model, the modeling and training methods are described in detail. All query translation models are evaluated using TREC collections. Results show that larger <b>translation</b> <b>units</b> lead to more specific models that usually achieve better translation and cross-language information retrieval results...|$|R
40|$|Reordering poses {{one of the}} {{greatest}} chal-lenges in Statistical Machine Translation re-search as the key contextual information may well be beyond the confine of <b>translation</b> <b>units.</b> We present the “Anchor Graph ” (AG) model where we use a graph structure to model global contextual information that is crucial for reordering. The key ingredient of our AG model is the edges that capture the relation-ship between the reordering around a set of selected <b>translation</b> <b>units,</b> which we refer to as anchors. As the edges link anchors that may span multiple <b>translation</b> <b>units</b> at decoding time, our AG model effectively encodes global contextual information that is previously ab-sent. We integrate our proposed model into a state-of-the-art translation system and demon-strate the efficacy of our proposal in a large-scale Chinese-to-English translation task. ...|$|R
5000|$|In the C/C++ {{compilation}} model (formally [...] "translation environment"), individual [...]c/.cpp source {{files are}} preprocessed into <b>translation</b> <b>units,</b> {{which are then}} translated (compiled) separately by the compiler into multiple object (.o or [...]obj) files. These object files can then be linked {{together to create a}} single executable file or library. However, this leads to multiple passes being performed on common header files, and with C++, multiple template instantiations of the same templates in different <b>translation</b> <b>units.</b>|$|R
5000|$|C {{allows for}} {{multiple}} tentative {{definition of a}} single global variable in a single <b>translation</b> <b>unit.</b>|$|E
5000|$|..[...] [...] [...] An inline {{definition}} {{does not}} provide an external definition for the function, and does not forbid an external definition in another <b>translation</b> <b>unit.</b> An inline definition provides an alternative to an external definition, which a translator may use to implement any call to the function in the same <b>translation</b> <b>unit.</b> It is unspecified whether {{a call to the}} function uses the inline definition or the external definition." ...|$|E
50|$|However, Russian scholar Leonid Barkhudarov stated that, {{limiting}} it to poetry, for instance, a <b>translation</b> <b>unit</b> {{can take}} the form of a complete text. This seems to relate to his conception that a <b>translation</b> <b>unit</b> is the smallest unit in the source language with an equivalent in the target one, and when its parts are taken individually, they become untranslatable; these parts can be as small as phonemes or morphemes, or as large as entire texts.|$|E
40|$|The {{linguistic}} {{quality of}} a parallel tree-bank depends crucially on the parallelism between the source and target language an-notations. We propose a linguistic notion of <b>translation</b> <b>units</b> and a quantitative mea-sure of parallelism for parallel dependency treebanks, and demonstrate how the pro-posed <b>translation</b> <b>units</b> and parallelism mea-sure {{can be used to}} compute transfer rules, spot annotation errors, and compare differ-ent annotation schemes with respect to each other. The proposal is evaluated on the 100, 000 word Copenhagen Danish-English Dependency Treebank...|$|R
40|$|Due to {{the lack}} of {{explicit}} word boundaries in Chinese, and Japanese, and to some extent in Korean, an additional problem in IR in these languages is to determine the appropriate indexing units. For CLIR with these languages, we also need to determine <b>translation</b> <b>units.</b> Both words and n-grams of characters have been used in IR in these languages; however, only words have been used as <b>translation</b> <b>units</b> in previous studies. In this paper, we compare the utilization of words and n-grams for both monolingual and cross-lingual IR in these languages. Our experiments show that Chinese character n-grams are reasonable alternative indexing and <b>translation</b> <b>units</b> to words, and they lead to retrieval effectiveness comparable to or higher than words. For Japanese and Korean IR, bigrams or a combination of bigrams and unigrams produce the highest effectiveness...|$|R
40|$|The {{rendezvous}} amid translation {{theories and}} models is {{the quest for}} an approach to <b>translation</b> <b>units,</b> which is especially significant in translating scientific terms outside as well as inside a context. The research seeks to explore two principles of translating terms, ―recombination of semantic components‖ and ―functional equivalence‖, which helps look through terms outside the context and determine if the <b>translation</b> <b>units</b> in translating the IT terms are morphemes, words, or phrases. Based on these term translation principles and Vinay & Darbelnet’s (1977) translation procedures, six procedures of translating terms–direct borrowing, ―calque‖ or loan translation, literal translation, transposition, modulation, and adaptation–are developed. Besides, Coordinate Translation Model with three axes: X axis–translation unit axis, Y axis–concept equivalent axis, and Z axis–language task schema axis is proposed to locate appropriate <b>translation</b> <b>units</b> for translating IT terms inside the context...|$|R
5000|$|In C {{programming}} language terminology, a <b>translation</b> <b>unit</b> {{is the ultimate}} input to a C compiler from which an object file is generated. In casual usage it is {{sometimes referred to as}} a compilation unit. A <b>translation</b> <b>unit</b> roughly consists of a source file after it has been processed by the C preprocessor, meaning that header files listed in [...] directives are literally included, sections of code within [...] may be included, and macros have been expanded.|$|E
5000|$|A name's linkage {{is related}} to, but {{distinct}} from, its scope. The scope {{of a name}} {{is the part of}} a <b>translation</b> <b>unit</b> where it is visible. For instance, a name with global scope (which is the same as file-scope in C and the same as the global namespace-scope in C++) is visible in any part of the file. Its scope will end {{at the end of the}} <b>translation</b> <b>unit,</b> whether or not that name has been given external or internal linkage.|$|E
5000|$|... /* Use a file scoped static {{variable}} for the exception stack {{so we can}} access * it anywhere within this <b>translation</b> <b>unit.</b> */static jmp_buf exception_env;static int exception_type; ...|$|E
50|$|Some {{violations}} of the ODR must be diagnosed by the compiler. Other violations, particularly those that span <b>translation</b> <b>units,</b> {{are not required to}} be diagnosed.|$|R
50|$|In {{translation}} work, translation segments {{are compared}} with <b>translation</b> <b>units</b> {{stored in the}} translation memory, and exact or fuzzy matches can be shown and inserted in the translated text.|$|R
40|$|This paper surveys several {{state-of-the-art}} reordering techniques {{employed in}} Statistical Machine Translation systems. Reordering {{is understood as}} the word-order redistribution of the translated words. In original SMT systems, this different order is ony modeled {{within the limits of}} <b>translation</b> <b>units.</b> Relying only in the reordering provided by <b>translation</b> <b>units</b> may not be good enought in most language pairs, whichmight require longer reorderings. Therefore, additional techniques may be deployed to face the reordering challenge. The Statistical Machine Translation community has been very active recently in deveoping reordering techniques. This paper gives a brief survey and classification of seevral well-known reordering approaches. Postprint (published version...|$|R
50|$|Mohammad Taghi Mesbah Yazdi, Islamic Political Theory (Legislation) Vol. 1 (English {{translation}} by Mansoor Limba, <b>Translation</b> <b>Unit,</b> Cultural Affairs Department, The Ahl al-Bayt (‘a) World Assembly (ABWA), 2008.|$|E
50|$|According to {{this point}} of view, a <b>translation</b> <b>unit</b> is a stretch of text on which {{attention}} is focused to be represented as a whole in the target language. In {{this point of view}} we can consider the concept of the think-aloud protocol, supported by German linguist Wolfgang Lörscher: isolating units using self-reports by translating subjects. It also relates to how experienced the translator in question is: language learners take a word as a <b>translation</b> <b>unit,</b> whereas experienced translators isolate and translate units of meaning in the form of phrases, clauses or sentences.|$|E
5000|$|Mohammad Taghi Mesbah Yazdi, [...] Islamic Political Theory (Statecraft) Vol. 2 (English {{translation}} by Mansoor Limba, <b>Translation</b> <b>Unit,</b> Cultural Affairs Department, The Ahl al-Bayt (‘a) World Assembly (ABWA), 2008.|$|E
40|$|This paper {{presents}} a methodology to address lexical disambiguation {{in a standard}} phrase-based statistical machine translation system. Similarity among source contexts is used to select appropriate <b>translation</b> <b>units.</b> The information is introduced as a novel feature of the phrase-based model and {{it is used to}} select the <b>translation</b> <b>units</b> extracted from the training sentence more similar to the sentence to translate. The similarity is computed through a deep autoencoder representation, which allows to obtain effective low-dimensional embedding of data and statistically significant BLEU score improvements on two different tasks (English-to-Spanish and English-to-Hindi). (C) 2016 Elsevier B. V. All rights reserved. Postprint (author's final draft...|$|R
50|$|One final {{perception}} on {{the idea}} of unit came from linguist Eugene Nida. To him, <b>translation</b> <b>units</b> have a tendency to be small groups of language building up into sentences, thus forming what he called meaningful mouthfuls of language.|$|R
5000|$|In C99, a {{function}} defined [...] will never and {{a function}} defined [...] will always emit an externally visible function. Unlike in C++, {{there is no}} way to ask for an externally visible function shared among <b>translation</b> <b>units</b> to be emitted only if required.|$|R
