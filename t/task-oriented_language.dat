6|7|Public
40|$|To perform tasks {{specified}} by natural language instructions, autonomous agents need to extract semantically meaningful representations {{of language and}} map it to visual elements and actions in the environment. This problem is called <b>task-oriented</b> <b>language</b> grounding. We propose an end-to-end trainable neural architecture for <b>task-oriented</b> <b>language</b> grounding in 3 D environments which assumes no prior linguistic or perceptual knowledge and requires only raw pixels from {{the environment and the}} natural language instruction as input. The proposed model combines the image and text representations using a Gated-Attention mechanism and learns a policy to execute the natural language instruction using standard reinforcement and imitation learning methods. We show the effectiveness of the proposed model on unseen instructions as well as unseen maps, both quantitatively and qualitatively. We also introduce a novel environment based on a 3 D game engine to simulate the challenges of <b>task-oriented</b> <b>language</b> grounding over a rich set of instructions and environment states. Comment: To appear in AAAI- 1...|$|E
40|$|The United States has a {{large and}} rapidly growing {{population}} of limited English-proficient (LEP) students and adults. This population presents a distinct challenge to vocational educators. Some insights learned {{during the past decade}} suggest beneficial approaches to this problem. Four trends in current second-language acquisition research and language teaching are particularly relevant to the delivery of vocational education to LEP persons. These trends are the development of competency-based, functional, and <b>task-oriented</b> <b>language</b> learning programs; the increasing specialization of language instruction and the concomitant combining of English and content-area instruction; the distinction between communicative and cognitive language skills; {{and the development of a}} theory of language that maximizes meaningful input as its basis. A great deal has also been learned during the past fe...|$|E
40|$|For a robot {{working in}} an open environment, a <b>task-oriented</b> <b>language</b> {{capability}} will not be sufficient. In order {{to adapt to the}} environment, such a robot will have to learn language dynamically. We developed a System for Noun Concepts Acquisition from utterances about Images, SINCA in short. It is a language acquisition system without knowledge of grammar and vocabulary, which learns noun concepts from user utterances. We recorded a video of a childâ€™s daily life to collect dialogue data that was spoken to and around him. The child is a member of a family consisting of the parents and his sister. We evaluated the performance of SINCA using the collected data. In this paper, we describe the algorithms of SINCA and an evaluation experiment. We work on Japanese language acquisition, however our method can easily be adapted to other languages. ...|$|E
40|$|We propose an {{alternate}} {{approach to the}} usual introduction of parallelism in logic programming. Instead of detecting the intrinsic parallelism by an automatic and complex data-flow analysis, or upgrading standard logic languages by explicit concurrent control structures leading to <b>task-oriented</b> <b>languages,</b> we tightly integrate the concepts of the data-parallel programming model and of logic programming in a kernel language, called DP-Log. It offers a simple centralized and synchronous vision to the programmer. We give this language a declarative and a distributed asynchronous operational semantics. The equivalence theorem of these semantics establishes the soundness of the implementation. The expressiveness of the language is illustrated on examples. Keywords : Logic programming [...] - Data-parallel languages [...] - Design of programming languages [...] - Semantics [...] - MIMD architectures Introduction The introduction of parallelism in programming languages enables to extend the expressiveness [...] ...|$|R
40|$|Nowadays, the {{commercial}} success of an electronic device significantly {{depends on its}} usability. The demand for devices with intuitively usable interfaces is growing. This enforces developers to use user-centered development processes to guarantee a high usability for their product. The Useware Markup Language (useML) 2. 0 is a user-centered <b>task-oriented</b> modeling <b>language,</b> which {{is used in the}} Useware-Engineering process for developing intelligent user interfaces. With version 2. 0 some major changes have been made to increase the expressiveness of useML, i. e. with adding temporal operators the language has been equipped for semi-automatic dialog model generation. To support developers, an intuitively, graphical useML-Editor has been developed. This paper introduces the changes in useML 2. 0, the useML-Editor and in part the transformation processes for deriving the dialog model from the use model...|$|R
40|$|Considerable {{work has}} been done {{regarding}} usability evaluation of <b>task-oriented</b> unimodal spoken <b>language</b> dialogue systems (SLDSs). However, there are still important gaps in our knowledge even in this area. If we move to multimodal task-oriented SLDSs, there are more challenges ahead primarily due to the combination of different modalities. For non-task-oriented conversational SLDSs, a major challenge is the new evaluation issues brought up by the nature of conversation. This paper presents a state-of-the-art in usability evaluation of these new types of SLDSs and conclusions based on the experience we have today. 1...|$|R
40|$|While {{application}} software does the real work, domain-specific languages (DSLs) are tools to help produce it efficiently, and language design assistants in turn are meta-tools to help produce DSLs quickly. DSLs {{are already in}} wide use (HTML for web pages, Excel macros for spreadsheet applications, VHDL for hardware design, : : :), but many more will be needed for both new as well as existing application domains. Language design assistants to help develop them currently exist only in the basic form of language development systems. After {{a quick look at}} domain-specific languages, and especially their relationship to application libraries, we survey existing language development systems and give an outline of future language design assistants. 1998 ACM Computing Classi cation System: D. 3 Keywords and Phrases: {{application software}}, application domain, domain-speci c language, <b>task-oriented</b> <b>language,</b> end user programming, language development system, language-based tool generation, langu [...] ...|$|E
40|$|Automated metrics such as BLEU {{are widely}} used in the machine {{translation}} literature. They have also been used recently in the dialogue community for evaluating dialogue response generation. However, previous work in dialogue response generation has shown that these metrics do not correlate strongly with human judgment in the non task-oriented dialogue setting. Task-oriented dialogue responses are expressed on narrower domains and exhibit lower diversity. It is thus reasonable to think that these automated metrics would correlate well with human judgment in the task-oriented setting where the generation task consists of translating dialogue acts into a sentence. We conduct an empirical study to confirm whether this is the case. Our findings indicate that these automated metrics have stronger correlation with human judgments in the task-oriented setting compared {{to what has been}} observed in the non task-oriented setting. We also observe that these metrics correlate even better for datasets which provide multiple ground truth reference sentences. In addition, we show that some of the currently available corpora for <b>task-oriented</b> <b>language</b> generation can be solved with simple models and advocate for more challenging datasets...|$|E
40|$|There is an {{overwhelming}} {{variation in the}} ways an intelligent 				agent can rationalize communication with a conversational 				partner. This variation presents many incompatibilities that 				lead to the specialization of conversational capabilities. This 				has produced a plethora of models and ideas on how an 				intelligent agent should understand, interact with, and 				incorporate communication from a human conversational 				participant. This dissertation approaches this problem with the 				thesis that there exists a language between that of human 				natural language and the behavioral reasoning of an intelligent 				agent, and that this language is capable of not only unifying 				the various models used in literature, but also provides the 				foundation for a theoretical framework for an engineering 				methodology for building such models. A theory of practical communication language is developed, 				including {{the introduction of the}} meaning-action concept, an 				expressive and powerful representation based on speech-act and 				dialogue-act theories, but extended with notions of behavioral 				operators as well as signatures that allow the operators to 				incorporate structured and well-defined concepts. An engineering 				methodology is presented for the construction of concepts, 				operators and rules that create the language and model of a 				specific domain, including methodology for the verification and 				validation of that language and model. The resultant practical communication language methodology, based 				on the combination of rational communication and meaning-action 				concepts, will introduce several major enhancements to dialogue 				management. These enhancements include the use of meaning-action 				concepts as a shared medium and the introduction of a shared 				concept graph. This methodology will be used along with various 				dialogue models from human-human, human-agent and agent-agent 				communication to construct a <b>task-oriented</b> <b>language</b> and model 				called the task communication language framework. This framework 				is then implemented within an intelligent agent in a real-time 				resource management simulation. A sample output listing from actual human interaction with that 				implementation is used to demonstrate that the resulting 				framework does indeed incorporate many of the disparate models 				of communication and their corresponding capabilities including 				command and control, information seeking, notification and 				bother, clarification, explanation, discussion, negotiation, 				mutual planning, interruption, feedback, adjustable autonomy and 				corrective dialogues...|$|E
40|$|The {{development}} of <b>task-oriented</b> spoken <b>language</b> dialog system requires expertise in multiple domains including speech recognition, natural spoken language understanding and generation, dialog management and speech synthesis. The dialog manager {{is the core}} of a spoken language dialog system, and makes use of multiple knowledge sources. In this contribution we report on our methodology for developing and testing different strategies for dialog management, drawing upon our experience with several travel information tasks. In the LIMSI ARISE system for train travel information we have implemented a 2 -level mixedinitiative dialog strategy, where the user has maximum freedom when all is going well, and the system takes the initiative if problems are detected. The revised dialog strategy and error recovery mechanisms have resulted in a 5 - 10 % increase in dialog success depending upon the word error rate. INTRODUCTION The dialog manager {{is the core of}} a spoken language dialog system (SLDS). [...] ...|$|R
40|$|The {{importance}} of a vision can be that of providing a model within which we think and create. If the model is outdated, thinking becomes unduly constrained. The paper proposes to replace the paradigm of human-computer interaction (HCI) with a more comprehensive model for thinking about future systems and interfaces. Recent progress in speech technologies has managed to establish a powerful application paradigm, i. e. that of natural <b>task-oriented</b> spoken <b>language</b> dialogue systems. This application paradigm points towards the broader goal of natural humanhuman -system interaction (HHSI) in virtual, combined virtual and physical, and physical environments. On {{the backdrop of the}} natural HHSI model and the rapidly changing environment of advanced systems research, the types of research that are likely to be needed in the future are discussed. The discussion deliberately de-emphasises next-generation systems research in order to shift the focus to a range of equally important, existing or emerging research objectives which sometimes show a tendency to be overshadowed by the next-generation challenges...|$|R
40|$|Abstractâ€”There is {{a growing}} need for <b>task-oriented</b> natural <b>language</b> dialog systems that can {{interact}} with a user to accom-plish a given objective. Recent work on building task-oriented dialog systems have emphasized the need for acquiring task-specific knowledge from un-annotated conversational data. In our work we acquire task-specific knowledge by defining sub-task as the key unit of a task-oriented conversation. We propose an unsupervised, apriori like algorithm that extracts the sub-tasks and their valid orderings from un-annotated human-human conversations. Modeling dialogues as a combination of sub-tasks and their valid orderings easily captures the variability in conversations. It also provides us the ability to map our dialogue model to AIML constructs and therefore use off-the-shelf AIML interpreters to build task-oriented chat-bots. We conduct experiments on real world data sets to establish {{the effectiveness of the}} sub-task extraction process. We codify the extracted sub-tasks in an AIML knowledge base and build a chatbot using this knowledge base. We also show the usefulness of the chatbot in automatically handling customer requests by performing a user evaluation study. I...|$|R
40|$|A new {{generation}} of <b>task-oriented</b> spoken <b>language</b> dialogue systems (SLDSs) using mixed initiative spontaneous language is becoming ready for use in over-the-telephone applications and elsewhere [Peckham 1993]. This raises {{the need for an}} integrated, application-oriented theory which can support the design of increasingly sophisticated, but still restricted spoken natural language dialogues that are usable and reasonable seen from the userâ€™s point of view and which can be managed by the system. The theory should have at least four related aims: (1) To optimise the methodologies for developing SLDSs in order to reduce resources and cost [Fraser and Gilbert 1991] [Bernsen et al. 1994 a]. (2) To support the functional aspects of SLDSs by identifying the concepts and distinctions which should be considered when specifying the system and its architecture. (3) To support practical systems design by iden-tifying the constraints which should be observed in order to optimise system usability [Bernsen 1993 a,b, Bernsen et al. 1994 b]. (4) To address SLDS evaluation, benchmarking and standards [Simpson and Fraser 1993]. This paper deals with the second, functional part of such a theory. The background of the paper is our dialogue model development using the Wizard of O...|$|R

