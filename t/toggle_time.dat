1|8|Public
50|$|Though it {{uses the}} same engine as its predecessor, several changes were made such as: the ability to <b>toggle</b> <b>time</b> {{compression}} between normal speed and eight times faster; ship upgrades (improving armor and adding new abilities), Command Ships and Carriers are given the ability to add external modules for ship research and fleet support; fuel was completely eliminated from the game and finally the sensor display {{could be used to}} issue attack orders to units. The players Command Ship is now capable of attack; though slow, the Command Ship is capable of delivering a vast array of weaponry, most notably the Siege Cannon capable of crippling an enemy Command Ship with a single well aimed shot.|$|E
5000|$|The game {{is played}} entirely with the mouse {{in the case of}} the PC version (point-and-click). The cursor is contextual, meaning that it will change {{automatically}} to actions such as [...] "Talk to...", [...] "Pick up...", and so on, depending on the object (and state of the object) it is hovering over at the time. Item labels may be <b>toggled</b> at any <b>time.</b>|$|R
50|$|The digital {{toggling}} factor (DTF) {{represents the}} number of transistors that change their state during the stress test, relative to {{the total number of}} gates in the digital portion of the IC. In effect, the DTF is the percentage of transistors <b>toggling</b> in one <b>time</b> unit. The time unit is relative to the toggling frequency, and is usually limited by the HTOL setup to be in the range of 10-20Mhz.|$|R
50|$|TVB actor Damian Lau went to Singapore in September for the show. One of his scenes {{involves}} a flashback with him attempting suicide from a 13-storey HDB flat. Because the haze had hit unhealthy ranges, Lau {{was under the}} weather and declined all media interviews, but felt much better at the <b>time</b> <b>Toggle</b> interviewed him. During the filming, Li, dressed in his 90s' style haircut in the scene, brought in herbal tea for him, while Tay offered local cakes and snacks.|$|R
5|$|The player {{controls}} the on-screen character directly using the keyboard or gamepad. The player progresses by navigating platform game puzzles and shooting enemies with the equipped weapon. When the player collects multiple weapons, {{they may be}} <b>toggled</b> at any <b>time</b> with the press of a button. Defeating enemies sometimes yields yellow triangular objects, which give experience points to weapons when collected. Weapons may be improved up to level three, but taking damage causes weapons to lose experience and levels. Health and missile capacity upgrades are scattered throughout the game world. The player must interact {{with a variety of}} non-player characters and objects to complete the game.|$|R
50|$|The {{time and}} {{distance}} registers are completely separate from each other, and each {{is controlled by}} a toggle switch, which is operated by the traffic officer. To clock the patrol vehicle's speed (for instance, when the speed is matched with the violator's vehicle), both switches are operated simultaneously. Most often, however, the <b>TIME</b> <b>toggle</b> is activated when the violator's vehicle passes an identifiable landmark (such as a signpost), and the DISTANCE toggle is activated when the patrol vehicle passes the same landmark. When the violator passes a second landmark, the timer is stopped, and when the patrol vehicle passes that landmark, the distance measurement stops. These two values are then compared by the digital computer, which displays the average speed over that distance.|$|R
40|$|Abstract â€” Probabilistic RoadMaps (PRMs) {{are quite}} suc-cessful in solving complex and high-dimensional motion plan-ning problems. While {{particularly}} suited for multiple-query scenarios and expansive spaces, they lack efficiency in both solving single-query scenarios and mapping narrow spaces. Two PRM variants separately tackle these gaps. Lazy PRM reduces the computational cost of roadmap construction for single-query scenarios by delaying roadmap validation until query <b>time.</b> <b>Toggle</b> PRM {{is well suited}} for mapping narrow spaces by mapping both Cfree and Cobst, which gives certain theoretical benefits. However, fully validating the two resulting roadmaps can be costly. We present a strategy, Lazy Toggle PRM, for integrating these two approaches into a method which is both suited for narrow passages and efficient single-query calculations. This simultaneously addresses two challenges of PRMs. Like Lazy PRM, Lazy Toggle PRM delays validation of roadmaps until query time, but if no path is found, the algorithm augments the roadmap using the Toggle PRM methodology. We demonstrate the effectiveness of Lazy Toggle PRM {{in a wide range}} of scenarios, including those with narrow passages and high descriptive complexity (e. g., those described by many triangles), concluding that it is more effective than existing methods in solving difficult queries. I...|$|R

