10000|10000|Public
5|$|A valve failed on a diver’s {{emergency}} cylinder on {{a diving}} support vessel during {{preparation for a}} dive injuring five divers. The cylinder valve was ejected at 180 bar due to incompatible <b>thread.</b> Pillar valve was M25x2 parallel <b>thread</b> and cylinder was a 3/4″x14 BSP parallel <b>thread.</b>|$|E
5|$|Cylinder threads {{may be in}} {{two basic}} configurations: Taper <b>thread</b> and {{parallel}} <b>thread.</b> These <b>thread</b> specifications are detailed in a previous section. The valve <b>thread</b> specification must exactly match the neck <b>thread</b> specification of the cylinder. Improperly matched neck threads can fail under pressure and can have fatal consequences.|$|E
5|$|All {{parallel}} <b>thread</b> valves {{are sealed}} using an O-ring at {{top of the}} neck <b>thread</b> which seals in a chamfer or step in the cylinder neck and against the flange of the valve.|$|E
50|$|This weave {{code means}} that the <b>threads</b> begin with 8 <b>threads</b> of yellow, {{followed}} by 2 <b>threads</b> of black, 20 <b>threads</b> of green, 4 <b>threads</b> of scarlet, 20 <b>threads</b> of green, 8 <b>threads</b> of scarlet, 20 <b>threads</b> of green, 4 <b>threads</b> of scarlet, 20 <b>threads</b> of green, 32threads of black, 56 <b>threads</b> of azure, 2 <b>threads</b> of black, and 8 <b>threads</b> of sky blue. At that point the weave pivots and returns, beginning with 2 <b>threads</b> of black, and continuing the sequence in reverse order through 8 <b>threads</b> of yellow, at which point it pivots back again.|$|R
50|$|In Java 1.1, green <b>threads</b> {{were the}} only <b>threading</b> model used by the JVM, at least on Solaris. As green <b>threads</b> have some {{limitations}} compared to native <b>threads,</b> subsequent Java versions dropped them in favor of native <b>threads.</b>|$|R
5000|$|<b>Threads</b> are {{sometimes}} implemented in userspace libraries, thus called user <b>threads.</b> The kernel is unaware of them, {{so they are}} managed and scheduled in userspace. Some implementations base their user <b>threads</b> on top of several kernel <b>threads,</b> to benefit from multi-processor machines (M:N model). In this article the term [...] "thread" [...] (without kernel or user qualifier) defaults to referring to kernel <b>threads.</b> User <b>threads</b> as implemented by virtual machines are also called green <b>threads.</b> User <b>threads</b> are generally fast to create and manage, but cannot take advantage of multithreading or multiprocessing, and will get blocked if all of their associated kernel <b>threads</b> get blocked {{even if there are}} some user <b>threads</b> that are ready to run.|$|R
5|$|Locking {{multiple}} variables using non-atomic locks {{introduces the}} possibility of program deadlock. An atomic lock locks multiple variables all at once. If it cannot lock all of them, it does not lock any of them. If two threads each need to lock the same two variables using non-atomic locks, {{it is possible that}} one <b>thread</b> will lock one of them and the second <b>thread</b> will lock the second variable. In such a case, neither <b>thread</b> can complete, and deadlock results.|$|E
5|$|One <b>thread</b> will {{successfully}} lock variable V, {{while the}} other <b>thread</b> will be locked out—unable to proceed until V is unlocked again. This guarantees correct execution of the program. Locks, while necessary to ensure correct program execution, can greatly slow a program.|$|E
5|$|Runs a <b>thread</b> of silken twine.|$|E
40|$|<b>Threading</b> is a {{facility}} to allow multiple activities to coexist {{within a single}} process. Most modern operating systems support <b>threads</b> {{and the concept of}} <b>threads</b> has been around in various forms for many years. Java is the first mainstream programming language to explicitly include <b>threading</b> within the language itself, rather than treating <b>threading</b> as {{a facility}} of the underlying operating system. This research finding focuses on how Java can facilitate Win 32 platform <b>threads</b> through JNI, which enables Java <b>threads</b> and native <b>threads</b> to schedule and execute in hybrid mode...|$|R
50|$|The ISO <b>threading</b> for freewheels (Single or Multiple Speed) is {{the same}} as for track/fixed cogs. A {{standard}} single speed BMX style freewheel can be used on the track <b>threads</b> the hub. Because of the stepped down lock ring <b>threads,</b> not as many <b>threads</b> of the freewheel engage the hub <b>threads</b> as they would if it were <b>threaded</b> to a freewheel <b>threads,</b> however, this is not a problem since the same number of <b>threads</b> are sufficient to secure a track cog. The force applied to a freewheel {{is the same}} as that applied to a fixed cog of the same size, so the missing <b>threads</b> cause no durability issue. Also, there is never any reverse torque on the <b>threads</b> with a freewheel, so a freewheel actually puts less strain on the <b>threads</b> than a fixed cog does.|$|R
50|$|The couching <b>threads</b> may {{be either}} {{the same color}} as the laid <b>threads</b> or a {{contrasting}} color. When couching <b>threads</b> contrast with laid <b>threads,</b> patterns may be worked in the couching stitches.|$|R
5|$|While {{the valve}} is off, the threads of {{cylinder}} and valve are checked {{to identify the}} <b>thread</b> type and condition. The threads of cylinder and valve must be of matching <b>thread</b> specification, clean and full form, undamaged and free of cracks, burrs and other imperfections. Ultrasonic inspection may be substituted for the pressure test, which is usually a hydrostatic test and may be either a proof test or a volumetric expansion test, depending on the cylinder design specification. Test pressure is specified in the stamp markings of the cylinder. Valves {{that are to be}} reused are inspected and maintained to ensure they remain fit for service. Before fitting the valve the <b>thread</b> type must be checked to ensure that a valve with matching <b>thread</b> specification is fitted.|$|E
5|$|A valve ejected during filling due to {{incompatible}} <b>thread</b> {{killed the}} operator by impact to the chest.|$|E
5|$|As {{support for}} {{multiple}} instruction set architectures complicates symmetric multiprocessing (SMP) support, DragonFly BSD now limits its {{support to the}} x86-64 platform. DragonFly originally ran on the x86 architecture, however as of version 4.0 {{it is no longer}} supported. Since version 1.10, DragonFly supports 1:1 userland threading (one kernel <b>thread</b> per userland <b>thread),</b> which is regarded as a relatively simple solution that is also easy to maintain. Inherited from FreeBSD, DragonFly also supports multi-threading.|$|E
5000|$|In some {{operating}} systems {{there is no}} separate LWP layer between kernel <b>threads</b> and user <b>threads.</b> This means that user <b>threads</b> are implemented directly on top of kernel <b>threads.</b> In those contexts, the term [...] "light-weight process" [...] typically refers to kernel <b>threads</b> and the term [...] "threads" [...] can refer to user <b>threads.</b> On Linux, user <b>threads</b> are implemented by allowing certain processes to share resources, which sometimes leads to these processes to be called [...] "light weight processes". Similarly, in SunOS version 4 onwards (prior to Solaris) [...] "light weight process" [...] referred to user <b>threads.</b>|$|R
40|$|We {{describe}} an {{implementation of a}} <b>threads</b> library that provides extremely lightweight <b>threads</b> within a single UNIX process while allowing fully concurrent access to system resources. The <b>threads</b> are lightweight enough {{so that they can}} be created quickly, there can be thousands present, and synchronization can be accomplished rapidly. These goals are achieved by providing user <b>threads</b> which multiplex on a pool of kernel-supported <b>threads</b> of control. This pool is managed by the library and will automatically grow or shrink as required to ensure that the process will make progress while not using an excessive amount of kernel resources. The programmer can also tune the relationship between <b>threads</b> and kernel supported <b>threads</b> of control. This paper focuses on scheduling and synchronizing user <b>threads,</b> and their interaction with UNIX signals in a multiplexing <b>threads</b> library. Introduction This paper describes a <b>threads</b> library implementation that provides extremely lightweight <b>threads</b> w [...] ...|$|R
40|$|Simultaneous Multithreading (SMT) {{processors}} achieve high processor throughput at {{the expense}} of single-thread performance. This paper investigates resource allocation policies for SMT processors that preserve, as much as possible, the single-thread performance of designated "foreground" <b>threads,</b> while still permitting other "background" <b>threads</b> to share resources. Since background <b>threads</b> on such an SMT machine have a near-zero performance impact on foreground <b>threads,</b> we refer to the background <b>threads</b> as transparent <b>threads.</b> Transparent <b>threads</b> are ideal for performing low-priority or non-critical computations, with applications in process scheduling, subordinate multithreading, and online performance monitoring...|$|R
5|$|Caldas has a {{tradition}} of embroidery (bordado) possibly dating to the 15th century. Legend has it that Queen Leonor's handmaidens, seeing the monarch without her usual brilliance after selling off her jewellery, embroidered her cloak so that it appeared to have golden threads. Caldas embroidery is almost always made with three shades of molasses brown <b>thread</b> on white linen, and on rare occasion with white <b>thread</b> on brown linen. Known for its symmetry, the craft's common themes include arachnids, spirals, angles, birds, hearts, crowns, and shrimp nets.|$|E
5|$|Cylinder valves are {{classified}} by four basic aspects: the <b>thread</b> specification, {{the connection to}} the regulator, pressure rating, and distinguishing features.|$|E
5|$|Day-Lewis {{announced}} his retirement in 2017, following the completion of his acting role in Phantom <b>Thread.</b>|$|E
5000|$|By common convention, right-{{handedness}} is {{the default}} handedness for screw <b>threads.</b> [...] Therefore, most <b>threaded</b> parts and fasteners have right-handed <b>threads.</b> One {{explanation for why}} right-handed <b>threads</b> became standard is that for a right-handed person, tightening a right-handed screw with a screwdriver is easier than tightening a left-handed screw, because it uses the stronger supinator muscle of the arm rather than the weaker pronator muscle. [...] Since most people are right-handed, right-handed <b>threads</b> became standard on <b>threaded</b> fasteners. Left-handed screw <b>threads</b> are used in some machines and in these applications: ...|$|R
50|$|Coarse <b>threads</b> {{are those}} with larger pitch (fewer <b>threads</b> per axial distance), and fine <b>threads</b> are those with smaller pitch (more <b>threads</b> per axial distance). Coarse <b>threads</b> {{have a larger}} threadform {{relative}} to screw diameter, where fine <b>threads</b> have a smaller threadform relative to screw diameter. This distinction is analogous to that between coarse teeth and fine teeth on a saw or file, or between coarse grit and fine grit on sandpaper.|$|R
50|$|The {{original}} TEC-22 variant {{featured a}} <b>threaded</b> barrel and a 30-round magazine. The barrel <b>threading</b> is -20 and allows a barrel extension or suppressor to be attached. A small, knurled nut <b>threads</b> onto the barrel {{to protect the}} <b>threading.</b>|$|R
5|$|Flanders and his brother, Ernest, were {{instrumental}} in developing screw <b>thread</b> grinding machines. These incorporated advances in <b>thread</b> technology (furthered by the Hartness optical comparator) and Flanders’s engineering calculations for gear-cutting machinery. In 1946, the two brothers received the Edward Longstreth Medal of the Franklin Institute as recognition of this accomplishment. They had improved the accurate manufacture of die-cut screws in soft metal and solved the problem of thread-grinding on hardened work.|$|E
5|$|Less than an {{hour later}} the post was photographed off the screen and framed by another user who posted another reply in the <b>thread</b> with {{a photo of the}} framed quote. Later the user, after {{endorsement}} by other anonymous users in the <b>thread,</b> created an auction on eBay for the framed photo which quickly rose to high prices, culminating in a price of $90,900.00.|$|E
5|$|New {{information}} presents {{improvements in}} multithreading, resilency improvements (Intel Instruction Replay RAS) and few new instructions (<b>thread</b> priority, integer instruction, cache prefetching, and data access hints).|$|E
40|$|Recent {{proposals}} for Chip Multiprocessors (CMPs) advocate speculative, or implicit, <b>threading</b> {{in which the}} hardware employs prediction to peel off instruction sequences (i. e., implicit <b>threads)</b> from the sequential execution stream and speculatively executes them in parallel on multiple processor cores. These proposals augment a conventional multiprocessor, which employs explicit <b>threading,</b> {{with the ability to}} handle implicit <b>threads.</b> Current proposals focus on only implicitly-threaded code sections. This paper identifies, for the first time, the issues in combining explicit and implicit <b>threading.</b> We present the Multiplex architecture to combine the two <b>threading</b> models. Multiplex exploits the similarities between implicit and explicit <b>threading,</b> and provides a unified support for the two <b>threading</b> models without additional hardware. Multiplex groups a subset of protocol states in an implicitlythreaded CMP to provide a write-invalidate protocol for explicit <b>threads...</b>|$|R
5000|$|Sil-gochu (...) , often {{translated}} as chili <b>threads,</b> chilli <b>threads,</b> or chili pepper <b>threads,</b> {{is a traditional}} Korean food garnish made with chili peppers.|$|R
50|$|Round {{slightly}} spiral <b>threaded</b> {{connections are}} possible on tubular ends of glass items. Such glass <b>threading</b> can face the inside or the outside. In use, glass <b>threading</b> is screwed into or onto non-glass <b>threaded</b> material such as plastic. Glass vials typically have outer <b>threaded</b> glass openings onto which caps can be screwed on. Bottles and jars in which chemicals are sold, transported, and stored usually have <b>threaded</b> openings facing {{the outside and}} matching non-glass caps or lids.|$|R
5|$|Other {{failure modes}} {{that are a}} hazard while filling include valve <b>thread</b> failure, which can cause the valve to blow out of the {{cylinder}} neck, and filling whip failure.|$|E
5|$|Some {{smaller and}} more {{colourful}} species serve as aquarium specimens and pets. Sea wolves {{are used in the}} leather industry. Isinglass is made from <b>thread</b> fish and drum fish.|$|E
5|$|Spirocysts do not {{penetrate}} the victim or inject venom, but entangle it {{by means of}} small sticky hairs on the <b>thread.</b>|$|E
40|$|Air-jet {{texturing}} {{is one of}} {{the most}} perspective methods for manufacture of <b>threads</b> in order to obtain sewing <b>threads</b> of high quality and with excellent mechanical features. The goal of research is to analyse the dependence of qualities of polyester air-jet textured <b>threads</b> on thermo-setting. These <b>threads</b> designed for sewing various outfit were manufactured by the Department of Textile Technology at Kaunas University of Technology. Tensile and cycle flexing–abrasion tests as well as tests of enervated <b>threads</b> were performed. The results demonstrated that thermo-setting of tested <b>threads</b> has an influence on the tensile characteristics of <b>threads.</b> The parameters of manufacture process – overfeed and air pressure, have a great influence on the tensile characteristics of the air-jet textured <b>threads...</b>|$|R
50|$|The {{most common}} <b>threads</b> in use are the ISO metric screw <b>threads</b> (M) for most {{purposes}} and BSP <b>threads</b> (R, G) for pipes.|$|R
5000|$|... a <b>threading</b> library. There {{are already}} good {{cross-platform}} <b>threading</b> libraries and <b>threading</b> {{has been added}} to both the C11 and C++11 standard libraries.|$|R
