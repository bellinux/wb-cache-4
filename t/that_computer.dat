2304|10000|Public
5|$|The {{design of}} Perl can be {{understood}} as a response to three broad trends in the computer industry: falling hardware costs, rising labor costs, and improvements in compiler technology. Many earlier computer languages, such as Fortran and C, aimed to make efficient use of expensive computer hardware. In contrast, Perl was designed so <b>that</b> <b>computer</b> programmers could write programs more quickly and easily.|$|E
5|$|The ENIAC (1946) was {{the first}} machine that was both {{electronic}} and general purpose. It was Turing complete, with conditional branching, and programmable to solve {{a wide range of}} problems, but its program was held in the state of switches in patchcords, not in memory, and it could take several days to reprogram. Researchers such as Turing and Zuse investigated the idea of using the computer's memory to hold the program as well as the data it was working on, and it was mathematician John von Neumann who wrote a widely distributed paper describing <b>that</b> <b>computer</b> architecture, still used in almost all computers.|$|E
5|$|As Syzygy and Nutting {{prepared}} for the MOA show, Bushnell learned that another pair of engineers were also creating an arcade version of Spacewar. In August 1971 Bushnell called Bill Pitts and Hugh Tuck, operating as Mini-Computer Applications, {{so that they could}} meet and discuss their solutions to the problem of running Spacewar on an inexpensive computer. Pitts and Tuck were developing a prototype machine of Galaxy Game when they met with Bushnell; the game, however, while a faithful recreation of Spacewar, ran on an externally-connected DEC PDP-11 with a Hewlett-Packard 1300A Electrostatic Display, and the total cost of the prototype unit was US$20,000. The Syzygy duo were relieved, though also somewhat disappointed, to find that Galaxy Game was not using an innovative solution Syzygy had missed to build an economically-competitive arcade game. Pitts and Tuck, conversely, felt <b>that</b> <b>Computer</b> Space was a pale imitation of Spacewar, while Galaxy Game was a superior adaptation of the game. They eventually produced two game prototypes, both displayed in the Stanford student union building, but never produced the game commercially due to the high cost of the cabinet.|$|E
5000|$|Social {{attributes}} <b>that</b> <b>computers</b> have {{which are}} similar to humans include: ...|$|R
50|$|The law {{can also}} be {{interpreted}} as meaning <b>that</b> <b>computers</b> present economies of scale: the more costly is the computer, the price-performance ratio linearly becomes better. This implies <b>that</b> low-cost <b>computers</b> cannot compete in the market.|$|R
5000|$|As a result, complex {{cases are}} reduced to yes/no {{situations}} <b>that</b> <b>computers</b> can handle.|$|R
5|$|Despite {{the public}} {{focus on the}} various {{physical}} issues with the boats, the major problem with the submarines was {{the development of the}} Rockwell combat system. The problems had started during the funded study, when Singer Librascope and Thomson CSF, who were partnering with Rockwell to develop the combat system, refused to release their intellectual property or their software code for Rockwell to sell. It was proposed <b>that</b> <b>Computer</b> Sciences of Australia, a division of Computer Sciences Corporation and a minor partner in the consortium, take over the role of writing the software for the combat system, although this meant that Singer Librascope, which had prior experience in creating submarine combat systems, was reduced to a minor role in the project. Other major problems with the system, to which most of the later difficulties were attributed, were that the original concept was beyond the technology of the day, and that the system architecture required by the RAN was both overly ambitious and flawed. This was compounded by the rate of advancement in computer technology: equipment had to be designed from scratch and custom manufactured {{at the start of the}} project, but by the time these were installed, they were obsolete compared to commercially available hardware and software.|$|E
5|$|Mathematics can {{be discerned}} {{in many of}} the arts, such as music, dance, painting, architecture, and sculpture. Each of these is richly {{associated}} with mathematics. Among the connections to the visual arts, mathematics can provide tools for artists, such as the rules of linear perspective as described by Brook Taylor and Johann Lambert, or the methods of descriptive geometry, now applied in software modelling of solids, dating back to Albrecht Dürer and Gaspard Monge. Artists from Luca Pacioli in the Middle Ages and Leonardo da Vinci and Albrecht Dürer in the Renaissance have made use of and developed mathematical ideas in the pursuit of their artistic work. The use of perspective began, despite some embryonic usages in the architecture of Ancient Greece, with Italian painters such as Giotto in the 13th century; rules such as the vanishing point were first formulated by Brunelleschi in about 1413, his theory influencing Leonardo and Dürer. Isaac Newton's work on the optical spectrum influenced Goethe's Theory of Colours and in turn artists such as Philipp Otto Runge, J. M. W. Turner, the Pre-Raphaelites and Wassily Kandinsky. Artists may also choose to analyse the symmetry of a scene. Tools may be applied by mathematicians who are exploring art, or artists inspired by mathematics, such as M. C. Escher (inspired by H. S. M. Coxeter) and the architect Frank Gehry, who more tenuously argued <b>that</b> <b>computer</b> aided design enabled him to express himself in a wholly new way.|$|E
5|$|As {{a result}} of the {{reception}} to Galaxy Game, Pitts and Tuck started work on an expanded prototype. For the second machine, they built a full blue fiberglass casing for the consoles, improved the quality of the joysticks {{with the help of a}} machine shop, and modified the computer with a newer display processor to support up to four games at once on different monitors—either multiple simultaneous separate games or up to four players playing the same game on two screens. They also placed the PDP-11 inside one of the consoles rather than in a separate location. While the original plan had been to work on driving down the development costs after the initial prototype, the popularity of the game convinced the pair to instead focus on making a better machine that could run multiple games to recoup the upfront investment. The new version was installed in a cafe in the student union building in June 1972, though with only two monitors due to space restrictions. The original Galaxy Game prototype was displayed at several locations around the area, but was not as successful as it had been at the student union building. By the time the second prototype was completed the pair had spent US$65,000 on the project and had no feasible way of making up the cost with the machine or commercial prospects for a wider release. Pitts later explained that he and Tuck had been focused on the engineering and technical challenges of producing a faithful coin-operated Spacewar game and paid little attention to the business side of the project; he felt <b>that</b> <b>Computer</b> Space had been more commercially successful because Bushnell had focused more on the business side of his idea than the technical.|$|E
40|$|People assume <b>that</b> <b>computers</b> {{are just}} glorified calculating machines. Not so. It’s true <b>that</b> <b>computers</b> {{are often used}} to do calculating because they can {{calculate}} very quickly–but computer programs don’t have {{to have anything to}} do with numbers [...] . A computer is a universal machine and I have proved how it can perform any task that can be described in symbols. I would go further. It is my view <b>that</b> a <b>computer</b> can perform any task that the human brain can carry out. Any task [...] . ”...|$|R
40|$|Enthusiasm {{for using}} {{computers}} {{to write and}} to teach writing has been strong among {{those of us who}} have a special interest in both computers and writing. We believe [...] usually based on our own experiences as writers [...] <b>that</b> the <b>computer</b> lessens the tediousness Of writing, <b>that</b> <b>computers</b> free us from the mundane aspects of writing, <b>that</b> <b>computers</b> allow writers to focus on content and meaning, and <b>that</b> <b>computers</b> encourage revision. We assume <b>that</b> the <b>computer's</b> strengths [...] speed and vast memory capacity [...] somehow help the writer, and that the result is more and better writing. Unfortunately, there is little empirical evidence to support our assumptions. In fact, what little there is seems to contradict them: for instance, John Gould in his important 1980 study, found that expert writers using text editors required 50 % more time to compose on text editors than on hard copy. But this extra time did not lead to "better" writing; there was little difference in quality between letters produced o...|$|R
5000|$|Being a {{fully-fledged}} {{computer and}} yet {{smaller than a}} Mini-ITX board means <b>that</b> <b>computers</b> can continue to grow smaller.|$|R
25|$|In more {{technical}} terms, {{the first part}} of a description is a computer program, with the second part being the input to <b>that</b> <b>computer</b> program which produces the object as output.|$|E
25|$|In April 2009, the Wall Street Journal {{reported}} <b>that</b> <b>computer</b> spies, allegedly Chinese but {{acknowledged to}} be from uncertain sources, had penetrated the database and acquired terabytes of secret information about the fighter, possibly compromising its future effectiveness.|$|E
25|$|When published, {{although}} critically savaged, Rand's Objectivist {{ideas were}} popular, and influenced {{people working in}} the technology sector of California. The Californian Ideology, a techno-utopian belief <b>that</b> <b>computer</b> networks could measure, control and help to stabilise societies, without hierarchical political control, and that people could become 'Randian heroes', only working for their own happiness, became widespread in Silicon Valley.|$|E
40|$|It is {{well known}} <b>that</b> <b>computers</b> are tremendously useful in solving long and {{involved}} arithmetic calculations. We are now seeing an explo-sion of additional application areas for computers. The Translation Sciences Institute (TSI) of BYU is exploring various ways <b>that</b> <b>computers</b> can be made useful in translation. FAHQT- A CURRENT IMPOSSIBILITY The idea of machine translation (MT) is not new. There have been many MT projects since the 1950 's. Nearly thirty years of research on this problem have pointed out the immense difficulty of the task, the inadequacies of linguistic theories, and the limitations of computers. It is now generally agreed that fully automatic high quality translation (FAHQT) of general text is impossible, given our current, limited under-standing of language. However, {{this does not mean}} <b>that</b> <b>computers</b> are not extremely useful in translation. It simply means <b>that</b> the <b>computer</b> is better suited as a partner with, rather than a replacement for, the huma...|$|R
50|$|Patch {{management}} tools automate {{the deployment}} of software patches to ensure <b>that</b> <b>computers</b> are up-to-date and meet applicable security and efficiency standards.|$|R
5000|$|The fact <b>that</b> <b>computers</b> handle office {{functions}} that, in most cases, are {{not related}} to the actual production of goods and services.|$|R
25|$|Hopper was a {{goodwill}} ambassador in her primary activity in this capacity. She lectured widely {{about the early}} days of computing, her career, and on efforts <b>that</b> <b>computer</b> vendors could take to make life easier for their users. She visited most of Digital's engineering facilities, where she generally received a standing ovation at the conclusion of her remarks.|$|E
25|$|To {{accomplish}} {{the goal of}} central management {{of a group of}} computers, machines should receive and enforce GPOs. A GPO that resides on a single machine only applies to <b>that</b> <b>computer.</b> To apply a GPO to a group of computers, Group Policy relies on Active Directory (or on third-party products like ZENworks Desktop Management) for distribution. Active Directory can distribute GPOs to computers which belong to a Windows domain.|$|E
25|$|Apple {{believed}} the Apple II series {{was too expensive}} to produce and took away sales from the low-end Macintosh. In the 1990s, Apple released the Macintosh LC, and began efforts to promote <b>that</b> <b>computer</b> by advising developer technical support staff to recommend developing applications for Macintosh rather than Apple II, and authorizing salespersons to direct consumers towards Macintosh and away from Apple II. The Apple IIe was discontinued in 1993.|$|E
5000|$|... "The {{book has}} 101 humorous little stories, {{each with a}} {{philosophical}} problem (not however, necessarily, the usual Unsolved problems in philosophy). For example, problem 54 is about Mr Megasoft, who dies leaving his fortune to his favourite computer. Megasoft's children take the matter to court, contending <b>that</b> the <b>computer</b> cannot think and so cannot inherit money. Mr Megasoft's lawyers claim <b>that</b> the <b>computer</b> can think. But on what grounds can we say <b>that</b> <b>computers</b> can or cannot think?" ...|$|R
2500|$|Wright, in an {{interview}} with The Times, expressed belief <b>that</b> <b>computers</b> extend the imagination, and posits the emergence of the [...] "metabrain", stating: ...|$|R
5000|$|Second, the {{semantics}} of {{each element}} should be specified so <b>that</b> <b>computers</b> can help human beings achieve a common {{understanding of their}} meanings and potential usages.|$|R
25|$|The Fightin' Texas Aggie Band (also {{known as}} The Noble Men of Kyle or the Aggie Band) is the {{official}} marching band of Texas A University. Composed of over 400men and women from the school's Corps of Cadets, {{it is the largest}} military marching band in the world. The complex straight-line maneuvers, performed exclusively to traditional marches, are so complicated and precise <b>that</b> <b>computer</b> marching simulations say they cannot be performed.|$|E
25|$|In 1990 Iwai's {{solo show}} Machine for Trinity {{exhibited}} at the Laforet Museum in Tokyo; some of the works shown there demonstrated <b>that</b> <b>computer</b> graphics could be generated and combined in real-time with live action images. The TV director Shinji Fukuhara visited the exhibition and shortly afterward contracted Iwai to create concepts and a virtual set for a weekly half-hour science news show Einstein TV (Fuji TV, 1990–91). Created on the Amiga, the virtual set included GUI-like pop-up menus.|$|E
25|$|One of {{the basic}} {{problems}} {{in the study of}} speech is {{how to deal with the}} noise in the speech signal. This is shown by the difficulty <b>that</b> <b>computer</b> speech recognition systems have with recognizing human speech. These programs can do well at recognizing speech when they have been trained on a specific speaker's voice, and under quiet conditions. However, these systems often do poorly in more realistic listening situations where humans can understand speech without difficulty.|$|E
50|$|Domain Name System (DNS) {{resolution}} {{is the process}} of translating a human-readable domain name (for example, en.wikipedia.org) into an IP address <b>that</b> <b>computers</b> can use. Every ISP runs a DNS server to allow their customers to translate domain names into IP addresses <b>that</b> <b>computers</b> understand and use. When an ISP's DNS server receives a request to translate a name, according to RFC the DNS server should return the associated IP address to the customer's computer which is then able to connect to the requested resource.|$|R
50|$|Indeed, not all {{computer}} theorists {{would agree}} with the premise <b>that</b> <b>computers</b> can only do what they are programmed to do—a key point in favor of computational creativity.|$|R
5000|$|Resource {{requirements}} <b>that</b> <b>computers</b> {{must have}} {{to be eligible for}} scheduling, such as total RAM available, total swap available, CPU clock speed, number of CPUs, Operating System, etc.|$|R
25|$|Following college, Meier {{worked in}} {{developing}} cash register systems for department stores. During this period, Meier purchased an Atari 800 circa the early 1980s, which helped him realize <b>that</b> <b>computer</b> programming {{could be used}} to make video games. He made a few games that were similar to arcade titles at the time. He found a co-worker, Bill Stealey, who had a similar interest in developing games, and shared the games that Meier had developed. The two decided to launch a new company for computer game development.|$|E
25|$|The OLPC {{project has}} been the subject of {{extensive}} praise and criticism. It was praised for enabling low-cost, low-power machines; for assuring consensus at ministerial level in many countries <b>that</b> <b>computer</b> literacy is a mainstream part of education; for creating interfaces that worked without literacy in any language, and particularly without literacy in English. It has been criticized from many sides regarding its US-centric focus that ignores bigger problems, high total costs that may actually even be quite cost-ineffective, low focus on maintainability and training and its limited success so far.|$|E
25|$|A notice {{issued by}} the Ministry of Industry and Information Technology on 19 May stated that, as of 1 July 2009, {{manufacturers}} must ship machines to be sold in mainland China with the Green Dam Youth Escort software. On 14 August 2009, Li Yizhong, minister of industry and information technology, announced <b>that</b> <b>computer</b> manufacturers and retailers were no longer obliged to ship the software with new computers for home or business use, but that schools, Internet cafes and other public use computers would still be required to run the software.|$|E
30|$|A dummy {{variable}} indicating <b>that</b> <b>computers</b> {{are important and}} used at a high level—either “complex” (e.g. for computer-aided design or statistical analysis packages) or “advanced” (e.g. using computer syntax).|$|R
5000|$|In {{theoretical}} computer science, a computational {{problem is}} a mathematical object representing a collection of questions <b>that</b> <b>computers</b> {{might be able to}} solve. For example, the problem of factoring ...|$|R
5000|$|The {{solution}} requires mathematical formulation and numerical solution. Since {{load flow}} problems generate non-linear equations <b>that</b> <b>computers</b> cannot solve quickly, numerical methods are required. The following methods {{are commonly used}} algorithms: ...|$|R
