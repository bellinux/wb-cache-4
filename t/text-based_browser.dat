2|16|Public
50|$|Carrie is {{an online}} digital library project {{based at the}} University of Kansas {{containing}} full-text books and documents. The site became operational in 1993, and has {{the distinction of being}} among the first university-library hosted sites for full on-line texts. The site, named after the University's first professional librarian, evolved from an earlier collection of online resources. This evolution was spearheaded by Lynn Nelson, a professor of history, and put into effect by a team creating the Lynx <b>text-based</b> <b>browser.</b> In 1993, the site linked to over three thousand texts. It currently has extensive links to historical documents relating to Kansas history, as well as significant links to material in other areas.|$|E
40|$|Mainstream music browsers {{have not}} evolved {{new methods of}} {{organization}} to deal with growing personal music library size. They instead rely on an exclusively text-based interface, which does not organize music by audio content, nor incorporate {{the wide variety of}} user-generated descriptors that is available on the internet. Navigation of music with this type of <b>text-based</b> <b>browser</b> is inherently difficult. This thesis proposal outlines the work required for a new music browser that does incorporate/combine these data, {{in the form of a}} three-dimensional map of the user’s personal music space. This new interface will be highly-flexible, extendable, and therefore customizable, enabling a fully interactive exploration of that music space, complemented by visually-appealing graphics and informative visualizations. The main goal is that the user will gain a better understanding of his or her musical preferences and listening patterns, while being provided a context for those characterizations. This context also provides the basis for a recommendation system for music. The Problem Over the past ten years, widespread use of the MP 3 audio encoding format and, in turn, the proliferation of peer-to-peer file sharing and online music stores has lead to a dramati...|$|E
50|$|<b>Text-based</b> <b>browsers</b> {{are often}} very useful for users with visual {{impairment}} or partial blindness. They are especially useful with speech synthesis or text-to-speech software, which reads content to users.|$|R
5000|$|The <b>text-based</b> web <b>browsers</b> ELinks and edbrowse use SpiderMonkey {{to support}} JavaScript ...|$|R
5000|$|HTML {{obfuscation}} : In HTML, {{email addresses}} may be obfuscated in many ways, such as inserting hidden {{elements within the}} address or listing parts out of order and using CSS to restore the correct order. Each has the benefit of being transparent to most users, but none support clickable email links and none are accessible to <b>text-based</b> <b>browsers</b> and screen readers.|$|R
5000|$|JavaScript {{obfuscation}} : JavaScript email obfuscation {{produces a}} normal, clickable email link for users {{while obscuring the}} address from spiders. In the source code seen by harvesters, the email address is scrambled, encoded, or otherwise obfuscated. While very convenient for most users, it does reduce accessibility, e.g. for <b>text-based</b> <b>browsers</b> and screen readers, or for those not using a JavaScript-enabled browser.|$|R
50|$|Lynx is a {{customizable}} <b>text-based</b> web <b>browser</b> {{for use on}} cursor-addressable character cell terminals. , it is {{the oldest}} web browser still in general use and active development, having started in 1992.|$|R
50|$|ELinks {{is a free}} <b>text-based</b> console web <b>browser</b> for Unix-like {{operating}} systems.|$|R
5000|$|... w3m {{is a free}} software/open source <b>text-based</b> web <b>browser</b> and {{terminal}} pager. It has {{support for}} tables, frames, SSL connections, color and inline images on suitable terminals. Generally, it renders pages in a form as true to their original layout as possible.|$|R
50|$|A <b>text-based</b> web <b>browser</b> is a {{web browser}} that renders only the text of web pages, and ignores graphic content. Usually, they render pages faster than {{graphical}} web browsers due to lowered bandwidth demands. Additionally, the greater CSS, JavaScript and typography functionality of graphical browsers require more CPU resources.|$|R
50|$|Since the system's creation, UHS {{readers have}} been made {{available}} for various platforms, including DOS, Apple Macintosh and Microsoft Windows. The current versions of the official readers are proprietary software products. An official Internet website, UHSWeb went online in 1998, allowing access to UHS guides via web <b>browsers,</b> including <b>text-based</b> web <b>browsers</b> such as Lynx.|$|R
5000|$|Emacs/W3, a <b>text-based</b> web <b>browser</b> {{written in}} Emacs Lisp, {{primarily}} by William M. Perry. Emacs/W3 {{is part of}} the Sumo package for XEmacs, and the submodule for fetching a URL is currently part of the GNU Emacs CVS [...] Dave Raggett was supported by Emacs/W3 and by tkWWW while working on a successor to HTML 2 called HTML+.|$|R
40|$|For {{people who}} use <b>text-based</b> web <b>browsers,</b> graphs, diagrams, and {{pictures}} are inaccessible. Yet, such diagrams are quite prominent in documents commonly found on the web. In this work we describe a method for rendering important aspects of a line graph as plain text. Our method relies heavily on research in natural language generation and is motivated by an analysis of human-written descriptions of line graphs. In this paper we concentrate on determining which aspects of the line graph to include in a summary. ...|$|R
50|$|Two, of many, {{accessibility}} {{features in}} the system are text alternatives for all visual elements, and keyboard access to all elements of the program. With these features, a blind person can listen to the entire interface of the system {{with the help of}} a screen reader, and he or she can access the system without needing a mouse. These features also allow ATutor to adapt to a wide variety of technologies including cell phones, personal data assistants (PDAs), and <b>text-based</b> Web <b>browsers,</b> to name a few.|$|R
50|$|Milwaukee Omnifest {{was one of}} {{the first}} dial-up Internet {{services}} available to the public via a local Milwaukee phone number. The modem pool was located at UW-Milwaukee, then later ExecPC made their excess modem pool capacity available during weekdays. Once logged into the modem pool, users could browse Omnifest text-only menus and bulletin boards maintained by volunteers. Members had E-mail and could subscribe to news groups. Omnifest hosted their own web site and members could browse the World Wide Web but were limited to using Lynx, a <b>text-based</b> web <b>browser.</b>|$|R
5000|$|The term {{hypertext}} {{was coined}} by Ted Nelson in 1965 in the Xanadu Project, {{which was in}} turn inspired by Vannevar Bush's 1930s vision of the microfilm-based information retrieval and management [...] "memex" [...] system described in his 1945 essay [...] "As We May Think". Tim Berners-Lee and his team at CERN are credited with inventing the original HTTP along with HTML and the associated technology for a web server and a <b>text-based</b> web <b>browser.</b> Berners-Lee first proposed the [...] "WorldWideWeb" [...] project in 1989—now known as the World Wide Web.The first version of the protocol had only one method, namely GET, which would request a page from a server. The response from the server was always an HTML page.|$|R
5000|$|SlipKnot's {{rendering}} engine {{was written in}} C, and its user interface in Visual Basic. Because it had only a Unix commandline to communicate with, it [...] "drove" [...] the Unix host by sending characters to its commandline as if a person were typing them (as a [...] "bot"). First, SlipKnot would request the retrieval of individual parts of a desired web page—the text, and then each picture—into files on the Unix host. This was done by executing the <b>text-based</b> web <b>browser</b> [...] "lynx" [...] on the Unix host with command-line arguments indicating which URL to retrieve, and the filename to create on the Unix host when the data was finally retrieved. This retrieval, from web page host to Unix host, was usually very fast, since these machines were connected by high speed communications lines. After the URL contents were moved to the Unix host, {{they had to be}} moved down to the PC. This was done by executing the communications program zmodem (sending the zmodem command to the Unix command-line) and then instantly placing the PC into receive mode.|$|R
40|$|The {{proliferation}} of Linked Open Data on the Web {{has increased the}} amount of data available for analysis and reuse. However, casual users {{find it difficult to}} explore and use Semantic Web Data due to the prevalence of specialised browsers that require complex queries to be formed and intimate knowledge on the structure of datasets. We address this problem in the Rhizomer tool by applying the data analysis mantra of overview, zoom and filter. These interaction patterns are implemented using information architecture components users are already familiar with but that are automatically generated from data and ontologies. This approach makes it possible to obtain an overview of the dataset being explored using techniques, such as navigation menus, treemaps or sitemaps, which are usually not available in <b>text-based</b> semantic web <b>browsers.</b> From there, users can interactively explore the data using facets. Moreover, facets also feature a pivoting operation, motivated during tests with lay users, that removes the main constraint of most faceted browsers, i. e. the inability to combine filters for differently faceted views to build complex queries...|$|R

