55|94|Public
2500|$|The {{first two}} {{pictures}} were taken during December 2011. [...] A large Christmas <b>tree</b> <b>configuration</b> of lights formed part of Woking's Christmas celebrations.|$|E
2500|$|The two helical stalks between {{subunits}} L and S intertwine with {{a single}} left-handed crossover into a coiled-coil at the top, near the globular domains forming a palm <b>tree</b> <b>configuration.</b> [...] This region interacts with the two alpha helices of the second dimer in an opposite orientation to form a [...] four-helix bundle and the dumbbell-shaped tetramer.|$|E
50|$|The {{first two}} {{pictures}} were taken during December 2011. A large Christmas <b>tree</b> <b>configuration</b> of lights formed part of Woking's Christmas celebrations.|$|E
40|$|We {{have studied}} the Steiner tree problem using six-pin soap films in detail. We extend the {{existing}} method of experimental realisation of Steiner trees in $n$-terminal problem through soap films to observe new non-minimal Steiner trees. We also produced spanning <b>tree</b> <b>configurations</b> {{for the first time}} by our method. Experimentally, by varying the pin diameter, we have achieved these new stable soap film configurations. A new algorithm is presented for creating these Steiner trees theoretically. Exact lengths of these Steiner <b>tree</b> <b>configurations</b> are calculated using a geometrical method. An exact two-parameter empirical formula is proposed for estimating the lengths of these soap film configurations in six-pin soap film problem...|$|R
40|$|Lajos Takacs gave a {{somewhat}} formidable alternating sum formula {{for the number}} of forests of unrooted trees on $n$ labeled vertices. Here we use a weight-reversing involution on suitable <b>tree</b> <b>configurations</b> to give a combinatorial derivation of Takacs' formula. Comment: 3 pages, LaTeX, to appear Journal of Integer Sequence...|$|R
5000|$|Instruction {{selection}} is typically {{carried out by}} doing a recursive postorder traversal on the abstract syntax tree, matching particular <b>tree</b> <b>configurations</b> against templates; for example, the tree [...] might {{be transformed into a}} linear sequence of instructions by recursively generating the sequences for [...] and , and then emitting the instruction [...]|$|R
50|$|SPB can use many VIDs, {{agreeing on}} which VIDs {{are used for}} which purposes. The IIH PDUs carry a digest of all the used VIDs, {{referred}} to as the Multiple Spanning <b>Tree</b> <b>Configuration</b> TLV which uses a common and compact encoding reused from 802.1Q.|$|E
50|$|The two helical stalks between {{subunits}} L and S intertwine with {{a single}} left-handed crossover into a coiled-coil at the top, near the globular domains forming a palm <b>tree</b> <b>configuration.</b> This region interacts with the two alpha helices of the second dimer in an opposite orientation to form a four-helix bundle and the dumbbell-shaped tetramer.|$|E
50|$|However, using {{switches}} to connect multiple Ethernet networks in a fault-tolerant fashion requires redundant paths through that network, {{which in turn}} requires a spanning <b>tree</b> <b>configuration.</b> This ensures {{that there is only}} one active path from any source node to any destination on the network. This causes centrally located {{switches to}} become bottlenecks, which limits scalability as more networks are interconnected.|$|E
40|$|While most work on parsing with PCFGs {{has focused}} on local {{correlations}} between <b>tree</b> <b>configurations,</b> we attempt to model non-local correlations using a finite mixture of PCFGs. A mixture grammar fit with the EM algorithm shows improvement over a single PCFG, both in parsing accuracy and in test data likelihood. We argue that this improvement comes from the learning of specialized grammars that capture non-local correlations. ...|$|R
40|$|In our {{companion}} {{report on}} overheads in loosely coupled parallel systems, {{the need for}} a better sequential vertex covering algorithm, and for more complex graphs was demonstrated. Here we have explored schemes designed for the parallel search of skewed trees that arise from the use of an improved sequential algorithm. Three different biased binary multi-processor <b>tree</b> <b>configurations</b> are compared on a basis of time speedup, node count, and overheads in covering a representative set of computationally large graphs...|$|R
40|$|Compaction {{of upper}} soil layers by {{intensive}} sheep grazing has been connected with increased local flood risk in silvopastoral systems. A 12 â��week field {{study was conducted}} at the Henfaes Research Station near Bangor, Wales to compare canopy interception, soil water infiltration, and bulk density between a control pasture and two silvopastoral tree planting configurations: trees clumped in fenced-off ungrazed plots and trees planted evenly and grazed. The study's aim was to characterize the potential of these <b>tree</b> planting <b>configurations</b> to reduce local flood risk. Automated throughfall gauges were installed in each silvopastoral treatment along with a similarly designed control gauge located in the grazed control pasture. Soil water infiltration and bulk density were measured 20 times in a stratified random design for each treatment and control. Results showed that the mean soil infiltration capacity in clumped configuration was 504 % greater than the control pasture and 454 % greater than the even spaced configuration. Average canopy interception was higher in the clumped configuration (34 %) than in the even spaced configuration (28 %). Soil bulk density was lower in the clumped configuration (0. 87 â��Mg/m 3) than in the control pasture (0. 93 â��Mg/m 3) and even spaced configuration (1 â��Mg/m 3). Results suggest that silvopastoral systems {{are more likely to}} benefit from clumped and ungrazed <b>tree</b> <b>configurations</b> than from evenly-spaced and grazed <b>tree</b> <b>configurations</b> due to enhanced infiltration, lower soil compaction, and increased canopy interception. Our findings support the growing evidence base that fenced-off tree areas in silvopastoral settings can increase infiltration and thus reduce local flood risk. This article is protected by copyright. All rights reserved...|$|R
50|$|In November 2005 Quadrics {{announced}} a new product based on 10 Gigabit Ethernet (10 GigE), called QsTenG. The first QsTenG switch was an 8U chassis with 12 slots for 10 GigE line cards, making 96 ports in total. Each line card had eight 10 GigE ports that connect using 10GBASE-CX4 connectors. Each line card also had four internal ports that connected the line cards together into a fat <b>tree</b> <b>configuration.</b> Since then, Quadrics brought out a second generation of 10 GigE switches, starting with a compact 1U switch with 24 ports, which comes in two variants, TG201-CA, 24 ports CX4, and TG201-XA, 24 ports in total, 12 XSP and 12 CX4. They were expected to bring out a range of larger switches in 2009, the chassis was planned {{to be the same}} as the QsNetIII, the switch to have been called TG215.|$|E
5000|$|As the Pro Stock {{class was}} having issues with hood scoops and the {{visibility}} of the only amber light being lit (bottom) before the green light, the NHRA, as part of Christmas Tree changes in 1986, instituted the first major overhaul of the Tree; two amber lights were removed on each side, making the tree three amber lights before green. The NHRA said they could save around four minutes with the reduction of starts by one second in sportsman classes. The second change {{was made in the}} Professional <b>tree</b> <b>configuration.</b> All three amber lights turn on together before the tree turns green. A slight change in 2003 was made when the NHRA began using LED bulbs, as incadescent bulbs would have to be replaced up to 20 times per meeting. This changed reaction times considerably, as the reaction time went from [...]108 (under the current base of [...]000) to [...]075 in Top Fuel, and most notably, Pro Stock went from [...]061 to [...]034 second reaction times.|$|E
40|$|For {{scalable}} multicast transport, one of {{the promising}} approaches is to employ a control tree known as acknowl-edgement (ACK) tree {{which can be used}} to convey infor-mation on reliability and session status from receivers to a root sender. The existing <b>tree</b> <b>configuration</b> has focused on a ‘bottom-up ’ scheme in which ACK trees grow from leaf receivers toward a root sender. This paper proposes an al-ternative ‘top-down ’ configuration where an ACK tree be-gins at the root sender and gradually expands by including non-tree nodes into the tree in a stepwise manner. The pro-posed scheme is simple and practical to implement along with multicast transport protocols. It is also employed as a <b>tree</b> <b>configuration</b> in the Enhanced Communications Transport Protocol, which has been standardized in the ITU-T and ISO/IEC JTC 1. From experimental simula-tions, we see that the top-down scheme provides advan-tages over the existing bottom-up one in terms of the num-ber of control messages required for <b>tree</b> <b>configuration</b> and the number of tree levels...|$|E
5000|$|Boarding ladders, {{particularly}} the Christmas <b>tree</b> ladder <b>configuration,</b> {{with a single}} central rail and cantilevered rungs on both sides, which allows a diver to climb while wearing fins.|$|R
40|$|The use of Application Level Multicast (ALM) is {{extremely}} promising for content distribution. F or these applications appropriate cost functions for deciding between different ALM <b>tree</b> <b>configurations</b> are required, and for these cost functions bandwidth measurement mechanisms {{are most likely}} to be important. Existing end-to-end measurement techniques cannot address several ALM and network topology scenarios. Enhancing existing techniques with cooperation mechanisms allows them to cope with the specificity of ALM, namely with transport link sharing. Sim ulation results indicate that these techniques can produce estimates with reasonable accuracy...|$|R
40|$|This paper {{analyzes}} {{the effect of}} communication delay on the optimal distribution of processing loads in distributed computing networks. The processing load is assumed to satisfy the property of arbitrary divisibility. The objective is to divide and distribute this processing load among various processors in the network {{in order to minimize}} the processing time. An asymptotic analysis of the performance of such networks is carried out to obtain a limit on the performance enhancement obtained by using additional processors. The architectures considered are linear and single-level <b>tree</b> <b>configurations.</b> The cases when the processors are equipped with and without front-ends are considered...|$|R
40|$|This paper proposes an {{alternative}} `top-down' configuration where an ACK tree {{begins at the}} root sender and gradually expands by including non-tree nodes into the tree in a stepwise manner. The proposed scheme is simple and practical to implement along with multicast transport protocols. It is also employed as a <b>tree</b> <b>configuration</b> in the Enhanced Communications Transport Protocol, which has been standardized in the ITU-T and ISO/IEC JTC 1. From experimental simulations, {{we see that the}} top-down scheme provides advantages over the existing bottom-up one {{in terms of the number}} of control messages required for <b>tree</b> <b>configuration</b> and the number of tree level...|$|E
30|$|By {{its very}} nature, the {{microstructural}} optimization {{for the best}} system performance at the megascale fits well into the inverse problem in mathematics and the downscaling problem in multiscale science [20]. Both are of fundamental importance but daunting difficulty with no effective method available to resolve them at present. By following the constructal theory [82 – 84], a constructal approach has been recently developed in [16, 85 – 88], which converts the inverse problem into a forward one by first specifying a type of microstructures and then optimizing system performance {{with respect to the}} available freedom within the specified type of microstructures and enables us to find the constructal microstructure (the best for the optimal system performance within the specified type of microstructures). The approach has also been applied to make a constructal design for some fundamental heat conduction systems of nanofluids with two pre-specified types of microstructures: (1) dispersed configuration in which nanoparticles are well dispersed in the base fluid [85, 86], and (2) <b>tree</b> <b>configuration</b> in which nanoparticles form tree structures in the base fluid as high-conductivity channels for the heat flow [87, 88]. The former is commonly used in the nanofluid field; the latter is mostly found in nature for its small flow resistance. The constructal nanofluids that maximize the system performance are not necessarily the ones with uniformly dispersed particles in base fluids [85, 86]. The constructal nanofluids with the <b>tree</b> <b>configuration</b> can normally offer significantly smaller constructal overall resistance than the dispersed configuration [87]. The constructal nanofluids with the <b>tree</b> <b>configuration</b> have also some universal features of independent of: (1) some details of specified <b>tree</b> <b>configuration,</b> (2) fluid and particle properties and (3) particle overall volume fraction [88].|$|E
40|$|Self-decoding FET-hybrid or integrated-circuit <b>tree</b> <b>configuration</b> uses {{minimum number}} of {{components}} and can be sequenced by clock or computer. Redundancy features can readily be incorporated into tree configuration; as tree grows in size and more sensors are included, percentage of parts that will affect given percentage of sensors steadily decreases...|$|E
40|$|We {{study the}} {{relation}} between simple-minded systems and two-term tilting complexes for self-injective Nakayama algebras. More precisely, we show that any simple-minded system of a self-injective Nakayama algebra {{is the image of}} the set of simple modules under a stable equivalence, which is given by the restriction of a standard derived equivalence induced by a two-term tilting complex. We achieve this by exploiting and connecting the mutation theories from the combinatorics of Brauer <b>tree,</b> <b>configurations</b> of stable translations quivers of type A, and triangulations of a punctured convex regular polygon. Comment: 18 pages 4 figures [v 3]: Some parts rewritten to generalise the result in previous versio...|$|R
40|$|Quantum state {{propagation}} over binary <b>tree</b> <b>configurations</b> is {{studied in}} the context of quantum spin networks. For binary tree of order two a simple protocol is presented which allows to achieve arbitrary high transfer fidelity. It does not require fine tuning of local fields and two-nodes coupling of the intermediate spins. Instead it assumes simple local operations on the intended receiving node: their role is to brake the transverse symmetry of the network that induces an effective refocusing of the propagating signals. Some ideas on how to scale up these effect to binary tree of arbitrary order are discussed. Comment: 6 pages, 2 figure...|$|R
40|$|We {{present a}} discriminative, latent {{variable}} approach to syntactic parsing in which rules exist at multiple scales of refinement. The model is formally a latent variable CRF grammar over trees, learned by iteratively splitting grammar productions (not categories). Different {{regions of the}} grammar are refined to different degrees, yielding grammars which are three orders of magnitude smaller than the single-scale baseline and 20 times smaller than the split-and-merge grammars of Petrov et al. (2006). In addition, our discriminative approach integrally admits features beyond local <b>tree</b> <b>configurations.</b> We present a multiscale training method along with an efficient CKY-style dynamic program. On a variety of domains and languages, this method produces the best published parsing accuracies with the smallest reported grammars. ...|$|R
40|$|A {{cascaded}} multimode interference 1 x 8 {{power splitter}} is proposed and fabricated in silicon-on-insulator material. The device consists of seven 1 x 2 power splitters {{arranged in a}} <b>tree</b> <b>configuration.</b> The cascaded splitter and its 1 x 2 splitter element have the power uniformity of approximately 1. 5 dB and 0. 3 dB, respectively...|$|E
40|$|Abstract: This work proposes an edge-node {{multicast}} overlay {{to create}} a tree capable of performing point to multipoint distribution of real time video (i. e., videoconference) with a hard upper bound on end-to-end delay. By moving the <b>tree</b> <b>configuration,</b> replication, and network monitoring to the edge routers instead of end systems, the trees can be constructed using the knowledge of overlay link bandwidths and latencies. As participants join the videoconference, several possible tree configurations are considered and a score based on latency and bandwidth utilization is assigned to each. The configuration with the highest score is chosen and constructed. All tree construction and content distribution is done {{without the use of}} native IP multicast. It is shown that by giving appropriate weights to both bandwidth and latency characteristics of a <b>tree</b> <b>configuration,</b> the sum of the packets lost due to congestion and excessive delay is significantly lower as compared to two existing multicast overlay implementations (YOID and Narada) without adding significant stress to higher utilized network links...|$|E
40|$|This work proposes an edge-node {{multicast}} overlay {{to create}} a tree capable of performing point to multipoint distribution of real time video (i. e., videoconference) with a hard upper bound on end-toend delay. By moving the <b>tree</b> <b>configuration,</b> replication, and network monitoring to the edge routers instead of end systems, the trees can be constructed using the knowledge of overlay link bandwidths and latencies. As participants join the videoconference, several possible tree configurations are considered and a score based on latency and bandwidth utilization is assigned to each. The configuration with the highest score is chosen and constructed. All tree construction and content distribution is done {{without the use of}} native IP multicast. It is shown that by giving appropriate weights to both bandwidth and latency characteristics of a <b>tree</b> <b>configuration,</b> the sum of the packets lost due to congestion and excessive delay {{is similar to that of}} native IP multicast without adding significant stress to highly utilized network links...|$|E
40|$|Abstract. The {{distribution}} of nearby (cz < 7500 km s− 1) galaxies has been explored by minimal spanning trees; allowance {{has been made}} for the drastic decrease of data with distance. The investigation finds that all galaxies are members of irregular elongated large-scale structures; there are no ‘field galaxies’. Based on our local large-scale structure, every galaxy {{appears to have a}} neighbouring galaxy within < 100 km s− 1 (1. 4 h − 1 70 Mpc) of redshift space, and thereby all galaxies are found to lie in filaments or <b>tree</b> <b>configurations.</b> Every large-scale structure appears to have a neighbouring large-scale structure within < 700 km s− 1 (10 h − 1 70 Mpc), such that large-scale structures interconnect to form a continuous labyrinth. 1...|$|R
40|$|We {{describe}} a semantic role labeling system that makes primary use of CCG-based features. Most previously developed systems are CFG-based and make {{extensive use of}} a treepath feature, which suffers from data sparsity due to its use of explicit <b>tree</b> <b>configurations.</b> CCG affords ways to augment treepathbased features to overcome these data sparsity issues. By adding features over CCG wordword dependencies and lexicalized verbal subcategorization frames (“supertags”), we can obtain an F-score that is substantially better than a previous CCG-based SRL system and competitive with {{the current state of}} the art. A manual error analysis reveals that parser errors account for many of the errors of our system. This analysis also suggests that simultaneous incremental parsing and semantic role labeling may lead to performance gains in both tasks. ...|$|R
40|$|CombinatoricsInternational audienceConsider {{spanning}} {{trees on}} the two-dimensional Sierpinski gasket SG(n) where stage n is a non-negative integer. For any given vertex x of SG(n), we derive rigorously the probability distribution of the degree j ∈{ 1, 2, 3, 4 } at the vertex and its value in the infinite n limit. Adding up such probabilities of all the vertices divided {{by the number of}} vertices, we obtain the average probability distribution of the degree j. The corresponding limiting distribution φj gives the average probability that a vertex is connected by 1, 2, 3 or 4 bond(s) among all the spanning <b>tree</b> <b>configurations.</b> They are rational numbers given as φ 1 = 10957 / 40464, φ 2 = 6626035 / 13636368, φ 3 = 2943139 / 13636368, φ 4 = 124895 / 4545456...|$|R
40|$|Electrical grids {{are no more}} {{isolated}} infrastructures but they provide services towards other infrastructures and meanwhile water networks, telecommunications, gas pipelines and transport systems are mandatory {{in order to produce}} and deliver electricity. The reconfiguration algorithm determines the optimal <b>tree</b> <b>configuration</b> of the grid, after overloads or permanent faults. In literature, the reconfiguration algorithm takes into account feasibility, radiality, load balancing and energy losses...|$|E
40|$|Here {{we present}} a {{reconstruction}} of the Positive Operator-Value Measurement of a photon-number-resolving detector comprised of three 50 : 50 beamsplitters in a <b>tree</b> <b>configuration,</b> terminated with four single-photon avalanche detectors. The four detectors' outputs are processed by an electronic board that discriminates detected photon number states from 0 to 4 and implements a "smart counting" routine to compensate for dead time issues at high count rates...|$|E
40|$|This thesis {{shows how}} {{constraint}} programming {{can be applied}} to the processing of Categorial Type Logics (CTL). It presents a novel formalisation of the parsing task for categorial grammars as a <b>tree</b> <b>configuration</b> problem, and demonstrates how a recent proposal for structural constraints on CTL parse trees [11] can be integrated into this framework. The resulting processing model has been implemented using the Mozart/Oz programming environment...|$|E
40|$|An O(n log n) {{heuristic}} for the Euclidean Steiner Minimal Tree (ESMT) {{problem is}} presented. The algorithm {{is based on}} a decomposition approach which first partitions the vertex set into triangles via the Delaunay triangulation, then “recomposes” the suboptimal Steiner Minimal Tree (SMT) according to the Voronoi diagram and Minimum Spanning Tree (MST) of the point set. The ESMT algorithm was implemented in FORTRAN-IV and tested on a number of randomly generated point sets in the plane drawn from a uniform distribution. Comparison of the O(n log n) algorithm with an O(n 4) algorithm clearly indicates that the O(n log n) algorithm is as good as the previous O(n 4) algorithm in achieving reductions in the ratio SMT/MST of the given vertex set. This is somewhat surprising since the O(n 4) algorithm considers more potential Steiner points and alternative <b>tree</b> <b>configurations...</b>|$|R
40|$|Consider {{spanning}} {{trees on}} the two-dimensional Sierpinski gasket SG(n) where stage n is a non-negative integer. For any given vertex x of SG(n), we derive rigorously the probability distribution of the degree j ∈{ 1, 2, 3, 4 } at the vertex and its value in the infinite n limit. Adding up such probabilities of all the vertices divided {{by the number of}} vertices, we obtain the average probability distribution of the degree j. The corresponding limiting distribution ϕ_j gives the average probability that a vertex is connected by 1, 2, 3 or 4 bond(s) among all the spanning <b>tree</b> <b>configurations.</b> They are rational numbers given as ϕ_ 1 = 10957 / 40464, ϕ_ 2 = 6626035 / 13636368, ϕ_ 3 = 2943139 / 13636368, ϕ_ 4 = 124895 / 4545456. Comment: 32 pages, 5 figures, 1 tabl...|$|R
40|$|Virtual Trees (VTs) are source-rooted {{trees in}} ATM {{networks}} in which VCs originating {{at the source}} but going to different destinations can {{share some of the}} bandwidth pre-allocated to the VT, thus providing an additional multiplexing advantage over Virtual Paths (VPs). We propose two fast bandwidth allocation algorithms for both VTs and VPs that are approximate {{in the sense that they}} do not always yield optimal configurations. We describe the results of a simulation study which shows that Virtual <b>Tree</b> <b>configurations</b> have almost 40 % lower cost than corresponding Virtual Path configurations. Applications of this work to dynamic routing schemes for battlefield wireless networks are outlined. Keywords: Virtual Paths, Virtual Trees, Dynamic Routing, Bandwidth Allocation. INTRODUCTION The technique of Virtual Paths is used in ATM networks to perform bandwidth allocation for virtual circuits and to simplify setting up of virtual circuits in response to connection requests. The Virtual Path [...] ...|$|R
