2078|7269|Public
5|$|On March 23, 1943, {{he headed}} up a {{committee}} of USAAF and RAF commanders {{to draw up a}} plan for the Combined Bomber Offensive (CBO). Despite the fact that it altered the <b>target</b> <b>system</b> priorities outlined in AWPD-42, and changed the overall goal of the offensive from knocking Germany out of the war using airpower to one of preparing for the invasion of Europe, Hansell approved the designation of the German aircraft industry as its most important target and the destruction of the German Luftwaffe as its top priority. Hansell wrote the final draft of the CBO plan himself. Although Hansell did not personally participate in later strategic bombing operations against Germany, he had been instrumental in setting in motion the plans and policies that led to the near total destruction of German war industry.|$|E
25|$|Stage2 {{begins with}} a self-hosting (bootstrapped) toolchain for the <b>target</b> <b>system,</b> which is then used to compile all other core userland {{software}} for the target.|$|E
25|$|The user {{interface}} phase typically queries the <b>target</b> <b>system,</b> displays an installation wizard and enables {{the user to}} change various options that will affect the installation.|$|E
5000|$|Airborne Thermal Imaging and <b>Targeting</b> <b>System</b> (ASELFLIR-300T) ...|$|R
5000|$|... #Article: National Household <b>Targeting</b> <b>System</b> for Poverty Reduction ...|$|R
5000|$|Computer {{controlled}} <b>targeting</b> <b>systems,</b> including pop-up, rotating, and “running-man” ...|$|R
25|$|A cross {{assembler}} (see also cross compiler) is an assembler that is {{run on a}} computer or operating system (the host system) of a different type from the system on which the resulting code is to run (the <b>target</b> <b>system).</b> Cross-assembling facilitates the development of programs for systems {{that do not have}} the resources to support software development, such as an embedded system. In such a case, the resulting object code must be transferred to the <b>target</b> <b>system,</b> either via read-only memory (ROM, EPROM, etc.) or a data link using an exact bit-by-bit copy of the object code or a text-based representation of that code, such as Motorola S-record or Intel HEX.|$|E
25|$|Stage1 {{begins with}} only what is {{necessary}} to build a toolchain (the various compilers, linkers, and language libraries necessary to compile other software) for the target system; compiling this target toolchain from another, pre-existing host system is known as bootstrapping the <b>target</b> <b>system.</b>|$|E
25|$|Developed by the U.S. Army Missile Command (USAMICOM), the Ballistic Missile <b>Target</b> <b>System,</b> or BMTS, was {{intended}} as a ballistic target rocket, utilising as many parts from existing missiles as possible, {{to be used in the}} development and evaluation of defense systems against ballistic missile attack.|$|E
5000|$|Kongsberg <b>Target</b> <b>Systems</b> (formerly Kongsberg Mikroelektronikk) of Norway (link) ...|$|R
5000|$|... b. Study of Possible <b>Target</b> <b>systems</b> and Operational Policies.|$|R
50|$|When {{the search}} {{vocabulary}} or data {{model of the}} search system {{is different from the}} data model of {{one or more of the}} foreign <b>target</b> <b>systems</b> the query must be translated into each of the foreign <b>target</b> <b>systems.</b> This can be done using simple data-element translation or may require semantic translation.|$|R
25|$|The XMQR-13A Ballistic Missile <b>Target</b> <b>System</b> (BMTS) was an unguided target rocket {{developed}} by the United States Army during the 1960s, intended {{for use in the}} development of missile defense systems. Utilising off-the-shelf parts in four different configurations, the BMTS was utitised in a series of launches in the late 1960s supporting tests of several missile systems.|$|E
25|$|Download {{and execute}} {{is a type}} of remote shellcode that {{downloads}} and executes some form of malware on the <b>target</b> <b>system.</b> This type of shellcode does not spawn a shell, but rather instructs the machine to download a certain executable file off the network, save it to disk and execute it. Nowadays, it is commonly used in drive-by download attacks, where a victim visits a malicious webpage that in turn attempts to run such a download and execute shellcode in order to install software on the victim's machine. A variation of this type of shellcode downloads and loads a library. Advantages of this technique are that the code can be smaller, that it does not require the shellcode to spawn a new process on the <b>target</b> <b>system,</b> and that the shellcode does not need code to clean up the targeted process as this can be done by the library loaded into the process.|$|E
25|$|For any {{information}} system to serve its purpose, the information must be available {{when it is}} needed. This means that the computing systems used to store and process the information, the security controls used to protect it, and the communication channels used to access it must be functioning correctly. High availability systems aim to remain available at all times, preventing service disruptions due to power outages, hardware failures, and system upgrades. Ensuring availability also involves preventing denial-of-service attacks, such as a flood of incoming messages to the <b>target</b> <b>system</b> essentially forcing it to shut down.|$|E
5000|$|Electronic-Optronic technicians: the {{previously}} named fire control systems technicians were originally {{a collection of}} two dozen other trades, but were condensed into three, then into one. They maintain and repair optical <b>systems,</b> electronic <b>targeting</b> <b>systems,</b> laser and infrared ranging and <b>targeting</b> <b>systems,</b> air defence anti-tank systems, night vision equipment, etc.|$|R
5000|$|The <b>Targeting</b> <b>System</b> of Language (The MIT Press, January 2018) ...|$|R
5000|$|... 17K: Space-based systems (17K114, a space-based {{reconnaissance}} and <b>targeting</b> <b>system)</b> ...|$|R
25|$|During the 1980s, a {{projected}} shortage of Minuteman I booster stages {{for use in}} launching targets for anti-ballistic missile trials led to Sandia National Laboratories being contracted to develop a booster based on Polaris, which {{was known as the}} Strategic <b>Target</b> <b>System</b> or STARS. STARS I consisted of a Polaris two-stage rocket with a solid-fueled Orbis I stage added to serve as a third stage. STARS II added a fourth stage, called the Operations and Deployment Experiments Simulator (ODES). STARS I was first launched in 1993, and from 2004 onwards has served as the standard booster for trials of the Ground-Based Interceptor. STARS II was only used in two suborbital launches, in 1994 and 1996.|$|E
25|$|All {{installation}} {{operations are}} transactional. In other words, for each operation that Windows Installer performs, it generates an equivalent undo operation that would revert the change {{made to the}} system. In case any script action fails during deferred execution, or the operation is cancelled by the user, all the actions performed until that point are rolled back, restoring the system to its original state. Standard Windows Installer actions automatically write information into a rollback script; package authors who create custom actions that change the <b>target</b> <b>system</b> should also create corresponding rollback actions (as well as uninstall actions and uninstallation-rollback actions). As a design feature, if applied correctly this mechanism will also roll back a failed uninstall of an application to a good working state.|$|E
25|$|On 14 July 1950, Almond formed his own {{targeting}} {{section in}} his headquarters, {{to compete with}} the Air Force <b>target</b> <b>system.</b> On 23 July, General Otto P. Weyland, who had commanded forward air control support for General George S. Patton during World War II, submitted a memo claiming that Almond's targeting section was incompetent. In a staff meeting the following day, Almond unsuccessfully tried to intimidate Weyland into changing his views. Though Almond's targeting section was dissolved on 2 August, it was emblematic of his belief that forward air control was the least of the Air Force's concerns. Almond's belief that tactical air squadrons should be parceled out to support individual infantry divisions harked back to the doctrine of early World War II. Almond largely commandeered the 1st Marine Air Wing and its auxiliary U.S. Navy aviation to fly close air support for his X Corps.|$|E
30|$|For the {{successful}} drug delivery, nanomedicines should {{be delivered to}} the specific regions around the targeted diseases [126, 127], {{in order to reduce}} unexpected cytotoxicity in the brain where most of cells governing brain functions and immune systems can be easily disrupted by external molecules. Both passive and active <b>targeting</b> <b>systems</b> can be applied for the development of CNS disease-targeting nanomedicines; however, the passive <b>targeting</b> <b>system</b> is not solely adopted excepting for the brain tumor-targeting nanomedicines. Therefore, several studies employed the combined <b>targeting</b> <b>systems</b> in order to achieve both accurate diagnosis and treatment for the specific diseased brains.|$|R
5000|$|... #Caption: The M320 with {{electronic}} <b>targeting</b> <b>system</b> {{mounted on the}} M4 carbine.|$|R
5000|$|... #Caption: NIGHTWATCH - Device for {{reconstruction}} of signals belonging to <b>target</b> <b>systems</b> ...|$|R
25|$|Rootkits {{employ a}} variety of {{techniques}} to gain control of a system; the type of rootkit influences the choice of attack vector. The most common technique leverages security vulnerabilities to achieve surreptitious privilege escalation. Another approach is to use a Trojan horse, deceiving a computer user into trusting the rootkit's installation program as benignin this case, social engineering convinces a user that the rootkit is beneficial. The installation task is made easier if the principle of least privilege is not applied, since the rootkit then does not have to explicitly request elevated (administrator-level) privileges. Other classes of rootkits can be installed only by someone with physical access to the <b>target</b> <b>system.</b> Some rootkits may also be installed intentionally by the owner of the system or somebody authorized by the owner, e.g. for the purpose of employee monitoring, rendering such subversive techniques unnecessary. The installation of malicious rootkits is commercially driven, with a pay-per-install (PPI) compensation method typical for distribution.|$|E
2500|$|Thermostats use {{different}} types of sensors to measure the temperature. In one form, the mechanical thermostat, a bimetallic strip {{in the form of}} a coil directly operates electrical contacts that control the heating or cooling source. Electronic thermostats, instead, use a thermistor or other semiconductor sensor that requires amplification and processing to control the heating or cooling equipment (or even both, through the use of relays). A thermostat is an example of a [...] "bang-bang controller" [...] as the heating or cooling equipment output is not proportional to the difference between actual temperature and the temperature setpoint. Instead, the heating or cooling equipment runs at full capacity until the set temperature is reached, then shuts off. Increasing the difference between the thermostat setting and the desired temperature therefore does not change the time to achieve the desired temperature. The rate at which the <b>target</b> <b>system</b> temperature can change is determined both by the capacity of the heating or cooling equipment to respectively add or remove heat to or from a <b>target</b> <b>system</b> and the capacity of the <b>target</b> <b>system</b> to store heat.|$|E
2500|$|Amplification {{attacks are}} used to magnify the {{bandwidth}} that is sent to a victim. This is typically done through publicly accessible DNS servers that {{are used to}} cause congestion on the <b>target</b> <b>system</b> using DNS response traffic. Many services can be exploited to act as reflectors, some harder to block than others. US-CERT have observed that different services implies in different amplification factors, as you can see below: ...|$|E
50|$|A {{distributed}} denial-of-service (DDoS) attack {{occurs when}} numerous systems flood the bandwidth or resources of a <b>targeted</b> <b>system,</b> usually {{one or more}} web servers. Such an attack is often the result of multiple systems (for example a botnet) flooding the <b>targeted</b> <b>system</b> with traffic. When a server is overloaded with connections, new connections {{can no longer be}} accepted.|$|R
5000|$|The Rational Automation Framework {{software}} runs on a framework server, where it maintains configuration information {{that corresponds to}} product installations on one or more <b>target</b> <b>systems.</b> <b>Target</b> <b>systems</b> can be physical, virtualized, or in the cloud and can act as source systems, destination systems, or both. The product runs actions, actually elements within Apache Ant build files, to: ...|$|R
40|$|Abstract. Increasingly, high-assurance {{applications}} rely on dynamically adaptive systems (DASs) {{to respond}} to environmental changes, while satisfying functional requirements and non-functional preferences. Examples include critical infrastructure protection and transportation systems. A DAS comprises a collection of (non-adaptive) <b>target</b> <b>systems</b> (represented as UML models) {{and a set of}} adaptations that realize transitions among <b>target</b> <b>systems.</b> Two sources of uncertainty inherent to DASs are: (1) predicting the future execution environment, and (2) using functional and non-functional trade-offs {{to respond to}} the changing environment. To address this uncertainty, we are inspired by living organisms that are astonishingly adept at adapting to changing environmental conditions using evolution. In this paper, we describe a digital evolution-based approach to generating models that represent possible <b>target</b> <b>systems</b> suitable for different environmental conditions, enabling the developer to identify the functional and non-functional trade-offs between the models, and then assisting the developer in selecting <b>target</b> <b>systems</b> for the DAS. ...|$|R
2500|$|To prevent {{excessively}} {{rapid cycling}} {{of the equipment}} when the temperature is near the set point, a thermostat can include some hysteresis. Instead of changing from [...] "on" [...] to [...] "off" [...] and vice versa instantly at the set temperature, a thermostat with hysteresis will not switch until the temperature has changed a little past the set temperature point. For example, a refrigerator set to 2°C might not start the cooling compressor until its food compartment's temperature reaches 3°C, and will keep it running until the temperature has been lowered to 1 °C. This {{reduces the risk of}} equipment wear from too frequent switching, although it introduces a <b>target</b> <b>system</b> temperature oscillation of a certain magnitude.|$|E
50|$|A {{configure}} script configures {{a software}} package for installation {{on a particular}} <b>target</b> <b>system.</b> After running {{a series of tests}} on the <b>target</b> <b>system,</b> the configure script generates header files and a makefile from templates, thus customizing the software package for the <b>target</b> <b>system.</b> Together with Automake and Libtool, Autoconf forms the GNU Build System, which comprises several other tools, notably Autoheader.|$|E
50|$|The {{process of}} analogical {{modelling}} has philosophical difficulties. As {{noted in the}} Stanford Encyclopedia of Philosophy, {{there is the question}} of how the physical/biological laws of the <b>target</b> <b>system</b> relate to the analogical models created by humans to represent the <b>target</b> <b>system.</b> We seem to assume that the process of constructing analogical models gives us access to the fundamental laws governing the <b>target</b> <b>system.</b> However strictly speaking we only have empirical knowledge of the laws that hold true for the analogical system, and if the time constant for the <b>target</b> <b>system</b> is larger than the life cycle of human being (as in the case of the geobiosphere) it is therefore very difficult for any single human to empirically verify the validity of the extension of the laws of their model to the <b>target</b> <b>system</b> in their lifetime.|$|E
50|$|Projected {{upgrade to}} the initial version, utilising a new search and <b>targeting</b> <b>system.</b>|$|R
5000|$|... #Caption: Screenshot of June 2017 {{prototype}} of <b>targeting</b> <b>system</b> with a Crab Queen.|$|R
40|$|Four short current pulses {{with various}} pulse widths and spacing will be {{delivered}} to the x-ray converter target on the second-axis of the Dual-Axis Radiographic Hydrodynamic Test (DARHT-II) facility. To ensure that the DARHT-II multi-pulse target will provide enough target material for x-ray production for all four pulses, the target needs either to survive the strike of four electron pulses or to accommodate target replenishment. A distributed target may survive hitting of four electron pulses. For target replenishment, two types of target configurations are being considered: stationary <b>target</b> <b>systems</b> with beam repositioning and dynamic moving <b>target</b> <b>systems.</b> They compare these three <b>target</b> <b>systems</b> and their radiographic performance...|$|R
