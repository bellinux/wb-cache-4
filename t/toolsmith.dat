16|6|Public
25|$|The {{economy is}} under the player's control {{throughout}} the game, and is adjustable in multiple ways. For example, the player can control the distribution of goods by selecting {{how much of a}} given resource is transported to a given building, under six separate headings; foodstuff, grain, iron, coal, boards and water. In a similar manner, the player can select what tools are made when; by increasing the significance of a particular tool, that tool will be produced before others. Tool production is important insofar as all buildings require raw materials and a worker with the right tool. For example, if the player has built a bakery, and the building is still empty despite idle settlers in the headquarters, a rolling pin will need to be manufactured in the <b>toolsmith.</b>|$|E
25|$|The {{economy is}} under the player's control {{throughout}} the game, and is adjustable in multiple ways. For example, the player can control the distribution of goods by selecting which percentage of a given resource is transported to a given building. In a similar manner, the player can select what tools are made when. Tool production is important insofar as all buildings require raw materials and a worker with the right tool. For example, if the player has built a fishery, and the building is still empty {{despite the presence of}} idle settlers, a fishing rod will need to be manufactured in the <b>toolsmith.</b> The game also uses a notification system that alerts the player if a building cannot be occupied either {{due to a lack of}} the right tool or the absence of available settlers.|$|E
50|$|<b>Toolsmith</b> Masakuni I (1880-1950) {{helped design}} and produce the first steel tools {{specifically}} {{made for the}} developing requirements of bonsai styling.|$|E
5000|$|Early <b>toolsmiths</b> {{writing in}} C under Unix began {{developing}} idioms {{at a rapid}} rate to classify characters into different types. For example, in the ASCII character set, the following test identifies a letter: ...|$|R
50|$|RoweBots Research Inc. is a {{software}} company, based in Waterloo Region, the software capital of Canada. RoweBots and its predecessor company Multiprocessor <b>Toolsmiths</b> developed {{a number of}} industry firsts in the real-time and embedded operating system space.|$|R
40|$|Refactoring tools {{can improve}} the speed and {{accuracy}} with which we create and maintain software [...] {{but only if they}} are used. In practice, tools are not used {{as much as they could}} be: this seems to be because sometimes they do not align with the refactoring tactic preferred by the majority of programmers, a tactic we call floss refactoring. We propose five principles that characterize successful floss refactoring tools [...] principles that can help programmers to choose the most appropriate refactoring tools and also help <b>toolsmiths</b> to design tools that fit the programmer 2 ̆ 7 s purpose...|$|R
50|$|When Lonin was 16 years old, {{he moved}} to Petrozavodsk and studied in a {{vocational}} school, and from 1948 on {{he worked as a}} <b>toolsmith</b> and farm machinery repairman at a garage.|$|E
50|$|He {{was born}} in Forbes, the son of Michael Clara. He was a storekeeper, but was bankrupted in 1887 and became a {{commercial}} traveller. A member of the Forbes and Waverley Leagues, {{he was elected to}} the New South Wales Legislative Assembly in 1901, winning the seat of Condobolin for the Labor Party. His initial victory was overturned due to voting irregularities, but he won the by-election later that year. He was defeated in 1904 running for Ashburnham. After his political career, he worked as a ganger and a <b>toolsmith.</b> He died in Sydney in 1915.|$|E
50|$|The {{economy is}} under the player's control {{throughout}} the game, and is adjustable in multiple ways. For example, the player can control the distribution of goods by selecting {{how much of a}} given resource is transported to a given building, under five separate headings; food, wood, iron, coal and wheat. In a similar manner, the player can select what tools are made when; by increasing the significance of a particular tool, that tool will be produced before others. Tool production is important insofar as all buildings require raw materials and a worker with the right tool. For example, if the player has built a blacksmith, and the building is still empty despite idle settlers in the headquarters, a pliers will need to be manufactured in the <b>toolsmith.</b>|$|E
40|$|This Master’s thesis investigates how {{the state}} machine {{modeling}} concept, as defined in the UML specification, {{can be used to}} simulate systems which exhibit a hybrid of continuous and discrete behavior. Each continuous subsystem is assigned to a state and interacts with the discrete subsystem through events. The investigation includes a discussion regarding what class of problems this modeling approach is applicable to, and considers a bouncing ball as classical example of a hybrid system. The work is performed for Financial <b>Toolsmiths,</b> who have developed software with applications in electronic collaborations called Open ebXML, which contains an implementation of the UML state machine definition, including an event handling mechanism. Hybrida UML-baserade tillståndsmaskiner i Open ebXML Sammanfattning Syftet med detta examensarbete är att undersöka hur tillståndsmaskiner ka...|$|R
40|$|Abstract—In the Model-Driven Engineering community, the {{abstract}} syntax of modeling languages is usually defined and implemented using metamodeling techniques. However, {{it is not}} the case for the concrete syntax of graphical modeling languages. Indeed, this concern is mostly specified by informal means. This practice leaves considerable leeway in the implementation and raises several standards compliance issues. Hence, <b>toolsmiths</b> can only rely on their interpretation of the standard and lack of systematic way to build conforming tool support. In this context, a first normative specification of the concrete syntax of UML 2. 5 has been recently released using Diagram Definition. In this paper, we propose an approach that uses those formal specifications to systematically generate modeling language tool support that guarantees compliance to standard notation. We assess the approach on a subset of the UML class diagram implemented within the open-source Papyrus tool. Index Terms—Diagrammatic languages, standard-compliance, tooling support, MDE, UML. I...|$|R
40|$|The Computer Systems {{discipline}} (which {{encompasses the}} sub-areas of operating systems, distributed, embedded, real time and pervasive systems) constitutes a central pillar of computer science. Systems {{research is the}} scientific study, analysis, modeling and engineering of effective software platforms. Its challenge is to provide dependable, powerful, performant, secure and scalable solutions within an increasingly complex IT environment. As <b>toolsmiths</b> fueled the Industrial Revolution, today Systems researchers {{lay the foundation for}} IT services and applications in the Knowledge Era. Healthy research in Systems is therefore essential for the success and continuing innovation of the IT-based industry (be it proprietary or open source) in Europe. Europe contributed many early innovations in Systems and continues to produce significant successes; yet it tends to be overshadowed by research in the US. We find several systemic reasons for this, which need to be addressed. Among others: (1) Overall, Europe under-invests in fundamental research in Systems; (2) the structure and culture of academic institutions do not consistently foster excellence at all levels of Systems education and research; (3) In general, European research groups are isolated, and need to network more effectively amongst each other, with their peer groups in the US {{and other parts of the}} world, and with the IT industry. If nothing is done, Systems research in Europe will decline, drying up the roots of innovation. This will negatively impact, not only the European IT industry, but beyond it, all sectors that are IT-based, e. g., financial services, government, health care, education, and manufacturers of high-value products such as aircrafts and cars. The European Systems community has started to address these issues through improved networking and by raising awareness among leaders in the business community, at universities, at funding agencies and among policy makers. This is a good start, but to excel, more is needed: changes by all players are necessary to improve the Systems research landscape. We make specific recommendations, which are detailed and justified in the main body of this paper. Here is a short summary...|$|R
50|$|Bonsai shaping aesthetics, techniques, {{and tools}} became {{increasingly}} sophisticated as bonsai's popularity grew in Japan. In 1910, shaping with wire {{rather than the}} older string, rope, and burlap techniques, appeared in the Sanyu-en Bonsai-Dan (History of Bonsai in the Sanyu nursery). Zinc-galvanized steel wire was initially used. Expensive copper wire was used only for selected trees that had real potential. In the 1920s and 1930s, <b>Toolsmith</b> Masakuni I (1880-1950) helped design and produce the first steel tools specifically made for the developing requirements of bonsai styling. These included the concave cutter, a branch cutter designed to leave a shallow indentation on the trunk when a branch was removed. Properly treated, this indentation would fill over with live tree tissue and bark over time, greatly reducing or eliminating the usual pruning scar.|$|E
50|$|The {{economy is}} under the player's control {{throughout}} the game, and is adjustable in multiple ways. For example, the player can control the distribution of goods by selecting {{how much of a}} given resource is transported to a given building, under six separate headings; foodstuff, grain, iron, coal, boards and water. In a similar manner, the player can select what tools are made when; by increasing the significance of a particular tool, that tool will be produced before others. Tool production is important insofar as all buildings require raw materials and a worker with the right tool. For example, if the player has built a bakery, and the building is still empty despite idle settlers in the headquarters, a rolling pin will need to be manufactured in the <b>toolsmith.</b>|$|E
50|$|The {{economy is}} under the player's control {{throughout}} the game, and is adjustable in multiple ways. For example, the player can control the distribution of goods by selecting which percentage of a given resource is transported to a given building. In a similar manner, the player can select what tools are made when. Tool production is important insofar as all buildings require raw materials and a worker with the right tool. For example, if the player has built a fishery, and the building is still empty {{despite the presence of}} idle settlers, a fishing rod will need to be manufactured in the <b>toolsmith.</b> The game also uses a notification system that alerts the player if a building cannot be occupied either {{due to a lack of}} the right tool or the absence of available settlers.|$|E
5000|$|KUF {{played a}} leading role in a violent demonstrations against the Vietnam War on April 27, 1968, and against the John Wayne movie The Green Berets on May 5, 1969. PFLP was founded in the Middle East in December 1967, with a {{communist}} agenda for post-liberation Palestine, and fathered modern terrorism by hijacking an El Al airliner in Rome on July 22, 1968. In October 1969, two KUF members were the first Westerners to train in PFLP training camps in Jordan, namely active KUF street fighters blacksmith Gert Rasmussen and <b>toolsmith</b> Hans [...] "Xander" [...] Truelsen. When PFLP wanted to train them for a specific operation, Gert got scared, fled home to Denmark, and was expelled from KUF for [...] "unreliable and indecent behaviour". Xander also left KUF before the real gang activity began in 1972.|$|E
40|$|In this paper, we {{identify}} main challenges for domain specific modeling frameworks. Arbitrary abstract to concrete syntax mapping enables the <b>toolsmith</b> to create visual representation to complex logical models {{with the possibility}} to determine what detail to show and what to hide in a flexible way. Interactive model simulation based on a model transformation architecture allows for the design time analysis and precise fine tuning of behavioral aspects. ...|$|E
40|$|If you're {{familiar}} with JIRA for issue tracking, bug tracking, and other uses, {{you know it}} can sometimes be tricky {{to set up and}} manage. In this concise book, software <b>toolsmith</b> Matt Doar clarifies some of the more confusing aspects by answering difficult and frequently asked questions about JIRA administration. Practical JIRA Administration shows you how JIRA is intended to be used, making it an ideal supplement to the extensive documentation already available. The book's chapters are loosely connected, so you can go straight to the information that best serves your needs. Understand the d...|$|E
40|$|One {{advantage}} of using JIRA for issue tracking, bug tracking, or project management {{is the ability}} to extend this tool with hundreds of plugins from the JIRA community. In this concise book, software <b>toolsmith</b> Matt Doar-the author of Practical JIRA Administration-shows you how to create and maintain your own JIRA plugins to meet the specific needs of a project. This book uses detailed examples to clarify some of the more confusing aspects of JIRA plugins, and serves as an ideal supplement to the extensive documentation already available. Use JIRA's Plugin SDK, and learn several aspects comm...|$|E
40|$|Computer {{scientists}} {{have a long}} history of developing tools useful for advancing knowledge and practice in other disciplines. More than fifty years ago, Grace Hopper said the role of computers was “freeing mathematicians to do mathematics. ” [5] Fred Brooks referred to a computer scientist as a <b>toolsmith,,</b> making “things that do not themselves satisfy human needs, but which others use in making things that enrich human living. ” [4]. Computational biologists have applied algorithmic techniques to process and understand the deluge of data made possible by recent advances in molecular biology. The proper way to approach this kind of research has never been clear within Computer Science. The refrain“Sounds interesting, but is it Computer Science? ” is frequently heard. In this paper I argue that it is crucial take an expansiv...|$|E

