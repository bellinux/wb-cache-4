1273|1164|Public
25|$|Usually in truth-functional propositional logic, {{formulas}} {{are interpreted}} as having either a <b>truth</b> <b>value</b> of true or a <b>truth</b> <b>value</b> of false. Truth-functional propositional logic and systems isomorphic to it, {{are considered to}} be zeroth-order logic.|$|E
25|$|Interpretation of {{the atomic}} {{formulas}} of L is more complicated. To each pair a and b of elements of M, the model must assign a <b>truth</b> <b>value</b> ||a=b|| to the expression a=b; this <b>truth</b> <b>value</b> is taken from the Boolean algebra B. Similarly, for each n-ary relation symbol R of L and each n-tuple <a0,...,an-1> of elements of M, the model must assign an element of B to be the <b>truth</b> <b>value</b> ||R(a0,...,an-1)||.|$|E
25|$|To {{understand}} the Logical Form of these examples, {{it is important}} to identify what the basic predicate is and which segments make up the QNPs. In these examples, the predicate is tall and the QNPs are a girl, many girls, every girl and no girl. The logical meaning of these sentences indicates that the property of being tall is attributed to some form of the QNP referring to girl. Along with the QNP and the predicate, there is also an inference of <b>truth</b> <b>value.</b> Either the <b>truth</b> <b>value</b> is True for a person who is tall, otherwise the <b>truth</b> <b>value</b> is False.|$|E
50|$|Topos theory uses <b>truth</b> <b>values</b> in {{a special}} sense: the <b>truth</b> <b>values</b> of a topos are the global {{elements}} of the subobject classifier. Having <b>truth</b> <b>values</b> in this sense {{does not make a}} logic truth valuational.|$|R
5000|$|IF-THEN rules map input or {{computed}} <b>truth</b> <b>values</b> {{to desired}} output <b>truth</b> <b>values.</b> Example: ...|$|R
2500|$|... propositional connectives: from <b>truth</b> <b>values</b> { t, f } to <b>truth</b> <b>values</b> { t, f }, ...|$|R
25|$|In propositional logic, 0 {{may be used}} {{to denote}} the <b>truth</b> <b>value</b> false.|$|E
25|$|The {{definition}} {{of truth in}} an interpretation that uses a variable assignment function cannot work with empty domains, {{because there are no}} variable assignment functions whose range is empty. (Similarly, one cannot assign interpretations to constant symbols.) This truth definition requires that one must select a variable assignment function (μ above) before truth values for even atomic formulas can be defined. Then the <b>truth</b> <b>value</b> of a sentence is defined to be its <b>truth</b> <b>value</b> under any variable assignment, and it is proved that this <b>truth</b> <b>value</b> does not depend on which assignment is chosen. This technique does not work if there are no assignment functions at all; it must be changed to accommodate empty domains.|$|E
25|$|This {{result in}} turn will be mapped into a {{membership}} function and <b>truth</b> <b>value</b> controlling the output variable.|$|E
50|$|Some of {{the logical}} symbols of a {{language}} (other than quantifiers) are truth-functional connectives that represent truth functions — functions that take <b>truth</b> <b>values</b> as arguments and return <b>truth</b> <b>values</b> as outputs (in other words, these are operations on <b>truth</b> <b>values</b> of sentences).|$|R
50|$|In {{classical}} logic the <b>truth</b> <b>values</b> are certain. Therefore a classification is crisp, since the <b>truth</b> <b>values</b> are either exactly true or exactly false.|$|R
40|$|Classical logic {{has just}} two <b>truth</b> <b>values,</b> namely true and false. Any {{sentence}} symbol or well-formed formula will {{take one of}} these two <b>truth</b> <b>values</b> in any interpretation. Although we are familiar with 2 -valued sentential logic, there is no inherent restriction on the number of <b>truth</b> <b>values</b> that can be assigned t...|$|R
25|$|Next, each {{formula is}} {{assigned}} a <b>truth</b> <b>value.</b> The inductive definition {{used to make}} this assignment is called the T-schema.|$|E
25|$|Deny the <b>truth</b> <b>value</b> {{of future}} contingents, as {{proposed}} for example by Aristotle (although this denies foreknowledge and therefore theological determinism).|$|E
25|$|There is {{controversy}} {{as to the}} <b>truth</b> <b>value</b> of {{a proposition}} made in bad faith self-deception, such as when a hypochondriac has a complaint with no physical symptom.|$|E
40|$|This paper {{contains}} some general {{comments on the}} algebra of <b>truth</b> <b>values</b> of fuzzy sets of type- 2. It details the precise mathematical relationship with the algebras of <b>truth</b> <b>values</b> of ordinary fuzzy sets and of interval-valued fuzzy sets. Subalgebras of the algebra of <b>truth</b> <b>values,</b> and t-norms on them are discussed. There is some discussion of finite type- 2 fuzzy sets. Keywords: Type- 2 fuzzy set, interval-valued fuzzy set, algebra of <b>truth</b> <b>values,</b> automorphism, t-norm, finite type- 2 fuzzy set...|$|R
50|$|In propositional logic, an {{assignment}} of <b>truth</b> <b>values</b> to propositional variables, with a corresponding assignment of <b>truth</b> <b>values</b> to all propositional formulas with those variables.|$|R
5000|$|This {{would be}} easy if the output <b>truth</b> <b>values</b> were exactly those {{obtained}} from fuzzification of a given number.Since, however, all output <b>truth</b> <b>values</b> are computed independently, in most cases they do not represent such a set of numbers.One has then to decide for a number that matches best the [...] "intention" [...] encoded in the truth value.For example, for several <b>truth</b> <b>values</b> of fan_speed, an actual speed must be found that best fits the computed <b>truth</b> <b>values</b> of the variables 'slow', 'medium' and so on.|$|R
25|$|The self-dual connectives, {{which are}} equal {{to their own}} de Morgan dual; if the truth values of all {{variables}} are reversed, so is the <b>truth</b> <b>value</b> these connectives return, e.g. , MAJ(p,q,r).|$|E
25|$|For example, {{one such}} {{consequence}} of the halting problem's undecidability is that there cannot be a general algorithm that decides whether a given statement about natural numbers is true or not. The {{reason for this is}} that the proposition stating that a certain program will halt given a certain input can be converted into an equivalent statement about natural numbers. If we had an algorithm that could find the <b>truth</b> <b>value</b> of every statement about natural numbers, it could certainly find the <b>truth</b> <b>value</b> of this one; but that would determine whether the original program halts, which is impossible, since the halting problem is undecidable.|$|E
25|$|The <b>truth</b> <b>value</b> of {{a formula}} is {{sometimes}} referred to as its probability. However, these are not probabilities in the ordinary sense, because they are not real numbers, but rather elements of the complete Boolean algebra B.|$|E
5000|$|Vector logic can be {{extended}} to include many <b>truth</b> <b>values</b> since large dimensional vector spaces allow to create many orthogonal <b>truth</b> <b>values</b> and the corresponding logical matrices.|$|R
40|$|By {{considering}} probability distributions {{over the}} set of assignments the expected <b>truth</b> <b>values</b> assignment to propositional variables are extended through linear operators, and the expected <b>truth</b> <b>values</b> of the clauses at any given conjunctive form are also extended through linear maps. The probabilistic satisfiability problems are {{discussed in terms of}} the introduced linear extensions. The case of multiple <b>truth</b> <b>values</b> is also discussed...|$|R
5000|$|In {{uncertain}} inference, the known/unknown duality of <b>truth</b> <b>values</b> {{is replaced}} by a degree of certainty of a fact or deduction; certainty may vary from 0 (completely uncertain/unknown) to 1 (certain/known). In probabilistic logic networks, <b>truth</b> <b>values</b> are also given a probabilistic interpretation (i.e. <b>truth</b> <b>values</b> may be uncertain, and, even if almost certain, they may still be [...] "probably" [...] true (or false).) ...|$|R
25|$|The {{semantics}} of {{propositional logic}} rely on truth assignments. The essential {{idea of a}} truth assignment is that the propositional variables are mapped to elements of a fixed Boolean algebra, and then the <b>truth</b> <b>value</b> of a propositional formula using these letters is the element of the Boolean algebra that is obtained by computing {{the value of the}} Boolean term corresponding to the formula. In classical semantics, only the two-element Boolean algebra is used, while in Boolean-valued semantics arbitrary Boolean algebras are considered. A tautology is a propositional formula that is assigned <b>truth</b> <b>value</b> 1 by every truth assignment of its propositional variables to an arbitrary Boolean algebra (or, equivalently, every truth assignment to the two element Boolean algebra).|$|E
25|$|Notice {{how each}} rule {{provides}} a result as a <b>truth</b> <b>value</b> {{of a particular}} membership function for the output variable. In centroid defuzzification the values are OR'd, that is, the maximum value is used and values are not added, {{and the results are}} then combined using a centroid calculation.|$|E
25|$|Agnosticism is {{the view}} that the <b>truth</b> <b>value</b> of certain claims—especially claims about the {{existence}} of any deity, but also other religious and metaphysical claims—is unknown or unknowable. Agnosticism as a broad umbrella term does not define one's belief or disbelief in gods; agnostics may still identify themselves as theists or atheists.|$|E
40|$|Abstract — The algebra of <b>truth</b> <b>values</b> of type- 2 fuzzy sets {{contains}} isomorphic {{copies of}} the algebra of <b>truth</b> <b>values</b> of type- 1 fuzzy sets and the algebra of <b>truth</b> <b>values</b> of interval-valued fuzzy sets. The algebra of <b>truth</b> <b>values</b> of type- 2 fuzzy sets is not a lattice, but these subalgebras are lattices, and in fact, are complete lattices. There are many other subalgebras that are lattices, for example, the subalgebra of convex normal elements. This paper examines several subalgebras which are lattices, {{with the goal of}} determining {{whether or not they are}} complete. 1 I...|$|R
40|$|In this chapter, {{we present}} a propositional {{calculus}} for several interval-valued fuzzy logics, i. e., logics having intervals as <b>truth</b> <b>values.</b> More precisely, the <b>truth</b> <b>values</b> are preferably subintervals of the unit interval. The idea behind it is that such an interval can model imprecise information. To compute the <b>truth</b> <b>values</b> of ‘p implies q’ and ‘p and q’, given the <b>truth</b> <b>values</b> of p and q, we use operations from residuated lattices. This truth-functional approach {{is similar to the}} methods developed for the well-studied fuzzy logics. Although the interpretation of the intervals as <b>truth</b> <b>values</b> expressing some kind of imprecision is a bit problematic, the purely mathematical study of the properties of interval-valued fuzzy logics and their algebraic semantics can be done without any problem. This study is the focus of this chapter...|$|R
40|$|Abstract. We {{extend the}} notion of Heyting algebra to a notion of <b>truth</b> <b>values</b> algebra and prove that a theory is {{consistent}} {{if and only if}} it has a B-valued model for some non trivial <b>truth</b> <b>values</b> algebra B. A theory that has a B-valued model for all <b>truth</b> <b>values</b> algebras B is said to be super-consistent. We prove that super-consistency is a model-theoretic sufficient condition for strong normalization. ...|$|R
25|$|Interaction {{of actors}} has no {{specific}} beginning or end. It goes on forever. Since {{it does so}} it has very peculiar properties. Whereas a conversation is mapped (due to a possibility of obtaining a vague kinematic, perhaps picture-frame image, of it, onto Newtonian time, precisely {{because it has a}} beginning and end), an interaction, in general, cannot be treated in this manner. Kinematics are inadequate to deal with life: we need kinetics. Even so as in the minimal case of a strict conversation we cannot construct the <b>truth</b> <b>value,</b> metaphor or analogy of A and B. The A, B differences are generalizations about a coalescence of concepts on the part of A and B; their commonality and coherence is the similarity. The difference (reiterated) is the differentiation of A and B (their agreements to disagree, their incoherences). <b>Truth</b> <b>value</b> in this case meaning the coherence between all of the interacting actors.|$|E
25|$|Propositional {{calculus}} (also called propositional logic, statement logic, sentential calculus, sentential logic, {{or sometimes}} zeroth-order logic) is {{the branch of}} logic concerned with the study of propositions (whether they are true or false) that are formed by other propositions {{with the use of}} logical connectives, and how their value depends on the <b>truth</b> <b>value</b> of their components.|$|E
25|$|It {{is easy to}} {{see that}} the steps in the tree {{preserve}} the semantic <b>truth</b> <b>value</b> of the formulas implied by them, with conjunction understood between the tree's different branches whenever there is a split. It is also obvious that an axiom is provable if and only if it is true for every truth values of the atomic symbols. Thus this system is sound and complete in propositional logic.|$|E
5000|$|There {{are three}} basic <b>truth</b> <b>values,</b> namely, true (t), false (f) and unassertible (u). These are {{combined}} to produce four more <b>truth</b> <b>values,</b> namely, tf, tu, fu, and tfu. Though, superficially, {{it appears that}} there are only three distinct <b>truth</b> <b>values</b> a deeper analysis of the Jaina system reveals that the seven <b>truth</b> <b>values</b> are indeed distinct. This is a consequence of the conditionalising operator [...] "arguably" [...] denoted in Sanskrit by the word syat. This Sanskrit word has the literal meaning of [...] "perhaps it is", and it is used to mean [...] "from a certain standpoint" [...] or [...] "within a particular philosophical perspective".|$|R
40|$|We {{consider}} the partial stable model semantics for disjunctive databases with default negation {{as defined by}} Przymusinski. We give a characterization of the partial stable models of a disjunctive database P {{in terms of the}} total stable models of a suitably transformed database P tu. The transformation is based on annotating the atoms in the given database by the <b>truth</b> <b>values</b> true ("t") and undefined ("u"). Currently many fast algorithms are being developed for computing the total stable models of disjunctive databases. Based on the new characterization given in this paper, these algorithms can also be used for computing partial stable models. 1 Introduction To define the semantics of a disjunctive database the ground atoms are assigned <b>truth</b> <b>values.</b> Three <b>truth</b> <b>values</b> are used: true ("t"), false ("f"), and undefined ("u"). Herbrand interpretations that use the two classical <b>truth</b> <b>values</b> t and f only are called total, while Herbrand interpretations that use all three <b>truth</b> <b>values</b> a [...] ...|$|R
50|$|For example, let {{the set of}} <b>truth</b> <b>values</b> be {0,1,2}, let ~ denote negation, and let p be a {{variable}} ranging over <b>truth</b> <b>values.</b> For these choices, if p = 0 then ~p = 2; and if p = 1 then ~p = 0.|$|R
