10000|10000|Public
5|$|Fosdick, Raymond B. The Story of the Rockefeller Foundation. New York: <b>Transaction,</b> reprint, 1989.|$|E
5|$|High-speed USB2.0 hubs contain devices called <b>transaction</b> translators that convert between {{high-speed}} USB2.0 {{buses and}} full and low speed buses. When a high-speed USB2.0 hub is plugged into a high-speed USB host or hub, it operates in high-speed mode. The USB hub then uses either one <b>transaction</b> translator per hub {{to create a}} full/low-speed bus routed to all full and low speed devices on the hub, or uses one <b>transaction</b> translator per port to create an isolated full/low-speed bus per port on the hub.|$|E
5|$|Felix, David Felix, Kennan and the Cold War: An Unauthorized Biography. Piscataway, NJ: <b>Transaction</b> Publishers, 2015.|$|E
25|$|Current {{versions}} of Btrieve support system <b>transactions</b> and user <b>transactions,</b> where system <b>transactions</b> are {{a bundle of}} non-transactional operations and/or user <b>transactions,</b> whereas user <b>transactions</b> are <b>transactions</b> that work on actual data in the database. System <b>transactions</b> were developed to allow multiple <b>transactions</b> {{to be done in}} a batch and to make data recovery easier.|$|R
50|$|ActiveJPA handles JTA nested <b>transactions,</b> global <b>transactions</b> and <b>transactions</b> managed on a JDBC connection.|$|R
40|$|We {{consider}} {{recovery from}} malicious but committed <b>transactions.</b> Traditional recovery mechanisms {{do not address}} this problem, except for complete rollbacks, which undo the work of good <b>transactions</b> as well as malicious ones, and compensating <b>transactions,</b> whose utility depends on application semantics. We develop an algorithm that rewrites execution histories {{for the purpose of}} backing out malicious <b>transactions.</b> Good <b>transactions</b> that are affected, directly or indirectly, by malicious <b>transactions</b> complicate the process of backing out undesirable <b>transactions.</b> We show that the prefix of a rewritten history produced by the algorithm serializes exactly the set of unaffected good <b>transactions.</b> The suffix of the rewritten history includes special state information to describe affected good <b>transactions</b> as well as malicious <b>transactions.</b> We describe techniques that can extract additional good <b>transactions</b> from this latter part of a rewritten history. The latter processing saves more [...] ...|$|R
5|$|Financial markets on the {{continent}} {{are expected to be}} far more liquid and flexible {{than they were in the}} past. The reduction in cross-border <b>transaction</b> costs will allow larger banking firms to provide a wider array of banking services that can compete across and beyond the eurozone. However, although <b>transaction</b> costs were reduced, some studies have shown that risk aversion has increased during the last 40 years in the Eurozone.|$|E
5|$|Hitchcock, C.H., 1887, The {{geological}} {{map of the}} United States, American Institute of Mining Engineering <b>Transaction</b> 15:465-488.|$|E
5|$|In 2005, KKR was one {{of seven}} private equity firms {{involved}} in the buyout of SunGard in a <b>transaction</b> valued at $11.3 billion. KKR's partners in the acquisition were Silver Lake Partners, Bain Capital, Goldman Sachs Capital Partners, Blackstone Group, Providence Equity Partners, and TPG Capital. This represented the largest leveraged buyout completed since the takeover of RJR Nabisco in 1988. SunGard was the largest buyout of a technology company until the Blackstone-led buyout of Freescale Semiconductor. The SunGard <b>transaction</b> was notable {{given the number of}} firms involved in the <b>transaction,</b> the largest club deal completed to that point. The involvement of seven firms in the consortium was criticized by investors in private equity who considered cross-holdings among firms to be generally unattractive.|$|E
50|$|Extended Commitment Ordering (ECO; (Raz 1993a)) generalizes CO. When local <b>transactions</b> (<b>transactions</b> {{confined}} to a single database) can be distinguished from global (distributed) <b>transactions</b> (<b>transactions</b> that span two databases or more), commitment order is applied to global <b>transactions</b> only. Thus, for a local (to a database) schedule to have the ECO property, the chronological (partial) order of commit events of global <b>transactions</b> only (unimportant for local <b>transactions)</b> is consistent with their order on the respective local conflict graph.|$|R
50|$|By 2009, {{the company}} had issued over 18 million cards (over 20 million if co-branded cards are included). EasyCard <b>transactions</b> now account for 91% of Taipei Metro system <b>transactions,</b> 92% of bus <b>transactions,</b> and 71% of parking lot <b>transactions.</b> Daily <b>transactions</b> reached 3.1 million in 2009.|$|R
50|$|Institute of Radio Engineers (IRE) <b>Transactions</b> ceased {{publishing}} during 1962, {{and is now}} publishing instead as IEEE <b>Transactions</b> on Systems, Man, and Cybernetics: Systems, IEEE <b>Transactions</b> on Cybernetics, and IEEE <b>Transactions</b> on Human-Machine Systems.|$|R
5|$|In December 2007, Mitsubishi assumed {{majority}} control of KFC Japan in a JP¥ 14.83 billion <b>transaction.</b>|$|E
5|$|Status stage: Dummy IN or OUT <b>transaction,</b> {{which is}} {{probably}} for indicating {{the end of a}} control transfer exchange.|$|E
5|$|The Path of a Genocide: The Rwanda Crisis from Uganda to Zaire. Edited with Astri Suhrke. New Brunswick, NJ: <b>Transaction</b> Publishers, 1999.|$|E
40|$|Vols. 30 - 54 (1932 - 46) {{issued in}} 2 {{separately}} paged sections: General editorial section and a <b>Transactions</b> section. Beginning in 1947, the <b>Transactions</b> section is continued as SAE quarterly <b>transactions.</b> Vols. 30 - 54 (1932 - 46) issued in 2 separately paged sections: General editorial section and a <b>Transactions</b> section. Beginning in 1947, the <b>Transactions</b> section is continued as SAE quarterly <b>transactions.</b> Mode of access: Internet. 5 1...|$|R
30|$|CM 3. No blind <b>transactions.</b> Servers enforce no blind <b>transactions</b> by {{aborting}} <b>transactions</b> whose writeset is {{not included}} in their readset.|$|R
30|$|Second, if some <b>transactions</b> are {{regarded}} more important, {{they can be}} scheduled to complete faster. Listing 4 describes this case. There are three types of <b>transactions.</b> We {{can see that the}} first two types of <b>transactions</b> can be executed simultaneously while the last two types of <b>transactions</b> can only be executed serially. Given a fixed time, if we want to maximize the throughput, we would like to run <b>transactions</b> of Type I and II as many as possible and then execute the <b>transactions</b> of Type III. However, if the stock market platform knows that the requestors of the last two types of <b>transactions</b> would like to pay more fees for completing their <b>transactions</b> within one hour, the stock market would like to run these two types of <b>transactions</b> in the limited time.|$|R
5|$|The {{nature of}} {{documentation}} required for nonpayroll costs will vary {{by the nature}} of the <b>transaction.</b>|$|E
5|$|USB2.0 {{added two}} {{additional}} handshake packets: NYET and ERR. NYET {{indicates that a}} split <b>transaction</b> is not yet complete, while ERR handshake indicates that a split <b>transaction</b> failed. A second use for a NYET packet is to tell the host that the device has accepted a data packet, but cannot accept any more due to full buffers. This allows a host to switch to sending small PING tokens to inquire about the device's readiness, rather than sending an entire unwanted DATA packet just to elicit a NAK.|$|E
5|$|Despite {{academic}} {{suggestions to}} the contrary, in Salinas v. United States (1997), the Supreme Court {{held that the}} <b>transaction</b> itself need not involve federal funds. The $5,000 transactional amount may be satisfied by the value of intangible goods or services.|$|E
40|$|This article discuss about theory {{concept of}} <b>transactions</b> in Islamic banking products. In {{collecting}} and distributing funds, Islamic banking used variety of <b>transactions,</b> such as deposit <b>transactions</b> (wadî 2 ̆ 7 ah yad amânah, wadî 2 ̆ 7 ah yad dhamânah), <b>transactions</b> for results (mudhârabah, musyârakah), {{buying and selling}} (murâbahah, salâm, istishnâ 2 ̆ 7), lease <b>transactions</b> (ijârah, ijârah wa iqtinâ 2 ̆ 7, atau ijârah muntahiyah bi al-tamlîk), loan <b>transactions</b> (qardh), and <b>transactions</b> with other patterns (wakâlah, kafâlah, hiwâlah, rahn). Murâbahah and salâm <b>transactions</b> are used for collecting the funds and mudhârabah muthlaqah and wadî 2 ̆ 7 ah are used for funding. Meanwhile, ijârah and wakâlah are used in loan <b>transactions</b> that implemented in a bank guarantee. DOI: 10. 15408 /aiq. v 4 i 1. 253...|$|R
50|$|The {{database}} maintains ACID compliance {{by using}} transactional scope and transactional memory {{which allows for}} long-running <b>transactions,</b> nested <b>transactions,</b> and parallel <b>transactions.</b>|$|R
40|$|We {{investigate}} a decentralised approach to committing <b>transactions</b> in a replicated database, under partial replication. Previous protocols either re-execute <b>transactions</b> entirely and/or compute a total order of <b>transactions.</b> In contrast, ours applies update values, and orders only conflicting <b>transactions.</b> It results that <b>transactions</b> execute faster, and distributed databases commit in small committees. Both effects contribute to preserve scalability {{as the number}} of databases and <b>transactions</b> increase. Our algorithm ensures serializability, and is live and safe in spite of faults...|$|R
5|$|On July 7, 2016, Alexander was waived by the Trail Blazers. The <b>transaction</b> was a {{maneuver}} {{to create}} salary cap space for Festus Ezeli. After he cleared waivers, the Trail Blazers added him to its NBA Summer League roster.|$|E
5|$|On June 26, 2008, the Rockets {{completed}} a three-way <b>transaction</b> that sent Nicolas Batum to the Portland Trail Blazers, Darrell Arthur to the Memphis Grizzlies and Donté Greene and Joey Dorsey and Memphis's 2009 second-round pick to the Rockets.|$|E
25|$|A <b>transaction</b> will {{be deemed}} an {{unreasonable}} director-related <b>transaction</b> if a reasonable {{person in the}} company's circumstances would not have entered into the <b>transaction.</b>|$|E
40|$|The {{theme of}} the paper is to promote {{research}} on asynchronous <b>transactions.</b> We discuss our experience of executing synchronous <b>transactions</b> on a large distributed production system in The Boeing Company. Due to the poor performance of synchronous <b>transactions</b> in our environment, it motivated the exploration of asynchronous <b>transactions</b> as an alternate solution. This paper presents the requirements and benefits/limitations of asynchronous <b>transactions.</b> Open issues related to large scale deployments of asynchronous <b>transactions</b> are also discussed. 1...|$|R
5000|$|RingCT: {{a way to}} {{implement}} confidential <b>transactions</b> in Monero. Confidential <b>transactions</b> (CT) is a method for hiding the value of <b>transactions</b> in Bitcoin.|$|R
30|$|We {{describe}} two {{mechanisms to}} allow read-only <b>transactions</b> {{to be executed}} by a single server only. One mechanism is based on multiversion databases and does not require updates from committing <b>transactions</b> to be synchronized with on-going read-only <b>transactions</b> at a server; the other mechanism assumes a single-version database but synchronizes the updates of committing <b>transactions</b> with read-only <b>transactions</b> at servers.|$|R
25|$|The Subversion {{filesystem}} uses transactions to keep changes atomic. A <b>transaction</b> {{operates on}} a specified {{revision of the}} filesystem, not necessarily the latest. The <b>transaction</b> has its own root, on which changes are made. It is then either committed and becomes the latest revision, or is aborted. The <b>transaction</b> is actually a long-lived filesystem object; a client {{does not need to}} commit or abort a <b>transaction</b> itself, rather it can also begin a <b>transaction,</b> exit, and then can re-open the <b>transaction</b> and continue using it. Potentially, multiple clients can access the same <b>transaction</b> and work together on an atomic change, though no existing clients expose this capability.|$|E
25|$|<b>Transaction</b> replication: Each <b>transaction</b> {{made to the}} {{publisher}} database (master database) is synced out to subscribers, who update their databases with the <b>transaction.</b> Transactional replication synchronizes databases in near real time.|$|E
25|$|<b>Transaction</b> Logging {{provides}} a slightly less failure protection than <b>transaction</b> durability, but improves overall performance.|$|E
5000|$|Additionally, {{the credit}} crunch has {{prompted}} buyout firms to pursue {{a new group of}} <b>transactions</b> in order to deploy their massive investment funds. These <b>transactions</b> have included Private Investment in Public Equity (or PIPE) <b>transactions</b> as well as purchases of debt in existing leveraged buyout <b>transactions.</b> Some of the most notable of these <b>transactions</b> completed in the depths of {{the credit crunch}} include: ...|$|R
40|$|Abstract Unlike {{distributed}} <b>transactions,</b> mobile <b>transactions</b> do not originate and end at {{the same}} site. The implication of the movement of such <b>transactions</b> is that classical atomicity, concurrency and recovery solutions must be revisited to capture the movement behavior. As an effort in this direction, we define a model of mobile <b>transactions</b> by building on the concepts of split <b>transactions</b> and global <b>transactions</b> in a multidatabase environment. Our view of mobile <b>transactions,</b> called Kangaroo <b>Transactions,</b> incorporates the property that <b>transactions</b> in a mobile computing system hop from one base station to another as the mobile unit moves through cells. Our model {{is the first to}} capture this movement behavior as well as the data behavior which reflects the access to data located in databases throughout the static network. The mobile behavior is dynamic and is realized in our model via the use of split operations. The data access behavior is captured by using the idea of global and local <b>transactions</b> in a multidatabase system...|$|R
40|$|International audienceWe {{investigate}} a decentralised approach to committing <b>transactions</b> in a replicated database, under partial replication. Previous protocols either reexecute <b>transactions</b> entirely and/or compute a total order of <b>transactions.</b> In contrast, ours applies update values, and generate a partial order between mutually conflicting <b>transactions</b> only. <b>Transactions</b> execute faster, and distributed databases commit in small committees. Both effects contribute to preserve scalability {{as the number}} of databases and <b>transactions</b> increase. Our algorithm ensures serializability, and is live and safe in spite of faults...|$|R
