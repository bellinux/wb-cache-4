0|10000|Public
50|$|The oldest {{examples}} <b>of</b> <b>usufruct</b> {{are found}} in the Code of Hammurabi and the Law of Moses. The Law of Moses directed property owners not to harvest the edges of their fields, and reserved the gleanings for the poor.|$|R
5000|$|Economic Exploitation: Workers are the {{fundamental}} creative source of new value. Property relations affording the right <b>of</b> <b>usufruct</b> and despotic {{control of the}} workplace to capitalists are the devices by which the surplus value created by workers is appropriated by the capitalists.|$|R
5000|$|... {{with the}} {{exception}} <b>of</b> the <b>usufruct</b> <b>of</b> the lower floors, left to Liberata Fostinelli and Battista Panteghini and all their descendants [...] ad vitam eternam , to reward them from their loyalty.|$|R
40|$|The {{subject matter}} of the thesis is the issue of the right to use land. The most common form of such rights is {{represented}} by the institute of lease. The thesis informs of the valid legal regulation of this institute contained in the general provisions of the Civil Code on lease contracts and in the individual provisions of special legal regulations. The thesis also outlines the history of the legal regulation <b>of</b> <b>usufructs</b> from the 19 th century as it {{is an integral part of}} the issue in question. The thesis briefly introduces other forms <b>of</b> <b>usufructs,</b> such as loan, personal right of user and last, but not least, the right to manage national property. The final chapter concerns itself with the form of the legal regulation in the latest version of the Civil Code...|$|R
50|$|The {{law does}} not change the system of land tenure by which the state owns all land. However, in formalizing {{existing}} practice, individuals can possess a land-use right, which is defined in Chapter 10 of the law. The law defines this land-use right in terms of the civil law concept <b>of</b> <b>usufruct.</b>|$|R
50|$|In 1769, the Comte de Jaucourt, {{the heir}} of the Comtesse de Vassé, sold the château to Augustin-Louis-Marie Rouillé, the chevalier and seigneur of Vaugien. That same year, Rouillé sold the <b>usufruct</b> <b>of</b> the {{property}} to Madame de Saint-Martin, whose husband obtained the right to exploit the ice ponds in the surrounding park. Subsequently, in 1781, Rouillé, ruined financially, also sold the bare ownership of {{the property to}} the Villemoriens. In 1784, they obtained full ownership by purchasing the rights <b>of</b> <b>usufruct</b> from the heir of the widowed Madame de Saint-Martin.|$|R
50|$|In {{cases where}} a {{land-holder}} had no sons, his widow and unwed daughters, if any, would collectively hold a life-interest {{on the entire}} land. Their rights on the produce of the land would lapse upon their marriage or death, {{as the case may}} be. Upon the last such lapse <b>of</b> <b>usufruct,</b> the land would devolve upon the agnatic kin of the last male land-holder.|$|R
40|$|In view of {{the growing}} {{interest}} of foreign investors in investments in Poland, especially since Poland’s accession to the European Union, this article analyzes the profitability of the transformation <b>of</b> the perpetual <b>usufruct</b> law into the right of property at various times in the duration of this right, {{on the basis of}} the empirical formula presented in Polish law (the legal act) – The Ordinance of the Council of Ministers on the valuation of real estate and the estimated cadastre survey. It was analysed how the fee for the transformation <b>of</b> the perpetual <b>usufruct</b> law into the right of property changes depending on the assumed rate of capitalization, interest rate on the annual fee, the number of years in the unused period <b>of</b> <b>usufruct.</b> perpetual usufruct right, capitalization rate, Land Economics/Use,...|$|R
40|$|We {{investigate}} <b>termination</b> <b>of</b> rewriting computations {{guided by}} strategy annotations. We show that proofs <b>of</b> <b>termination</b> {{can be obtained}} by proving (innermost) <b>termination</b> <b>of</b> context-sensitive rewriting (CSR). Hence, we investigate how to prove innermost <b>termination</b> <b>of</b> CSR using existing methods for proving <b>termination</b> <b>of</b> CSR...|$|R
40|$|We propose {{automatically}} proving <b>termination</b> <b>of</b> logic {{programs by}} transforming them into term rewrite systems (TRS). We describe such a transformation for which <b>termination</b> <b>of</b> the logic program follows from innermost <b>termination</b> <b>of</b> the TRS, which {{is stronger than}} previous results. Semantic labelling {{turns out to be}} a powerful tool for proving <b>termination</b> <b>of</b> this kind of TRSs: we use it to prove <b>termination</b> <b>of</b> the TRS corresponding to any structural recursive logic program, and also for proving <b>termination</b> <b>of</b> implementations of quick-sort and generation of permutations...|$|R
40|$|The thesis {{deals with}} notice <b>of</b> <b>termination</b> <b>of</b> {{employment}} relationship. It aims {{not only to}} analyse current Czech legislation including existing case law, but also to outline possible proposals of amendments (de lege ferenda considerations). It consists of eight chapters. The first chapter is concerned with general issues of labour law - its concept and function, its role in legal system, its relation to civil law and directory or mandatory nature of labour law rules. The second chapter provides a basic analysis of further ways <b>of</b> <b>termination</b> <b>of</b> employment relationship, which are further legal acts leading to <b>termination</b> <b>of</b> employment (i. e. agreement on <b>termination</b> <b>of</b> employment, instant <b>termination</b> <b>of</b> employment, <b>termination</b> <b>of</b> employment during the probationary period), <b>termination</b> <b>of</b> employment {{on the basis of}} an official decision and <b>termination</b> <b>of</b> employment by legal events. The third chapter to the sixth chapter deals with current Czech legislation regulating notice <b>of</b> <b>termination</b> <b>of</b> employment and with further related issues - prohibition <b>of</b> notice <b>of</b> <b>termination</b> during protective period and exemptions from this prohibition (chapter 4), invalidity <b>of</b> notice <b>of</b> <b>termination</b> (chapter 5) and employer's obligations consequent upon <b>termination</b> <b>of</b> employment (chapter 6). The third chapter mainly [...] ...|$|R
40|$|Includes bibliographical references. Using {{the theory}} of "street-level bureaucrats", this thesis {{examines}} {{the implementation of the}} South African Choice on <b>Termination</b> <b>of</b> Pregnancy Act by exploring nurses' decision-making in <b>termination</b> <b>of</b> pregnancy services. As front-line providers, nurses {{play a critical role in}} the implementation <b>of</b> <b>termination</b> <b>of</b> pregnancy services. Nurses may be required to assist in informing, preparing or counselling women who request a <b>termination</b> <b>of</b> pregnancy and, if appropriately trained, nurses can perform <b>terminations</b> <b>of</b> pregnancy. Research suggests, however, that 15 years after the promulgation of the law, nurses continue to be reluctant to participate in <b>termination</b> <b>of</b> pregnancy services thereby undermining the successful implementation of the Choice on <b>Termination</b> <b>of</b> Pregnancy Act...|$|R
50|$|A celebrated playwright, he {{surrounded}} {{himself with}} a circle of performers and artists who flattered him and enthusiastically attended the lavish receptions he hosted in his residence in Marly. Victorien Sardou also {{became involved in the}} daily life of the commune of Marly, but he met his match when he attempted to organize a genuine “counter-revolution.” Despite this setback, he kept his beloved Château des Sphinx. When he died in 1908, the <b>usufruct</b> <b>of</b> the property was granted to his wife, while the bare ownership went to his four children. They recovered the right <b>of</b> <b>usufruct</b> when their mother died and sold the property to Bertrand-Louis-Eugène Mir.|$|R
40|$|Static analysis, proceedingsNumerical {{computations}} form {{an essential}} part of almost any real-world program. Traditional approaches to <b>termination</b> <b>of</b> logic programs are restricted to domains isomorphic to N, more recent works study <b>termination</b> <b>of</b> integer computations. <b>Termination</b> <b>of</b> computations involving real numbers is cumbersome and counter-intuitive due to rounding errors and implementation conventions. We present a novel technique that allows us to prove <b>termination</b> <b>of</b> such computations. Our approach extends the previous work on <b>termination</b> <b>of</b> integer computations. status: publishe...|$|R
25|$|Lumads have a {{traditional}} concept of land ownership {{based on what}} their communities consider their ancestral territories. The historian B. R. Rodil notes that ‘a territory occupied by a community is a communal private property, and community members have the right <b>of</b> <b>usufruct</b> to any piece of unoccupied land within the communal territory.’ Ancestral lands include cultivated land as well as hunting grounds, rivers, forests, uncultivated land and the mineral resources below the land.|$|R
40|$|Žáčková, K., Immediate <b>termination</b> <b>of</b> an {{employment}} and proposed solutions {{for a particular}} company. Bachelor thesis. Brno: Mendel university, 2014. This thesis will examine the immediate <b>termination</b> <b>of</b> {{an employment}} and the consequences that this form <b>of</b> <b>termination</b> <b>of</b> an employment brings for the company. The first part defines the term employment and immediate <b>termination</b> <b>of</b> an employment and simultaneously describes the situations in which the employee or employer has the right for immediate <b>termination</b> <b>of</b> an employment. Attention is also paid to the validity <b>of</b> <b>termination</b> <b>of</b> an employment and delivery method. The Thesis will also include analysis of specific situations in a particular company in which an immediate <b>termination</b> <b>of</b> an employment had occurred. The analysis will examine several points of view which will include: the reasons and the process <b>of</b> <b>termination</b> <b>of</b> an employment, accordance with the law, assessment of the consequences and possible costs for the company...|$|R
5000|$|The Choice on <b>Termination</b> <b>of</b> Pregnancy Act prohibits {{anyone from}} [...] "preventing the lawful <b>termination</b> <b>of</b> a pregnancy" [...] or [...] "obstructing {{access to a}} {{facility}} for the <b>termination</b> <b>of</b> a pregnancy", imposing a penalty of up to ten years' imprisonment.|$|R
40|$|Abstract. Numerical {{computations}} form {{an essential}} part of almost any real-world program. Traditional approaches to <b>termination</b> <b>of</b> logic programs are restricted to domains isomorphic to (N,>), more recent works study <b>termination</b> <b>of</b> integer computations where the lack of well-foundness of the integers has to be taken into account. <b>Termination</b> <b>of</b> computations involving floating point numbers can be counter-intuitive due to rounding errors and implementation conventions. We present a novel technique that allows us to prove <b>termination</b> <b>of</b> such computations. Our approach extends the previous work on <b>termination</b> <b>of</b> integer computations...|$|R
40|$|Abstract. <b>Termination</b> is one <b>of</b> {{the most}} {{interesting}} problems when dealing with context-sensitive rewrite systems. Although {{there is a good}} number of techniques for proving <b>termination</b> <b>of</b> context-sensitive rewriting (CSR), the dependency pair approach, {{one of the most powerful}} techniques for proving <b>termination</b> <b>of</b> rewriting, has not been investigated in connection with proofs <b>of</b> <b>termination</b> <b>of</b> CSR. In this paper, we show how to use dependency pairs in proofs <b>of</b> <b>termination</b> <b>of</b> CSR. The implementation and practical use of the developed techniques yield a novel and powerful framework which improves the current state-of-the-art of methods for proving <b>termination</b> <b>of</b> CSR...|$|R
5000|$|On <b>termination</b> (i.e. <b>termination</b> <b>of</b> the interest-in-possession, which may, or may not, be the <b>termination</b> <b>of</b> the trust): ...|$|R
40|$|A {{technique}} {{to prove the}} <b>termination</b> <b>of</b> a given term rewriting system (TRS, for short) is presented. We propose tree lifting orderings by which from a given TRS R candidates for the <b>termination</b> <b>of</b> R can be obtained [...] -the <b>termination</b> <b>of</b> (at least) one of these candidates guarantees the <b>termination</b> <b>of</b> R. It should be remarked that for a given finite TRS all its candidates can be computed automatically...|$|R
40|$|Numerical {{computations}} form {{an essential}} part of almost any real-world program. Traditional approaches are restricted domains isomorphic to N, more recent works study <b>termination</b> <b>of</b> integer computations. <b>Termination</b> <b>of</b> computations involving real numbers is cumbersome and counter-intuitive due to rounding errors and implementation conventions. We present a novel technique that allows us to prove <b>termination</b> <b>of</b> such computations. Our approach extends the previous work on <b>termination</b> <b>of</b> integer computations...|$|R
5000|$|... 1925-12-31: Act of 1925, {{reservation}} lands {{not exceeding}} 133,550 hectares (330,000 acres) {{for the benefit}} of Indians by the transfer <b>of</b> the <b>usufruct.</b>|$|R
40|$|The instant <b>termination</b> <b>of</b> {{employment}} The {{purpose of}} my thesis is to analyze legal regulations <b>of</b> instant <b>termination</b> <b>of</b> employment, {{as the one}} of the legal form <b>of</b> the <b>termination</b> <b>of</b> employment. This exceptional instrument for the <b>termination</b> <b>of</b> employment can be applied only from serious reasons, stated by Czech labour code. The thesis is composed of ten chapters, each of them dealing with different aspects. The First Chapter attends to the basic questions relating to employment between employer and employee and above all introduces the options for the <b>termination</b> <b>of</b> employment. The Second Chapter presents just the instant <b>termination</b> <b>of</b> employment and consists of two subheads. First of them focuses on legal form <b>of</b> immediate <b>termination</b> <b>of</b> employment in general, second one analyzes legal form of this institute, which anticipates current legal status. Chapter Three concentrates on instant <b>termination</b> <b>of</b> employment by employer, which can be used only from two reasons - employee's final conviction to imprisonment in definite length for commission of a crime and employee's infringement of duties in a gross manner. This chapter is subdivided into parts. The above mentioned reasons are described in the first two parts. Third subhead examines the cases, where the instant <b>termination</b> <b>of</b> employment is excluded [...] ...|$|R
40|$|Introduction. Over 80 {{years the}} anatomy by request of applied {{medicine}} studies a structure <b>of</b> the sensitive <b>terminations</b> <b>of</b> different nerves in heart of mammals. The most in details studied <b>terminations</b> <b>of</b> the wandering nerves. Work purpose. To investigate the afferent <b>terminations</b> <b>of</b> different cardiac nerves...|$|R
40|$|AbstractLazy {{rewriting}} (LR) {{is intended}} to improve the <b>termination</b> behavior <b>of</b> TRSs. This is attempted by restricting reductions for selected arguments of functions. Similarly, context-sensitive rewriting (CSR) forbids any reduction on those arguments. We show that LR and CSR coincide under certain conditions. On {{the basis of this}} result, we also describe a transformation which permits us to prove <b>termination</b> <b>of</b> LR as <b>termination</b> <b>of</b> CSR for the transformed system. Since {{there are a number of}} different techniques for proving <b>termination</b> <b>of</b> CSR, this provides a formal framework for proving <b>termination</b> <b>of</b> lazy rewriting...|$|R
40|$|Abstract. Innermost {{context-sensitive}} rewriting {{has been}} proved useful for modeling computations of programs of algebraic languages like Maude, OBJ, etc. Furthermore, innermost <b>termination</b> <b>of</b> rewriting is often easier to prove than termination. Thus, under appropriate conditions, a useful strategy for proving <b>termination</b> <b>of</b> rewriting is trying to prove <b>termination</b> <b>of</b> innermost rewriting. This phenomenon has also been investigated for context-sensitive rewriting (CSR). Up to now, only few transformations have been proposed and used to prove <b>termination</b> <b>of</b> innermost CSR. In this paper, we investigate direct methods for proving <b>termination</b> <b>of</b> innermost CSR. We adapt the recently introduced context-sensitive dependency pairs approach to innermost CSR and show {{that they can be}} advantageously used for proving <b>termination</b> <b>of</b> innermost CSR. We have implemented them as part <b>of</b> the <b>termination</b> tool mu-term. ...|$|R
40|$|Bachelor thesis {{concerns}} the <b>termination</b> <b>of</b> employment by the employer. The first chapter generally characterized employment. A {{substantial part of}} the work consists of formal and content requirements of individual ways <b>of</b> <b>termination</b> <b>of</b> emplyment, ie <b>termination</b> <b>of</b> employment during the probationary period, immediate <b>termination</b> <b>of</b> employment and dismissal. In addition work has a separated chapter, which is devoted to the obligation of the employer after <b>termination</b> <b>of</b> employment. Theoretical considerations are interspersed with case law from the area. To compare the observance of the legislation in practice, I devote a chapter to personal experiences of different employers and mention the demands <b>of</b> an invalid <b>termination.</b> In conclusion, I evaluate the regulation <b>of</b> <b>termination</b> <b>of</b> employment at the base of my observations received from employers and presents proposals to improve legislation and recommendations to employers...|$|R
40|$|AbstractA {{methodology}} for proving the <b>termination</b> <b>of</b> well-moded logic programs is developed {{by reducing the}} <b>termination</b> problem <b>of</b> logic programs to that of term rewriting systems. A transformation procedure is presented to derive a term rewriting system from a given well-moded logic program such that the <b>termination</b> <b>of</b> the derived rewrite system implies the <b>termination</b> <b>of</b> the logic program for all well-moded queries under a class of selection rules. This facilitates applicability of a vast source <b>of</b> <b>termination</b> orderings proposed {{in the literature on}} term rewriting, for proving <b>termination</b> <b>of</b> logic programs. The <b>termination</b> <b>of</b> various benchmark programs has been established with this approach. Unlike other mechanizable approaches, the proposed approach does not require any preprocessing and works well, even in the presence of mutual recursion. The transformation has also been implemented as a front end to Rewrite Rule Laboratory (RRL) and has been used in establishing <b>termination</b> <b>of</b> nontrivial Prolog programs such as a prototype compiler for ProCoS, PL 0 language...|$|R
40|$|We {{investigate}} the problem <b>of</b> proving <b>termination</b> <b>of</b> OBJ programs with positive local strategies, i. e., lists of positive (or null) integers {{that are associated}} to the symbols of the signature. We establish conditions that fully characterize this problem as the problem <b>of</b> proving innermost <b>termination</b> <b>of</b> context-sensitive rewriting. Finally, we investigate how to prove innermost <b>termination</b> <b>of</b> context-sensitive rewriting using existing methods for proving <b>termination</b> <b>of</b> context-sensitive rewriting. Keywords: Declarative programming, replacement restrictions, term rewriting, termination. ...|$|R
40|$|<b>Termination</b> <b>of</b> {{membership}} in {{limited liability company}} Abstract The thesis deals with meanings <b>of</b> <b>termination</b> <b>of</b> {{membership in}} limited liability company, namely by (i) transfer of business interest, (ii), {{stepping out of the}} company, (iii) agreement on <b>termination</b> <b>of</b> shareholder's participation in a company, (iv) exclusion of a shareholder, (v) cancellation of shareholder's participation by court, (vi) <b>termination</b> <b>of</b> shareholder's participation due to insolvency proceedings against the shareholder, and (vii) <b>termination</b> <b>of</b> shareholder's participation due to execution towards the shareholder's interest. The thesis further deals with <b>termination</b> <b>of</b> shareholder's participation due to death of the shareholder who is a natural person or winding-up of the shareholder which is a legal entity. After a short foreword follow chapters concerning general issues about the limited liability company as a type of a legal corporation, the rights and obligations of shareholders and the creation and <b>termination</b> <b>of</b> participation in a limited liability company. Chapters dealing with various meanings <b>of</b> <b>termination</b> <b>of</b> shareholder's participation in a limited liability company and a brief conclusion follow. The aim of this thesis is to analyze and clarify some interpretative and application difficulties arising in connection with [...] ...|$|R
40|$|Context-sensitive {{rewriting}} {{is a term}} rewriting strategy used {{to model}} evaluation strategies in functional programming and in programming languages like OBJ. For example, under certain conditions <b>termination</b> <b>of</b> an OBJ program is equivalent to innermost <b>termination</b> <b>of</b> the corresponding context-sensitive rewrite system [Lucas, 2001]. To prove <b>termination</b> <b>of</b> context-sensitive rewriting, several methods have been proposed in the literature which transform context-sensitive rewrite systems into ordinary rewrite systems such that <b>termination</b> <b>of</b> the transformed ordinary system implies <b>termination</b> <b>of</b> the original context-sensitive system. None of these transformation methods is very satisfactory {{when it comes to}} proving innermost termination. We present a simple transformation which is both sound and complete for innermost termination...|$|R
50|$|On 12 February 2014, CRHK {{announced}} immediate <b>termination</b> <b>of</b> {{the employment}} contract with Li. CRHK {{refused to comment}} on the <b>termination</b> <b>of</b> contract.|$|R
40|$|A {{transformational}} {{approach for}} proving <b>termination</b> <b>of</b> parallel logic {{programs such as}} GHC programs is proposed. A transformation from GHC programs to term rewriting systems is developed; it exploits the fact that unications in GHC-resolution correspond to matchings. The <b>termination</b> <b>of</b> a GHC program for a class of queries is implied by the <b>termination</b> <b>of</b> the resulting rewrite system. This approach facilitates the applicability {{of a wide range}} <b>of</b> <b>termination</b> techniques developed for rewrite systems in proving <b>termination</b> <b>of</b> GHC programs. The method consists of three steps: (a) deriving moding information from a given GHC program, (b) transforming the GHC program into a term rewriting system using the moding information, and nally (c) proving <b>termination</b> <b>of</b> the resulting rewrite system. Using this method, the <b>termination</b> <b>of</b> many benchmark GHC programs such as quick-sort, merge-sort, merge, split, fair-split and append, etc., can be proved. 1 Introduction The success of logic programmin [...] ...|$|R
40|$|We {{characterize}} the practically important notion <b>of</b> operational <b>termination</b> <b>of</b> deterministic conditional term rewriting systems (DCTRSs) by context-sensitive <b>termination</b> <b>of</b> a transformed TRS on original terms. Experimental evaluations {{show that this}} new approach yields more power when verifying operational termination than existing ones. Moreover, {{it allows us to}} disprove operational <b>termination</b> <b>of</b> DCTRSs...|$|R
40|$|Abstract. Context-sensitive {{rewriting}} is a {{restriction of}} term rewriting used to model evaluation strategies in functional programming and in programming languages like OBJ. For example, {{under certain conditions}} <b>termination</b> <b>of</b> an OBJ program is equivalent to innermost <b>termination</b> <b>of</b> the corresponding context-sensitive rewrite system [18]. To prove <b>termination</b> <b>of</b> context-sensitive rewriting, several methods have been proposed in the literature which transform context-sensitive rewrite systems into ordinary rewrite systems such that <b>termination</b> <b>of</b> the transformed ordinary system implies <b>termination</b> <b>of</b> the original context-sensitive system. Most of these transformations are not very satisfactory {{when it comes to}} proving innermost termination. We investigate the relationship between termination and innermost <b>termination</b> <b>of</b> context-sensitive rewriting and we examine the applicability of the different transformations for innermost termination proofs. Finally, we present a simple transformation which is both sound and complete for innermost termination. ...|$|R
