10|0|Public
50|$|The <b>Teramac</b> was an {{experimental}} {{massively parallel computer}} designed by HP in the 1990s. The name reflected the project's vision to provide a programmable gate array system with capacity for a million gates running at a megahertz. Contrary to traditional systems, which are useless {{if there is one}} defect, <b>Teramac</b> used defective processors -- intentionally -- to demonstrate its defect-tolerant architecture. Even though the computer had 220,000 hardware defects, it was able to perform some tasks 100 times faster than a single-processor high-end workstation.|$|E
50|$|Field Programmable Nanowire Interconnect (often {{abbreviated}} FPNI) is a {{new computer}} architecture developed by Hewlett-Packard. This is a defect-tolerant architecture, using {{the results of the}} <b>Teramac</b> experiment.|$|E
50|$|<b>Teramac</b> was {{originally}} developed by scientists in HP's central research lab, HP Labs, {{in the mid}} 1990s. Although it contained conventional silicon integrated circuit technology, it {{paved the way for}} some of HP's work in nanoelectronics because it provided an architecture on which a chemically assembled computer could operate.|$|E
50|$|Each bit in {{the device}} {{consists}} of a silicon and a titanium crossbar with around 100 rotaxane molecules filling {{in the space between}} them at perpendicular angles. The hydrophilic diethylene glycol stopper on the left (gray) is specifically designed to anchor to the silicon wire (made hydrophilic by phosphorus doping) while the hydrophobic tetraarylmethane stopper on the right does the same to the likewise hydrophobic titanium wire. In the ground state of the switch, the paraquat ring is located around a tetrathiafulvalene unit (in red) but it moves to the dioxynaphthyl unit (in green) when the fulvalene unit is oxidized by application of a current. When the fulvalene is reduced back a metastable high conductance '1' state is formed which relaxes back to the ground state with a chemical half-life of around one hour. The problem of defects is circumvented by adopting a defect-tolerant architecture also found in the <b>Teramac</b> project. In this way a circuit is obtained consisting of 160,000 bits on {{an area the size of}} a white blood cell translating into 1011 bits per square centimeter.|$|E
40|$|Abstract—In {{the past}} year we have gained {{experience}} in custom computing by porting a number of large applications to <b>Teramac.</b> <b>Teramac</b> is a custom computer capable of executing million-gate user designs at speeds approaching one megahertz. <b>Teramac</b> includes software that fully automates the conversion of high-level user designs to configurations that are ready to run on <b>Teramac.</b> Two applications, both in excess of a quarter million gates, are described here: an artery-extraction filter that locates and highlights arteries in medical MRI datasets; and Cube, a volume-rendering engine. We have discovered the importance of scalable, parameterized designs. We {{have been successful in}} parameterizing some aspects of our designs and we have identified improvements to our tools which would facilitate further parameterization. Our users have benefitted from the speed at which their applications run on <b>Teramac</b> and have gained confidence in their designs after seeing them run on actual hardware. ...|$|E
40|$|We present two {{implementations}} of the Cube- 4 volume rendering architecture, {{developed at}} SUNY Stony Brook, on the <b>Teramac</b> custom computing machine. Cube- 4 uses a slice-parallel ray-casting algorithm {{that allows for}} a parallel and pipelined implementation of ray-casting. Tri-linear interpolation, surface normal estimation from interpolated samples, shading, classification, and compositing {{are part of the}} rendering pipeline. Using the partitioning schemes introduced in this paper, Cube- 4 is capable of rendering in real-time large datasets (e. g., 1024 3) with a limited number of rendering pipelines. <b>Teramac</b> is a hardware simulator developed at Hewlett-Packard Research Laboratories. <b>Teramac</b> belongs to the new class of custom computing machines, which combine the speed of special-purpose hardware with the flexibility of general-purpose computers. Using <b>Teramac</b> as a development tool, we implemented two working Cube- 4 prototypes capable of rendering 128 3 datasets in 0. 65 seconds at a ve [...] ...|$|E
40|$|<b>Teramac</b> {{is a large}} custom {{computer}} {{which works}} correctly {{despite the fact that}} three quarters of its FPGAs contain defects. This is accomplished through unprecedented use of defect tolerance, which substantially reduces Teramac's cost and permits it to have an unusually complex interconnection network. <b>Teramac</b> tolerates defective resources, like gates and wires, that are introduced during the manufacture of its FPGAs and other components, and during assembly of the system. We have developed methods to precisely locate defects. User designs are mapped onto the system by a completely automated process that avoids the defects and hides the defect tolerance from the user. Defective components are not physically removed from the system. ...|$|E
40|$|<b>Teramac</b> is a massively {{parallel}} experimental computer built at Hewlett-Packard Laboratories {{to investigate a}} wide range of different computational architectures. This machine contains about 220, 000 hardware defects, any one of which could prove fatal to a conventional computer, and yet it operated 100 times faster than a high-end single-processor workstation for some of its configurations. The defect-tolerant architecture of <b>Teramac,</b> which incorporates a high communication bandwith that enables it to easily route around defects, has significant implications for any future nanometerscale computational paradigm. It may be feasible to chemically synthesize individual electronic components with less than a 100 percent yield, assemble them into systems with appreciable uncertainty in their connectivity, and still create a powerful and reliable data communications network. Future nanoscale computers may consist of extremely large-configuration memories that are programmed for specific tasks by a tutor that locates and tags the defects in the system. The last 25 years have witnessed astonishing advances in the fields of microelectronic...|$|E
40|$|Prototypes are {{invaluable}} {{for studying}} special purpose parallel architectures and custom computing. This paper de-scribes a new FPGA, called Plasma — {{the heart of}} a configur-able custom computing engine (<b>Teramac)</b> that can execute synchronous logic designs up to one million gates at rates up to one megahertz. Plasma FPGA’s using 0. 8 micron CMOS are packaged in large multichip modules (MCMs). A large custom circuit may be mapped onto the hardware in approximately two hours, without user intervention. Plasma introduces some inno-vative architecture concepts including hardware support for large multiported register files...|$|E
40|$|As {{computing}} platforms gain {{greater and}} greater computational power, new applications that previously were unthinkable are being developed. One such application {{is the ability to}} automatically identify objects in radar images called Automatic Tar-get Recognition (ATR). This thesis specically deals with ATR algorithms developed to search for objects in Synthetic Aperture Radar (SAR) images. The algorithms require more computational power than is currently available in any platforms. These algorithms were used as a tool to compare two recongurable hardware platforms because of these high computational requirements. Two implementations of ATR for SAR have been de-veloped to compare <b>Teramac</b> and Splash- 2 Field Programmable Gate Array (FPGA) based platforms. This comparison shows Teramac's strength as an exploratory platform and Splash- 2 's strength as an implementation platform for linear systolic array designs...|$|E

