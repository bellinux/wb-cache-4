1|2|Public
40|$|On June 21 st, 2010, the German radar {{satellite}} TanDEM-X was launched and successfully {{placed in an}} orbit approaching the TerraSAR-X satellite until both systems will fly in close formation and will establish the only available bi-static interferometer in space. The primary TanDEM-X mission goal is to generate a global Digital Elevation Model (DEM) with a relative point-to-point height accuracy of 2 meters for moderate terrain at 12 m posting. For that purpose interferometric SAR data will be acquired {{over a period of}} 3 years in parallel to the operational running TerraSAR-X mission. Systematic processing of SAR raw data to so-called Raw-DEMs is performed by one single processing system, the Integrated <b>TanDEM</b> <b>Processor</b> (ITP). The final global DEM is then calibrated and mosaicked by a second system, the Calibration and Mosaicking Processor (MCP). In this paper a short overview of the ITP’s processing functionalities is given, followed by a discussion of the bistatic processing challenges, namely the ultra stable oscillators’ (USO) differential drift estimation, the according timing and phase corrections and the bi-static SAR acquisition geometry...|$|E
40|$|FastSort is an {{external}} sort that uses parallel processing, large main memories and parallel disc accesses to obtain high performance. FastSort can sort a file {{as quickly as}} it can read the input and it can produce the result {{as quickly as it}} can write the target file [...] that is it sorts in linear time rather than the traditional Nlog(N) time of serial sort systems. This paper describes the design and implementation of FastSort. It presents performance measurements of FastSort on various <b>Tandem</b> Nonstop <b>processors,</b> with particular emphasis on the speedup obtained by using parallelism to sort large files...|$|R
40|$|A {{hardware}} implementation {{can bring}} {{orders of magnitude}} improvements in performance and energy consumption over a software implementation. Hardware design, however, can be extremely dicult. High-level synthesis, the process of compiling software to hard-ware, promises to make hardware design easier. However, compiling an entire software program to hardware can be inecient. This thesis proposes hardware/software co-design, where computationally intensive functions are accelerated by hardware, while remaining program segments execute in software. The work in this thesis builds a framework where user-designated software functions are automatically compiled to hardware accelerators, which can execute serially or in parallel to work in <b>tandem</b> with a <b>processor.</b> To support multiple parallel accelerators, new multi-ported cache designs are pre-sented. These caches provide low-latency high-bandwidth data to further improve the performance of accelerators. An extensive range of cache architectures are explored, and results show that certain cache architectures signicantly outperform others in a processor/accelerator system...|$|R

