0|5563|Public
40|$|AbstractIn this paper, {{we propose}} EPCM (Efficient Prediction-based Context-awareness Matrix) {{algorithm}} analyzing connectivity by predicting a cluster's <b>context</b> <b>data</b> such as velocity and direction. In the existing DTN, unrestricted relay node selection cause increasing delay and packet loss {{as well as}} overhead from limited storage and capability. The proposed EPCM algorithm analyzes the predicted <b>context</b> <b>data</b> using <b>context</b> matrix and adaptive revision weight, and selects relay node by considering connectivity between the cluster and the base station. To predict the <b>context</b> <b>data,</b> the proposed EPCM algorithm stores the <b>context</b> <b>data</b> in the <b>context</b> matrix at regular time and analyzes stored <b>context</b> <b>data</b> according to the variation of <b>context</b> <b>data.</b> The mobility of relay node can determine to combine the current <b>context</b> <b>data</b> value with the variation of <b>context</b> <b>data.</b> In order to eliminate the error from the irregular movement of the node, we use the adaptive revision weight to evaluate {{the reliability of the}} <b>context</b> <b>data</b> stored in the context matrix. Though the predicted <b>context</b> <b>data,</b> we know that any node can move toward the base station and can select relay node among the neighbor node to transfer the message more efficiently. We simulate the packet delivery ratio both of the proposed EPCM algorithm and PROPHET algorithm selecting relay node according to node-to-node contact. Our results of simulation demonstrate the efficiency of the EPCM algorithm that provide the higher packet delivery ratio by applying the <b>context</b> <b>data</b> such as velocity and direction in the relay node selection process...|$|R
40|$|International audienceContext {{data-driven}} approach {{refers to}} the process of collecting and storing <b>context</b> <b>data</b> {{from a wide range of}} context sources as sensors and Web services. This approach differs from existing context-aware applications, where context models and applications are closely related and ignore how the context is derived from sources and interpreted. In this paper, we propose a <b>context</b> <b>data</b> model based on semantic Web technologies for ubiquitous computing applications. This model facilitates the specification of <b>context</b> <b>data</b> to be easy interpreted by applications and services. In addition, this model is supported by existing communications protocols. Therefore, our <b>context</b> <b>data</b> model is applied to promote mining of <b>context</b> <b>data</b> towards service adaptation in ubiquitous computing systems...|$|R
40|$|Context {{processing}} {{refers to}} the operation of processing different types of <b>context</b> <b>data</b> and/or information using different kinds of operators. These operators are applied according to some conditions or constraints given in context queries. Existing context aware systems process <b>context</b> <b>data</b> in a centralized fashion to answer context queries and generate context information. However, this method can cause scalability issues and give poor system throughput. In this paper, we aim {{to address this issue}} by proposing a distributed <b>context</b> <b>data</b> processing mechanism in which the <b>context</b> <b>data</b> processing computations of different context queries will be distributed to different computing devices. Relying on the developed prototype, a performance evaluation was conducted with centralized <b>context</b> <b>data</b> processing method as benchmark...|$|R
40|$|This paper {{presents}} “ConServ 1 ”, a {{web service}} for context management. ConServ allows smart spaces to access user’s <b>context</b> <b>data</b> according to user-defined policies. This web service addresses the sharing {{and management of}} <b>context</b> <b>data</b> between smart spaces {{and as a result}} facilitates the creation of new smart spaces and the enhancement of old ones. Data related to a user’s location, calendar, habits, relationships and privacy policy are combined to provide rich <b>context</b> <b>data</b> while users are provided with a single place where they can control the access of all smart spaces to their <b>context</b> <b>data.</b> ConServ provides a set of ontologies, which leverage existing popular ontologies, to model user’s <b>context</b> <b>data</b> and the interacting smart spaces. ...|$|R
40|$|Abstract: A {{requirement}} of pervasive computing systems is <b>context</b> <b>data</b> sharing among software components that collaborate in {{providing services to}} users. The solution to this requirement becomes more challenging when the communication scenario is peer-to-peer, i. e. the <b>context</b> <b>data</b> are distributed among components, rather than be held by a centralized server. This paper faces the <b>context</b> <b>data</b> sharing issue proposing a software architecture that realizes a distributed context space by a tuple space. Moreover, the <b>context</b> <b>data</b> are represented using an ontology, described in the Web Ontology Language, thus the system can be seamless integrated with the Semantic Web technologies. 1...|$|R
40|$|Ubiquitous {{computing}} environments grant organizations {{a multitude}} of dynamic digital traces composed of context signals emanating from embedded and mobile components. However, previous research indicates that the utility of <b>context</b> <b>data</b> is frequently hampered by a priori interpretations of context embodied within the acquiring technologies themselves. This paper reports an 18 month action research study seeking to rearrange an industry wide assemblage of stationary, mobile, and embedded technologies and associated organizations {{for the purpose of}} facilitating cross-organizational access to reinterpretable digital traces of <b>context</b> <b>data.</b> This was done by embedding the notion of seamfulness in an open standardized interface as a means to shift the locus of interpretation of <b>context</b> <b>data</b> in ubiquitous transport systems. In environments such as these, open access to <b>context</b> <b>data</b> is of essential importance to create opportunities for flexible interpretations of mobile work for uses not anticipated by preconfigured representations. However, this requirement essentially clashed with the business strategies of actors providing <b>context</b> <b>data</b> acquiring technology. This clash resulted in a negotiated design compromise of limited access and a well defined expansion of additional uses of <b>context</b> <b>data</b> between the involved actor groups. Addressing the issue of how organizations can derive value from <b>context</b> <b>data,</b> the contribution of this paper is an analysis of the complexity o...|$|R
40|$|We {{present a}} {{probabilistic}} method of predicting context of mobile users {{based on their}} historic <b>context</b> <b>data.</b> The presented method predicts general context based on probability theory through a novel graphical data structure, which {{is a kind of}} weighted directed multigraphs. User <b>context</b> <b>data</b> are transformed into the new graphical structure, in which each node represents a context or a combined context and each directed edge indicates a context transfer with the time weight inferred from corresponding time data. We also consider the periodic property of <b>context</b> <b>data,</b> and we devise a good solution to <b>context</b> <b>data</b> with such property. Through test, we could show the merits of the presented method...|$|R
40|$|Wireless {{connectivity}} <b>context</b> <b>data</b> {{is composed}} by date, time, geographical localization, and QoS metrics, to cite the most common. These data are employed, {{in a particular}} way, by fundamental techniques for context-aware connectivity management, e. g. mobility predictors, handoff mechanisms and mobility management. For instance, mobility and QoS predictors use, as input, previous georeferenced network <b>context</b> <b>data.</b> Normally, <b>context</b> <b>data</b> are available in hardly updated databases with considerable size. In this paper, we propose a social-based methodology to allow mobile users collaborate to discover wireless connectivity islands. The methodology is composed by methods to gather, combine, summarize and share <b>context</b> <b>data</b> inside the users' social circles. We, also, designed a schema to mashup <b>context</b> <b>data</b> with location-based social media. It is result of a prototyping effort and we focus the discussion on its feasibility and limitations in terms of storage size, power consumption and QoS metric...|$|R
40|$|Context-aware {{processing}} {{is a part}} of intensively developed {{ubiquitous computing}} and mobile systems. Surrounding awareness is used to introduce new functions and solutions. Some categories of the <b>context</b> <b>data</b> are taken for security purposes in the context-aware security implementations. This kind of data has to meet some conditions since it is used for decision making about security mechanisms adaptation and configuration. One of these conditions is reliability. The paper presents vector approach to <b>context</b> <b>data</b> reliability assessment introducing mechanism which allows to assess reliability parameters for further usage in context aware security processing. The following aspects of the <b>context</b> <b>data</b> are taken into account: interface reliability, data quality, data source reliability and security level. Introducing reliability metric for <b>context</b> <b>data</b> may be beneficial to other mechanisms which utilize <b>context</b> <b>data.</b> The vector form of reliability may be even more flexible than the scalar value...|$|R
40|$|International audienceThe Internet of Things (IoT) enables {{producers}} of <b>context</b> <b>data</b> like sensors {{to interact with}} remote consumers of <b>context</b> <b>data</b> like smart pervasive applications in an entirely decoupled way. However, two important issues are faced by <b>context</b> <b>data</b> distribution, namely providing context information with a sufficient level of quality-i. e. quality of context, QoC-while preserving the privacy of context owners. This article presents the solutions provided by the INCOME middleware framework for addressing these two potentially contradictory issues while hiding the complexity of <b>context</b> <b>data</b> distribution in heterogeneous and large-scale environments. Context producers and consumers not only express their needs in context contracts but also the guarantees {{they are ready to}} fulfil. These contracts are then translated into advertisement and subscription filters to determine how to distribute <b>context</b> <b>data.</b> Our experiments on a first open source prototype show that QoC-based filtering and privacy protection using attributed-based access control can be performed at a reasonable cos...|$|R
30|$|ISO image creator manipulates {{a set of}} {{template}} ISO images. In addition, this sub-component {{is responsible}} for the creation of ISO images and the embedding of <b>context</b> <b>data.</b> The ISO Image Creator has access to a single set of <b>context</b> <b>data</b> processing scripts that are agnostic of a VM’s operating system, embedded in the ISO image and responsible for reading <b>context</b> <b>data</b> from the ISO image at run time. An internal interface provides access to contextualization scripts embedded in the VM image.|$|R
40|$|Abstract. The {{provision}} of context-aware services {{in terms of}} the anytime/anywhere/anymedia paradigm requires the consideration of certain context properties in terms of time, location, device, or simply the user’s preferences. The specific characteristics of context, comprising among others large amounts of data, frequent and concurrent updates and heterogeneous sources often in terms of XML schemata, demand for an efficient management of <b>context</b> <b>data.</b> Relational databases seem to be a promising key technology for the efficient storage, retrieval, and processing of XML-based <b>context</b> <b>data</b> at the server-side. This is not least since relational databases allow to seamlessly combine <b>context</b> <b>data</b> with existing legacy data, hereby constituting a major advantage compared with native XML databases or object-oriented databases. The focus of this paper is twofold. First, requirements for managing <b>context</b> <b>data</b> are elaborated from a database perspective. Second, based on this, a generic approach called X-Ray, mediating between existing XML-based context and content stored in relational databases, is presented. With this approach, maintainability and changeability of <b>context</b> <b>data</b> is enhanced, since the mapping knowledge is not hard-coded but rather reified within a meta schema. The meta schema allows to automatically compose <b>context</b> <b>data</b> out of the relational database when requested and decompose them when they have to be stored. ...|$|R
40|$|Context-aware {{applications}} {{introduce new}} privacy risks while uti- lizing user <b>context</b> <b>data.</b> Location {{is the most}} benefited context that is taken into consideration within context-aware applications. But there are more context than location and more privacy risks than location privacy risks. In addition, there is a context to context relation in terms of privacy. In this paper, we propose a privacy-aware <b>context</b> <b>data</b> model based on the <b>context</b> <b>data</b> model of Schmidt et al. The pro- posed data model focuses on context privacy and privacy dependence of context-to-context relations...|$|R
40|$|International audienceThe Internet of Things (IoT) {{paradigm}} {{enables the}} development of new kind of services and mass market applications in multiple domains such as mobile marketing, social networks, smart cities, health care, and business processes. These applications consume high-level <b>context</b> <b>data</b> computed by processing and filtering numerous raw <b>context</b> <b>data</b> collected from the physical environment. Those applications are based upon cooperating services, which have to be designed and dynamically composed. For instance, those services manage heterogeneous <b>context</b> <b>data,</b> distribute both processing and flows of data, manage the quality of context for appropriate decision-making, enhance privacy of personal <b>context</b> <b>data,</b> and identify situations from data coming both from the IoT and from knowledge bases. Providing context-aware applications in the IoT necessitates the interaction of numerous heterogeneous services deployed in a multiscale complex distributed architectur...|$|R
40|$|Mobile {{devices are}} {{equipped}} with increasing processing power and sensing capabilities, and mobile services can benefit from these features {{to provide a more}} personalized and context-aware experience to final users. To efficiently collect and deliver context information, a proper architecture is required, where heterogeneous context information can be processed to provide higher-level <b>context</b> information, <b>context</b> <b>data</b> are represented uniformly, and applications can process <b>context</b> <b>data</b> with high-level queries. This paper fulfils this goal of interoperability and domain independence by defining a framework for <b>context</b> <b>data</b> management relying on open standards (XMPP and REST), acting as an enabler for third-party context-aware applications; other main novelties of our work are the definition of a ContextML for standard <b>context</b> <b>data</b> representation, and a Context Query Language (CQL) to access context information based on high-level data filtering...|$|R
40|$|Abstract—Mobile is {{becoming}} a ubiquitous platform for context-aware intelligent computing. One fundamental but usually ignored issue is how to efficiently manage (e. g., index and query) the mobile <b>context</b> <b>data.</b> To this end, we present a unified framework and have developed a toolkit, referred to as MQuery. More specifically, the mobile <b>context</b> <b>data</b> is represented in the standard RDF (Resource Description Framework) format. We propose a compressed-index method which takes less than 50 % of the memory cost (of the traditional method) to index the <b>context</b> <b>data.</b> Four query interfaces {{have been developed for}} efficiently querying the <b>context</b> <b>data</b> including: instance query, neighbor query, shortest path query, and connection subgraph query. Experimental results on two real datasets demonstrate the efficiency of MQuery. Keywords-mobile social network; graph query; MQuery; SG...|$|R
40|$|A primary {{functionality}} {{of context}} aware applications is the retrieval {{of different types}} of <b>context</b> <b>data</b> from various <b>context</b> sources and adapting their behavior accordingly. In order to facilitate context aware application development, a context aware middleware must provide an effective <b>context</b> <b>data</b> management and lookup strategy. The use of a traditional index for indexing dynamic <b>context</b> <b>data</b> is not feasible due to the high update overhead. In this paper, we propose a <b>context</b> <b>data</b> indexing mechanism that utilizes the statistical properties of data viz. the mean and variance to cluster similar data values together and minimizes the need for frequent index updates. Experimental results indicate that the performance of the proposed index structure is satisfactory with respect to the query response time and query accuracy together with a low maintenance overhead...|$|R
40|$|Although many {{context-aware}} {{systems have}} been developed, {{little attention has been}} paid to building a uniform framework of a Context Base and Context Base Management Systems (CBMS). Consequently, each context-aware system has to be built from the ground up. It is important that context-aware systems share <b>context</b> <b>data</b> across different domains and with all devices or services. Therefore, <b>context</b> <b>data</b> in the <b>context</b> base is represented as ontology which represents a new paradigm for modeling and representing the <b>context</b> <b>data</b> in this research. In this paper, we describe a CBMS framework and a model of an ontology-based Context Base. CBMS consists of 3 modules which are a browse module, a logical module and a physical module. A business trip request system has been implemented as a prototype. Traditional databases and DBMSs have limitations adapting to a ubiquitous computing environment. As context-aware services develop further, the necessity of a uniform framework of Context Base and CBMS increases. It will support many services which use <b>context</b> <b>data</b> and give guidelines to developers who seek methods to handle <b>context</b> <b>data...</b>|$|R
30|$|Preemption {{overhead}} can {{be due to}} context transfers (two transfers: {{one from}} the previously running task to save it is context and one to the next task to restore it is context), configuration transfers (to configure the next task) and eventually <b>context's</b> <b>data</b> extraction (if the <b>context's</b> <b>data</b> are spreaded among other data as in the XIL solution).|$|R
40|$|National audienceWe {{propose a}} {{declarative}} approach to modeling <b>context</b> <b>data</b> {{based on the}} RDFS[6] language which enables to declare in a ?exible way classes and properties, and organize them in hierarchies. We show that queries on <b>context</b> <b>data</b> can then be expressed {{at a high level}} of abstraction and remain applicable when the class hierarchy is extended...|$|R
30|$|The work {{presented}} in this paper builds on the well established mechanism of caching in distributed systems for performance improvement purposes. However, the use and effectiveness of context caches has not been evaluated or demonstrated. The Context Provisioning Architecture employs a caching mechanism at the context broker, which positively affects the mean query satisfaction time between context consumers and providers. We have analysed the relative performance of various cache replacement policies using the OMNET++ discrete event simulator. Our analysis has revealed that different caching strategies display contrasting behaviour under different scope distribution scenarios, with OF policy performing better for short scoped <b>context</b> <b>data</b> and SE performing better for long scoped <b>context</b> <b>data.</b> Based on this observation, we have devised a novel bipartite caching strategy for use in <b>context</b> <b>data</b> provisioning that allows utilization of the OF and SE policies for SV and LV scoped <b>context</b> <b>data</b> during <b>context</b> provisioning.|$|R
40|$|Abstract — Pervasive {{computing}} introduces {{complex systems}} consisting of many users, sensors, and applications that should react to <b>context</b> <b>data,</b> provide services, and manipulate devices in a predictable and reliable manner. <b>Context</b> <b>data</b> sensed {{from the environment}} is largely uncertain {{due to lack of}} precision and imperfect or faulty sensors. Uncertainty is generally dealt with at the level of individual <b>context</b> <b>data.</b> Due to the difficulties associated with catering for data of such fine granularity in applications, the environment can be divided into larger chunks of context called situations. Situations, comprising of finer-grained events in the form of <b>context</b> <b>data,</b> warrant a different approach to dealing with uncertainty. Furthermore, we demonstrate that the uncertainty threshold of an event that triggers a behaviour is determined by the severity of the behaviour, making this task non-trivial. In this paper we detail an approach to dealing with uncertainty at the level of situations that takes into account the severity of the behaviour that it is triggering. I...|$|R
40|$|International audienceThe Internet of Things (IoT) {{is a very}} {{dynamic and}} {{heterogeneous}} environment that generates plethora of sensor data, accessible to develop new smart pervasive applications. However, the substantial amount of effort required to collect and disseminate <b>context</b> <b>data</b> with sufficient quality prevents the context consumers {{to take advantage of}} the IoT to its full potential. Consequently, novel research efforts are required to design middleware solutions able to deliver relevant <b>context</b> <b>data</b> to consumer applications while hiding the complexity of data distribution in heterogeneous and large-scale environments. This paper presents the INCOME framework that enables context producers to express the level of Quality of Context (QoC) they are able to provide and context consumers to set thresholds on the QoC they expect in order to determine how to distribute <b>context</b> <b>data.</b> Our experiments show that <b>context</b> <b>data</b> can be annotated with QoC metadata and distributed from producers to consumers with a reasonable additional cost even on resource-constrained devices such as Raspberry P...|$|R
40|$|Pervasive {{computing}} introduces {{complex systems}} consisting of many users, sensors, and applications that should react to <b>context</b> <b>data,</b> provide services, and manipulate devices in a predictable and reliable manner. <b>Context</b> <b>data</b> sensed {{from the environment}} is largely uncertain {{due to lack of}} precision and imperfect or faulty sensors. Uncertainty is generally dealt with at the level of individual <b>context</b> <b>data.</b> Due to the difficulties associated with catering for data of such fine granularity in applications, the environment can be divided into larger chunks of context called situations. Situations, comprising of finer-grained events in the form of <b>context</b> <b>data,</b> warrant a different approach to dealing with uncertainty. Furthermore, we demonstrate that the uncertainty threshold of an event that triggers a behaviour is determined by the severity of the behaviour, making this task non-trivial. In this paper we detail an approach to dealing with uncertainty at the level of situations that takes into account the severity of the behaviour that it is triggering...|$|R
40|$|The Internet of Things (IoT) {{is a very}} {{dynamic and}} {{heterogeneous}} environment that generates plethora of sensor data, accessible to develop new smart pervasive applications. However, the substantial amount of effort required to collect and disseminate <b>context</b> <b>data</b> with sufficient quality prevents the context consumers {{to take advantage of}} the IoT to its full potential. Consequently, novel research efforts are required to design middleware solutions able to deliver relevant <b>context</b> <b>data</b> to consumer applications while hiding the complexity of data distribution in heterogeneous and large-scale environments. This paper presents the INCOME framework that enables context producers to express the level of Quality of Context (QoC) they are able to provide and context consumers to set thresholds on the QoC they expect in order to determine how to distribute <b>context</b> <b>data.</b> Our experiments show that <b>context</b> <b>data</b> can be annotated with QoC metadata and distributed from producers to consumers with a reasonable additional cost even on resource-constrained devices such as Raspberry Pi...|$|R
40|$|Abstract. The {{dissemination}} of <b>context</b> <b>data</b> across a pervasive environment {{has proven to}} be a difficult problem. Techniques using gossiping algorithms offer simplicity and flexibility but often result in poor performance with respect to timeliness of delivery and communication cost. In this ongoing-work, we present enhanced gossiping algorithms that aim to improve the efficiency of <b>context</b> <b>data</b> delivery in a decentralised manner using network and data-driven approaches. ...|$|R
30|$|Context {{information}} {{is represented in}} the Context Provisioning Architecture using an XML based schema entitled ContextML. The defining principle in ContextML is that <b>context</b> <b>data</b> relates to an entity and is of a certain scope. The entity may be a user, a username, a SIP or an email address etc., and scope signifies the type of <b>context</b> <b>data</b> e.g. weather, location, activity and user preferences. Furthermore, a temporal validity is associated with ContextML encoded <b>context</b> <b>data</b> through the timestamp and expiry tags, which specify the time duration during which a specific context instance is considered valid. This feature of ContextML forms the basis of utilizing the caching function in the context brokers of the architecture.|$|R
40|$|Abstract—Nowadays {{personalised service}} {{provisioning}} becomes more feasible {{due to the}} increasing availability of smart devices, such as smart phones, tablet computers, Personal Digital Assistants and Playstations. These smart devices can dynamically detect the <b>context</b> <b>data</b> and upload them to support other interesting software applications, such as Facebook and Google maps. Context can become richer and more retrievable if links are established for semantically related <b>context</b> <b>data</b> sets. Taking advantage of the recent digital and Web technologies, this paper proposes a novel Linked Context model that applies the Linked Data principles to model and obtain <b>context</b> <b>data</b> from both users and services in one unified framework to support personalised service provisioning at runtime...|$|R
40|$|To be able {{to support}} context-awareness in an Ambient Intelligent (AmI) environment, one needs a way to model context. Previous {{research}} shows that a good way to model context is using Description Logics (DL). Since <b>context</b> <b>data</b> is often coming from sensors and therefore exhibits uncertain character, it is essential to take this uncertainty into account when exploiting and reasoning about <b>context</b> <b>data.</b> In this paper, we provide an event-based probabilistic method to model context uncertainty. Each context {{can be viewed as a}} probabilistic event, which can be either a basic or complex event. We show how to deal with correlations of events (i. e., inclusion, identicalness, disjunction, and independence) which are inherent in <b>context</b> <b>data</b> and investigate their in uences on the context uncertainty...|$|R
30|$|General {{methods for}} acquiring, storing, processing, analyzing, mining, modeling, querying, and {{making sense of}} <b>context</b> <b>data</b> for {{context-aware}} applications.|$|R
50|$|Inadequate {{attention}} may {{be paid to}} {{the analysis}} of <b>context</b> <b>data,</b> such as case mix, leading to dubious conclusions.|$|R
40|$|The {{concept of}} context {{originated}} in the ubiquitous computing domain where information regarding the user 2 ̆ 7 s situation was gathered using sensing devices, allowing the application to automatically adapt according to the user 2 ̆ 7 s current situation. Context awareness enabled the development of smart spaces in a multitude of different environments such as offices, homes, cars, hospitals and universities. Traditionally, the smart space that produced the <b>context</b> <b>data</b> was the sole consumer of that data and accessing the <b>context</b> <b>data</b> from third-party applications was cumbersome. Consequently, smart spaces became stovepipes; having little integration beyond their isolated application scenarios. The development of context-aware applications was limited to environments with access to rich sources of <b>context</b> <b>data</b> and which had large resources available {{for the development of}} context-aware applications. The development of these context-aware applications required expertise in the areas of context modelling, context gathering, <b>context</b> management and <b>data</b> privacy. As a result, the inclusion of context-aware behaviours in applications outside of ubiquitous computing research prototypes has been limited. This thesis defines and presents a distributed web-based model for the controlled shar-ing of <b>context</b> <b>data</b> between heterogeneous third-parties. A web-based approach is adopted in order to maximize the variety of potential applications, such as mobile, desktop, smart space and web-based applications. This `Context as a Service 2 ̆ 7 (CxaaS) approach to context management enables applications to access context-data from domains beyond their usual operational boundaries. The support for ubiquitous computing scenario oriented sharing of <b>context</b> <b>data</b> has been addressed in three key areas: (i) discovery of <b>context</b> <b>data</b> from remote sources concerning new and returning users, (ii) enabling the privacy sensitive sharing of <b>context</b> <b>data</b> between heterogeneous third-parties, and (iii) provision of a formal context model appropriate for use with the discovery and privacy mechanisms. The model defined in this thesis is evaluated with an implementation of a comprehensive business use-case. A RESTful approach is adopted in this particular instantiation of the CxaaS model which facilitates the rapid development of context-aware applications through the use of popular libraries. The core CxaaS context ontology is supported and mechanisms are provided to extend this model if necessary...|$|R
40|$|The {{continuous}} advancements and enhancements {{of wireless}} systems are enabling new compelling scenarios where mobile services can adapt {{according to the}} current execution context, represented by the computational resources available at the local device, current physical location, people in physical proximity, and so forth. Such services called context-aware require the timely delivery of all relevant information describing the current context, and that introduces several unsolved complexities, spanning from low-level <b>context</b> <b>data</b> transmission up to <b>context</b> <b>data</b> storage and replication into the mobile system. In addition, to ensure correct and scalable context provisioning, {{it is crucial to}} integrate and interoperate with different wireless technologies (WiFi, Bluetooth, etc.) and modes (infrastructure-based and ad-hoc), and to use decentralized solutions to store and replicate <b>context</b> <b>data</b> on mobile devices. These challenges call for novel middleware solutions, here called <b>Context</b> <b>Data</b> Distribution Infrastructures (CDDIs), capable of delivering relevant <b>context</b> <b>data</b> to mobile devices, while hiding all the issues introduced by data distribution in heterogeneous and large-scale mobile settings. This dissertation thoroughly analyzes CDDIs for mobile systems, with the main goal of achieving a holistic approach to the design of such type of middleware solutions. We discuss the main functions needed by <b>context</b> <b>data</b> distribution in large mobile systems, and we claim the precise definition and clean respect of quality-based contracts between context consumers and CDDI to reconfigure main middleware components at runtime. We present the design and the implementation of our proposals, both in simulation-based and in real-world scenarios, along with an extensive evaluation that confirms the technical soundness of proposed CDDI solutions. Finally, we consider three highly heterogeneous scenarios, namely disaster areas, smart campuses, and smart cities, to better remark the wide technical validity of our analysis and solutions under different network deployments and quality constraints...|$|R
40|$|Context-awareness {{is a key}} {{requirement}} of human-centric computing systems. Applications may ease user interaction or even anticipate {{the behavior of the}} user when utilizing information about the current context. The pervasive provision of <b>context</b> <b>data</b> represents a major challenge in this scope. For that reason we introduce an approach for gathering, disseminating, and interpreting <b>context</b> <b>data</b> in dynamic, highly distributed systems, which are mostly disconnected from central networking infrastructures. On the one hand we describe architectural consideration addressing functional elements and their organization in the computing environment. On the other hand we incorporate a model for request-driven context gathering and a biologically-inspired approach for weighting, storing and forwarding <b>context</b> <b>data.</b> The conceptual considerations are complemented with a description of our first efforts in realizing our approach on top of a peer-to-peer framework...|$|R
40|$|Abstract. We {{study the}} {{extension}} of context ontologies towards enhanced qualitative spatio-temporal representations and reasoning. Our goal is to model and extract events {{that are important to}} the user from her context log, i. e. the history of <b>context</b> <b>data</b> collected over a longer period. We present a case study based on actual context ontologies and <b>context</b> <b>data</b> from the ContextWatcher mobile application. The presented work has been fully implemented in the DL-based reasoning engine RACERPRO. ...|$|R
40|$|In {{this paper}} we study the synergy between user behavior, <b>context</b> <b>data,</b> and {{semantic}} information {{in order to}} enable future services to adapt to different situations based on the recommendations of a service-independent recommender. Therefore, we propose a system that delivers context-aware recommendations, {{which are based on}} provided feedback, <b>context</b> <b>data,</b> and an ontology-based content categorization scheme. We provide a detailed overview of the specification, a short description of a possible service scenario and a discussion of the results...|$|R
