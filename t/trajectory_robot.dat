4|931|Public
40|$|ABSTRACT. In {{this study}} dynamic {{equations}} of a Stanford type spherical robot is developed. In the work {{space of the}} robot, straight line trajectory is chosen for the end effector. On this <b>trajectory,</b> <b>robot</b> travels with different time functions. These functions are cubic segment, bang-bang parabolic blend, simple harmonic, cycloid, and 3 - 4 - 5 polynomial. Total consumed energy curves are obtained with respect to travel times for each trajectory. Results show that cubic segment trajectory function spends minimum energy...|$|E
40|$|This paper {{presents}} a direct method for computing the time optimal trajectory for a robot among stationary and moving obstacles, subject to robot's dynamics and actuator constraints. The motion planning problem is first formulated as an optimization problem, and then solved numerically using a gradient descent. The initial guess for the optimization is generated using a method {{based on the}} concept of Velocity Obstacles. The method is demonstrated for a 2 -DOF planar manipulator moving in static and dynamic environments. 1. Introduction Motion planning is central to the operation of autonomous robots. It concerns the generation of a trajectory from start to goal that satisfies objectives, such as minimizing path distance or motion time, while avoiding obstacles in the environment and satisfying the robot mechanics (kinematics and dynamics). We distinguish between planning and control in that the former generates a nominal trajectory, whereas the latter tracks that <b>trajectory.</b> <b>Robot</b> mot [...] ...|$|E
40|$|We {{present a}} method that allows {{automatic}} reaction of a robot to physical collisions, while preserving {{as much as possible}} the execution of a Cartesian task for which the robot is kinematically redundant. The work is motivated by human-robot interaction scenarios, where ensuring safety is of primary concern whereas preserving task performance is an appealing secondary goal. Unexpected collisions may occur anywhere along the manipulator structure. Their fast detection is realized using our previous momentum-based method, which does not require any external sensing. The reaction torque applied to the joints reduces the effective robot inertia seen at the contact and lets the robot safely move away from the collision area. If we wish, however, to continue the execution of a Cartesian <b>trajectory,</b> <b>robot</b> redundancy can be exploited by projecting the reaction torque into the null space of a dynamic task matrix so as not to affect the original end-effector motion. This leads {{to the use of the}} so-called dynamically consistent approach to redundancy resolution, which is further elaborated in the paper. A partial task relaxation strategy can also be devised, with the objective of keeping contact forces below a user-defined safety threshold. Simulation results are reported for the 7 R KUKA/DLR lightweight robot arm. © 2008 IEEE...|$|E
30|$|In {{works that}} have {{implemented}} the target <b>trajectory,</b> <b>robots</b> {{have been trained}} to learn from human motions as in [17, 18], and to follow the way a human walks [19]. In other cases, robots have been made to model unknown environments as in [20]. However, these behavior analyses for human motion have not been specifically implemented in any prediction algorithms of target's trajectory.|$|R
30|$|<b>Trajectory</b> of the <b>robot’s</b> movement.|$|R
30|$|In {{this section}} {{the results of}} {{computational}} simulations of the mobile <b>robot</b> <b>trajectory</b> in some specific conditions are presented. These conditions are {{in agreement with the}} experimental simulations recently realized in the University of Craiova in order to analyze the <b>trajectory</b> of this <b>robot</b> type.|$|R
40|$|In {{this paper}} a {{real-time}} seam tracking {{algorithm is proposed}} that can cope with the accuracy demands of robotic laser welding. A trajectory-based control architecture is presented, {{which had to be}} developed for this seam tracking algorithm. Cartesian locations (position and orientation) are added to the <b>robot</b> <b>trajectory</b> during the <b>robot</b> motion. In this way, sensor information obtained during the robot motion is used to generate the <b>robot</b> <b>trajectory</b> while moving. Experiments have been performed to prove the tracking capabilities of the seam tracking algorithm...|$|R
40|$|We {{present an}} {{algorithm}} for obtaining collision-avoiding <b>robot</b> <b>trajectories</b> we call SPARTA (SPline-based ADMM for <b>Robot</b> <b>Trajectory</b> Avoidance). We break {{the problem of}} solving for collision-avoiding <b>trajectories</b> of <b>robots</b> into tractable sub-problems, using {{the framework of a}} recently developed generalization of ADMM, the Three Weight Algorithm. The generated paths are smooth, include physical constraints of the robots, and the convergence speed is such that it becomes fea-sible for real-time applications. We physically implemented our algorithm using mobile robots and showcase the results. The problem of finding smooth collision-avoiding paths for a set of moving objects arises in many different settings, such as <b>robot</b> <b>trajectory</b> planning, swarm robotics, and self-driving vehicles. There are two broad popular approaches to the problem. One involves searching for feasible paths by first performing a guided random search using e. g. Rapidly-Exploring Random Trees (RRTs) [1, 2], and later smoothing the paths via optimization around the feasible path. The other approach formulates the task as a constrained non-linear optimization problem directly, typically linearizin...|$|R
40|$|National audienceRouting a {{fleet of}} robots in a known surface is a complex problem. It {{consists}} in the determinationof the exact <b>trajectory</b> each <b>robot</b> has to follow to collect information. The objective isto maximize {{the exploration of the}} given surface. To ensure the robots can execute the missionin a collaborative manner, connectivity constraints are considered. These constraints guaranteethat robots can communicate among each other and share the collected information. Moreover,the <b>trajectories</b> of the <b>robots</b> need to respect autonomy constraints...|$|R
40|$|Recently, human–robot {{cooperation}} (HRC) {{research activities}} {{have focused on}} the development of new methodologies for the generation of safe <b>robot</b> <b>trajectories.</b> However, the applicability of such methodologies in a real context is limited due to the inherent uncertainty of <b>robot</b> <b>trajectory</b> execution time (i. e. the robot can avoid the worker by modifying its velocity along the path). This paper proposes an approach to estimate a confidence interval on <b>robot</b> <b>trajectory</b> execution time for scenarios in which human–robot space sharing is required. First, human arm movements are studied for a given set of assembly collaborative tasks: worker occupancy volumes and occupancy volume probabilities are derived. Then, a finite number of alternative <b>robot</b> <b>trajectories,</b> crossing human occupancy volumes with different occupancy probabilities, are generated. It is therefore possible to estimate a probability for the robot to reduce its velocity, and a confidence interval on the robot execution time. The application on a real assembly case is discussed...|$|R
40|$|This {{dissertation}} {{is concerned}} with the curvature theory of a rigid body moving in three-dimensional space. While the theory is applied to <b>robot</b> <b>trajectory</b> planning, the results also provide insight into rigid body motion in general. ^ The motion of a robot end-effector in space has six degrees of freedom, in general, and six independent parameters are required to describe the position and orientation of the end-effector. The <b>robot</b> <b>trajectory,</b> describing the motion of a robot end-effector, is represented in this dissertation by a ruled surface and an additional parameter, referred to as the spin angle. This is believed to be a more efficient approach than the conventional matrix representation which shows redundancy of parameter. ^ A method of <b>robot</b> <b>trajectory</b> planning is proposed based on the curvature theory of ruled surfaces. The curvature theory of general and special ruled surfaces are studied. The special ruled surfaces, referred to as developables, are the cylindrical surface, cone, and tangent surface. The curvature theory is used to determine the differential properties of the motion of a robot end-effector. The differential properties of the robot end-effector motion are then related to the time-dependent properties of the motion which are essential in the <b>robot</b> <b>trajectory</b> planning. ^ In many practical applications, a <b>robot</b> <b>trajectory</b> can not be represented by a closed-form parametric expression of a ruled surface. In this case, a geometric modeling technique, based on the Ferguson curve model, is used to generate a ruled surface. This method is incorporated into the <b>robot</b> <b>trajectory</b> planning. ...|$|R
30|$|Introducing {{the above}} factors into Eq. (3), the <b>robot</b> <b>trajectory</b> {{equation}} of the quintic polynomial can be derived.|$|R
40|$|This work {{speaks about}} a {{suggestion}} of <b>trajectory</b> of mobile <b>robot</b> with nonholonomic movement limits and differential chassis while passing through a “T“ shaped crossroad. In the theoretical part some methods generally used to solve this task of planning a <b>trajectory</b> of the <b>robot</b> will be explained. In the practical part this task will be solved by an algorithm for searching the optimal trajectory {{to pass through the}} crossroad...|$|R
40|$|The {{use of a}} {{graphical}} {{system for}} the programming of industrial robots offers a number of advantages. Graphical systems employ an interface that {{is much easier to}} use. The resulting motion trajectories can be simulated and tested for collisions or singular points. Contemporary graphical systems use the geometry of the objects that are to be handled or processed in order to generate <b>robot</b> motion <b>trajectories.</b> <b>Robot</b> motions are however constrained by the process requirements which should be one of the main sources of the generation of <b>robot</b> motion <b>trajectories.</b> In this article the methodology of the generation of the <b>robot</b> motion <b>trajectories</b> in three commercial systems is examined as well as the requirements of process-related robot programming with special emphasis on high-quality arc welding...|$|R
40|$|Abstract — We {{deal with}} the problem of {{planning}} collision-free <b>trajectories</b> for <b>robots</b> operating in a shared space. Given the start and destination position for each of the robots, the task is to find <b>trajectories</b> for all <b>robots</b> that reach their destinations with minimum total cost such that the robots will not collide when following the found trajectories. Our approach starts from individually optimal <b>trajectory</b> for each <b>robot,</b> which are then penalized for being in collision with other robots. The penalty is gradually increased and the individual trajectories are iteratively replanned to account for the increased penalty until a collision-free solution is found. Using extensive experimental evaluation, we find that such a penalty method constructs trajectories with near-optimal cost on the instances where the optimum is known and otherwise with 4 - 10 % lower cost than the trajectories generated by prioritized planning and up to 40 % cheaper than trajectories generated by local collision avoidance technique ORCA. I...|$|R
40|$|The paper {{deals with}} a novelty tool for {{symbolic}} regression - Analytic Programming (AP) which is able to solve various problems from the symbolic regression domain including setting an optimal <b>trajectory</b> for <b>robots</b> in space and other industries. In this contribution main principles of AP are described and explained. In {{second part of the}} article how AP was used for setting an optimal <b>trajectory</b> for <b>robot</b> according the user requirements is in detail described. An ability to create so called programs, as well as Genetic Programming (GP) or Grammatical Evolution (GE) do, is shown in that part. AP is a superstructure of evolutionary algorithms wich are necessary to run AP. In this contribution SelfOrganizing Migrating Algorithm (SOMA) and Differential Evolution (DE) as two evolutionary algorithms were used to carry simulations out...|$|R
40|$|Abstract. This paper {{combines}} the related developed technology and current functional requirements, {{show you a}} multifunction household services given <b>trajectory</b> transfer <b>robot</b> with low cost,which is designed {{for the elderly and}} wreck. And the R&D of this robot has been finished according to the status of domestic and international developmen...|$|R
3000|$|... 1 can {{be changed}} to {{accelerate}} or decelerate while keeping the <b>trajectories</b> of the <b>robot</b> {{as long as the}} switching points are not changed.|$|R
40|$|Abstract: The paper {{describes}} three {{applications of}} industrial robot in shoe production. Two of them – automation of shoe lasting machine and automation of finishing process are {{extremely difficult to}} automate and are according to our knowledge first successful automation of the above processes. The focus of the paper is on automatic <b>robot</b> <b>trajectory</b> generation directly from CAD shoe design data. The paper shows also how kinematic redundancy resolution approach was used in order to design fault tolerant <b>robot</b> <b>trajectories...</b>|$|R
30|$|In this paper, the <b>trajectories</b> of the <b>robots</b> to {{go around}} the objects and to go between the object and handcarts are {{calculated}} in advance.|$|R
40|$|Abstract—This paper {{presents}} {{a novel approach}} to an online <b>trajectory</b> planning of <b>robot</b> arms for the interception of a fastmaneuvering object under torque and velocity constraints. A body axis is newly introduced as a trajectory-planning coordinate {{in order to meet}} the position and the velocity matching conditions for a smooth grasp of the fast-maneuvering object. Using the position of the object and the end-effector in the inertia axis, the acceleration commands are generated in the X-, Y-, and Z-directions of the body axis and the acceleration commands are modified considering the torque and the velocity constraints. The trajectory planning in the X-direction becomes the speed planning to achieve the maximum speed, whereas the trajectory planning in the Y- and Z-directions becomes the direction planning where a missile-guidance algorithm is employed to intercept the maneuvering object. Finally, the acceleration commands in the body axis are transformed into the angle commands of the end-effector in the joint axis, which is used as the actual <b>trajectory</b> commands in <b>robot</b> arms. Index Terms—Fast-maneuvering object, guidance algorithm, online <b>trajectory</b> planning, <b>robot</b> arms, torque and velocity constraints. I...|$|R
40|$|This is {{a conference}} paper © 2012 IEEE. Personal {{use of this}} {{material}} is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse of any copyrighted component of this work in other works. Learning and reproducing complex movements is an important skill for robots. However, while humans can learn and generalise new complex <b>trajectories,</b> <b>robots</b> are often programmed to execute point-by-point precise but fixed patterns. This study proposes a method for decomposing new complex trajectories into a set of known robot-based primitives. Instead of reproducing accurately an observed <b>trajectory,</b> the <b>robot</b> interprets it as a composition of its own previously acquired primitive movements. The method attempts initially a rough approximation {{with the idea of}} capturing the most essential features of the movement. Observing the discrepancy between the demonstrated and reproduced trajectories, the process then proceeds with incremental decompositions. The method is tested on both geometric and human generated trajectories. The shift from a data-centred view to an agent-centred view in learning trajectories results in generalisation properties like the abstraction to primitives and noise suppression. This study suggests a novel approach to learning complex robot motor patterns that builds upon existing motor skills. Applications include drawing, writing, movement generation and object manipulation in a variety of tasks...|$|R
40|$|In {{more and}} more {{commercial}} scenarios, radio frequency identification (RFID) is used to tag assets on a large scale. These given tag infrastructures offer themselves for the navigation of autonomous transport vehicles and service robots. In this paper we investigate loop closure for graphbased simultaneous localization and mapping (SLAM) and trajectory estimation in environments with such dense RFID infrastructures: We compare different methods of inferring that a place has been revisited, examine their robustness, and show how the <b>trajectory</b> of the <b>robot</b> can be reconstructed. Given this <b>trajectory,</b> a <b>robot</b> is able to map transponder positions or to localize itself with RFID and odometry alone and without a reference localization system. The accuracy of our approach is shown {{through a series of}} experiments with a mobile robot...|$|R
40|$|This paper {{describes}} how B-splines {{can be used}} to construct joint <b>trajectories</b> for <b>robot</b> manipulators. The motion is specified by a sequence of Cartesian knots, i. e., positions and orientations of the end effector of a robot manipulator. For a six joint robot manipulator, these Cartesian knots are transformed into six sets of joint variables, with each set corresponding to a joint. Splines, represented as linear combinations of B-splines, are used to fit the sequence of joint variables for each of the six joints. A computationally very simple, recurrence formula is used to generate the 8 -splines. This approach is used {{for the first time to}} establish the mathematical model of <b>trajectory</b> generation for <b>robot</b> manipulators, and offers flexibility, computational efficiency, and a compact representation...|$|R
30|$|In this paper, {{from the}} point of view of robot running time, the <b>trajectory</b> of <b>robot</b> joint is planned by the quintic {{polynomial}} interpolation under the premise of smooth operation of the manipulator, and the time interval of trajectory interpolation point is optimized by the improved adaptive genetic algorithm, so that the robot accomplishes task time as short as possible.|$|R
40|$|The {{goal of the}} RaPiDo {{project is}} to enable {{industrial}} robots to handle objects that are positioned randomly. There are two important issues {{that need to be}} resolved. The first is to detect the object to handle, and measure it’s position. The second challenge is to calculate a <b>trajectory</b> the <b>robot</b> can follow towards this object, to pick it up. status: publishe...|$|R
5000|$|... 8 Man {{was ranked}} ninth in Mania Entertainment's 10 Most Iconic Anime Heroes written by Thomas Zoth, who commented that, [...] "Before Cyborg 009, The Six Million Dollar Man, and Robocop, there was 8 Man: The first cyborg manga and anime hero. Building on Astro Boy, 8 Man helped {{to shape the}} <b>trajectory</b> of <b>robot</b> and cyborg heroes for the next decade." ...|$|R
40|$|Abstract—This paper {{demonstrates}} {{the ability of}} the harmonic potential field (HPF) planning method to generate a well-behaved constrained path for a robot with second order dynamics in a cluttered environment. It is shown that HPF-based controllers may be developed for holonomic, as well as nonholonomic, robots to effectively suppress the effect of inertial forces on the <b>robot’s</b> <b>trajectory</b> while maintaining all the attractive features of a purely kinematic HPF planner. The capabilities of the suggested navigation controller are demonstrated using simulation results for the holonomic and nonholonomic cases. Index Terms—Intelligent control, nonholonomic <b>robots,</b> <b>trajectory</b> generation. I...|$|R
40|$|In this paper, methods {{based on}} various spline {{techniques}} {{for planning and}} fast modifications of a <b>trajectory</b> for <b>robot</b> manipulators are investigated. Algebraic and trigonometric splines, their combined use, {{and the use of}} the B-spline technique are analyzed and compared in detail. In so doing, we focus on the performance of sudden changes in a predefined trajectory, e. g. obstacle avoidance in real-time applications. Some comparative examples illustrate our results...|$|R
40|$|To obtain {{minimum time}} or minimum energy <b>trajectories</b> for <b>robots</b> it is {{necessary}} to employ planning methods which adequately consider the platform’s dynamic properties. A variety of sampling, graph-based or local receding-horizon optimisation methods have previously been proposed. These typically use simpliﬁed kino-dynamic models to avoid the signiﬁcant computational burden of solving this problem in a high dimensional state-space. In this paper we investigate solutions from the class of pseudospectral optimisation methods which have grown in favour amongst the optimal control community in recent years. These methods have high computational efficiency and rapid convergence properties. We present a practical application of such an approach to the robot path planning problem to provide a <b>trajectory</b> considering the <b>robot’s</b> dynamic properties. We extend the existing literature by augmenting the path constraints with sensed obstacles rather than predeﬁned analytical functions to enable real world application...|$|R
40|$|The {{objective}} {{of this study is}} to improve the add-in package of off-line programming software RobotStudio™ and to develop a new strategy for generating the <b>robot</b> <b>trajectory</b> according to the kinematic parameters of thermal spraying. The computed temperature evolution relative to the generated <b>robot</b> <b>trajectory</b> on the coating surface is also considered in this study. The add-in package Thermal Spray Toolkit (TST) integrated in RobotStudio™ is developed to generate the <b>robot</b> <b>trajectory</b> for thermal spraying. The improved TST for new version of RobotStudio™ is composed of two principle modules:PathKit: generation of <b>robot</b> <b>trajectory</b> on the free-form coating surface. ProfileKit: modeling the coating profile and prediction the coating thickness based on kinematic parameters. The existing deficiency of TST leads to the development of an advanced <b>robot</b> <b>trajectory</b> generation methodology. In this study, the new approach implements the robotic trajectory planning in an interactive manner between RobotStudio™ and the finite element analysis software (FES). It allows rearranging the imported node created on the surface of workpiece by FES and in turns generating the thermal spraying needed <b>robot</b> <b>trajectories.</b> A coupling between the <b>robot</b> <b>trajectory</b> and the heat distribution on the substrate has been developed, which allows analyzing the temperature evolution during the thermal spray process, it helps to minimize thermal variations on the substrate and to select the appropriate execution sequence of trajectory. L’objectif de cette étude est d’améliorer l’extension du logiciel de programmation hors-ligne RobotStudio™ existante et de développer une nouvelle stratégie pour générer la trajectoire du robot par rapport aux paramètres essentiels de projection thermique. Notamment, l’historique de la température par rapport à la trajectoire générée est prise en compte dans cette étude. L’extension logicielle Thermal Spray Toolkit (TST) intégrée dans le cadre de RobotStudio™ est spécialement développée pour générer la trajectoire du robot en projection thermique. L’amélioration de l’extension TST dans la nouvelle version de RobotStudio™ est mise au point sur deux modules principaux :PathKit : génération de la trajectoire sur des pièces complexes. ProfileKit : modélisation du cordon singulier du dépôt et prédiction de son épaisseur en fonction des paramètres opératoires. Les déficiences existantes de l’extension TST impliquent de mettre en œuvre une méthode plus avancée qui permettra de générer la trajectoire du robot en utilisant le maillage pour le calcul d’élément finis. Ainsi, l’opération de projection thermique pourra être menée. Dans cette étude, la méthodologie de maillage est introduite afin de fournir une stratégie de choix de points de trajectoire et l’obtention d’orientations de ces points de trajectoire sur la surface à revêtir. Un module dit MeshKit est donc ajouté dans l’extension TST afin de lui apporter ces fonctionnalités nécessaires. Un couplage entre la trajectoire du robot et la répartition de chaleur du substrat a été développé, ce qui permet d’étudier l’évolution de température pendent le processus de projection thermique...|$|R
40|$|This paper {{presents}} {{an application of}} visual tracking system on mobile robot positioning. The proposed method is verified on a constructed low-cost tracking system consisting of 2 DOF pan-tilt unit, web camera and distance sensor. The motion of pan-tilt joints is realized and controlled by using LQR controller running on microcontroller. Without needs of camera calibration, <b>robot</b> <b>trajectory</b> is tracked by Kalman filter integrating distance information and joint positions. The experimental results demonstrate validity of the proposed positioning technique and the obtained mobile <b>robot</b> <b>trajectory</b> is benchmarked against laser rangefinder positioning. The implemented system can successfully track a mobile robot driving at 14 cm/s...|$|R
40|$|In {{this paper}} we generalize {{previous}} work {{in which the}} fixed points of dynamical systems were used to construct obstacle-avoiding, goalattracting <b>trajectories</b> for <b>robots</b> to more complex attractors such as limit cycles {{in the form of}} closed planar curves. Following the development of a formalism for dealing with a mechanical system, some of whose coordinates are constrained to follow the trajectories of a set of coupled differential equations, we discuss how to construct, analyze, and solve a planar dynamical system whose limit set is one or more user-specified closed curves or limit cycles. This work finds its relevance {{in a wide range of}} applications. Our focus has mainly been on planning tool <b>trajectories</b> for industrial <b>robot</b> manipulators with applications such as welding and painting. However, the generalization from fixed points to limit cycles is also applicable when controlling automatic guided vehicles. KEY WORDS—trajectory planning constraint mechanics, dynamical systems, limit cycles 1...|$|R
40|$|Abstract. This paper {{proposes a}} new method of 6 -DOF serial <b>robot’s</b> <b>trajectory</b> planning. Ensuring {{to satisfy the}} {{physical}} constraints of space conditions, the <b>robot’s</b> <b>trajectory</b> is interpolated in the Cartesian coordinate system, and using quaternion interpolation to solve the multiple solution problem in RPY interpolation. Meanwhile, the interpolated position information is transformed into the angular displacement information of the joint coordinate system, and the joint space trajectory planning is achieved using the genetic algorithms integrated velocity, acceleration, jerk and torque and other important kinematic and dynamic constraints. In robot safety and stability, the method {{is better than the}} general approach, and it has both the ideal trajectory parameters of the global search ability and performance planning...|$|R
40|$|Abstract — In {{this paper}} {{we present a}} method for automati-cally {{generating}} optimal <b>robot</b> <b>trajectories</b> satisfying high level mission specifications. The motion of the robot in the envi-ronment is modeled as a general transition system, enhanced with weighted transitions. The mission is specified by a general linear temporal logic formula. In addition, we require that an optimizing proposition must be repeatedly satisfied. The cost function that we seek to minimize is the maximum time between satisfying instances of the optimizing proposition. For every environment model, and for every formula, our method computes a <b>robot</b> <b>trajectory</b> which minimizes the cost function. The problem is motivated by applications in robotic mon-itoring and data gathering. In this setting, the optimizing proposition is satisfied at all locations where data can be up-loaded, and the entire formula specifies a complex (and infinite horizon) data collection mission. Our method utilizes Büchi automata to produce an automaton (which {{can be thought of}} as a graph) whose runs satisfy the temporal logic specification. We then present a graph algorithm which computes a path corresponding to the optimal <b>robot</b> <b>trajectory.</b> We also present an implementation for a robot performing a data gathering mission in a road network. I...|$|R
40|$|Abstract. In {{this paper}} we {{describe}} MRSCL Geometry a collaborative educational activity that explores {{the use of}} robotic technology and wirelessly connected Pocket PCs as tools for teaching and reinforcing concepts of basic geometry. The application {{can be considered as}} ”robotic aided education ” since the robot acts as a mediator in the learning experience, while the students are able to learn concepts that are not related to Robotics. One mayor difference with previous computer based teaching tools is that the robot motions are not absolute, but relative to external references and past moves mapped in the real world. Furthermore, MRSCL Geometry helps students to develop social abilities such as how to communicate with their pairs, and how to interpret and describe information about lengths, positions, and <b>trajectories.</b> <b>Robot</b> autonomous navigation is carry out by developing the teaching activities in a simplified world consistent of clear space and bright color landmarks that are used as the main reference to continuously track the robot position. In this respect, we develop vision algorithms for the real time detection and tracking of landmarks, and we also implement distance estimation and control algorithms for moving and turning the robot accurately. ...|$|R
