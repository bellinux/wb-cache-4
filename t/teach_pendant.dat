38|15|Public
25|$|The <b>teach</b> <b>pendant</b> or PC {{is usually}} {{disconnected}} after programming and the robot then {{runs on the}} program that has been installed in its controller. However a computer {{is often used to}} 'supervise' the robot and any peripherals, or to provide additional storage for access to numerous complex paths and routines.|$|E
25|$|Positioning by Cartesian {{coordinates}} may be done {{by entering}} the coordinates into the system or by using a <b>teach</b> <b>pendant</b> which moves the robot in X-Y-Z directions. It is much easier for a human operator to visualize motions up/down, left/right, etc. than to move each joint one at a time. When the desired position is reached it is then defined in some way particular to the robot software in use, e.g. P1 - P5 below.|$|E
2500|$|Teach pendant: Robot {{positions}} can {{be taught}} via a <b>teach</b> <b>pendant.</b> This is a handheld control and programming unit. The common features of such units are the ability to manually send the robot to a desired position, or [...] "inch" [...] or [...] "jog" [...] to adjust a position. They also have a means to change the speed since a low speed is usually required for careful positioning, or while test-running through a new or modified routine. A large emergency stop button is usually included as well. Typically once the robot has been programmed {{there is no more}} use for the <b>teach</b> <b>pendant.</b>|$|E
40|$|Abstract: A {{quantitative}} {{performance evaluation}} of a robot teaching method using a force/moment direction sensor is presented. The performance of the teaching method using the force/moment direction sensor is compared with the conventional <b>teaching</b> <b>pendant</b> method. Two types of teaching tasks were designed and the teaching times required to complete the teaching tasks were measured and compared. Task A requires a teaching motion that involves four degrees of freedom motion. Task B requires a teaching motion that involves {{six degrees of freedom}} motion. It was found that by, using the force/moment direction sensor method, the teaching times were reduced by 25 % for Task A and 45 % for Task B compared to the <b>teaching</b> <b>pendant</b> method...|$|R
40|$|At present state, {{almost the}} {{industrial}} robot tasks are {{performed by the}} teaching playback method, in which the robot repeats positioning its joint angles, which are taught manually in advance using a <b>teaching</b> <b>pendant,</b> etc. This method is based on comparatively high repeatability of a robot arm. The {{problem here is that}} the laborious and time-consumin...|$|R
40|$|Superalloy parts {{joined with}} less distortion. Carbon dioxide laser beam {{directed}} by optics in numerically controlled robot arm welds shell-type turbopump housings having complicated shapes. 5 -kW laser, following single programmed three-dimensional pass, produces high-quality, full-penetration weld pass in age-hardenable nickel superalloy. Operator easily programs robot by using <b>teaching</b> <b>pendant</b> to track weld joint and keeps laser focused on workpiece while following contour of shell. Shells welded in rapid succession, with minimal change in setup for each...|$|R
5000|$|... #Caption: A typical well-used <b>teach</b> <b>pendant</b> with {{optional}} mouse ...|$|E
5000|$|Teach pendant: Robot {{positions}} can {{be taught}} via a <b>teach</b> <b>pendant.</b> This is a handheld control and programming unit. The common features of such units are the ability to manually send the robot to a desired position, or [...] "inch" [...] or [...] "jog" [...] to adjust a position. They also have a means to change the speed since a low speed is usually required for careful positioning, or while test-running through a new or modified routine. A large emergency stop button is usually included as well. Typically once the robot has been programmed {{there is no more}} use for the <b>teach</b> <b>pendant.</b>|$|E
5000|$|There is a <b>teach</b> <b>pendant,</b> {{rather like}} those of {{full-size}} industrial robots, that can {{be connected to the}} controller. Using this, the robot can be [...] "taught" [...] simple programs using the pendant and can then repeat them.|$|E
40|$|Abstract: The main {{objective}} {{of this paper is}} to present a soft <b>teaching</b> <b>pendant</b> as an alternative to those currently used in industry, such as the Yaskawa Motoman HP 3 J. The GUI has separate Tabs with local menus and buttons that depict different functionalities found in its industrial equivalent. Some of the main functions include direct kinematics, inverse kinematics, path planning, linear interpolation control navigation, joint interpolation control navigate and robot arm path planning movement. Furthermore, the soft pendant will include other functionalities, such as authentication, validations and safety measures, as well as descriptive help and error messages. The system was tested and evaluated as a teaching tool to control the 6 -axis Yaskawa Motoman HP 3 J industrial robot, used by mechatronic students in the University of Nottingham. The paper will present the direct and inverse kinematics of the 6 -axis robot, as well as key API functions used in moving the manipulator. The paper will conclude by comparing this soft <b>teaching</b> <b>pendant</b> functions to those found in its industrial equivalent, highlighting the advantages as a good teaching tool to aid students in understanding basic robotics fundamentals...|$|R
40|$|Human-robot {{interaction}} requires intuitive interface that is {{not possible}} using devices, such as, the joystick or <b>teaching</b> <b>pendant,</b> which also require some trainings. 	Instruction by gesture {{is one example of}} an intuitive interfaces requiring no training, and pointing is one of the simplest gestures. We propose simple pointing 	recognition for a mobile robot having an upwarddirected camera system. The robot using this recognizes pointing and navigates through simple visual feedback control to where the user points. This paper explores the feasibility and utility of our proposal as shown by the results of a questionnaire on proposed and conventional interface...|$|R
40|$|In {{recent years}} robots {{have become more}} {{adaptive}} and aware of the surroundings which enables them for use in human-robot collaboration. By introducing robots into the same working cell as the human, then the two can collaborate by letting the robot deal with heavy lifting, repetitive and high accuracy tasks while the human focuses on tasks that needs {{the flexibility of the}} human. Collaborative robots already exists today in the market but the usage of these robots are mainly to work in close proximity. Usually a <b>teaching</b> <b>pendant</b> is used to program a robot by moving it using a joystick or buttons. Using this <b>teaching</b> <b>pendant</b> for programming is usually quite slow and requires training which means that few can operate it. However, recent research shows that there exist several application using multi-modal communication systems to improve the programming of a robot. This kind of programming will be necessary to collaborate with a robot in the industry since the human in a collaborative task might have to teach the robot how to execute its task. This project aims to introduce a programming-by-guidance system into assembly manufacturing where the human can assist the robot by teaching the robot how to execute its task. Three technologies will be combined, speech recognition, haptic control, and augmented reality. The hypothesis is that with these three technologies an effective and intuitive programming-by-guidance system can be used within the assembly manufacturing industry. This project have three main motivators: Allowing workers, with no robot programming expertise, to teach the robot how to execute its task in an assembly manufacturing system; Reducing the development time of the robot by introducing advanced programming-by-guidance technology; Showing that augmented reality can add additional information that is useful when programming the robot. Research proposal, PhD programme, University of Skövde</p...|$|R
50|$|OLP {{does not}} {{interfere}} with production as {{the program for the}} robot is created outside the production process on an external computer.This method contradicts to the traditional on-line programming of industrial robots where the robot <b>teach</b> <b>pendant</b> is used for programming the robot manually.|$|E
50|$|ControllerSupervisor centralizes all the {{information}} related to Orchestra Control Engine. It receives information from the HMI, the <b>Teach</b> <b>Pendant</b> and other software components. Such information is sorted to the other components even if direct channels of communication among the various components for the specific information interchange are foreseen.|$|E
50|$|The <b>teach</b> <b>pendant</b> or PC {{is usually}} {{disconnected}} after programming and the robot then {{runs on the}} program that has been installed in its controller. However a computer {{is often used to}} 'supervise' the robot and any peripherals, or to provide additional storage for access to numerous complex paths and routines.|$|E
40|$|Many robots {{have been}} built for {{manufacturing}} purposes {{and can be found}} in factories around the world. The idea behind this project is to reduce the utilization of human energy especially in manufacturing industry. The project involves of development pick and place system a using ABB IRB 1400 industrial robot. In this project, the IRB 1400 robot was program to perform pick and place task. The robot was equipped with robotic sensor to detect the work pieces. Using the ABB robot’s Rapid software, the program was downloaded to the robot controller, S 4 Cplus. By teaching the robot points with the <b>Teach</b> <b>Pendants,</b> we can execute the ABB robot program sequences. In the manufacturing system, conveyor work as a method of work part delivery. Model of small conveyor was constructed to delivery the work pieces from the incoming part. The sensors were mounted to the conveyor, which is to sense the incoming material and also to control the operation of the conveyor motor. The robot that was programmed will pick and place the material in the outgoing part. The operation of the system working continuously since the sensor detected the incoming material...|$|R
40|$|Due to the {{character}} of the original source materials and the nature of batch digitization, quality control issues may be present in this document. Please report any quality issues you encounter to digital@library. tamu. edu, referencing the URI of the item. Includes bibliographical references. This study was conducted to determined the population stereotypes of a group of novice robot users. The study focused on the stereotypes concerning the design of <b>teach</b> <b>pendants</b> for horizontally articulated robots. Expectancies from a written survey showed most of the naive users preferred to use human-like terms (e. g. elbow, wrist, arm) to identify the parts of a robot. Familiar motion terms (e. g. left, right, up, down) were preferred to describe the motions of the robot. The application of the names to a motion were dependent on the users orientation to the robot. While answering the survey, most users preferred to either be in front of or behind the robot model. Responses for control-motion expectancies in the horizontal plane were dependent on the users orientation to the robot. Controlmotion expectancies for vertical and rotational motions were independent of orientation. The study also compared the usability of pendant designs on two common industrial robots. One pendant (Pendant A) was designed with technical labeling (e. g. Y+/-, X+/-) and allowed for continuous control of the robot's speed. The other pendant (Pendant B) was designed with simple labeling (e. g. Left, Right, Forward, Back) and had three discrete speed settings. The required number of trials to reach an asymptote and the time to complete the last trial were not significantly different. When operating the robots, the users preferred to position themselves in front of the robot. Those who had positioned themselves behind the robot model while answering the survey shifted {{to the front of the}} real robot due to the robot obscuring their view. Users of Pendant A committed significantly fewer over control errors due to the continuous speed-control ability. Users of Pendant B tried to perform all the moves in the high-speed setting, rather than toggle to a slower speed. The users of Pendant B committed significantly more Left/Right (Y+/Y-) errors. Users commented that they were confused by whether the Left/Right control labels meant their left/right or the robot's left/right. The expectancies exhibited by the users were used to develop guidelines for the design of <b>teach</b> <b>pendants.</b> A four-button layout (top, bottom, left, right buttons causing forward, backward, left, right robot motion respectively), with a continuous speed control ability, was found to fit most users' control-movement expectancies...|$|R
40|$|Abstract: Conventional robot motion {{teaching}} methods use a <b>teaching</b> <b>pendant</b> or a motion capture device {{and are not}} the most convenient or intuitive ways to teach a robot sophisticated and fluid movements such as martial arts motions. Ideally, a robot could be set up {{as if it were}} a clothing man-nequin that has light limbs and flexible yet frictional joints which can be positioned at desirable shape and hold all the positions. To do the same with a robot, an operator could pull or push the links with minor forces until the desired robot posture is attained. For this, a robot should measure the applied ex-ternal force by using torque sensors at the robot joints. However, torque sensors are bulky and expen-sive to install in every DOF joints while keeping a compact design, which is essential to humanoid ro-bots. In this paper, we use only motor current readings to acquire joint torques. The equations used to compensate for the effect of gravity on the joint torques and the self-calibration method to earn link pa-rameters are presented. Additionally, kinematic restrictions can be imposed on the robot’s arms to sim-plify the motion teaching. Here, we teach the Kendo training robot with this method and the robot’s learnt martial art motions are demonstrated...|$|R
50|$|The {{interface}} for {{the motor}} controller {{is based on}} a RS-232 serial port. (9600 baud, 7 data bits, 2 stop bits, even parity.) The controller, while in one physical box, is actually two machines. The one on the top is the <b>teach</b> <b>pendant</b> computer, the one below is the motor controller proper.|$|E
50|$|RoboLogix enables programmers {{to write}} their own robot {{programs}} and use sensors such as video cameras, which are used for obtaining the desired position of the robot end effector. In addition, a <b>teach</b> <b>pendant</b> control panel is included with the simulator that allows the user to command the robot {{to pick up a}} tracked object and return it to a home location through jogged commands or pre-programmed positions.|$|E
50|$|Positioning by Cartesian {{coordinates}} may be done {{by entering}} the coordinates into the system or by using a <b>teach</b> <b>pendant</b> which moves the robot in X-Y-Z directions. It is much easier for a human operator to visualize motions up/down, left/right, etc. than to move each joint one at a time. When the desired position is reached it is then defined in some way particular to the robot software in use, e.g. P1 - P5 below.|$|E
40|$|Includes bibliographical {{references}} (page 54) The {{purpose of}} this project is to design and developed techniques to control the operations of a robot arm. Applesoft Basic is used to write the subroutines in high-level language. The content of this project are: a. Description the Five-Axis Microbot, TeachMover {{and how it is}} connected to a personal computer such as an Apple IIe. b. Description the control programming using <b>teach</b> control <b>pendant</b> and serial interface commands from a host computer. c. Flow chart of the programs. d. Presentation of experimental programs. Programs were run to control the robotic system described in this project. Test results indicated the systern operated properly and its performance satisfied the design objectives...|$|R
40|$|While {{there are}} more {{advanced}} and better devices appearing on the market each day, {{there are still many}} companies and businesses that use older devices. This is done because it 2 ̆ 7 s financially more beneficial. The Belgium Campus is one of these companies. One of the devices they had purchased was the Scorbot ER V plus. This robot is equipped with six axes and a gripper. A few applications in which these robots are used are pick and place, soldering and welding. Apart from the movement of the robot, the controller also has the ability to read inputs or to control outputs. The robot can be controlled via the <b>teaching</b> <b>pendant</b> or via a PC with the running software on it. The Scorbot is controlled through serial communication (RS- 232). But as everyone knows, every medal has two sides. This also holds for this robot. The original software, called SCORBASE, which is used to control the controller, was written for DOS (graphical command terminal). At the start of the project I was only told that the robot needed to be controlled by self-written software. On which commando 2 ̆ 7 s and text the robot would react was unknown, so it was my task to figure this out. My assignment consisted of examining the communication between the robot and the controller, and this should also be documented. The documentation that has been written includes all steps and actions which are required before the robot can be controlled. There is also an example compiler written in C# which has all available functions the robot can perform. This example code is available for the students. This way they can get a better view on programming all the functions for the Scorbot, in C#. The intention is that the students will be programming the robot by themselves during the hardware programming classes...|$|R
40|$|Abstract—We {{present a}} novel system to achieve coordinated task-based control on a dual-arm {{industrial}} robot {{for the general}} tasks of visual servoing and bimanual hybrid motion/force control. The industrial robot, consisting of a rotating torso and two seven degree-of-freedom arms, performs autonomous visionbased target alignment of both arms {{with the aid of}} fiducial markers, two-handed grasping and force control, and robust object manipulation in a tele-robotic framework. The operator uses hand motions to command the desired position for the object via Microsoft Kinect while the autonomous force controller maintains a stable grasp. Gestures detected by the Kinect are also used to dictate different operation modes. We demonstrate the effectiveness of our approach using a variety of common objects with different sizes, shapes, weights, and surface compliances. Note to Practitioners—Industrial robots traditionally are preprogrammed with <b>teach</b> <b>pendants</b> to perform simple repetitive tasks without any sensor feedback. This work was motivated by demonstrating that industrial robots can also perform advanced, sensor-based tasks such as visual servoing, force-feedback control, and tele-operation. Industrial robots are typically limited by the long delay between command and action, but with careful tuning, we show that these sensor-based methods are still feasible even with off-the-shelf sensors. The specific experimental testbed involves a 15 degree-offreedom dual-arm industrial robot with each wrist outfitted with a camera, a rubber contact pad, and a force/torque sensor. A Microsoft Kinect is used to communicate operator commands through gesture. The integrated system involves seven processes running on three computers (2 running Windows 7, 1 running Windows XP) connected through a local hub using the TCP/IP protocol. The communication between the components is based on an object-oriented distributed control and communication software architecture called Robot Raconteur. Though the implementation is for our specific testbed, the approach is sufficiently general to be extended to other robots, end effectors, sensors, and operating systems. Keywords—Primary: Dual-arm manipulation, tele-robotics, human interface, industrial robo...|$|R
30|$|Until recently, most robot {{programs}} were only taught through the robot <b>teach</b> <b>pendant,</b> which required the robot {{system to be}} out of production. Now, programmers are using offline program tools to teach the robot movements. After transferring the program to the robot controller, they use the robot <b>teach</b> <b>pendant</b> to refine the program positions. This greatly improves the productivity of the robot system. But still, calibration is needed between the model and the real work cell. The trend is the development of more intelligent programming, by use of sensors with the ability to scan the workpiece and working environment with high accuracy.|$|E
30|$|In the {{teaching}} phase, a human operator commands a robot with {{an input device}} such as a <b>teach</b> <b>pendant</b> and a data glove to perform a manipulation task. Here we call it demonstration.|$|E
40|$|Applications of Industrial Robots in The Classroom, KALEB TOLLER, JORGE ORTEGA-MOODY, ADOLFO ENRIQUE SAMUDIO CANO, and MICHAEL TYLER EDLIN, Department of Engineering Technology Management, Morehead State University, Morehead, Kentucky 40351. Parallel robots {{are growing}} in {{popularity}} in industry for their agility and speed. Although {{they may have}} a smaller work space compared to serial robots they are able to move within their workspace more efficiently. A growing concern about industrial robots in general is training. The costliest portion of the hiring process in any field is training, to tackle this issue a group of students at Morehead State University have created a Delta robot including a functioning <b>teach</b> <b>pendant</b> that functions and feels like a real Fanuc <b>teach</b> <b>pendant.</b> The <b>teach</b> <b>pendant</b> allows students to program a virtual delta robot and run simulations and later use the same program on the physical classroom robot shared by multiple students. For half the price of a Fanuc LR Mate 200 iD a classroom could a have a fully functioning delta robot with ten teach pendants making industrial training affordable and allowing young students a competitive edge in the job market...|$|E
30|$|Offline {{programming}} (OLP) with {{simulation software}} allows programming of the welding path and operation sequence {{from a computer}} {{rather than from the}} robot itself. 3 D CAD models of the workpieces, robots, and fixtures used in the cell are required for OLP. The simulation software matches these 3 D CAD models, permitting programming of the robot’s welding trajectory from a computer instead of a <b>teaching</b> <b>pendant</b> in the welding cell as in online programming. After simulation and testing of the program, the instructions can be exported from the computer to the robot controller via an Ethernet communication network. Ongoing research suggests, however, that the use of sensing technology would make it feasible to completely program the final trajectory only with OLP (Miller Electric Mfg Co. 2013). Pan et al. (2012 a) developed an automated offline programming method with software that allows automatic planning and programming (with CAD models as input) for a robotic welding system with high degrees of freedom without any programming effort. The main advantages of OLP are its reusable code, flexibility for modification, ability to generate complex paths, and reduction in production downtime in the programming phase for setup of a new part. Nevertheless, OLP is mostly used to generate complex robot paths for large production volumes because the time and cost required to generate code for complex robotic systems is similar to if not greater than with online programming (Pan et al. 2012 a). Currently, for a complex manufacturing process with small to median production volume, very few robotic automation solution are used to replace manual production due to this expensive and time-consuming programming overhead. Although OLP has the abovementioned advantages, it is not popular for small to median enterprise (SME) users due to its obvious drawbacks. It is difficult to economically justify an OLP for smaller product values due to the high cost of the OLP package and programming overhead required to customize the software for a specific application. Development of customized software for offline programming is time-consuming and requires high-level programming skills. Typically, these skills are not available from the process engineers and operators who often perform the robot programming in-process today. As OLP methods rely accurate modeling of the robot and work cell, additional calibration procedures using extra sensors are in many cases inevitable to meet requirements (Pan et al. 2012 b).|$|R
40|$|Dimensional {{measurement}} of the subassemblies {{at the beginning of}} the assembly line is a very crucial process for the eyeglasses industry, since even small manufacturing errors of the components can lead to very visible defects on the final product. For this reason, all subcomponents of the eyeglass are verified before beginning the assembly process either with a 100 % inspection or on a statistical basis. Inspection is usually performed by human operators, with high costs and a degree of repeatability which is not always satisfactory. This paper presents a novel on-line measuring system for dimensional verification of small metallic subassemblies for the eyeglasses industry. The machine vision system proposed, which was designed to be used {{at the beginning of the}} assembly line, could also be employed in the Statistical Process Control (SPC) by the manufacturer of the subassemblies. The automated system proposed is based on artificial vision, and exploits two CCD cameras and an anthropomorphic robot to inspect and manipulate the subcomponents of the eyeglass. Each component is recognized by the first camera in a quite large workspace, picked up by the robot and placed in the small vision field of the second camera which performs the measurement process. Finally, the part is palletized by the robot. The system can be easily taught by the operator by simply placing the template object in the vision field of the measurement camera (for dimensional data acquisition) and hence by instructing the robot via the <b>Teaching</b> Control <b>Pendant</b> within the vision field of the first camera (for pick-up transformation acquisition). The major problem we dealt with is that the shape and dimensions of the subassemblies can vary in a quite wide range, but different positioning of the same component can look very similar one to another. For this reason, a specific shape recognition procedure was developed. In the paper, the whole system is presented together with first experimental lab results...|$|R
40|$|Abstract. This paper {{describes}} {{the design and}} implementation of a high efficiency motion controller system consisting of host machine and <b>teach</b> <b>pendant.</b> The host machine performs some of the position control processing tasks and receives the processed data from <b>Teach</b> <b>Pendant.</b> Starting with introduction to existing excellent 4 -axismotion controller PCL 6045 B, It {{describes the}} overall structure {{of the system and}} the hardware that make up the motion controller. Then, this paper discusses the design method of software system, and the motion control chip PCL 6045 B driver in WindowsCE. Besides, the flow diagram of the use of industrial communication networks transmission about CC_LINK is showed in detail. After testing the system, it has implemented the high precision position controller. Moreover, it has the advantages of low cost, easy use...|$|E
40|$|This paper {{describes}} {{the design and}} implementation of a high efficiency motion controller system consisting of host machine and <b>teach</b> <b>pendant.</b> The host machine performs some of the position control processing tasks and receives the processed data from <b>Teach</b> <b>Pendant.</b> Starting with introduction to existing excellent 4 -axismotion controller PCL 6045 B, It {{describes the}} overall structure {{of the system and}} the hardware that make up the motion controller. Then, this paper discusses the design method of software system, and the motion control chip PCL 6045 B driver in WindowsCE. Besides, the flow diagram of the use of industrial communication networks transmission about CC-LINK is showed in detail. After testing the system, it has implemented the high precision position controller. Moreover, it has the advantages of low cost, easy use. © (2012) Trans Tech Publications. Fujian University of Technology; Xiamen University; Fuzhou University; Huaqiao University; University of Wollongon...|$|E
40|$|In {{contrast}} to highly automated industrial companies small and medium enterprises need a more intuitive programming method for robots than the <b>teach</b> <b>pendant</b> or offline programming tools. A solution for some tasks is the known procedure of walk-through teaching, but improved in several ways: post processed to identify dominant points, enrichted with sensor data and usable via a multimedial user interface. The articel introduces {{the method of}} Intuitive Teaching with focus on the post processing of trajectory data. One application is described...|$|E
40|$|An {{interactive}} robotics graphical {{computer simulation}} program, GRAS (Graphical Robot Animator and Simulator), has been developed. The GRAS program reads a data file of robot geometry data and displays the robot configuration as a 3 D solid model. It simulates a <b>teach</b> <b>pendant</b> for user interaction. The program {{was written in}} Java language for maximum portability and application. GRAS is a generalized program so it can simulate a variety of robots with different configurations. Examples of PUMA 560 and Pegasus robots are provided. The GRAS program {{is available on the}} web sit...|$|E
40|$|Currently, mast robot {{programming}} is done either by manual programming {{or by the}} "teach-by-showing"method using a <b>teach</b> <b>pendant.</b> Both of these methods {{have been found to}} have several drawbacks. We have been developing a novel method for programming a robot: the assembly-plan-from-observation (APO) method. The APO method aims to build a system that has threefold capabilities. It observes a human performing an assembly task, it understands the task based on this observation, and it generates a robot program to achieve the same task. This paper overviews our effort toward the realization of this method. ...|$|E
30|$|Of the {{programming}} methods commonly used with welding robots, conventional online programming with a <b>teach</b> <b>pendant,</b> i.e., lead-through programming, has {{the disadvantage of}} causing breaks in production during programming. Furthermore, it is only able to control simple robot paths. Offline programming, due to its reusable code, flexibility of modification, and ability to generate complex paths, offers {{the benefit of a}} reduction in production downtime in {{the programming}} phase for setup of new parts and supports autonomous robotic welding with a library of programming codes for weld parameters and trajectories for different 3 D CAD models of workpieces.|$|E
40|$|This paper {{presents}} a novel tablet based end-user interface for industrial robot programming (called Hammer). This application makes easier to program tasks for industrial robots like polishing, milling or grinding. It {{is based on}} the Scratch programming language, but specifically design and created for Android OS. It is a visual programming concept that allows non-skilled programmer operators to create programs. The application also allows to monitor the tasks while it is being executed by overlapping real time information through augmented reality. The application includes a <b>teach</b> <b>pendant</b> screen that can be customized according to the operator needs at every moment...|$|E
