91|69|Public
50|$|Dash uses a <b>two-tier</b> <b>architecture</b> {{to power}} its network. The first tier {{consists}} of miners who secure {{the network and}} write transactions to the blockchain. The second tier consists of masternodes which enable the advanced features of Dash.|$|E
5000|$|Port Trust Diamond Jubilee Stadium is a {{multi-purpose}} {{stadium in}} Visakhapatnam, India. The picturesque stadium, {{set on the}} outskirts of Visakhapatnam midst scenic hills, has hosted 18 under-19s matches [...] The stadium has a <b>two-tier</b> <b>architecture</b> and designed {{in such a way that}} view of the match in action is not obstructed regardless of the seating location. It is currently used mainly for cricket matches. The stadium was built in 2003 and has a capacity of 5,000 seats.|$|E
50|$|SAP ECC is {{the core}} {{component}} of the SAP's Business Suite - a collection of applications including CRM and SCM among others. The combined complexity of the Business Suite, along with newer in-cloud competitors, has in recent years led SAP to invest heavily in simplification and massively improved system response times, culminating in {{the announcement of the}} S/4 Simple Suite in February 2015. S/4 has a single tenant architecture and is being built upon SAP's in-memory database technology stack (HANA) and will be available in a choice of in-cloud and on-premises deployment. The classic three-tier and database-agnostic architecture of R/3 is replaced with a <b>two-tier</b> <b>architecture.</b>|$|E
3000|$|In {{the second}} one, {{which is called}} <b>two-tier,</b> its <b>architecture</b> {{consists}} {{of a set of}} mobile nodes and one or more stationary node as shown in Fig. 8 [...]...|$|R
40|$|Abstract In {{recent years}} {{there has been}} a trend towards using {{standard}} workstation components to construct parallel computers, due to the enormous costs involved in designing and manufacturing special-purpose hardware. In particular, we can expect to see a large population of SMP clusters emerging in the next few years. These are local-area networks of workstations, each containing around four parallel processors with a single shared memory. To use such machines effectively will be a major headache for programmers and compiler-writers. Here we consider how well-suited the BSP model might be for these <b>two-tier</b> <b>architectures,</b> and whether {{it would be useful to}} extend the model to allow for non-uniform communication behaviour...|$|R
50|$|It uses a <b>two-tier</b> Client-server <b>architecture</b> with server {{software}} running on either Linux or Microsoft Windows and client software can run only on Microsoft Windows.It implements Distributed Component Object Model (DCOM) and uses Multi-tier technology based on Borland DataSnap.|$|R
5000|$|There {{are some}} who view a web {{application}} as a <b>two-tier</b> <b>architecture.</b> This can be a [...] "smart" [...] client that performs all the work and queries a [...] "dumb" [...] server, or a [...] "dumb" [...] client that relies on a [...] "smart" [...] server. The client would handle the presentation tier, the server would have the database (storage tier), and the business logic (application tier) would be {{on one of them}} or on both. While this increases the scalability of the applications and separates the display and the database, it still doesn't allow for true specialization of layers, so most applications will outgrow this model.|$|E
3000|$|Considering the net as a <b>two-tier</b> <b>architecture,</b> {{the control}} node (hub) is linked {{together}} with the primary sensor node S 1, S 2 ⋯S [...]...|$|E
40|$|In this paper, a novel key {{management}} model and algorithm for <b>two-tier</b> <b>architecture</b> network are proposed based on elliptic curve cryptosystem (ECC) combined with public key (CPK) technology, verifiable secret sharing technology, and <b>two-tier</b> <b>architecture</b> network technology. This novel {{key management}} algorithm {{is composed of}} several sub-algorithms, such as key generation, key update, nodes joining operation and nodes leaving operation.  Most of these sub-algorithms contain active malicious nodes recognizing mechanisms. Also, the updates of pair key and private-seed-key matrix shadow are able to improve the network security significantly. The experimental results and analysis indicate that our proposed algorithm not only provides better network security, but also improves the efficiency compared with the other counterparts in Ad hoc network...|$|E
40|$|Abstract—This paper studies video {{multicasting}} {{in large}} scale areas using wireless mesh networks. The {{focus is on}} the use of Internet access gateways that allow a choice of alternative routes to avoid potentially lengthy multi-hop wireless paths with low capacity. A set of heuristic-based algorithms are described that together aim to maximize network capacity: the <b>two-tier</b> integrated <b>architecture</b> algorithm, the weighted gateway uploading algorithm, the link-controlled routing tree algorithm, and the alternative channel assignment algorithm. These algorithms use different approaches to arrange multicast group members into a clustered and <b>two-tier</b> integrated <b>architecture</b> in which network protocols can make use of multiple gateways to improve system throughput. Simulation results are used to determine the performance of the different approaches. I...|$|R
5000|$|The {{interaction}} of any two software programs involves {{keeping track of}} the interaction-specific data as each subsequent interaction may depend upon the outcome of the previous interaction. This becomes more important in distributed architectures where the client and the server do not exist physically on the same machine. In <b>two-tier</b> <b>architectures,</b> the responsibility of tracking this interaction-specific data rested upon the rich clients, which was not an issue as each client used to reside on an individual computer. However, within n-tier architectures, the state management responsibility shifted from the client to the application or the web server. This introduced the need for some middleware state management extensions so that the server could handle multiple concurrent client requests by deferring the actual activity-specific state data to such extensions e.g. storing session data in a database in ASP [...]NET applications. This helps freeing up the memory resources in favor of increasing server responsiveness and the ability to entertain more client requests.|$|R
40|$|Abstract]: This paper {{addresses}} some of {{the security}} issues raised by system integration over the Internet. System integration increases the complexity of security relationships exponentially, {{making it difficult to}} manage and enforce secure access control in multiple systems which are connected and integrated over the Internet. By implementing a <b>two-tier</b> security <b>architecture,</b> all relevant systems security is enforced in a set of integrated systems...|$|R
40|$|Abstract—In this paper, a novel key {{management}} model and algorithm for <b>two-tier</b> <b>architecture</b> network are proposed based on elliptic curve cryptosystem (ECC) combined with public key (CPK) technology, verifiable secret sharing technology, and <b>two-tier</b> <b>architecture</b> network technology. This novel {{key management}} algorithm {{is composed of}} several sub-algorithms, such as key generation, key update, nodes joining operation and nodes leaving operation. Most of these sub-algorithms contain active malicious nodes recognizing mechanisms. Also, the updates of pair key and private-seed-key matrix shadow are able to improve the network security significantly. The experimental results and analysis indicate that our proposed algorithm not only provides better network security, but also improves the efficiency compared with the other counterparts in Ad hoc network. Index Terms—Wireless Ad hoc Network, Key management algorithm, Verifiable secret sharing, ECC combined public ke...|$|E
40|$|An {{important}} {{issue in the}} design of a mobile computing system is how to manage the real-time locations of mobile clients. In the existing commercial cellular mobile computing systems, a <b>two-tier</b> <b>architecture</b> is used [13]. However, the <b>two-tier</b> <b>architecture</b> is not scalable and is not suitable to the new mobile computing applications. In the literatures [1, 12], a hierarchical database structure is proposed in which the location information of the mobile clients within a cell is managed by the location database responsible for the cell. The location databases of different cells are organized into a tree structure to facilitate the search of mobile clients. Although this architecture can distribute the update and searching workload amongst the location databases in the system, it has the problem of heavy location update overhead and long search delay. Thus, it is not suitable to the system which is supporting real-time queries. In this paper, we study how to generate location update in [...] ...|$|E
30|$|Our {{approach}} PeerSharkPeerShark {{combines the}} benefits of flow-based and conversation-based approaches with a <b>two-tier</b> <b>architecture,</b> and addresses the limitations of these approaches. By extracting statistical features from the network traces of P 2 P applications and botnets, we build supervised machine learning models which can accurately differentiate between benign P 2 P applications and P 2 P botnets. PeerSharkPeerShark could also detect unknown P 2 P botnet traffic with high accuracy.|$|E
40|$|Today {{there are}} many {{solutions}} for the caching and distribution of static content (e. g. images, html pages, video files). However, delivering dynamic content and interactive services (e. g. CGI services) remains a challenge due to the many dependencies that such services have on custom libraries, third party modules, operating systems, and server hardware. In this paper we propose a novel solution, which builds on top of the classic operating system concept of a virtual machine monitor (VMM). A VMM allows us to encapsulate the state of the machine in a virtual machine file, which could then be instantiated on any real machine running the VMM sofb 0 vare. This eliminates the dependencies problem by allowing us to move the whole machine around, thus reducing the problem of dynamic content distribution to delivering large virtual machine files among real machines running the VMM sofb 0 vare. The main challenge is mimicking the original environment surrounding the virtual machine such that it can be transparently transported between real machines without needing to make any sofb 0 vare changes. We propose a practical architecture and analyze the performance tradeoffs for <b>two-tier</b> <b>architectures</b> that require connectivity from the mobile front-ends to back-end databases...|$|R
40|$|Software {{replication}} of stateful services is typically implemented using <b>two-tier</b> <b>architectures,</b> in which clients directly interact with replicas running distributed agreement protocols for ensuring consistency. In general, performance of these protocols {{is sensitive to}} network delays, which might consequently reduce service availability. Therefore, in previous works we introduced three-tier software replication, in which agreement protocols run in an apposite tier (detached from clients and replicas) that can be independently deployed in a controlled and stable part of the network. In this paper, we analyze the performance of replication protocols implemented using two- and three-tier architectures using a simplified wide-area network model that considers two types of behaviors for channels, i. e., normal (small and predictable latency variations), and slow (high and unpredictable latency variations). This channel model is instantiated using traces of real Internet latencies measured sending HTTP requests to Internet web-sites at varying rates. Then, by exploiting traces, we simulate simplified versions of three replication protocols (i. e., active, passive, and three-tier replication), and we show how the end-to-end latency of each protocol {{is related to the}} number of slow channels. Results mainly demonstrate that the availability of a service replicated through a three-tier architecture is less affected from channel slow-downs. ...|$|R
40|$|We propose an {{efficient}} method for fast processing large RDF data over distributed memory. Our approach adopts a <b>two-tier</b> index <b>architecture</b> on each computation node: (1) a light-weight primary index, to keep loading times low, and (2) a dynamic, multi-level secondary index, calculated as {{a by-product of}} query execution, to decrease or remove inter-machine data movement for subsequent queries that contain the same graph patterns. Experimental results on a commodity cluster show that we can load large RDF data very quickly in memory while remaining within an interactive range for query processing with the secondary index...|$|R
40|$|This paper proposes {{the first}} {{peer-to-peer}} network and lookup algorithm that has worst case constant distortion. The construction uses a constant expected number of links. The design {{lends itself to}} dynamic deployment, and has a simple and easy to verify proof. The construction embraces the <b>two-tier</b> <b>architecture</b> of current peer-to-peer networks, where stronger and stable nodes serve as ultra-peers, and other (e. g., transient home users) are regular peers...|$|E
40|$|A <b>two-tier</b> <b>architecture</b> of {{hierarchical}} control is proposed for future generation rotorcraft that demand enhanced performance and reliability. The continuously-varying controller {{at the lower}} tier is designed using probabilistic robust control approaches. The discrete-event supervisory controller at the upper tier is built upon the concepts of time-frequency analysis, symbolic dynamics, and automata theory. Results of simulation experiments based on the GENHEL model of UH- 60 Black Hawk helicopter are presented. Copyright © 2004 ACC 1...|$|E
40|$|Future urban {{scenarios}} will {{be characterized}} by the close integration of ICT devices and humans. Citizens using their own capabilities integrated with ICT technologies could collaboratively constitute a large-scale socio-technical superorganism to support collective urban awareness and activities. This position paper, {{with the help of}} a representative case study in the area of intelligent transportation systems, identifies the key challenges for future urban superorganisms and proposes a <b>two-tier</b> <b>architecture</b> to support their development...|$|E
40|$|This {{contribution}} {{presents the}} concept of a secure implementation of a distributed, web-based electronic design framework. Our <b>two-tier</b> client-webserver-toolserver <b>architecture</b> has been extended to support permanent databases for collaborative, distributed design development. In the sample application of the framework, developed in Java, any of the servers can be based on Linux, MS Windows or Sun-SPARC Java-servlet enabled server. The feasibility of a secure, web-based design framework has been sufficiently proved. The technological approach used to do this involves the use of novel, yet tried and tested methods, taking where appropriate from the rapidly advancing field of e-commerce solutions. ...|$|R
40|$|As {{privacy is}} {{becoming}} a salient issue for both organizations that provide digital services, {{as well as their}} users, access control shifts from traditional role-based models to more sophisticated paradigms that include additional provisions with respect to privacy. Complementing and particularizing our previous research work on the development of frameworks for the enforcement of privacy-aware access control, this paper targets the protection of personal data that are collected in the context of passive monitoring of communication networks. Specifically, this paper's focus is on the description of a semantic access control model conceived {{on the basis of the}} privacy legislation, which is enforced by an innovative <b>two-tier</b> monitoring <b>architecture.</b> © 2010 IEEE...|$|R
40|$|In {{information}} systems {{based on a}} <b>two-tier</b> distribution <b>architecture,</b> there are usually several clients working with shared resources. When designing such a system you must ensure that each client that accesses such shared resources does not interfere with other clients accessing and modifying the same resources. If the resource in question {{does not have a}} thread safe interface and/or it does not provide concurrency control mechanisms, a Lock Server attached to that shared source can help provide controlled concurrent access which allows each client to work with a consistent view of the resource. This paper discusses the architecture of such a shared Lock Server...|$|R
30|$|To this end, {{we present}} PeerSharkPeerShark, with a ‘best of both worlds’ {{approach}} utilizing flow-based approaches {{as well as}} conversation-based approaches in a <b>two-tier</b> <b>architecture.</b> PeerSharkPeerShark can differentiate between benign P 2 P traffic and malicious (botnet) P 2 P traffic, and also detect unknown P 2 P botnets with high accuracy. We envision PeerSharkPeerShark as a ‘P 2 P-aware’ assistant to network administrators wanting to segregate unwanted P 2 P traffic and detect P 2 P botnets.|$|E
40|$|International audienceReplicas of a {{commutative}} replicated {{data type}} (CRDT) eventually converge without any complex concurrency control. We validate {{the design of}} a non-trivial CRDT, a replicated sequence, with performance measurements in the context of Wikipedia. Furthermore, we discuss how to eliminate a remaining scalability bottleneck: Whereas garbage collection previously required a system-wide consensus, here we propose a flexible <b>two-tier</b> <b>architecture</b> and a protocol for migrating between tiers. We also discuss how the CRDT concept can be generalised, and its limitations...|$|E
40|$|Future urban {{computing}} scenarios will {{be characterized}} by the close integration of ICT devices and humans. Citizens, by using their own capabilities augmented and integrated with ICT technologies, could thus collaboratively realize a sort of socio-technical super organism to support high-levels of collective "urban" intelligence and various forms of collective actions. This position paper, also {{with the help of}} a representative case study, identifies the key engineering challenges for future urban super organisms and proposes a <b>two-tier</b> <b>architecture</b> for the infrastructure to support the activities of novel urban super organisms...|$|E
30|$|In [14], Rahimi et al. have {{exploited}} {{the observation that}} using local resources {{in close proximity to}} the user can increase the quality and performance of mobile applications. In this paper, they introduced MAPCloud, a hybrid, tiered cloud architecture consisting of local and public clouds, and showed how it can be leveraged to increase both performance and scalability of mobile applications. They modeled the mobile application as a workflow of tasks and aim to optimally decompose the set of tasks to execute on the mobile client and <b>two-tier</b> cloud <b>architecture</b> considering multiple quality-of-service (QoS) factors such as power, price, and delay. Their results indicated that MAPCloud can provide improved scalability and efficiency in comparison to only using public cloud [14].|$|R
40|$|In this {{work-in-progress}} {{paper we}} present a relevance filtering scheme for a <b>two-tier</b> server <b>architecture</b> optimized for massive multiplayer online games. We distinguish between interest management of server tier game state and bandwidth adaptation of concentrator tier client link thresholds, making the concentrator tier totally application independent. An initial prototype has been implemented, demonstrating significant reductions in update event rate without loss of playability. 1. BACKGROUND Multiplayer computer games are increasingly popular in the public. For a long time they were limited to non-distributed desktop games, with up to four players in the same room, {{but in recent years}} massive multiplayer online games have caught on. No longer restricted to military virtual environments in dedicated networks, e. g., SIMNET and NPSNET [6], distributed real-time computer games communicating through the Internet is now a fast growin...|$|R
40|$|The {{purpose of}} this study was to design and {{implement}} multimedia presentation authoring and browsing in multimedia database systems, based on a <b>two-tier</b> client/server <b>architecture.</b> The major approaches included: (i) Build a client/server multimedia presentation authoring and browsing environment; (ii) Allow query-by-image image retrieval and domain-based browsing through the User Datagram Protocol (UDP) between the Java socket at the client and the Unix socket at the server; (iii) Allow the multimedia presentation authoring by unifying the temporal, spatial and spatio-temporal relations among various media items into Multimedia Augmented Transition Network (MATN) model; (iv) Support the user interaction during the authoring process; (v) Visualize the presentation based on the created MATN models. As a result, this methodology provided users a flexible environment for heterogeneous media data retrieval and multimedia presentation authoring in multimedia database systems...|$|R
40|$|This {{paper will}} {{describe}} current and ongoing developments of wire less-connected RFID reader systems {{for evaluation of}} a passive user localization system. A <b>two-tier</b> <b>architecture</b> of different wireless-connected RFID readers will be introduced. On the lower level, i. e. the first tier, several wireless technologies can co-exist using different kinds of communication technologies to connect different RFID readers. These technologies are connected through a fully meshed WiFi/WLAN network to bring them into the IP world. This IP infrastructure is the second tier, built up on IEEE 802. 11...|$|E
40|$|Abstract. We present MinervaDL, {{a digital}} library {{architecture}} that supports approximate information retrieval and filtering functionality {{under a single}} unifying framework. The architecture of MinervaDL {{is based on the}} peer-to-peer search engine Minerva, and is able to handle huge amounts of data provided by digital libraries in a distributed and self-organizing way. The <b>two-tier</b> <b>architecture</b> {{and the use of the}} distributed hash table as the routing substrate provides an infrastructure for creating large networks of digital libraries with minimal administration costs. We discuss the main components of this architecture, present the protocols that regulate node interactions, and experimentally evaluate our approach. ...|$|E
40|$|Abstract. We present iClusterDL, a self-organising {{overlay network}} that {{supports}} information retrieval and filtering functionality {{in a digital}} library environment. iClusterDL is able to handle huge amounts of data provided by digital libraries in a distributed and self-organising way. The <b>two-tier</b> <b>architecture</b> {{and the use of}} semantic overlay networks provide an infrastructure for creating large networks of digital libraries that require minimum administration, yet offer a rich set of tools to the end-user. We present the main components of our architecture, the protocols that regulate peer interactions, and an experimental evaluation that shows the efficiency, and the retrieval and filtering effectiveness of our approach. ...|$|E
40|$|Abstract—Stock {{market is}} an {{important}} and active part of nowadays financial markets. Stock time series volatility analysis is {{regarded as one of}} the most challenging time series forecasting due to the hard-to-predict volatility observed in worldwide stock markets. In this paper we argue that the stock market state is dynamic and invisible but it will be influenced by some visible stock market information. Existing research on financial time series analysis and stock market volatility prediction can be classified into two categories: in depth study of one market factor on the stock market volatility prediction or prediction by combining historical price fluctuations with either trading volume or news. In this paper we present a service-oriented multi-kernel based learning framework (MKL) for stock volatility analysis. Our MKL service framework promotes a <b>two-tier</b> learning <b>architecture.</b> In the top tier, we develop a suite of data preparatio...|$|R
40|$|Vehicular Ad hoc Networks (VANETs) are a {{compelling}} application of ad hoc networks, {{because of the}} potential to access specific context information (e. g. traffic conditions, service updates, route planning) and deliver multimedia services (Voice over IP, in-car entertainment, instant messaging, etc.). This paper proposes an agent based information dissemination model for VANETs. A <b>two-tier</b> agent <b>architecture</b> is employed comprising of the following: 1) 'lightweight', network-facing, mobile agents; 2) 'heavyweight', application-facing, norm-aware agents. The limitations of VANETs lead us to consider a hybrid wireless network architecture that includes Wireless LAN/Cellular and ad hoc networking for analyzing the proposed model. The proposed model provides flexibility, adaptability and maintainability for traffic information dissemination in VANETs as well as supports robust and agile network management. The proposed model has been simulated in various network scenarios {{to evaluate the effectiveness of}} the approach...|$|R
40|$|Reliable {{communications}} {{is one of}} {{the major}} concerns in wireless sensor networks (WSNs). Multipath routing is an effective way to improve communication reliability in WSNs. However, most of existing multipath routing protocols for sensor networks are reactive and require dynamic route discovery. If there are many sensor nodes from a source to a destination, the route discovery process will create a long end-to-end transmission delay, which causes difficulties in some time-critical applications. To overcome this difficulty, the efficient route update and maintenance processes are proposed in this paper. It aims to limit the amount of routing overhead with <b>two-tier</b> routing <b>architecture</b> and introduce the combination of piggyback and trigger update to replace the periodic update process, which is the main source of unnecessary routing overhead. Simulations are carried out to demonstrate the effectiveness of the proposed processes in improvement of total amount of routing overhead over existing popular routing protocols...|$|R
