22|106|Public
5000|$|... b {{fields are}} signed but NOT {{included}} in the DigSig envelope - only the signed field value is stored on the AIDC. Therefor {{the value of a}} b field must be collected by the verifier before verification can be performed. This is useful to link a physical object with an barcode and/or RFID tag to be used as an anti-counterfeiting measure; for example the seal number of a bottle of wine may be a b field. The verifier needs to enter the seal number for a successful verification since it is not stored in the barcode on the bottle. When the seal is broken the seal number may also be destroyed and yielded unreadable; the verification can therefore not take place since it requires the seal number. A replacement seal must display the same seal number; using holograms and other techniques may make the generation of a new copied seal number not viable. Similarly the unique tag ID, also known is the TID in ISO/IEC 18000, can be used in this manner to prove that the data is stored on the correct tag. In this case the TID is a b field. The interrogator will read the DigSig envelope from the changeable <b>tag</b> <b>memory</b> and then read the non-changeable unique TID to allow for the verification. If the data was copied from one tag to another, then the verification process of the signed TID, as stored in the DigSig envelope, will reject the TID of the copied tag.|$|E
40|$|Combining RFID and sensors {{leads to}} a wide field of {{possible}} applications. To address many of them while reducing the development cycle for individual specialized systems a flexible RFID sensor tag platform was developed. A solution based on a small integrated microcontroller and the RFID <b>tag</b> <b>memory</b> as data interface will be presented in this paper...|$|E
40|$|We {{introduce}} server impersonation attacks, {{a practical}} security threat to RFID security protocols {{that has not}} pre-viously been described. RFID <b>tag</b> <b>memory</b> is generally not tamper-proof for cost reasons. We show that, if a tag is compromised, such attacks can give rise to desynchronisa-tion between server and tag {{in a number of}} existing RFID authentication protocols. We also describe possible coun-termeasures to this novel class of attacks. ...|$|E
50|$|B5000 {{machines}} with their stack-based architecture and <b>tagged</b> <b>memory</b> also heavily influenced the Soviet Elbrus series of mainframes and supercomputers. The first {{two generations of}} the series featured <b>tagged</b> <b>memory</b> and stack-based CPUs that were programmed only in high-level languages. There existed {{a kind of an}} assembly language for them, called El-76, but it was more or less a modification of ALGOL 60 and supported structured programming and first-class procedures. Later generations of the series, though, switched away from this architecture to the EPIC-like VLIW CPUs.|$|R
40|$|Computers are {{notoriously}} insecure, {{in part because}} application security policies do not map well onto traditional protection mechanisms such as Unix user accounts or hardware page tables. Recent work has shown that application policies can be {{expressed in terms of}} information flow restrictions and enforced in an OS kernel, providing a strong assurance of security. This paper shows that enforcement of these policies can be pushed largely into the processor itself, by using <b>tagged</b> <b>memory</b> support, which can provide stronger security guarantees by enforcing application security even if the OS kernel is compromised. We present the Loki <b>tagged</b> <b>memory</b> architecture, along with a novel operating system structure that takes advantage of <b>tagged</b> <b>memory</b> to enforce application security policies in hardware. We built a full-system prototype of Loki by modifying a synthesizable SPARC core, mapping it to an FPGA board, and porting HiStar, a Unix-like operating system, to run on it. One result is that Loki allows HiStar, an OS already designed to have a small trusted kernel, to further reduce the amount of trusted code by a factor of two, and to enforce security despite kernel compromises. Using various workloads, we also demonstrate that HiStar running on Loki incurs a low performance overhead. ...|$|R
30|$|Passive tags {{systems have}} limited link budget [2]; however, they are {{attracting}} attention {{due to their}} low cost and long life. The reader first energizes passive tags by means of electromagnetic energy and then identifies the objects by collecting unique IDs stored in the <b>tag’s</b> <b>memory.</b>|$|R
40|$|Abstract—The {{proliferation}} of {{radio frequency identification}} (RFID) systems in application domains such as supply chain man-agement requires an IT infrastructure that provides RFID device and data management and supports application development. In this paper, we discuss these application requirements in detail. We also contend that the characteristics of passive RFID tech-nology introduce constraints that are unique {{to the development of}} middleware for the RFID domain. These constraints include the occurrence of false negative reads, <b>tag</b> <b>memory</b> variations, the heterogeneous reader landscape, and the limited communication bandwidth available to RFID readers. To address these constraints and the application requirements for filtered and aggregated RFID data, we developed Accada, an open source RFID platform. This paper shows that the Accada implementation, which is based on a set of specifications developed by the EPCglobal community and a number of extensions, such as the surrogate concept and the vir-tual <b>tag</b> <b>memory</b> service, addresses the majority of the application requirements and limitations of passive RFID technology. Index Terms—EPC network, middleware, radio frequency iden-tification (RFID) ...|$|E
40|$|Abstract. We {{propose to}} enhance EPCglobal RFIDs {{enriching}} them with semantic capabilities. Memory organization of tags {{and the data}} exchange protocol are exploited and extended to the purpose. By design, the proposed enhancements do not alter the basic behavior of protocol and <b>tag</b> <b>memory</b> organization and are thus fully backward compatible. In order to store annotated descriptions a compression algorithm for DIG descriptions has also been devised. We report here results in comparison with other XML-based compression tools and simulations for enhanced tags reading and decompression. ...|$|E
40|$|Gadgets {{helping the}} disabled, {{especially}} blind {{that are in}} least accessibility of information, use acoustic methods that can cause stress to ear and infringe user's privacy. Even if some project uses embedded Radio Frequency Identification (RFID) into the sidewalk for blind's free walking, the <b>tag</b> <b>memory</b> design is not specified for buildings and road conditions. This paper suggested allocation scheme of RFID tag referring to EPCglobal SGLN, tactile method for conveying information, and use of lithium battery as power source with solar cells as an alternative. Results have shown independent mobility, accidents prevention, stress relief and satisfied factors in terms of cost and human usability. Comment: 9 pages, 5 figures, Presented at IEOM 201...|$|E
50|$|Key to the BiiN {{system was}} the 960 MX processor, {{essentially}} a RISC-based {{version of the}} earlier i432. Like the i432, the 960 MX included <b>tagged</b> <b>memory</b> for complete memory protection even within programs (as opposed to most CPU's, which offer protection only between programs), {{a full set of}} instructions for task control, and complex microcode to run it all.|$|R
40|$|We {{describe}} an experiment investigating how <b>tagging</b> affects human <b>memory.</b> We compare a low-cost tagging by mouse-clicking interface (Click 2 Tag) to traditional tagging by typing {{and to a}} baseline, no tagging condition. Our results suggest that tagging is beneficial for memory. However, the two tagging methods impact distinct aspects of memory: tagging by typing promotes elaboration of read contents and, thus, enhances free recall, whereas tagging by clicking strengthens the memory traces by repeated readings of relevant words in the text and, thus, improves recognition of facts from the text. Author Keywords <b>Tagging,</b> <b>memory,</b> interaction cost, social bookmarkin...|$|R
50|$|Designs {{that use}} {{content-addressable}} memory (CAM) are called dynamic dataflow machines. They use <b>tags</b> in <b>memory</b> to facilitate parallelism.|$|R
40|$|Data {{acquisition}} processes {{the sampling}} and conditioning the signals that measure real world physical {{conditions such as}} temperature, pressure, flow etc. and convert the signal into in appropriate format for displaying and transmission to remote end. Now a days RFID i. e. Radio Frequency Identification plays {{a vital role in}} Data acquisition system. The present article proposes a smart DAS scheme containing RFID reader and Active tag. The data acquisition system is interfaced with tag through I 2 C bus. The reader communicates with tag following RFID communication protocol requesting to send the logged data which are refreshed and stored into <b>tag</b> <b>memory</b> periodically. The communication is simulated using MATLAB software successfully. ...|$|E
40|$|AbstractRFID {{technology}} {{is widely used}} in various areas and found to be very useful in the business which includes supply chain management. Also the amount of RFID data is very huge as well. Hence too much time is needed to get particular information from an RFID data set. This paper proposes an efficient method to manage large amount of RFID data set. Also this proposes a unique group-id for RFID tags of unique items {{with which we can}} verify the integrity of the group of items by checking the group-id written in the <b>tag</b> <b>memory.</b> Then we devise a storage scheme called MckoiDDB that can process queries in a distributed environment. Lastly we present a graph called product localization graph to represent the tag movements in supply chain management...|$|E
40|$|Abstract. We {{leverage}} increasing passive RFID <b>tag</b> <b>memory</b> {{to propose}} distributed RFID tag storage infrastructures (D-RFID stores). A D-RFID store {{is a large}} set of tags with significantly sized re-writeable storage. Interrogators interact with D-RFID stores by reading from and writing to tags, providing {{a wide range of}} possible applications that are otherwise resource-inefficient. Examples include tagging trees in a forest to track hikers, interactive smart posters to provide location-based social interaction and collaboration, and tags transporting digital information in situations where reliable network connectivity is not available. We propose a system architecture for D-RFID stores by describing the tag distribution in space and time, different storage structures, and the middleware linking the different components together. We also describe assurance in our system. We motivate D-RFID stores through examples and describe potential avenues of research. ...|$|E
5000|$|... #Caption: The new {{memorial}} <b>tag</b> in <b>memory</b> of Giuseppe Pinelli, as of {{opposed to}} the old one which is also still there ...|$|R
40|$|Abstract. We {{propose to}} extend basic RFID usage by storing semantically {{annotated}} data within RFID <b>tags</b> <b>memory,</b> so that objects may actually “describe themselves ” {{in a variety}} of scenarios. In particular here we exploit our approach to carry out an advanced discovery process using annotations stored in RFIDs. A –fully backward compatible – modification to the original RFID data exchange protocol is presented, integrated in a semantic-enabled Bluetooth resource discovery framework. Motivations and benefits of the approach are outlined in a u–commerce context. ...|$|R
40|$|Radio Frequency Identification (RFID) {{technology}} is an electronic labeling technique. These electronic labels are called tags and read wirelessly. In this thesis a battery and amicroprocessor {{are connected to}} the tag. The work consisted of programming themicroprocessor to transfers sensor data into the <b>tags</b> <b>memory.</b> The <b>tags</b> are placed ontrains and data is collected from sensors at the train's axle. That way sensor data can betransmitted from a train to readers stationed along the railroad tracks. The aim of the project is to predict service intervals. There is currently no possibility tosee wear in real time and stop a train before it breaks. At present, there is a form of heatdetectors located along the railroad tracks to measure temperatures of wheels and axlesof passing trains. These are expensive and have the disadvantage of being able to detecterrors that have already occurred, they can not detect errors that do not radiate heat. The thesis aims to provide a solution for this. By programming a microprocessor totransmit sensor data to the <b>tags</b> <b>memory</b> it is possible for an RFID reader to read thesensor data from the tag. Ensuring that data and identity can be read from the tag atspeeds up to 250 km/h, you can get the status of a trains wagon before it breaks...|$|R
40|$|This study {{describes}} {{the characteristics of}} data tampering in RFID-based information systems and a method addressing it is proposed using hashing techniques in mobile RFID environment. The proposed method requires only hash, XOR and simple calculations but can provide good {{security and privacy protection}} features. Mobile RFID-enhanced applications (Mobile RFID) offer a unique way of interacting with the physical world by using the touch paradigm. They offer an intuitive way to interact with physical objects to which RFID transponders are attached. However, the development of mobile RFID applications is not well supported yet, in contrast to stationary RFID applications because of security and privacy related issues. A critical threat for Mobile RFID based information systems is represented by data tampering which corresponds to the malicious alteration of data recorded in the <b>tag</b> <b>memory...</b>|$|E
40|$|In this thesis, {{we argue}} that {{software-based}} defenses to code reuse attacks are fundamentally flawed. With code pointer integrity as a case study, we show that a secure and efficient software-based defense to code reuse attacks is impossible and thus motivate the case for hardware approaches. We then propose our tagged architecture system Taxi (Tagged C) as a practical defense against code reuse attacks which minimally modifies existing hardware components. We also propose strong defense policies which aim to guarantee security while minimizing <b>tag</b> <b>memory</b> usage. Our Taxi prototype, a modified RISC-V ISA simulator, demonstrates that we can defeat code reuse attacks with high compatibility and low memory overhead. by Samuel Fingeret. Thesis: M. Eng., Massachusetts Institute of Technology, Department of Electrical Engineering and Computer Science, 2015. This electronic version was submitted by the student author. The certified thesis {{is available in the}} Institute Archives and Special Collections. Cataloged from student-submitted PDF version of thesis. Includes bibliographical references (pages 93 - 97) ...|$|E
40|$|This paper {{presents}} a technique for minimizing chip-area cost of implementing an on-chip cache memory of microprocessors. The main {{idea of the}} technique is Caching Address Tags, or CAT cache, for short. The CAT cache exploits locality property that exists among addresses of memory references. By keeping {{only a limited number}} of distinct tags of cached data, rather than having as many tags as cache lines, the CAT cache can reduce the cost of implementing <b>tag</b> <b>memory</b> by an order of magnitude without noticeable performance difference from ordinary caches. Therefore, CAT re{{presents a}}nother level of caching for cache memories. Simulation experiments are carried out to evaluate performance of CAT cache as compared to existing caches. Performance results of SPEC 92 programs show that the CAT cache, with only a few tag entries, performs as well as ordinary caches, while chip-area saving is significant. Such area saving will increase as the address space of a processor increases. By allocating th [...] ...|$|E
500|$|Metal Gear Solid {{was first}} {{released}} for the PlayStation in Japan on September 3, 1998. The game {{was available in}} a standard edition, {{as well as a}} limited [...] "Premium Package" [...] edition sold in a large box that also contained a t-shirt, a pair of FOXHOUND-themed dog <b>tags,</b> <b>memory</b> card stickers, an audio CD featuring the soundtracks from the MSX2 Metal Gear games (including a few bonus arranged tracks), and a 40-page booklet titled Metal Gear Solid Classified featuring production notes, interviews with the developers, and a glossary of terminology in the game.|$|R
40|$|Accurate garbage {{collection}} of C++ requires that every memory location and ev ery register be known to contain either a pointer or a non-pointer. In order to mini-mize the run-time overhead of <b>tagging</b> <b>memory</b> locations and registers, techniques for partitioning memory and registers into separate classes dedicated independently to {{the representation of}} pointers and non-pointers respectively have been developed. This paper describes the implementation and performance of a specially designed activation frame targeted to the SPARC architecture, as implemented in a customized version of the GNU g++ compiler. 1...|$|R
5000|$|Metal Gear Solid {{was first}} {{released}} for the PlayStation in Japan on September 3, 1998. The game {{was available in}} a standard edition, {{as well as a}} limited [...] "Premium Package" [...] edition sold in a large box that also contained a t-shirt, a pair of FOXHOUND-themed dog <b>tags,</b> <b>memory</b> card stickers, an audio CD featuring the soundtracks from the MSX2 Metal Gear games (including a few bonus arranged tracks), and a 40-page booklet titled Metal Gear Solid Classified featuring production notes, interviews with the developers, and a glossary of terminology in the game.|$|R
40|$|RFID is a {{well-known}} pervasive technology, which provides promising opportunities {{for the implementation of}} new services and for the improvement of traditional ones. However, pervasive environments require strong efforts on all the aspects of information security. Notably, RFID passive tags are exposed to attacks, since strict limitations affect the security techniques for this technology. A critical threat for RFIDbased information systems is represented by data tampering, which corresponds to the malicious alteration of data recorded in the <b>tag</b> <b>memory.</b> The aim {{of this paper is to}} describe the characteristics and the effects of data tampering in RFID-based information systems, and to survey the approaches proposed by the research community to protect against it. The most important recent studies on privacy and security for RFID-based systems are examined, and the protection given against tampering is evaluated. This paper provides readers with an exhaustive overview on risks and defenses against data tampering, highlighting RFID weak spots and open issue...|$|E
40|$|AbstractRFID is a {{technology}} that uses radio waves to transfer data from an electronic tag, called RFID tag or label, attached to an object, through a reader {{for the purpose of}} identifying and tracking objects. In addition sensory tag adds the additional external sensed data details in to the <b>tag</b> <b>memory.</b> Power consumption {{is one of the major}} issues in the RFID system. In passive tag, entire power for operation is drawn from the RFID reader as radio waves hence high power consumption of RFID tag reduce the reading range of the RFID system and hence performance degrades. Processor is the major component that consumes power. In existing system entire processor block is powered at all the time but it is not necessary. The proposed work targets on the digital section of the RFID tag processor based on EPC Class- 1 Gen- 2 protocol. Clock-Gating and Clock-management are the two hardware-level techniques for power saving in digital section. These techniques are employed via hardware circuit in the gen- 2 processor to enable and disable the necessary operating blocks in the processor which minimize the power consumption of the processor and hence the RFID tag...|$|E
40|$|Radio Frequency Identification (RFID) has {{recently}} {{received a lot}} of attention as an augmentation and interface technology with physical and virtual objects in the ubiquitous computing domain. As RFID tags can be attached to any items, they can be used to provide various ubiquitous and tangible interfaces. Although a new paradigm shift in computing environments offers various opportunities for extending existing RFID capabilities, most of the previous works have utilized only simple RFID IDs and their mappings such that a rich set of RFID capabilities has not been fully utilized. In this paper, we propose a visual, context-aware and tangible interaction technique with physical and virtual objects using RFID. It combines context awareness with RFID for providing context-aware RFID services, which can seamlessly integrate physical worlds with virtual worlds in a user-oriented manner. The proposed approach adopts semantic ontology in order to systematically represent and reason about RFID related contexts. Moreover, the rewritable characteristic of the RFID <b>tag</b> <b>memory</b> is utilized to manage the dynamic RFID context. Further, the paper presents how to support visual and tangible interactions with physical and virtual objects by combining context-aware RFID services with augmented reality. We will show the effectiveness and the novelty of the proposed approach by demonstrating several practical case studies...|$|E
5000|$|With {{the closing}} of the project, Intel used the basic RISC core of the CPU design {{as the basis for the}} i960 CPU. For this role most of the [...] "advanced" [...] {{features}} were removed, including the complex <b>tagged</b> <b>memory</b> system, task control system, most of the microcode and even the FPU. The result was a [...] "naked" [...] core, useful for embedded processor use. Before Intel switched to the StrongARM for the embedded role in the late 1990s, the i960 was one of Intels most popular products.|$|R
40|$|Abstract:-. This paper {{presents}} {{a survey of}} common security threats which mobile IP networks are exposed to {{as well as some}} proposed solutions to deal with such threats. In a typical RFID (Radio Frequency Identification) system, tags storing a unique identifier and additional data are attached to objects or issued to people. When a tag or a group of tags is placed in the radio frequency field of a reader, the data contained in the <b>tag’s</b> <b>memory</b> can be accessed by the reader. The data are usually preprocessed and passed on to enterprise applications by the RFID middleware. The RFID system, consisting of readers and tags, along with the RFID middleware and the enterprise applications {{is referred to as the}} RFID infrastructure...|$|R
5000|$|MTuner SDK: manual {{instrumentation}} {{of applications}} adds timed events and <b>memory</b> <b>tags.</b> Timed events help distinguish different phases of application execution.|$|R
40|$|As RFID {{technology}} has been widely adopted, it has been acknowledged that user-specific data, {{as well as a}} unique identifier, carried by RFID tags, can be con-veniently used. The typical user-specific data stored in an RFID tag is sensor data. There is also an industrial demand to include non-sensor data, such as sales records, repair history, etc., as well as sensor data. It is expected, therefore, that the future information system for networked RFID needs to incorporate heterogeneous user-specific data in an RFID tag in a consistent architecture. There are two fundamental challenges to handle such heterogeneous user-specific data in RFID tag. The first one is the establishment of a logical link between the application and the user-specific data in physical memory in a RFID tag. The other is the efficient retrieval of large user-specific data in RFID tag in practical radio noise environments. An illustra-tive example of large user-specific data is the retrieval of some kind of logging data in an RFID <b>tag</b> <b>memory.</b> In this thesis, new functions named ”schema resolver ” and ”reader controller ” at middleware layer are introduced to meet these two challenges in a networked RFID system. The schema resolver provides the link between the objec...|$|E
40|$|Recent {{technological}} advancements allowed widening the applicability {{scope of the}} RFID (Radio Frequency Identification) technology from item identification to sensor-enabled computation platforms. This feature, added to the native radio energy-harvesting capability and the extremely low power consumption, has attracted the interest of research and industrial communities and pushed them to include the RFID technology into a global network of interconnected objects, as envisaged by the Internet of Things paradigm. In the last few years, standardization bodies have made significant efforts to design lightweight approaches, such as CoAP (Constrained Application Protocol), to efficiently manage resource-constrained nodes by using traditional web interfaces; nevertheless, RFID integration is not addressed yet. In this paper, we propose a CoAP-compliant solution where RFID tags, behaving as virtual CoAP servers, are directly accessible by remote CoAP clients via a reader, which acts as a CoAP proxy. A real testbed, addressing key aspects, such as tag addressing, discovery and management of CoAP requests via RFID operations, is deployed to validate the feasibility of the proposal. Experimental results show rapid response times: less than 60 ms are requested for resource retrieval, while from 80 to 360 ms for sending data to the RFID device, depending on the <b>tag</b> <b>memory</b> dimension...|$|E
40|$|Abstract — Nowadays, {{automatic}} identification of components {{is one of}} the most important research fields for researchers and scientists in different arenas. RFID Technology {{is one of the}} technologies widely used in this arena. For this purpose, the present research has dealt with this technology as a means of tracking and identifying baggage automatically in a traffic control system in an airport. The specification of RFID Technology helps distinguish between man and objects with high precision. This paper makes use of this capability for identifying and tracking baggage in an airport and plane in order to increase the efficiency of luggage transport system, which, as a result, increases the precision of the system, decreases the damages arising from the missing of the luggage and its wrong transport and decreases the errors of the manpower. In order to obtain an intelligent system and automatically identify objects, a unique number is required for tracking and control each object. This research has defined a new model with four choices (that is, airline name, flight number, nature of tag and chair number) in order to develop a unique identity number. This number is stored in the <b>tag</b> <b>memory.</b> With such tags passing through RFID Readers embedded at different places including the conveyor belt or at the gates, passengers ’ luggage may be easily tracked. This way, any problem can be easily dealt with. Thanks to its adaptability, this technology can be easily used in computerized network for sending and receiving information; and an information bank has also been used to instantaneously analyze and study the information...|$|E
40|$|We have {{approached}} {{the problem of}} improving the run-time supports for operating system, high-level languages and programming environments, {{within the framework of}} a project aimed at defining a microprocessor-based advanced architecture whose main goal is the reduction of the so-called semantic-gap. The principal features of the resulting architecture are a capability-based addressing scheme, an implementation of <b>tagged</b> <b>memory</b> relying on the concept of tagged segments, a single level store approach to memory management, and significant hardware supports for multitasking. The architecture has actually been implanted as a research prototype, and the most noticeable choice concerning implementation was to give separate hardware support to memory management functionalities: this not only led to a high degree of parallelism in the execution of kernel activities, but also improved the overall manageability and simplified the testing, debugging and tuning phases of system development...|$|R
40|$|Register Allocation for Accurate Garbage Collection of C++ S. Satishkumar* M. S. Creative Component Accurate garbage {{collection}} of C++ requires that every memory location and every register be known to contain either a pointer or a non-pointer. In {{order to minimize}} the run-time overhead of <b>tagging</b> <b>memory</b> locations and registers, techniques for partitioning memory and registers into separate classes dedicated independently to the representation of pointers and non-pointers respectively have been developed. This paper describes the implementation and performance of a specially designed register allocator for the GNU g++ compiler. * Portions of this paper were excerpted from 2 ̆ 2 Code Generation to Support Efficient Accurate Garbage Collection of C++ on Stock Hardware 2 ̆ 2, a paper currently being prepared for publication by Kelvin Nilsen, Ravichandran Ganesan, Satish Guggilla, Satish Kumar, and Kannan Narasimha...|$|R
40|$|This thesis {{examines}} {{the feasibility of}} using a <b>tagged</b> <b>memory</b> and a stack processor to implement a capability based computer. The hypothesis put forth here is that these two architectural features {{reduce the cost of}} the capability mechanism and result in a simpler implementation. We begin by motivating memory protection and protection systems as a basic need of modern computer systems. A brief historical survey is presented which begins with Dennis and Van Horn 2 ̆ 7 s paper on the semantics of multi-programmed computations and ends with a review of the major capability machines which resulted from this paper. ^ We then introduce the memory and processor organization proposed for this design and compare this organization with that used in previous architectures. This discussion shows that a tagged-memory organization reduces the number of segments used by a process by allowing segments to contain both pointer and data information. This reduces memory management overhead and allows a simpler representation of objects. Moreover, the <b>tagged</b> <b>memory</b> simplifies the mechanisms used to change domains, pass parameters, and address information in primary memory. The stack processor is shown to further reduce the cost of the capability mechanism by providing an inexpensive way to allocate procedure activation records, handle domain changes, and address objects on the stack. ^ Next we present the capability mechanism for the proposed design and discuss the process of mapping capability based virtual addresses into absolute primary memory addresses, and show how the abstract type concept is directly supported by the capability mechanism. ^ A discussion of the hardware facilities needed to support the design follows. This discussion presents a detailed view of the registers of the central processor, the organization of the process stack, the instruction set, and a possible firmware organization which could be used to implement the design. ^ The proposed architecture is then compared with two conventional machines and shown to be more efficient in representing programs. Moreover, evidence is presented which suggests that the performance of the proposed machine would be competitive with current state-of-the-art machines. Finally, two examples are presented which use the abstract type, process synchronization, and process communication facilities provided by the design. ^ The major contribution of this thesis is the thorough examination it provides of the <b>tagged</b> <b>memory</b> approach to capability addressing. Out research shows a tagged-memory capability machine is powerful enough to implement an operating system and the resulting operating system has a complexity about equal to that of the older generation of simple systems with little memory protection. This thesis also illustrates that advanced programming concepts can be implemented quite simply if the proper hardware support is provided. Finally, we show that the process control mechanism introduced in this thesis removes an important source of memory contention from the mutual exclusion mechanism. This is seen as a partial solution to the memory contention problem found on many multi-processor systems. ...|$|R
