15|1328|Public
5000|$|... // Combining {{multiple}} {{tasks to}} a single task grunt.registerTask('customTaskName2', 'taskName1,customTaskName1'); // Default task - runs if <b>task</b> <b>name</b> is not specified grunt.registerTask('default', 'customTaskName2'); ...|$|E
5000|$|Task {{is used to}} {{represent}} different ways of how to accomplish goal. In GRL notation task is represented by hexagon with the <b>task</b> <b>name</b> inside.|$|E
5000|$|... 1. Activity - {{this is a}} brief {{description}} of what you actually do. 2. Type of Activity (meeting, phone, e-mail, etc.) 3. <b>Task</b> <b>Name</b> 4. Project Name 5. Category Name 6. Length of Time 7. Date ...|$|E
5000|$|The Files-11 ODS-1 {{file system}} on RSX-11 was {{implemented}} by a subroutine library that communicated with a <b>task</b> <b>named</b> F11ACP using a special set of QIOs called the [...] "ACP QIOs." [...] The equivalent functionality for controlling magnetic tape devices {{was provided by}} a <b>task</b> <b>named</b> MTAACP.|$|R
50|$|It uses ØMQ and the Greenlet package as {{building}} blocks to encapsulate and distribute <b>tasks</b> (<b>named</b> a Future) between processes and/or systems. Its interface is inspired from the PEP-3148 proposal.|$|R
40|$|What {{it costs}} to {{implement}} a plan: Plan-level and task-level contributions to switch costs Gordon D. Logan Vanderbilt University, Nashville, Tennessee Four experiments were conducted to identify the costs of implementing a plan in the task span procedure, which requires subjects to retrieve the task to perform on the current target {{from a list of}} planned tasks in memory. Experiment 1 compared switch costs in the task span procedure with switch costs in the explicit taskcuing procedure, which presented cues indicating the task to perform on each target. Switch costs were greater in the task span procedure. Experiments 2 – 4 were designed to identify the sources of this difference. Experiment 2 showed that the requirement of establishing a correspondence between the list of <b>task</b> <b>names</b> and the list of targets contributed to switch costs. Experiment 3 showed that retaining lists of similar <b>task</b> <b>names</b> produced greater switch costs than did retaining lists of dissimilar <b>task</b> <b>names.</b> Experiment 4 showed that memory load had no effect on switch costs. The results are discussed in terms of the interaction between plan-level and task-level processing in the implementation of plans...|$|R
5000|$|Speech {{recognition}} commands: [...] "Start listening," [...] "stop listening," [...] "show speech options," [...] "open speech dictionary," [...] "move speech recognition," [...] "mimimize speech recognition." [...] A list of applicable commands can {{be shown}} by speaking [...] "What can I say?" [...] This command is currently only available in English. Users can also query the recognizer about tasks in Windows by speaking [...] "How can I <b>task</b> <b>name,</b> which opens the Help Pane that displays related information.|$|E
40|$|Hierarchical Task Network (HTN) {{planning}} with task inser-tion (TIHTN planning) is {{a variant}} of HTN planning. In HTN planning, the only means to alter task networks is to decom-pose compound tasks. In TIHTN planning, tasks may also be inserted directly. In this paper we provide tight complexity bounds for TIHTN planning along two axis: whether vari-ables are allowed and whether methods must be totally or-dered. Background & Motivation The Hierarchical Task Network (HTN) planning paradigm is centered around planning the execution of tasks (Erol, Hendler, and Nau 1996). Fundamental to HTN planning is the task network, which is a partially-ordered multiset of task names, each representing an activity to be accom-plished. Tasks are either primitive, corresponding to an ac-tion {{that can be taken}} whenever its precondition is met, or non-primitive, which must be iteratively refined into an ex-ecutable sequence of actions. There are two types of refine-ment available to an HTN planner: either imposing an or-dering on two tasks, restricting the task network’s partial order, or by decomposing a non-primitive task. For every non-primitive <b>task</b> <b>name,</b> there is an associated set of meth-ods, each containing a task network. We decompose a non-primitive <b>task</b> <b>name</b> by replacing it with the task network from one of its associated methods. Although HTN planning has found numerous practical applications (Nau et al. 2005), {{it can be difficult to}} write complete and effective sets of methods (Shivashankar et al. 2013). A principled approach to this problem is that of HTN planning with Task Insertion (TIHTN Planning), which adds an additional refinement operator beyond that of the HTN formalism: the ability to insert any <b>task</b> <b>name</b> into the task network without regard to the decomposition hierarchy (Geier and Bercher 2011). Task insertion is also allowed by other hierarchical planning approaches, such as hybrid planning (Kambhampati, Mali, and Srivastava 1998; Biundo and Schattenberg 2001) – a planning approach fus-ing HTN planning with Partial-Order Causal-Link (POCL...|$|E
40|$|Keep it simple! Let {{the tasks}} do the work. What’s new? What’s new since the User’s Guide? scan() from a pipe printf() – more C-like than SPP The CL printf is called as a task, {{not as a}} {{function}} in expressions, but CL printf requires no call, unlike SPP CL printf supports same formats as SPPProcedure Scripts All scripts should be procedure scripts The <b>task</b> <b>name</b> must match the file name procedure arguments are query parameters Two CL modes, “command ” & “compute” Command mode is used interactively Compute mode requires parentheses, commas and quoted string literal...|$|E
50|$|WarpOS had two {{housekeeping}} <b>tasks</b> <b>named</b> Defiant and Babylon5, {{thought to}} be named after the USS Defiant from Star Trek DS9 and Babylon 5, its developers being science fiction fans. These would often be reported by new users {{who did not know}} what they were appearing in tasks lists.|$|R
30|$|However, a {{relevant}} <b>task,</b> <b>named</b> quantification, has remained mostly unexplored in this setting. The objective in quantification {{is to provide}} an accurate estimation of the class distribution of an unlabeled set [5]. To elucidate the practical utility found in this task, consider as a concrete example the insect surveillance application described next.|$|R
5000|$|POSIX/ANSI-like <b>task</b> controls, <b>named</b> message queues, {{counting}} semaphores, clocks/timers, signals, pthreads, environment variables, filesystem ...|$|R
40|$|This {{document}} {{highlights the}} defined {{strategies for the}} cross-layer planning procedures which will in turn define the algorithmic functions and approaches {{for the development of}} the multi-layer optimization module, the online planning tool module and their interfaces with the rest of the modules in the ACINO orchestrator. The terms “cross-layer” and “multi-layer” are used interchangeably with the same meaning; the former conforms to the original <b>task</b> <b>name,</b> while the latter is more prevalent in the existing literature. We first define the problem and present the existing work in the field. Then we show the flow of information in the ACINO architecture pertaining to multi-layer optimization. Following this the strategies for the implementation of the multi-layer processes and modules are described in detailed. The simulation environment and some preliminary results are shown at the end of the document...|$|E
40|$|Objectives: To {{study the}} impact of {{substance}} deprivation {{on a range of}} cognitive tasks, and compare the effects of imposed deprivation with self-imposed quit attempts. Design: 20 non-smokers, 10 continuing smokers, 13 recently quit smokers and 10 smokers deprived of cigarettes for 12 hours. Method: Participants completed a modified Stroop task (23 smoking and 23 neutral words), a single stimulus pictorial dot probe (ten neutral and five smoking stimuli, presented twice as valid cues and twice as invalid cues), a sustained attention task (respond to eighteen neutral target words, but not to ‘cathedral ’ and ‘cigarette’) and a word generation <b>task</b> (<b>name</b> as many relaxation-related words as possible in two minutes). Ratings of mood and intrusive thought frequency were also collected, before and after the cognitive tasks. Results: Deprived and quit smokers showed similar biases compared with non-smokers and continuing smokers, on colour naming of smoking words and smoking word generation. Only the quit smokers showed a difficulty disengaging from a smoking picture on the single-stimulus dot probe. No effects on sustained attention were observed. Increases in smokin...|$|E
40|$|We {{present a}} static {{analysis}} to infer {{the amount of}} data that a distributed system may ransmit. The different locations of a distributed system communicate and coordinate their actions by posting tasks among them. A task is posted by building a message with the <b>task</b> <b>name</b> and the data on which such task has to be executed. When the task completes, {{the result can be}} retrieved by means of another message from which the result of the computation can be obtained. Thus, the transmission data size of a distributed system mainly depends on the amount of messages posted among the locations of the system, and the sizes of the data transferred in the messages. Our static analysis has two main parts: (1) we over-approximate the sizes of the data at the program points where tasks are spawned and where the results are received, and (2) we over-approximate the total number of messages. Knowledge of the transmission data sizes is essential, among other things, to predict the bandwidth required to achieve a certain response time, or conversely, to estimate the response time for a given bandwidth. A prototype implementation in the SACO system demonstrates the accuracy and feasibility of the proposed analysis...|$|E
30|$|The spoken term {{detection}} ALBAYZIN 2014 {{evaluation is}} integrated within {{a more general}} search on speech ALBAYZIN evaluation. This is the second edition of the search on speech ALBAYZIN evaluation, after that held in 2012. Since then, the evaluation has involved different tasks. In the first edition (held in 2012), we organized three different <b>tasks,</b> <b>named</b> query-by-example spoken term detection, keyword spotting, and spoken term detection. In the first evaluation, however, most participants only submitted systems to the query-by-example STD evaluation [37] and only one participant submitted a system for STD and keyword spotting tasks. In this second edition (held in 2014), there was an additional <b>task,</b> <b>named</b> query-by-example spoken document retrieval. However, none of the participants submitted any system to this task, being most of them involved in the STD task. There were also some systems submitted to the query-by-example STD and keyword spotting tasks. Therefore, {{this is the first}} time that we really have an evaluation with several teams working on STD in Spanish.|$|R
40|$|This paper {{proposes a}} new method for this <b>task,</b> <b>named</b> Truth Table Fitting Multiclass SVM (TTF-MCSVM), in which less SVMs are used than other {{classical}} methods. The main {{objective of this}} research is the development of an e#cient method to be applied in problems with very large number of classes, like in the recognition of East Asian languages characters (e. g. Japanese and Chinese kanji...|$|R
5000|$|Randal is now {{the sole}} {{candidate}} of Excel, even though in the last <b>task</b> team <b>names</b> would not be used ...|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedWhile engineers must {{participate in the}} construction of the Integrated Master Schedule, this thesis proposes a way to reduce that effort through automation. When standardized sub processes exist, automated <b>task</b> <b>name</b> construction with consistent action/object naming convention can be applied to multiple system artifacts. These repeating sub processes also allow the derivation of task sequence and dependencies. The Architecture-Based Utility for Repeating Task Planning (A-BURTP) is a Microsoft Access database constructed of tables containing system configuration items, artifact data, local processes, and governing instructions listed in the systems engineering plan (SEP). A-BURTP generates task planning worksheets (TPWs) in Microsoft Excel that import directly into Microsoft Project. The TPWs contain all task attributes needed to allow schedule developers to work independently to link, sort, and group the imported tasks. Appendices include research on system context for Naval Air Systems Command (NAVAIR) systems onboard aircraft carriers and research on Model-Based Systems Engineering data exports using Vitech CORE 9. Scope is limited to constructing the artifact tasking for an Engineering Change Proposal on a fictional system under change. NAVAIR processes and instructions are used when available. The 2011 Office of the Secretary of Defense SEP template is a key reference. Civilian, Department of the Nav...|$|E
40|$|In Taiwan agriculture, {{most of the}} {{production}} management is done by paperwork. This kind of approach is labor-costing, and unable to give real-time information, which {{makes it difficult to}} disclose sufficient information from production, and therefore results in the problem of food safety. To break the bottleneck, the Institute for Information Industry (III) develops the Smart Agri-management Platform (S. A. M. P.), providing cloud services for agricultural production and sale management. In this paper, we adopt the S. A. M. P. to collect farming records containing images, date, field location, and <b>task</b> <b>name.</b> Traditionally, farming records are used to generate a table of texts for traceability. However, it is difficult to arouse the interest from customers by merely using texts. Therefore, this paper proposes the mechanism of farming slideshow, a new presentation of traceability by dynamic arrangement to farming records on S. A. M. P. The experiment is performed in the Yongling organic farm in Kaohsiung, generating over 30, 000 vegetable packages supporting farming slideshow. According to 42 valid questionnaires from customers, 83 % of them express higher willing to buy products with farming slideshow than those with only texts. Therefore, food traceability with slideshow can offer benefit to agri-business marketing, which is a positive reference for future agriculture...|$|E
40|$|Name {{matching}} is {{an important}} task in law enforcement and counter-terrorism. This paper briefly describes {{the nature of the}} name-matching task, enumerates typical name-matching applications, explains the technical challenges posed by namematching, and sets forth several important approaches to these technical challenges. 1. THE NAME-MATCHING <b>TASK</b> <b>Name</b> matching is the task of recognizing when two different strings denote the same person or other named entity. Name matching is an instance of the general task of approximate string matching, a task that also arises in spell correcting [Pet 80], database maintenance [NKAJ 59], signal processing, text retrieval, data mining, image compression, and many other areas [Nav 01]. Approximate string matching is particularly important in computational biology. For example, base-sequence similarity in genomes is an accurate measure of phylogenetic distance [SM 97, Gus 99]. The general task of name matching is as follows: GIVEN: DO: • One or more pattern strings • A collection of target strings • Find each target that matches a pattern well enough that pattern and target are likely to denote the same person Patterns are strings representing given names, and targets are the strings in which the patterns are sought. For example, the patterns might consist of entries in a terrorist watch list, and the targets might be entries in a passenger manifest. In this case, the name matching task would be to find passenger names that are good matches to entries in the watch list...|$|E
40|$|Supervised {{classification}} needs {{large amounts}} of annotated training data that is expensive to create. Two approaches that {{reduce the cost of}} annotation are active learning and crowdsourcing. However, these two approaches have not been combined successfully to date. We evaluate the utility of active learning in crowdsourcing on two <b>tasks,</b> <b>named</b> entity recognition and sentiment detection, and show that active learning outperforms random selection of annotation examples in a noisy crowdsourcing scenario. ...|$|R
50|$|One of Nyame's creations was Kamunu, {{the first}} human being. Nyame gave Kamunu the <b>task</b> of <b>naming</b> all the other creations.|$|R
25|$|Word naming task: During a word <b>naming</b> <b>task,</b> a {{participant}} is {{presented with a}} drawing or object and is asked to name the drawing or the object. Usually during a <b>naming</b> <b>task,</b> response latencies (the {{time it takes to}} make a response) are recorded for each word. Sometimes response accuracies are recorded as well. An example of this word <b>naming</b> <b>task</b> is the Boston Naming Test, which has been used on various studies that examine the bilingual lexical access.|$|R
40|$|The HEASARC is {{developing}} a package of general purpose software for analyzing data files in FITS format. This paper describes the design philosophy which makes the software both machine-independent (it runs on VAXs, Suns, and DEC-stations) and software environment-independent. Currently the software can be compiled and linked to produce IRAF tasks, or alternatively, the same source code {{can be used to}} generate stand-alone tasks using one of two implementations of a user-parameter interface library. The machine independence of the software is achieved by writing the source code in ANSI standard Fortran or C, using the machine-independent FITSIO subroutine interface for all data file I/O, and using a standard user-parameter subroutine interface for all user I/O. The latter interface is based on the Fortran IRAF Parameter File interface developed at STScI. The IRAF tasks are built by linking to the IRAF implementation of this parameter interface library. Two other implementations of this parameter interface library, which have no IRAF dependencies, are now available which can be used to generate stand-alone executable tasks. These stand-alone tasks can simply be executed from the machine operating system prompt either by supplying all the task parameters on the command line or by entering the <b>task</b> <b>name</b> after which the user will be prompted for any required parameters. A first release of this FTOOLS package is now publicly available. The currently available tasks are described, along with instructions on how to obtain a copy of the software...|$|E
40|$|Purpose: Cochlear {{implants}} (CIs) enable {{children with}} severe and profound hearing impairments {{to perceive the}} sensation of sound sufficiently to permit oral language acquisition. So far, studies have focused mainly on technological improvements and general outcomes of implantation for speech perception and spoken language development. This study quantitatively explored the semantic networks of children with CIs in comparison to those of age-matched normal hearing (NH) peers. Method: Twenty seven children with CIs and twenty seven age- and IQ-matched NH children ages 7 - 10 were tested on a timed animal verbal fluency <b>task</b> (<b>Name</b> as many animals as you can). The responses were analyzed using correlation and network methodologies. The structure of the animal category semantic networks for both groups were extracted and compared. Results: Children with CIs appeared to have a less-developed semantic lexicon structure compared to age-matched NH peers. The average shortest path length and the network diameter measures were larger for the NH group compared to the CIs group. This difference was consistent {{for the analysis of}} networks derived from animal names generated by each group (sample-matched correlation networks) and for the networks derived from the common animal names generated by both groups (word-matched correlation networks). Conclusions: The main difference between the semantic networks of children with CIs and NH children lies in the network structure. The semantic network of children with CIs is under-developed compared to the semantic network of the age-matched NH children. We discuss the practical and clinical implications of our findings...|$|E
30|$|Cross-modal {{perception}} involves {{interactions between}} {{two or more}} different sensory modalities. Empirical observations showed that one modality can modify the perceptual experience formed by another modality. Quality experiments involving different audiovisual contents and communication modes reported heterogenous results. As stated earlier, when video accompanies the acoustic utterance, it increases the speech intelligibility, thanks to the visual information brought by the lips’ movements [5]. For the passive evaluation of videotelephony content (head-and-shoulders with a fixed background), a study from Rimmel et al. revealed strong mutual compensation between modalities [27]. Increasing the quality of one modality significantly improved the perceived quality of the other modality. This experiment {{was based on the}} evaluation of 6 -s video clips consisting of a talker’s upper body (two males and two females). A similar study from Chateau, using 10 -s video clips of videotelephony material (one male and one female), did not demonstrate any influence of the audio channel on the perceived video quality and only a weak influence of the video channel on the perceived audio quality [26]. The fact that the audio quality levels used in that experiment were above the intelligibility level could explain that the perception of video quality was independent from the audio quality level. Within the same study, cross-modal interactions were investigated for an interactive context where a pair of interactants had to carry out a conversational <b>task</b> (<b>Name</b> Guessing Task) through an audiovisual link established between two separate rooms. Results between both passive and interactive contexts were similar except for the weak effect of the video channel on the perceived audio quality found in the passive context that became more conspicuous in the interactive context.|$|E
40|$|Recently many {{authors have}} {{stressed}} that domain-general cognitive processes may affect performance in linguistic tasks. This challenges the traditional view that speaking and listening are fairly modular processes. Going beyond this broad claim, {{we aim to}} determine exactly how domain-general processes influence linguistic processes. In the present study we examined the influence of selective inhibition (invoked to suppress responses to potent competitors to target stimuli and taking some time to build up) on performance in two classic word production tasks, the semantic blocking <b>task</b> (<b>naming</b> sets of objects that do vs. {{do not belong to}} the same semantic category) and the pictureword interference <b>task</b> (<b>naming</b> pictures accompanied by categorically related vs. unrelated words). Both tasks were completed by the same participants. Analyses {{of the size of the}} interference effects for fast and slower responses (using delta plots) and of the correlations of the effect sizes in the two tasks demonstrated that selective inhibition was recruited in both tasks. We propose that the process supported by selective inhibition is lemma selection. We discuss the implications for theories concerning the origin of the interference effects in the two paradigms and the nature of lexical selection processes...|$|R
40|$|The {{predictions}} of the central bottleneck and resource allocation models of dual-task performance were examined in a psychological refractory period dual-task experiment. Cloze picture-naming was the primary task and the secondary task was either tone identification or lexical category identification. The nature of the secondary task significantly affected primary <b>task</b> <b>naming</b> RTs and stimulus onset asynchrony affected naming RTs only when the secondary task was lexical categorization. These findings are more consistent with the resource model than the bottleneck model...|$|R
30|$|From these {{interviews}} {{it could also}} be concluded that numismatic collections continue to rely on traditional documentation and analysis methods, predominantly manual measurements and 2 D photography, which have limited information in terms of dimensional and spectroscopic information. It could also be confirmed that advanced non-destructive methods for recording and examination have increasingly been introduced to conservation and museum practices, in order to complement traditional documentation and analytical techniques, with a view to automation on some of the <b>tasks</b> <b>named</b> above, but are not the norm.|$|R
30|$|In the {{proposed}} approach, {{the first step}} is to create a 4 D BIM model relationship for the topsides, jacket, substructure, and other parts of an OOGP. The 4 D BIM model relationship consists of 3 D model <b>names</b> and <b>task</b> <b>names.</b> In the building industry, 4 D BIM has been commonly used to simulate construction or demolition plans by visualizing the sequences and durations of activities. Usually, 3 D objects in the BIM model are assigned to the related tasks in the schedule to create a 4 D BIM model.|$|R
50|$|Kibla {{is working}} on the EC-Culture 2000 (txOom, TransArtDislocated, Soziale Geraeusche and Virtual Centre Media Net are finished), FP5-IST (EMMA - European Multimedia Accelerator) and FP6-IST (PATENT - Partnership for Telecommunication New Technologies) funded {{programmes}} and projects. kibla is also a part of the EUREKA multimedia umbrella and finished Leonardo da Vinci supported project Name multimedia, the Multimedia Tasks & Skills Database, researching and evaluating 26 different jobs and 96 operational multimedia <b>tasks.</b> <b>NAME</b> is presented in 9 languages, with a database of more than 650 companies from 11 countries.|$|R
40|$|Semantic priming {{refers to}} the finding that a word {{response}} is facilitated if it is preceded by a related word compared to when it is preceded by an unrelated word. Research has shown that semantic priming effects still occur under task conditions which would permit ample time for the completion of word recognition processes prior to response production. This study sought to {{examine the impact of}} a related prime-target context on word production. Participants completed an immediate word <b>naming</b> <b>task</b> and a delayed word <b>naming</b> <b>task.</b> There was a semantic priming effect for the immediate <b>naming</b> <b>task.</b> For the delayed <b>naming</b> <b>task</b> semantic priming was only evident at the 500 ms cue delay. This suggests a limited time frame in which a semantic context is able to facilitate word production. </p...|$|R
40|$|In {{fine with}} the {{hypothesis}} that affective priming of evaluative categorization responses is based on processes that operate at a response selection stage, {{it has been observed}} that increasing the proportion of congruent trials brings about increased affective priming effects at short stimulus onset asynchronies (SOAs) in the evaluative categorization task. In the present study, we orthogonally manipulated the congruency proportion (. 25,. 50, and. 75) and the SOA (0, 200, and 1, 000 msec) in the evaluative categorization <b>task</b> and a <b>naming</b> <b>task.</b> Results showed that at both short and long SOAs, the affective priming effect in the evaluative categorization task was influenced by the congruency proportion. In contrast, affective priming effects in the <b>naming</b> <b>task</b> were unaffected by the congruency proportion at short SOAs. This pattern of results provides corroborating evidence for the hypotheses (1) that different processes underlie the affective priming effect in the evaluative categorization <b>task</b> and the <b>naming</b> <b>task</b> and (2) that valenced stimuli can automatically preactivate the memory representations of other, affectively related stimuli. status: publishe...|$|R
50|$|Contestants are {{presented}} with a sillouette of an object for 15 seconds, which is the jumbled around, then are <b>tasked</b> with <b>naming</b> the object and then unscrambling the picture.|$|R
40|$|The {{effects of}} word {{frequency}} and spelling-to-sound regularity were examined using standard naming, standard lexical-decision, go/no-go naming, and go/no-go lexieal-decision tasks. In both the standard and go/no-go <b>naming</b> <b>tasks,</b> tasks requiring phonological coding, a significant Frequency X Regularity interaction was observed. That is, the regularity effect {{was limited to}} low-frequency words. In the standard and go/no-go lexical-decision tasks, tasks not requiring phonological coding, no Frequency × Regularity interaction was observed. These results indicate {{not only that the}} Frequency × Regularity interaction is a product of phonological coding processes but also that these processes are similar in the standard and go/no-go <b>naming</b> <b>tasks.</b> Results are discussed in terms of the dual-route and the parallel distributed processing frameworks. It is a well-documented finding that high-frequency words are responded to faster than are low-frequency words in both lexical-decision <b>tasks</b> (LDTs) and <b>naming</b> <b>tasks</b> (e. g., Balot...|$|R
