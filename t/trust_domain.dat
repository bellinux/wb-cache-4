47|233|Public
5000|$|... cnew = cj |cj ∈/ C, {{which is}} a node {{that is trying to}} join a <b>Trust</b> <b>Domain.</b> The state, w, of cnew is unknown at the time that cnew {{declares}} its intention to join a <b>Trust</b> <b>Domain.</b> That is, cnew may be a node whose behavior is in accordance with the <b>Trust</b> <b>Domain</b> admission and security policies (“uncompromised node”) or it may be compromised.|$|E
5000|$|Finally, the DTM {{prevents}} the <b>Trust</b> <b>Domain</b> from being partitioned.|$|E
5000|$|All {{members of}} the <b>Trust</b> <b>Domain,</b> except for the {{suspected}} node, initiate the BAP, and arrive at a consensus as {{the status of the}} suspected node ...|$|E
5000|$|Intermediaries and vendors: Agari, Cloudmark, Netcraft, ReturnPath, <b>Trusted</b> <b>Domain</b> Project, Symantec ...|$|R
5000|$|... #Caption: MTIPS {{architectural}} design, {{demonstrating the}} MTIPS transport and agency <b>trusted</b> <b>domain</b> ...|$|R
50|$|The domain that is trusted; whose {{users have}} access to the <b>trusting</b> <b>domain.</b>|$|R
5000|$|Using this model, we {{defined a}} {{capability}} and policy matrix for our experimental <b>Trust</b> <b>Domain,</b> see Figure 5, with corresponding security policy P ={p1, p2, p3, ..., pk } below.|$|E
50|$|Finally, when {{privacy is}} requested, proxies must {{withhold}} asserted identity information outside the trusted domain by removing P-Asserted-Identity headers before forwarding user requests to untrusted identities (outside the <b>Trust</b> <b>Domain).</b>|$|E
5000|$|One {{of the key}} {{components}} of the Distributed Threat Intelligence Manager/Engine is the Distributed Trust manager of DTM. The DTM is built upon the principles of replication, consensus, and the ”wisdom of crowds.” In {{order to understand the}} behaviors of the FOSA system, it is important that an abstract model of the <b>Trust</b> <b>Domain</b> (TD) is presented. Here we present such a model. Let M = {C, Cnew, P, X, α}, be an abstract representation for a <b>Trust</b> <b>Domain.</b> This model allows us to reason as to the correctness of the DTM component of the Threat Intelligence/Engine. One potential side benefit of the model is that it will allow us to identify holes in our design. The basic components of the model, C, P, X, and α are defined below.C = {c1, c2, c3, ..., cn}, for some finite integer n, is the set of nodes in the <b>Trust</b> <b>Domain.</b> A node within this context is any Security Device that is collecting data and making decisions about the possibility of an attack. While n could be very large, for practical purposes associated with the implementation of DTM, we limit n to 16.|$|E
50|$|A {{trust that}} can extend beyond two <b>domains</b> to other <b>trusted</b> <b>domains</b> in the forest.|$|R
30|$|Management and {{maintenance}} of a deployment with multiple <b>trust</b> <b>domains</b> (which has been {{described in more detail}} in Section 4).|$|R
5000|$|The {{specification}} {{allows a}} variety of signature formats, encryption algorithms and multiple <b>trust</b> <b>domains,</b> and is open to various security token models, such as: ...|$|R
5000|$|Using this model, we {{defined a}} {{capability}} and policy matrix for our experimental <b>Trust</b> <b>Domain,</b> see Figure 5. The corresponding security policy P ={p1, p2, p3, ..., pk } is defined below. Based on these definitions, the security policy {{can be described}} as follows: ...|$|E
5000|$|DSM 4.3 is {{released}} New Features: Support for Windows ODX, SSD Cache, SSD TRIM, <b>Trust</b> <b>Domain</b> Support for ADS, Improved LDAP Support, NFSv4, IPv6 for NFS v3 and NFS v4, HFS+ Support, SMB improvements for directory listing and DFS, and other DSM Management improvements.|$|E
5000|$|Formation and {{maintenance}} of a “Trust Domain”(TD). The TD is a network of trusted security devices that have been deemed “safe.” Roughly, “safe” means that all nodes are running the same/latest revision of software and hardware, {{they have not been}} compromised and they have obtained a unique identifier or token certifying their identity to the <b>Trust</b> <b>Domain</b> ...|$|E
40|$|We propose generic {{declarative}} {{definitions of}} individual and collective trust relations between interacting agents and agent collections, and <b>trust</b> <b>domains</b> of trust-related agents in distributed systems. Our definitions yield (1) (in) compatibility, implicational and transitivity results for trust relationships, including a Datalog-implementability result for their logical structure; (2) computational complexity results for deciding potential and actual trust relationships and membership in trust domains; (3) a positive (negative) compositionality result for strong (weak) trust domains; (4) a computational design pattern for building up strong trust domains; and (5) a negative scalability result for <b>trust</b> <b>domains</b> in general. We instantiate our generic trust concepts in five major cryptographic applications of trust, namely: Access Control, Trusted Third Parties, the Web of Trust, Public-Key Infrastructures and Identity-Based Cryptography. We also show that accountability induces trust. Our defining principle for weak and strong <b>trust</b> (<b>domains)</b> is (common) belief in and (common) knowledge of agent correctness, respectively...|$|R
40|$|Traditional {{security}} {{models are}} {{out of place in}} peer networks, where no hierarchy ex-ists, and where no outside channel can be relied upon. In this nontraditional environment we must provide traditional security properties and assure fairness in order to enable the secure, collaborative success of the network. One solution is to form a <b>Trusted</b> <b>Domain,</b> and exclude perceived dishonest and unfair members. Previous solutions have been intolerant of masquerading, and have suffered from a lack of precise control over the allocation and exercise of privileges within the <b>Trusted</b> <b>Domain.</b> Our contribution is the introduction of a model that allows for controlled access to the group, granular control over privileges, and guards against masquerading. Contin-ued good behavior is rewarded by an escalation of privileges, while requiring an increased commitment of resources. Bad behavior results in expulsion from the <b>Trusted</b> <b>Domain.</b> In colluding with malicious nodes, well behaved nodes risk losing privileges gained over time; collusion is thereby discouraged. We implement our solution on top of the Bouncer Toolkit, produced by Narasimha e...|$|R
5000|$|In contrast, when either client or server or {{both are}} not joined to a domain (or {{not part of}} the same <b>trusted</b> <b>domain</b> environment), Windows will instead use NTLM for {{authentication}} between client and server.|$|R
50|$|Wearable Augmented task-List Interchange Device (W.A.L.I.D) {{system was}} {{designed}} by computing researchers of the wearable computing group at the University of Oregon as a simulator to test wearable communities projects. The first version was used in testing the Negotiation System described in When Cyborgs Meet: Building Communities of Cooperating Wearable Agents, and as described in Modeling Wearable Negotiation in an Opportunistic Task Oriented Domain. The WALID simulator is also modified for the <b>trust</b> <b>domain.</b>|$|E
50|$|The private {{extensions}} for asserted identity within trusted {{networks are}} designed to enable a network of trusted SIP servers to assert the identity of authenticated users, only within an administrative domain with previously agreed policies for generation, transport and usage of this identification information. These extensions also allow users to request privacy so that their identities are not spread outside the <b>trust</b> <b>domain.</b> To indicate so, they must insert the privacy token id into the Privacy header field.|$|E
5000|$|The {{creation}} of a <b>Trust</b> <b>Domain</b> {{and the formation of}} an initial group have been discussed in a previous work, see 2 in detail. However, because nodes can be compromised and their status can change over time, the DTIM must have the capability of expelling members and reconfiguring itself. This process of reconfiguration is initiated by either the receipt of a “last gasp” message from a member or when the DTM reconfiguration timer expires. The basic process works as follows. Upon receipt of a “last gasp” message, every node in the <b>Trust</b> <b>Domain</b> will initiate the reconfiguration by:• Sending a set of test patterns to the node suspected of being compromised. The test pattern matrix consists of a set of known intrusion vectors, as well as a set of non-intrusion patterns. Upon formation of the initial group, and every time that membership in the Trusted Domain changes, the matrix is reconstituted and distributed among all members. The matrix is distributed {{in such a way that}} no single member group of members colluding (as long as k, k N-1)/ 2; where k is number of colluding members), has complete knowledge of all test patterns ...|$|E
40|$|Abstract. We propose generic {{declarative}} {{definitions of}} individual and collective trust relations between interacting agents and agent collections, and <b>trust</b> <b>domains</b> of trust-related agents in distributed systems. Our definitions yield (1) (in) compatibility, implicational, and transitivity results for trust relationships, including a Datalog-implementability result for their logical structure; (2) computational complexity results for deciding potential and actual trust relationships and membership in trust domains; (3) a positive (negative) compositionality result for strong (weak) trust domains; (4) a computational design pattern for building up strong trust domains; and (5) a negative scalability result for <b>trust</b> <b>domains</b> in general. We instantiate our generic trust concepts in five major cryptographi...|$|R
40|$|Abstract. Trust {{is playing}} an {{important}} role in communications and transactions. Based on different reasons of <b>trust,</b> different <b>trusted</b> <b>domains,</b> possibly disjoint, are formed in mobile communications, preventing complete systems from working properly. What is lacked therein is a bridge that can link <b>domains,</b> across <b>trust</b> gaps to establish a complete trusted mobile communication system. In this paper, the authors propose a generic method to analyze and model a mobile communication system into a number of <b>trusted</b> <b>domains.</b> In order to overcome the trust gaps among the originally disjoint domains, the authors further propose three approaches to bridge different domains and demonstrate the use of mobile Personal Trusted Devices, such as mobile handsets to act as the said bridge. ...|$|R
50|$|Mobile email {{management}} (MEM) ensures your corporate emails are containerized using advanced proprietary/free encryption algorithms. MEM ensures all emails remain {{inside the}} secure container, so that attackers get encrypted data {{even if they}} try to compromise the device data using USB cable on a system. Heavy restrictions on clipboard, attachments and <b>trusted</b> <b>domains</b> can be enforced. Nothing can move in-out of the secure container as clipboard is disabled. Even the attachments are downloaded and saved inside the secure container. To view the attachments there is secure document reader as well as secure document editor available in MDM solutions. Adding <b>trusted</b> <b>domains</b> will ensure that data from corporate email is not leaked to malicious/suspicious domains.|$|R
50|$|The main {{functionality}} {{is supported}} by the P-Asserted-Identity extension header. When a proxy server receives a request from an untrusted entity and authenticates the user (i.e. verifies that the user is who he or she says that he or she is), it then inserts this header with the identity that has been authenticated, and then forwards the request as usual. This way, other proxy servers that receive this SIP request within the <b>Trust</b> <b>Domain</b> (i.e. the network of trusted entities with previously agreed security policies) can safely rely on the identity information carried in the P-Asserted-Identity header without the necessity of re-authenticating the user.|$|E
5000|$|P = {p1, p2, p3, ..., pk} is a {{security}} policy which describes the acceptable behaviors of a Security Device in the <b>Trust</b> <b>Domain.</b> Each pi is a rule {{composed of a}} subject, an object and an action that the subject may perform on the object. We note that security policies are rarely defined completely, as {{it is difficult to}} list every possible rule that is acceptable. Thus, we accept that we will have to add new rules to the policy as new acceptable actions that a node may perform on an object are discovered. It should be clear that P ⊆ α. We also note that ¬P ∪ P = α.|$|E
5000|$|Each {{participating}} {{amateur station}} wanting to use repeaters/gateways {{attached to a}} particular trust server domain must [...] "register" [...] with a gateway as their [...] "home" [...] system, which also populates their information into the trust server—a specialized central gateway system—which allows for lookups across a particular trust server domain. Only one [...] "registration" [...] per <b>trust</b> <b>domain</b> is required. Each amateur is set aside eight 10.x.x.x internal IP addresses for use with their callsign or radios, and various naming conventions are available to utilize these addresses if needed for specialized callsign routing. Most amateurs will need {{only a handful of}} these [...] "registered" [...] IP addresses, because the system maps these to callsigns, and the callsign can be entered into multiple radios.|$|E
40|$|MapReduce现有调度策略无法实现云环境中多租户作业的安全隔离。提出一种基于动态域划分的安全冗余调度策略：通过引入冲突关系、信任度、安全标签等概念，建立一种动态域划分模型，以将待调度节点划分为与不同租户作业关联的冲突域、可信域或调度域；结合冗余方式，将租户作业同时调度到其可信域节点和调度域节点(但不允许为其冲突域节点) ，通过二者执行环境和部分计算结果的一致性验证决定是否重新调度。实验分析了其有效性和安全性。 MapReduce’s current {{scheduling}} policies {{could not}} ensure the isolation between multi-tenant Tasks in the cloud. A securely redundant scheduling policy based on dynamic domains partition was proposed. First, {{a kind of}} dy-namic domain partition model was introduced in this policy. Based on the node’s current belief, security labels with the conflict relationship between tenants, a computing node was partitioned into the conflict <b>domain,</b> <b>trusted</b> <b>domain</b> or schedulable domain in this model. Second, through redundantly computing, two copies of each Task were assigned re-spectively to its <b>trusted</b> <b>domain</b> node and its schedulable domain node (but not allow for its conflict domain node) in this policy. And {{the integrity of the}} two nodes’execution environments and the consistence of their results on a small part of original input data were verified. Accordingly, it decided whether the schedulable <b>domain</b> node was <b>trusted.</b> Finally, the performance and security analysis in the prototype show its effectiveness. MapReduce's current scheduling policies could not ensure the isolation between multi-tenant Tasks in the cloud. A securely redundant scheduling policy based on dynamic domains partition was proposed. First, a kind of dynamic domain partition model was introduced in this policy. Based on the node's current belief, security labels with the conflict relationship between tenants, a computing node was partitioned into the conflict <b>domain,</b> <b>trusted</b> <b>domain</b> or schedulable domain in this model. Second, through redundantly computing, two copies of each Task were assigned respectively to its <b>trusted</b> <b>domain</b> node and its schedulable domain node (but not allow for its conflict domain node) in this policy. And the integrity of the two nodes' execution environments and the consistence of their results on a small part of original input data were verified. Accordingly, it decided whether the schedulable <b>domain</b> node was <b>trusted.</b> Finally, the performance and security analysis in the prototype show its effectiveness...|$|R
40|$|In {{any given}} collaboration, {{information}} needs to flow from one participant to another. While participants {{may be interested}} in sharing information with one another, it is often necessary for them to establish the impact of sharing certain kinds of information. This is because certain information could have detrimental effects when it ends up in wrong hands. For this reason, any would-be participant in a collaboration may need to establish the guarantees that the collaboration provides, in terms of protecting sensitive information, before joining the collaboration as well as evaluating the impact of sharing a given piece of information with a given set of entities. The concept of a <b>trust</b> <b>domains</b> aims at managing trust-related issues in information sharing. It is essential for enabling efficient collaborations. Therefore, this research attempts to develop a taxonomy for <b>trust</b> <b>domains</b> with measurable <b>trust</b> characteristics, which provides security-enhanced, distributed containers {{for the next generation of}} composite electronic services for supporting collaboration and data exchange within and across multiple organisations. Then the developed taxonomy is applied to possible scenarios (e. g. Health Care Service Scenario and ConfiChair Scenario), in which the concept of <b>trust</b> <b>domains</b> could be useful. Comment: 10, International Journal for Information Security Research (IJISR), Volume 3 Issues 1 / 2, ISSN 2042 - 4639 (2013). arXiv admin note: text overlap with arXiv: 1511. 0454...|$|R
40|$|A {{number of}} {{defensive}} technologies {{have been proposed}} {{for the prevention of}} security threats. However, these defensive technologies are implemented independently without cooperation among various network domains. In this paper, different administrative networks are leagued to form a federative network environment called a <b>trusted</b> <b>domain.</b> From the perspective of a network manager, {{there is a need to}} integrate diverse technologies into an effective defensive system among mutually <b>trusted</b> <b>domains.</b> An imperative task for security management is to put in place a shared defensive mechanism, or protective shield, for multiple domains. A cooperative approach to provide such a shared defensive system is presented with integration of both intra-domain and inter-domain defensive mechanisms. The simulation results show that, through sharing the defensive information, the firewall system can successfully detect and filter the repeated intrusions. Copyright (C) 2008 John Wiley & Sons, Ltd...|$|R
3000|$|Many {{solutions}} {{to the threat of}} identity theft, and to tackle identity-oriented attacks such as phishing and pharming, have been proposed in the last few years. One class of solutions is based on the notions of Identity Federation, where different identities for the same user in a particular <b>trust</b> <b>domain</b> are [...] "federated," [...] and Single Sign-On, where a user only needs to authenticate once in a single working session.|$|E
40|$|We propose STRIDE, a new DDoS-resilient Internet {{architecture}} that isolates attack traffic through viable bandwidth allocation, preventing a botnet from crowding out legitimate flows. This new architecture presents several novel concepts including tree-based bandwidth allocation and long-term static paths with guaranteed bandwidth. In concert, these mechanisms provide domain-based bandwidth guarantees within a <b>trust</b> <b>domain</b> – administrative domains grouped within a legal jurisdiction with enforceable accountability; each administrative domain in the <b>trust</b> <b>domain</b> can then internally split such guarantees among its endhosts to provide (1) connection establishment with high probability, and (2) precise bandwidth guarantees for established flows, {{regardless of the}} size or distribution of the botnet outside the source and the destination domains. Moreover, STRIDE maintains no per-flow state on backbone routers and requires no key establishment across administrative domains. We demonstrate that STRIDE achieves these DDoS defense properties through formal analysis and simulation. We also show that STRIDE mitigates emerging DDoS threats such as Denial-of-Capability (DoC) [6] and N 2 attacks [22] based on these properties {{that none of the}} existing DDoS defense mechanisms can achieve...|$|E
40|$|Abstract—Real-time {{information}} flow security properties such as timed noninterference provide assurances that some time dependent {{information flow}}s may not become possible. However, with transitive noninterference formulation, {{it is difficult}} to deal with intransitive flow policies like channel control and secure downgrading of information with time constraints. In this paper, we introduce the notion of <b>trust</b> <b>domain</b> into Timed Secure Process Algebra (tSPA), extending intransitive noninterference to real-time systems. Based on weak timed bisimulation equivalence, some security properties for intransitive flow are reformulated in a real-time setting, in particular one property which is persistent, meaning that if a system is secure then all of its reachable states are secure too. Furthermore, we prove that such persistent intransitive timed property is compositional, which is thus possible to alleviate the state space explosion problem caused by the interleaving of all the possible executions of parallel processes. Finally, we provide one case study showing {{that it is possible to}} model and analyze the real-time system through our approach. Index Terms—real-time information flow, <b>trust</b> <b>domain,</b> intransitive noninterference, timed bisimulation equivalence, timing covert channels I...|$|E
50|$|The SekChek AD tool {{analyses}} the domain-wide security {{policies and}} security objects defined in an Active Directory domain. The product analyzes the Domain account policies, Group Policy Objects (GPO) and links, User and Group accounts, Password Setting Objects (PSOs), DACLs and SACLs, Global Catalog Servers, Group memberships, Sites and Organizational Units, <b>Trusts,</b> <b>Domain</b> controllers and FSMO role owners.|$|R
40|$|Ad-hoc Networks (MANETs). In {{particular}} {{we examine}} the problem of naming and namespace design in an Identity-based Key Infrastructure (IKI). We examine the potential impact that different types of identifiers may have on the utility of ad hoc networks where an IKI provides the underlying key infrastructure. We also highlight problems inherent in extending namespaces to allow inter-operability amongst heterogeneous <b>trust</b> <b>domains.</b> I...|$|R
40|$|Grid systems {{involve the}} {{coordination}} of resources and services that {{are not subject to}} centralized control, span multiple <b>trust</b> <b>domains</b> and are accessible by a large number of users. They require a functionality for mapping users and credentials that exist at the virtual level to users and credentials that exist at the physical level. In this paper, we present a rigorous modeling of the Virtual Organization Membership Service (VOMS), a credential-based access control system. It enables the management and secure distribution of roles, groups and capabilities of users at the virtual level by improving both scalability and flexibility aspects. Published by SIS–Pubblicazioni Grid systems follow a new paradigm of distributed computing that enables {{the coordination of}} resources and services that are not subject to centralized control. These resources are heterogeneous, geographically dispersed, and can dynamically join and leave virtual pools. A Grid system may involve multiple <b>trust</b> <b>domains</b> and resources are assigned t...|$|R
