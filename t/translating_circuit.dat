2|47|Public
40|$|Abstract: The theory {{model of}} the {{reflective}} optical current transformer (OCT) has been established using Jones matrix method, and the proper devices have been chose. According to {{the characteristics of the}} transformer’s output, signal processing circuits including photoelectric <b>translating</b> <b>circuit,</b> preamplifier, correlation detector, lowpass filter and ARM processor have been designed. The simulation mode was established in the Matlab environment. The simulation analysis as well as the noise analysis was carried out. Finally, the analysis of the relationship between transformer's input and output was analyzed by using function fitting method. The fitting coefficients and error were given and quadratic or quartic curve fitting was proposed...|$|E
40|$|A longstanding {{trend in}} {{supercomputing}} {{is that as}} supercomputers scale, they become more difficult to program {{in a way that}} fully utilizes their parallel processing capabilities. At the same time they become more power-hungry - today's largest supercomputers each consume as much power as a town of 5000 inhabitants in the United States. In this thesis I investigate an alternative type of architecture, Asynchronous Logic Automata, which I conclude {{has the potential to be}} easy to program in a parametric way and execute very dense, high-throughput computation at a lesser energy cost than that of today's supercomputers. This architecture aligns physics and computation in a way that makes it inherently scalable, unlike existing architectures. An ALA circuit is a network of 1 -bit processors that perform operations asynchronously and communicate only with their nearest neighbors over wires that hold one bit at a time. In the embodiment explored here, ALA circuits form a 2 D grid of 1 -bit processors. ALA is both a model for computation and a hardware architecture. The program is a picture which specifies what operation each cell does, and which neighbors it communicates with. This program-picture is also a hardware design - there is a one-to-one mapping of logical cells to hardware blocks that can be arranged on a grid and execute the computation. On the hardware side, it can be seen as the fine-grained limit of several hardware paradigms which exploit parallelism, data locality and application-specific customization to achieve performance. In this thesis I use matrix multiplication as a case study to investigate how numerical computation can be performed in this substrate, and how the potential benefits play out in terms of hardware performance estimates. First we take a brief tour of supercomputing today, and see how ALA is related to a variety of progenitors. Next ALA computation and circuit metrics are introduced - characterizing runtime and number of operations performed. The specification part of the case study begins with numerical primitives, introduces a language called Snap for design for in ALA, and expresses matrix multiplication using the two together. Hardware performance estimates are given for a known CMOS embodiment by <b>translating</b> <b>circuit</b> metrics from simulation into physical units. The theory section reveals in full detail the algorithms used to compute and optimize circuit characteristics based on directed acyclic graphs (DAG's). Finally it is shown how the Snap procedure of assembling larger modules out of modules employs theory to hierarchically maintain throughput optimality. by Scott Wilkins Greenwald. Thesis (S. M.) [...] Massachusetts Institute of Technology, School of Architecture and Planning, Program in Media Arts and Sciences, 2010. Cataloged from PDF version of thesis. Includes bibliographical references (p. 62 - 63) ...|$|E
40|$|Abstract. We {{consider}} {{techniques for}} <b>translating</b> quantum <b>circuits</b> between various architectures. Specifically, {{we are interested}} in generic techniques for translating a parallelized quantum circuit between two given architectures which give tight asymptotic bounds on the increase in circuit depth. We approach the problem using a graph-theoretic model for physical circuit architectures. The architectures considered include the complete graph Kn, the two-dimensional and three-dimensional square lattices, the cycle, and the graph of a line, which gives rise to the well-studied Linear Nearest Neighbour (LNN) circuit architecture model. We present results for <b>translating</b> <b>circuits</b> between these architectures, including a generic technique for <b>translating</b> <b>circuits</b> from arbitrary architectures to the LNN architecture. ...|$|R
40|$|In {{this paper}} we present an electro-thermal {{coupling}} simulation technique for RF circuits. The proposed methodology {{takes advantage of}} well established tools for frequency <b>translating</b> <b>circuits</b> in order to significantly reduce the computational resources needed when frequencies of interest are separated by orders of magnitude. Postprint (published version...|$|R
40|$|FPGA-based {{synthesis}} tools require {{information about}} behaviour and architectural to make {{effective use of}} {{the limited number of}} cells typically available. A hardware description language which models layout and behaviour is used to elegantly specify circuit architecture. This source level information is used to efficiently <b>translate</b> <b>circuit</b> descriptions onto FPGA devices. ...|$|R
50|$|Circuits that {{interface}} or <b>translate</b> between digital <b>circuits</b> and analog circuits {{are known}} as mixed-signal circuits.|$|R
40|$|FPGA-based {{synthesis}} tools require {{information about}} behaviour and architectural to make {{effective use of}} {{the limited number of}} cells typically available. A hardware description language which models layout and behaviour is used to elegantly specify circuit architecture. This source level information is used to efficiently <b>translate</b> <b>circuit</b> descriptions onto FPGA devices. 1 Introduction FPGAs offer many advantages for many kinds of applications and present new opportunities for system design [DeHon 94], but their main disadvantages are the limited number of cells available on a single chip and the difficulty of performing global communication. It is important that the available cells are utilized efficiently. One {{way to do this is}} to design circuits with a low level schematic editor and manually configure the cells and routing elements. Although this method allows the realization of highly optimised hardware, it has several shortcomings. Design at the gate level is error prone, and c [...] ...|$|R
40|$|An obfuscator is an {{algorithm}} that <b>translates</b> <b>circuits</b> into functionally-equivalent similarly-sized circuits {{that are}} hard to understand. Efficient obfuscators would have many applications in cryptography. Until recently, theoretical progress has mainly been limited to no-go results. Recent works have proposed the first efficient obfuscation algorithms for classical logic circuits, based on a notion of indistinguishability against polynomial-time adversaries. In this work, we propose a new notion of obfuscation, which we call partial-indistinguishability. This notion is based on computationally universal groups with efficiently computable normal forms, and appears to be incomparable with existing definitions. We describe universal gate sets for both classical and quantum computation, in which our definition of obfuscation can be met by polynomial-time algorithms. We also discuss some potential applications to testing quantum computers. We stress that the cryptographic security of these obfuscators, especially when composed with translation from other gate sets, remains an open question. Comment: 21 pages,Proceedings of TQC 201...|$|R
40|$|Recently, {{powerful}} {{methods have}} been developed to aid in the construction of large asynchronous circuits. Asynchronous circuits are synthesized by starting with a highlevel specification and incrementally transforming the specification to produce a circuit. As these methods are informal, or at best semi-formal, the circuits designed using these methods can only be guaranteed correct by applying post hoc verification techniques. It is the object of this paper to perform a rigorous justification of the correctness of the transformation rules. With rigorously justified transformations, specifications may be <b>translated</b> into <b>circuits</b> that provably meet their specification...|$|R
40|$|UR 008 / 93 Tangram is a VLSI {{programming}} language: {{a language}} that is intended to express designs of VLSI circuits. VLSI tecluiologies allow the integration of complex functions 011 a single die. A VLSI programming language enables the designer {{to concentrate on the}} algorithmic aspects of these functions while abstracting from low-level implementation details. Tan-gram programs are <b>translated</b> automatically into <b>circuits</b> by a compiler developed in the group VLSI Design Automation arid Test. Taigrani programs are <b>translated</b> into VLSI <b>circuits</b> in a syntax-directed way, i. e. eacli language construct is translated directly into a corresponding sub-circuit. This setup induces a direct relatioiiship between Tangram progranis and the performance of the generated circuits, and offers the desigier the pos-sibility to program his function at an appropriate abstraction level while keeping control over the efficiency of the generated circuit. This report consists of thee parts. The first part gives a 11 infomial introduction hi Tan-gram, intended for people who are not familiar with Tangram. The second part is...|$|R
5000|$|The Extensible Coordination Tools (ECT) are {{a set of}} {{plug-ins}} for Eclipse {{that constitute}} an integrated development environment (IDE) for Reo.The ECT consists of a graphical editor for drawing circuits and an animation engine for animating data-flow through circuits.For code generation, the ECT contains a Reo-to-Java compiler, which generates code for circuits based on their constraint automaton semantics.In particular, on input of a Reo circuit, it produces a Java class, which simulates the constraint automaton that models the circuit.For verification, the ECT contains a tool that <b>translates</b> Reo <b>circuits</b> to process definitions in mCRL2.Users can subsequently use mCRL2 for model checking against mu-calculus property specifications.(Alternatively, the Vereofy model checker also supports verification of Reo circuits.) ...|$|R
40|$|Powerful {{methods have}} been developedby A. Martin and others whereby {{asynchronous}} circuits may be automatically constructed by starting from high-level specifications and incrementally transformingthem into asynchronous circuits. In this paper we make the informal arguments for the correctness of this compilation process mathematically rigorous. With rigorously justified transformations, specifications may be <b>translated</b> into <b>circuits</b> that provably meet their specification. A full proof of the correctness of the circuit compiler is given. Other results of independent interest include: the process model takes fairness of gates into account, hazard-freeness is formally defined, and all hazard-free circuits constructed solely of and, or, not gates and C elements are proven to behave deterministically to any outside observer. A novel notion of equivalence is used to justify the correctness of the compiler. Keywords: Asynchronous circuits, speed-independent circuits, verification, concurren [...] ...|$|R
40|$|We {{explore the}} {{connection}} between public-coin interactive proof systems with logspace verifiers and NC using two different approaches. In the first approach, we describe an interactive proof system for accepting any language in NC after a logspace reduction, where the verifier is logspace-bounded and the protocol requires polylog time. These results are proved by describing NC computations as computations over arithmetic circuits using maximum and average gates, and then <b>translating</b> the arithmetic <b>circuits</b> into interactive proof systems in [...] ...|$|R
50|$|Vishnuvardhan {{began to}} show glimpses of his talent right from a young age, {{performing}} well on the junior circuit. The year 2003 proved to be his defining year on the junior circuit with Vishnuvardhan winning the Junior Nationals, and earning himself {{a place in the}} Indian Junior Davis Cup team. This success on the junior <b>circuit</b> <b>translated</b> itself into glory in Inter-University tournaments as well, with Vishnuvardhan capturing the gold medal in successive tournaments as the team captain.|$|R
40|$|We {{investigate}} the simulation of Jahn-Teller models with two non-degenerate vibrational modes using a circuit QED architecture. Typical Jahn-Teller systems are anisotropic and require {{at least a}} two-frequency description. The proposed simulator consists of two superconducting lumped-element resonators interacting with a common flux qubit in the ultrastrong coupling regime. We <b>translate</b> the <b>circuit</b> QED model of the system to a two-frequency Jahn-Teller Hamiltonian and calculate its energy eigenvalues and the emission spectrum of the cavities. It is shown that the system can be systematically tuned to an effective single mode Hamiltonian from the two-mode model by varying the coupling strength between the resonators. The flexibility in manipulating {{the parameters of the}} circuit QED simulator permits isolating the effective single frequency and pure two-frequency effects in the spectral response of Jahn-Teller systems. Comment: 8 pages, 4 figures, figures revise...|$|R
40|$|International audienceCommunicating Hardware Processes (CHP) is a CSP-like {{language}} for describing asynchronous systems as sets of processes interacting via self-timed, handshake, channels. To facilitate the automatic translation of CHP to circuits the paper proposes {{to use a}} token-based formalism, Petri nets, as an intermediate model. Petri nets offer an adequate semantic capture for concurrency and choice present in the CHP model and can be formally verified {{using a variety of}} existing model-checking tools. On the other hand, they can act as a blueprint for a control circuit implementation, preserving the original behaviour. Petri nets can be <b>translated</b> to <b>circuits</b> either by means of direct mapping or by logic synthesis via the refinement into Signal Transition Graphs. Therefore, this approach {{is believed to be the}} way towards provably-correct design flow for asynchronous systems, which is currently missing. This work concentrates on the stage of translating CHP to Petri nets. For this a very challenging application has been selected, which is the problem of designing self-timed arbiters...|$|R
40|$|Fundamental {{classical}} kinematics {{are expressed}} in terms of Cartan geometry · and a number of new results found self consistently. The kinetic, potential and total energies are given in general kinematics, together with the collected kinematics of the hyperbolic and logarithmic trajectories, thus describing the main features of whirlpool galaxies. Frenet analysis is applied to find that the Frenet curvature of all planar orbits is the ratio of the linear and angular velocities, and that the Frenet torsion vanishes for all planar orbits. The acceleration due to gravity is expressed in plane polar coordinates and the properties discussed of the centripetal acceleration. In general the acceleration is a Cartan covariant derivative whose spin connection is the angular velocity vector. This is true for the general vector. It is shown that the acceleration expressed in plane polar coordinates produces Euler Bernoulli resonance when a driving force is present. This result can be <b>translated</b> into <b>circuit</b> theory and applied to the theory of energy from spacetime...|$|R
40|$|In this paper, a new {{approach}} to the object [...] oriented modeling of power [...] electronic circuits is demonstrated. It enables the user to specify power [...] electronic circuits conveniently in an easy [...] to [...] use modular fashion, yet generate simulation code that is efficient in its use, not requiring the introduction of artificial fast time [...] constants {{as was the case with}} many of the earlier proposed methodologies. Dymola enables the user to specify models for individual circuit elements in a highly modular, compact, and object [...] oriented fashion. Circuit models invoke these component models, and connect them in a topological manner, just as a Spice program would. The Dymola compiler automatically <b>translates</b> these <b>circuit</b> models into monolithic descriptions at the level of the simulation language resolving discontinuous circuit elements, such as switches, into appropriate event descriptions. For a typical AC [...] DC converter circuit controlled by GTO thyristors, it is shown that a speedup factor of a [...] ...|$|R
40|$|The use of SDL (Specification and Description Language) {{for digital}} {{hardware}} description and analysis is investigated in this dissertation. It continues the work undertaken at the University of Stirling and the Technical University of Budapest on hardware description with SDL, offering a modular approach to hardware design in SDL. Although SDL {{is widely used}} in the software and telecommunication community, it is not very popular with hardware designers. However, it has attracted the researcher's interest because it offers good system structuring features {{and the possibility of}} software-hardware co-design. One way of supporting hardware engineers when <b>translating</b> a <b>circuit</b> schematic into a SDL specification is to have a library of ready-to-use or pre-defined digital components. These elements may then be used as building blocks to aid in the development of more complex electronic hardware. The main goal of this dissertation has been to extend an existing SDL logic library, in an atte [...] ...|$|R
40|$|Abstract. We {{present a}} {{constructive}} method to <b>translate</b> small quantum <b>circuits</b> into their optical analogues, using linear components of present-day quantum optics technology only. These optical circuits perform precisely the computation that the quantum circuits are designed for, and {{can thus be}} {{used to test the}} performance of quantum algorithms. The method relies on the representation of several quantum bits by a single photon, and on the implementation of universal quantum gates using simple optical components (beam splitters, phase shifters, etc.). The optical implementation of Brassard et al. ’s teleportation circuit, a non-trivial 3 -bit quantum computation, is presented as an illustration. ...|$|R
40|$|Restricted until 10 Mar. 2010. Existing {{techniques}} that <b>translate</b> synchronous gate-level <b>circuits</b> into asynchronous counterparts do not adequately support gated clocks and consequently can incur unnecessary switching activity. This thesis proposes {{to address this}} limitation by translating the gated clocked structures into control circuits that triggers {{the evaluation of the}} datapath evaluation only when necessary. In particular, we propose a new design template called Gated Multi-Level Domino (GMLD) and a corresponding de-synchronization design flow that supports the automatic translation of a clock-gated synchronous netlist to a high-performance power-efficient asynchronous circuit. We demonstrate that this new approach reduces dynamic switching power with limited impact on area and maximum-achievable throughput...|$|R
40|$|With {{interconnect}} increasingly {{contributing to}} the electrical behaviour of integrated circuits, both by higher frequencies and smaller dimensions, it becomes increasingly important to incorporate its behaviour into simulations of ICs. This can be done rather elegantly by summarizing interconnect behaviour into a compact or reduced order model which is then co-simulated with the circuit. A similar approach {{can be used in}} the case of more conventional printed circuit boards. The SVDLaguerre algorithm proposed by Knockaert and De Zutter [4] can be used for this purpose. In this paper, we describe an e#cient implementation of the algorithm for multiple inputs, and show how the mathematical reduced order models can be <b>translated</b> into realizable <b>circuit</b> elements...|$|R
40|$|We {{present a}} {{constructive}} method to <b>translate</b> small quantum <b>circuits</b> into their optical analogues, using linear components of present-day quantum optics technology only. These optical circuits perform precisely the computation that the quantum circuits are designed for, and {{can thus be}} {{used to test the}} performance of quantum algorithms. The method relies on the representation of several quantum bits by a single photon, and on the implementation of universal quantum gates using simple optical components (beam splitters, phase shifters, etc.). The optical implementation of Brassard et al. 's teleportation circuit, a non-trivial 3 -bit quantum computation, is presented as an illustration. Comment: LaTeX with llncs. cls, 11 pages with 5 postscript figures, Proc. of 1 st NASA Workshop on Quantum Computation and Quantum Communication (QCQC 98...|$|R
40|$|Asynchronous or self-timed {{systems that}} do not rely on a global clock to keep system {{components}} synchronized can offer significant advantages over traditional clocked cir-cuits {{in a variety of}} applications. One advantage is that because of the separation of timing from functionality in these systems, the same circuit may be implemented in a variety of technologies without modification to the circuit. In this paper we explore one approach to self-timed de-sign and describe implementations of an example circuit in three different technologies. The simple routing chip used as the example has been described by writing a program in OCCAM, <b>translated</b> into a <b>circuit</b> consisting of a small set of basic modules, and implemented using Actel FPGA, CMOS, and GaAs technologies. ...|$|R
40|$|Abstract. This paper {{presents}} a new intelligent moisture controlling {{system based on}} the resistance sensor for molding sand. A kind of moisture sensor with high sensitivity, simple structure and being suitable for on-line detecting is designed. A moisture measuring circuit founded on integrated method of frequency and period measuring is proposed. The <b>circuit</b> <b>translates</b> {{the relation between the}} sensor’s resistance variation and moisture into that of frequency and moisture, which makes the system to be capable of wide measurement range and high measurement accuracy. What’s more, the system has the features of strong ability of anti-interference and adaptation to remote measuring. Testing result shows that the moisture measuring and controlling accuracy of the proposed system can achieved ± 0. 2 %...|$|R
40|$|We {{describe}} a technique for <b>translating</b> semi-custom VLSI <b>circuits</b> automatically, integrating two design environments, into eld programmable gate arrays (FPGAs) for rapid and inexpensive prototyping. The VLSI circuits are designed using a cell-matrix based environment that produces chips with density comparable to full custom VLSI design. These <b>circuits</b> are <b>translated</b> automatically into FPGAs for testing and system development. A four-bit pipelined array multiplier {{is used as}} an example of this translation. The multiplier is implemented in CMOS in both synchronous and asynchronous pipelined versions, and translated into Actel FPGAs both automatically, and by hand for comparison. The six test chips were all found to be fully functional, and the translation e ciency in terms of chip speed and area is shown. This result demonstrates the potential of this approach to system development. ...|$|R
40|$|The surface {{roughness}} of thin-film gold electrodes induces instability in impedance spectroscopy measurements of capacitive interdigital printable sensors. Post-fabrication thermodynamic annealing {{was carried out}} at temperatures ranging from 30 °C to 210 °C in a vacuum oven and the variation in surface morphology of thin-film gold electrodes was observed by scanning electron microscopy. Impedance spectra obtained at different temperatures were <b>translated</b> into equivalent <b>circuit</b> models by applying complex nonlinear least square curve-fitting algorithm. Principal component analysis was applied to deduce the classification of the parameters affected due to the annealing process and to evaluate the performance stability using mathematical model. Physics of the thermodynamic annealing was discussed based on the surface activation energies. The post anneal testing of the sensors validated the achieved stability in impedance measurement. © 2001 - 2012 IEEE...|$|R
40|$|This paper {{describes}} the T-Ruby system for designing VLSI circuits, starting from formal specifications {{in which they}} are described in terms of relational abstractions of their behaviour. The design process involves correctness-preserving transformations based on proved equivalences between relations, together with the addition of constraints. A class of implementable relations is defined. The tool enables such relations to be simulated or <b>translated</b> into a <b>circuit</b> description in VHDL. The design process is illustrated by the derivation of a circuit for 2 -dimensional convolution. Keywords: Formal methods; Design by transformation; Integration of formal systems med CAD. 1 INTRODUCTION 1 1 Introduction This paper describes a computer-based system, known as T-Ruby [12], for designing VLSI circuits starting from a high-level, mathematical specification of their behaviour: A circuit is described by a binary relation between appropriate, possibly complex domains of values, and simple rela [...] ...|$|R
30|$|Synchronous {{languages}} [1] such as Esterel[2], Lustre[3], or Quartz[4] {{have been}} proposed {{for the development of}} safety-critical embedded systems. They are based on a convenient programming model, which allows one to generate deterministic single-threaded code from multi-threaded synchronous programs. Thus, synchronous programs can directly be executed on simple micro-controllers without having the need to use complex operating systems. In addition, synchronous programs can straightforwardly be <b>translated</b> to hardware <b>circuits</b> [4 – 6], which makes synchronous languages attractive for the use in hardware–software co-design. Furthermore, the concise formal semantics of synchronous languages is the basis for formal verification of the correctness of the programs {{as well as of the}} used compilers [7 – 10]. Finally, since macro steps consist of only finitely many micro steps whose number is known at compile-time, one can determine tight bounds on the reaction time by a simplified worst-case execution time analysis [11 – 14].|$|R
40|$|Magnetic tunnel {{junctions}} (MTJ's) {{with low}} barrier magnets {{have been used}} to implement random number generators (RNG's) and it has recently been shown that such an MTJ connected to the drain of a conventional transistor provides a three-terminal tunable RNG or a $p$-bit. In this letter we show how this $p$-bit can be used to build a $p$-circuit that emulates a Bayesian network (BN), such that the correlations in real world variables can be obtained from electrical measurements on the corresponding circuit nodes. The $p$-circuit design proceeds in two steps: the BN is first translated into a behavioral model, called Probabilistic Spin Logic (PSL), defined by dimensionless biasing (h) and interconnection (J) coefficients, which are then <b>translated</b> into electronic <b>circuit</b> elements. As a benchmark example, we mimic a family tree of three generations and show that the genetic relatedness calculated from a SPICE-compatible circuit simulator matches well-known results...|$|R
40|$|The paper {{presents}} {{a method for}} <b>translating</b> Boolean <b>circuits</b> to CNF by identifying trees of ITE operators, where each ITE has fanout count of 1, and representing every such tree with a single set of equivalent CNF clauses without intermediate variables for ITE outputs, except for the tree output. This not only eliminates intermediate variables, but also reduces the number of clauses, compared to conventional translation to CNF, where each ITE is assigned an output variable and is represented with a separate set of clauses. Other gates with fanout count of 1 are similarly merged with their fanout gate to generate a single set of equivalent clauses. This translation to CNF was implemented in a decision procedure for the logic of Equality with Uninterpreted Functions and Memories (EUFM), and was applied to formulas from formal verification of microprocessors. To {{increase the number of}} ITE-trees in the Boolean formulas, the decision procedure was optimized to preserve the ITE-tree structure of arguments to equality comparisons. In conventional translation to CNF with the unoptimized decision procedure, the benchmark formulas require up to hundreds of thousands of CNF variables and millions of clauses. The best translation strategy reduced the CNF variables by up to 8 ×; the clauses by up to 17 ×; the SATsolver decisions by up to 79 ×; the SAT-solver conflicts by up to 96 ×; and accelerated the SAT solving by up to 420 ×...|$|R
40|$|Abstract. Symbolic Trajectory Evaluation (STE) is a {{powerful}} technique for hardware model checking. It {{is based on a}} 3 -valued symbolic simulation, using 0, 1 and X (”unknown”), where the X is used to abstract away values of the circuit nodes. Most STE tools are BDD-based and use a dual rail representation for the three possible values of circuit nodes. SAT-based STE tools typically use two variables for each circuit node, to comply with the dual rail representation. In this work we present a novel 3 -valued Circuit SAT-based algorithm for STE. The STE problem is <b>translated</b> into a <b>Circuit</b> SAT instance. A solution for this instance implies a contradiction between the circuit and the STE assertion. An unSAT instance implies either that the assertion holds, or that the model is too abstract to be verified. In case of a too abstract model, we propose a refinement automatically. We implemented our 3 -Valued Circuit SAT-based STE algorithm and applied it successfully to several STE examples. ...|$|R
40|$|We {{explain how}} {{programs}} specified in a sequential programming language {{can be translated}} automatically into a digital circuit. The possibility to specify which parts of a program are to be compiled into instruction sequences for a conventional processor, and which ones are to be <b>translated</b> into customized <b>circuits</b> has gained relevance {{with the advent of}} large programmable gate arrays (FPGA). They open the door to introduce massive, fine-grained parallelism. In order to demonstrate the feasibility of this approach, we present a tiny programming language featuring the basic programming and circuit design facilities. 1. Introduction The direct generation of hardware from a program - more precisely: the automatic translation of a program specified in a programming language into a digital circuit - has been a topic of interest for a long time. So far it appeared to be a rather uneconomical method of largely academic but hardly practical interest. It has therefore not been pursued with vigo [...] ...|$|R
40|$|Abstract—We {{explore the}} {{feasibility}} of accelerating soft pro-cessors by dynamically translating hot segments of code into FPGA circuits. We propose an approach that tackles two key challenges: the prohibitive compile time of standard synthesis tools and the limited run-time reconfigurability of commodity FPGAs. We use traces, or hot straight-line segments of code, as the units of code to <b>translate</b> into FPGA <b>circuits,</b> combined with a pre-synthesized overlay that is tuned for traces. The overlay, {{referred to as the}} Virtual Dynamically Reconfigurable (VDR) overlay consists of an array of functional units that are interconnected by a set of programmable switches. The overlay can be rapidly configured by the soft processor at run-time. Our approach avoids traditional synthesis and reduces code-to-circuit translation to the significantly faster mapping of instructions to VDR units. Preliminary evaluation shows that the overlay speeds up the execution of the benchmark by up to 9 X over a Nios II processor. The overlay incurs a 6. 4 X penalty in resources compared to Nios II. Keywords-Dynamic acceleration of soft processors; just-in-time compilation; overlay architectures I...|$|R
40|$|The authors {{model the}} neural {{mechanisms}} underlying spatial cognition, integrating neuronal systems and behavioral data, {{and address the}} relationships between long-term memory, short-term memory, and imagery, and between egocentric and allocentric and visual and ideothetic representations. Long-term spatial memory is modeled as attractor dynamics within medial–temporal allocentric representations, and short-term memory is modeled as egocentric parietal representations driven by perception, retrieval, and imagery and modulated by directed attention. Both encoding and retrieval/imagery require translation between egocentric and allocentric representations, which are mediated by posterior parietal and retrosplenial areas {{and the use of}} head direction representations in Papez’s circuit. Thus, the hippocampus effectively indexes information by real or imagined location, whereas Papez’s <b>circuit</b> <b>translates</b> to imagery or from perception according to the direction of view. Modulation of this translation by motor efference allows spatial updating of representations, whereas prefrontal simulated motor efference allows mental exploration. The alternating temporal–parietal flows of information are organized by the theta rhythm. Simulations demonstrate the retrieval and updating of familiar spatial scenes, hemispatial neglect in memory, and the effects on hippocampal place cell firing of lesioned head direction representations and of conflicting visual and ideothetic inputs...|$|R
40|$|How {{specific}} sensory stimuli evoke specific behaviors is {{a fundamental}} problem in neurobiology. In Drosophila, most odorants elicit attraction or avoidance depending on their concentration, {{as well as their}} identity [1]. Such odorants, moreover, typically activate combinations of glomeruli in the antennal lobe of the brain 2, 3 and 4, complicating the dissection of the <b>circuits</b> <b>translating</b> odor recognition into behavior. Carbon dioxide (CO_ 2), in contrast, elicits avoidance over a wide range of concentrations 5 and 6 and activates only a single glomerulus, V [5]. The V glomerulus receives projections from olfactory receptor neurons (ORNs) that coexpress two GPCRs, Gr 21 a and Gr 63 a, that together comprise a CO_ 2 receptor 7, 8 and 9. These CO_ 2 -sensitive ORNs, located in the ab 1 sensilla of the antenna, are called ab 1 c neurons [10]. Genetic silencing of ab 1 c neurons indicates that they are necessary for CO_ 2 -avoidance behavior [5]. Whether activation of these neurons alone is sufficient to elicit this behavior, or whether CO_ 2 avoidance requires additional inputs (e. g., from the respiratory system), remains unclear. Here, we show that artificial stimulation of ab 1 c neurons with light (normally attractive to flies) elicits the avoidance behavior typical of CO_ 2. Thus, avoidance behavior appears hardwired into the olfactory circuitry that detects CO_ 2 in Drosophila...|$|R
