42|123|Public
50|$|The <b>tag</b> <b>field</b> of the {{instruction}} consisted of a 3-bit tag modifier (tm) and a 4-bit tag designator (td).|$|E
5000|$|The {{memory block}} {{is placed in}} the set {{identified}} and the tag is stored in the <b>tag</b> <b>field</b> associated with the set.|$|E
50|$|In the example, the tag bits are 6 (14 - (6+2)), {{which are}} stored in <b>tag</b> <b>field</b> to match the address on cache request.|$|E
50|$|The <b>tagged</b> <b>fields</b> {{consist of}} a one-byte tag type, {{followed}} by a one-byte tag length, followed by a variable amount of data. The tag length {{does not include the}} tag type or tag length. All TZSP compatible decoders should skip unknown <b>tagged</b> <b>fields.</b>|$|R
5000|$|Generate tags from filenames or {{from the}} {{contents}} of other <b>tag</b> <b>fields.</b>|$|R
5000|$|Available <b>tag</b> <b>fields</b> (depending on format): Title, Artist, Album, Disc Album, Year, Track Number, Genre, Comment, Composer, Original Artist, Copyright, URL, Encoder and Picture ...|$|R
50|$|Where the {{identifier}} is not universal, its {{tag number}} {{may be too}} large for the 5-bit <b>tag</b> <b>field,</b> so it is encoded in further octets.|$|E
50|$|Type A {{instructions}} have, in sequence, a 3-bit prefix (instruction code), a 15-bit decrement field, a 3-bit <b>tag</b> <b>field,</b> and a 15-bit address field. They are {{conditional jump}} operations {{based on the}} values in the decrement registers specified in the <b>tag</b> <b>field.</b> Some also subtract the decrement field from {{the contents of the}} index registers. The implementation requires that the second two bits of the instruction code be non-zero, giving a total of six possible type A instructions. One (STR, instruction code binary 101) was not implemented until the IBM 709.|$|E
50|$|In the example, the tag bits are 12 (14 - 2), {{which are}} stored in the <b>tag</b> <b>field</b> of the cache line to match the address on cache request.|$|E
50|$|Since {{these early}} releases, Enterprise {{bookmarking}} platforms have diverged considerably. The most significant new release was the Jumper 2.0 platform with expanded and customizable knowledge <b>tagging</b> <b>fields.</b>|$|R
50|$|This special <b>tagged</b> <b>field</b> {{has neither}} <b>tag</b> length nor any tag data. The {{receiver}} should ignore it. It is sometimes used {{to pack the}} frame to a word boundary.|$|R
5000|$|The <b>tag</b> <b>fields</b> on the [...] and [...] {{commands}} {{consisted of}} lists of optional, required and alternative words. consider this example from exercise 4-1 in the 1973 TUTOR User's Memo: ...|$|R
5000|$|Pascal, Ada, and Modula-2 {{call them}} variant records (formally {{discriminated}} type in Ada), and require the <b>tag</b> <b>field</b> to be manually created and the tag values specified, {{as in this}} Pascal example: ...|$|E
50|$|Multiple {{levels of}} {{indirect}} addressing were supported. Indirect addresses {{had the same}} format as instructions, and the address modification indicated by the <b>tag</b> <b>field</b> of the indirect address was performed at each level.|$|E
50|$|The {{original}} Pentium 4 processor {{also had}} an eight-way set associative L2 integrated cache 256 KB in size, with 128-byte cache blocks. This implies 17 + 8 + 7 = 32, and hence 17 bits for the <b>tag</b> <b>field.</b>|$|E
50|$|The {{protocol}} specified {{three parts}} to each TZSP packet: A 4-byte header followed {{by one or}} more <b>tagged</b> <b>fields,</b> the last of which has to be the TAG_END(0x01), and finally the encapsulated data.|$|R
50|$|The {{encapsulated}} packet {{should be}} stored {{immediately after the}} <b>tagged</b> <b>fields.</b> This encapsulated packet may be truncated from the original full packet size and {{does not need to}} be the same size as specified in the TAG_RX_FRAME_LENGTH field. It is assumed that the encapsulated packet takes up the entire rest of the UDP packet.|$|R
50|$|This special <b>tagged</b> <b>field</b> {{has neither}} <b>tag</b> length nor any tag data. This {{means that there}} are no more tags. Following this tag, {{until the end of the}} UDP packet, is the {{encapsulated}} frame. This is the only tag that is required and must be included before the encapsulated data. No variable tags can follow this one.|$|R
50|$|Type B {{instructions}} have, in sequence, a 12-bit {{instruction code}} (with {{the second and}} third bits set to 0 to distinguish them from type A instructions), a 2-bit flag field, four unused bits, a 3-bit <b>tag</b> <b>field,</b> and a 15-bit address field.|$|E
50|$|As part of pre-release promotional {{efforts for}} the game, Gearbox began {{releasing}} Pre-Sequel-inspired character skins for Borderlands 2 in July 2014, and at San Diego Comic-Con, Gearbox partnered with The Nerdist {{to set up}} a Borderlands-themed laser <b>tag</b> <b>field</b> at Petco Park during the convention.|$|E
50|$|The major {{advantage}} of tagged pointers {{is that they}} take up less space than a pointer along with a separate <b>tag</b> <b>field.</b> This can be especially important when a pointer is a return value from a function. It can also be important in large tables of pointers.|$|E
5000|$|Tags can {{be added}} to APIs and API {{operations}} for ease of grouping by application developers. These tags are labels that can be used by application developers to organize and search for APIs in the Developer Portal. If a developer downloads the Swagger file for the API, the additional tag details are written to the <b>tags</b> <b>field.</b>|$|R
50|$|There are two {{exceptions}} to this format. First, when a TAG_END (0x01) is received it {{is the end of}} all of the <b>tagged</b> <b>fields.</b> It DOES NOT have a Tag length nor any associated data. The second is the TAG_PADDING (0x00). This can be inserted at any point and should be ignored. It DOES NOT have a tag length nor any tag data.|$|R
50|$|A {{significant}} {{example of}} the use of tagged pointers is the Objective-C runtime on iOS 7 on ARM64, notably used on the iPhone 5S. In iOS 7, virtual addresses are 33 bits (byte-aligned), so word-aligned addresses only use 30 bits (3 least significant bits are 0), leaving 34 bits for tags. Objective-C class pointers are word-aligned, and the <b>tag</b> <b>fields</b> are used for many purposes, such as storing a reference count and whether the object has a destructor.|$|R
5000|$|Indirect then {{register}} (IR): Obtain {{the indirect}} {{word from the}} address specified by Y, and perform the modification requested by the <b>tag</b> <b>field</b> of the indirect word. This may result in multiple levels of indirection. Perform the address modification specified by the instruction on the last indirect word encountered.|$|E
5000|$|The <b>Tag</b> <b>field</b> of {{the memory}} address is {{compared}} with tag bits associated with all the cache lines. If it matches, the block {{is present in the}} cache and is a cache hit. If it doesn’t match, then it’s a cache miss and has to be fetched from the lower memory.|$|E
5000|$|An {{upgraded}} version, the IBM 7094, {{was first}} installed in September 1962. It has seven index registers, instead of {{three on the}} earlier machines. The 7094 console has a distinctive box on top that displays lights for the four new index registers. photos The 7094 introduced double-precision floating point and additional instructions, but is largely backward compatible with the 7090. Minor changes in instruction formats, particularly the way the additional index registers are addressed, sometimes cause problems. On the earlier models, when more than one bit {{is set in the}} <b>tag</b> <b>field,</b> the contents of the two or three selected index registers are ORed, not added together, before the decrement takes place. On the 7094, if the three-bit <b>tag</b> <b>field</b> is not zero, it selects just one of seven index registers, however the [...] "or" [...] behavior remains available in a [...] "multiple tag" [...] compatibility mode.|$|E
50|$|The Ichud HaKehillos has {{founded a}} sister group called TAG (Technology Awareness Group). It {{provides}} various services to its target market, including installing and configuring Web filtering and monitoring software on computers, smartphones and other devices. TAG {{is a nonprofit}} organization staffed by volunteers, {{and there is no}} charge for these services. TAG has offices in the US, Canada, Europe, Australia and elsewhere; TAG also provides certain services worldwide using remote desktop software. In total, <b>TAG</b> <b>fields</b> about 1000 phone calls from around the world every day.|$|R
40|$|A {{number of}} {{important}} network protocols, such asQ. 2931 [26] (a standard protocol used to request connections in ATM networks,) or any protocol usingASN. 1 's Basic Encoding Rules (BER) [27, 28] use tagged message formats. An encoded message consists of tagfields interleaved with data <b>fields.</b> The <b>tag</b> <b>fields</b> define the size, position, format, and meaning of subsequent fields. Before software can take action based on these messages, they must be unmarshalled into a formatconvenient for further processing, which {{will depend on the}} implementation language. This is called presentationlayer processing...|$|R
50|$|The price <b>tag</b> for the <b>field</b> {{itself was}} around $450,000.|$|R
5000|$|In {{distributed}} computing, a discriminator is a typed <b>tag</b> <b>field</b> {{present in}} OMG IDL discriminated union type and value definitions that determines which union member is {{selected in the}} current union instance. Unlike in some conventional programming languages offering support for unions, discriminator in IDL is not identical to selected field name. Here {{is an example of}} IDL union type definition: ...|$|E
5000|$|The IBM 709 has a 38-bit accumulator, a 36-bit {{multiplier}} quotient register, {{and three}} 15-bit index registers whose contents are subtracted {{from the base}} address instead of being added to it. All three index registers can participate in an instruction: the 3-bit <b>tag</b> <b>field</b> in the instruction is a bit map specifying which of the registers participate in the operation, however if more than one index register is specified, their contents are combined by a logical or operation, not addition.p. 12 ...|$|E
50|$|The {{original}} Pentium 4 processor had a four-way set associative L1 data {{cache of}} 8 KiB in size, with 64-byte cache blocks. Hence, there are 8 KiB / 64 = 128 cache blocks. The {{number of sets}} {{is equal to the}} number of cache blocks divided by the number of ways of associativity, what leads to 128 / 4 = 32 sets, and hence 25 = 32 different indices. There are 26 = 64 possible offsets. Since the CPU address is 32 bits wide, this implies 21 + 5 + 6 = 32, and hence 21 bits for the <b>tag</b> <b>field.</b>|$|E
40|$|This paper {{describes}} a novel architecture for a contentaddressable memory core which {{is intended to}} be included in a Field-Programmable Gate Array or an Embedded Programmable Logic Core. Compared to a standard contentaddressable memory, our architecture allows for arbitrary data and tag widths; this flexibility is vital in FPGA applications, since the size of the data and <b>tag</b> <b>fields</b> are not known when the FPGA is manufactured. 1. 0 Introduction 1 Recent years have seen impressive improvements in the achievable density of integrated circuits. Accompanying these improvements, however, is a dramatic increase in the cost of fabricating an integrated circuit. No matter how seamless the integrated circui...|$|R
40|$|The Tactical Agriculture (TAg) {{program is}} an experiential, {{hands-on}} training, integrated pest and crop management educational program for field crop producers, and other agribusiness personnel, {{that has been}} active in New York State since 1990. The <b>TAg</b> program teaches <b>field</b> crop producers to better manage field crops, protect the environment and reduce health risks. Participants are actively integrated into the growing-season-long program, which focuses on the collection of data from their fields in conjunction with meetings to discuss critical pest and crop management issues that arise during the growing season. In 2002, we implemented TAg in Madison, Oneida, and Dutchess Counties. Five teams, consisting of 21 farming operations and 42 fields (800 acres) enrolled in <b>TAg.</b> <b>Fields</b> enrolled served as meeting places to discuss, demonstrate and practice IPM and ICM methods. Collectively, this years grower participants are expected to utilize their IPM and ICM training on the approximately 20, 000 acres of field crops they manage. Sound crop and pest management is critical to economical and efficient field crop production in New York State. The diverse landscape of Eastern New York provides a variety of environmenta...|$|R
3000|$|... 22. Tags of a SWF file {{are laid}} out sequentially. Every tag has a header with an {{unsigned}} 16 -b little-endian TagCodeAndLength field that comprises a 10 -byte tag type identifier and a 6 -b <b>tag</b> length <b>field,</b> with an optional wider length <b>field</b> for <b>tags</b> longer than 62 B.|$|R
