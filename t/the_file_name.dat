222|10000|Public
25|$|On May 27, 2010, Microsoft {{released}} Internet Explorer 8 {{optimized for}} Bing and MSN. <b>The</b> <b>file</b> <b>name</b> is BOIE8_ENUS_XP.exe.|$|E
25|$|Mail {{transfer}} mode uses Netascii transfer, but the file {{is sent to}} an email recipient by specifying that recipient's email address as <b>the</b> <b>file</b> <b>name.</b> RFC 1350 declared this mode of transfer obsolete.|$|E
25|$|When {{renaming}} a file, {{even when}} extensions are being displayed, Explorer highlights only the filename without selecting the extension. Renaming multiple files is quicker as pressing Tab automatically renames the existing file or folder and opens <b>the</b> <b>file</b> <b>name</b> text {{field for the}} next file for renaming. Shift+Tab allow renaming {{in the same manner}} upwards.|$|E
40|$|The dataset {{consists}} of 6 Zipped files and a Technical Report detailing the project. The original {{images from the}} drone survey are contained in <b>the</b> <b>files</b> <b>names</b> Images 1, Images 2, Images 3 and Images 4. The 3 D mesh model files are contained in <b>the</b> <b>file</b> <b>named</b> 3 d_mesh. <b>The</b> data points for the point cloud are contained in <b>the</b> <b>file</b> <b>named</b> point_cloud. A visualisation of the 3 D point cloud can be created using Potree: a free opensource webgl based point cloud renderer for large point clouds,? [URL]...|$|R
2500|$|... p – Uses the PATH {{environment}} {{variable to}} find <b>the</b> <b>file</b> <b>named</b> in <b>the</b> <b>file</b> argument to be executed.|$|R
5000|$|To display <b>the</b> <b>file</b> <b>named</b> letter.txt on <b>the</b> screen, {{the user}} can type {{either of the}} {{following}} two commands: ...|$|R
25|$|Each {{disk drive}} was {{identified}} by a drive letter, for example drive A and drive B. To {{refer to a}} file on a specific drive, the drive letter was prefixed to <b>the</b> <b>file</b> <b>name,</b> separated by a colon, e.g. A:FILE.TXT. With no drive letter prefixed, access was to files on the current default drive.|$|E
25|$|Each {{object is}} {{identified}} by a SHA-1 hash of its contents. Git computes the hash, and uses this {{value for the}} object's name. The object is put into a directory matching the first two characters of its hash. The rest of the hash is used as <b>the</b> <b>file</b> <b>name</b> for that object.|$|E
25|$|Compiled CIL code {{is stored}} in CLI assemblies. As {{mandated}} by the specification, assemblies are stored in Portable Executable (PE) file format, common on Windows platform for all dynamic-link library (DLL) and executable EXE files. Each assembly consists {{of one or more}} files, one of which must contain a manifest bearing the metadata for the assembly. The complete name of an assembly (not to be confused with <b>the</b> <b>file</b> <b>name</b> on disk) contains its simple text name, version number, culture, and public key token. Assemblies are considered equivalent if they share the same complete name.|$|E
5|$|The {{most recent}} version, CryptoWall 4.0, {{enhanced}} its code to avoid antivirus detection, and encrypts not only <b>the</b> data in <b>files</b> but also <b>the</b> <b>file</b> <b>names.</b>|$|R
50|$|A user named 'torvalds' {{creates a}} <b>file</b> <b>named</b> 'tekken' under <b>the</b> {{directory}} named 'videogames'. A user named 'wozniak' attempts to delete <b>the</b> <b>file</b> <b>named</b> 'tekken' but he cannot, {{since he is}} not the owner.|$|R
5000|$|Depending on <b>the</b> variant, <b>the</b> <b>files</b> have {{different}} <b>names</b> {{and therefore can}} appear or be labeled differently. For example, Antivirus 2009 has <b>the</b> [...]exe <b>file</b> <b>name</b> a2009.exe.|$|R
25|$|Periodic {{explicit}} object packing: Git stores each {{newly created}} object {{as a separate}} file. Although individually compressed, this takes {{a great deal of}} space and is inefficient. This is solved by the use of packs that store a large number of objects in one file (or network byte stream) called packfile, delta-compressed among themselves. Packs are compressed using the heuristic that files with the same name are probably similar, but do not depend on it for correctness. A corresponding index file is created for each packfile, telling the offset of each object in the packfile. Newly created objects (newly added history) are still stored singly, and periodic repacking is needed to maintain space efficiency. The process of packing the repository can be very computationally costly. By allowing objects to exist in the repository in a loose, but quickly generated format, Git allows the costly pack operation to be deferred until later, when time matters less, e.g., the end of a work day. Git does periodic repacking automatically but manual repacking is also possible with the git gc command. For data integrity, both packfile and its index have SHA-1 checksum inside, and also <b>the</b> <b>file</b> <b>name</b> of packfile contains a SHA-1 checksum. To check integrity, run the git fsck command.|$|E
500|$|Around 1971, DEC {{employee}} David H. Ahl {{had written}} a version of The Sumer Game in the BASIC programming language. Unlike FOCAL, BASIC was run not just on mainframe computers and minicomputers, but also on personal computers, then termed microcomputers, making it a much more popular language. In 1973, Ahl published BASIC Computer Games, a best-selling book of games written in BASIC, which included his version of The Sumer Game. The expanded version was renamed Hamurabi and added an end-of-game performance appraisal. The popularity of both {{the book and the}} programming language itself meant that Ahl's version of the game became the more widely known version over the relatively obscure original, as evidenced by the 1973 French FOCAL version considering [...] "Hamurabi" [...] to be the more prominent name. BASIC Computer Games noted that the game was a modification of a game [...] "written in FOCAL at DEC", but listed the author as [...] "unknown." [...] The 1978 edition of the book, which was the first million-selling computer book, noted that the game's name was intended to be [...] "Hammurabi", the correct spelling of the Babylonian king, but not only was one [...] "m" [...] dropped in <b>the</b> <b>file</b> <b>name</b> to fit in an eight-character limit, but Ahl consistently misspelled the name inside of the game, leading to the generally accepted name of the game to be Hamurabi.|$|E
2500|$|... 4.4BSD ar stores {{extended}} filenames {{by placing}} the string [...] "#1/" [...] followed by <b>the</b> <b>file</b> <b>name</b> length in <b>the</b> <b>file</b> <b>name</b> field, and storing the real filename {{in front of the}} data section.|$|E
50|$|SETLL {{causes the}} index pointer for <b>the</b> <b>file</b> <b>named</b> in Factor 2 to be {{positioned}} at the location specified by the value in Factor 1.|$|R
5000|$|File {{attributes}} {{are limited}} to a single bit; when set, an [...] appears {{to the right of}} <b>the</b> <b>file's</b> <b>name</b> in <b>the</b> catalogue, and <b>the</b> <b>file</b> may not be altered, overwritten or deleted.|$|R
50|$|In many {{operating}} systems, {{programs have}} an associated working directory {{in which they}} execute. Typically, <b>file</b> <b>names</b> accessed by <b>the</b> program are assumed to reside within this directory if <b>the</b> <b>file</b> <b>names</b> are not specified with an explicit directory name.|$|R
2500|$|Vim script {{files are}} stored in plain text format and <b>the</b> <b>file</b> <b>name</b> {{extension}} is [...]vim. There are libraries for Vim script available on http://www.vim.org/ as Vim plugins.|$|E
2500|$|The MKDE was {{retained}} in Pervasive.SQL 7. However, {{due to the}} new component architecture's dynamic binding, the internal architecture was modified. The application using Btrieve calls a services manager which then searches through various configured directories for specific encoded filename. <b>The</b> <b>file</b> <b>name</b> loaded for Btrieve files in Backus-Naur form is: ...|$|E
2500|$|Pervasive.SQL 7 was {{released}} in March, 1998, and included Scalable SQL 4 and Btrieve 7.0. Btrieve 7.0 ran on the same platforms as Btrieve 6.x: Windows 95, Windows NT 3.51 & 4, Netware and DOS. However, the company changed to a component-based architecture called SmartComponents to resolve compatibility issues with upgrades. This used a component identification scheme both embedded into the file and encoded into <b>the</b> <b>file</b> <b>name,</b> along with dynamic binding of [...] "glue files" [...] (DLLs loaded into memory only when needed). The dynamic binding of components was done using a new [...] "Abstract OS Services DLL" [...] that looked for {{the latest version of}} the appropriate needed component via <b>the</b> <b>file</b> <b>name</b> encoding. This [...] "glue module" [...] is then loaded into memory and used. The old log file format of Btrieve 6.x was also replaced with a new centralised log called PVSW.LOG and that had a unified and enhanced log file format. They also improved their error messages and error message reporting mechanisms.|$|E
40|$|The ZIP-file "OneTrajectoryManyAntennasExperiments. zip" {{contains}} {{archive of}} simulations of {{an array of}} different antennas reconstructing the same trajectory. <b>The</b> <b>files</b> with <b>names</b> antenna_TDOAs. cvs contain baseline TDOAs, our method TDOAs and real TDOAs for each time moment <b>The</b> <b>files</b> with <b>names</b> antennaTraj _xyzBaseline. csv contain trajectory reconstructed using baseline TDOAs: x,y,z values for each time moment <b>The</b> <b>files</b> with <b>names</b> antennaTraj _OurMethod. csv contain trajectory reconstructed using TDOAs calculated by our method: x,y,z values for each time moment <b>The</b> <b>files</b> with <b>names</b> ALLantennasTraj _xyzBaselineAndOur ALLantennas_TDOAs contain Matlab figures and pictures of all trajectories and TDOAs. Archive "signalsAndCorrelations. zip" contains signals captured by microphones and correlations between them...|$|R
5000|$|The {{original}} YMODEM {{was essentially}} the same as XMODEM except that it sent <b>the</b> <b>file's</b> <b>name,</b> size, and timestamp in a regular XMODEM block, [...] "block 0", before actually transferring <b>the</b> <b>file.</b> Sending <b>the</b> <b>file</b> size solved XMODEM's problem of superfluous padding at the end of <b>the</b> <b>file.</b>|$|R
50|$|The example compiles and executes <b>the</b> <b>file</b> <b>named</b> {{program as}} well as any {{statements}} typed from standard input. The arguments 1, 2, and 3 are passed as arguments to the program when it executes.|$|R
2500|$|The [...]FileFunction {{attribute}} is {{the standardized}} method to link each layer in the PCB with its corresponding Gerber file in the fabrication data. If attributes are not supported only informal methods are available. A simple informal {{method is to}} express the file function clearly in <b>the</b> <b>file</b> <b>name.</b> Sometimes the file extension is abused to indicate the file function - e.g[...]BOT for the bottom layer rather than the standard extension [...]GBR. This is very impractical as the customary link between format and extension is lost.|$|E
2500|$|During {{the fall}} of 2011, the band's website went live with a {{countdown}} to November 22, which was the eighth anniversary for the band's final show at the Fillmore in Denver. Since the production and release of their documentary many members of Five Iron Frenzy had already been discussing a reunion. Roper and Ortega Till began hinting at an announcement. On November 22, 2011, the band announced they were writing new material and {{working on a new}} record, and gave away a free song titled [...] "It Was A Dark And Stormy Night" [...] with <b>the</b> <b>file</b> <b>name</b> [...] "Hope Still Flies". In order to fund the new record the band started a Kickstarter hoping to raise $30,000 in 30 days. That goal was reached within the first hour of launching and the band ultimately raised over $200,000.|$|E
5000|$|If no {{characters}} are specified for <b>the</b> <b>File</b> <b>Name</b> Extension then <b>the</b> <b>File</b> <b>Name</b> shall consist {{of at least}} one character.|$|E
25|$|Note that to {{successfully}} separate <b>the</b> <b>file</b> <b>names</b> from <b>the</b> timestamps, the delimiter {{between them is}} a tab character. This is invisible on screen and can be lost when diffs are copy/pasted from console/terminal screens.|$|R
50|$|The {{titles are}} taken from <b>the</b> Flash-video <b>file</b> <b>names.</b>|$|R
5000|$|Normal {{temporary}} <b>files</b> have <b>the</b> following <b>file</b> <b>name</b> extensions: ...|$|R
5000|$|Raster minidriver, {{which has}} <b>the</b> <b>file</b> <b>name</b> {{extension}} [...]GPD, is the data file, {{and is also}} called the characterization file. <b>The</b> <b>file</b> <b>name</b> depends on the printer or printer family.|$|E
5000|$|BSD ar stores filenames right-padded with ASCII spaces. This causes {{issues with}} spaces inside filenames.4.4BSD ar stores {{extended}} filenames {{by placing the}} string [...] "#1/" [...] followed by <b>the</b> <b>file</b> <b>name</b> length in <b>the</b> <b>file</b> <b>name</b> field, and storing the real filename {{in front of the}} data section.|$|E
50|$|Note: There {{must be a}} {{space between}} the -s {{function}} and <b>the</b> <b>file</b> <b>name.</b>|$|E
50|$|The {{development}} still {{continued in}} a stylecode-related fork maintained by Alexander S. Aganichev (ASA) called “GoldED-asa”. When <b>the</b> <b>file</b> <b>names</b> of “GoldED-asa” didn’t {{fit in the}} MS-DOS length limit anymore, the fork has been renamed to “GoldED+”.|$|R
50|$|File {{extensions}} {{are often}} used in AmigaOS, {{but they are not}} mandatory and they are not handled specially by the DOS, being instead just a conventional part of <b>the</b> <b>file</b> <b>names.</b> Executable programs are recognized using a magic number.|$|R
40|$|There {{are many}} {{instances}} where all files in a directory {{need to be}} processed {{in exactly the same}} manner. If <b>the</b> <b>files</b> in <b>the</b> directory are not assigned using an incremental naming convention, or if <b>the</b> number of <b>files</b> in <b>the</b> directory change with each request, processing <b>the</b> <b>files</b> can be problematic. This paper helps to resolve this problem by using SAS ® external file functions. These functions can open a directory, determine the number of members of the directory, identify <b>the</b> <b>file</b> <b>names</b> {{that can be used to}} process the data, and close <b>the</b> directory. <b>File</b> processing can be done dynamically without ever knowing <b>the</b> physical <b>file</b> <b>name...</b>|$|R
