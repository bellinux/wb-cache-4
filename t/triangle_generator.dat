1|9|Public
40|$|I study A-infinity {{enhancements}} of algebraic Calabi-Yau triangulated categories admitting a (<b>triangle)</b> <b>generator,</b> {{showing that}} the Serre pairing on such categories determines and is determined by a cyclic pairing on an enhancement of the generator. Using this result, I construct a formal topological string field action inducing an extended D-brane superpotential for such categories. I also give a procedure for lifting certain 2 d boundary topological field theories to open topological string theories generated by a single D-brane. Comment: 84 pages, 2 figure...|$|E
25|$|The stock NES {{supports}} {{a total of}} five sound channels, two of which are pulse channels with 4 pulse width settings, one is a <b>triangle</b> wave <b>generator,</b> another is a noise generator (often used for percussion), and the 5th one plays low-quality digital samples.|$|R
40|$|The goal {{of these}} notes {{is to give}} a short {{introduction}} to Fukaya categories {{and some of their}} applications. The first half of the text is devoted to a brief review of Lagrangian Floer (co) homology and product structures. Then we introduce the Fukaya category (informally and without a lot of the necessary technical detail), and briefly discuss algebraic concepts such as exact <b>triangles</b> and <b>generators.</b> Finally, we mention wrapped Fukaya categories and outline a few applications to symplectic topology, mirror symmetry and low-dimensional topology. This text is based on a series of lectures given at a Summer School on Contact and Symplectic Topology at Université de Nantes in June 2011. Comment: 42 pages, 13 figure...|$|R
40|$|Jellyfish uses jet {{propulsion}} {{to achieve a}} diversity of propulsion modes in the water. In this article, a miniature jellyfish-inspired swimming robot is designed and built, which is capable of executing horizontal and vertical propulsion and maneuvers. In order to imitate the jellyfish in terms of morphology and kinematics, the robotic jellyfish {{is designed to be}} comprised of a streamlined head, a cavity shell, four separate drive units with bevel gears, and a soft outer skin encasing the drive units. A combination of four six-bar linkage mechanisms that are centrally symmetric is adopted as the driver to regulate the phases of contraction and relaxation of the bell-shaped body. Furthermore, a <b>triangle</b> wave <b>generator</b> is incorporated to generate rhythmic drive signals, which is implemented on the microcontroller. Through independent and coordinated control of the four drive units, the robotic jellyfish is able to replicate various propulsion modes similar to real jellyfish. Aquatic tests on the actual robot verify the effectiveness of the formed design scheme along with the proposed control methods...|$|R
40|$|AbstractSFQ digital-to-analog {{converters}} (DACs) {{are one of}} {{the candidates}} for AC voltage standards. We have proposed SFQ-DACs based on frequency modulation (FM). Bipolar output is required for applications of AC voltage standards, while our previous SFQ-DACs generated only positive voltages. In this paper, we present our design of a 4 -bit bipolar <b>triangle</b> voltage waveform <b>generator</b> comprising an SFQ-DAC. The waveform generator has two output ports. Synthesized half-period waveforms are alternately generated in one of the output ports. The bipolar output is realized by observing the differential voltage between the ports. We confirmed a 72 -μVPP bipolar triangle voltage waveform at the frequency of 35. 7 Hz...|$|R
40|$|When running any massively {{parallel}} code, load balancing {{is a priority}} {{in order to achieve}} the best possible parallel ef?ciency. A load balanced problem has an equal num-ber of degrees of freedom per processor. Load balancing is important in order to minimize idle time for all processors by equally distributing (as much as possible) the work each processor has to do. An unstructured meshing capability was implemented in PDT, Texas A&M University?s {{massively parallel}} deterministic transport code, utilizing the <b>Triangle</b> mesh <b>generator,</b> hence allowing the user to de?ne more realistic problem geometries and to de?ne 3 D problems through the extrusion of 2 D meshes. However, unstructured grids are signi?cantly harder to load balance than Cartesian rectangular meshes. A load balancing algorithm was implemented in PDT to minimize a metric that determines how unbalanced a mesh is {{based on the number of}} mesh cells per processor. Three test cases were con-structed, and a series of 162 inputs were created for each case. A maximum improvement of 89. 0 % was seen in Test Case 1, 89. 1 % was seen in Test Case 2, and 55. 2 % was seen in Test Case 3...|$|R
40|$|Motivated by {{applications}} in computer graphics, we study {{the problem of}} computing an optimal encoding in "triangle strips" of a triangulation of a polygonal surface model. The goal is to facilitate the transmission and rendering of a polygonal model by decomposing its triangulation into a minimum number of "tristrips," {{each of which has}} its connectivity stored implicitly in the ordering of the data points. While this optimization problem has been conjectured to be hard, its complexity status has been open. We prove that the tristrip decomposition problem is, in fact, NP-complete. We also propose two methods for solving the problem to optimality, one based on an integer programming formulation, one based on a branch-and-bound scheme that relies on lower bounding techniques for its e#ciency. We perform an extensive set of experiments to test the e#ciencies of these methods and some of their variants. These methods have been integrated also with the practical system FTSG (Fast <b>Triangle</b> Strip <b>Generator),</b> in order to utilize optimization methods on small subproblems {{to improve the quality of}} the heuristic solutions obtained by FTSG. We use experimentation to judge the quality of the improvements...|$|R
40|$|We present {{here the}} design and {{fabrication}} of a self-powered and autonomous fringing field capacitive sensor to measure soil water content. The sensor is manufactured using a conventional printed circuit board and includes a porous ceramic. To read the sensor, we use a circuit that includes a 10 kHz <b>triangle</b> wave <b>generator,</b> an AC amplifier, a precision rectifier and a microcontroller. In terms of performance, the sensor’s capacitance (measured in a laboratory prototype) increases up to 5 % when the volumetric water content of the porous ceramic changed from 3 % to 36 %, resulting in a sensitivity of S = 15. 5 pF per unity change. Repeatability tests for capacitance measurement showed that the θ v sensor’s {{root mean square error}} is 0. 13 %. The average current consumption of the system (sensor and signal conditioning circuit) is less than 1. 5 μ A, which demonstrates its suitability for being powered by energy harvesting systems. We developed a complete irrigation control system that integrates the sensor, an energy harvesting module composed of a microgenerator installed {{on the top of a}} micro sprinkler spinner, and a DC/DC converter circuit that charges a 1 F supercapacitor. The energy harvesting module operates only when the micro sprinkler spinner is irrigating the soil, and the supercapacitor is fully charged to 5 V in about 3 h during the first irrigation. After the first irrigation, with the supercap fully charged, the system can operate powered only by the supercapacitor for approximately 23 days, without any energy being harvested...|$|R
40|$|This largely expository lecture {{deals with}} aspects of {{traditional}} solid geometry suitable for applications in logic courses. Polygons are plane or two-dimensional; the simplest are triangles. Polyhedra [or polyhedrons] are solid or three-dimensional; the simplest are tetrahedra [or triangular pyramids, made of four triangles]. A regular polygon has equal sides and equal angles. A polyhedron having congruent faces and congruent [polyhedral] angles is not called regular, as some might expect; rather they {{are said to}} be subregular—a word coined for this lecture. To repeat, a subregular polyhedron has congruent faces and congruent [polyhedral] angles. A subregular polyhedron whose faces are all regular polygons is regular—using standard terminology. Geometers before Euclid showed that there are “essentially” only five regular polyhedra: every regular polyhedron is a tetrahedron (4 faces), a hexahedron or cube (6 faces), an octahedron (8 faces), a dodecahedron (12 faces), or an icosahedron (20 faces). The first question is whether there are subregular polyhedra that are not regular. For example, are there tetrahedra having congruent angles and congruent triangular faces but whose faces are not equilateral triangles? Another question is the classification of subregular polyhedra if they exist. For example, considering the fact that the regular tetrahedra all have equilateral triangles as faces, we ask which triangles other than equilaterals are faces of subregular tetrahedra. Similarly, considering the fact that the regular hexahedra all have squares as faces, we ask which quadrangles other than squares are faces of subregular hexahedra. After introductory remarks that include historical and philosophical points, we concentrate on tetrahedra. A triangle that is congruent to each of the four faces of a tetrahedron is called a generator of the tetrahedron. The main result proved is that every acute <b>triangle</b> is a <b>generator</b> of a subregular tetrahedron. The proof includes an algorithm –implementable with scissors and paper –that constructs from any given acute triangle a subregular tetrahedron whose faces are congruent to the given triangle. Algorithm: Given any acute triangle. Construct a similar triangle whose sides are double the sides of the given triangle. Draw the three lines connecting the three midpoints of the sides (making four triangles congruent to the given triangle—a central triangle surrounded by three peripheral triangles). Make three “hinges” along the lines connecting the midpoints. “Fold” the peripheral triangles together (into a tetrahedron). [LIGHTLY EDITED VERSION OF PRINTED ABSTRACT] Acknowledgements: William Lawvere, Colin McLarty, Irvin Miller, Frango Nabrasa, Lawrence Spector, Roberto Torretti, and Richard Vesley...|$|R

