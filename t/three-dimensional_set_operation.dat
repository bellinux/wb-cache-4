0|4659|Public
5000|$|A fuzzy <b>set</b> <b>operation</b> is an <b>operation</b> on fuzzy <b>sets.</b> These <b>operations</b> are {{generalization}} of crisp <b>set</b> <b>operations.</b> There {{is more than}} one possible generalization. The most widely used operations are called standard fuzzy <b>set</b> <b>operations.</b> There are three operations: fuzzy complements, fuzzy intersections, and fuzzy unions.|$|R
50|$|One of {{the most}} {{important}} scenic transition into the century was from the often-used two-dimensional scenic backdrop to <b>three-dimensional</b> <b>sets.</b> Previously, as a two-dimensional environment, scenery did not provide an embracing, physical environment for the dramatic action happening on stage. This changed when <b>three-dimensional</b> <b>sets</b> were introduced {{in the first half of}} the century. This, coupled with change in audience and stage dynamic as well as advancement in theater architecture that allowed for hidden scene changes, the theater became more representational instead of presentational, and invited audience to be transported to a conceived 'other' world.|$|R
40|$|AbstractIn the {{traditional}} process of <b>set</b> <b>operations,</b> {{the elements of}} set are usually represented through natural language rather than formalized representation, which affected the efficiency of <b>set</b> <b>operations.</b> In order {{to solve this problem}} and improve the efficiency of <b>set</b> <b>operations,</b> this paper innovatively introduced the binary into the process of <b>set</b> <b>operations,</b> proposed the concept of “set code”, and defined a series of operation rules about “set code”. All the above formed a relatively complete and formal computing system of “set code”. Experimental results show that: the process of <b>set</b> <b>operations</b> can be achieved through 0, 1 operation in the form of “set code”. We also successfully achieved the target of query operation which is very important in the database through the mechanism of “set code”...|$|R
40|$|Abstract: Software for {{visualization}} of <b>three-dimensional</b> <b>sets</b> appearing in differential game theory and in problems of control with incomplete information is discussed. Interactive interface for managing three-dimensional objects by two-dimensional pointing device (mouse) was created. Copyright © 1998 IFA...|$|R
40|$|This paper {{proposes a}} general {{framework}} for adding linearizable iterators to certain data structures that implement <b>set</b> <b>operations.</b> We introduce a condition on <b>set</b> <b>operations,</b> called locality, which informally states that <b>set</b> <b>operations</b> never make elements existing {{in the data}} structure unreachable to a sequential iterator's traversal. Data structures satisfying the locality condition can be augmented with a linearizable iterator via the proposed framework. Our technique is broadly applicable {{to a variety of}} data structures, including hash tables and binary search trees. We apply the technique to data structures taken from existing literature, prove locality of their operations, and demonstrate that the iterator framework does not significantly affect the performance of concurrent <b>set</b> <b>operations.</b> Comment: 19 pages, 13 figure...|$|R
40|$|Query {{languages}} {{designed for}} traditional database systems, {{such as the}} relational model, generally support <b>set</b> <b>operations.</b> However, the semantics of these <b>set</b> <b>operations</b> are not adequate for richer data models of newly developed object-based database systems that include object-oriented and semantic data modeling concepts. The reason is that precise semantics of <b>set</b> <b>operations</b> on complex objects require {{a clear distinction between}} the dual notions of a set and a type, both of which are present in the class construct found in object-based data models. In fact, class creation by <b>set</b> <b>operations</b> has largely been ignored in the literature. Our paper fills this gap by presenting a framework for executing set-theoretic operations on the class construct. The proposed <b>set</b> <b>operations,</b> including <b>set</b> difference, union, intersection and symmetric difference, determine both the type description of the derived class as well as its set membership. For the former, we develop inheritance rules for prope [...] ...|$|R
40|$|This paper {{addresses}} {{the problem of}} extrapolating extremely sparse <b>three-dimensional</b> <b>set</b> of digitized landmarks and bone surface points to obtain a complete surface representation. The extrapolation is done using a statistical principal component analysis (PCA) shape model similar to earlier approaches by Fleute et al...|$|R
40|$|The <b>operations</b> of data <b>set,</b> such as intersection, {{union and}} complement, are the {{fundamental}} calculation in mathematics. It's very significant that designing fast algorithm for <b>set</b> <b>operation.</b> In this paper, the quantum algorithm for intersection is presented. And its running time is sqrt(|A|*|B|*|C|) for <b>set</b> <b>operation</b> C = A intersection B, while classical computation needs O (|A| *|B|) steps of computation in general, where |. | denotes {{the size of}} set. The presented algorithm is the combination of Grover's algorithm, classical memory and classical iterative computation, and the combination method decrease the complexity of designing quantum algorithm. The method {{can be used to}} design other <b>set</b> <b>operations</b> also. Keywords: <b>Set</b> <b>operation,</b> General Grover iteration, Grover's algorithmComment: 15 page 2 Figur...|$|R
50|$|Null {{sets are}} used in <b>set</b> <b>operations.</b>|$|R
50|$|Java: Character class <b>set</b> <b>operations</b> are not supported.|$|R
40|$|We present robust {{algorithms}} for <b>set</b> <b>operations</b> and Euclidean {{transformations of}} curved shapes {{in the plane}} using approximate geometric primitives. We use a refinement algorithm to ensure consistency. Its computational complexity is (n n+k) for an input of size n with k=(n^ 2) consistency violations. The output is as accurate as the geometric primitives. We validate our algorithms in floating point using sequences of six <b>set</b> <b>operations</b> and Euclidean transforms on shapes bounded by curves of algebraic degree 1 to 6. We test generic and degenerate inputs. Keywords: robust computational geometry, plane subdivisions, <b>set</b> <b>operations...</b>|$|R
40|$|AbstractIn this paper, we {{establish}} a theoretical approach to define fuzzy <b>set</b> <b>operations</b> {{based on the}} theory of falling shadows. The main characteristic of our definition of fuzzy <b>set</b> <b>operations</b> {{is that it is}} semantically dependent {{in the sense that the}} formula of our definition will vary according to the correlation of the fuzzy sets concerned. We show that the well known formulae of fuzzy <b>set</b> <b>operations</b> such as the max-mm operations, the bounded sum-difference operations, and the probability sum-product operations are consequences of our definition under three different correlations of the fuzzy sets...|$|R
50|$|One of {{the most}} {{important}} scenic transition into the century was from the often-used two-dimensional scenic backdrop to <b>three-dimensional</b> <b>sets.</b> Previously, as a two-dimensional environment, scenery did not provide an embracing, physical environment for the dramatic action happening on stage. This changed when <b>three-dimensional</b> <b>sets</b> were introduced {{in the first half of}} the century. This, coupled with change in audience and stage dynamic as well as advancement in theatre architecture that allowed for hidden scene changes, the theatre became more representational instead of presentational, and invited audience to be transported to a conceived 'other' world. The early 19th century also saw the innovation of the moving panorama: a setting painted on a long cloth, which could be unrolled across the stage by turning spools, created an illusion of movement and changing locales.|$|R
5000|$|New <b>set</b> <b>operations</b> such as , , <b>set</b> differences, and set intersections.|$|R
40|$|Privacy-preserving <b>set</b> <b>operations</b> {{are useful}} for many data mining {{algorithms}} as building tools. Protocols for privacy-preserving <b>set</b> <b>operations</b> have considered semi-hones and malicious adversarial models in cryptographic settings, whereby an adversary is assumed to follow or arbitrarily deviate from the protocol. Semi-honest model provides weak security requiring small amount of computation, on the other hand, malicious model provides strong security requiring expensive computations like homomorphic encryption. However, efficient computation of such <b>set</b> <b>operations</b> are desirable for practical implementations. In this paper, we build efficient and private <b>set</b> <b>operations</b> avoiding the use of expensive tools like homomorphic encryption, zero-knowledge proof, and oblivious transfer. Our protocol is constructed in game-theoretic model. In other words, instead of being semi-honest or malicious, the parties are viewed as rational and are assumed (only) to act in their self-interest. We show that our protocol satisfies computational Nash equilibrium...|$|R
5000|$|... #Subtitle level 2: Methods for {{visualizing}} <b>three-dimensional</b> data <b>sets</b> ...|$|R
40|$|Models {{are used}} intensively during the design, {{implementation}} {{and evolution of}} software systems. Because the software systems are getting larger models are getting larger too. Consequently, there is a demand for automated tool support to process these models. The basic <b>set</b> <b>operations,</b> applied on models, provide a way of compa ring and merging models. This thesis discusses an implementation of <b>set</b> <b>operations</b> on UML class diagrams. They are implemented in a CASE-tool independent environment. The <b>set</b> <b>operations</b> are used to merge, slice and check UML models and the implementation is tested on big industrialforward- and reverseengineered models. ...|$|R
40|$|The {{propagation}} and {{combination of}} uncertainties can significantly influence {{the performance of}} an information system. Although there have been great efforts in the propagation of randomness, fuzziness and other uncertainties, there {{is not yet a}} thorough study for the propagation of roughness in rough <b>set</b> <b>operations.</b> The derivation of a roughness bound for various rough <b>set</b> <b>operations</b> is given. We proved that there is no defined bound for the intersection operation of any two rough sets but there are bounds for union, complement and most difference operations. This is beneficial for decision making involving large volumes of rough <b>set</b> <b>operations...</b>|$|R
40|$|The Standard Template Library (STL) [1] {{provides}} implementation {{for basic}} <b>set</b> <b>operations</b> on sorted ranges. When {{the result of}} a <b>set</b> <b>operation</b> is only needed temporarily, conventional STL usage schemes require artificial auxiliary objects and lead to clumsy programming style. We propose a more elegant solution, in which the resulting range is built implicitly, so that traversing it incurs no additional overhead. This is achieved by encapsulating the logic of <b>set</b> <b>operations,</b> so that the next element in the output range is computed "on-the-fly". The new template-based implementation of <b>set</b> <b>operations</b> also satisfies all the assumptions that hold for their STL counterparts. Motivation The Standard Template Library [1] offers set-theoretic operations union, intersection, difference and symmetric difference, accessible through the header file. These operations (or algorithms in STL-ese) are applicable to sets, as well as to other sorted ranges with input iterators defined. Given [...] ...|$|R
50|$|More {{sophisticated}} transformations include <b>set</b> <b>operations</b> on {{closed shapes}} (union, difference, intersection, etc.).|$|R
5000|$|Bags: Module {{for working}} with multisets. Provides {{primitive}} <b>set</b> <b>operation</b> analogues and duplicate counting.|$|R
5000|$|... #Subtitle level 2: When two nulls are equal: grouping, sorting, {{and some}} <b>set</b> <b>operations</b> ...|$|R
40|$|The {{reconstruction}} of discrete two- or <b>three-dimensional</b> <b>sets</b> from their orthogonal projections {{is one of}} the central problems in the areas of medical diagnostics, computer-aided tomography, and pattern recognition. In this paper we will give a polynomial algorithm for {{reconstruction of}} some class of convex three-dimensional polyominoes that has time complexity O(nâ 8 ̆ 1 · log n) ...|$|R
50|$|In many stage productions, {{theatrical}} scenery {{is mounted}} to line sets {{in order to}} be flown in and out so as to quickly change set pieces {{during the course of a}} performance. For example, painted soft and hard flats (e.g., muslin drops) and are commonly used to depict settings. Also, <b>three-dimensional</b> <b>sets</b> (e.g., box sets) may be flown.|$|R
50|$|In {{addition}} to the single-element insert, delete and lookup <b>operations,</b> several <b>set</b> <b>operations</b> have been defined on AVL trees: union, intersection and set difference. Then fast bulk operations on insertions or deletions can be implemented based on these set functions. These <b>set</b> <b>operations</b> rely on two helper operations, Split and Join. With the new operations, the implementation of AVL trees can be more efficient and highly-parallelizable.|$|R
40|$|International audienceThis paper {{deals with}} data {{structures}} within GIS. Continuous phenomenons are usually represented by raster structures for simplicity reasons. With such structures spatial repartitions {{of the data}} is not easily interpretable. Moreover, in an overlapping clustering context these structures remove the links between the data and the algorithms. We propose a vector representation of such data based on non-regular multi-rings polygons. The structure requires multipart nested polygons and new <b>set</b> <b>operations.</b> We present the formalism based on belief theory and uncertainty reasoning. We also detail {{the implementation of the}} structures and the <b>set</b> <b>operations.</b> The structures and the <b>set</b> <b>operations</b> are illustrated in the context of forest classification having diffuse transitions...|$|R
5000|$|Spatial {{operators}} {{for determining}} geospatial <b>set</b> <b>operations,</b> like union, difference, symmetric difference and buffers (provided by GEOS).|$|R
3000|$|... [...]. In {{efficient}} implementations, {{the four}} <b>set</b> <b>operations</b> are collapsible {{into a single}} linear scan through Γ(v [...]...|$|R
40|$|Logic Statements, Negation, and Compound Statements Truth Tables and Logical Equivalences Conditional and Biconditional Statements Logical Arguments Open Statements and Quantifiers Chapter Review Deductive Mathematical Systems and Proofs Deductive Mathematical Systems Mathematical Proofs Chapter Review Set Theory Sets and Subsets <b>Set</b> <b>Operations</b> Additional <b>Set</b> <b>Operations</b> Generalized <b>Set</b> Union and Intersection Chapter ReviewRelations Relations The Order Relations, Reflexive, Symmetric, Transitive, and Equivalence Relations Equivalence Relations, Equivalence Classes, and Partitions Chapter Revi...|$|R
40|$|We {{discuss the}} issues {{encountered}} in the extended algebra and calculus languages for nested relations defined by Roth, Korth, and Silberschatz. Their equivalence proof between algebra and calculus fails because of the keying problems {{and the use of}} extended <b>set</b> <b>operations.</b> Extended <b>set</b> <b>operations</b> also have unintended side effects. Furthermore, their calculus seems to allow the generation of power sets, thus making it more powerful than their algebra...|$|R
40|$|Following Frénod and Sonnendrücker ([12]), we {{consider}} the finite Larmor radius regime for a plasma submitted to a large magnetic field and take into account both the quasineutrality and the local thermodynamic equilibrium of the electrons. We then rigorously establish the asymptotic gyrokinetic limit of the rescaled and modified Vlasov-Poisson system in a <b>three-dimensional</b> <b>setting</b> {{with the help of}} an averaging lemma...|$|R
50|$|The {{energy density}} of sound waves {{decreases}} as they spread out, so that increasing {{the distance between}} the receiver and source results in a progressively lesser intensity of sound at the receiver. In a normal <b>three-dimensional</b> <b>setting,</b> with a point source and point receptor, the intensity of sound waves will be attenuated according to the inverse square of the distance from the source.|$|R
40|$|Stereological {{description}} of dispersed microstructure {{is not an}} easy task and remains the subject of continuous research. In its practical aspect, a correct stereological {{description of}} this type of structure is essential for the analysis of processes of coagulation and spheroidisation, or for studies of relationships between structure and properties. One of the most frequently used methods for an estimation of the density Nv and size distribution of particles is the Scheil - Schwartz - Saltykov method. In this article, the authors present selected methods for quantitative assessment of ductile iron microstructure, i. e. the Scheil - Schwartz - Saltykov method, which allows a quantitative description of <b>three-dimensional</b> <b>sets</b> of solids using measurements and counts performed on two-dimensional cross-sections of these sets (microsections) and quantitative description of <b>three-dimensional</b> <b>sets</b> of solids by X-ray computed microtomography, which is an interesting alternative for structural studies compared to traditional methods of microstructure imaging since, as a result, the analysis provides a three-dimensional imaging of microstructures examined...|$|R
3000|$|... {{with the}} <b>set</b> <b>operation</b> [...] "exclusive-or addition" [...] ⊕ (symmetric {{difference}} of sets) defines a Boolean ring. Let [...]...|$|R
40|$|AbstractThis paper {{investigates the}} general {{roughness}} bounds for rough <b>set</b> <b>operations.</b> Compared with set-oriented rough sets, the results {{prove that the}} same upper bound of the roughness for the union, difference and complement operation could {{be determined by the}} roughness of the two operand sets. However, the lower roughness bounds of set-oriented rough <b>sets</b> <b>operations</b> do not hold for other rough sets. We provide an example to show the derived bounds from the operand’s roughness...|$|R
50|$|In {{addition}} to the single-element insert, delete and lookup <b>operations,</b> several <b>set</b> <b>operations</b> have been defined on red-black trees: union, intersection and set difference. Then fast bulk operations on insertions or deletions can be implemented based on these set functions. These <b>set</b> <b>operations</b> rely on two helper operations, Split and Join. With the new operations, the implementation of red-black trees can be more efficient and highly-parallelizable. This implementation allows a red root.|$|R
