85|1646|Public
25|$|In {{addition}} to atomic test cases, test sequences containing several <b>test</b> <b>steps</b> can be specified.|$|E
25|$|With the {{addition}} of valid transitions between individual classes of a classification, classifications {{can be interpreted as}} a state machine, and therefore the whole classification tree as a Statechart. This defines an allowed order of class usages in <b>test</b> <b>steps</b> and allows to automatically create test sequences. Different coverage levels are available, such as state coverage, transitions coverage and coverage of state pairs and transition pairs.|$|E
2500|$|Signal {{transitions}} (e.g. linear, spline, sine ...) between selected {{classes of}} different <b>test</b> <b>steps</b> can be specified.|$|E
2500|$|A {{concrete}} timing (e.g. in Seconds, Minutes ...) {{can be specified}} {{for each}} <b>test</b> <b>step.</b>|$|R
30|$|A <b>test</b> <b>step</b> {{is a time}} {{interval}} during a test (definition based on [8]).|$|R
5000|$|A {{concrete}} timing (e.g. in Seconds, Minutes ...) {{can be specified}} {{for each}} <b>test</b> <b>step.</b>|$|R
5000|$|Enforce <b>test</b> <b>steps</b> to be {{followed}} within specifications and correct timing.|$|E
50|$|AscentialTest is an {{enterprise}} level Test Management System that encompasses Test Planning, Development, Data Management, Execution and Defect Tracking, developed by Zeenyx Software. Users build automated <b>test</b> <b>steps</b> by interacting with graphical {{representations of the}} application under test. Manual and automated tests are created by dragging and dropping reusable <b>test</b> <b>steps</b> in a visual test editor.|$|E
5000|$|In {{addition}} to atomic test cases, test sequences containing several <b>test</b> <b>steps</b> can be specified.|$|E
30|$|As in the LOS {{scenario}}, {{this scenario}} was also divided into separated integration and <b>testing</b> <b>steps.</b>|$|R
30|$|Filled {{circles on}} the grid show that a <b>test</b> <b>step</b> should cover a certain {{equivalence}} class.|$|R
40|$|AbstractThree {{building}} blocks for test guidance algorithms, the step evaluation, the state evaluation and the evaluation order, are proposed in this paper. We show how a simple family of coverage criteria {{can be used to}} evaluate individual <b>testing</b> <b>steps,</b> and how the nondeterministic behaviour of the tested system can be handled and longer term <b>test</b> <b>step</b> plans created with the state evaluation. We use the evaluation order to de ne which and when states are evaluated. Six heuristic algorithms based on these ideas are implemented. Four of them use a game-like approach to black box testing. In addition, three other test guidance algorithms are implemented for comparison. The algorithms are compared by measuring the number of <b>testing</b> <b>steps</b> required for detecting errors that are in ltrated to the conference protocol systems of two different sizes...|$|R
5000|$|Signal {{transitions}} (e.g. linear, spline, sine ...) between selected {{classes of}} different <b>test</b> <b>steps</b> can be specified.|$|E
50|$|The test {{specification}} is software. Test specification is {{sometimes referred to}} as test sequence, which consists of <b>test</b> <b>steps.</b>|$|E
5000|$|Present {{the outcome}} (such as Passed, Failed or Aborted) of <b>test</b> <b>Steps</b> and the {{complete}} Sequence to the operator ...|$|E
50|$|The test's {{complexity}} {{is hidden}} behind graphics. The lowest level signal description consists of either <b>test</b> <b>step</b> lists or so called direct definitions.|$|R
40|$|Three {{building}} blocks for test guidance algorithms, the step evaluation, the state evaluation and the evaluation order, are proposed in this paper. We show how a simple family of coverage criteria {{can be used to}} evaluate individual <b>testing</b> <b>steps,</b> and how the nondeterministic behaviour of the tested system can be handled and longer term <b>test</b> <b>step</b> plans created with the state evaluation. We use the evaluation order to define which and when states are evaluated. Six heuristic algorithms based on these ideas are implemented. Four of them use a game-like approach to black box testing. In addition, three other test guidance algorithms are implemented for comparison. The algorithms are compared by measuring the number of <b>testing</b> <b>steps</b> required for detecting errors that are infiltrated to the conference protocol systems of two different sizes. Key words: Conformance testing,testing automation,test selection heuristic...|$|R
3000|$|... {{is chosen}} {{in the one}} subband whose {{modulation}} falls into another equivalence class (note that for each <b>test</b> <b>step</b> in Figure 6, there is maximum one definition of such a subband).|$|R
50|$|Minimizing risk of {{misunderstanding}} complex {{test procedures}} {{can be done}} by virtually describing <b>test</b> <b>steps</b> in front of the tester on the actual test object.|$|E
50|$|Offline {{generation}} of manually deployable tests {{means that a}} model-based testing tool generates test cases as human-readable assets that can later assist in manual testing; for instance, a PDF document describingthe generated <b>test</b> <b>steps</b> in a human language.|$|E
50|$|Junior testers {{can learn}} complex test {{scenarios}} with less supervision. <b>Test</b> <b>steps</b> will {{be pointed out}} and information about pass criteria need to be confirmed the junior tester can train before the functionality is finished and do some regression testing.|$|E
50|$|Top-down {{testing is}} an {{approach}} to integrated testing where the top integrated modules are tested and the branch of the module is <b>tested</b> <b>step</b> by step {{until the end of}} the related module.|$|R
3000|$|Find the {{bad pixels}} in {{position}} {{by using an}} embedding testing operation. The embedding <b>testing</b> <b>step</b> {{is similar to that}} in [14, 15]. Each bad pixel consumes 25 bits of payload to indicate the embedding position; [...]...|$|R
5000|$|The loops in steps 4, 5 and 6 are trickier to evaluate. The outer loop <b>test</b> in <b>step</b> 4 will execute ( [...] n + 1 [...] )times (note that {{an extra}} step is {{required}} to terminate the for loop, hence n + 1 and not n executions), which will consume T4( [...] n + 1 [...] ) time. The inner loop, on the other hand, is governed by the value of j, which iterates from 1 to i. On the first pass through the outer loop, j iterates from 1 to 1: The inner loop makes one pass, so running the inner loop body (step 6) consumes T6 time, and the inner loop <b>test</b> (<b>step</b> 5) consumes 2T5 time. During the next pass through the outer loop, j iterates from 1 to 2: the inner loop makes two passes, so running the inner loop body (step 6) consumes 2T6 time, and the inner loop <b>test</b> (<b>step</b> 5) consumes 3T5 time.|$|R
50|$|Rational Service Tester for SOA Quality {{offers a}} {{customizable}} functional test report {{which provides a}} global test verdict, and shows all the executed <b>test</b> <b>steps,</b> service operation calls and answers, {{as well as the}} detailed results of each verification points.|$|E
50|$|Natural {{language}} texts {{become part}} of the graphics, supporting the simple and demonstrative readability even for non-programmers. Substantial techniques such as parallel and hierarchical branching state machines, conditional branching, reactivity, signal description, measured signals as well as lists of simple <b>test</b> <b>steps</b> allow an intuitive and graphic modelling even of complex test cases.|$|E
50|$|In {{order to}} create a test case, one or more {{sequences}} of <b>test</b> <b>steps</b> and their parameterizations are specified using the editor. <b>Test</b> <b>steps</b> comprise reading and evaluating measured quantities of the test object, manipulating the test environment as well as the execution of diagnostic functions and control structures. Multiple test cases can be organized using the project manager.Additional settings for test object and test environment can be made using the configurator.The execution of test cases is performed using a multi-stage test engine. The generated log data {{serve as the basis for}} the creation of test reports.Subsequent to the test execution, optional checks of recorded measured quantities are performed in the analyzer. From the results of test-execution and subsequent checks, the protocol generator produces a detailed test report, which is displayed interactively and can be archived in files and data bases.|$|E
3000|$|... -fold {{cross-validation}} {{and hence}} not requiring any <b>test</b> <b>step</b> [13]. It {{has been shown}} on many experiments [17, 18] that the OP-ELM classifier has results {{very close to the}} ones of a Support Vector Machine (SVM) while having computational times much smaller (usually from [...]...|$|R
40|$|Introduction to {{motion in}} {{mechanical}} systems. Definition of design, analysis, and <b>testing.</b> <b>Steps</b> in Modeling. Continuous and lumped parameter systems. Second Order Systems and differential equations of motion. Definitions of Free and Forced Responses. The purpose of analysis and the relevant issues to resolve...|$|R
50|$|Candidates {{who have}} {{received}} offers for Mathematics courses at the University of Cambridge sit STEP as a post-interview <b>test.</b> <b>STEP</b> papers are normally sat at a candidate’s school or college. Alternatively, the test can be taken at one of Cambridge Assessment Admissions Testing’s authorised ‘open centres’ worldwide.|$|R
50|$|Maveryx {{supports}} data-driven testing. Data-driven {{testing is}} primarily implemented as Microsoft Excel spreadsheets and XML files {{that can be}} accessed from dedicated scripting API. Maveryx also supports any database (JDBC sources). The <b>test</b> <b>steps</b> can read data from these data sources in order to drive variable data into the application under test, and verify the expected result.|$|E
50|$|With the {{addition}} of valid transitions between individual classes of a classification, classifications {{can be interpreted as}} a state machine, and therefore the whole classification tree as a Statechart. This defines an allowed order of class usages in <b>test</b> <b>steps</b> and allows to automatically create test sequences. Different coverage levels are available, such as state coverage, transitions coverage and coverage of state pairs and transition pairs.|$|E
50|$|HPE Unified Functional Testing {{supports}} data-driven testing. For example, {{data can}} be output to a data table for reuse elsewhere. Data-driven testing is implemented as a Microsoft Excel workbook that can be accessed from HPE Unified Functional Testing. HPE Unified Functional Testing has two types of data tables: the Global data sheet and Action (local) data sheets. The <b>test</b> <b>steps</b> can read data from these data tables in order to drive variable data into the application under test, and verify the expected result.|$|E
50|$|In both cases, the {{expected}} number of remaining points decreases by a constant factor, so {{the time is}} dominated by the <b>testing</b> <b>step.</b> As they show, this paradigm can be used to construct fast approximation algorithms for k-center clustering, finding a pair of points with median distance, and several related problems.|$|R
50|$|The {{test was}} {{developed}} at Harvard University in 1943. Several modified {{versions of the}} original Harvard <b>step</b> <b>test</b> exist; {{an example is the}} Tecumseh <b>step</b> <b>test.</b> Another modified version, the Sharkey <b>step</b> <b>test,</b> was developed in the 1970s for use by the United States Forest Service at the University of Montana in Missoula.|$|R
3000|$|... 0 for {{the small}} {{specimens}} during drying at 20  °C and 65 % RH. Roughly speaking, the ratio decreased and approached 1 as the moisture content decreased. When the resonance frequencies without the concentrated mass were values obtained from the first vibration <b>test</b> (<b>step</b> 2), the average (standard deviation) of the ratio was 1.08 (0.058), and when those were values obtained from the second vibration <b>test</b> (<b>step</b> 8), the average (standard deviation) of the ratio was 1.06 (0.050). The improvement of the estimation accuracy by using the second bending vibration test without the concentrated mass {{was similar to the}} previous study [8]. Since the moisture content of the small specimens continued to decrease during drying, the resonance frequencies without the concentrated mass obtained from the second vibration test was larger than those obtained from the first vibration test. Consequently, f [...]...|$|R
