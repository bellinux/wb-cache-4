241|10000|Public
25|$|Unauthorized {{reading of}} RFID tags {{presents}} {{a risk to}} privacy. Unauthorized readers can potentially use RFID information to identify or track packages, consumers, carriers, or {{the contents of a}} package. Several prototype systems are being developed to combat unauthorized reading, including RFID signal interruption, as well as the possibility of legislation, and 700 scientific papers have been published on this matter since 2002. There are also concerns that <b>the</b> <b>database</b> <b>structure</b> of Object Naming Services may be susceptible to infiltration, similar to denial-of-service attacks, after the EPCglobal Network ONS root servers were shown to be vulnerable.|$|E
5000|$|Useful {{functions}} {{that use the}} class database are: void write(database &db); //write <b>the</b> <b>database</b> <b>structure</b> into a file friend void read(database &db); //read <b>the</b> <b>database</b> <b>structure</b> from a file friend void del(database &db); //delete the database and its tables files friend void print(database &db); //print the database on the screen ...|$|E
5000|$|... #Subtitle level 3: Minimize {{redesign}} when extending <b>the</b> <b>database</b> <b>structure</b> ...|$|E
40|$|The main {{components}} and functional areas {{of a typical}} computer-integrated manufacturing (CIM) system are examined. <b>The</b> <b>database</b> <b>structures</b> needed to support integrated industrial applications are discussed. Key issues in applying manufacturing communications are addressed. The impact of machine layout on manufacturing communication is considered...|$|R
40|$|This is the {{completion}} {{report of the}} project taken under the Grants-in-Aid scheme of the Aeronautics Research and Development Board. This report enunciates in detail the methodology adopted for arriving at the durability and damage tolerance values of materials for spectrum loading conditions. The document also lists the screen print of the demonstration package developed. The framework chosen for <b>the</b> material <b>database</b> is indicated together with a listing of <b>the</b> <b>database</b> <b>structures,</b> <b>database</b> files and format files...|$|R
5000|$|<b>The</b> <b>database</b> {{administrator}} {{should be}} able to change <b>the</b> <b>database</b> storage <b>structures</b> without affecting the usersâ€™ views.|$|R
5000|$|Modifying <b>the</b> <b>database</b> <b>structure,</b> as necessary, from {{information}} given by application developers ...|$|E
5000|$|... ad hoc search {{across all}} {{database}} content irrespectively from <b>the</b> <b>database</b> <b>structure</b> ...|$|E
50|$|<b>The</b> <b>database</b> <b>structure</b> and the {{relative}} Java sources are available from Sourceforge in GPL. A basic JSON API is available for a simple integration.The applications runs in Java JDK 6 on the Hibernate object/relational mapping.|$|E
40|$|International audienceThe {{increasing}} size of {{structured data}} that are digitally avail- able emphasizes the crucial need for more suitable representation tools than the traditional textual list of results. A suitable visual representation should both reflect <b>the</b> <b>database's</b> <b>structure</b> for navigation purpose and allow performing visual analytical tasks for knowledge extraction purpose. In this paper we present a visual navigation method that uses a Galois lattice to represent <b>the</b> <b>database's</b> <b>structure.</b> Our method takes advantage of this structure to provide a progressive and coherent navigation in <b>the</b> <b>database.</b> Two views are jointly presented. The first one represents the overall <b>structure</b> of <b>the</b> <b>database</b> while in <b>the</b> second one more precise views are successively given during the navigation process. Moreover, beyond the navigation task, we aim to propose a visual assistance for more analytical tasks. We show how this representation, combined with data analysis techniques, can be used both for navigation and attribute selection while keeping users' mental map...|$|R
50|$|In <b>the</b> <b>database</b> <b>structured</b> query {{language}} (SQL), the DELETE statement removes {{one or more}} records from a table. A subset may be defined for deletion using a condition, otherwise all records are removed. Some DBMSs, like MySQL, allow deletion of rows from multiple tables with one DELETE statement (this is sometimes called multi-table DELETE).|$|R
40|$|We {{survey and}} discuss issues {{required}} of intelligent systems to support research efforts in locus map-ping. In particular {{we focus on}} the issues of order, on how one can automate the reasoning processes of ordering, and <b>the</b> <b>database</b> <b>structures</b> required to support orders, including ambiguity and uncer-tainty. We conclude with a summary of work to be done...|$|R
50|$|When a fully {{normalized}} database {{structure is}} extended {{to allow it}} to accommodate new types of data, the pre-existing aspects of <b>the</b> <b>database</b> <b>structure</b> can remain largely or entirely unchanged. As a result, applications interacting with the database are minimally affected.|$|E
50|$|A {{database}} generally stores its schema in a data dictionary. Although a schema {{is defined}} in text database language, the term {{is often used to}} refer to a graphical depiction of <b>the</b> <b>database</b> <b>structure.</b> In other words, schema is the structure of the database that defines the objects in the database.|$|E
5000|$|As any data {{migration}} procedure Microsoft Access database upsizing requires fundamental refactoring of <b>the</b> <b>database</b> <b>structure</b> and source code. Even though {{some aspects of}} this procedure seem to be automatized by the Upsizing Wizard, {{there are still many}} points requiring human intervention. Following changes have to be done on upsizing ...|$|E
25|$|Jet 3.0 was {{replaced}} by Jet 3.5, which uses <b>the</b> same <b>database</b> <b>structure,</b> but different locking strategies, making it incompatible with Jet 3.0.|$|R
50|$|Its high {{performance}} {{has made the}} dimensional model <b>the</b> most popular <b>database</b> <b>structure</b> for OLAP.|$|R
40|$|Registries {{for rare}} {{diseases}} provide {{a tool for}} obtaining {{an overview of the}} clinical situation and can be used to discover points of improvement and to monitor long-term safety. Registries could also become a powerful tool to provide supporting information for marketing authorization. There is an urgent need for a pan-European or global strategy that supports consistent data. Therefore, transparency in data collection, harmonization of <b>the</b> <b>database</b> <b>structures,</b> and <b>the</b> convergence of scientific approaches are required...|$|R
50|$|Developers can freely use {{full text}} search as the fastest {{information}} access method in Clusterpoint databases, while having capability to flexibly query <b>the</b> <b>database</b> <b>structure</b> with standard analytics using SQL. In Clusterpoint database both methods {{can be combined}} in a single query, enabling combined analytical and search queries in mixed structured and unstructured data content.|$|E
50|$|The initial funding {{phase of}} PetDB (1996-2001) {{supported}} {{the development of}} <b>the</b> <b>database</b> <b>structure</b> and population with data values. Renewed funding (2002-2007) permitted the migration of the database into an ORACLE-based environment administered by the Center for International Earth Science Information Network (CIESIN) of Columbia University, continued data entry, and enhancement of the web-interface with a more user-friendly design.|$|E
50|$|One way to {{classify}} databases involves {{the type of}} their contents, for example: bibliographic, document-text, statistical, or multimedia objects. Another way is by their application area, for example: accounting, music compositions, movies, banking, manufacturing, or insurance. A third way is by some technical aspect, such as <b>the</b> <b>database</b> <b>structure</b> or interface type. This section lists {{a few of the}} adjectives used to characterize different kinds of databases.|$|E
50|$|The Slicer server {{contains}} endpoints {{describing the}} cube metadata which helps to create generic reporting applications that don't {{have to know}} <b>the</b> <b>database</b> model <b>structure</b> and conceptual hierarchies up-in-front.|$|R
50|$|His most {{important}} contributions are <b>the</b> <b>database</b> index <b>structures</b> R*-tree, X-tree and IQ-Tree, the cluster analysis algorithms DBSCAN, OPTICS and SUBCLU and the anomaly detection method Local Outlier Factor (LOF).|$|R
50|$|The HIN User Group {{provides}} {{a forum for}} HIN subscribers to address questions about the HIN System with HIBCC Staff {{as well as other}} HIN users. The User Group is also responsible for maintaining and updating <b>the</b> HIN <b>database</b> <b>structure,</b> reviewing industry activities related to HIN <b>database</b> <b>structure,</b> and developing marketing and educational strategies.|$|R
5000|$|In 1992, CorVision Version 5 was {{released}} with Query {{and support for}} Unix. Query allowed read-only access by users and developers to a systems database backend. Where this seemed a desirable facility, allowing users to create [...] "use once then throw away" [...] reports without calling on developers this had a nasty habit of causing performance issues. Users often did not understand <b>the</b> <b>database</b> <b>structure</b> and could send large queries to the processing queues causing system-wide issues.|$|E
5000|$|When an {{application}} uses Bold, a model is created with attributes, links and methods. An interface is then generated {{to the model}} that the application can use. As the application evolves, the model {{may need to be}} changed. Then changes to the inteface are generated, as well as a DB-script with the SQL code to change <b>the</b> <b>database</b> <b>structure.</b> Existing data in the database and methods in the code are preserved. The programmer can make advanced use of the database without touching SQL in code. A good tutorial is found here ...|$|E
50|$|Unauthorized {{reading of}} RFID tags {{presents}} {{a risk to}} privacy. Unauthorized readers can potentially use RFID information to identify or track packages, consumers, carriers, or {{the contents of a}} package. Several prototype systems are being developed to combat unauthorized reading, including RFID signal interruption, as well as the possibility of legislation, and 700 scientific papers have been published on this matter since 2002. There are also concerns that <b>the</b> <b>database</b> <b>structure</b> of Object Naming Services may be susceptible to infiltration, similar to denial-of-service attacks, after the EPCglobal Network ONS root servers were shown to be vulnerable.|$|E
50|$|Tablespaces specify only <b>the</b> <b>database</b> storage locations, not <b>the</b> logical <b>database</b> <b>structure,</b> or <b>database</b> schema. For instance, {{different}} {{objects in}} the same schema may have different underlying tablespaces. Similarly, a tablespace may service segments {{for more than one}} schema. Sometimes {{it can be used to}} specify schema so as to form a bond between logical and physical data.|$|R
40|$|The {{purpose of}} this {{research}} is to analyse <b>the</b> <b>database</b> using object oriented approach. In addition, this research develops and designs an object relational <b>database</b> <b>structure</b> to make easier the process of searching for the required information. The benefit {{of this research is}} to provide a data structure that can be reused for SMS notification application developer team, so that the developers can use existing objects for future use if there are changes in the current business process. The methods used are data collection, analysis, and design. The result obtained from this research is a <b>database</b> <b>structure</b> of sms notification application, which can be used in various programming languages for using object relational database approach. For conclusion, by using <b>the</b> object relational <b>database</b> <b>structure,</b> application developers will be made easier in developing <b>the</b> current <b>database</b> <b>structure.</b> Programmer can add a new data type simply by creating a new object. Data is accessed or processed as object-oriented. </em...|$|R
40|$|Experimentally {{determined}} protein tertiary {{structures are}} currently increasing {{in an enormous}} rate. The growth of <b>the</b> <b>structure</b> <b>database</b> makes <b>structure</b> prediction methods based on known tertiary structures more efficient. Detecting weak homology is crucial to extend applicable area of these methods. For this purpose, a profile or PSSM (position-specific score matrix) derived from multipl...|$|R
5000|$|The OpenMRS code {{is based}} on a [...] "concept dictionary" [...] that {{describes}} all the data items that can be stored in the system such as clinical findings, laboratory test results or socio-economic data. This approach avoids the need to modify <b>the</b> <b>database</b> <b>structure</b> to add new diseases, for example, and facilitates sharing of data dictionaries between projects and sites. An important feature of OpenMRS is its modular construction which allows the programming of new functions without modifying the core code. OpenMRS is web based but can be deployed on a single laptop or on a large server and runs on Linux, Windows or Mac OS X.|$|E
5000|$|In the Oracle (Programming and Software Development) courses {{first year}} {{students}} take Business Information Technology and Web Design as a foundations course. Microsoft Word, Excel, PowerPoint, Access, and Web design {{make up the}} curriculum. During the following two years, the program, {{in partnership with the}} Oracle Corporation, provides educational opportunities in database fundamentals and programming. Students will learn data modeling for businesses, design and build <b>the</b> <b>database</b> <b>structure,</b> and become skilled in Java and SQL programming. Industry standard certification opportunities are available as well as opportunities to participate in international data modeling and Java competitions. Upon successful completion of this curriculum, students have an opportunity to earn up to 30 college credits. Grades: 10, 11, 12 ...|$|E
50|$|Software Independent Archiving of Relational Databases (SIARD) was {{developed}} by the Swiss Federal Archives, designed for archiving relational databases in a vendor-neutral form. A SIARD archive is a ZIP-based package of files based on XML and SQL:1999. A SIARD file incorporates not only the database content, but also machine-processable structural metadata that records the structure of database tables and their relationships. The ZIP file contains an XML file describing <b>the</b> <b>database</b> <b>structure</b> (metadata.xml) as well as a collection of XML files, one per table, capturing the table content. The SIARD archive may also contain text files and binary files representing database large objects (BLOBs and CLOBs). SIARD permits direct access to individual tables by exploring with ZIP tools. A SIARD archive is not an operational database but supports re-integration of the archived database into another relational database management system (RDBMS) that supports SQL:1999. In addition, SIARD supports the addition of descriptive and contextual metadata that is not recorded in the database itself and the embedding of documentation files in the archive.|$|E
5000|$|... {{unintended}} {{activity or}} misuse by authorized database users, database administrators, or network/systems managers, or by unauthorized users or hackers (e.g. inappropriate access to sensitive data, metadata or functions within databases, or inappropriate changes to <b>the</b> <b>database</b> programs, <b>structures</b> or security configurations); ...|$|R
40|$|The {{rebuilding}} of <b>the</b> <b>database</b> conceptual schema from <b>the</b> physical <b>database</b> <b>structure</b> {{is a fundamental}} issue in the re-engineering and design recovery processes. In this paper we present an approach to the reverse engineering based on the identification of schema, primary key, SQL and procedural indicators {{that lead to the}} assertion of Prolog facts and, by some heuristic rules, to the {{rebuilding of}} the conceptual schem...|$|R
30|$|The {{advantage}} of this framework is that <b>the</b> traditional <b>database</b> <b>structure</b> does not require any change to support specific data mining services. Since the data mining services are particularly intended to utilize these query results, the system accuracy {{is expected to be}} higher than the data publication architecture.|$|R
