1|26|Public
40|$|Waterborne carbon (C) export from {{terrestrial}} ecosystems is {{a potentially}} important flux for the net catchment C balance and links the biogeochemical C cycling of terrestrial ecosystems to their downstream aquatic ecosystems. We have monitored hydrology and stream chemistry over 3 years in ten nested catchments (0. 6 – 15. 1 km 2) with variable peatland cover (0 %– 22 %) and groundwater influence in subarctic Sweden. Total waterborne C export, including dissolved and {{particulate organic carbon}} (DOC and POC) and dissolved inorganic carbon (DIC), ranged between 2. 8 and 7. 3 g m– 2 year– 1, representing ~ 10 %– 30 % of catchment net ecosystem exchange of CO 2. Several characteristics of catchment waterborne C export were affected by interacting effects of peatland cover and groundwater influence, including magnitude and <b>timing,</b> <b>partitioning</b> into DOC, POC, and DIC and chemical composition of the exported DOC. Waterborne C export was greater during the wetter years, equivalent to an average change in export of ~ 2 g m– 2 year– 1 per 100 mm of precipitation. Wetter years led to a greater relative increase in DIC export than DOC export due to an inferred relative shift in dominance from shallow organic flow pathways to groundwater sources. Indices of DOC composition (SUVA 254 and a 250 /a 365) indicated that DOC aromaticity and average molecular weight increased with catchment peatland cover and decreased with increased groundwater influence. Our results provide examples on how waterborne C export and DOC composition might be affected by climate change. Copyright © 2012 John Wiley & Sons, Ltd...|$|E
40|$|In {{this paper}} we present {{statistical}} <b>timing</b> driven hMetisbased <b>partitioning.</b> We approach <b>timing</b> driven <b>partitioning</b> {{from a different}} perspective: we use the statistical timing criticality concept to change the partitioning process itself. We exploit the hyperedge coarsening scheme of the hMetis partitioner for our timing minimization purpose. This allows us to perform partitioning such that the most critical nets in the circuit are not cut and therefore timing minimization can be achieved. The use of the hMetis partitioning algorithm makes our partitioning methodology fast. Simulations results show that 22 % average delay improvement can be obtained. Furthermore, {{as a result of}} using the statistical <b>timing</b> model, the <b>partitioning</b> results can tolerate changes in temperature and process variation, hence causing less delay change compared to <b>partitioning</b> using static <b>timing</b> models. 1...|$|R
40|$|In this poster {{we present}} statistical-timing driven {{partitioning}} for performance optimization. We show that {{by using the}} concept of node criticality we can enhance the Fiduccia-Mattheyses (FM) partitioning algorithm to achieve, on average, around 20 % improvements in terms of <b>timing,</b> among <b>partitions</b> with the same cut size. By incorporating mechanisms for timing optimization at the partitioning level, we facilitate wire-planning at high levels of the design process...|$|R
40|$|The {{locations}} of individual circuits in a placement {{have a significant}} impact on the wire length and therefore on the overall timing of designs. A novel technique that moves sets of circuits (gates) during or after timing driven placement to improve performance of designs is proposed. An efficient method to identify optimal set of circuit movements to reduce wire length, called strong motions is presented. Experimental results with a min-cut placement tool indicate that the proposed approach of direct manipulation of circuit locations, improves the <b>timing</b> of <b>partitions</b> of a chip significantly. ...|$|R
40|$|Abstract – In {{this paper}} we present multi-objective hMetis {{partitioning}} for simultaneous cutsize and circuit delay minimization. We change the partitioning process itself by introducing a new objective function that incorporates a truly path-based delay component {{for the most}} critical paths. To avoid semi-critical paths from becoming critical, the traditional slackbased delay component is {{also included in the}} cost function. The proposed <b>timing</b> driven <b>partitioning</b> algorithm is built on top of the hMetis algorithm, which is very efficient. Simulations results show that 14 % average delay improvement can be obtained. Smooth trade-off between cutsize and delay is possible in our algorithm. 1...|$|R
40|$|Abstract – In {{this paper}} we present statistical-timing driven {{partitioning}} for performance optimization. We show that {{by using the}} concept of node criticality we can enhance the Fiduccia-Mattheyses (FM) partitioning algorithm to achieve more than 20 % improvements in terms of <b>timing,</b> among <b>partitions</b> with the same cut size. By incorporating mechanisms for timing optimization at the partitioning level, we facilitate wire-planning at high levels of the design process. This is a different perspective than the traditional approaches that use techniques such as gate duplication, retiming and buffer insertion for delay optimization in later stages of the design process. Experimental results show that significant improvements in terms of delay (up to 40 %) can be obtained. 1...|$|R
40|$|COTS) {{workstations}} {{are presently}} used for computation-intensive tasks that were typically assigned to parallel {{computers in the}} past. However, it is hardly possible to predict the timing behavior of such systems or to give guarantees about execution times. In this paper we show how our SONiC(Shared Objects Netinterconnected Computer) system can control <b>timing</b> and <b>partitioning</b> of a workstation as a step towards a distributed real-time system built from COTS components. SONiC provides a class-based programming interface for creation of replicated shared objects of arbitrary, user-defined sizes. Weak consistency protocols are employed to improve system’s performance. Our Scheduling Service ensures the requested interactive behavior of a workstation while simultaneously giving a specified number of CPU cycles to parallel tasks. Using off-line scheduling methods {{we are able to}} implement real-time Guaranteed Services on COTS workstations. ...|$|R
40|$|The {{advancement}} in CMOS technology has surpassed the progress in {{computer aided design}} tools, creating an avenue for new design optimization flows. This paper presents a design level transistor sizing based timing optimization algo rithms for mixed-static-dynamic CMOS logic designs. This optimization algorithm performs <b>timing</b> optimization through <b>partitioning</b> a design into static and dynamic circuits based on timing critical paths, and is further extended through a process variation aware circuit level timing optimization algorithm for dynamic CMOS circuits. Implemented on a 64 -b adder and ISCAS benchmark circuits for mixed-static-dynamic CMOS, the design level optimization algo rithm demonstrated a critical path delay improvement of over 52 % in comparison with static CMOS implementation by state-of-the-art commercial optimization tools. </p...|$|R
40|$|The {{effect of}} tillage timing on weed {{community}} assembly was assessed at four {{locations in the}} Northeastern United States by tilling the soil every two weeks from April to September and quantifying the emerged weed community six weeks after each tillage event. Variance partitioning {{analysis was used to}} test the relative importance of tillage timing and weather on weed community assembly (106 weed species). At a regional scale, site (75. 5 % of the explained inertia) —and to a lesser extent, timing—of tillage (18. 3 %), along with weather (18. 1 %), shaped weed communities. At a local scale, the timing of tillage explained approximately 50 % of the weed community variability. The effect of tillage <b>timing,</b> after <b>partitioning</b> out the effect of weather variables, remained significant at all locations. Weather conditions, mainly growing degree days, but also precipitation occurring before tillage, were important factors and could improve our ability to predict the impact of tillage timing on weed community assemblages. Our findings illustrate the role of disturbance timing on weed communities, and can be used to improve the timing of weed control practices and to maximize their efficacy...|$|R
40|$|Abstract: The ANR {{exploratory}} project SPaCIFY [19, 20] {{designs and}} implements a domain-specific environment, for real-time embedded space application and control software. Synoptic is an Eclipse-based modeling environment {{which aims to}} support all aspects of aerospace software design. In this context, a Domain Specific Modeling Language (DSML) called Synoptic has been defined {{in collaboration with the}} industrial end users of the project. Relying on the standard modeling languages used in the domain such as Simulink/Stateflow and AADL, Synoptic DSML covers the design of application and control modules using synchronous programs, dataflow diagrams, mode automata, and also the <b>partitioning,</b> <b>timing</b> and mapping of these module onto satellite architectures. This paper describes the main features of Synoptic DSML. A case study illustrates the concepts introduced in this paper...|$|R
40|$|The multicluster {{architecture}} that we introduce offers a decentralized, dynamically-scheduled architecture, {{in which the}} register files, dispatch queue, and functional units of the architecture are distributed across multiple clusters, and each cluster is assigned {{a subset of the}} architectural registers. The motivation for the multicluster architecture is to reduce the clock cycle time, relative to a single-cluster architecture with the same number of hardware resources, by reducing the size and complexity of components on critical <b>timing</b> paths. Resource <b>partitioning,</b> however, introduces instruction-execution overhead and may reduce the number of concurrently executing instructions. To counter these two negative by-products of partitioning, we developed a static instruction scheduling algorithm. We describe this algorithm, and using tracedriven simulations of SPEC 92 benchmarks, evaluate its effectiveness. This evaluation indicates that for the configurations considered, the multicluste [...] ...|$|R
40|$|Copyright © 2013 Kumar Yelamarthi. This is an {{open access}} article {{distributed}} under the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. The advancement in CMOS technology has surpassed the progress in computer aided design tools, creating an avenue for new design optimization flows. This paper presents a design level transistor sizing based timing optimization algo-rithms for mixed-static-dynamic CMOS logic designs. This optimization algorithm performs <b>timing</b> optimization through <b>partitioning</b> a design into static and dynamic circuits based on timing critical paths, and is further extended through a process variation aware circuit level timing optimization algorithm for dynamic CMOS circuits. Implemented on a 64 -b adder and ISCAS benchmark circuits for mixed-static-dynamic CMOS, the design level optimization algo-rithm demonstrated a critical path delay improvement of over 52 % in comparison with static CMOS implementation by state-of-the-art commercial optimization tools...|$|R
40|$|An {{extended}} period of snow cover is a dominant climatic characteristic of montane environments in western North America. Recent {{research has demonstrated that}} the water stored in this seasonal snow cover is the primary source not only of river discharge but also groundwater recharge and plant available water during the growing season. Although the recorded interannual variability of snow cover is quite large, ongoing changes in climate, combined with accelerating rates of forest disturbance from insects, fire, and drought, differentially are affecting the amount, <b>timing,</b> and <b>partitioning</b> of snow cover to an extent not captured in the instrumental record. A critical knowledge gap exists in predicting how these concurrent changes in climate and vegetation in topographical complex mountain environments will affect future water resources both for society and for terrestrial and aquatic ecosystems. This presentation addresses that knowledge gap through a meta analysis recent work on snowpack dynamics, runoff generation, catchment biogeochemistry, and ecosystem productivity from seasonally snow-covered forests along a gradient of snow depth and duration in the Intermountain West. Observations include long-term SNOTEL monitoring stations, CZO, LTER, and USDA observations of landsurface-atmosphere water and carbon exchange, and post disturbance observations from recently burned forests, and areas of extensive insect-induced forest mortality. Together these observations can be used to identify landscapes most at risk to climate change as well as to develop management alternatives that minimize the effects of climate change on high elevation forests and the services of water provision and carbon storage they provide...|$|R
40|$|In this paper, a tabu search-based {{behavior}} level synthesis {{scheme is}} proposed to minimize power consumption with resource operating at multiple voltages under {{the timing and}} the resource constraints. Unlike the conventional methods where only scheduling is considered, our synthesis scheme considers both scheduling and partitioning simultaneously to reduce power consumption due to the functional units {{as well as the}} interconnects among them. More importantly, our approach tends to efficiently address a few practical layout problems inherent to multiple voltage designs. In particular, we have configured our solutions as a three-tuple vector to account for both the <b>timing</b> and the <b>partition.</b> Cycling of the same solutions is prevented by applying a tabu list with an update mechanism enhanced with an aspiration function. In this way, the algorithm can search a large solution space with modest computation effort and fast convergence rate. Experiments with a number of DSP benchmarks show that the proposed algorithms achieve an average power reduction by 49. 6 %...|$|R
40|$|The onset and {{duration}} of sleep {{are thought to be}} primarily under the control of a homeostatic mechanism affected by previous periods of wake and sleep and a circadian <b>timing</b> mechanism that <b>partitions</b> wake and sleep into different portions of the day and night. The mouse Clock mutation induces pronounced changes in overall circadian organization. We sought to determine whether this genetic disruption of circadian timing would affect sleep homeostasis. The Clock mutation affected a number of sleep parameters during entrainment to a 12 hr light/dark (LD 12 : 12) cycle, when animals were free-running in constant darkness (DD), and during recovery from 6 hr of sleep deprivation in LD 12 : 12. In particular, in LD 12 : 12, heterozygous and homozygous Clock mutants slept, respectively, � 1 and � 2 hr less than wild-type mice, and they had 25 and 51 % smaller increases in rapid eye movement (REM) sleep during 24 hr recovery, respectively...|$|R
40|$|Continuous {{advances}} in silicon technology enable {{the development of}} complex System-on-Chip as cooperation among Digital Signal Processors (DPSs), General Purpose Processors (GPPs), and specific hardware components. The impact of this choice is not only limited to the target architecture, but also encompasses the overall system specification. It is thus crucial to manage such a complexity using high-level specification languages and a tool chain supporting the designer throughout a set of strategic decisions, such as the identification {{of a set of}} possible target architectures, the verification of the correctness of the specification, and the partitioning of the specification onto a set of computational resources. This paper addresses this type of problem by proposing a design flow supporting the system-level design of heterogeneous multiprocessor system-on-chip (MP-SoC), by extracting information from the system description (e. g., SystemC) —statically and in a fast manner—and by providing a set of quantitative measures correlating the type of executor, the functionality, and a <b>timing</b> estimation. <b>Partitioning</b> and architecture selection are built on top of this data and the final analysis of the selected Hardware-Software solution over the identified candidates is finally submitted to a timing verification via simulation. Note that the possibility of actually performing a comprehensive design space exploration, in general, is tightly influenced by the interaction between partitioning/architecture-selection and timing simulation in the design flow; for this reason, the description of this aspect is particularly emphasized in the presentation of the methodology. To show the applicability of the proposed methodology, two relevant case studies are described in the paper...|$|R
40|$|Abstract Many {{system-level}} design tasks (e. g., high-level <b>timing</b> analysis, hardware/-software <b>partitioning</b> {{and design}} space exploration) involve computational kernels that are intractable (usually NP-hard). As a result, they involve high running times even for mid-sized problems. In this {{paper we explore}} {{the possibility of using}} commod-ity graphics processing units (GPUs) to accelerate such tasks that commonly arise in the electronic design automation (EDA) domain. We demonstrate this idea via two detailed case studies. The first explores the possibility of using GPUs to speedup stan-dard schedulability analysis problems. The second proposes a GPU-based engine for a general hardware/software design space exploration problem. Not only do these prob-lems commonly arise in the embedded systems domain, their computational kernels turn out to be variants of a combinatorial optimization problem – viz., the knapsack problem – that {{lies at the heart of}} several EDA applications. Experimental results show that our GPU-based implementations offer very attractive speedups for the com-putational kernels (up to 100 ×), and speedups of up to 17 × for the full problem. In contrast to ASIC/FPGA-based accelerators – given that even low-end desktop an...|$|R
40|$|International audienceThis paper {{reviews the}} geodynamic {{concepts}} and models related to transform continental margins, and their implications {{on the structure}} of these margins. Simple kinematic models of transform faulting associated with continental rifting and oceanic accretion allow to define three successive stages of evolution, including intra-continental transform faulting, active transform margin, and passive transform margin. Each part of the transform margin experiences these three stages, but the evolution is diachronous along the margin. Both the duration of each stage and the cumulated strike-slip deformation increase from one extremity of the margin (inner corner) to the other (outer corner). Initiation of transform faulting is related to the obliquity between the trend of the lithospheric deformed zone and the relative displacement of the lithospheric plates involved in divergence. In this oblique setting, alternating transform and divergent plate boundaries correspond to spatial partitioning of the deformation. Both obliquity and the <b>timing</b> of <b>partitioning</b> influence the shape of transform margins. Oblique margin can be defined when oblique rifting is followed by oblique oceanic accretion. In this case, no transform margin should exist in the prolongation of the oceanic fracture zones. Vertical displacements along transform margins were mainly studied to explain the formation of marginal ridges. Numerous models were proposed, one of the most used is being based on thermal exchanges between the oceanic and the continental lithospheres across the transform fault. But this model is compatible neither with numerical computation including flexural behavior of the lithosphere nor with timing of vertical displacements and the lack of heating related to the passing of the oceanic accretion axis as recorded by the Côte d'Ivoire-Ghana marginal ridge. Enhanced models are still needed. They should better take into account the erosion on the continental slope, and the level of coupling of the transform continental margin with the adjacent oceanic lithosphere...|$|R
40|$|Combined sewer {{overflows}} (CSOs) degrade {{water quality}} through {{the release of}} microbial contaminants in CSO effluent. Improved understanding of the partitioning of microbial contaminants onto settleable particles can provide insight into their fate in end-of-pipe treatment systems or following release during CSO events. Sampling was performed across the hydrograph for three storm events as well as during baseflow and wet weather in three surface waters impacted by CSO. qPCR was performed for select antibiotic resistance genes (ARG) and a marker gene for human fecal indicator organisms (BacHum) in samples processed the partitioning of microbial contaminants on settleable particles versus suspended in the aqueous phase. Amplicon sequencing was performed on both fractions of storm samples to further define the <b>timing</b> and <b>partitioning</b> of microbial contaminants released during CSO events. Samples collected at the CSO outfall exhibited microbial community signatures of wastewater at select time points early or late in the storm events. CSOs {{were found to be}} a source of ARG. In surrounding surface waters, sul 1 was higher in samples from select locations during wet weather compared to baseflow. Otherwise, ARG concentrations were variable with no differences between baseflow and wet weather conditions. The majority of ARG at the CSO outfall were observed on the attached fraction of samples: 64 – 79 % of sul 1 and 59 – 88 % of tet(G). However, the timing of peak ARG and human fecal indicator marker gene BacHum did not necessarily coincide with observation of the microbial signature of wastewater in CSO effluent. Therefore, unit processes that remove settleable particles (e. g., hydrodynamic separators) operated throughout a CSO event would achieve up to (0. 5 – 0. 9) -log removal of ARG and fecal indicators by removing the attached fraction of measured genes. Secondary treatment would be required if greater removal of these targets is needed...|$|R
40|$|Biological {{movement}} control and planning {{is based upon}} motor primitives. Each motor primitive takes responsibility for controlling a small sub-block of motion, containing coherent muscle activation outputs. A central timing controller cues these subroutines of movement, creating complete movement strategies that are built up by overlaying primitives, thus creating synergies of muscle activation. This partitioning allows the movement to be defined by a sparse code representing the timing of primitive activations. We have shown {{that it is possible}} to use a factorial hidden Markov model to infer primitives in handwriting data. The variation in the handwriting data can to a large extent be explained by timing variation in the triggering of the primitives. Once an appropriate set of primitives has been inferred, the characters can be represented as a set of timings of primitive activations, along with variances, giving a very compact representation of the character. The model is naturally partitioned into a low level primitive output stage, and a top-down primitive <b>timing</b> stage. This <b>partitioning</b> gives us an insight into behaviours such as scribbling, and what is learnt in order to write a new character. ...|$|R
40|$|The 3 D {{architecture}} of fold-thrust belts commonly involves thin-skinned and thick-skinned deformation. Both thick- and thin-skinned deformation styles {{have been suggested}} {{to occur in the}} Maranon Fold-Thrust Belt (MFTB) in Peru, but the relative <b>timing</b> and strain <b>partitioning</b> associated with them are not well understood. We demonstrate that inherited basement structures along the Peruvian convergent margin reactivated during the evolution of the MFTB. We present results from field mapping, interpretation of remote sensing imagery, and cross section construction and restoration. The results show that the Chonta Fault, a median pre-folding basin normal fault, was inverted and acted as a mechanical buttress during initial east-vergent contraction of the fold-thrust belt. This fault separates the belt into two domains of distinctly different structural styles. During the Eocene, units {{to the west of the}} Chonta Fault deformed by folding, using the fault as a buttress, and subsequently propagated eastward by thin-skinned thrusting. This was followed in the Miocene by west-vergent, basement-involved deformation, which overprinted the earlier east-vergent, thin-skinned structures. The proposed tectonic model of the MFTB highlights the role of basement-fault reactivation during orogenesis and the involvement of deep structures in partitioning deformation styles. (c) 2014 Elsevier Ltd. All rights reserved...|$|R
40|$|A {{primitive}} based generative {{model to}} infer timing information in unpartitioned handwriting data Areas: Perception, Vision, Adaptive Systems Biological movement control and planning {{is based upon}} motor primitives. Each motor primitive takes responsibility for controlling a small sub-block of motion, containing coherent muscle activation outputs. A central timing controller cues these subroutines of movement, creating complete movement strategies that are built up by overlaying primitives, thus creating synergies of muscle activation. This partitioning allows the movement to be defined by a sparse code representing the timing of primitive activations. This paper shows {{that it is possible}} to use a factorial hidden Markov model to infer primitives in handwriting data. The variation in the handwriting data can to a large extent be explained by timing variation in the triggering of the primitives. Once an appropriate set of primitives has been inferred, the characters can be represented as a set of timings of primitive activations, along with variances, giving a very compact representation of the character. The model is naturally partitioned into a low level primitive output stage, and a top-down primitive <b>timing</b> stage. This <b>partitioning</b> gives us an insight into behaviours such as scribbling, and what is learnt in order to write a new character. ...|$|R
40|$|Intracapsular {{development}} {{is common in}} marine gastropods. In many species embryos develop alongside nurse eggs, which provide nutrition during ontogeny. The Common Whelk Buccinum undatum is a commercially important North Atlantic shallow-water gastropod, which undergoes this type of development, with individuals hatching as crawling juveniles. While its reproductive cycle has been well documented, past observations on the encapsulated development in this species do not match our observations and nurse egg partitioning within a capsule has not previously been discussed. Here, using laboratory reared B. undatum egg masses from the south coast of England, intracapsular development at 6 °C is described including nurse egg <b>partitioning,</b> <b>timing</b> of nurse egg consumption and intracapsular size differences through development. Number of eggs, veligers and juveniles per capsule were also compared. Development took 133 to 140 days, over which 7 ontogenetic stages were identified. Numbers of both eggs and veligers {{were significantly related to}} capsule volume. Initial development was asynchronous within each capsule. In total approximately 1 % of eggs developed per capsule. Each embryo consumed nurse eggs rapidly over just 3 to 7 days. No evidence for cannibalism was found during development but large size differences between embryos developing within each capsule were observed, and occasionally ‘empty’ veligers were seen which had not successfully consumed any nurse eggs. These results indicate high competition for nurse eggs within each capsule during development in the common whelk. The initial differences observed in embryo size may affect individual predisposition in later life...|$|R
40|$|Abstract — Many {{system-level}} design tasks (e. g. <b>timing</b> analysis, hardware/software <b>partitioning</b> {{and design}} space exploration) involve computational kernels that are intractable (usually NP-hard). As a result, they involve high running times even for mid-sized problems. In this {{paper we explore}} {{the possibility of using}} commodity graphics processing units (GPUs) to accelerate such tasks that commonly arise in the electronic design automation (EDA) domain. We demonstrate this idea via a detailed case study on a general hardware/software design space exploration problem and propose a GPU-based engine for it. Not only does this problem commonly arise in the embedded systems domain, its computational kernel {{turns out to be a}} general combinatorial optimization problem (viz. the knapsack problem) which lies at the heart of several EDA applications. Our experimental results show that our GPU-based implementation offers very attractive speedups for this computational kernel (up to 100 ×), and speedups of up to 17 × for the full problem. In contrast to ASIC/FPGA-based accelerators – since even low-end desktop and notebook computers are today equipped with GPUs – our solution involves no extra hardware cost. Although recent research has shown the benefits of using GPUs for a variety of non-graphics applications (e. g. in databases and bioinformatics), hardly any work has been done on harnessing the parallelism of GPUs to accelerate problems from the EDA domain. We hope that our results and the generality of the problem we address will motivate researchers from this community to explore the possibility of using GPUs for a wider variety of problems from the EDA domain. I...|$|R
40|$|This is {{the author}} {{accepted}} manuscript. The final version is available from Springer Verlag via the DOI in this record. Intracapsular development is common in marine gastropods. In many species, embryos develop alongside nurse eggs, which provide nutrition during ontogeny. The common whelk Buccinum undatum is a commercially important North Atlantic shallow-water gastropod. Development is intracapsular in this species, with individuals hatching as crawling juveniles. While its reproductive cycle has been well documented, further work is necessary to provide a complete description of encapsulated development. Here, using B. undatum egg masses from the south coast of England intracapsular development at 6 °C is described. Number of eggs, veligers and juveniles per capsule are compared, and nurse egg <b>partitioning,</b> <b>timing</b> of nurse egg consumption and intracapsular size differences through development are discussed. Total development took between 133 and 140 days, over which 7 ontogenetic stages were identified. The number of both eggs and veligers {{were significantly related to}} capsule volume, with approximately 1 % of eggs developing per capsule. Each early veliger consumed nurse eggs rapidly over just 3 – 7 days. Within each capsule, initial development was asynchronous, but it became synchronous during the veliger stage. No evidence for cannibalism was found during development, but large size differences between embryos developing within each capsule were observed, and occasionally ‘empty’ veligers were seen, which had not successfully consumed any nurse eggs. These results indicate a high level of competition for nurse eggs within each capsule during development in the common whelk. The initial differences observed in nurse egg uptake may affect individual predisposition in later life. This work was supported by grants from the Total Foundation (Abyss 2100) to ST and the Malacological Society to KS...|$|R
40|$|Field-programmable {{systems with}} {{multiple}} FPGAs on a PCB or an MCM {{are being used}} by system designers when a single FPGA is not sufficient. We {{address the problem of}} partitioning a large technology mapped FPGA circuit onto multiple FPGA devices of a specific target technology. The physical characteristics of the multiple FPGA system (MFS) pose additional constraints to the circuit partitioning algorithms: the capacity of each FPGA, the timing constraints, the number of I/Os per FPGA, and the pre-designed interconnection patterns of each FPGA and the package. Existing partitioning techniques which minimize just the cut sizes of partitions fail to satisfy the above challenges. We therefore present a <b>timing</b> driven N-way <b>partitioning</b> algorithm based on simulated annealing for technology-mapped FPGA circuits. The signal path delays are estimated during <b>partitioning</b> using a <b>timing</b> model specific to a multiple FPGA architecture. The model combines all possible delay factors in a system with multiple FPGA chips of a target technology. Furthermore, we have incorporated a new dynamic net-weighting scheme to minimize the number of pin-outs for each chip. Finally, we have developed a graph-based global router for pin assignment which can handle the pre-routed connections of our MFS structure. In order to reduce the time spent in the simulated annealing phase of the partitioner, clusters of circuit components are identified by a new linear-time bottom-up clustering algorithm. The annealing-based N-way partitioner executes four times faster using the clusters as opposed to a flat netlist with improved partitioning results. For several industrial circuits, our approach outperforms the recursive min-cut bi-partitioning algorithm by 35 % in terms of nets cut. Our approach also outperforms an industrial FPGA partitioner by 73 % on average in terms of unroutable nets. Using the performance optimization capabilities in our approach we have successfully partitioned the MCNC benchmarks satisfying the critical path constraints and achieving a significant reduction in the longest path delay. An average reduction of 17 % in the longest path delay was achieved at the cost of 5 % in total wire length...|$|R
40|$|Breeding {{for higher}} grain yield in maize (Zea mays L.), {{utilizing}} increased selection densities, has produced varieties that are adapted {{to grow at}} higher population densities. The effects of increased planting density on grain yield and final phenotypes are well known, but the effects of density on plant growth across the growing season have been less widely characterized. The objectives of this study were: 1) {{examine the effects of}} high planting density on growth rates, growth <b>timing,</b> and biomass <b>partitioning</b> of the ear, stalk, and tassel; 2) characterize the difference in density effects in maize populations before and after recurrent selection for grain yield; 3) characterize heterosis and hybrid performance in plant growth and biomass partitioning; 4) characterize the effects of recurrent selection on heterosis levels in plant growth. Four populations, Iowa Stiff Stalk Synthetic (BSSS), Iowa Synthetic Corn Borer # 1 (BSCB 1), and the populations derived from the 17 th cycle of reciprocal recurrent selection, BSSS(R) C 17 and BSCB 1 (R) C 17, along with the BSSS/BSCB 1 and BSSS(R) C 17 /BSCB 1 (R) C 17 population crosses were utilized in this study. The populations were growth at 3. 23, 6. 46, 9. 69, and 12. 92 plants m- 2 at six locations near Ames, IA over 4 years. Increased density lowered maximum growth rates for all plant organs, but reduction in ear length, plant height, and ear and stalk biomass growth rates occurred at higher densities in the selected populations and population crosses compared to the unselected populations. Increased planting density affected plant organ growth timing differently in BSSS and BSCB 1. High density delayed stalk biomass accumulation in BSCB 1 but not BSSS, and delayed ear length growth and ear and tassel biomass accumulation in BSSS but not BSCB 1. Growth delays the cycle 0 populations were not present in the cycle 17 populations, or in the cycle 0 population cross. BSCB 1 and the BSSS/BSCB 1 population cross partitioned lower levels of biomass to the ear and had smaller harvest indices at high density, while biomass partitioning and harvest index were not affected by density in the selected population and population cross. Heterosis was present in final phenotypes, growth midpoints, growing period length, and maximum growth rates. Heterosis levels for final phenotypes and maximum growth rates increased with selection. Increases in heterosis levels were due to depressed per se population performance and slight increases in selected population cross phenotypes. BSCB 1 was often the dominant parent in population crosses in regards to growth midpoint timing, maximum growth rates, harvest indices, and density response...|$|R

