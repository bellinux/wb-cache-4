11|42|Public
40|$|Abstract: A {{quantitative}} {{performance evaluation}} of a robot teaching method using a force/moment direction sensor is presented. The performance of the teaching method using the force/moment direction sensor is compared with the conventional <b>teaching</b> <b>pendant</b> method. Two types of teaching tasks were designed and the teaching times required to complete the teaching tasks were measured and compared. Task A requires a teaching motion that involves four degrees of freedom motion. Task B requires a teaching motion that involves {{six degrees of freedom}} motion. It was found that by, using the force/moment direction sensor method, the teaching times were reduced by 25 % for Task A and 45 % for Task B compared to the <b>teaching</b> <b>pendant</b> method...|$|E
40|$|At present state, {{almost the}} {{industrial}} robot tasks are {{performed by the}} teaching playback method, in which the robot repeats positioning its joint angles, which are taught manually in advance using a <b>teaching</b> <b>pendant,</b> etc. This method is based on comparatively high repeatability of a robot arm. The {{problem here is that}} the laborious and time-consumin...|$|E
40|$|Superalloy parts {{joined with}} less distortion. Carbon dioxide laser beam {{directed}} by optics in numerically controlled robot arm welds shell-type turbopump housings having complicated shapes. 5 -kW laser, following single programmed three-dimensional pass, produces high-quality, full-penetration weld pass in age-hardenable nickel superalloy. Operator easily programs robot by using <b>teaching</b> <b>pendant</b> to track weld joint and keeps laser focused on workpiece while following contour of shell. Shells welded in rapid succession, with minimal change in setup for each...|$|E
5000|$|... #Caption: A typical well-used <b>teach</b> <b>pendant</b> with {{optional}} mouse ...|$|R
40|$|Applications of Industrial Robots in The Classroom, KALEB TOLLER, JORGE ORTEGA-MOODY, ADOLFO ENRIQUE SAMUDIO CANO, and MICHAEL TYLER EDLIN, Department of Engineering Technology Management, Morehead State University, Morehead, Kentucky 40351. Parallel robots {{are growing}} in {{popularity}} in industry for their agility and speed. Although {{they may have}} a smaller work space compared to serial robots they are able to move within their workspace more efficiently. A growing concern about industrial robots in general is training. The costliest portion of the hiring process in any field is training, to tackle this issue a group of students at Morehead State University have created a Delta robot including a functioning <b>teach</b> <b>pendant</b> that functions and feels like a real Fanuc <b>teach</b> <b>pendant.</b> The <b>teach</b> <b>pendant</b> allows students to program a virtual delta robot and run simulations and later use the same program on the physical classroom robot shared by multiple students. For half the price of a Fanuc LR Mate 200 iD a classroom could a have a fully functioning delta robot with ten <b>teach</b> <b>pendants</b> making industrial training affordable and allowing young students a competitive edge in the job market...|$|R
30|$|Until recently, most robot {{programs}} were only taught through the robot <b>teach</b> <b>pendant,</b> which required the robot {{system to be}} out of production. Now, programmers are using offline program tools to teach the robot movements. After transferring the program to the robot controller, they use the robot <b>teach</b> <b>pendant</b> to refine the program positions. This greatly improves the productivity of the robot system. But still, calibration is needed between the model and the real work cell. The trend is the development of more intelligent programming, by use of sensors with the ability to scan the workpiece and working environment with high accuracy.|$|R
40|$|Abstract: The main {{objective}} {{of this paper is}} to present a soft <b>teaching</b> <b>pendant</b> as an alternative to those currently used in industry, such as the Yaskawa Motoman HP 3 J. The GUI has separate Tabs with local menus and buttons that depict different functionalities found in its industrial equivalent. Some of the main functions include direct kinematics, inverse kinematics, path planning, linear interpolation control navigation, joint interpolation control navigate and robot arm path planning movement. Furthermore, the soft pendant will include other functionalities, such as authentication, validations and safety measures, as well as descriptive help and error messages. The system was tested and evaluated as a teaching tool to control the 6 -axis Yaskawa Motoman HP 3 J industrial robot, used by mechatronic students in the University of Nottingham. The paper will present the direct and inverse kinematics of the 6 -axis robot, as well as key API functions used in moving the manipulator. The paper will conclude by comparing this soft <b>teaching</b> <b>pendant</b> functions to those found in its industrial equivalent, highlighting the advantages as a good teaching tool to aid students in understanding basic robotics fundamentals...|$|E
40|$|Human-robot {{interaction}} requires intuitive interface that is {{not possible}} using devices, such as, the joystick or <b>teaching</b> <b>pendant,</b> which also require some trainings. 	Instruction by gesture {{is one example of}} an intuitive interfaces requiring no training, and pointing is one of the simplest gestures. We propose simple pointing 	recognition for a mobile robot having an upwarddirected camera system. The robot using this recognizes pointing and navigates through simple visual feedback control to where the user points. This paper explores the feasibility and utility of our proposal as shown by the results of a questionnaire on proposed and conventional interface...|$|E
40|$|In {{recent years}} robots {{have become more}} {{adaptive}} and aware of the surroundings which enables them for use in human-robot collaboration. By introducing robots into the same working cell as the human, then the two can collaborate by letting the robot deal with heavy lifting, repetitive and high accuracy tasks while the human focuses on tasks that needs {{the flexibility of the}} human. Collaborative robots already exists today in the market but the usage of these robots are mainly to work in close proximity. Usually a <b>teaching</b> <b>pendant</b> is used to program a robot by moving it using a joystick or buttons. Using this <b>teaching</b> <b>pendant</b> for programming is usually quite slow and requires training which means that few can operate it. However, recent research shows that there exist several application using multi-modal communication systems to improve the programming of a robot. This kind of programming will be necessary to collaborate with a robot in the industry since the human in a collaborative task might have to teach the robot how to execute its task. This project aims to introduce a programming-by-guidance system into assembly manufacturing where the human can assist the robot by teaching the robot how to execute its task. Three technologies will be combined, speech recognition, haptic control, and augmented reality. The hypothesis is that with these three technologies an effective and intuitive programming-by-guidance system can be used within the assembly manufacturing industry. This project have three main motivators: Allowing workers, with no robot programming expertise, to teach the robot how to execute its task in an assembly manufacturing system; Reducing the development time of the robot by introducing advanced programming-by-guidance technology; Showing that augmented reality can add additional information that is useful when programming the robot. Research proposal, PhD programme, University of Sk√∂vde</p...|$|E
2500|$|Teach pendant: Robot {{positions}} can {{be taught}} via a <b>teach</b> <b>pendant.</b> This is a handheld control and programming unit. The common features of such units are the ability to manually send the robot to a desired position, or [...] "inch" [...] or [...] "jog" [...] to adjust a position. They also have a means to change the speed since a low speed is usually required for careful positioning, or while test-running through a new or modified routine. A large emergency stop button is usually included as well. Typically once the robot has been programmed {{there is no more}} use for the <b>teach</b> <b>pendant.</b>|$|R
30|$|In the {{teaching}} phase, a human operator commands a robot with {{an input device}} such as a <b>teach</b> <b>pendant</b> and a data glove to perform a manipulation task. Here we call it demonstration.|$|R
5000|$|There is a <b>teach</b> <b>pendant,</b> {{rather like}} those of {{full-size}} industrial robots, that can {{be connected to the}} controller. Using this, the robot can be [...] "taught" [...] simple programs using the pendant and can then repeat them.|$|R
30|$|This {{category}} of robotic programming includes lead-through and walk-through programming. Use of the manual online programming method requires no special hardware or software on-site {{other than that}} which {{is used for the}} manufacturing process. The major drawback of online programming is that it is quite inflexible and it is only able to control simple robot paths (Pan et al. 2012 a). In the walk-through method, the operator moves the torch manually through the desired sequence of movements, which are recorded into the memory for playback during welding. The walk-through method was adopted in a few early welding robots (Cary and Helzer 2005) but did not gain widespread use. The conventional method for programming welding robots is online programming {{with the help of a}} teach pendant, i.e., lead-through programming. In this approach, the programmer jogs the robot to the desired position with the use of control keys on the <b>teaching</b> <b>pendant</b> and the desired position and sequence of motions are recorded. The main disadvantage of the online teaching method is that the programming of the robot causes breaks in production during the programming phase (McWhirter 2012).|$|E
40|$|Abstract: Conventional robot motion {{teaching}} methods use a <b>teaching</b> <b>pendant</b> or a motion capture device {{and are not}} the most convenient or intuitive ways to teach a robot sophisticated and fluid movements such as martial arts motions. Ideally, a robot could be set up {{as if it were}} a clothing man-nequin that has light limbs and flexible yet frictional joints which can be positioned at desirable shape and hold all the positions. To do the same with a robot, an operator could pull or push the links with minor forces until the desired robot posture is attained. For this, a robot should measure the applied ex-ternal force by using torque sensors at the robot joints. However, torque sensors are bulky and expen-sive to install in every DOF joints while keeping a compact design, which is essential to humanoid ro-bots. In this paper, we use only motor current readings to acquire joint torques. The equations used to compensate for the effect of gravity on the joint torques and the self-calibration method to earn link pa-rameters are presented. Additionally, kinematic restrictions can be imposed on the robot‚Äôs arms to sim-plify the motion teaching. Here, we teach the Kendo training robot with this method and the robot‚Äôs learnt martial art motions are demonstrated...|$|E
40|$|While {{there are}} more {{advanced}} and better devices appearing on the market each day, {{there are still many}} companies and businesses that use older devices. This is done because it 2 ÃÜ 7 s financially more beneficial. The Belgium Campus is one of these companies. One of the devices they had purchased was the Scorbot ER V plus. This robot is equipped with six axes and a gripper. A few applications in which these robots are used are pick and place, soldering and welding. Apart from the movement of the robot, the controller also has the ability to read inputs or to control outputs. The robot can be controlled via the <b>teaching</b> <b>pendant</b> or via a PC with the running software on it. The Scorbot is controlled through serial communication (RS- 232). But as everyone knows, every medal has two sides. This also holds for this robot. The original software, called SCORBASE, which is used to control the controller, was written for DOS (graphical command terminal). At the start of the project I was only told that the robot needed to be controlled by self-written software. On which commando 2 ÃÜ 7 s and text the robot would react was unknown, so it was my task to figure this out. My assignment consisted of examining the communication between the robot and the controller, and this should also be documented. The documentation that has been written includes all steps and actions which are required before the robot can be controlled. There is also an example compiler written in C# which has all available functions the robot can perform. This example code is available for the students. This way they can get a better view on programming all the functions for the Scorbot, in C#. The intention is that the students will be programming the robot by themselves during the hardware programming classes...|$|E
50|$|OLP {{does not}} {{interfere}} with production as {{the program for the}} robot is created outside the production process on an external computer.This method contradicts to the traditional on-line programming of industrial robots where the robot <b>teach</b> <b>pendant</b> is used for programming the robot manually.|$|R
50|$|ControllerSupervisor centralizes all the {{information}} related to Orchestra Control Engine. It receives information from the HMI, the <b>Teach</b> <b>Pendant</b> and other software components. Such information is sorted to the other components even if direct channels of communication among the various components for the specific information interchange are foreseen.|$|R
40|$|Abstract. This paper {{describes}} {{the design and}} implementation of a high efficiency motion controller system consisting of host machine and <b>teach</b> <b>pendant.</b> The host machine performs some of the position control processing tasks and receives the processed data from <b>Teach</b> <b>Pendant.</b> Starting with introduction to existing excellent 4 -axismotion controller PCL 6045 B, It {{describes the}} overall structure {{of the system and}} the hardware that make up the motion controller. Then, this paper discusses the design method of software system, and the motion control chip PCL 6045 B driver in WindowsCE. Besides, the flow diagram of the use of industrial communication networks transmission about CC_LINK is showed in detail. After testing the system, it has implemented the high precision position controller. Moreover, it has the advantages of low cost, easy use...|$|R
30|$|Offline {{programming}} (OLP) with {{simulation software}} allows programming of the welding path and operation sequence {{from a computer}} {{rather than from the}} robot itself. 3 D CAD models of the workpieces, robots, and fixtures used in the cell are required for OLP. The simulation software matches these 3 D CAD models, permitting programming of the robot‚Äôs welding trajectory from a computer instead of a <b>teaching</b> <b>pendant</b> in the welding cell as in online programming. After simulation and testing of the program, the instructions can be exported from the computer to the robot controller via an Ethernet communication network. Ongoing research suggests, however, that the use of sensing technology would make it feasible to completely program the final trajectory only with OLP (Miller Electric Mfg Co. 2013). Pan et al. (2012 a) developed an automated offline programming method with software that allows automatic planning and programming (with CAD models as input) for a robotic welding system with high degrees of freedom without any programming effort. The main advantages of OLP are its reusable code, flexibility for modification, ability to generate complex paths, and reduction in production downtime in the programming phase for setup of a new part. Nevertheless, OLP is mostly used to generate complex robot paths for large production volumes because the time and cost required to generate code for complex robotic systems is similar to if not greater than with online programming (Pan et al. 2012 a). Currently, for a complex manufacturing process with small to median production volume, very few robotic automation solution are used to replace manual production due to this expensive and time-consuming programming overhead. Although OLP has the abovementioned advantages, it is not popular for small to median enterprise (SME) users due to its obvious drawbacks. It is difficult to economically justify an OLP for smaller product values due to the high cost of the OLP package and programming overhead required to customize the software for a specific application. Development of customized software for offline programming is time-consuming and requires high-level programming skills. Typically, these skills are not available from the process engineers and operators who often perform the robot programming in-process today. As OLP methods rely accurate modeling of the robot and work cell, additional calibration procedures using extra sensors are in many cases inevitable to meet requirements (Pan et al. 2012 b).|$|E
25|$|The <b>teach</b> <b>pendant</b> or PC {{is usually}} {{disconnected}} after programming and the robot then {{runs on the}} program that has been installed in its controller. However a computer {{is often used to}} 'supervise' the robot and any peripherals, or to provide additional storage for access to numerous complex paths and routines.|$|R
50|$|The {{interface}} for {{the motor}} controller {{is based on}} a RS-232 serial port. (9600 baud, 7 data bits, 2 stop bits, even parity.) The controller, while in one physical box, is actually two machines. The one on the top is the <b>teach</b> <b>pendant</b> computer, the one below is the motor controller proper.|$|R
40|$|This paper {{describes}} {{the design and}} implementation of a high efficiency motion controller system consisting of host machine and <b>teach</b> <b>pendant.</b> The host machine performs some of the position control processing tasks and receives the processed data from <b>Teach</b> <b>Pendant.</b> Starting with introduction to existing excellent 4 -axismotion controller PCL 6045 B, It {{describes the}} overall structure {{of the system and}} the hardware that make up the motion controller. Then, this paper discusses the design method of software system, and the motion control chip PCL 6045 B driver in WindowsCE. Besides, the flow diagram of the use of industrial communication networks transmission about CC-LINK is showed in detail. After testing the system, it has implemented the high precision position controller. Moreover, it has the advantages of low cost, easy use. ¬© (2012) Trans Tech Publications. Fujian University of Technology; Xiamen University; Fuzhou University; Huaqiao University; University of Wollongon...|$|R
40|$|On-line {{programming}} {{of industrial}} robots is time consuming and requires experience in robot programming. Due to this fact, small and {{medium sized enterprises}} are reserved about the implementation of robots in production. Ongoing {{research in the field}} is focused on finding more intuitive interfaces and methods for programming to make the interaction with robots more natural and intuitive. This master thesis presents a method for manipulation of industrial robots utilizing an external device other than the traditional <b>teach</b> <b>pendant.</b> The base of the method is a PC application which handles the program logic and the communication between an external device and an ABB robot. The program logic is designed to be modular in order to allow customization of the method, both in terms of its functions and the type of external device that is used for the method. Since gestures {{are one of the most}} common forms of communication between humans, it is interesting to investigate gestures for the purpose to make manipulation of industrial robots more intuitive. Therefore, a Leap Motion controller is presented as an example of an external device which could be used as an alternative to the <b>teach</b> <b>pendant.</b> The Leap Motion controller is specialised on hand and finger position tracking with both good absolute accuracy and precision. Further, its associated Software Development Kit (SDK) has the capabilities which are required to enable implementation of a <b>teach</b> <b>pendants</b> most fundamental functionalities. Results obtained by a user test show that the developed application is both easy and fast to use but has poor robustness...|$|R
50|$|RoboLogix enables programmers {{to write}} their own robot {{programs}} and use sensors such as video cameras, which are used for obtaining the desired position of the robot end effector. In addition, a <b>teach</b> <b>pendant</b> control panel is included with the simulator that allows the user to command the robot {{to pick up a}} tracked object and return it to a home location through jogged commands or pre-programmed positions.|$|R
25|$|Positioning by Cartesian {{coordinates}} may be done {{by entering}} the coordinates into the system or by using a <b>teach</b> <b>pendant</b> which moves the robot in X-Y-Z directions. It is much easier for a human operator to visualize motions up/down, left/right, etc. than to move each joint one at a time. When the desired position is reached it is then defined in some way particular to the robot software in use, e.g. P1 - P5 below.|$|R
40|$|In {{contrast}} to highly automated industrial companies small and medium enterprises need a more intuitive programming method for robots than the <b>teach</b> <b>pendant</b> or offline programming tools. A solution for some tasks is the known procedure of walk-through teaching, but improved in several ways: post processed to identify dominant points, enrichted with sensor data and usable via a multimedial user interface. The articel introduces {{the method of}} Intuitive Teaching with focus on the post processing of trajectory data. One application is described...|$|R
40|$|An {{interactive}} robotics graphical {{computer simulation}} program, GRAS (Graphical Robot Animator and Simulator), has been developed. The GRAS program reads a data file of robot geometry data and displays the robot configuration as a 3 D solid model. It simulates a <b>teach</b> <b>pendant</b> for user interaction. The program {{was written in}} Java language for maximum portability and application. GRAS is a generalized program so it can simulate a variety of robots with different configurations. Examples of PUMA 560 and Pegasus robots are provided. The GRAS program {{is available on the}} web sit...|$|R
40|$|Currently, mast robot {{programming}} is done either by manual programming {{or by the}} "teach-by-showing"method using a <b>teach</b> <b>pendant.</b> Both of these methods {{have been found to}} have several drawbacks. We have been developing a novel method for programming a robot: the assembly-plan-from-observation (APO) method. The APO method aims to build a system that has threefold capabilities. It observes a human performing an assembly task, it understands the task based on this observation, and it generates a robot program to achieve the same task. This paper overviews our effort toward the realization of this method. ...|$|R
30|$|Of the {{programming}} methods commonly used with welding robots, conventional online programming with a <b>teach</b> <b>pendant,</b> i.e., lead-through programming, has {{the disadvantage of}} causing breaks in production during programming. Furthermore, it is only able to control simple robot paths. Offline programming, due to its reusable code, flexibility of modification, and ability to generate complex paths, offers {{the benefit of a}} reduction in production downtime in {{the programming}} phase for setup of new parts and supports autonomous robotic welding with a library of programming codes for weld parameters and trajectories for different 3 D CAD models of workpieces.|$|R
40|$|This paper {{presents}} a novel tablet based end-user interface for industrial robot programming (called Hammer). This application makes easier to program tasks for industrial robots like polishing, milling or grinding. It {{is based on}} the Scratch programming language, but specifically design and created for Android OS. It is a visual programming concept that allows non-skilled programmer operators to create programs. The application also allows to monitor the tasks while it is being executed by overlapping real time information through augmented reality. The application includes a <b>teach</b> <b>pendant</b> screen that can be customized according to the operator needs at every moment...|$|R
40|$|Abstract ‚Äì This paper {{presents}} a software architecture required {{to build a}} user-friendly interface for a robot manipulator. For this purpose, during research a prototype 5 -DOF robotic arm was built. The end effector of this robotic arm is a two-fingered gripper. The interface consists of two components generic to most industrial robot systems present today, first is the teach-pendant and second one is the computer based robot programming language. The main focus of the project {{is to develop a}} Language that provides robot-specific commands along with the framework common to all high level languages. A user interface has been developed that provides powerful tools for efficient control of the robot manipulator. The aspiration of this work is to present a system which is powerful, cost effective {{and at the same time}} intelligible to an average user. Key-Words:- robotic arm, robot programming language, <b>teach</b> <b>pendant,</b> user interface, AVR microcontroller...|$|R
40|$|Industrial Robots are the {{backbone}} {{of most of the}} automation systems. There has been a continuous research on these industrial robots to make them more user friendly. In the past decade, various methods had been developed to teach and control these robots more easily and effectively. In spite of all these developments, the Old <b>Teach</b> <b>Pendant</b> Robots are not yet replaced even in top robotic companies. There are many reasons attributed to this. One of the reason is that, the new developments doesn‚Äôt make great difference in the old system and that the whole cost of the system is still the same. This paper analyses the same and gives a solution that can make a huge difference in the present system. The Solution is an Android mobile. The paper concludes that by exploiting the capabilities of an Android mobile, a highly efficient and user friendly industrial robots can be designed...|$|R
40|$|In {{industrial}} robotics applications, <b>teach</b> <b>pendant</b> {{has been widely}} used by human operators to pre-define action trajectories for robot manipulators to execute as primitives. This hard-coding approach is only good for low-mix-highvolume jobs with sparse trajectory way-points. In this paper, we present a novel industrial robotic system designed for applications where human-robot interaction is key for efficient execution of actions such as high-mix-low-volume jobs. The proposed system comprises a robot manipulator that controls a tool (such as a soldering iron) {{to interact with the}} required workpiece, a networking server for remote tele-operation, and an integrated user interface that allows the human operator to better perceive the remote operation and to execute actions with greater ease. A user study is conducted to understand the merits of the proposed system. Results indicate that human can operate the system with ease and complete tasks more quickly and that the system can improve application efficiency...|$|R
40|$|Abstract: 2 ÃÜ 2 Currently, most robot {{programming}} is done either by manual programming {{or by the}} 2 ÃÜ 7 teach-by-showing 2 ÃÜ 7 method using a <b>teach</b> <b>pendant.</b> Both of these methods {{have been found to}} have several drawbacks. We propose a novel method to program a robot, the assembly-plan-from- observation (APO) method. The APO method aims to build a system that has the capability of observing a human performing an assembly task, understanding the task based on the observation, and generating the robot program to achieve the same task. In particular, this paper defines assembly relations which serve as the basic representation of each assembly task. Then, we verify that such assembly relations can be recovered from the observation of human assembly tasks, and that from such assembly relations, it is possible to generate robot motion commands to repeat the same assembly task. Finally, we demonstrate an APO system based on the assembly relations. 2 ÃÜ...|$|R
40|$|The most {{important}} tool for controlling an industrial robotic arm is a <b>teach</b> <b>pendant,</b> which controls the robotic arm movement in work spaces and accomplishes teaching tasks. A good teaching tool {{should be easy}} to operate and can complete teaching tasks rapidly and effortlessly. In this study, a new teaching system is proposed for enabling users to operate robotic arms and accomplish teaching tasks easily. The proposed teaching system consists of the teach pen, optical markers on the pen, a motion capture system, and the pen tip estimation algorithm. With the marker positions captured by the motion capture system, the pose of the teach pen is accurately calculated by the pen tip algorithm and used to control the robot tool frame. In addition, Fitts‚Äô Law is adopted to verify the usefulness of this new system, and {{the results show that}} the system provides high accuracy, excellent operation performance, and a stable error rate. In addition, the system maintains superior performance, even when users work on platforms with different inclination angles...|$|R
40|$|Most of {{industrial}} robots are still programmed using the typical teaching process, {{through the use}} of the robot <b>teach</b> <b>pendant.</b> In this paper is proposed an accelerometer-based system to control an industrial robot using two low-cost and small 3 -axis wireless accelerometers. These accelerometers are attached to the human arms, capturing its behavior (gestures and postures). An Artificial Neural Network (ANN) trained with a back-propagation algorithm was used to recognize arm gestures and postures, which then will be used as input in the control of the robot. The aim is that the robot starts the movement almost {{at the same time as}} the user starts to perform a gesture or posture (low response time). The results show that the system allows the control of an industrial robot in an intuitive way. However, the achieved recognition rate of gestures and postures (92 %) should be improved in future, keeping the compromise with the system response time (160 milliseconds). Finally, the results of some tests performed with an industrial robot are presented and discussed. Comment: The 18 th IEEE International Symposium on Robot and Human Interactive Communication, 2009. RO-MAN 2009. pp. 1192 - 1197, Toyama, Japan, 200...|$|R
