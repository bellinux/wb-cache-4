1318|3386|Public
5|$|Krom was {{concerned}} primarily with completeness of systems of inference rules, {{rather than with}} the efficiency of algorithms. However, his method leads to a polynomial <b>time</b> <b>bound</b> for solving 2-satisfiability problems.|$|E
5|$|However, it is {{unlikely}} that such a subexponential <b>time</b> <b>bound</b> is possible for the clique problem in arbitrary graphs, as it would imply similarly subexponential bounds for many other standard NP-complete problems.|$|E
5|$|On 9 January 1914, Seeadler {{departed}} East Africa for {{the last}} <b>time,</b> <b>bound</b> for Germany. She had spent nearly thirteen {{and a half years}} abroad, the longest uninterrupted period of overseas service of any major German warship. Her replacement, her sister , had not yet arrived but was en route. Seeadler stopped in Aden on 22 January, and arrived in Kiel on 18 March. She was then moved to Danzig and decommissioned. On 6 May 1914, she was reclassified as a gunboat. After the outbreak of World War I in August 1914, she was reduced to a hulk for storing naval mines since she was no longer fit for active service. She was towed to Wilhelmshaven and anchored in the outer roadstead. On 19 April 1917, her cargo exploded while she was moored in the Jade outside Wilhelmshaven. The explosion destroyed the ship, but there were no casualties; her wreck was never raised.|$|E
5000|$|Objectives: output {{requirements}} {{which are}} as specific, <b>time</b> <b>bounded</b> and as measurable as possible.|$|R
40|$|We {{investigate}} {{the relationship between}} the classes of languages accepted by deterministic and nondeterministic polynomial <b>time</b> <b>bounded</b> Turing machines and {{the relationship between the}} classes of languages accepted by deterministic polynomial <b>time</b> <b>bounded</b> and by nondeterministic polynomial tape bounded Turing machines. In both cases we study generators of the nondeterministic class that generate it by operations that the deterministic class is closed under...|$|R
40|$|Deterministic d-dimensional Turing {{machines}} are considered. We investigate the classes of languages acceptable by such devices with <b>time</b> <b>bounds</b> {{of the form}} id + r where r 2 o(id) is a sublinear function. It is shown that for any dimension d 1 there exist infinite time hierarchies of separated complexity classes in that range. Moreover, for the corresponding <b>time</b> <b>bounds</b> separated dimension hierarchies are proved. CR Subject Classification (1998) : F. 1. 3, F. 1. 1, F. 4. 3 1 E-mail: kutrib@informatik. uni-giessen. de Copyright c fl 2000 by the author 1 Introduction In the sequel we are concerned with Turing machine computations with <b>time</b> <b>bounds</b> of the form id+r where id denotes the identity function on integers and r 2 o(id) a sublinear function. Most of the previous investigations in this area {{have been done in}} terms of one-dimensional real-time and linear-time Turing machines. For the <b>time</b> <b>bounds</b> in question nondeterministic Turing machines would not be fruitful devices for investigat [...] ...|$|R
5|$|Vermont left Valparaiso on 2 July, {{stopping}} in Callao, Peru {{on the way}} back to the Panama Canal. After returning to the United States, she resumed her training ship duties, which lasted almost to the end of the war. On 5 November, less than a week before the Armistice with Germany ended the fighting in Europe, Vermont was sent to the Philadelphia Navy Yard for conversion into a troop transport. She began her first transport mission on 9 January 1919; she made another three trips to return American soldiers from France, with the last concluding on 20 June 1919. In the course of these voyages, she carried some 5,000 men back to the United States. On 18 July, she steamed out of Norfolk for the last <b>time,</b> <b>bound</b> for the west coast of the United States. She visited San Diego, San Pedro, Monterey, San Francisco, and Long Beach in California, and Astoria, Oregon. Her final destination was the Mare Island Navy Yard at Vallejo, California, where she arrived on 18 September. She was decommissioned there on 30 June 1920 and reclassified as BB-20 on 17 July. She remained there until 10 November 1923, when she was struck from the Naval Vessel Registry. On 30 November, she was sold for scrap and broken up under the terms of the Washington Naval Treaty. Her bell currently resides at the Vermont State Capitol in Montpelier, VT.|$|E
25|$|It is {{incumbent}} {{to teach children}} to recite the first verse, and subsequent paragraphs {{as soon as they}} are able to understand its meaning. Women are not <b>time</b> <b>bound</b> in its recitation and therefore are not required to say it within its time.|$|E
25|$|Typing: As {{with most}} {{scripting}} languages, JavaScript is dynamically typed; a type {{is associated with}} each value, rather than just with each expression. For example, a variable that is at one <b>time</b> <b>bound</b> to a number may later be re-bound to a string. JavaScript supports various ways to test the type of an object, including duck typing.|$|E
5|$|Various {{authors have}} also {{explored}} exponential worst-case <b>time</b> <b>bounds</b> for exact solution of MAX-2-SAT instances.|$|R
5000|$|Safe {{on-the-fly}} steady-state detection for time-bounded reachability (see <b>time</b> <b>bounded</b> until {{operator of}} CSL logic).|$|R
50|$|Top {{trees have}} been {{implemented}} {{in a variety of}} ways, some of them include implementation using a Multilevel Partition (Top-trees and dynamic graph algorithms Jacob Holm and Kristian de Lichtenberg. Technical Report), and even by using Sleator-Tarjan s-t trees (typically with amortized <b>time</b> <b>bounds),</b> Frederickson's Topology Trees (with worst case <b>time</b> <b>bounds)</b> (Alstrup et al. Maintaining Information in Fully Dynamic Trees with Top Trees).|$|R
25|$|This {{function}} {{arises in}} more precise {{analyses of the}} algorithms mentioned above, and gives a more refined <b>time</b> <b>bound.</b> In the disjoint-set data structure, m represents the number of operations while n represents the number of elements; in the minimum spanning tree algorithm, m represents the number of edges while n represents the number of vertices.|$|E
25|$|Captain Agnew again left The Downs on 5 January 1790, this <b>time</b> <b>bound</b> for Madras and China. Triton reached Madras on 9 July, {{and arrived}} at Whampoa on 30 August. Homeward bound, she crossed the Second Bar on 2 February 1791, reached the Cape on 9 April and St Helena on 28 April, {{arriving}} at The Downs on 28 June.|$|E
25|$|The 2007 Africa One Antonov An-26 crash {{occurred}} when a twin engine Antonov An-26, {{belonging to the}} Congolese air carrier Africa One, crashed and burned shortly after takeoff from N'djili Airport in Kinshasa, Democratic Republic of the Congo on October 4, 2007. The flight left N'djili at 10:43 local <b>time</b> <b>bound</b> for Tshikapa, a distance of 650km to the east.|$|E
500|$|A {{complicated}} randomized algorithm of [...] allows these <b>time</b> <b>bounds</b> to {{be reduced}} even farther, to [...]|$|R
40|$|Abstract—Response <b>time</b> <b>bounds</b> are {{important}} for many application scenarios of wireless sensor networks (WSN). Often, during the planning phase of a WSN its topology is not known. It rather results from a deployment process. This makes the provision of deterministic response <b>time</b> <b>bounds</b> difficult. In this paper, we strive for statistical response <b>time</b> <b>bounds</b> in WSNs that take the stochastic nature of the deployment process into account. Based on a Monte Carlo method we derive estimates for quantiles of the maximum response time distribution under uncertainty about the topology. In numerical experiments we show that the long but light tail of this distribution causes considerably lower bounds compared to the deterministic one even under small violation probabilities and, yet, {{on the other hand}} compare favourably with the median of the distribution...|$|R
40|$|Abstract: This paper surveys {{some new}} tools and methods for {{formally}} verifying time performance properties of systems that satisfy timing assumptions. The techniques are potentially of practical benet in the validation of real-time process control and communication systems. The tools and methods include nondeterministic timed automaton models, invariant assertion and simulation techniques for proving worst-case <b>time</b> <b>bounds,</b> probabilistic <b>timed</b> automaton models, and Markov-style techniques for proving probabilistic <b>time</b> <b>bounds.</b> All {{of these techniques}} are well suited for (partial) mechanization. ...|$|R
25|$|An {{algorithm}} {{is said to}} run in quasilinear time (also referred to as log-linear time) if T(n) = O(n logk n) for some positive constant k; linearithmic time is the case knbsp&=nbsp&1. Using soft O notation these algorithms are Õ(n). Quasilinear time algorithms are also O(n1+ε) for every constant ε > 0, and thus run faster than any polynomial time algorithm whose <b>time</b> <b>bound</b> includes a term n'c for any cnbsp&>nbsp&1.|$|E
25|$|He was {{released}} from active duty in July 1946. Under the G.I. Bill, he earned a Master of Arts degree in Education at the Catholic University of America in February 1948. In September 1948, he returned to active duty in the U.S. Army and resumed his chaplaincy at Fort Bliss near El Paso, Texas. In December 1949, Kapaun left his parents and Pilsen for the last <b>time,</b> <b>bound</b> for Japan.|$|E
25|$|A {{large amount}} of {{parliamentary}} time was spent debating {{the application of the}} cab-rank rule to new legal professionals granted rights of audience – the Bar argued that all people with rights of audience in the higher courts should be subject to the same rules as barristers, while the Law Society argued that solicitors were not at that <b>time</b> <b>bound</b> by the cab-rank rule in their dealings in the lower courts, {{and that there was no}} reason why this should not be extended to the higher courts.|$|E
40|$|AbstractWe {{study the}} problem of {{determining}} whether a given recursive Datalog program is equivalent to a given nonrecursive Datalog program. Since nonrecursive Datalog programs are equivalent to unions of conjunctive queries, we study also {{the problem of}} determining whether a given recursive Datalog program is contained in a union of conjunctive queries. For this problem, we prove doubly exponential upper and lower <b>time</b> <b>bounds.</b> For the equivalence problem, we prove triply exponential upper and lower <b>time</b> <b>bounds...</b>|$|R
40|$|Deterministic d-dimensional Turing {{machines}} are considered. We investigate the classes of languages acceptable by such devices with <b>time</b> <b>bounds</b> {{of the form}} id + r where r E o(id) is a sublinear function. It is shown that for any dimension d >= 1 there exist infinite time hierarchies of separated complexity classes in that range. Moreover, for the corresponding <b>time</b> <b>bounds</b> separated dimension hierarchies are proved. CR Subject Classification (1998) : F. 1. 3, F. 1. 1, F. 4. ...|$|R
40|$|NP-complete {{problems}} cannot have efficient algorithms unless P = NP. Due {{to their}} importance in practice, however, {{it is useful}} to improve the known exponential-time algorithms for NP-complete problems. We survey some of the recent results on such improved exponential-time algorithms for the NP-complete problems satisfiability, graph colorability, and the domatic number problem. The deterministic <b>time</b> <b>bounds</b> are compared with the corresponding <b>time</b> <b>bounds</b> of randomized algorithms, which often run faster but only at the cost of having a certain error probability...|$|R
25|$|A {{minimum weight}} {{basis of a}} graphic matroid is a minimum {{spanning}} tree (or minimum spanning forest, if the underlying graph is disconnected). Algorithms for computing minimum spanning trees have been intensively studied; it is known how {{to solve the problem}} in linear randomized expected time in a comparison model of computation, or in linear time in a model of computation in which the edge weights are small integers and bitwise operations are allowed on their binary representations. The fastest known <b>time</b> <b>bound</b> that has been proven for a deterministic algorithm is slightly superlinear.|$|E
25|$|It is {{straightforward}} {{to turn a}} proof of Moon and Moser's 3n/3 bound {{on the number of}} maximal independent sets into an algorithm that lists all such sets in time O(3n/3). For graphs that have the largest possible number of maximal independent sets, this algorithm takes constant time per output set. However, an algorithm with this <b>time</b> <b>bound</b> can be highly inefficient for graphs with more limited numbers of independent sets. For this reason, many researchers have studied algorithms that list all maximal independent sets in polynomial time per output set. The time per maximal independent set is proportional to that for matrix multiplication in dense graphs, or faster in various classes of sparse graphs.|$|E
25|$|It is {{straightforward}} {{to verify that}} a given graph with n vertices and m edges is claw-free in time O(n4), by testing each 4-tuple of vertices {{to determine whether they}} induce a claw. With more efficiency, and greater complication, one can test whether a graph is claw-free by checking, for each vertex of the graph, that the complement graph of its neighbors does not contain a triangle. A graph contains a triangle if and only if the cube of its adjacency matrix contains a nonzero diagonal element, so finding a triangle may be performed in the same asymptotic <b>time</b> <b>bound</b> as n'n matrix multiplication. Therefore, using the Coppersmith–Winograd algorithm, the total time for this claw-free recognition algorithm would be O(n3.376).|$|E
40|$|Abstract. Two process–algebraic {{approaches}} {{have been developed}} for comparing two bisimulation–equivalent processes with respect to speed: the one of Moller/Tofts equips actions with lower <b>time</b> <b>bounds,</b> while the one by Lüttgen/Vogler considers upper <b>time</b> <b>bounds</b> instead. This paper sheds new light on both approaches by testifying to their close relationship. We introduce a general, intuitive concept of “faster– than”, which is formalised by a notion of amortised faster–than preorder. When closing this preorder under all contexts, exactly the two faster– than preorders investigated by Moller/Tofts and Lüttgen/Vogler arise. For processes incorporating both lower and upper <b>time</b> <b>bounds</b> we also show that the largest precongruence contained in the amortised faster– than preorder is not a proper preorder but a timed bisimulation. In the light of this result we systematically investigate under which circumstances the amortised faster–than preorder degrades to an equivalence. ...|$|R
40|$|AbstractTwo process-algebraic {{approaches}} {{have been developed}} for comparing two bisimulation-equivalent processes with respect to speed: the one of Moller/Tofts equips actions with lower <b>time</b> <b>bounds,</b> while the other by Lüttgen/Vogler considers upper <b>time</b> <b>bounds</b> instead. This article sheds new light on both approaches by testifying to their close relationship. We introduce a general, intuitive concept of “faster-than”, which is formalised by a notion of amortised faster-than preorder. When closing this preorder under all contexts, exactly the two faster-than preorders investigated by Moller/Tofts and Lüttgen/Vogler arise. For processes incorporating both lower and upper <b>time</b> <b>bounds</b> we also show that the largest precongruence contained in the amortised faster-than preorder is not a proper preorder but a timed bisimulation. In the light of this result we systematically investigate under which circumstances the amortised faster-than preorder degrades to an equivalence...|$|R
50|$|There is an {{open source}} library, called DEVS# at http://xsy-csharp.sourceforge.net/DEVSsharp/, that {{supports}} some algorithms for finding safyness and liveness as well as Min/Max processing <b>time</b> <b>bounds.</b>|$|R
25|$|As an attorney, Jefferson {{represented}} {{people of}} color as well as whites. In 1770, he defended a young mulatto male slave in a freedom suit, {{on the grounds that}} his mother was white and freeborn. By the colony's law of partus sequitur ventrum, that the child took the status of the mother, the man should never have been enslaved. He lost the suit. In 1772, Jefferson represented George Manly, the son of a free woman of color, who sued for freedom after having been held as an indentured servant three years past the expiration of his term. (The Virginia colony at the <b>time</b> <b>bound</b> illegitimate mixed-race children of free women as indentured servants: until age 31 for males, with a shorter term for females.) Once freed, Manly worked for Jefferson at Monticello for wages.|$|E
500|$|By {{grouping}} {{together all}} of the clauses that use the same variable, and applying the inference rule to each pair of clauses, {{it is possible to}} find all inferences that are possible from a given 2-CNF instance, and to test whether it is consistent, in total time , where [...] is the number of variables in the instance. This formula comes from multiplying the number of variables by the [...] number of pairs of clauses involving a given variable, to which the inference rule may be applied. Thus, it is possible to determine whether a given 2-CNF instance is satisfiable in time [...] Because finding a satisfying assignment using Krom's method involves a sequence of [...] consistency checks, it would take time [...] [...] quote a faster <b>time</b> <b>bound</b> of [...] for this algorithm, based on more careful ordering of its operations. Nevertheless, even this smaller <b>time</b> <b>bound</b> was greatly improved by the later linear time algorithms of [...] and [...]|$|E
500|$|The same method {{also can}} be used as a {{subroutine}} when the individual cluster diameters are unknown. To test whether a given sum of diameters can be achieved without knowing the individual cluster diameters, one may try all maximal pairs of target diameters that add up to at most the given sum, representing each pair of diameters as a 2-satisfiability instance and using a 2-satisfiability algorithm to determine whether that pair can be realized by a clustering. To find the optimal sum of diameters one may perform a binary search in which each step is a feasibility test of this type. The same approach also works to find clusterings that optimize other combinations than sums of the cluster diameters, and that use arbitrary dissimilarity numbers (rather than distances in a metric space) to measure the size of a cluster. The <b>time</b> <b>bound</b> for this algorithm is dominated by the time to solve a sequence of 2-satisfiability instances that are closely related to each other, and [...] shows how to solve these related instances more quickly than if they were solved independently from each other, leading to a total <b>time</b> <b>bound</b> of [...] for the sum-of-diameters clustering problem.|$|E
6000|$|... "Where did he go?" [...] {{questioned}} Dave, and at {{the same}} <b>time</b> <b>bounded</b> back into the bedroom, to don his shoes and part of his clothing.|$|R
40|$|A {{knowledge}} base management {{system based on}} <b>time</b> <b>bounded</b> reasonning is discussed. Since the first order predicate logic is undecidable, it cannot be certified whether the computation of a formula from a {{knowledge base}} will stop or not. In order to implement a practica 1 knowledge base system, however, this problem should be solved. In this paper, we indicate the principles to organize the <b>time</b> <b>bounded</b> knowledge base management systems which deduce formulas in finite time. The system has been implemneted in K-prolog on Sun- 3...|$|R
40|$|Abstract. The dynamic vertex minimum problem (DVMP) is to main-tain {{the minimum}} cost edge in a graph that {{is subject to}} vertex {{additions}} and deletions. DVMP abstracts the clustering operation that {{is used in the}} primal-dual approximation scheme of Goemans and Williamson (GW). We present an algorithm for DVMP that immediately leads to the best-known <b>time</b> <b>bounds</b> for the GW approximation algorithm for problems that require a metric space. These <b>bounds</b> include <b>time</b> O(n 2 for the prize-collecting TSP and other direct applications of the GW al-gorithm (for n the number of vertices) as well as the best-known <b>time</b> <b>bounds</b> for approximating the k-MST and minimum latency problems, where the GW algorithm is used repeatedly as a subroutine. Although the improvement over previous <b>time</b> <b>bounds</b> is by only a sublogarithmic factor, our bound is asymptotically optimal in the dense case, and the data structures used are relatively simple. ...|$|R
