10000|10000|Public
5|$|G {{is the sum}} of the {{amplifier}} {{output conductance}} and <b>the</b> <b>input</b> conductance of the next amplifier.|$|E
5|$|Gi is <b>the</b> <b>input</b> {{conductance}} of the amplifiers.|$|E
5|$|A voltage doubler is an {{electronic}} circuit which charges capacitors from <b>the</b> <b>input</b> voltage and switches these charges {{in such a}} way that, in the ideal case, exactly twice the voltage is produced at the output as at its input.|$|E
3000|$|..., <b>the</b> <b>inputs</b> are {{infinitely}} {{slow and}} the activity variable has {{enough time to}} converge towards its equilibrium point. When μ grows, the dynamics {{becomes more and more}} transient, it has no time to converge. Therefore, if <b>the</b> <b>inputs</b> are extremely slow, the network only learns the spatial correlation of <b>the</b> <b>inputs.</b> If <b>the</b> <b>inputs</b> are fast, it also learns the temporal correlations. This is illustrated in Figure  3.|$|R
50|$|This {{is because}} <b>the</b> {{non-inverting}} <b>input</b> {{is less than}} <b>the</b> inverting <b>input,</b> and as <b>the</b> output continues to decrease, the difference between <b>the</b> <b>inputs</b> gets more and more negative. Again, <b>the</b> inverting <b>input</b> approaches <b>the</b> comparator's output voltage asymptotically, and the cycle repeats itself once <b>the</b> non-inverting <b>input</b> is greater than <b>the</b> inverting <b>input,</b> hence <b>the</b> system oscillates.|$|R
3000|$|... is large, {{then the}} {{activity}} will evolve {{in the same}} direction as what this input would have done. The network has modeled the temporal structure of <b>the</b> <b>inputs.</b> <b>The</b> spontaneous activity predicts and replays <b>the</b> <b>inputs</b> <b>the</b> network has learned.|$|R
5|$|Although the {{problems}} of listing maximal cliques or finding maximum cliques {{are unlikely to be}} fixed-parameter tractable with the parameter , they may be fixed-parameter tractable for other parameters of instance complexity. For instance, both problems are known to be fixed-parameter tractable when parametrized by the degeneracy of <b>the</b> <b>input</b> graph.|$|E
5|$|Culik {{begins with}} the {{observation}} that a cellular automaton has an injective transition function {{if and only if}} the transition function is injective on the subsets of configurations that are periodic (repeating the same substring infinitely often in both directions). He defines a nondeterministic finite-state transducer that performs the transition rule of the automaton on periodic strings. This transducer works by remembering the neighborhood of the automaton {{at the start of the}} string and entering an accepting state when that neighborhood concatenated to the end of <b>the</b> <b>input</b> would cause its nondeterministically chosen transitions to be correct. Culik then swaps <b>the</b> <b>input</b> and output of the transducer. The transducer resulting from this swap simulates the inverse dynamics of the given automaton. Finally, Culik applies previously known algorithms to test whether the resulting swapped transducer maps each input to a single output.|$|E
5|$|In {{a passive}} ALF, <b>the</b> <b>input</b> {{frequency}} must correspond almost exactly {{to the natural}} absorption lines of the vapor cell. Active ARFs are much more flexible, however, as the vapor may be stimulated {{so that it will}} absorb other frequencies of light.|$|E
5000|$|<b>The</b> <b>inputs</b> or {{resources}} used in {{the production}} process are called factors of production by economists. <b>The</b> <b>inputs</b> are usually grouped into four categories. These factors are: ...|$|R
40|$|The {{aim of this}} {{research}} is to extend the discrim- ination of a decision tree builder by adding polynomials of <b>the</b> base <b>inputs</b> to <b>the</b> <b>inputs.</b> <b>The</b> polynomials used to extend <b>the</b> <b>inputs</b> are evolved using the quality of the decision trees resulting from <b>the</b> extended <b>inputs</b> as a fitness function. Our approach generates a decision tree using <b>the</b> base <b>inputs</b> and compares it with a decision tree built using <b>the</b> extended <b>input</b> space. Results show substantial improvements. Rough set reducts are also employed and show no reduction in discrimination through the transformed space. </span...|$|R
50|$|Section 3 of the USAF Digital DATCOM Manual Volume I defines <b>the</b> <b>inputs</b> {{available}} for modeling an aircraft. <b>The</b> <b>inputs</b> are categorized by namelists to facilitate reading the file into FORTRAN.|$|R
5|$|In agglomerative {{clustering}} methods, <b>the</b> <b>input</b> {{also includes}} a distance function defined on the points, or a numerical measure of their dissimilarity.|$|E
5|$|In the clique {{decision}} problem, <b>the</b> <b>input</b> is an {{undirected graph}} {{and a number}} , and the output is a Boolean value: true if the graph contains a -clique, and false otherwise.|$|E
5|$|In {{the maximum}} clique problem, <b>the</b> <b>input</b> is an undirected graph, and the output is a maximum clique in the graph. If there are {{multiple}} maximum cliques, one of them may be chosen arbitrarily.|$|E
3000|$|... {{which is}} the {{expectation}} of the vector field defining <b>the</b> dynamics of <b>inputs</b> with a measure being the scalar product between the activity variable and <b>the</b> <b>inputs.</b> In other words, if the activity is close to <b>the</b> <b>inputs</b> {{at a given time}} [...]...|$|R
30|$|Fuzzification: The {{process of}} getting <b>the</b> crisp <b>inputs</b> from <b>the</b> chosen <b>input</b> {{variables}} and estimating {{the degree to which}} <b>the</b> <b>inputs</b> belong to each of the appropriate fuzzy sets is termed as fuzzification.|$|R
3000|$|... [...]. <b>The</b> {{transformed}} <b>inputs</b> are summed {{to obtain}} <b>the</b> summed <b>input.</b> <b>The</b> summed <b>input</b> constitutes <b>the</b> variables to the activation/transfer function, g, which generates the output a [...]...|$|R
5|$|In the maximum-2-satisfiability problem (MAX-2-SAT), <b>the</b> <b>input</b> is {{a formula}} in {{conjunctive normal form}} with two literals per clause, and the task is to {{determine}} the maximum number of clauses that can be simultaneously satisfied by an assignment. MAX-2-SAT is NP-hard and it is a particular case of a maximum satisfiability problem.|$|E
5|$|Programs {{were entered}} in binary form by {{stepping}} through each word of memory in turn, {{and using a}} set of 32switches known as <b>the</b> <b>input</b> device to set the value of each bit of each word to either 0 or 1. The SSEM had no paper-tape reader or punch.|$|E
5|$|The {{algorithm}} {{accepts a}} 32-bit floating-point number as <b>the</b> <b>input</b> and stores a halved value for later use. Then, treating the bits representing the floating-point number as a 32-bit integer, a logical shift right by one bit is performed {{and the result}} subtracted from the magic number 0x5F3759DF. This is the first approximation of the inverse square root of <b>the</b> <b>input.</b> Treating the bits again as a floating-point number, it runs one iteration of Newton's method, yielding a more precise approximation.|$|E
5000|$|The {{majority}} function produces [...] "1" [...] {{when more}} than half of <b>the</b> <b>inputs</b> are 1; it produces [...] "0" [...] {{when more than}} half <b>the</b> <b>inputs</b> are 0. Most applications deliberately force an odd number of inputs so they don't {{have to deal with the}} question of what happens when exactly half <b>the</b> <b>inputs</b> are 0 and exactly half <b>the</b> <b>inputs</b> are 1. <b>The</b> few systems that calculate the majority function on an even number of inputs are often biased towards [...] "0"—they produce [...] "0" [...] when exactly half <b>the</b> <b>inputs</b> are 0 -- for example, a 4-input majority gate has a 0 output only when two or more 0's appear at its inputs. In a few systems, a 4-input majority network randomly chooses [...] "1" [...] or [...] "0" [...] when exactly two 0's appear at its inputs.|$|R
30|$|A {{reversible}} {{logic gate}} {{is one that has}} n input n output; with one-to-one mapping that means it determines the outputs from <b>the</b> <b>inputs.</b> It also helps <b>the</b> <b>inputs</b> to be uniquely recovered or reconstructed from the outputs.|$|R
50|$|When a given target neuron {{receives}} inputs {{from multiple}} sources, those inputs can be spatially summated if <b>the</b> <b>inputs</b> arrive closely enough {{in time that}} the influence of <b>the</b> earliest-arriving <b>inputs</b> has not yet decayed. If a target neuron receives input from a single axon terminal and that input occurs repeatedly at short intervals, <b>the</b> <b>inputs</b> can summate temporally.|$|R
5|$|The {{heterodyne}} technique {{is used for}} (1) shifting an input signal into a new frequency range as well as (2) amplifying a weak input signal (assuming use of an active mixer). A weak input signal of frequency f1 is mixed with a strong reference frequency f2 from a local oscillator (LO). The nonlinear combination of <b>the</b> <b>input</b> signals creates two new signals, one at the sum f1+f2 of the two frequencies, and the other at the difference f1−f2. These new frequencies are called heterodynes. Typically {{only one of the}} new frequencies is desired, and the other signal is filtered out of the output of the mixer. The output signal will have an intensity proportional to the product of the amplitudes of <b>the</b> <b>input</b> signals.|$|E
5|$|<b>The</b> <b>input</b> to a {{clustering}} problem {{consists of a}} set of points. A cluster is any proper subset of the points, and a hierarchical clustering is a maximal family of clusters with the property that any two clusters in the family are either nested or disjoint.|$|E
5|$|The {{most obvious}} technology, the centrifuge, failed, but {{electromagnetic}} separation, gaseous diffusion, and thermal diffusion technologies were all successful {{and contributed to}} the project. In February 1943, Groves {{came up with the idea}} of using the output of some plants as <b>the</b> <b>input</b> for others.|$|E
30|$|Finally, {{we can see}} {{the output}} {{surfaces}} in terms of <b>the</b> <b>inputs</b> covering both <b>the</b> whole <b>input</b> space and <b>the</b> whole output space, in order to show <b>the</b> interaction between <b>inputs</b> and outputs.|$|R
50|$|Copying <b>the</b> <b>inputs</b> allows <b>the</b> {{data to be}} {{arranged}} {{in a way that}} provides optimal access for the kernel functions, but this comes at the cost of allocating temporary space, and an extra read and write of <b>the</b> <b>inputs.</b>|$|R
50|$|A NOT gate is made {{by joining}} <b>the</b> <b>inputs</b> of a NAND gate together. Since a NAND gate is {{equivalent}} to an AND gate followed by a NOT gate, joining <b>the</b> <b>inputs</b> of a NAND gate leaves only the NOT gate.|$|R
5|$|The {{nominal value}} of <b>the</b> <b>input,</b> output or image {{impedance}} of a port of a network, especially a network {{intended for use}} with a transmission line, such as filters, equalisers and amplifiers.|$|E
5|$|In the maximal clique listing problem, <b>the</b> <b>input</b> is an undirected graph, and {{the output}} {{is a list}} of all its maximal cliques. The maximum clique problem may be solved using as a {{subroutine}} an algorithm for the maximal clique listing problem, because the maximum clique must be included among all the maximal cliques.|$|E
25|$|The {{left side}} of Fig.1 shows a region of the prefrontal cortex {{receiving}} multiple inputs from other regions, as cortico-cortical activity. <b>The</b> <b>input</b> from B is the strongest of these. The right side of Fig. 1 shows <b>the</b> <b>input</b> signals also being fed to the basal ganglia circuitry. The output from here, {{back to the same}} region, is shown to modify the strength of <b>the</b> <b>input</b> from B, by adding strength to <b>the</b> <b>input</b> from C thereby modifying the strongest signal from B to C. (Thalamic involvement is implicit but not shown).|$|E
2500|$|Suppose {{now that}} an {{attenuating}} feedback loop applies a fraction [...] of the output {{to one of}} <b>the</b> subtractor <b>inputs</b> so that it subtracts from <b>the</b> circuit <b>input</b> voltage [...] Vin applied to <b>the</b> other subtractor <b>input.</b> <b>The</b> result of subtraction applied to <b>the</b> amplifier <b>input</b> is ...|$|R
50|$|The {{critical}} step {{in building a}} distributed system of State Machines is choosing an order for <b>the</b> <b>Inputs</b> to be processed. Since all non-faulty replicas will arrive at the same State and Output if given <b>the</b> same <b>Inputs,</b> {{it is imperative that}} <b>the</b> <b>Inputs</b> are submitted in an equivalent order at each replica. Many solutions have been proposed in the literature.|$|R
40|$|Abstract- This paper {{presents}} a global methodology {{to build a}} nonlinear regression {{when the number of}} available samples is small compared to <b>the</b> number of <b>inputs.</b> <b>The</b> task is divided in two parts: selection of <b>the</b> best <b>inputs</b> and construction of the approximator. A first SOM is used to compute clean correlations between <b>the</b> <b>inputs</b> and <b>the</b> output. A second SOM is built to link the output to <b>the</b> selected <b>inputs.</b> <b>The</b> good performances of this methodology are illustrated on a spectrometric dataset...|$|R
