477|126|Public
2500|$|Defensive {{responses}} to denial-of-service attacks typically involve {{the use of}} a combination of attack detection, <b>traffic</b> <b>classification</b> and response tools, aiming to block traffic that they identify as illegitimate and allow traffic that they identify as legitimate. A list of prevention and response tools is provided below: ...|$|E
5000|$|Differentiated services, Integrated services—including <b>traffic</b> <b>classification</b> and prioritization.|$|E
5000|$|Appmon, an {{application}} for Accurate Per-Application Network <b>Traffic</b> <b>Classification.</b>|$|E
40|$|Abstract <b>Traffic</b> sign <b>classification</b> {{represents}} a classical application of multi-object recognition processing in uncontrolled adverse environments. Lack of visibility, illumination changes, and partial occlusions {{are just a}} few problems. In this paper, we introduce a novel system for multi-class <b>classification</b> of <b>traffic</b> signs based on error correcting output codes (ECOC). ECOC is based on an ensemble of binary classifiers that are trained on bi-partition of classes. We classify a wide set of traffic signs types using robust error correcting codings. Moreover, we introduce the novel β-correction decoding strategy that outperforms the state-of-the-art decoding techniques, classifying a high number of classes with great success. Keywords Multi-class classification · Error correcting output codes · Embedding of dichotomizers · Object recognition · <b>Traffic</b> sign <b>classification</b> · Adaboost...|$|R
40|$|Currently, {{with the}} rapid {{increasing}} of data scales in network <b>traffic</b> <b>classifications,</b> how to select traffic features efficiently is becoming a big challenge. Although a number of traditional feature selection methods using the Hadoop-MapReduce framework have been proposed, the execution time was still unsatisfactory with numeral iterative computations during the processing. To address this issue, an efficient feature selection method for network traffic based on a new parallel computing framework called Spark is proposed in this paper. In our approach, the complete feature set is firstly preprocessed based on Fisher score, and a sequential forward search strategy is employed for subsets. The optimal feature subset is then selected using the continuous iterations of the Spark computing framework. The implementation demonstrates that, on the precondition of keeping the classification accuracy, our method reduces the time cost of modeling and classification, and improves the execution efficiency of feature selection significantly...|$|R
40|$|Abstract—The {{accurate}} {{identification and}} recognition of the traffic signs is a challenging problem as the developed systems have to address {{a large number of}} imaging problems such as motion artifacts, various weather conditions, shadows and partial occlusion, issues that are often encountered in video traffic sequences that are captured from a moving vehicle. These factors substantially degrade the performance of the existing traffic sign recognition (TSR) systems and in this paper we detail the implementation of a new strategy that entails three distinct computational stages. The first component addresses the robust identification of the candidate traffic signs in each frame of the video sequence. The second component discards the traffic sign candidates that do not comply with stringent shape constraints, and the last component implements the <b>classification</b> of the <b>traffic</b> signs using Support Vector Machines (SVMs). The main novel elements of our TSR algorithm are given by the approach that has been developed for <b>traffic</b> sign <b>classification</b> and by the experimental evaluation that was employed to identify the optimal image attributes that are able to maximize the <b>traffic</b> sign <b>classification</b> performance. The TSR algorithm has been validated using video sequences that include the most important categories of signs that are used to regulate the traffic on the Irish and UK roads, and it achieved 87. 6 % sign detection, 99. 2 % <b>traffic</b> sign <b>classification</b> accuracy and 86. 7 % overall traffic sign recognition...|$|R
5000|$|Solidum {{produced}} {{a set of}} <b>Traffic</b> <b>Classification</b> devices called the PAX.port 1100, PAX.port 1200, and PAX.port 2500 ...|$|E
5000|$|<b>Traffic</b> <b>classification</b> - categorising traffic {{according}} to some policy in order that the above techniques {{can be applied to}} each class of traffic differently ...|$|E
5000|$|SMPTE ST 2071-2 - Media Device Control Protocol {{standard}} {{defines a}} WS-I Basic Profile 1.2 compliant Web Services protocol with provisions for IP <b>traffic</b> <b>classification</b> {{to help with}} the implementation of network-based QoS ...|$|E
30|$|In this section, {{we discuss}} our {{proposed}} work in detail. First, {{we discuss the}} <b>traffic</b> and device <b>classification</b> {{to be used in}} our model followed by device states.|$|R
40|$|In this paper, we give an {{overview}} and a detail analysis of our approach for vision-based real-time traffic parameters estimation using low-resolution web cameras. Traffic parameters estimation approach mainly includes three major steps, (1) stable background estimation, (2) vehicle detection, mean speed and traffic flow estimation, and (3) <b>traffic</b> scene <b>classification</b> into three states (normal and congested). The background image is estimated and updated in realtime by novel background estimation algorithm {{based on the}} median of First-in-First-Out (FIFO) buffer of rectified traffic images. Vehicles are detected by background subtraction followed by post-processing steps. By exploiting the domain knowledge of real-world traffic flow patterns, mean speed and traffic flow can be estimated reliably and accurately. Naive Bayes classifier with statistical features is used for <b>traffic</b> scene <b>classification.</b> The <b>traffic</b> parameter estimation approach is tested and evaluated at the German Aerospace Center’s (DLR) urban road research laboratory in Berlin for 24 hours of live streaming data from web-cameras with frames per second 1, 5 and 10. Image resolution is 348 x 259 and JPEG compression is 50...|$|R
40|$|The {{exploration}} {{and analysis of}} large databases of information are an everchallenging task as digital data acquisition continues to progress. The discipline of data mining has often been employed to extract structure and patterns from the underlying dataset. In addition, new {{research in the field}} of information visualization is being applied to the same challenge. Visual models engage the invaluable pattern processing abilities of the human brain which leads to new areas of insight otherwise undetected. This research applies the benefits of both data mining and information visualization to the specific problem of traffic analysis on computer networks. This is an important issue {{as it relates to the}} ability to understand diverse behavior on the network and provide many fundamental services. For example, distinct <b>traffic</b> <b>classifications</b> and associated <b>traffic</b> volumes facilitate capacity-planning initiatives. Furthermore, accurate categorization of network traffic can be leveraged by quality of service offerings and, at the same time, lend itself to efficient security analysis. In this research, an example of a data processing pipeline is described that incorporates both data mining and visualization techniques t...|$|R
50|$|A {{comprehensive}} {{comparison of}} various network traffic classifiers, which depend on Deep Packet Inspection (PACE, OpenDPI, 4 different configurations of L7-filter, NDPI, Libprotoident, and Cisco NBAR), {{is shown in}} the Independent Comparison of Popular DPI Tools for <b>Traffic</b> <b>Classification.</b>|$|E
50|$|Simple {{traffic shaping}} schemes shape all traffic uniformly by rate. More {{sophisticated}} shapers first classify traffic. <b>Traffic</b> <b>classification</b> categorises traffic (for example, based on port number or protocol). Different classes {{can then be}} shaped separately to achieve a desired effect.|$|E
5000|$|Defensive {{responses}} to denial-of-service attacks typically involve {{the use of}} a combination of attack detection, <b>traffic</b> <b>classification</b> and response tools, aiming to block traffic that they identify as illegitimate and allow traffic that they identify as legitimate. A list of prevention and response tools is provided below: ...|$|E
40|$|We aim at {{understanding}} if and how complex {{it is to}} obfuscate traffic features {{exploited by}} statistical <b>traffic</b> flow <b>classification</b> tools. We address packet length masking and define perfect masking as an optimization problem, aiming at minimizing overhead. An explicit efficient algorithm is given to compute the optimum masking sequence. Numerical results are provided, based on measured traffic traces. We find that fragmenting requires about the same overhead as padding does. © 2012 Springer-Verlag...|$|R
40|$|This study {{proposes a}} Deep Belief Network model to {{classify}} traffic flow states. The model {{is capable of}} processing massive, high-density, and noise-contaminated data sets generated from smartphone sensors. The statistical features of Vehicle acceleration, angular acceleration, and GPS speed data, recorded by smartphone software, are analyzed, and then used as input for <b>traffic</b> flow state <b>classification.</b> Data from a five-day experiment is used to train and test the proposed model. A total of 747, 856 sets of data are generated and used for both <b>traffic</b> flow states <b>classification</b> and sensitivity analysis of input variables. The result shows that the proposed Deep Belief Network model is superior to traditional machine learning methods in both classification performance and computational efficiency...|$|R
30|$|Port based traffic {{analysis}} can classify application layer protocols [2, 3] used port numbers {{to analyze the}} type and trend of traffic application. Wei Li et al. [4] made correlation analysis between metrics related to traffic and application types, and found that, correlation between server ports and application types is the strongest of all the traffic metrics, while that between client ports and application types is very weak, so the discovery of server’s port has great significance for improving the accuracy of <b>traffic</b> application <b>classification.</b>|$|R
50|$|<b>Traffic</b> <b>classification</b> is an {{automated}} process which categorises computer network traffic according to various parameters (for example, based on port number or protocol) {{into a number}} of traffic classes. Each resulting traffic class can be treated differently in order to differentiate the service implied for the user (data generator/ consumer).|$|E
50|$|<b>Traffic</b> <b>classification</b> {{is a major}} {{component}} of automated intrusion detection systems. They are used to identify patterns as well as indication of network resources for priority customers, or identify customer use of network resources that in some way contravenes the operator’s terms of service.Generally deployed Internet Protocol (IP) <b>traffic</b> <b>classification</b> techniques are based approximately on direct inspection of each packet’s contents at some point on the network. Source address, port and destination address are included in successive IP packet's with similar if not the same 5-tuple of protocol type. ort are considered to belong to a flow whose controlling application we wish to determine. Simple classification infers the controlling application’s identity by assuming that most applications consistently use well known TCP or UDP port numbers. Even though, many candidates are increasingly using unpredictable port numbers. As a result, more sophisticated classification techniques infer application type by looking for application-specific data within the TCP or User Datagram Protocol (UDP) payloads.|$|E
50|$|This {{category}} is generally {{limited to the}} delivery of spam and traffic created by worms, botnets, and other malicious attacks. In some networks, this definition can include such traffic as non-local VoIP (for example, Skype) or video streaming services to protect the market for the 'in-house' services of the same type. In these cases, <b>traffic</b> <b>classification</b> mechanisms identify this traffic, allowing the network operator to either block this traffic entirely, or severely hamper its operation.|$|E
30|$|In this paper, {{we discuss}} the {{advances}} made {{in the application of}} ML in networking. We focus on traffic engineering, performance optimization and network security. In traffic engineering, we discuss <b>traffic</b> prediction, <b>classification</b> and routing that are fundamental in providing differentiated and prioritized services. In performance optimization, we discuss application of ML techniques in the context of congestion control, QoS/QoE correlation, and resource and fault management. Undoubtedly, security is a cornerstone in networking and in this regard, we highlight existing efforts that use ML techniques for network security.|$|R
30|$|The QoS {{architecture}} in Diffserv depended on traffic marking that allows traffic to be prioritized through times of congestion to manage V 2 V or V 2 R for {{large numbers of}} source flows. This has resulted in high priority traffic being satisfied more than low priority <b>traffic.</b> The <b>classification</b> in the network was dividing traffic into three components, that is policy, edge router and core router, to provide good QoS [17, 18, 31]. This section provides a review of algorithms based on traffic markers, {{as well as a}} description of the marker algorithms and their analysed mechanisms.|$|R
30|$|In general, {{approaches}} for abnormality detection {{are based on}} a set of observations that define the regular behaviors in a scene. Afterwards, abnormalities are defined as behaviors that do not match with patterns previously learned as normal, i.e., behaviors that have not been observed before [6]. Accordingly, observations that deviate from the characterized normal patterns are classified as potential abnormalities. Abnormality detection has been successfully used in real applications such as identification of hazardous massive crowds [7, 8], recognition of group activities [9, 10], <b>traffic</b> event <b>classification</b> [3, 11 – 14], detection of anomalies in maritime trajectories [15, 16], among others.|$|R
50|$|Accurate network <b>traffic</b> <b>classification</b> is {{elementary}} {{to quite}} a few Internet activities, from security monitoring to accounting and from quality of service to providing operators with useful forecasts for long-term provisioning. Yet, classification schemes are extremely complex to operate accurately due to the shortage of available knowledge to the network. For example, the packet header related information is always insufficient to allow for an precise methodology. Consequently, the accuracy of any traditional method are between 50%-70%.|$|E
5000|$|The fixed header {{occupies}} the first 40 octets (320 bits) of the IPv6 packet. It contains {{the source and}} destination addresses, <b>traffic</b> <b>classification</b> options, a hop counter, {{and the type of}} the optional extension or payload which follows the header. This Next Header field tells the receiver how to interpret the data which follows the header. If the packet contains options, this field contains the option type of the next option. The [...] "Next Header" [...] field of the last option, points to the upper-layer protocol that is carried in the packet's payload.|$|E
50|$|The {{unit has}} a single-board {{computer}} running Linux. The computer interprets the supplied <b>traffic</b> <b>classification</b> table (Federal Highway Administration Scheme F, or user supplied) and composes the axle events {{caused by the}} parallel beam breaks into a classified vehicle. The classification data is stored in the unit and can optionally can be streamed in real-time via a serial or an Ethernet connection. The raw beam event information can also be saved to the unit for verification purposes. The data is output as plain text. Thus, it can be translated to many common file formats used in traffic data collection.|$|E
40|$|Abstract — In this paper, a {{new method}} for {{automatic}} <b>traffic</b> model <b>classification</b> is investigated. This method tries to classify the current measured traffic to a ”best-fit ” model {{selected from a}} model library in real time. In our initial simulation experiments, a model library has been constructed with two models representing short-range dependent and long-range dependent traffic, respec-tively. We use the measured Hurst parameter statistic {{to choose between the}} two traffic models. The accuracy of the method is evaluated under different circumstances with simulated traffic. Index Terms — Model classification, long-range dependence, Hurst parameter, wavelet-based estimato...|$|R
40|$|Abstract — Traffic sign {{recognition}} (TSR) is {{a research}} field that has seen much activity in the recent decade. This paper introduces the problem and presents 4 recent papers on traffic sign detection and 4 recent papers on <b>traffic</b> sign <b>classification.</b> It attempts to extract recent trends {{in the field and}} touch upon unexplored areas, especially the lack of research into integrating TSR with a driver-in-the-loop system and {{some of the problems that}} presents. TSR is an exciting field with great promises for integration in driver assistance systems and that particular area deserves to be explored further. I...|$|R
50|$|Traffic shaping is a {{specific}} technique and one of several which combined constitute Bandwidth management. Current common usage, particularly in discussion of domestic Internet service provision, frequently confuses traffic shaping with traffic management and <b>traffic</b> policing, with <b>classification</b> policies and in general with any measure deliberately taken by an ISP which is detrimental to some user's IP traffic performance.|$|R
50|$|<b>Traffic</b> <b>classification</b> {{describes}} {{the methods of}} classifying traffic by observing features passively in the traffic, and in line to particular classification goals. There might be some that only have a vulgar classification goal. For example, whether it is bulk transfer, peer to peer file sharing or transaction-orientated. Some others will set a finer-grained classification goal, for instance {{the exact number of}} application represented by the traffic. Traffic features included port number, application payload, temporal, packet size and the characteristic of the traffic. There are a vast range of methods to allocate Internet traffic including exact traffic, for instance port (computer networking) number, payload, heuristic or statistical machine learning.|$|E
50|$|DiffServ {{operates}} {{on the principle}} of <b>traffic</b> <b>classification,</b> where each data packet is placed into a limited number of traffic classes, rather than differentiating network traffic based on the requirements of an individual flow. Each router on the network is configured to differentiate traffic based on its class. Each traffic class can be managed differently, ensuring preferential treatment for higher-priority traffic on the network. The premise of Diffserv is that complicated functions such as packet classification and policing can be carried out {{at the edge of the}} network by edge routers who then mark the packet to receive a particular type of per-hop behavior. Core router functionality can then be kept simple. No classification and policing is required. Such routers simply apply PHB treatment to packets based on the marking. PHB treatment is achieved by core routers using a combination of scheduling policy and queue management policy.|$|E
3000|$|Step 2 Perform {{network traffic}} {{analysis}} by OSELM with network <b>traffic</b> <b>classification</b> dataset (NTCD). If the network <b>traffic</b> <b>classification</b> result {{is not a}} HTTPS, no action is required. If the network <b>traffic</b> <b>classification</b> result is a HTTPS, go to step 3.|$|E
40|$|Abstract — <b>Traffic</b> {{identification}} and <b>classification</b> are essential tasks performed by Internet Service Providers (ISPs) administrators. Deep Packet Inspection (DPI) is currently playing {{a key role}} in <b>traffic</b> {{identification and}} <b>classification</b> due to its increased expressive power. To allow fair comparison among different DPI techniques and system, workload generators should have the following characteristics: (i) synthetic packets with meaningful payloads; (ii) TCP and UDP traffic generation; (iii) configurable network traffic profile, and (iv) high-speed sending rate. Filling this niche of interest, this paper proposes a workload generator framework which inherits all of the above characteristics. Performance evaluation shows that our flexible workload generator system achieves very high sending rates over a 10 Gbps network, using a commodity Linux machine. Additionally, we have configured and tested our workload generator following a real application traffic profile. We then have analyzed its results within a DPI system, proving its accuracy and efficiency...|$|R
40|$|The semestral thesis {{deals with}} the {{analysis}} of the modern open-source NIDPS tools for monitoring and analyzing the network traffic. The work rates these instruments in terms of their network location and functions. Also refers about more detailed analysis of detecting and alerting mechanisms. Further analyzes the possibilities of detection of anomalies, especially in terms of statistical analysis and shows the basics of other approaches, such as approaches based on data mining and machine learning. The last section presents specific open-source tools, deals with comparison of their activities and the proposal allowing monitoring and <b>traffic</b> analysis, <b>classification,</b> detection of anomalies and (D) DoS attacks...|$|R
40|$|This {{paper was}} peer-reviewed by TRB and {{presented}} at the TRB 95 th Annual Meeting, Washington, D. C., January 2016. This paper examines the theory and application of a recently developed machine learning technique namely Relevance Vector Machines (RVMs) in the task of <b>traffic</b> conditions <b>classification.</b> <b>Traffic</b> conditions are labelled as dangerous (i. e. probably leading to a collision) and safe (i. e. a normal driving) based on 15 -minute measurements of average speed and volume. Two different RVM algorithms are trained with two real-world datasets and validated with one real-world dataset describing traffic conditions of a motorway and two A-class roads in the UK. The performance of these classifiers is compared to the popular and successfully applied technique of Support vector machines (SVMs). The main findings indicate that RVMs could successfully be employed in real-time <b>classification</b> of <b>traffic</b> conditions. They rely on a fewer number of decision vectors, their training time could be reduced {{to the level of}} seconds and their classification rates {{are similar to those of}} SVMs. However, RVM algorithms with a larger training dataset consisting of highly disaggregated traffic data, as well as the incorporation of other traffic or network variables so as to better describe traffic dynamics, may lead to higher classification accuracy than the one presented in this paper...|$|R
