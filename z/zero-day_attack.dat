22|129|Public
50|$|In June 2010, VirusBlokAda {{reported}} {{detection of}} <b>zero-day</b> <b>attack</b> malware called Stuxnet that exploited the vulnerability {{to install a}} rootkit that snooped Siemens' SCADA systems WinCC and PCS 7. According to Symantec {{it is the first}} worm designed to reprogram industrial systems and not only to spy on them.|$|E
5000|$|Worms {{spread by}} {{exploiting}} vulnerabilities in operating systems.Vendors with security problems supply regular security updates (see [...] "Patch Tuesday"), and {{if these are}} installed to a machine then the majority of worms are unable to spread to it. If a vulnerability is disclosed before the security patch released by the vendor, a <b>zero-day</b> <b>attack</b> is possible.|$|E
50|$|Nevertheless, cyber {{attacks and}} cyber attackers {{have become more}} {{advanced}} in their field using techniques such as Dynamic Trojan Horse Network (DTHN) Internet Worm, <b>Zero-Day</b> <b>Attack,</b> and Stealth Bot. As a result, the cybersecurity industry has had to improved the defence technologies to remove any vulnerability to cyber attacks using systems such as the Security of Information (SIM), Next-Generation Firewalls (NGFWs) and DDoS techniques.|$|E
5000|$|Zero-day {{protection}} {{is the ability}} to provide protection against zero-day exploits. Since <b>zero-day</b> <b>attacks</b> are generally unknown to the public, {{it is often difficult to}} defend against them. <b>Zero-day</b> <b>attacks</b> are often effective against [...] "secure" [...] networks and can remain undetected even after they are launched. Thus, users of so-called secure systems must also exercise common sense and practice safe computing habits.|$|R
50|$|Unlike {{antivirus}} software {{the use of}} transshipment defends against unknown <b>attacks,</b> and hence <b>zero-day</b> <b>attacks,</b> and does not require routine updates to signatures or Heuristics.|$|R
30|$|In any case, <b>zero-day</b> <b>attacks</b> {{can only}} be {{identified}} by the deviation they imply in the existing behaviour of the system. Their discovery is a significant use case for anomaly detection.|$|R
50|$|A {{security}} risk may {{be classified as}} a vulnerability. The use of vulnerability with the same meaning of risk can lead to confusion. The risk {{is tied to the}} potential of a significant loss. Then there are vulnerabilities without risk: for example when the affected asset has no value. A vulnerability with one or more known instances of working and fully implemented attacks is classified as an exploitable vulnerability — a vulnerability for which an exploit exists. The window of vulnerability is the time from when the security hole was introduced or manifested in deployed software, to when access was removed, a security fix was available/deployed, or the attacker was disabled—see <b>zero-day</b> <b>attack.</b>|$|E
5000|$|On 13 January 2010, Google Inc. {{announced}} that operators, from within China, had hacked into their Google China operation, stealing intellectual property and, in particular, accessing the email accounts {{of human rights}} activists. The attack was {{thought to have been}} part of a more widespread cyber attack on companies within China which has become known as Operation Aurora. Intruders were thought to have launched a <b>zero-day</b> <b>attack,</b> exploiting a weakness in the Microsoft Internet Explorer browser, the malware used being a modification of the trojan [...] "Hydraq". Concerned about the possibility of hackers taking advantage of this previously unknown weakness in Internet Explorer, the governments of Germany and, subsequently France, issued warnings not to use the browser.|$|E
30|$|From the {{experiments}} in next section, {{we will see}} SALADSPlus can provide good effectiveness with low performance overhead. In this section, we discuss another capability of SALADSPlus: it can enable the security officer to do two-level adversarial reasoning in real time. First, the security officer can determine whether a <b>zero-day</b> <b>attack</b> is DSMA or not. Second, if a <b>zero-day</b> <b>attack</b> is DSMA, the security officer can do program level reasoning to infer the target program of the DSMA. This two-level adversarial reasoning is elaborated as follows.|$|E
50|$|The group {{expelled}} the hacker WZT on 20 May 2006. Although {{the cause}} is unknown, the group ejected him soon after the <b>zero-day</b> <b>attacks</b> were publicly disclosed. WZT was a coding expert within the group.|$|R
50|$|<b>Attacks</b> {{employing}} <b>zero-day</b> exploits {{are often}} attempted by hackers before {{or on the}} day that notice of the vulnerability is released to the public; sometimes before the author is aware or has developed and made available the corrected code. <b>Zero-day</b> <b>attacks</b> are a severe threat.|$|R
50|$|In July 2016, Symantec {{introduced}} {{a solution to}} help carmarkers protect connected vehicles against <b>zero-day</b> <b>attacks.</b> The Symantec Anomaly Detection for Automotive is an IoT solution for manufacturers and uses machine learning to provide in-vehicle security analytics. Greg Clark assumed the position of CEO in August 2016.|$|R
30|$|Second Level Adversarial Reasoning If a <b>zero-day</b> <b>attack</b> is a DSMA, the {{security}} officer can further infer which program the DSMA is targeting. This adversarial reasoning capability {{is provided by}} the canary detection. The canary detection reports two messages when some canaries are polluted: (1) the type of polluted data structures; (2) the program name which is inserted into the DSSR programs. With the program name and data structure type, {{the security}} officer can quickly pinpoint the target program. This second level adversarial reasoning is only meaningful when SALADSPlus is effective; i.e., the <b>zero-day</b> <b>attack</b> does not succeed. For example, the attack (CVE- 2002 - 0656 2002) lasted several days against SALADSPlus but still failed 3. This effectiveness, which will be validated in “Evaluation” section, gives the security officer sufficient time to locate the target program of the <b>zero-day</b> <b>attack.</b> Note that the first level adversarial reasoning is important because the security officer can quickly rule out non-DSMAs and do second level adversarial reasoning.|$|E
40|$|In recent years, vendor {{liability}} for software security vulnerabilities {{has been the}} center of an important debate in the software community and a topic gaining government attention in legislative committees and hearings. The importance of this question surrounding vendor security liability is amplified when one considers the increasing emergence of “zero-day ” attacks where hackers take advantage of vulnerabilities before the software vendor has a chance to release protective patches. In this paper, we compare the effectiveness of three software liability policies: vendor {{liability for}} damages, vendor liability for patching costs, and government imposed security standards. We find that vendor liability for losses is not effective in improving social welfare in the short-run, while liability for patching costs can be effective if either patching costs are large and the likelihood of a <b>zero-day</b> <b>attack</b> is low, or patching costs are small and zero-day likelihood is high. In the long run, when the vendor can invest in reducing the likelihood of security vulnerabilities, loss liability is still ineffective when the <b>zero-day</b> <b>attack</b> probability is high but can increase both vendor investment in security and social welfare when <b>zero-day</b> <b>attack</b> likelihood is sufficiently low. When the <b>zero-day</b> <b>attack</b> probability is high, patch liability is ineffective if user patching costs are large, but partial patch liability can boost vendor investment and improve welfar...|$|E
30|$|First Level Adversarial Reasoning The {{basic idea}} of the first level {{adversarial}} reasoning is to compare a <b>zero-day</b> <b>attack</b> with some known attacks (including DSMAs and non-DSMAs) at runtime and infer whether the <b>zero-day</b> <b>attack</b> is DSMA or not. Note that the utility defined in “Cost-effectiveness utility” section {{can be used to}} quantify cost-effectiveness of our defense. Since our defense is only effective when defending against DSMAs (determined by the DSSR Binary), the aggregate utility values of DSMAs and non-DSMAs are very different. Therefore by comparing the aggregate utility of the <b>zero-day</b> <b>attack</b> with those of known attacks, the security officer can tell whether the <b>zero-day</b> <b>attack</b> is DSMA or not. The aggregate utility values of the known attacks are achieved in Matlab simulations. We simulate SALADSPlus and the known attacks in Matlab because the simulations are much faster than the real experiments in web servers. And the simulation results are similar to the real experiment results. This similarity is ensured by the following three aspects: (1) The Matlab simulations have the same features as the real-world vulnerable web servers in terms of data structure types and instances. It is difficult to simulate the whole servers in Matlab, but we simulate the data structures and the related manipulations in Matlab. (2) The same UCB-D algorithm is implemented in both the real-world web servers and the Matlab simulations. (3) The simulated attacks have the same features as known CVEs in terms of targets and attack frequencies.|$|E
50|$|This {{advanced}} {{system is}} based on the principles of artificial intelligence and Big Data in order to monitor, classify, and analyze all running processes. This assures the proactive detection of strange behaviors and advanced threats, from Cryptolocker to <b>zero-day</b> <b>attacks,</b> while providing features for response and remediation.|$|R
50|$|Damballa is an American {{computer}} security company focused on advanced cyber threats such as <b>zero-day</b> <b>attacks</b> and advanced persistent threats (APT). The company’s system uses massive data sets and machine learning to identify malicious activity based on network behavior, content analysis and threat intelligence. The system constantly “trains” on new data, which enables it to detect previously unknown threats.|$|R
40|$|This {{bachelor}} thesis {{deals with}} problematic of network attacks and their detection in network traffic. The {{aim is to}} propose such collection of metric, that will describe network traffic according to its behaviour, and will be capable of detection of <b>Zero-Day</b> <b>attacks</b> as well. Following part of this thesis is to implement a tool for metric extraction...|$|R
30|$|In recent years, cyber {{attack is}} a growing serious concern due to its {{increased}} sophistication and variations, such as denial-of-service (DoS) tactics and the <b>zero-day</b> <b>attack,</b> posing a great threat to government, military, and industrial networks. Conventional signature-based detection approaches may fail to address the increased variability of today’s cyber attacks. Developing novel anomaly detection techniques to better learn, adapt, and detect threats in diverse network environments becomes essential.|$|E
40|$|Current Internet {{environment}} {{is vulnerable to}} a range of different types of attacks, and furthermore, new types of attacks are being discovered on a daily basis. In this paper, we address the design of comprehensive intrusion detection for virtual-machine-based systems. We propose a novel security architecture using a virtual machine monitor-based intrusion detection system called Virtual machine Intrusion deteCTOR (VICTOR), which takes into account the specific characteristics of operating system and applications running in each virtual machine at a fine granular level to detect attacks. The components of our architecture are designed to deal with different types of malicious behaviour. The entity validation component is used for capturing information of the operating system and applications running in the virtual machines, secure logging and detection of attacks that are generated with spoofed source address. The intrusion detection engine component is used for the detection of known attacks and suspicious behaviour of the entities by monitoring the incoming and outgoing traffic of virtual machines. The dynamic analyser is used for detection and validation of hidden processes, detection of zero-day attacks and fine granular isolation of malicious process that is generating the attack traffic. After a <b>zero-day</b> <b>attack</b> is detected, interactive virtual machine technique is used to determine whether the <b>zero-day</b> <b>attack</b> exhibits polymorphic or metamorphic behaviour and develop attack signatures to deal with the attack. We have analysed o ur architecture with different types of attacks such as hidden processes and attacks such as Slammer. In this paper, we illustrate the operation of our system architecture by considering Slammer worm attack in detail. 13 page(s...|$|E
40|$|With {{the rapid}} growth of the Internet, there are an {{increasing}} number of computer threats and attacks. The prevalence of <b>zero-day</b> <b>attack</b> activities has given rise to the need to prevent these attack activities from spreading and damaging the computer system. As such, intrusion detection system (IDS) should satisfy complex requirements and must be durable, manageable and reliable. In this paper, we developed an anomaly-based detection model using a statistical method combined with a binary logistic regression approach. The model, Layer based Anomaly Detection (LbAD) is designed to detect remote to user (R 2 L) and user to root (U 2 R) attacks by statistically examining the degree of normal field values within three layer (data link, network, transport) of OSI Seven Layer. The results of the new method outperform the leading existing methods...|$|E
50|$|Monitoring system events {{according}} to a security monitoring strategy, an incident response plan and security validation and metrics are fundamental activities to assure that an optimal level of security is obtained.It is important to monitor the new vulnerabilities, apply procedural and technical security controls like regularly updating software, and evaluate other kinds of controls to deal with <b>zero-day</b> <b>attacks.</b>|$|R
30|$|An ever growing {{percentage}} of cyberattacks is explicitly targeted {{at a specific}} organisation in order to steal data, to perform industrial espionage or to execute sabotage or denial of service [1]. The most dangerous cyberattacks include <b>zero-day</b> <b>attacks</b> and complex attacks [2]. Although {{they are beginning to}} be better understood by the community, they remain difficult to track and to identify in the massive haystack of system logs and alerts. Artificial intelligence tools are thus required to find both unknown and complex attacks. Unknown attacks are known as <b>zero-day</b> <b>attacks.</b> They exploit previously unknown system flows. Around 4000 of them were exploited in 2015 and 2016, 160 of which concerned industrial control [1]. Complex attacks are known as multi-step attacks. The danger they pose often emerges from the consecutive execution of steps which taken individually are either innocuous or insufficient to be characterised as an aggression.|$|R
40|$|The author {{discusses}} a {{new perspective}} on the characteristics of a security architecture that is capable of not only reducing threats accordingly but also anticipating threats before they are manifested, including the capability to address <b>zero-day</b> <b>attacks.</b> Threats of various sorts can reduce the functionality, reliability, performance, availability, security and integrity of IT systems. These characteristics are considered critical enough that they are typically instantiated formally into service level agreements (SLAs). As such, it is reasonable to state that there is a desire to reduce threats at least to a degree whereby one can satisfy the SLAs. This article discusses {{a new perspective}} on the characteristics of a security architecture that is capable of not only reducing threats accordingly but also anticipating threats before they are manifested, including the capability to address <b>zero-day</b> <b>attacks.</b> The approach is to use adaptive security, which is based in part on complex adaptive systems...|$|R
40|$|Abstract—Malware is {{any type}} of {{malicious}} software that has the capability to enter into system without authorization of the users. Thus malware detection is the important issue in the computer security. Signature based detection is more popular method to detect the malware attack but main drawback of this method {{is that it is}} not used to detect the <b>Zero-day</b> <b>attack.</b> We need to update the database regularly and human experts are needed to create the new signature. The drawbacks of Signature based malware detection is minimized by using heuristic method. Heuristic method is used to detect zero-day attacks. There are various methods used to detect the malware like n-gram method, Finite state automaton method, Control Flow Graph method, N-gram analysis at byte level etc. These methods having their various advantages and disadvantages. This study enlightens the various methods used to detect malwares...|$|E
40|$|Enterprise {{systems are}} {{continuously}} on cyber-attacks as struggle for solutions are sort. Today, these organizations spend over $ 70 billion on IT security, but {{are unable to}} protect the organization since cyber criminals routinely discover exploits and breach those defenses with zero-day attacks that bypass traditional technologies. These attacks occur during the vulnerability window {{that exists in the}} time between when a loophole is first exploited and when software developers start to develop and publish a counter to that threat. Many organizations had been breached by the <b>zero-day</b> <b>attack</b> concept. This means that at least one attacker had bypassed all layers of organization defense-in depth architecture. Using data from our survey of 202 participants, this study analyses how attacks are changing the cyber platform and why traditional and legacy defenses are functioning below par and expectations...|$|E
40|$|Abstract — Security is an {{important}} aspect to achieve Smart Grid success in terms of commercial deployment. Particularly, availability gets the highest priority in Smart Grids. For end-point devices, such as smart meters or concentrators, this must be true since they must always be working. We present LiSTEETM Recovery, an architecture for a fault tolerant system for end-point devices to monitor {{the status of the}} operating system and to recover even if they stop working due to unexpected behavior or cyber attack including <b>zero-day</b> <b>attack.</b> LiSTEETM Recovery provides further functions to prevent illegitimate memory modification and to notify a head-end system once a security incident occurs. We demonstrate a full implementation of LiSTEETM Recovery on a TrustZone capable ARM based processor. Our experiment shows that the performance degradation is small enough to be ignored. Furthermore, we observed that the cost of production and maintenance can be minimized...|$|E
2500|$|In 2015, Kaspersky Labs {{noted that}} the Equation Group had used two of the same <b>zero-day</b> <b>attacks,</b> prior to their use in Stuxnet, and commented that: [...] "the similar type of usage of both {{exploits}} together in different computer worms, at around the same time, indicates that the Equation Group and the Stuxnet developers are either the same or working closely together".|$|R
30|$|The {{identification}} of unknown attacks faces two major challenges: first, {{the ability to}} detect behaviour anomalies, especially for identifying <b>zero-day</b> <b>attacks</b> and, secondly, the ability to track abnormal event sequences, so as to address APTs. Machine learning, as well as advanced statistics, represents methods of critical importance for the online detection of intrusions, on the one hand, and the offline, ‘post-mortem’ investigation of security issues, on the other.|$|R
50|$|Positive Hack Days (PHDays) is a {{computer}} security conference held every year in Moscow. The first conference was held in 2011. The conference addresses such topics as <b>zero-day</b> <b>attacks</b> and digital investigations, cryptography and cyberwarfare, {{the security of a}} person and a state in the cyberworld. Attendance fee is required. Free tickets are available for winners of special hacking contests and for students who participated in the Positive Education program.|$|R
40|$|With growing {{sophistication of}} {{computer}} worms, {{it is very}} important to detect and prevent the worms quickly and accurately at their early phase of infection. Traditional signature based IDS, though effective for known attacks but failed to handle the <b>zero-day</b> <b>attack</b> promptly. Recent works on polymorphic worms does not guarantee accurate signature in presence of noise in suspicious flow samples. In this paper we propose PolyS, an improved version of Hamsa, a network based automated signature generation scheme to thwart zeroday polymorphic worms. We contribute a novel architecture that reduces the noise in suspicious traffic pool, thus enhancing the accuracy of worm’s signature. Also we propose a signature generation algorithm for successfully matching polymorphic worm payload with higher speed and memory efficiency. Analysis shows that our system is fast, accurate, attackresilient and capable of generating quality signature with low false positive and false negative...|$|E
40|$|Most {{advanced}} persistent threat attacks target web users through {{malicious code}} within landing (exploit) or distribution sites. There is an urgent need to block the affected websites. Attacks on biomedical information systems are no exception to this issue. In this paper, we present a method for locating malicious websites that attempt to attack biomedical information systems. Our approach uses malicious code crawling to rearrange websites {{in the order of}} their risk index by analyzing the centrality between malware sites and proactively eliminates the root of these sites by finding the core-hub node, thereby reducing unnecessary security policies. In particular, we dynamically estimate the risk index of the affected websites by analyzing various centrality measures and converting them into a single quantified vector. On average, the proactive elimination of core malicious websites results in an average improvement in <b>zero-day</b> <b>attack</b> detection of more than 20 %...|$|E
40|$|In this paper, {{we present}} ShieldGen, {{a system for}} {{automatically}} generating a data patch or a vulnerability signature for an unknown vulnerability, given a <b>zero-day</b> <b>attack</b> instance. The key novelty in our work is that we leverage knowledge of the data format to generate new potential attack instances, which we call probes, and use a zero-day detector as an oracle to determine if an instance can still exploit the vulnerability; the feedback of the oracle guides our search for the vulnerability signature. We have implemented a ShieldGen prototype and experimented with three known vulnerabilities. The generated signatures have no false positives and a low rate of false negatives due to imperfect data format specifications and the sampling technique used in our probe generation. Overall, they are significantly more precise than the signatures generated by existing schemes. We have also conducted a detailed study of 25 vulnerabilities for which Microsoft has issued security bulletins between 2003 and 2006. We estimate that ShieldGen can produce high quality signatures for {{a large portion of}} those vulnerabilities and that the signatures are superior to the signatures generated by existing schemes. 1...|$|E
40|$|Although {{there are}} {{different}} techniques proposed for intrusion detection in the literature, most of them consider standalone misuse or anomaly intrusion detection systems. However, by taking the advantages of both systems a better hybrid intrusion detection system can be developed. In this paper, we present an effective hybrid layered intrusion detection system for detecting both previously known and <b>zero-day</b> <b>attacks.</b> In particular, a two layer system that combines misuse and anomaly intrusion detection systems is proposed. The first layer consists of misuse detector which can detect and block known attacks and the second layer comprises of anomaly detector which can efficiently detect and block previously unknown attacks. The misuse detector is modeled based on random forests classifier and the anomaly detector is built using bagging technique with ensemble of one-class support vector machine classifiers. Data pre-processing is done using automatic feature selection and data normalization. Experimental {{results show that the}} proposed intrusion detection system outperforms other well-known intrusion detection systems in detecting both previously known and <b>zero-day</b> <b>attacks...</b>|$|R
40|$|The {{problem of}} <b>zero-day</b> <b>attacks</b> in web {{applications}} stands {{as one of}} the primary challenges against the development of the Internet technology. Solutions so far are not adequate at preventing attacks. The philosophical reasons behind this continuous failure are due to the reliance on out-dated methodologies that offer only signatures-based and anomaly detection solutions. In the last decade, a promising direction in security research utilises biologically inspired computing in which Artificial Immune Systems (AISs) were progressively investigated. Several AIS algorithms and frameworks were introduced in order to simulate the extraordinary capability of the human immune system in eliminating common and emerging pathogenic attacks. However, AISs have not yet provided an ultimate solution to the <b>zero-day</b> <b>attacks</b> problem in web applications. This thesis explores the state-of-the-art in the subject area and shows the limitations and weaknesses of the traditional security solutions as well as the current state of AIS application in security. A novel methodology to tackle the <b>zero-day</b> <b>attacks</b> in web applications is proposed in this thesis and referred to as the Damage Theory. The Damage Theory is derived from a deep understanding of the philosophy of web security as well as the philosophy that inspires the models of the human immune system. Specifically, two biologically inspired computing paradigms: artificial neural networks and artificial immune systems are adopted. The proposed solution is called the Neural Virtual Immune System (NVIS), and it consists of two layers. The first layer mimics the human innate immune system where artificial neural networks handle previously seen attacks. The second layer mimics the human adaptive immune system where data virtualisation and swarm intelligence handle non-previously seen <b>attacks</b> (<b>zero-day).</b> The implementation of NVIS introduces two novel algorithms; namely the Damage Theory Algorithm (DTA) and the Virtual Swarm Tissue Algorithm (VSTA). Both DTA and VSTA algorithms were experimentally tested on case studies where they proved to be effective at preventing SQL injection attacks. iii. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|R
50|$|Most {{security}} {{monitoring systems}} utilize a signature-based approach to detect threats. They generally monitor packets {{on the network}} and look for patterns in the packets which match their database of signatures representing pre-identified known security threats. NBAD-based systems are particularly helpful in detecting security threat vectors in 2 instances where signature-based systems cannot (i) new <b>zero-day</b> <b>attacks</b> (ii) when the threat traffic is encrypted such as the command and control channel for certain Botnets.|$|R
