3|2|Public
500|$|White {{markings}} {{on the field}} identify {{the distance from the}} end <b>zone.</b> <b>Inbound</b> lines, or hash marks, are short parallel lines that mark off [...] increments. Yard lines, which can run the width of the field, are marked every [...] A one yard wide is placed {{at each end of the}} field; this line is marked at the center of the two-yard line in professional play and at the three-yard line in college play. Numerals that display the distance from the closest goal line in multiples of ten are placed on both sides of the field every ten yards.|$|E
5000|$|White {{markings}} {{on the field}} identify {{the distance from the}} end <b>zone.</b> <b>Inbound</b> lines, or hash marks, are short parallel lines that mark off 1 yd increments. Usually, every 5 yd they run the width of the field. A one yard wide is placed {{at each end of the}} field; this line is marked at the center of the two-yard line in professional play and at the three-yard line in college play. Numerals that display the distance from the closest goal line in multiples of ten are placed on both sides of the field every ten yards. [...] Lines marked along the ends and sides of the field are known respectively as the end lines and sidelines, and goal lines.|$|E
40|$|A rapid {{reconfiguration}} of {{the dusk}} side magnetosphere was observed near the magnetic equator by particle and field experiments aboard Explorer 45 at 1715 UT on June 17, 1972. Following {{the onset of}} an 800 -gamma negative bay in the auroral <b>zone,</b> Explorer 45, <b>inbound</b> at 1700 MLT and L about 5, observed a sharp dropout of outer zone electrons. Simultaneously, the plasma density dropped from a level typical of the plasmasphere to one typical of the ion trough, and plasma sheet proton fluxes increased, producing a 100 -gamma depression in B, in a shift to a taillike configuration. Outer zone electrons with pitch angles near 45 deg returned with delay times consistent with injection near midnight {{at the time of}} dropout and eastward drift to the dusk meridian. Approximately 45 min after the reconfiguration, the satellite reentered the plasmasphere, and the electron fluxes returned to previous levels. In the next orbit, approximately 6 hours later, a region of isolated plasma was detected near apogee at 1400 MLT. There is therefore circumstantial evidence that the type of magnetospheric reconfiguration observed here is responsible for the detachment of regions of cold plasma from the plasmasphere...|$|R
40|$| The key sharing {{protocol}} for sharing zone related cryptographic information among the intermediate nodes {{is the other}} {{important component of the}} DML-IPSec protocol. This component is responsible for dynamically enabling intermediate nodes to access zonal information as required for performing specific services relating to quality or security. Whenever a DML-IPSec datagram traverses through an intermediate node, that requires access to some of the type I <b>zones,</b> the <b>inbound</b> security database is searched for cryptographic parameters. If no entry is present in the database, the key sharing protocol is invoked. The very first step in this protocol is a header inaccessible message from the intermediate node to the source of the DML-IPSec datagram. The intermediate node also mentions the protocol headers that it requires to access in the body portion of this message. This first phase of the protocol, called the Zone reorganization phase, is responsible for deciding the zone mapping to provide access to intermediate nodes. If the current zone map can not serve the header request, the DML-IPSec endpoint reorganizes the existing zone map in this phase. The next phase of the protocol, called the Authentication Phase is responsible for verifying the identity of the intermediate node to the source of DML-IPSec session. Upon successful authentication, the third phase, called the Shared secret establishment phase commences. This phase is responsible {{for the establishment of a}} temporary shared secret between the source and intermediate nodes. This shared secret is to be used as key for encrypting the actual message transfer of the DML-IPSec security parameters at the next phase of the protocol. The final phase of the protocol, called the Security parameter sharing phase, is solely responsible for actual transfer of the security parameters from the source to the intermediate nodes. This phase is also responsible for updation of security and policy databases of the intermediate nodes. The successful execution of the four phases of the key sharing protocol enables the DML-IPSec protocol to dynamically modify the zone map for providing access to some header portions for intermediate nodes and also to share the necessary cryptographic parameters required for accessing relevant type I zones without disturbing an existing DML-IPSec communication. We have implemented the DML-IPSec for ESP protocol according to the definition of zones along with the key sharing algorithm. RHEL version 4 and Linux kernel version 2. 6. 23. 14 was used for the implementation. We implemented the multi-layer IPSec functionalities inside the native Linux implementation of IPSec protocol. The SA structure was updated to hold necessary SA information for multiple zones instead of single SA of the normal IPSec. The zone mapping for different zones was implemented along with the kernel implementation of SA. The inbound and outbound processing modules of the IPSec endpoints were re-implemented to incorporate multi-layer IPSec capability. We also implemented necessary modules for providing partial IPSec processing capabilities at the intermediate nodes. The key sharing protocol consists of some user space utilities and corresponding kernel space components. We use ICMP {{protocol for}} the communications required for the execution of the protocol. At the kernel level, pseudo character device driver was implemented to update the kernel space data structures and necessary modifications were made to relevant kernel space functions. User space utilities and corresponding kernel space interface were provided for updating the security databases. As DML-IPSec ESP uses same Security Policy mechanism as IPSec ESP, existing utilities (viz. setkey) are used for the updation of security policy. However, the configuration of the SA is significantly different as it depends on the DML-IPSec zones. The DML-IPSec ESP implementation uses the existing utilities (setkey and racoon) for configuration of the sole type II zone. The type I zones are configured using the DML-IPSec application. The key sharing protocol also uses this application to reorganize the zone mapping and zone-wise cryptographic parameters. The above feature enables one to use default IPSec mechanism for the configuration of the sole type II zone. For experimental validation of DML-IPSec, we used the testbed as shown in the above figure. An ESP tunnel is configured between the two gateways GW 1 and GW 2. IN acts as an intermediate node and is installed with several intermediate applications. Clients C 11 and C 21 are connected to GW 1 and GW 2 respectively. We carried out detailed experiments for validating our solution w. r. t firewalling service. We used stateful packet filtering using iptables along with string match extension at IN. First, we configured the firewall to allow only FTP communication (using port information of TCP header and IP addresses of Inner IP header) between C 11 and C 21. In the second experiment, we configured the firewall to allow only Web connection between C 11 and C 21 using the Web address of C 11 (using HTTP header, port information of TCP header and IP addresses of Inner IP header). In both experiments, we initiated the FTP and WEB sessions before the execution of the key sharing protocol. The session could not be established as the access to upper layer headers was denied. After the execution of the key sharing protocol, the sessions could be established, showing the availability of protocol headers to the iptables firewall at IN following the successful key sharing. We use record route option of ping program to validate the claim of handling datagrams with variable header lengths. This option of ping program records the IP addresses of all the nodes traversed during a round trip path in the IP OPTION field. As we used ESP in tunnel mode between GW 1 and GW 2, the IP addresses would be recorded inside the encrypted Inner IP header. We executed ping between C 11 and C 21 and observed the record route output. Before the execution of the key sharing protocol, the IP addresses of IN were absent in the record route output. After the successful execution of key sharing protocol, the IP addresses for IN were present at the record route output. The DML-IPSec protocol introduces some processing overhead and also increases the datagram size as compared to IPSec and ML-IPSec. It increases the datagram size compared to the standard IPSec. However, this increase in IP datagram size is present in the case of ML-IPSec as well. The increase in IP datagram length depends on the number of zones. As the number of zone increases this overhead also increases. We obtain experimental results about the processing delay introduced by DML-IPSec processing. For this purpose, we executed ping program from C 11 to C 21 in the test bed setup for the following cases: 1. ML-IPSec with one type I and one type II zone and 2. DML-IPSec with one type I and one type II zone. We observe around 10 % increase in RTT in DML-IPSec with two dynamic zones over that of ML-IPSec with two static zones. This overhead is due to on-the-fly derivation of the zone length and related processing. The above experiment analyzes the processing delay at the endpoints without intermediate processing. We also analyzed the effect of intermediate processing due to dynamic zones of DML-IPSec. We used iptables firewall in the above mentioned experiment. The RTT value for DML-IPSec with dynamic zones increases by less than 10 % over that of ML-IPSec with static zones. To summarize our work, we have proposed an extension to the multilayer IPSec protocol, called Dynamic Multilayer IPSec (DML-IPSec). It is capable of dynamic modification of zones and sharing of cryptographic parameters between endpoints and intermediate nodes using a key sharing protocol. The DML-IPSec also accommodates datagrams with variable header lengths. The above mentioned features enable any intermediate node to dynamically access required header portions of any DML-IPSec protected datagrams. Consequently they make the DML-IPSec suited for providing IPSec over mobile and distributed networks. We also provide complete implementation of ESP protocol and provide experimental validation of our work. We find that our work provides the dynamic support for QoS and security services without any significant extra overhead compared to that of ML-IPSec. The thesis begins with an introduction to communication security requirements in TCP/IP networks. Chapter 2 provides an overview of communication security protocols at different layers. It also describes the details of IPSec protocol suite. Chapter 3 provides a study on the interoperability issues between IPSec and intermediate devices and discusses about different solutions. Our proposed extension to the ML-IPSec protocol, called Dynamic ML-IPSec(DML-IPSec) is presented in Chapter 4. The design and implementation details of DML-IPSec in Linux environment is presented in Chapter 5. It also provides experimental validation of the protocol. In Chapter 6, we summarize the research work, highlight the contributions of the work and discuss the directions for further research...|$|R

