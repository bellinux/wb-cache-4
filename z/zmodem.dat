58|1|Public
50|$|The {{most notable}} <b>ZMODEM</b> {{implementations}} were from Chuck Forsberg's Omen Technology, Inc. These included DSZ (DOS Send <b>ZMODEM),</b> GSZ (Graphical Send <b>ZMODEM),</b> and the ubiquitous (l)rzsz for Unix variants.|$|E
50|$|Zmax is {{designed}} to replace <b>Zmodem.</b> It uses 32 bit CRC's on file data blocks, the same as <b>Zmodem,</b> and 32 bit CRC's on its information blocks where <b>Zmodem</b> uses 16 bit.|$|E
50|$|A {{number of}} {{modified}} versions of <b>ZMODEM</b> appeared. ZedZap was {{a variant of}} <b>ZMODEM</b> with 8 kbyte blocks for better performance on high-speed modems. LeechZmodem was a mischievous <b>ZMODEM</b> variant (among similar XMODEM and YMODEM derivatives) that cheated BBS download quotas. A backwards compatible extension of <b>ZMODEM</b> with 32 kbyte and 64 kbyte block lengths was created by ADONTEC in 2002 and 2007 to increase performance on high-speed error free connections like ISDN or TCP/IP networks.|$|E
50|$|<b>ZMODEM's</b> {{performance}} was so improved over previous common protocols that it generally replaced even special protocols such as YMODEM-g, which included no error correction {{at all and}} instead relied on error-free links maintained by the modems. Although YMODEM-g was noticeably faster, the lack of other features such as restartable transfers made it less appealing.|$|R
5000|$|Some of the <b>ZMODEM</b> packets (e.g. ZACK, ZRPOS) embed a byte-offset {{within the}} {{transferred}} file as a 32-bit unsigned integer. This design limits {{the feasibility of}} <b>ZMODEM</b> to only reliably transfer files that are under 4GB in size.|$|E
50|$|The widely adopted <b>ZMODEM</b> used {{a sliding}} window protocol. Rather than wait for {{positive}} acknowledgment after each block is sent, it sent blocks {{in rapid succession}} and resent unacknowledged blocks later. By avoiding delays due to latency, the bandwidth usable for transmission more closely approached the bandwidth of the underlying link. <b>ZMODEM</b> could also resume interrupted transfers without retransmitting the already-received blocks. In addition to developing the protocol, Forsberg developed software for sending and receiving files using <b>ZMODEM.</b>|$|E
5000|$|<b>ZMODEM</b> is a file {{transfer}} protocol developed by Chuck Forsberg in 1986, in a project funded by Telenet {{in order to improve}} {{file transfer}}s on their X.25 network. In addition to dramatically improved performance compared to older protocols, <b>ZMODEM</b> also offered restartable transfers, auto-start by the sender, an expanded 32-bit CRC, and control character quoting, allowing it to be used on networks that might [...] "eat" [...] control characters. <b>ZMODEM</b> became extremely popular on bulletin board systems (BBS) in the early 1990s, displacing earlier protocols such as XMODEM and YMODEM.|$|E
50|$|Leech-modem was {{designed}} by Sam Brown. Leech <b>ZMODEM</b> was suggested by Sam Brown but written by a long lost friend in Atlanta, GA. Leech <b>ZMODEM</b> was a LeechModem variant that was compatible with the faster <b>ZMODEM</b> streaming file-transfer protocol. Subsequent versions of Leech <b>ZMODEM</b> were authored by Sam Brown. LeechModem was used successfully for 2-3 years by {{a small group of}} people centered in the 408 area code and 203 area code. It was not until the LeechModem software was leaked that it was discovered and counter-measures were built into BBS software. Emulex/2 was the first BBS software to support Anti-LeechModem technology. This was because Sam Brown wrote Emulex/2 BBS software as well. A common method was rounding the file size to the nearest kilobyte, causing the user to be unaware of the exact file size, rendering Leechmodem unusable.|$|E
5000|$|File {{transfers}} utilizing <b>Zmodem,</b> Xmodem, Ymodem, SFTP, {{and also}} via Xftp.|$|E
5000|$|Dial-up modems {{null modem}} links used XMODEM, YMODEM, <b>ZMODEM</b> and similar ...|$|E
5000|$|File {{transfers}} via TFTP and FTP (get and put), HTML (wget), and <b>Zmodem</b> (sz and rz) ...|$|E
5000|$|... {{support for}} up to 18 {{additional}} [...] "external" [...] file-transfer protocols, such as <b>Zmodem</b> and HS/Link; ...|$|E
50|$|Pre-acknowledge {{was also}} {{possible}} for YMODEM. It was made obsolete by variants such as YMODEM-g or <b>ZMODEM.</b>|$|E
50|$|Zmax {{also has}} a lot less CPU {{overhead}} than <b>Zmodem,</b> so slower computers can drive highspeed modems faster. Zmax does not encode each byte of data like <b>Zmodem</b> does. This reduces the amount of CPU overhead and simplifies the code quite a bit. Zmax also treats all files as binary 8 bit files and will require word length to be set to 8, {{which is the most}} common setting.|$|E
50|$|Compared {{to other}} {{contemporary}} protocols, PTP is slower than YMODEM and <b>ZMODEM</b> but {{faster and more}} reliable than XMODEM.|$|E
50|$|If {{the packet}} size {{is limited to}} 256 bytes, the {{efficiency}} is 98.1%, which is still better than original <b>Zmodem.</b>|$|E
5000|$|The file {{transfer}} protocols ZModem/CRC32, <b>ZModem,</b> Telink, SEAlink Overdrive, SEAlink, and XModem/CRC with no size limit (apart from DOS limits).|$|E
50|$|ZTerm {{supported}} one of {{the widest}} variety of file transfer protocols available on the Mac, including a full implementation of <b>ZModem,</b> YModem, YModem-G, {{almost all of the}} common varieties of XModem with different packet sizes and error correction methods, and even the rare but useful B protocol (CIS-B) for use on Compuserve. ZTerm also supported auto-starting transfers from <b>ZModem</b> and CIS-B, where commands from the host automatically triggered transfers from the client.|$|E
50|$|Historically, Fidonet {{traffic was}} {{transferred}} mainly over serial (RS-232) modem connections which {{might not have}} an error correction layer. These dial-up-oriented protocols for transferring Fidonet traffic like EMSI or <b>Zmodem</b> had to implement error-recovery. When the members of Fidonet started to use TCP/IP to transfer Fidonet traffic, this error-recovery overhead became unnecessary. Assuming that the connection is reliable {{makes it possible to}} eliminate error-checking and unnecessary synchronization steps, achieving both ease of implementation and improved performance. The major advantage of binkp vs EMSI and <b>Zmodem</b> is achieved over connections with large delays and low bandwidth.|$|E
50|$|FrontDoor ran under DOS and OS/2 as well {{as under}} most DOS-based {{multitasking}} environment (like Windows). File transfer protocols supported by FrontDoor were <b>Zmodem,</b> Zmodem/CRC-32, Telink, SEAlink, SEAlink Overdrive, and Xmodem/CRC.|$|E
50|$|Unlike <b>Zmodem</b> {{which sets}} an upper limit of 1024 bytes on block sizes, Zmax has an upper limit of over 32K. Because of this, Zmax {{may be used}} as a mailer {{protocol}} without any modifications.|$|E
50|$|A Network FOSSIL redirects such {{software}} to a TCP/IP address {{rather than to}} a serial modem.NetFoss is faster than other FOSSIL drivers, due to being written in 32-bit assembly language.It allows <b>Zmodem</b> transfers at up to 280,000 CPS.|$|E
50|$|File {{transfer}} protocols usually {{operate on}} top of a lower-level protocol in a protocol stack. For example, the HTTP protocol operates at the topmost application layer of the TCP/IP stack, whereas XMODEM, YMODEM, and <b>ZMODEM</b> typically operate across RS-232 serial connections.|$|E
5000|$|... "ZMODEM Pack-7 encoding" [...] encodes {{groups of}} 4 octets into groups of 5 {{printable}} ASCII characters, similar to Ascii85 (or perhaps exactly the same?). When <b>ZMODEM</b> programs send pre-compressed 8-bit data files over 7-bit data channels, it uses [...] "ZMODEM Pack-7 encoding".|$|E
5000|$|Supported {{connectivity}} {{options are}} Telnet, rlogin, SSH, [...] "Raw" [...] sockets, standard modem connections and direct serial connections (using parts of SEXPOTS), and a pty interface on *nix. File transfer options include the <b>ZMODEM,</b> XMODEM and YMODEM transfer protocols (using parts of SEXYZ.) ...|$|E
50|$|Some {{protocols}} send {{a single}} acknowledgement per packet of information.Other protocols such as TCP and <b>ZMODEM</b> generally allow many packets to be transmitted before acknowledging any of them, which {{is necessary to}} fill high bandwidth-delay product links {{with a large number}} of bytes in flight.|$|E
5000|$|... advent, ar, arc, at, cal, cat, chess (gnu), cmp, comm, compress, conquest, cron, dd, diff, ed, eroff, grep, head, indent, make, MicroEMACS, more, nroff, roff, sc, sed, sort, split, STEVIE, strings, sum, tail, tar, tee, ularn, uniq, vi, wanderer, wc, xmodem, ymodem, <b>zmodem,</b> zoo ...|$|E
5000|$|Switching from Networks II to ASCII Express Professional without {{disconnecting}} the user. This allowed Networks II to indirectly support XMODEM, Ward Christensen protocol, <b>ZMODEM,</b> {{and other}} advanced file transfer protocols. The {{only problem with}} this hack is that ASCII Express Pro cannot re-connect to Networks II.|$|E
50|$|Supported {{terminal}} emulation modes included ASCII, Avatar, ANSI, RIP, VT102, and others. A number of file transfer protocols like <b>Zmodem</b> were {{built into the}} application, along with support for external protocols like HS/Link and BiModem. The built-in support for advanced file transfer protocols made Terminate very popular at the time.|$|E
5000|$|Serial Communications Extender - Allows {{communication}} with standard serial ports and devices {{attached to them}} (such as modems, lab equipment, other computers, serial terminals, serial printers and X-10 home controllers). Built in modem support to communicate with most standard modems, including support for a few file transfer methods such as <b>Zmodem.</b>|$|E
5000|$|... "We sent game builds down to SSI using a {{state of}} the art 9600 baud modem and <b>Zmodem.</b> It took about 3 hours to send down 2 megs of updates, and {{involved}} calling voice first, arranging for who would auto-answer (SSI so they could pay the phone bill!), and crossing your fingers." ...|$|E
50|$|Zmax should (depending on equipment, phone lines, implementation, etc.) allow about 97.5 percent {{efficiency}} at 2400 baud on a 30K file {{compared to}} Zmodem's 95 percent. Unlike <b>Zmodem,</b> Zmax reaches full speed on considerably smaller files. In fact, due to less overhead associated with small files, it achieves a better efficiency rating.|$|E
50|$|Chuck Forsberg (May 6, 1944 - September 24, 2015) {{developed}} two {{data transmission}} protocols popular for uploading and downloading files from dial-up bulletin board {{systems in the}} 1990s. He received a Dvorak Award for Excellence in Telecommunications in 1992 for developing <b>ZMODEM.</b> He was also the project engineer on the Tektronix 4010-series graphics terminals.|$|E
50|$|Minicom is a text-based modem {{control and}} {{terminal}} emulation program for Unix-like operating systems, originally written by Miquel van Smoorenburg, and {{modeled after the}} popular MS-DOS program Telix. Minicom includes a dialing directory, ANSI and VT100 emulation, an (external) scripting language, and other features. Minicom is a menu-driven communications program. It also has an auto <b>ZMODEM</b> download.|$|E
50|$|The DOS {{version was}} {{shareware}} and enjoyed great {{popularity in the}} early 1990s. Its strengths included a fast built-in version of the <b>Zmodem</b> file transfer protocol, rather than needing a separate program, and a powerful scripting programming language similar to C, 'SALT' (Script Application Language for Telix), {{as well as a}} simpler scripting language called 'SIMPLE' which was suitable for most scripting tasks.|$|E
50|$|In more current times, the {{developers}} of Synchronet {{have created a}} modern X/Y/ZMODEM implementation named SEXYZ, loosely based on the zmtx/zmrx package, which runs natively on Windows and Unix variants, supports long filenames and faster, more reliable data transfers. The <b>ZMODEM</b> implementation from SEXYZ has also been incorporated into the SyncTERM project. Synchronet, SEXYZ, and SyncTERM are all open-source, cross-platform, BBS-centric projects.|$|E
