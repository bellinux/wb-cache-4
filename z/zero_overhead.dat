50|83|Public
5000|$|Intel {{describes}} this as [...] "a flexible, programmable architecture that supports shader-based technology, 2D, 3D and advanced 3D graphics, high-definition video decode, and image processing. Features include screen tiling, internal true color processing, <b>zero</b> <b>overhead</b> anti-aliasing, programmable shader 3D accelerator, and 32-bit floating-point operations." ...|$|E
50|$|Round-trip times, roughly {{defined by}} the speed of light, are bounded, {{and as a result}} the only way to {{decrease}} connection latency for an efficiently routed connection is to make fewer round-trips. Much of the work on QUIC is concentrated on reducing the number of round trips required when establishing a new connection, including the handshake step, encryption setup, and initial data requests. QUIC clients would, for example, include the session negotiation information in the initial packet. This compression is enhanced by QUIC servers, which publish a static configuration record that is concisely referred to. The client also stores a synchronization cookie it received from the server, enabling subsequent connections to incur <b>zero</b> <b>overhead</b> latency (in the best case).|$|E
50|$|Total {{facility}} power {{consists of}} power used by IT equipment plus any overhead power consumed by {{anything that is}} not considered a computing or data communication device (i.e. cooling, lighting, etc.). An ideal PUE is 1.0 for the hypothetical situation of <b>zero</b> <b>overhead</b> power. The average data center in the US has a PUE of 2.0, meaning that the facility uses two watts of total power (overhead + IT equipment) for every watt delivered to IT equipment. State-of-the-art data center energy efficiency {{is estimated to be}} roughly 1.2. Some large data center operators like Microsoft and Yahoo! have published projections of PUE for facilities in development; Google publishes quarterly actual efficiency performance from data centers in operation.|$|E
40|$|We propose <b>ZEro</b> Retransmission <b>Overhead</b> (<b>ZERO),</b> a novel {{retransmission}} scheme which virtually {{removes the}} overhead by the retransmission. In our scheme, when a sender retransmits a packet, it piggybacks a new packet. At the receiver side, once the retransmitted packet is correctly received, the receiver {{can use it}} for the decoding of the piggybacked packet. Our scheme is essentially a physical layer network coding scheme coupled with modulation. Simulation result shows that our scheme significantly outperforms the previous approaches...|$|R
30|$|Although PPM {{has several}} good {{advantages}} such as <b>zero</b> bandwidth <b>overhead</b> (i.e., all marking information {{stored in the}} packet IP header), PPM has the following serious weaknesses {{in the face of}} DDoS attacks.|$|R
5000|$|Java OpenGL Sample Pack, porting of g-truc OpenGL Sample Pack. The over 230 samples {{illustrate}} {{almost all}} OpenGL features ranging from ES 2.0 {{up to the}} last GL extensions, same of them usually also called AZDO (Almost <b>Zero</b> Driver <b>Overhead).</b>|$|R
5000|$|The {{application}} program proceeded to execute normal machine code instructions {{right up to}} its first macro level API call, thus adding <b>zero</b> <b>overhead</b> to the program until that point. As soon as the API call left the {{application program}}, Command-CICS code would gain control and replace the original linkage with its own, equivalent, Command-level call.In original earlier command level CICS versions (that supported both Macro and Command level programs), the CICS [...] "Exec Interface Program" [...] (DFHEIP) converted the Command level call to an actual macro level call. This would add a very small additional overhead only during CICS calls. Later versions of CICS, however, executed the CICS API directly, imposing no additional [...] "backward compatibility" [...] overhead.|$|E
30|$|ZDB optimizes {{the index}} for auto-incremental integer keys, and uses array to store this index for {{minimize}} memory usage which has <b>zero</b> <b>overhead</b> for keys. ZDB flat index is {{an array of}} entry positions. File mapping is used to access ZDB flat index.|$|E
40|$|We {{present the}} first (to {{the best of}} our knowledge) {{experimental}} demonstration of a 56 Gb/s multi-band carrierless amplitude and phase modulation (CAP) signal transmission over an 80 -km single-mode fiber link with <b>zero</b> <b>overhead</b> pre-FEC signal recovery and enhanced timing jitter tolerance for optical data center interconnects...|$|E
5000|$|A set {{of recent}} OpenGL 4.4 features, coupled with bindless {{texturing}} as an extension, can also substantially reduce driver overhead. This approach, termed by the Khronos Group as [...] "AZDO" [...] (Approaching <b>Zero</b> Driver <b>Overhead)</b> {{has been shown}} to achieve substantial performance improvements, approaching those stated for Mantle. Nvidia has extended OpenGL with a number of features that further reduce driver overhead.|$|R
40|$|FPGAs, {{because of}} their re-programmability, are {{becoming}} very popular for creating and exchanging VLSI intellectual properties (IPs) in the reuse-based design paradigm. Existing watermarking and fingerprinting techniques successfully embed identification information into FPGA designs to deter IP infringement. However, such methods incur timing and/or resource overhead, unpredictable at times, which causes performance degradation. In this paper, we propose a new FPGA watermarking technique that guarantees <b>zero</b> design <b>overhead.</b> Our approach consists of two phases. First we design as usual to obtain the best, possible, quality IP. Then we map the required signature to additional timing constraints on carefully selected nets and redo {{a small portion of}} the design (e. g. place and route). The FPGA configuration bitstream for the resulting watermarked design will be significantly different from the original design, which provides us with a strong proof of authorship. The watermarking technique has <b>zero</b> design <b>overhead</b> because it is developed to maintain the performance of the design from the first phase. This is demonstrated by applying the proposed technique on several real-life FPGA designs, which range in size from a few thousand to more than two million gates, on Xilinx devices...|$|R
3000|$|Note that we {{can treat}} the PRF as another key space model, based on which each service sensor generates a random key pool that will supply {{pairwise}} keys to the associated worker sensors. It is obvious that no computation is needed at the worker sensor side. However, this <b>zero</b> computation <b>overhead</b> does not come for free: each worker sensor needs to collect the list of neighbors and send this information to all the associated service sensors. Therefore worker sensors tradeoff computation overhead with communication overhead. Furthermore, the [...]...|$|R
40|$|This paper {{presents}} {{a new technology}} that accelerates system verification. In a real life example, we achieved a speed-up of a factor of about 5000. The key for this speed-up is a configurable, synthesizable testbench architecture, which can be completely mapped to emulators or FPGAs. Exploiting generic controllers and re-using protocol-specific stimuli generators combined with topology and microprogram generation is responsible for almost <b>zero</b> <b>overhead</b> compared to behavioral testbenches...|$|E
40|$|Diagnosing complex {{performance}} or kernel debugging problems often requires kernel modifications with multiple rebuilds and reboots. This is tedious, time-consuming work that most developers {{would prefer to}} minimize. Systemtap uses the kprobes infrastructure to dynamically instrument the kernel and user applications. Systemtap instrumentation incurs low overhead when enabled, and <b>zero</b> <b>overhead</b> when disabled. SystemTap provides facilities to define instrumentation points in a high-level language, and to aggregate and analyze the instrumentation data. Details of the SystemTap architecture and implementation are presented, along with an example of its application. ...|$|E
40|$|Low-power {{wireless}} networks must leverage radio {{duty cycling}} to reduce energy consumption, but duty cycling drastically {{increases the risk}} of radio collisions, resulting in power-expensive retransmissions or data loss. We present Strawman, a contention resolution mechanism designed for low-power duty-cycled networks that experience traffic bursts. Strawman efficiently resolves network contention, mitigates the hidden terminal problem, and has <b>zero</b> <b>overhead</b> unless activated to resolve data collisions. Our testbed experiments show that Strawman instantaneously provides increased network capacity when needed, allocates the available bandwidth evenly among contenders, and increases energy efficiency in multihop collection networks compared to the traditionally used random backoff...|$|E
50|$|There {{have been}} {{concerns}} that the zero-overhead principle isn't compatible with exceptions. Most modern implementation has a <b>zero</b> performance <b>overhead</b> when exceptions are enabled but not used, but instead has an overhead in exception handling and in binary size due {{to the need for}} unroll tables. Many compilers support disabling exceptions from the language to save the binary overhead. Exceptions have also been criticized for being unsafe for state-handling, this safety issue has led to the invention of the RAII idiom, which has proven useful beyond making C++ exceptions safe.|$|R
40|$|Today’s complex {{software}} {{systems are}} neither secure nor reliable. The rudimentary software protection primitives pro-vided by current hardware forces systems to run many distrust-ing software components (e. g., procedures, libraries, plugins, modules) {{in the same}} protection domain, or otherwise suffer degraded performance from address space switches. We present CODOMs (COde-centric memory DOMains), a novel architecture that can provide finer-grained isolation between software components with effectively <b>zero</b> run-time <b>overhead,</b> all {{at a fraction of}} the complexity of other ap-proaches. An implementation of CODOMs in a cycle-accurate full-system x 86 simulator demonstrates that with the right hardware support, finer-grained protection and run-time per-formance can peacefully coexist. 1...|$|R
40|$|Abstract—This paper {{proposes a}} purely passive method for {{inferring}} a congestion map of a network. The congestion map is computed using the congestion markings carried in existing traffic, and is continuously updated as traffic is received. Consequently, congestion {{changes can be}} tracked in a real-time fashion with <b>zero</b> traffic <b>overhead.</b> Unlike active congestion reporting methods, our novel passive method is more robust during periods of congestion {{because there are no}} congestion report messages that could be lost and existing congestion is never aggravated. Our solution has several applications ranging from informing IP fast re-route algorithms and traffic engineering schemes to assisting in inter-domain path selection. I...|$|R
40|$|Current {{virtualization}} solutions often bear an unaccept-able performance cost, {{limiting their}} use in many situations, and in particular when running I/O intensive workloads. We argue that this overhead is inherent in Popek and Goldberg’s trap-and-emulate model for machine virtualization, and pro-pose an alternative virtualization model for multi-core sys-tems, where unmodified guests and hypervisors run on dedi-cated CPU cores. We propose hardware extensions to facili-tate the realization of this split execution (SplitX) model and provide a limited approximation on current hardware. We demonstrate the feasibility and potential of a SplitX hyper-visor running I/O intensive workloads with <b>zero</b> <b>overhead.</b> ...|$|E
40|$|Intellectual {{property}} protection (IPP) of hardware designs {{is the most}} important requirement for many Field Programmable Gate Array (FPGA) intellectual property (IP) vendors. Digital watermarking has become an innovative technology for IPP in recent years. Existing watermarking techniques have successfully embedded watermark into IP cores. However, many of these techniques share two specific weaknesses: 1) They have extra overhead, and are likely to degrade performance of design; 2) vulnerability to removing attacks. We propose a novel watermarking technique to watermark FPGA bitfile for addressing these weaknesses. Experimental results and analysis show that the proposed technique incurs <b>zero</b> <b>overhead</b> and it is robust against removing attacks...|$|E
40|$|Abstract—A {{low power}} 16 -bit RISC is {{proposed}} for body sensor network system. The proposed IPEEP scheme provides <b>zero</b> <b>overhead</b> for the wakeup operation. The lossless compression accelerator {{is embedded in}} the RISC to support the low energy data compression. The accelerator consists of 16 x 16 -bit storage array which has vertical and horizontal access path. By using the accelerator the energy consumption of the lossless compression operation is reduced by 93. 8 %. The RISC is implemented by 1 -poly 6 -metal 0. 18 um CMOS technology with 16 k gates. It operates at 4 MHz and consumes 24. 2 uW at 0. 6 V supply voltage. I...|$|E
40|$|In {{this paper}} we propose a new network layer {{security}} protocol that allows encrypted and authenticated communication between hosts. The new protocol has a number of advantages over existing protocols, including: no initial handshake to establish a connection, <b>zero</b> packet <b>overhead,</b> no per-host state and simpler key distribution. The protocol achieves these goals by using identitybased encryption to generate a secret that is shared between two hosts. We have implemented the cryptographic algorithm and the protocol and integrated them into the Linux networking stack. We analyze the security of the protocol, show that with a small modification it has the minimal possible overhead and give experimental results on its performance...|$|R
50|$|The Chinese New Year of 1937 was raucously {{celebrated in}} Peking by Chinese and foreigners alike; many {{believed}} {{this might be}} the last such holiday for them and the city. After nothing turned up or happened that might have shed new light on Pamela Werner's killing, Dennis returned to Tientsin to attend to pressing matters there, and Han moved on to other cases as well. The Japanese provocations were getting increasingly bold, with tanks being driven through the city and <b>Zeros</b> flown <b>overhead</b> at low altitudes as part of what the Japanese generals still claimed was routine military maneuvering even as they steadily increased their presence outside Peking.|$|R
40|$|Abstract—Numerous probing and {{tomography}} {{techniques have}} been developed for the Internet. They all either flood the network with probing TCP connections or require to send additional probing packets which delays must be precisely measured. In this paper, we propose a new approach, on the basis of existing TCP connections and reaching therefore a <b>zero</b> probing <b>overhead.</b> The foundation of the proposed technique lies in the theory of inverse problems in bandwidth sharing networks, and the approximation of Internet and TCP behavior by that of a bandwidth sharing network. The field of this kind of inverse problems is explored, and we give a few application to toy networks, either with fixed population or with elastic traffic. I...|$|R
40|$|Abstract—Wireless sensor {{networks}} that use slotted, beacon-enabled IEEE 802. 15. 4 standard are often implemented using clustering with randomized sleep of ordinary nodes {{to extend the}} network lifetime. To reduce the imbalance of power consumption between cluster-head and ordinary nodes, we propose a fair and efficient cluster-head rotation protocol with virtually <b>zero</b> <b>overhead</b> and no dead time. Through Markov chain modeling and probabilistic analysis, we show that the proposed approach achieves extremely good balance of nodes ’ lifetime and opti-mal network lifetime in maximin sense, outperforming other approaches that use TDMA access. Index Terms—Energy-efficient clustering, cluster-head rota-tion, IEEE 802. 15. 4, network lifetime, wireless sensor networks I...|$|E
40|$|International audienceEmbedded system face {{a serious}} threat from {{physical}} attacks when applied in critical applications. Therefore, modern systems have several integrated sensors to detect potential threats. In this paper, we put forward a new issue where these sensors can open other security loopholes. We demonstrate that sensors, which are deployed to prevent faults, can be exploited to insert effective and almost zero-overhead hardware Trojans. Two case studies are presented on Xilinx Virtex- 5 FPGA. The first case study exploits the in-build temperature sensor of Virtex- 5 system monitors while the other exploits a user deployed sensor. Both the sensor {{can be used to}} trigger a powerful Trojan with minimal and at times <b>zero</b> <b>overhead...</b>|$|E
40|$|Abstract. Flexibility can {{significantly}} impact performance. Some component-based frameworks {{come with a}} near to <b>zero</b> <b>overhead</b> but provide only build-time configurability. Other solutions provide {{a high degree of}} flexibility but with an uncontrollable and a possibly unaccept-able impact on performance. We believe that no flexible systems give programmers a means to control the inherent overhead introduced by flexibility. This prevents from reaching acceptable tradeoffs between per-formance and flexibility, according to the applications needs or hardware targets. This paper presents an ongoing work that aims to redesign the existing Think component framework. Once revisited, the framework makes possible to finely adjust the flexibility to the actually desired needs and thus better control the induced performance overhead. A cat-egorization of the dimensions of flexibility is also introduced in order to articulate our proposition. ...|$|E
40|$|Abstract—In this paper, {{we report}} {{the design and}} implemen-tation of a {{reconfigurable}} system that exploits regional clocking resources that exist in Xilinx Virtex- 4 FPGAs for increased performance and, for the first time, enhanced reliability. Unlike previous approaches, our system is able to individually manage the regional clock buffers (BUFRs) to adjust the frequency delivered to each hardware task and to detect and recover from faults affecting the clock-tree on-the-fly. Towards this end, we propose global and regional clock multiplexers, named GCMUX and RCMUX respectively, which allow for switching to spare clocking resources whenever needed. These multiplexers {{are based on the}} inner programmable interconnection points of the FPGA, leading to <b>zero</b> area <b>overheads.</b> I...|$|R
40|$|We present sec-cs, a hash-table-like data {{structure}} for file contents on untrusted storage {{that is both}} secure and storage-efficient. We achieve authenticity and confidentiality with <b>zero</b> storage <b>overhead</b> using deterministic authenticated encryption. State-of-the-art data deduplication approaches prevent redundant storage of shared parts of different contents irrespective of whether relationships between contents are known a priori or not. Instead of just adapting existing approaches, we introduce novel (multi-level) chunking strategies, ML-SC and ML-CDC, which are significantly more storage-efficient than existing approaches in presence of high redundancy. We prove sec-cs's security, publish a ready-to-use implementation, and present results of an extensive analytical and empirical evaluation that show its suitability for, e. g., future backup systems that should preserve many versions of files on little available cloud storage...|$|R
40|$|Parallel high {{performance}} array programming in functional lan-guages is usually performed with a fixed set of carefully chosen high-level combinators. Problems that fall outside the design scope for the combinators usually result in {{programs that are}} too slow and programmers resort to implementing them in low-level imperative languages without safety guarantees. We present element sets {{that allow us to}} keep the safety of functional high-level combinators but relaxes the specification order for array elements. The cost of the flexibility is two proof obligations for the compiler or library writer and the return is safety guarantees with <b>zero</b> performance <b>overhead</b> for all programs. We implemented element sets in a com-piler and measured to see that that scalability and performance re-mained competitive with our solution...|$|R
40|$|We {{describe}} {{the use of}} a flexible meta-interpreter for performing access control checks on deductive databases. The meta-program is implemented in Prolog and takes as input a database and an access policy specification. We then proceed to specialise the meta-program for a given access policy and intensional database by using the logen partial evaluation system. In addition to describing the programs involved in our approach, we give a number of performance measures for our implementation of an access control checker, and we discuss the implications of using this approach for access control on deductive databases. In particular, we show that by using our approach we get flexible access control with virtually <b>zero</b> <b>overhead.</b> Categories and Subject Descriptors H. 2. 7 [Database Management]: Database Administration—security, integrity, and protection; F. 3. 2 [Logics an...|$|E
40|$|The growing use {{of digital}} signal {{processors}} (DSPs) in embedded systems makes {{the use of}} optimizing compilers supporting special hardware features necessary. In this paper we present compiler optimizations {{with the aim of}} minimizing energy consumption of embedded applications: This comprises loop optimizations for exploitation of SIMD instructions and <b>zero</b> <b>overhead</b> hardware loops in order to increase performance and in this way to decrease the energy consumption. In addition, we use a phase coupled code generator (GCG) based on a genetic algorithm which is capable of performing an energy aware instruction selection and scheduling. Energy aware compilation is done with respect to an instruction level energy cost model which is integrated into our code generator and simulator. Experimental results for several benchmarks show the effectiveness of our approach...|$|E
40|$|Abstract – In {{this paper}} {{we present a}} new {{approach}} to benchmark the performance of shared memory systems. This approach focuses on recognizing how far off the performance of a given memory system is from a realistic ideal parallel machine. We define such a realistic machine model, called the z-machine, that accounts for the inherent communication costs in an application by tracking the data flow in the application. The z-machine is incorporated into an execution-driven simulation framework and is used as a reference for benchmarking different memory systems. The components of the overheads in these memory systems are identified and quantified for four applications. Using the z-machine performance as the standard to strive for we discuss the implications of the performance results and suggest architectural trends to pursue for realizing a <b>zero</b> <b>overhead</b> shared memory machine. ...|$|E
40|$|Abstract—With {{aggressive}} device scaling, {{the impact}} of parameter variation is becoming more prominent, which results in the uncertainty of a chip’s performance. Techniques that capture post-silicon variation by deploying on-chip monitors suffer from serious area overhead and low testing reliability, while techniques using non-invasion test are limited in small scale circuits. In this paper, a novel layout-aware post-silicon variation extraction method {{which is based on}} non-invasive path-delay test is proposed. The key technique of the proposed method is a novel layout-aware heuristic path selection algorithm which takes the spatial correlation and linear dependence between paths into consideration. Experimental results show that the proposed technique can obtain an accurate timing variation distribution with <b>zero</b> area <b>overhead.</b> Moreover, the test cost is much smaller than the existing non-invasion method...|$|R
40|$|Abstract—Our paper [1] {{generated}} {{a lot of}} interest among researchers in ad hoc networks. A number of researchers questioned, through their articles, or directly to the first author, the correctness of the described procedure, and the correctness of the claim that the procedure does not need any communication exchange between nodes, in addition to “hello ” messages needed to learn information about neighboring nodes. This correspondence completes the article by providing the actual dominating set definitions used in the procedure (from which <b>zero</b> communication <b>overhead</b> follows easily), the correct procedure (the published one has few misprints at key places), and the proof that the new definitions and procedure indeed define connected dominating sets. Index Terms—Broadcasting, ad hoc networks, dominating sets. ...|$|R
40|$|In this paper, {{we present}} a novel {{approach}} to supporting first year computing students by exploiting widespread ownership of Bluetooth enabled devices, specifically, but not restricted to, mobile phones. The combined software and hardware solution described allows delivery of information with low set-up costs and <b>zero</b> transmission <b>overhead.</b> We show how this system {{can be used to}} provide different types and formats of information, from basic textual information such as timetabling alerts and reminders, to richer content like presentations, audio and video files. We then go on to provide examples of the system in practice, including its application to other disciplines. Finally we look at developments in the system that have been undertaken since the project and collaborations that are under discussion...|$|R
