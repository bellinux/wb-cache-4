15|63|Public
2500|$|On March 28, the Department of Justice {{announced}} that it had unlocked the iPhone and withdrew its suit. Initial reports, citing anonymous sources, stated that Israeli company Cellebrite was assisting the FBI with this alternative. However, The Washington Post reported that (according to anonymous [...] "people familiar with the matter") the FBI instead paid [...] "professional hackers" [...] who used a <b>zero-day</b> <b>vulnerability</b> in the iPhone's software to bypass its ten-try limitation, and did not need Cellebrite's assistance.|$|E
50|$|There {{were other}} hacking contests, and {{during one of}} them a {{participant}} detected a <b>zero-day</b> <b>vulnerability</b> in Safari for Windows.|$|E
50|$|In December 2012, the Council on Foreign Relations website {{was found}} to be {{infected}} with malware through a <b>zero-day</b> <b>vulnerability</b> in Microsoft's Internet Explorer. In this attack, the malware was only deployed to users using Internet Explorer set to English, Chinese, Japanese, Korean and Russian.|$|E
40|$|Abstract- <b>Zero-Day</b> <b>vulnerabilities</b> are an {{intriguing}} and ever increasing problem. Microsoft {{has been one}} of the more exploited companies having <b>Zero-Day</b> <b>vulnerabilities.</b> This paper intends to identify some relationships within the <b>Zero-Day</b> <b>vulnerabilities</b> identified in nineteen news articles from 2010. We tried to collect data on vulnerability report date, attack report date, vulnerability patch date, vulnerability lif...|$|R
5|$|After the {{discovery}} Google established Project Zero which is tasked with finding <b>zero-day</b> <b>vulnerabilities</b> to help secure the Web and society.|$|R
5000|$|XARA is {{an acronym}} for [...] "Unauthorized Cross-App Resource Access", which {{describes}} a category of <b>zero-day</b> <b>vulnerabilities</b> in computer software systems.|$|R
50|$|In 2015, the FireEye as a Service team in Singapore {{uncovered}} a phishing campaign exploiting an Adobe Flash Player <b>zero-day</b> <b>vulnerability</b> (CVE-2015-3113). Adobe released a patch for the vulnerability with an out-of-band security bulletin. FireEye attributed the activity to a China-based threat group it tracks as APT3.|$|E
5000|$|Some news outlets, citing {{anonymous}} sources, {{identified the}} third party as Israeli company Cellebrite. However, The Washington Post reported that, according to anonymous [...] "people {{familiar with the}} matter", the FBI had instead paid [...] "professional hackers" [...] who used a <b>zero-day</b> <b>vulnerability</b> in the iPhone's software to bypass its ten-try limitation, and did not need Cellebrite's assistance.|$|E
50|$|In January, a <b>zero-day</b> <b>vulnerability</b> {{was found}} in all {{versions}} of Java 7, including the latest version Java 7 Update 10, which was already exploited in the wild. The vulnerability {{was caused by a}} patch to fix an earlier vulnerability. In response, Apple blacklisted the latest version of the Java plugin. Oracle released a patch (Update 11) within three days. Microsoft also released a patch for Internet Explorer versions 6, 7, and 8.|$|E
50|$|Fancy Bear's {{behavior}} has been classified as an advanced persistent threat. They employ <b>zero-day</b> <b>vulnerabilities</b> and use spear phishing and malware to compromise targets.|$|R
50|$|The NSA {{was criticized}} for buying up and {{stockpiling}} <b>zero-day</b> <b>vulnerabilities,</b> keeping them secret and developing mainly offensive capabilities instead of helping patch vulnerabilities.|$|R
50|$|Project Zero is {{the name}} of a team of {{security}} analysts employed by Google tasked with finding <b>zero-day</b> <b>vulnerabilities.</b> It was announced on 15 July 2014.|$|R
5000|$|On March 28, the Department of Justice {{announced}} that it had unlocked the iPhone and withdrew its suit. Initial reports, citing anonymous sources, stated that Israeli company Cellebrite was assisting the FBI with this alternative. However, The Washington Post reported that (according to anonymous [...] "people familiar with the matter") the FBI instead paid [...] "professional hackers" [...] who used a <b>zero-day</b> <b>vulnerability</b> in the iPhone's software to bypass its ten-try limitation, and did not need Cellebrite's assistance.|$|E
5000|$|Like Stuxnet, Duqu attacks Microsoft Windows systems using a <b>zero-day</b> <b>vulnerability.</b> The first-known {{installer}} (AKA dropper) file {{recovered and}} disclosed by CrySyS Lab uses a Microsoft Word document that exploits the Win32k TrueType font parsing engine and allows execution. The Duqu dropper relates to font embedding, and thus {{relates to the}} workaround to restrict access to [...] T2EMBED.DLL, which is a TrueType font parsing engine if the patch released by Microsoft in December 2011 is not yet installed.Microsoft identifier for the threat is MS11-087 (first advisory issued on 13 November 2011).|$|E
5000|$|According to Kaspersky's chief malware expert, [...] "the {{geography}} of the targets and also {{the complexity of the}} threat leaves no doubt about it being a nation-state that sponsored the research that went into it." [...] Kaspersky initially said that the malware bears no resemblance to Stuxnet, although {{it may have been a}} parallel project commissioned by the same attackers.After analysing the code further, Kaspersky later said that there is a strong relationship between Flame and Stuxnet; the early version of Stuxnet contained code to propagate via USB drives that is nearly identical to a Flame module that exploits the same <b>zero-day</b> <b>vulnerability.</b>|$|E
50|$|Significant events include: {{demonstration}} of <b>zero-day</b> <b>vulnerabilities</b> in Windows XP and FreeBSD 8.3, cracking iPhone 4S, and contests in taking control over AR.Drone and analyzing internet banking system security.|$|R
50|$|Intelligence {{agencies}} such as the NSA were criticized for buying up and stockpiling <b>zero-day</b> <b>vulnerabilities,</b> keeping them secret and developing mainly offensive capabilities instead of defensive measures and helping patch vulnerabilities.|$|R
50|$|Because CDR removes all {{potentially}} malicious code, it can {{be effective}} against <b>zero-day</b> <b>vulnerabilities</b> that rely on being an unknown threat that other security technologies would need to patch against to maintain protection.|$|R
5000|$|On October 31, 2016, Google's Threat Analysis Group {{revealed}} a <b>zero-day</b> <b>vulnerability</b> in most Microsoft Windows versions {{that is the}} subject of active malware attacks. On November 1, 2016, Microsoft Executive Vice President of the Windows and Devices Group Terry Myerson posted to Microsoft's Threat Research & Response Blog, acknowledging the vulnerability and explaining that a [...] "low-volume spear-phishing campaign" [...] targeting specific users had utilized [...] "two zero-day vulnerabilities in Adobe Flash and the down-level Windows kernel." [...] Microsoft pointed to Fancy Bear as the threat actor, referring to the group by their in-house code name STRONTIUM.|$|E
50|$|Differing {{ideologies}} exist {{relative to}} the collection and use of <b>zero-day</b> <b>vulnerability</b> information. Many computer security vendors perform research on zero-day vulnerabilities {{in order to better}} understand the nature of vulnerabilities and their exploitation by individuals, computer worms and viruses. Alternatively, some vendors purchase vulnerabilities to augment their research capacity. An example of such a program is TippingPoint's Zero Day Initiative. While selling and buying these vulnerabilities is not technically illegal {{in most parts of the}} world, there is a lot of controversy over the method of disclosure. A 2006 German decision to include Article 6 of the Convention on Cybercrime and the EU Framework Decision on Attacks against Information Systems may make selling or even manufacturing vulnerabilities illegal.|$|E
40|$|Security {{vulnerabilities}} {{continue to}} be an issue in the software field and new severe vulnerabilities are discovered in software products each month. This paper analyzes estimates from domain experts on the amount of effort required for a penetration tester to find a <b>zero-day</b> <b>vulnerability</b> in a software product. Estimates are developed using Cooke's classical method for 16 types of vulnerability discovery projects – each corresponding to a configuration of four security measures. The estimates indicate that, regardless of project type, two weeks of testing are enough to discover a software vulnerability of high severity with fifty percent chance. In some project types an eight-to-five-week is enough to find a <b>zero-day</b> <b>vulnerability</b> with 95 percent probability. While all studied measures increase the effort required for the penetration tester none of them have a striking impact on the effort required to find a vulnerability. QC 20121018 </p...|$|E
50|$|DIT also {{releases}} a {{tiny piece of}} software, FreeGate, which directly taps into DynaWeb’s backbone and keeps a user connected to the dynamic channels automatically. There are indications that FreeGate has some capabilities built-in to exploit some <b>zero-day</b> <b>vulnerabilities</b> of the GFW.|$|R
50|$|Websites {{are often}} {{infected}} through <b>zero-day</b> <b>vulnerabilities</b> on browsers or other software. Software with vulnerabilities should be patched {{to remove the}} vulnerability that caused site to be infected. Users should ensure that all of their software is up-to-date with {{the latest version of}} their software.|$|R
50|$|Mati Aharoni is {{the creator}} of the BackTrack and Kali Linux {{distribution}} and the founder of Offensive-Security, the industry leader in security training. Mati is a thought leader in the information security field, has authored several <b>zero-day</b> <b>vulnerabilities,</b> and is considered a subject-matter expert on security.|$|R
40|$|Widespread and {{extensive}} use of computers and their interconnections in almost all sectors like communications, finance, transportation, military, governance, education, energy etc., have made them attractive targets for adversaries to spy, disrupt or steal information by pressing of few keystrokes from {{any part of the}} world. This paper presents a survey of major cyberattacks from 2001 to 2013 and analyzes these attacks to understand the motivation, targets and technique(s) employed by the attackers. Observed trends in cyberattacks have also been discussed in the paper. Comment: Correction of vulnerabilities exploited in Operation Aurora attacks. <b>Zero-day</b> <b>vulnerability</b> in many versions on Microsoft Internet explorer was exploited and not in Adobe Reade...|$|E
40|$|Abstract—It {{is crucial}} to detect {{zero-day}} polymorphic worms and to generate signatures at network gateways or honeynets {{so that we can}} prevent worms from propagating at their early phase. However, most existing network-based signatures are specific to exploit and can be easily evaded. In this paper, we propose generating vulnerability-driven signatures at network level without any host-level analysis of worm execution or vulnerable programs. As the first step, we design a network-based length-based signature generator (LESG) for the worms exploiting buffer overflow vulnerabilities 1. The signatures generated are intrinsic to buffer overflows, and are very difficult for attackers to evade. We further prove the attack resilience bounds even under worst-case attacks with deliberate noise injection. Moreover, LESG is fast and noisetolerant and has efficient signature matching. Evaluation based on real-world vulnerabilities of various protocols and real network traffic demonstrates that LESG is promising in achieving these goals. Index Terms—length-based signature, polymorphic worm, worm signature generation, <b>zero-day</b> <b>vulnerability.</b> I...|$|E
40|$|Rigorous {{identification}} of vulnerabilities in program code {{is a key}} to implementing and operating secure systems. Unfortunately, only some types of vulnerabilities can be detected automatically. While techniques from software testing can accelerate the search for security flaws, in the general case discovery of vulnerabilities is a tedious process that requires significant expertise and time. In this paper, we propose a method for assisted discovery of vulnerabilities in source code. Our method proceeds by embedding code in a vector space and automatically determining API usage patterns using machine learning. Starting from a known vulnerability, these patterns can be exploited to guide the auditing of code and to identify potentially vulnerable code with similar characteristics—a process we refer to as vulnerability extrapolation. We empirically demonstrate the capabilities of our method in different experiments. In a case study with the library FFmpeg, we are able to narrow the search for interesting code from 6, 778 to 20 functions and discover two security flaws, one being a known flaw and the other constituting a <b>zero-day</b> <b>vulnerability.</b> ...|$|E
50|$|Alisa Shevchenko {{detected}} several <b>zero-day</b> <b>vulnerabilities</b> in Indusoft Web Studio 7.1 {{during a}} contest in analyzing ICS security. Significant events include: a contest in identifying threats of a smart home, {{discussion of the}} security of telecommunications companies {{and the lack of}} really smart grids in the power industry.|$|R
50|$|The {{group is}} known for its remote-network-control {{programs}} they offer for free on their website and the exploitation of <b>zero-day</b> <b>vulnerabilities</b> of Microsoft Office suite products. After their founding in 2004, the group earned a reputation among hacking groups by hacking 40% of the hacker association websites in China.|$|R
5000|$|On July 16, 2014, Google hired Hotz to work {{in their}} {{software}} security auditing team called Project Zero, which [...] "hopes to find <b>zero-day</b> <b>vulnerabilities</b> before the NSA". Hotz worked in Project Zero for 5 months where he developed Qira - an open source program for dynamically analysing application binaries.|$|R
50|$|At Pwn2Own 2014, VUPEN {{successfully}} exploited fully updated Internet Explorer 11, Adobe Reader XI, Google Chrome, Adobe Flash, and Mozilla Firefox on a 64-bit {{version of}} Windows 8.1, {{to win a}} total of $400,000—the highest payout to a single competitor to date. The company used a total of 11 distinct <b>zero-day</b> <b>vulnerabilities.</b>|$|R
5000|$|Highly targeted: The newest {{twist in}} [...] "hypertargeting" [...] is malware that {{is meant to}} disrupt {{industrial}} systems — such as the Stuxnet network worm, which exploits <b>zero-day</b> <b>vulnerabilities</b> in Microsoft. The first known copy of the worm was discovered in a plant in Germany. A subsequent variant led to a widespread global outbreak.|$|R
30|$|In summary, {{a common}} {{characteristic}} of three representative types of architecture-level defenses {{is that they}} seek to protect the chip or system from a specific vulnerability. In other words, existing architecture-level defenses are usually resulted from passively responding to specific attacks. As a consequence, such patch-like approaches are usually not generic and cannot handle attacks which exploit <b>zero-day</b> <b>vulnerabilities.</b>|$|R
50|$|Zerodium is an American {{information}} security company founded in 2015 based in Washington, D.C.. Its main business is acquiring premium <b>zero-day</b> <b>vulnerabilities</b> with functional exploits from security researchers and companies, and reporting the research, along with protective measures and security recommendations, to its corporate and government clients. The founder, Chaouki Bekrar, {{is also known}} for founding VUPEN (defunct).|$|R
5000|$|The intruders {{profiled}} {{in the report}} combine <b>zero-day</b> <b>vulnerabilities</b> developed in-house with clever social exploits {{to gain access to}} individual computers inside targeted networks. Once a single computer is compromised, the attackers exploit [...] "highly privileged administrative accounts" [...] throughout the organization until the infrastructure is mapped and sensitive information can be extracted quickly enough to circumvent conventional safeguards.|$|R
2500|$|In 2010 Kaspersky Lab {{worked with}} Microsoft to counter-act the Stuxnet worm, which had {{infected}} 14 industrial locations in Iran using four <b>zero-day</b> <b>vulnerabilities</b> in Microsoft Windows. According to IEEE Spectrum, the circumstances [...] "strongly suggest" [...] the worm {{was developed by}} the United States and Israel to damage centrifuges in Iran's nuclear-enrichment program. It was the first discovery of a major government-sponsored cyber-attack.|$|R
