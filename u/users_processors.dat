1|91|Public
50|$|Information Systems is an {{academic}} study of systems {{with a specific}} reference to information and the complementary networks of hardware and software that people and organizations use to collect, filter, process, create and also distribute data. An {{emphasis is placed on}} an information system having a definitive boundary, <b>users,</b> <b>processors,</b> storage, inputs, outputs and the aforementioned communication networks.|$|E
50|$|At {{the time}} of the Blue Gene/Q system {{announcement}} in November 2011, an initial 4-rack Blue Gene/Q system (4096 nodes, 65536 <b>user</b> <b>processor</b> cores) achieved #17 in the TOP500 list with 677.1 TeraFLOPS Linpack, outperforming the original 2007 104-rack BlueGene/L installation described above. The same 4-rack system achieved the top position in the Graph500 list with over 250 GTEPS (giga traversed edges per second). Blue Gene/Q systems also topped the Green500 list of most energy efficient supercomputers with up to 2.1 GFLOPS/W.|$|R
50|$|Counting {{installations}} is {{the most}} common means of measuring license consumption but some software is licensed by number of <b>users,</b> capital, <b>processors</b> or CPU Cores.|$|R
5000|$|Strong spatial isolation: all {{partitions}} are {{executed in}} <b>processor</b> <b>user</b> mode, {{and do not}} share memory.|$|R
50|$|On November 18, 2012, Baidu {{announced}} {{that they would be}} partnering with Qualcomm to offer free cloud storage to Android <b>users</b> with Snapdragon <b>processors.</b>|$|R
50|$|Microsoft offers {{software}} licenses {{through a}} program called the Service Provider License Agreement. The SPLA model provides use of Microsoft products through a monthly <b>user</b> or <b>processor</b> based fee. SPLA software includes the Windows Operating System, Microsoft SQL Server, Microsoft Exchange Server, Microsoft SharePoint and shoutcast hosting, and many other server based products.|$|R
5000|$|Word {{processing}} templates {{have the}} standard [...] "fill-in-the-blank" [...] features {{similar to other}} kinds of templates in computer software. They also have features that specifically leverage the functionality of the word <b>processor</b> <b>user</b> interface.|$|R
5000|$|Document marking can be {{done from}} within the <b>user's</b> word <b>processor.</b> This {{can be done}} {{manually}} by creating the [...] "stamps" [...] {{to appear on the}} documents in automated document marking software for Microsoft Word. This allows each page to be stamped as it is printed with the user selected stamps created electronically. This provides the user with a standardized and consistent document management solution for paper-based workflows.|$|R
40|$|AbstractÐTime Warp is {{an optimistic}} {{protocol}} for synchronizing parallel discrete event simulations. To achieve {{performance in a}} multiuser network of workstation (NOW) environment, Time Warp must continue to operate efficiently {{in the presence of}} external workloads caused by other <b>users,</b> <b>processor</b> heterogeneity, and irregular internal workloads caused by the simulation model. However, these performance problems can cause a Time Warp program to become grossly unbalanced, resulting in slower execution. The key observation asserted in this article is that each of these performance problems, while different in source, has a similar manifestation. For a Time Warp program to be balanced, the amount of wall clock time necessary to advance an LP one unit of simulation time should be about the same for all LPs. Using this observation, we devise a single algorithm that mitigates these performance problems and enables the ªbackgroundº execution of Time Warp programs on heterogeneous distributed computing platforms in the presence of external as well as irregular internal workloads. Index TermsÐDiscrete event simulation, distributed simulation, network of workstations (NOW), time warp, dynamic load balancing. ...|$|R
40|$|The Geohazards Thematic Exploitation Platform or Geohazards TEP is an ESA funded R&D {{activity}} {{to exploit the}} benefit of new techniques for large scale on demand processing of EO data. It supports the geohazards community which objectives have been defined {{in the context of}} the International Forum on Satellite EO and Geohazards in Santorini in 2012. Those objectives are addressed by creating an Exploitation Platform with Cloud-based models of collaboration where data providers, <b>users</b> and <b>processors</b> produce scientific and commercial exploitable results...|$|R
40|$|In {{distributed}} systems load distnbutíon and balancing are primary functions directed to system performance improvement and user content. In order {{to decide where}} the incoming workload have to be allocated, maintaining a reasonabJe balance in the system, a number of non trivial tasks will be necessary. As a basement for further automatic system decision, this paper propose a <b>user</b> supervised <b>processor</b> allocation schedtiler and shows which information should be collected, {{when and how to}} collect and disseminate it to support the User decision. Eje: Sistemas distribuido...|$|R
40|$|Fundamentals of Human-Computer Interaction aims to sensitize {{the systems}} {{designer}} {{to the problems}} faced by the user of an interactive system. The book {{grew out of a}} course entitled """"The User Interface: Human Factors for Computer-based Systems"""" which has been run annually at the University of York since 1981. This course has been attended primarily by systems managers from the computer industry. The book is organized into three parts. Part One focuses on the <b>user</b> as <b>processor</b> of information with studies on visual perception; extracting information from printed and electronically presente...|$|R
40|$|AbstractObjectiveTo {{demonstrate}} the performance {{benefit of the}} Automatic Scene Classifier (SCAN) algorithm available in the Nucleus® 6 (CP 900 series) sound processor over the default processing algorithms of the previous generation Nucleus 5 (CP 810) and Freedom® Hybrid™ sound processors. MethodsEighty-two cochlear implant recipients (40 Nucleus 5 <b>processor</b> <b>users</b> and 42 Freedom Hybrid <b>processor</b> <b>users)</b> listened to and repeated AzBio sentences in noise with their current processor and with the Nucleus 6 processor. ResultsThe SCAN algorithm when enabled yielded statistically significant non-inferior and superior performance {{when compared to the}} Nucleus 5 and Freedom Hybrid sound processors programmed with ASC + ADRO®. ConclusionThe results of these studies {{demonstrate the}} superior performance and clinical utility of the SCAN algorithm in the Nucleus 6 processor over the Nucleus 5 and Freedom Hybrid processors...|$|R
50|$|The Blue Gene/Q Compute chip is an 18 core chip. The 64-bit A2 {{processor}} cores are 4-way simultaneously multithreaded, and run at 1.6 GHz. Each processor core has a SIMD Quad-vector double precision floating point unit (IBM QPX). 16 Processor cores {{are used for}} computing, and a 17th core for operating system assist functions such as interrupts, asynchronous I/O, MPI pacing and RAS. The 18th core {{is used as a}} redundant spare, used to increase manufacturing yield. The spared-out core is shut down in functional operation. The {{processor cores}} are linked by a crossbar switch to a 32 MB eDRAM L2 cache, operating at half core speed. The L2 cache is multi-versioned, supporting transactional memory and speculative execution, and has hardware support for atomic operations. L2 cache misses are handled by two built-in DDR3 memory controllers running at 1.33 GHz. The chip also integrates logic for chip-to-chip communications in a 5D torus configuration, with 2GB/s chip-to-chip links. The Blue Gene/Q chip is manufactured on IBM's copper SOI process at 45 nm. It delivers a peak performance of 204.8 GFLOPS at 1.6 GHz, drawing about 55 watts. The chip measures 19×19 mm (359.5 mm²) and comprises 1.47 billion transistors. The chip is mounted on a compute card along with 16 GB DDR3 DRAM (i.e., 1 GB for each <b>user</b> <b>processor</b> core).|$|R
50|$|In OneNote, {{users can}} enter typed text via keyboard, create tables, and insert pictures. However, unlike a word <b>processor,</b> <b>users</b> can write {{anywhere}} on a virtually unbounded document window by just clicking there. Also, users {{do not need}} to explicitly save their work - OneNote saves data automatically as the user works.|$|R
40|$|Master-slave {{sequence}} {{ordering of}} the Omega system is suggested {{as a method}} of improving the pair geometry for low-cost receiver user benefit. The sequence change will not affect present sophisticated <b>processor</b> <b>users</b> other than require new labels for some pair combinations, but may require worldwide transmitter operators to slightly alter their long-range synchronizing techniques...|$|R
50|$|Image <b>processor</b> <b>users</b> {{are using}} {{industry}} standard products, application-specific standard products (ASSP) or even application-specific integrated circuits (ASIC) with trade names: Canon's is called DIGIC, Nikon's EXPEED, Olympus' TruePic, Panasonic's VENUS Engine and Sony's BIONZ. Some {{are known to}} be based on the Fujitsu Milbeaut, the Texas Instruments OMAP, Panasonic MN103, Zoran Coach, Altek Sunny or Sanyo image/video processors.|$|R
50|$|The colwiz Desktop Application offers {{built-in}} support for citation plugins for Word <b>processors.</b> <b>Users</b> can insert citations {{in more than}} 6000 styles and generate bibliographies with a single click. The citation plugin is supported for Microsoft Word (2003, 2007, 2010, 2013, 2016), Neo Office (3.x), Open Office (3.x), Libre Office (3.x) and Star Office (9.x). Additionally colwiz also supports citation in LaTeX.|$|R
50|$|Planz {{works in}} many ways like a word <b>processor.</b> <b>Users</b> can enter notes directly, and these notes can be {{arranged}} under numerous levels of headings, promoted or demoted, and moved up or down according to importance or priority. From a design standpoint, the document overlay of Planz makes the realization of additional features straightforward, which was an important goal of the development team.|$|R
50|$|To {{protect against}} this scenario, an {{authentication}} {{system can be}} set up between the <b>user's</b> application (word <b>processor,</b> email client, etc.) and the signing application. The general idea is to provide some means for both the user application and signing application to verify each other's integrity. For example, the signing application may require all requests to come from digitally signed binaries.|$|R
5000|$|Quantum Experience by IBM, which {{consists}} of a simulator and a five superconducting transmon qubit <b>processor.</b> <b>Users</b> interact with the quantum processor through the quantum circuit model of computation, applying quantum gates on the qubits using a GUI called the quantum composer, writing quantum assembly language code [...] or through a Python API. It also hosts a tutorial and online community.|$|R
5000|$|... the {{intention}} {{was that the}} caller would provide {{the name of a}} variable, and the [...] "global" [...] variable or constant b would be used to multiply [...] "a". If foo is called with the parameter , the macro expansion of [...] occurs. To avoid any possible ambiguity, <b>users</b> of macro <b>processors</b> can parenthesize formal parameters inside macro definitions, or callers can parenthesize the input parameters.|$|R
40|$|A user {{interface}} and a processor coupled to the {{user interface}} wherein the processor receives access requests through the user interface and authorizes access through the <b>user</b> interface. The <b>processor</b> associates a rights request with a role based policy to determine access rights, modifies the determined access rights in accordance with an exception list related to particular users and records, and authorizes access to a record based upon the modified determined access rights...|$|R
40|$|Processing {{costs in}} {{distributed}} environments {{is most often}} dominated by the network communications required for interprocess communication. It is well-known from distributed relational database design research that careful placement of data "near" the <b>users</b> or <b>processors</b> where it is used is mandatory or system performance will suffer greatly. Data placement in relational database systems is comparatively simple because the data is flat, structured, and passive. Objects are characterized by an inheritance hierarchy (other hierarchies could also be considered including, class composition and execution), unstructured (possibly dynamic data), and contain a behavioral component that defines how the "data" is accessed by encapsulating it within the object per se. Algorithms currently exist for fragmenting relations, but the fragmentation and allocation of objects is still a relatively untouched field of study. Similar to relations, objects can be fragmented both horizontally and ve [...] ...|$|R
50|$|At the time, the Mac word {{processor}} market {{was dominated by}} MacWrite, released free with the Macintosh when it first launched. MacWrite introduced a semi-WYSIWYG GUI to word <b>processor</b> <b>users,</b> {{and many of its}} conventions remain as standards today - selecting text with a drag of the mouse and then cutting it, for instance. Although MacWrite was a credible system for short documents, it lacked any of the features needed for long-document preparation, and had significant performance problems when creating documents more than a few pages long.|$|R
50|$|IBM {{mainframes}} in the System/360 and successor families {{operate in}} one of two states: problem state or supervisor state. In problem state, a large set of general purpose non-privileged instructions are available to a user program. In supervisor state, system programs are additionally able to use a small set of privileged instructions which are generally intended for supervisory functions. These functions may affect other <b>users,</b> other <b>processors,</b> or the entire computer system. A program is only allowed to access specific supervisory functions after thorough authorization checking by the operating system: DEBCHK (SVC 117), TESTAUTH (SVC 119), and possibly additional tests. Programs which fail any of these tests are ABENDed, that is abnormally terminated and immediately cease processing. Some of these tests were not available in OS/360, but were added in SVS or MVS/370, but all were available in MVS/370 or subsequent releases, and are still available to this day.|$|R
40|$|Abstract. Embedded {{processor}} cores, {{which are}} widely used in SRAM-based FPGA applications, are candidates for SEU (Single Event Upset) -induced faults {{and need to be}} tested occasionally during system exploitation. Verifying a processor core is a difficult task, due to its complexity and the lack of user knowledge about the core-implementation details. In <b>user</b> applications, <b>processor</b> cores are normally tested by executing some kind of functional test in which the individual processor’s instructions are tested with a set of deterministic test patterns, and the results are then compared with the stored reference values. For practical reasons the number of test patterns and corresponding results is usually small, which inherently leads to low fault coverage. In this paper we develop a concept that combines the whole instruction-set test into a compact test sequence, which can then be repeated with different input test patterns. This improves the fault coverage considerably with n...|$|R
40|$|Recently, {{due to the}} {{progress}} of CAD and device technologies, hardware/software codesign has attracted large attention. But lack of a compiler for the designed application specified processor makes it trouble to evaluate hardware and software together and to develop application programs. We have been developing a compiler generator for <b>user</b> designed <b>processors.</b> In this paper, we present the implementation and experimental results of the compiler generator. The compiler generator is based on tree-pattern matching and parameterized functions. Experimental results show that a compiler generated by the compiler generator have quality as good as an existing popular retargetable compiler, and that the compiler generator reduces description of processors to generate a compiler. 1 Introduction Hardware/Software codesign is an effective approach to designing a digital system which contains micro processor units(MPU's). In order to optimize the system, it is effective to design an application s [...] ...|$|R
40|$|An {{apparatus}} {{for providing}} weather information onboard an aircraft includes a processor unit and a graphical <b>user</b> interface. The <b>processor</b> unit processes weather information {{after it is}} received onboard the aircraft from a ground-based source, and the graphical user interface provides a graphical presentation of the weather information to a user onboard the aircraft. Preferably, the graphical user interface includes one or more user-selectable options for graphically displaying {{at least one of}} convection information, turbulence information, icing information, weather satellite information, SIGMET information, significant weather prognosis information, and winds aloft information...|$|R
40|$|Use {{of digital}} {{signatures}} {{is not as}} straightforward as one {{would like to see}} it. We have {{to be aware of the}} fact that computers sign all electronic documents on behalf of humans and only few computers can be considered as fully trustworthy. Visual representation of file formats can be dramatically changed by settings of a viewer or a text <b>processor.</b> <b>Users</b> cannot be absolutely sure that they sign only the data visible on their computer screen. Proprietary signature solutions are not fully compatible as there are no standards...|$|R
5000|$|In {{computer}} science, {{the issue}} of handling shared resources figures prominently. For example, time-sharing is an approach to interactive computing in which a single computer is used to provide apparently simultaneous interactive general-purpose computing to multiple <b>users</b> by sharing <b>processor</b> time. Sharing of resources between processes and threads {{is the source of}} most of the difficulties of concurrent programming. The word [...] "sharing" [...] is also used in some functional programming communities to refer specifically to sharing of memory between different data items to save space, otherwise known as hash consing.|$|R
5000|$|Under Microsoft Windows XP, SpeedStep {{support is}} built into the power {{management}} console under the control panel. In Windows XP a <b>user</b> can regulate <b>processor</b> speed indirectly by changing power schemes. The [...] "Home/Office Desk" [...] setting disables SpeedStep, the [...] "Portable/Laptop" [...] power scheme enables SpeedStep, and the [...] "Max Battery" [...] uses SpeedStep to slow the processor to minimal power levels as the battery weakens. The SpeedStep settings for power schemes, either built-in or custom, cannot be modified from the control panel's GUI, but can be modified using the POWERCFG.EXE command-line utility.|$|R
5000|$|At {{the lowest}} level, {{executable}} code consists of machine language instructions specific {{to an individual}} processor—typically a central processing unit (CPU). A machine language consists of groups of binary values signifying processor instructions that change {{the state of the}} computer from its preceding state. For example, an instruction may change the value stored in a particular storage location in the computer—an effect that is not directly observable to the user. An instruction may also (indirectly) cause something to appear on a display of the computer system—a state change which should be visible to the <b>user.</b> The <b>processor</b> carries out the instructions in the order they are provided, unless it is instructed to [...] "jump" [...] to a different instruction, or is interrupted (by now multi-core processors are dominant, where each core can run instructions in order; then, however, each application software runs only on one core by default, but some software has been made to run on many).|$|R
2500|$|In {{addition}} to home computers and game consoles, the 6809 was also utilized {{in a number}} of arcade games released during the early to mid-1980s. Williams Electronics was an especially prolific <b>user</b> of the <b>processor,</b> which was deployed in arcade hits such as Defender, Joust, Sinistar, and [...] Williams also utilized the processor in many of its solid-state pinball machines; the 6809 CPU formed the core of the successful Williams Pinball Controller. The KONAMI-1 was a modified 6809 used by Konami in various arcade sets such as Mappy, Roc'n Rope, Gyruss, Juno 1st, Son Son and The Simpsons.|$|R
40|$|This paper {{presents}} a content-based video query language CVQL for video databases. Spatial and temporal relationships of content objects {{are used for}} the specification of query predicates. Queries of realism are illustrated to show the power of CVQL. Macro definitions are supported to simplify query specification. Index structures and query processing for CVQL are considered, and a prototype video database system is implemented, which consists of a GUI and a CVQL <b>processor.</b> <b>Users</b> can sketch a query and its corresponding predicate by the GUI, and the query can then be converted to CVQL for processing. 1...|$|R
50|$|In {{addition}} to home computers and game consoles, the 6809 was also utilized {{in a number}} of arcade games released during the early to mid-1980s. Williams Electronics was an especially prolific <b>user</b> of the <b>processor,</b> which was deployed in arcade hits such as Defender, Joust, Sinistar, and Robotron: 2084. Williams also utilized the processor in many of its solid-state pinball machines; the 6809 CPU formed the core of the successful Williams Pinball Controller. The KONAMI-1 was a modified 6809 used by Konami in various arcade sets such as Mappy, Roc'n Rope, Gyruss, Juno 1st, Son Son and The Simpsons.|$|R
