425|48|Public
50|$|Agile <b>usability</b> <b>engineering</b> is {{a method}} created from a {{combination}} of agile software development and <b>usability</b> <b>engineering</b> practices. Agile <b>usability</b> <b>engineering</b> attempts to apply the principles of rapid and iterative development to the field of user interface design.|$|E
50|$|Many {{projects}} {{that are used in}} the agile software development process can benefit from agile <b>usability</b> <b>engineering.</b> Any project that cannot use models and representatives will have issues in an agile <b>usability</b> <b>engineering</b> environment, as the projects must be as light-weight as possible.|$|E
50|$|<b>Usability</b> <b>Engineering,</b> IEEE Software, January-February 2001.|$|E
3000|$|... usability: <b>usability,</b> human <b>engineering,</b> {{human factors}}, ergonomics, usage, user, ease of use, acceptability, user-computer interface, {{personal}} satisfaction, human factors engineering, validation testing, cognition, decision making, task performance and analysis, surveys and questionnaires, preference, handling study; [...]...|$|R
40|$|Abstract. Ensuring the {{long-term}} <b>usability</b> of <b>engineering</b> informatics (EI) artifacts is a challenge, particularly for products with longer life cycles than the computing {{hardware and software}} used for their design and manufacture. Addressing this challenge requires characterizing the nature of EI, defining metrics for EI sustainability, and developing methods for long-term EI curation...|$|R
50|$|The largest {{percentage}} of participants were professionals involved in <b>usability,</b> design, <b>engineering,</b> technology, research, product development, government, and marketing. However, there was strong outreach to general consumers and youth as well. The range of events addressed issues in healthcare, education, communications, government, and more. From the U.S. Census Bureau to voting machine technology, to accessibility regulations, and implementation worldwide, {{the concept of}} “Making life easy” was fully integrated into presentations.|$|R
50|$|Early {{implementations}} of <b>usability</b> <b>engineering</b> in user-centered design {{came into}} professional practice during the mid-late 1980s. Early implementations of agile software development {{evolved in the}} mid-1990s. It has only been within {{the past few years}} that the human-computer interaction community have seen widespread acceptance of agile <b>usability</b> <b>engineering.</b>|$|E
50|$|IEC 62366 was {{published}} {{for the first}} time in 2007.Subsequently in February 2015 it {{was published}} the IEC 62366-1:2015 Medical devices - Part 1: Application of <b>usability</b> <b>engineering</b> to medical devices.Subsequently, in May 2016 it was published the IEC/TR 62366-2 Ed 1, Medical devices - Part 2: Guidance on the application of <b>usability</b> <b>engineering</b> to medical devices.|$|E
5000|$|Lim, Kee Yong, and John B. Long. The MUSE {{method for}} <b>usability</b> <b>engineering.</b> Vol. 8. Cambridge University Press, 2009.|$|E
40|$|Personal {{computers}} {{offer the}} potential for significantly easing the task of energy conservation engineering and management. Effective use of these powerful tools, however, requires good software. This paper describes a number of techniques for maximizing the <b>usability</b> of <b>engineering</b> software. Areas discussed include program self-sufficiency, data entry procedures, presentation of output results, and program flexibility. A number of specific examples are presented, drawn from the energy conservation software project at the University of Texas at Austin...|$|R
50|$|The company {{focused on}} <b>usability</b> design, {{software}} <b>engineering,</b> product realization, technical consulting, sales and marketing. UIQ Technology, established in 1999, was owned jointly by Motorola and Sony Ericsson. It had a five-man board of directors, including two representatives from Motorola, two from Sony Ericsson, and one independent.|$|R
40|$|A {{balanced}} approach {{is needed for}} developing information security policies in Critical National Infrastructure (CNI) contexts. Requirements Engineering methods can facilitate such an approach, but these {{tend to focus on}} either security at the expense of usability, or vice-versa; it is also uncertain whether existing techniques are useful when the time available for applying them is limited. In this paper, we describe a case study where <b>Usability</b> and Requirements <b>Engineering</b> techniques were used to derive missing requirements for an information security policy for a UK water company following reports of the Stuxnet worm. We motivate and describe the approach taken while carrying out this case study, and conclude with three lessons informing future efforts to integrate Security, <b>Usability,</b> and Requirements <b>Engineering</b> techniques for secure system design. Keywords-personas; misuse cases; KAOS; CAIRIS; I...|$|R
5000|$|There {{are many}} books written on <b>Usability</b> <b>Engineering.</b> A {{few of the}} more popular {{recently}} published books are as follows: ...|$|E
50|$|When methods such {{as extreme}} {{programming}} and test driven development were introduced by Kent Beck, <b>usability</b> <b>engineering</b> had to become light-weight {{in order to work}} with agile environments. Individuals like Kent Beck have helped to shape the methodology of agile <b>usability</b> <b>engineering</b> by working on projects such as the Chrysler Comprehensive Compensation System. Such time-driven projects have helped individuals experience and understand the best methodologies to practice while working in an agile environment.|$|E
50|$|When <b>usability</b> <b>engineering</b> {{began to}} emerge as a {{distinct}} area of professional practice in the mid-to late 1980s, many usability engineers had a background in Computer Science or in a sub-field of Psychology such as Perception, Cognition or Human Factors. Today, these academic areas still serve as springboards for the professional practitioner of <b>usability</b> <b>engineering,</b> but Cognitive Science departments and academic programs in Human-Computer Interaction now also produce their share of practitioners in the field.|$|E
50|$|Usability is {{the ease}} of use and learnability of a human-made object such as a tool or device. In {{software}} <b>engineering,</b> <b>usability</b> {{is the degree to}} which a software can be used by specified consumers to achieve quantified objectives with effectiveness, efficiency, and satisfaction in a quantified context of use.|$|R
40|$|Usability and user {{experience}} are the cornerstones for building {{the web and}} mobile applications. My thesis research entails {{the design of a}} web application for a conceptual system design. The thesis focuses on the <b>usability</b> requirements, the <b>engineering</b> challenges encountered and the implementation using selected design patterns. The process of designing and developing a web interface is detailed...|$|R
40|$|The {{physical}} spaces we inhabit have {{a profound}} impact on psychological functioning. People generally experience positive outcomes in spaces that support important identities and negative outcomes in spaces that threaten those identities. We investigated the effects of working in an ingroup or outgroup space on organizational performance. Participants completed exercises in a simulated work environment {{as a member of a}} research education development (RED) work team. The office space was designed to be identity affirming (decorated by a RED team), identity threatening (decorated by a rival business legacy <b>usability</b> and <b>engineering</b> [BLUE] team), or undecorated. Work teams performed better in both ingroup spaces and outgroup spaces than in undecorated spaces. The findings highlight the importance of considering the impact of physical space on psychological functioning in the workplace and beyond...|$|R
50|$|It is {{important}} to remember that online tools are only a useful tool, and do not substitute for a complete <b>Usability</b> <b>Engineering</b> analysis.|$|E
50|$|The {{engineering}} of the {{human-machine interfaces}} {{is enhanced by}} considering ergonomics (human factors). The corresponding disciplines are human factors engineering (HFE) and <b>usability</b> <b>engineering</b> (UE), {{which is part of}} systems engineering.|$|E
5000|$|Some {{well-known}} {{practitioners in}} the field are Donald Norman, Jakob Nielsen, Deborah Mayhew and John M. Carroll. Nielsen and Carroll have both written books on the subject of <b>usability</b> <b>engineering.</b> Nielsen's book is aptly titled <b>Usability</b> <b>Engineering,</b> and was published in 1993. Carroll wrote Making Use: Scenario-Based Design of Human-Computer Interactions in 2000, and co-authored [...] "Usability Engineering: Scenario-Based Development of Human-Computer Interaction" [...] with Mary Beth Rossen in 2001. Some other field leaders are Alan Cooper, Larry Constantine and Steve Krug the author of [...] "Don't Make Me Think! A Common Sense Approach to Web Usability".|$|E
40|$|Personas have {{attracted}} {{the interest of}} many in the <b>usability</b> and software <b>engineering</b> communities. To date, however, {{there has been little}} work illustrating how personas can be integrated into software tools to support these engineering activities. This paper presents four guidelines that software engineering tools should incorporate to support the design and evolution of personas. These guidelines are grounded in our experiences modifying the open-source CAIRIS Require-ments Management tool to support design and development activities for the EU FP 7 webinos project...|$|R
40|$|The paper {{presents}} {{an analysis of}} SPC (Statistical Process Control) procedures <b>usability</b> in foundry <b>engineering.</b> The authors {{pay particular attention to}} the processes complexity and necessity of correct preparation of data acquisition procedures. Integration of SPC systems with existing IT solutions in area of aiding and assistance during the manufacturing process is important. For each particular foundry, methodology of selective SPC application needs to prepare for supervision and control of stability of manufacturing conditions, regarding specificity of data in particular “branches ” of foundry production (Sands, Pouring, Metallurgy, Quality) ...|$|R
40|$|By many, code cloning is {{nowadays}} {{recognized as}} a threat to the maintainability of source code. Many clone detection strategies have been proposed and a considerable number of removal strategies, mostly based on refactoring techniques, has been shown. However, recent research has showed that clones can often not be removed easily and other strategies, based on clone management need to be developed. In this thesis, a clone management strategy based on dynamic inferring of clone relations based on monitored clipboard activity is described. A tool is introduced that is able to track live changes to clones and offers several resolution strategies for inconsistently modified clones. The adequacy, usability and effectiveness of this Eclipse plug-in have been studied in an experiment, the results of which show that developers actually do see the added value of such a tool but have very strict requirements with respect to its <b>usability.</b> Electrical <b>Engineering,</b> Mathematics and Computer Scienc...|$|R
50|$|The core {{practices}} in agile modeling {{as described by}} Scott Ambler, help to describe the focus in agile <b>usability</b> <b>engineering.</b> The core {{practices in}}clude Validation, Teamwork, Simplicity, Motivation, Productivity, Documentation, and Iterative & Incremental.|$|E
50|$|<b>Usability</b> <b>engineering</b> is a {{field that}} is {{concerned}} generally with human-computer interaction and specifically with devising human-computer interfaces that have high usability or user friendliness. It provides structured methods for achieving efficiency and elegance in interface design.|$|E
50|$|He is {{best known}} for his books on design, {{especially}} The Design of Everyday Things. He is widely regarded for his expertise in the fields of design, <b>usability</b> <b>engineering,</b> and cognitive science. He is also a co-founder and consultant with the Nielsen Norman Group.|$|E
40|$|International audienceLayout design {{plays an}} {{important}} role in the design and <b>usability</b> of many <b>engineering</b> products and systems. Because of the great complexity of most of industrial layout problems, the decision of the acceptable layout is a hard and critical task since the special layout can have a significant consequence on the global performances. Thus, in order to propose to the designer an optimal spatial arrangement in a reasonable time, this paper develops an interactive optimization strategy that is tested on the facilities layout problem of a shelter. This problem is innovative because it introduces the concept of space of accessibility...|$|R
40|$|It {{has been}} {{reported}} that many software companies do not use existing requirements engineering approaches. This indicates that there is room and opportunity for improving the usability of existing requirements engineering approaches. This paper describes a market study intended to elicit a set of characteristics that could improve the <b>usability</b> of requirements <b>engineering</b> approaches. The survey is aimed toward software stakeholders such as developers, designers, customers, and managers at various software companies. The survey results are used to define a set of desirable characteristics for usable requirements engineering approaches and to suggest a set of guidelines that could help achieve the desirable characteristics...|$|R
40|$|Liberal {{revolutions}} {{involve a}} change in the availability of a resource from being centralized among a small elite to being distributed among many people. This paper reviews three liberal revolutions [...] in religion, politics, and economics [...] to examine the dynamics of change and to derive three general principles: (1) revolutions breed counter-revolutions, (2) revolutions require the appropriate conditions to succeed, and (3) revolutions in different domains influence one another. The paper then examines the role of usability in two on-going liberal revolutions [...] in technology and information. The operation of each of the principles is examined in order to determine ways to apply <b>usability</b> research and <b>engineering</b> most effectively...|$|R
50|$|Several broad {{disciplines}} including Psychology, Human Factors and Cognitive Science subsume <b>usability</b> <b>engineering,</b> but {{the theoretical}} {{foundations of the}} field come from more specific domains: human perception and action; human cognition; behavioral research methodologies; and, to a lesser extent, quantitative and statistical analysis techniques.|$|E
50|$|The term <b>usability</b> <b>engineering</b> (in {{contrast}} to interaction design and user experience design) implies {{more of a}} focus on assessing and making recommendations to improve usability than it does on design. However, Usability Engineers may still engage in design to some extent, particularly through the design of wire-frames or other prototypes.|$|E
50|$|In systems engineering, {{the system}} {{usability}} scale (SUS) is a simple, ten-item attitude Likert scale giving a global view of subjective assessments of usability. It {{was developed by}} John Brooke at Digital Equipment Corporation in the UK in 1986 {{as a tool to}} be used in <b>usability</b> <b>engineering</b> of electronic office systems.|$|E
40|$|Software {{engineering}} (SE) problems {{reduced to}} logic problems • Automation, <b>engineering,</b> <b>usability</b> of SE tools through solvers High-level {{description of the}} SAT/SMT problem & logics • Rich logics close to program semantics • Demonstrably easy to solve in many practical cases Modern SAT solver architecture & techniques • DPLL search, shortcomings • Modern CDCL SAT solver: propagate (BCP), decide (VSIDS), conflict analysis, clause learn, backJump, • Termination, correctness • Big lesson: learning from mistakes Topics covered in Lecture 2 • Modern SMT solver architecture & techniques • Rich logics closer to program semantics • DPLL(T), Combinations of solvers, Over/under approximations • My own contributions: STP & HAMPI • Abstraction-refinement for solving • Bounded logics • SAT/SMT-based application...|$|R
40|$|Ensuring the {{long-term}} <b>usability</b> of <b>engineering</b> informatics (EI) artifacts is a challenge, particularly for products with longer lifecycles than the computing {{hardware and software}} used for their design and manufacture. Addressing this challenge requires characterizing the nature of EI, defining metrics for EI sustainability, and developing methods for long-term EI curation. In this paper we highlight various issues related to long-term archival of EI and describe the work towards methods and metrics for sustaining EI. We propose an approach to enhance the Open Archival Information System (OAIS) functional model to incorporate EI sustainability criteria, Digital Object Prototypes (DOPs), and end user access requirements. We discuss the end user’s requirements {{from the point of}} view of reference, reuse and rationale – the “ 3 Rs ” – to better understand the level of granularity and abstractions required in the definition of engineering digital objects. Finally we present a proposed case study and experiment. The International Journal of Digital Curation is an international journal committed to scholarly excellence and dedicated to the advancement of digital curation across a wide range of sectors. ISSN: 1746 - 8256 The IJDC i...|$|R
40|$|International audienceComponent and {{facility}} layout {{plays an important}} role in the design and <b>usability</b> of many <b>engineering</b> products and systems as mechanical design, process plan, management and architecture including ship compartment layout. Generally, layout problems are formulated and solved on a case by case basis and, as far as we know, there is no general method to specify the similarities and characteristics of each problem. Then, this paper proposes an innovative generic approach in order to describe, formulate and solve layout problems. This approach suggests in particular a new classification of layout components, introducing the concept of "virtual" component. Moreover, in order to propose to the designer an optimal spatial arrangement in a reasonable time, this paper presents an interactive optimization strategy for solving layout problems...|$|R
