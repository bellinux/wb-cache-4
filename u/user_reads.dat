38|1168|Public
2500|$|Serial flash is a small, {{low-power}} {{flash memory}} that provides only serial {{access to the}} data - rather than addressing individual bytes, the <b>user</b> <b>reads</b> or writes large contiguous groups of bytes in the address space serially. Serial Peripheral Interface Bus (SPI) is a typical protocol for accessing the device.|$|E
5000|$|If {{the beacon}} is {{embedded}} in an email, the image is requested when the <b>user</b> <b>reads</b> the email for the first time, and can also be requested every time that the user subsequently loads the email; ...|$|E
5000|$|Load-link/store-conditional encodes {{this pattern}} more directly: the <b>user</b> <b>reads</b> the {{location}} with load-link, computes a new value to write, and writes it with store-conditional; if the value has changed concurrently, the SC (store-conditional) will fail and the user tries again.|$|E
5000|$|Know {{about the}} users and their tasks (Interviewing <b>users,</b> <b>reading</b> workbooks and taking {{training}} sessions) ...|$|R
40|$|We {{propose a}} new method for {{personalized}} webpage recommendation. The method {{is capable of}} inferring a <b>user’s</b> personal <b>reading</b> interest distribution according to implicit user feedbacks coming from the <b>user’s</b> past online <b>reading</b> activities. With the inferred <b>user</b> <b>reading</b> interest distribution, we can recommend webpages in a search result set to a user in a personalized way. Our method is featured by its novel approach to observe the facial expressions and gaze positions of a user during the <b>user’s</b> online <b>reading</b> activities as two types of implicit user feedbacks for estimating the <b>user’s</b> <b>reading</b> interest distribution. To capture these implicit user feedbacks, we use an ordinary web camera and a customized web browser in the setup. The setup allows us to measure {{the distribution of the}} <b>reading</b> time a <b>user</b> spends in his or her reading activities over materials of different contents. With all the captured information, our method then estimates a <b>user’s</b> <b>reading</b> interest distribution by finding correlations between the implicit feedbacks of a user with the contents of the read materials. Given the estimated <b>user</b> <b>reading</b> interest distribution, our algorithm can further predict the <b>user’s</b> potential <b>reading</b> interest in any new webpage. Consequently, our algorithm can produce a personalized webpage recommendation for all the result webpages in an online search session. We compared the performance of our method with that of several mainstream commercial search engines as well as a recent personalized webpage ranking algorithm. The comparison results clearly show the superiority of our new method for personalized webpage recommendation...|$|R
5000|$|Reading Plans: Hundreds {{of plans}} help <b>users</b> <b>read</b> the Bible {{regularly}} by serving up daily selections of Scripture.|$|R
50|$|SearchFox offers {{personalized}} RSS feeds which customize {{according to}} user preferences. The service analyzes feeds that a <b>user</b> <b>reads,</b> and then recommends other feeds that may interest the reader. The website {{also has a}} collaborate search engine, which visitors can use to share favorite links among friends and create personalized search indices for their own convenience.|$|E
5000|$|Compare-and-swap {{writes a}} new value into a {{location}} {{only if the}} latter's contents matches a supplied old value. This is commonly used in a read-modify-CAS sequence: the <b>user</b> <b>reads</b> the location, computes a new value to write, and writes it with a CAS (compare-and-swap); if the value changes concurrently, the CAS will fail and the user tries again.|$|E
50|$|Another example {{would be}} a site that {{explains}} a product by making the user click through 4-5 pages of overview/benefits information before revealing {{the price of the}} product. The idea here is that if the <b>user</b> <b>reads</b> the product information, they will accept the price more easily. The problem with that approach {{is that it does not}} accommodate free-form exploration, a typical behavior on the web.|$|E
25|$|Transmitting {{information}} about the <b>user's</b> <b>reading</b> habits and browsing activities to various websites. Web pages frequently do this for Web analytics, ad tracking, personalization or other purposes.|$|R
5000|$|Suggest which {{scientific}} {{article to}} read next, {{based on a}} Bayesian model built upon text fingerprints and <b>user's</b> <b>reading</b> list or papers ranking (Text Analytics, Data Modeling) ...|$|R
5000|$|Transmitting {{information}} about the <b>user's</b> <b>reading</b> habits and browsing activities to various websites. Web pages frequently do this for Web analytics, ad tracking, personalization or other purposes.|$|R
5000|$|Infocom {{games are}} text adventures where users direct the action by {{entering}} short strings of words to give commands when prompted. Generally {{the program will}} respond by describing {{the results of the}} action, often the contents of a room if the player has moved within the virtual world. The <b>user</b> <b>reads</b> this information, decides what to do, and enters another short series of words. Examples include [...] "go west" [...] or [...] "take flashlight".|$|E
50|$|Access cards {{themselves}} have proven vulnerable to sophisticated attacks. Enterprising hackers have built portable readers that capture the card number from a user’s proximity card. The hacker simply walks by the <b>user,</b> <b>reads</b> the card, and then presents {{the number to}} a reader securing the door. This is possible because card numbers are sent in the clear, no encryption being used. To counter this, dual authentication methods, such as a card plus a PIN should always be used.|$|E
50|$|At the {{beginning}} of the call, both users get the same session key by using the hash function. Then the session key becomes a confirm code. The confirm code could be 3 letters or 4 numbers, depending on the phone's manufacturer. In the crypto mode, the <b>user</b> <b>reads</b> the confirm code over the encrypted line to his communication partner and verifies the confirm code his partner reads back. If there is a discrepancy in the confirm code, a man-in-the-middle attack has been detected.|$|E
40|$|It {{has always}} been {{difficult}} to determine to what extent a <b>user</b> has <b>read</b> a page especially {{in the area of}} educational adaptive hypermedia systems. We propose the use of an individual’s effective reading speed to estimate how much of a page a <b>user</b> has <b>read</b> during their browsing activity. This method is currently used to apply history-based link annotation in a medical web-based learning application, JointZone. A validation test of this work has shown a positive result in approximating <b>user’s</b> <b>reading</b> value when compared to conventional methods...|$|R
50|$|A2-Central On Disk: a disk based {{version of}} the newsletter, with {{supplemental}} materials to help blind <b>users</b> <b>read</b> the magazine, as well as selected shareware and freeware. Edited by Dean Esmay.|$|R
40|$|We {{propose a}} new {{personalized}} document summarization method, which observes a <b>user’s</b> <b>reading</b> behaviors, including <b>user</b> facial expressions, gaze positions, and reading durations, during {{his or her}} past reading activities to infer the <b>user’s</b> personal <b>reading</b> preferences. Once a <b>user’s</b> personal <b>reading</b> preferences are derived, our algorithm can then automatically generate document summarization in a personalized way. We compare the performance of our algorithm {{with that of a}} few peer algorithms and software packages. The result of our comparative study shows that our algorithm can produce superior personalized document summaries than those peer methods in that the automatic document summarization generated by our algorithm can better satisfy a user’s personal preferences...|$|R
5000|$|Beelinguapp works {{under two}} {{concepts}} it calls [...] "Side by Side Reading" [...] and [...] "Karaoke Reading". The [...] "Side by Side Reading" [...] shows the user a text {{in a split}} screen in two languages side by side, the idea being that the <b>user</b> <b>reads</b> a text in the language being practiced but can always use their native language as a reference. [...] "Karaoke Reading" [...] means that the audio will be playing while the user is reading and a karaoke-style animation will be shown in both the learning and reference languages.|$|E
50|$|Web beacons {{are used}} by email marketers, spammers, and phishers to verify that email {{addresses}} are valid, that the content of emails has made it past the spam filters, and that the email is actually viewed by users. When the <b>user</b> <b>reads</b> the email, the email client requests the image, letting the sender know that the email address is valid and that the email was viewed. The email need not contain an advertisement or anything else related to the commercial activity of the sender. This makes detection of such emails harder for mail filters and users.|$|E
5000|$|Coda uses a local cache {{to provide}} access to server data when the network {{connection}} is lost. During normal operation, a <b>user</b> <b>reads</b> and writes to the file system normally, while the client fetches, or [...] "hoards", all of the data the user has listed as important in the event of network disconnection. If the network connection is lost, the Coda client's local cache serves data from this cache and logs all updates. This operating state is called disconnected operation. Upon network reconnection, the client moves to reintegration state; it sends logged updates to the servers. Then it transitions back to normal connected-mode operation.|$|E
50|$|Information {{is broken}} into chunks, and an {{algorithm}} (usually computer software) organises the <b>user's</b> <b>reading</b> and calculates the ideal {{time for the}} reader to review each chunk. The method itself is often credited to the Polish software developer Piotr Wozniak.|$|R
40|$|We develop {{hierarchical}} Poisson matrix factorization (HPF) for recommendation. HPF models sparse user behavior data, large user/item matrices {{where each}} user has provided feed-back on {{only a small}} subset of items. HPF handles both ex-plicit ratings, such {{as a number of}} stars, or implicit ratings, such as views, clicks, or purchases. We develop a variational algorithm for approximate posterior inference that scales up to massive data sets, and we demonstrate its performance {{on a wide variety of}} real-world recommendation problems–users rating movies, users listening to songs, <b>users</b> <b>reading</b> scien-tific papers, and <b>users</b> <b>reading</b> news articles. Our study re-veals that hierarchical Poisson factorization definitively out-performs previous methods, including nonnegative matrix factorization, topic models, and probabilistic matrix factor-ization techniques. 1...|$|R
5000|$|EmailTray lets <b>users</b> <b>read</b> and compose new {{messages}} in plain text or HTML, view attachments and attach files to messages. Users can also forward email messages, reply to emails {{and create an}} unlimited number of custom signatures {{that can be used}} in new messages and email replies.|$|R
5000|$|For example, {{an email}} {{sent to the}} address [...] can contain the {{embedded}} image of URL [...] Whenever the <b>user</b> <b>reads</b> the email, the image at this URL is requested. The part of the URL after the question mark is ignored by the server {{for the purpose of}} determining which file to send, but the complete URL is stored in the server's log file. As a result, the file [...] is sent and shown in the email reader; at the same time, the server stores the fact that the particular email sent to [...] has been read. Using this system, a spammer or email marketer can send similar emails to a large number of addresses to check which ones are valid and read by the users.|$|E
5000|$|Although it is {{essentially}} an interactive tool, SPUFI operates using a pair of datasets. (A dataset on z/OS is equivalent to a file on other operating systems.) In the main SPUFI screen one specifies an input dataset and an output dataset; these can be specified once and then reused repeatedly. When the user moves on from the main screen, the standard ISPF editor is opened on the input dataset. At this point the user can enter the required SQL statements using the familiar editor. On exiting from the editor the main SPUFI screen reappears; when the user moves on this time {{the contents of the}} input dataset are executed. The results are placed in the output dataset and the ISPF editor is opened (in read-only [...] "browse" [...] mode) on that output. This is how the <b>user</b> <b>reads</b> their results. Interactive use of SPUFI continues around these steps; in summary the cycle is: ... Main -> edit -> Main -> view output -> Main -> edit -> Main -> view output -> Main ...|$|E
30|$|Rety et al. (2008) {{present a}} {{framework}} for interactive narrative authoring {{in the domain of}} virtual storytelling where a user is provided with navigation choices in an interactive narrative. The framework is based on a generalised concept of a section, which is close to a subject in our description. A subject consists of hierarchically structured fragments (a statement in our description). A statement is defined as an atomic content element containing simple text and possibly other media. A statement may also be composed recursively and consist of a set of statements, a behaviour and a termination property. Behaviour can be set by an author as either deterministic to indicate that a <b>user</b> <b>reads</b> in the order of subjects or as non-deterministic to indicate that a <b>user</b> <b>reads</b> with no predefined order. A termination property is a condition that an author sets to determine when a subject terminates. A user then moves on to a following subject. A <b>user</b> <b>reads</b> an interactive narrative created in this framework by successively accessing statements in a subject.|$|E
30|$|Our {{analysis}} shows that {{both types of}} hierarchy satisfying the minimal heuristic criteria have comparable public storage requirements in practice. The resource-based hierarchies are more efficient in terms of computation and communication costs {{with respect to the}} dynamic operations such as extending and revoking a <b>user’s</b> <b>read</b> access authorization.|$|R
50|$|The Golden Triangle is {{the area}} of the page where <b>users</b> <b>read</b> the title and the {{description}} of each search result which eventually results in higher click-through rates. For marketing purposes, getting a website into the Golden Triangle of any search result page is the key to increasing traffic to a site.|$|R
5000|$|A {{user account}} {{policy is a}} {{document}} which outlines the requirements for requesting and maintaining an account on computer systems or networks, typically within an organization. It {{is very important for}} large sites where users typically have accounts on many systems. Some sites have <b>users</b> <b>read</b> and sign an account policy as part of the account request process.|$|R
40|$|E-book is a {{fast growing}} service for mobile Internet. A <b>user</b> <b>reads</b> e-books through an {{e-reader}} {{that could be}} a dedicated reading device or a mobile application on the smartphones or the tablets. With content protection of Digital Right Management (DRM), e-books take longer chapter loading time due to necessary data decryption. This paper propose a mechanism that preloads a small number of chapters into the buffer for DRM-protected e-books. When the <b>user</b> <b>reads</b> a chapter in the buffer, our solution reduces the user waiting time without affecting existing content protection. We also analyze the buffer replacement cost and effects of the limited buffer resource. Keywords: buffer management, e-book, e-reader, preload, waiting time, Zipf’s la...|$|E
40|$|Index Terms—machine learning, natural {{language}} processing, SVM, community detection, matrix completion, clustering, WE We explore several techniques for predicting <b>user</b> <b>reads</b> on Pulse, a newsreader app for mobile devices. Accurately predicting reads could allow the application to personalize newsfeeds for each user by presenting stories mos...|$|E
40|$|The authors combine {{principles}} from software inspection, use cases, {{and operational}} profile testing {{to create the}} usage-based reading technique, in which the <b>user</b> <b>reads</b> a design document guided by prioritized use cases. UBR takes the user's viewpoint on software and the faults it might contain. Evaluation showed that the method is more effective and efficient in finding faults that are critical to the user than are checklist-based methods...|$|E
50|$|Solaris Trusted Extensions {{enforce a}} {{mandatory}} access control policy on {{all aspects of the}} operating system, including device access, file, networking, print and window management services. This is achieved by adding sensitivity labels to objects, thereby establishing explicit relationships between these objects. Only appropriate (and explicit) authorization allows applications and <b>users</b> <b>read</b> and/or write access to the objects.|$|R
5000|$|... awp Finanznachricten publishes in all leading {{financial}} information {{systems such as}} Bloomberg, Factset, Interactive Data, SIX Financial Information, SunGard, Thomson Reuters and Vereinigte Wirtschaftsdienste (vwd). More than 30.000 professional <b>users</b> <b>read</b> awp news daily, inclusively many Internet platforms and web portals. In addition, several Swiss print media rely {{on the stock market}} comments and background reports on awp Finanznachrichten.|$|R
5000|$|Nero SecurDisc Viewer: {{this tool}} enables <b>users</b> to <b>read</b> discs created with SecurDisc.|$|R
