139|1430|Public
25|$|BCIs {{are also}} {{proposed}} {{to be applied}} by users without disabilities. A user-centered categorization of BCI approaches by Thorsten O. Zander and Christian Kothe introduces the term passive BCI. Next to active and reactive BCI that are used for directed control, passive BCIs allow for assessing and interpreting changes in the <b>user</b> <b>state</b> during Human-Computer Interaction (HCI). In a secondary, implicit control loop the computer system adapts to its user improving its usability in general.|$|E
5000|$|Files and Settings Transfer Wizard and <b>User</b> <b>State</b> Migration Tool ...|$|E
5000|$|The applet {{naturally}} {{supports the}} changing <b>user</b> <b>state,</b> such as figure {{positions on the}} chessboard.|$|E
50|$|Amstrad Computer <b>User</b> <b>stated</b> the Amstrad CPC {{version is}} ″not an outstandingly good game, or an {{absolutely}} crummy one either″.|$|R
40|$|Abstract. We {{discuss a}} generic {{architecture}} for building user-centric systems. The characteristic feature of such systems is a control loop that monitors the <b>user’s</b> <b>state,</b> and produces a harmonized response. In order to adaptively respond to {{changes of the}} <b>user’s</b> <b>state,</b> we propose an architecture with supervising loops. This allows the primary control loop to be written in a straight-forward way, and add adaptivity on a different level. We illustrate our approach with an example scenario that describes computer vision based adaptive interaction...|$|R
40|$|A {{method and}} system are {{provided}} that prioritize {{the output of}} an image triage {{that is based on}} rapid serial visual presentation. User responses and estimates of the effectiveness with which each image is likely to have been processed by a user are employed for post triage image prioritization of potential targets. Images associated with a user response, processed during optimal <b>user</b> <b>states,</b> are assigned the highest priority for post triage examination, as targets are likely. Images without a user response that are processed during optimal <b>user</b> <b>states</b> are assigned the lowest priority, as these are unlikely to contain targets. Images with a user response that are processed during suboptimal states are assigned a medium priority, as these are likely to contain a high number of false positives. Images without a user response, processed during suboptimal <b>user</b> <b>states</b> are flagged for reprocessing as these may contain targets that the user may not have detected...|$|R
50|$|SLT {{provides}} ADSL2+ fixed broadband with {{speeds up}} to 16Mbit/s under 6 packages which are Light User, Family, SME Business, Business (Heavy <b>User),</b> <b>State</b> Sector & Higher Education.|$|E
50|$|Because ChatScript is {{designed}} for interactive conversation, it automatically maintains <b>user</b> <b>state</b> across volleys. A volley is any number of sentences the user inputs at once and the chatbots response.|$|E
50|$|Also {{included}} in Windows Vista is an improved {{version of the}} Files and Settings Transfer Wizard now known as Windows Easy Transfer which allows settings to be inherited from previous installations. <b>User</b> <b>State</b> Migration Tool allows migrating user accounts during large automated deployments.|$|E
50|$|On 28 July 2017, Google commemorated Namatjira's 115th {{birthday}} with a featured Doodle for Australian <b>users,</b> <b>stating</b> his substantial {{contributions to}} the art and culture of Australia as inspiring the Doodle.|$|R
5000|$|On February 3, 2015, Google sent {{a system}} message to <b>users</b> <b>stating,</b> [...] "Google Talk app for Windows will stop working on Feb 16 2015. It is {{replaced}} by the new Hangouts Chrome app." ...|$|R
50|$|However, many <b>users</b> <b>stated</b> {{that this}} is the biggest push factor to inflate, as the sellers now demand higher prices before selling an item (in order {{to make up for the}} loss of in-game money through tax system). Also, some <b>users</b> <b>state</b> that the {{inflation}} will eventually stop without the interference of the game developer. They claim that as more players achieve high levels, they would be able to hunt more monsters and deliver more equipment. Like the real world, the economy of online games are based on supply and demand. When more items are released into the market, it pushes the supply up, resulting in cheaper goods.|$|R
50|$|WAIK for Windows 7 {{includes}} <b>User</b> <b>State</b> Migration Tool v4.0, a command-line interface {{tool for}} transferring Windows user settings from one installation to another {{as part of}} an operating system upgrade or wipe-and-reload recovery, for example, to clean out a rootkit. USMT v4.0 can transfer the settings from Microsoft Windows XP or later to Microsoft Windows Vista and later.|$|E
5000|$|All of the {{solutions}} {{in the set}} that fulfill the need have their own characteristics; some are good and suitable for the user, others unsuitable and unacceptable - for example, if the user is in a train and {{wants to know what}} the result from a tennis match is right now, he/she may only use the types of solutions to the problem that are available to him/her. The [...] "user state" [...] determines the set of available/suitable solutions for the user and thus limits the (available) set of possible solutions to fulfill the user need. The <b>user</b> <b>state</b> is a very wide concept, it is the user characteristics {{at the time of the}} need. The <b>user</b> <b>state</b> includes, e.g., age, wealth, location ... everything that determines the state of the user in relation to {{the solutions}} in the set of the possible solutions to fulfill the user need.|$|E
50|$|This is a {{stateless}} {{authentication mechanism}} as the <b>user</b> <b>state</b> is never saved in server memory. The server's protected routes will {{check for a}} valid JWT in the Authorization header, and if it's present, the user {{will be allowed to}} access protected resources. As JWTs are self-contained, all the necessary information is there, reducing the need to query the database multiple times.|$|E
40|$|Context-aware {{computing}} {{describes the}} situation where a wearable / mobile computer is aware of its <b>user’s</b> <b>state</b> and surroundings and modifies its behavior based on this information. We de-signed, implemented and evaluated a wearable system which can learn context-dependent per-sonal preferences by identifying individual <b>user</b> <b>states</b> and observing how the user interacts with the system in these states. This learning occurs online and does not require external supervision. The system relies on techniques from machine learning and statistical analysis. A case study in-tegrates the approach in a context-aware mobile phone. The {{results indicate that the}} method is able to create a meaningful user context model while only requiring data from comfortable wearable sensor devices...|$|R
40|$|In this paper, {{we report}} on {{classification}} results for emotional <b>user</b> <b>states</b> (4 classes, German database of children interacting with a pet robot). Six sites computed acoustic and linguistic features independently from each other, following in part different strategies. A total of 4244 features were pooled together and grouped into 12 low level descriptor types and 6 functional types. For each of these groups, classification results using Support Vector Machines and Random Forests are reported for the full set of features, and for 150 features each with the highest individual Information Gain Ratio. The performance for the different groups varies mostly between ≈ 50 % and ≈ 60 %. Index Terms: emotional <b>user</b> <b>states,</b> automatic classification, feature types, functional...|$|R
40|$|SMAK Stella Maris had {{not have}} a modern {{database}} information system. The recording system was done by using Microsoft Excel therefore inputting data redundancy may occur. This problem made difficulties of finding the most valid data. Making subject timetable is done manually by vice principal (curriculum affair). Student enrollment had not been done online. This process was not efficient and effective enough to run the business process. To overcome the problem, a web based academic information system at SMAK Stella Maris Surabaya is designed. The application covers making subject timetable, online student enrollment, grading, and student report. This application is made using PHP programming language and MySQL database. The test result shows that this application meets SMAK Stella Maris need. The time taken in processing student report is usually {{a few days and}} now has been significantly reduced, and can be printed directly. According to the survey given to the users about the Menu, 100 % of the <b>users</b> <b>state</b> very good. For the level of data accuration, 80 % of the <b>users</b> <b>state</b> very good. For the benefit of the application in getting information, 100 % of the <b>users</b> <b>state</b> very good...|$|R
50|$|Windows AIK Version 2.0 was {{released}} with Windows 7 beta. Significantly, a single new tool, DISM, replaced several earlier tools including PEImg and IntlCfg, which were deprecated. <b>User</b> <b>State</b> Migration Tool (USMT) {{was added to}} this version of WAIK. Supported operating systems include Windows Server 2003 R2 SP2, Windows Vista SP1, Windows Server 2008, Windows 7 and Windows Server 2008 R2.|$|E
50|$|BCIs {{are also}} {{proposed}} {{to be applied}} by users without disabilities. A user-centered categorization of BCI approaches by Thorsten O. Zander and Christian Kothe introduces the term passive BCI. Next to active and reactive BCI that are used for directed control, passive BCIs allow for assessing and interpreting changes in the <b>user</b> <b>state</b> during Human-Computer Interaction (HCI). In a secondary, implicit control loop the computer system adapts to its user improving its usability in general.|$|E
50|$|Even-tagged {{words are}} user data {{which can be}} {{modified}} by a user program as <b>user</b> <b>state.</b> Odd-tagged words are created and used directly by the hardware and represent a program's execution state. Since these words are created and consumed by specific instructions or the hardware, the exact format of these words can change between hardware implementation and user programs {{do not need to}} be recompiled, since the same code stream will produce the same results, even though system word format may have changed.|$|E
40|$|Music {{is a way}} {{of expressing}} our {{feelings}} and emotions. Suitable music can positively affect people. However, current multimedia control methods, such as manual selection or automatic random mechanisms, which are now applied broadly in MP 3 and CD players, cannot adaptively select suitable music according to the <b>user’s</b> physiological <b>state.</b> In this study, a brain computer interface-based smart multimedia controller was proposed to select music in different situations according to the <b>user’s</b> physiological <b>state.</b> Here, a commercial mobile tablet was used as the multimedia platform, and a wireless multi-channel electroencephalograph (EEG) acquisition module was designed for real-time EEG monitoring. A smart multimedia control program built in the multimedia platform was developed to analyze the user’s EEG feature and select music according his/her state. The relationship between the <b>user’s</b> <b>state</b> and music sorted by listener’s preference was also examined in this study. The experimental results show that real-time music biofeedback according a user’s EEG feature may positively improve the <b>user’s</b> attention <b>state...</b>|$|R
40|$|Abstract—Context-aware {{computing}} {{describes the}} situation where a wearable/mobile computer is aware of its <b>user’s</b> <b>state</b> and surroundings and modifies its behavior based on this information. We designed, implemented, and evaluated a wearable system which can learn context-dependent personal preferences by identifying individual <b>user</b> <b>states</b> and observing how the user interacts with the system in these states. This learning occurs online and does not require external supervision. The system relies on techniques from machine learning and statistical analysis. A case study integrates the approach in a context-aware mobile phone. The {{results indicate that the}} method is able to create a meaningful user context model while only requiring data from comfortable wearable sensor devices. Index Terms—Location-dependent and sensitive, wearable computers, mobile computing, machine learning, wearable AI, statistical models. ...|$|R
40|$|Paper {{presented}} at the International Conference on Physiological Computing Systems (PhyCS), Lisbon, Portugal. Physiological measures have a key advantage as they can provide an insight into human feelings that the subjects {{may not even be}} consciously aware of. However, modeling <b>user</b> affective <b>states</b> through pysiology still remains with critical questions especially on the relevant physiological measures for real-life emotionally intelligent applications. In this study, we propose the use of typicality degrees defined according to cognitive science and psychology principles to measure the relevance of the physiological features in characterizing <b>user</b> affective <b>states.</b> Thanks to the typicality degrees, we found consistent physiological characteristics for modeling <b>user</b> affective <b>states.</b> Physiological measures have a key advantage as they can provide an insight into human feelings that the subjects may not even be consciously aware of. However, modeling <b>user</b> affective <b>states</b> through pysiology still remains with critical questions especially on the relevant physiological measures for real-life emotionally intelligent applications. In this study, we propose the use of typicality degrees defined according to cognitive science and psychology principles to measure the relevance of the physiological features in characterizing <b>user</b> affective <b>states.</b> Thanks to the typicality degrees, we found consistent physiological characteristics for modeling <b>user</b> affective <b>states...</b>|$|R
50|$|The <b>User</b> <b>State</b> Migration Tool (USMT) is a Microsoft {{command line}} utility program {{intended}} to allow advanced users, comfortable with Scripting languages, to transfer files and settings between PCs. This task is also performed by Windows Easy Transfer, recommended for general users. USMT supports the high-volume, automated deployment of files and settings from Microsoft Windows versions 2000, XP, Vista and Windows 7 and {{is useful in}} migrating user settings and files during OS upgrades. 32-bit to 64-bit migrations are supported, but 64-bit to 32-bit are not.|$|E
5000|$|Branch {{instructions}} include standard S/360 Branch on Condition. Instead of [...] "Branch and Link" [...] {{the instruction}} set uses [...] "Branch and Store" [...] (BASR, X'0D', and BAS, X'4D') which functions similarly except that a 16 bit link address is stored. [...] "Set PSW" [...] (SPSW, X'B1'), which loads a 32 bit Program Status Word (PSW) replaces the standard [...] "Load PSW". The Model 20 has {{no concept of}} privileged instructions or a distinction between supervisor state and <b>user</b> <b>state</b> so SPSW is available to user programs.|$|E
50|$|Puppy 1 {{series will}} run comfortably on very dated hardware, {{such as a}} Pentium {{computer}} with at least 32 MB RAM. For newer systems, the USB keydrive version might be better (although if USB device booting is not directly supported in the BIOS, the Puppy floppy boot disk {{can be used to}} kick-start it). It is possible to run Puppy Linux with Windows 9x/Windows Me. It is also possible, if the BIOS does not support booting from USB drive, to boot from the CD and keep <b>user</b> <b>state</b> on a USB keydrive; this will be saved on shutdown and read from the USB device on bootup.|$|E
50|$|Contrast {{this with}} a {{traditional}} FTP server that conducts an interactive session with the user. During the session, a user is provided a means to be authenticated and set various variables (working directory, transfer mode), all stored on the server {{as part of the}} <b>user's</b> <b>state.</b>|$|R
40|$|Constraint {{programming}} {{is a powerful}} paradigm for solving combinatorial search problems that draws {{on a wide range}} of techniques from artificial intelligence, operations research, algorithms, graph theory and elsewhere. The basic idea in constraint {{programming is}} that the <b>user</b> <b>states</b> the constraints and a general purpose constrain...|$|R
5000|$|One user {{searches}} for [...] "north carolina car insurance" [...] {{and a second}} user {{searches for}} [...] "maine car insurance." [...] An advertiser bidding on car insurance keywords in both states can use dynamic keyword insertion to insert the <b>user's</b> <b>state</b> on-the-fly. (see image to the right) ...|$|R
5000|$|The model supposes {{that after}} the user need has defined the set of {{possible}} solutions that fulfill the user need and the <b>user</b> <b>state</b> has limited the set to the available plausible solutions that fulfill the user need the user will [...] "select" [...] a solution from the set to fulfill the need. Obviously if the set is empty the user {{does not have a}} way to fulfill the need. The lazy user model assumes that the user will make the selection from the limited set based on the lowest level of effort. Effort is understood as the combination of monetary cost + time needed + physical/mental effort needed.|$|E
50|$|For Windows 2000, Microsoft had {{developed}} the <b>User</b> <b>State</b> Migration Tool command line utility that allowed users of Windows 95, Windows 98, and Windows NT 4.0 to migrate their data and settings to the newer operating system; the command-line tool {{did not provide}} a graphical user interface. An additional migration tool, titled Files and Settings Transfer Wizard, was developed for Windows XP. FSTW was designed to assist users of the operating system in migrating their data and settings from Windows 98 and Windows Me. FSTW could be launched from the Windows XP CD-ROM and presented options to transfer data and settings via a direct cable connection, a 3.5-inch floppy, a zip disk, or a network connection. Moreover, an option to create a wizard disk was available {{that could be used}} to initiate the migration process on an earlier system.|$|E
50|$|MCSs are {{items of}} {{software}} worth noting - they control user sessions and provide {{keeping track of}} <b>user</b> <b>state</b> without having to run per-user processes since a single MCS stack can be shared by many users. Load balancing can also be achieved at the MCS level. For example, saying {{that you want to}} handle 30 users per stack, in which case if you have 31 to 60 users, you have two stacks, 61 to 90 users, three stacks, etc. This gives B5000 machines a great performance advantage in a server since you don't need to start up another user process and thus create a new stack each time a user attaches to the system. Thus you can efficiently service users (whether they require state or not) with MCSs. MCSs also provide the backbone of large-scale transaction processing.|$|E
40|$|Intelligent user {{assistance}} systems face challenges of incomplete, uncertain and multiple modality sensory observations, <b>user’s</b> changing internal <b>state,</b> and constraints in making decisions. We introduce a probabilistic framework to dynamically model <b>user’s</b> affective <b>state</b> in such systems. A systematic mechanism performs purposive and sufficing information integration to infer <b>user’s</b> affective <b>state</b> and provide correct assistance. We aim to actively infer the user’s status {{and engage in}} appropriate assistance in a timely and efficient manner. 1...|$|R
30|$|We {{developed}} eCODES, a Web-based decision aid for surrogate {{decision makers}} of patients receiving prolonged mechanical ventilation. eCODES was highly usable and {{acceptable to the}} target audience based on a standard rating tool. Overall, 93 % of <b>users</b> <b>stated</b> that they preferred eCODES to a printed decision aid.|$|R
40|$|Modern {{smartphones}} {{are powerful}} platforms {{that have become}} part of the everyday life for most people. Thanks to their sensing and computing capabilities, smartphones can unobtrusively identify simple <b>user</b> <b>states</b> (e. g., location, performed activity, etc.), enabling a plethora of applications that provide insights on the lifestyle of the users. In this paper, we introduce routineSense: a system for the automatic reconstruction of complex daily routines from simple <b>user</b> <b>states,</b> implemented as an incremental processing framework. Such framework combines opportunistic sensing and user feedback to discover frequent and exceptional routines {{that can be used to}} segment and aggregate multiple user activities in a timeline. We use a comprehensive dataset containing rich geographic information to assess the feasibility and performance of routineSense, showing a near threefold improvement on the current state-of-the-art...|$|R
