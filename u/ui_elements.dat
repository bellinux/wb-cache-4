159|36|Public
25|$|The outline font manager {{provides}} anti-aliasing of fonts. RISC OS was {{the first}} operating system to include such a feature, having included it since before January 1989. Since 1994, in RISC OS 3.5, it has been possible to use an outline anti-aliased font in the WindowManager for <b>UI</b> <b>elements,</b> rather than the bitmap system font from previous versions.|$|E
25|$|Most fonts do {{not include}} the interrobang, but it has not disappeared: Lucida Grande, the default font for many <b>UI</b> <b>elements</b> of legacy {{versions}} of Apple's OS X operating system, includes the interrobang, and Microsoft provides several versions of the interrobang in the Wingdings 2 character set (on the right bracket and tilde keys on US keyboard layouts), included with Microsoft Office. It was accepted into Unicode and is included in several fonts, including Lucida Sans Unicode, Arial Unicode MS, and Calibri, the default font in the Office 2007, 2010 and 2013 suites.|$|E
2500|$|In January 2011, PC Gamer Magazine chose Lord of the Rings Online as the MMO of the year. Praise {{was given}} for {{treating}} fans to two new Epic Books worth of quests, two added regions, expansion of in-game events, improved <b>UI</b> <b>elements,</b> and the revamp {{of the character}} creation and starter regions. It also notes {{the success of the}} move to free-to-play, stating LOTRO is [...] "quickly redefining the way a successful subscriptionless MMO is run." ...|$|E
5000|$|HTML {{generated}} by WD is neither semantic nor readily readable: many <b>UI</b> layout <b>elements</b> are combinations of deeply nested tables, divs, and spans. For example, rather than utilizing a fieldset (two elements including legend) for the Group <b>UI</b> <b>element,</b> WD recreates it with two spans surrounding a two row table with further spans, a div, and a wbr {{for a total}} of 13 elements.|$|R
50|$|The {{accessible}} {{object is}} the central interface of MSAA, and is represented by an IAccessible COM interface and an integer ChildId. It allows applications to expose a tree structure that represents {{the structure of the}} <b>UI.</b> Each <b>element</b> of this tree exposes a set of properties and methods that allow the corresponding <b>UI</b> <b>element</b> to be manipulated. MSAA clients can access the programmatic UI information through a standard API.|$|R
5000|$|Version 1.5 was {{released}} in January 2013 and introduced a new [...] "Info View" [...] to the software. The Info View displays contextual information to users based on the <b>UI</b> <b>element</b> currently under the cursor. The Info View is significant in being the first major UI component to be introduced that was not specified in the original Integra 2 Project design phase.|$|R
2500|$|The {{game was}} {{released}} on March 11, 2014, available on Microsoft Windows and macOS operating systems. By the end of March 2014, the game had more than 10 million player accounts registered worldwide. On April 2, 2014, the game was released for iPad in Australia, Canada and New Zealand. On April 16, 2014 it was released globally, supporting all iPads except the first iPad. On August 6, 2014, support for Windows 8 touchscreen devices {{was added to the}} game, although not for Windows RT devices. On December 15, 2014, the game was released for Android tablets 6" [...] or larger in Australia, Canada and New Zealand and on December 16, 2014 it was widely released for Android tablets. On April 14, 2015, the game was released for iPhone and Android smartphones worldwide. The smartphone version of the game includes new <b>UI</b> <b>elements</b> that place the player's hand on the bottom right but only half visible, so players must tap on their hand to zoom in and play cards. Single cards can also be viewed full screen by tapping and holding on a specific card, which is useful to read all the card details while using a smartphone display.|$|E
5000|$|... less {{flexible}} due to {{requirement that}} interface {{be made up}} of WD <b>UI</b> <b>elements</b> (i.e. custom html is not possible). To reduce the limitations, several measures have been taken. For example, WD supports so-called [...] "islands" [...] for e.g. flash applications that enrich the Web Dynpro UI element collection by rich <b>UI</b> <b>elements.</b> This disadvantage doesn't seem so serious but in fact basic features that a user would expect cannot be implemented, e.g. colored rows in a table, colors in general, advanced alignment of simple <b>UI</b> <b>elements</b> (due to nonexistence of more complicated ones), selecting multiple rows in tree-like tables (this is due to preserving basic concept of WD) and many more. Utilizing such an island requires the developer to forgo WD <b>UI</b> <b>elements</b> within.|$|E
5000|$|Marlett, a TrueType font used in Microsoft Windows for {{rendering}} scalable <b>UI</b> <b>elements</b> ...|$|E
50|$|In 2013, Apple {{released}} iOS 7 featuring flat <b>UI</b> design <b>elements,</b> {{moving away}} from skeuomorphic design.|$|R
5000|$|In WPF you {{can define}} {{the look of}} an element directly, via its properties, or {{indirectly}} with a Template or Style. At its simplest a style {{is a combination of}} property settings that can be applied to a <b>UI</b> <b>element</b> with a single property attribute. Templates are a mechanism for defining alternative UI for portions of your WPF application. There are several template types available in WPF (ControlTemplate, DataTemplate, HierarchicalDataTemplate and ItemsPanelTemplate).|$|R
50|$|Features of {{the program}} include the ability to limit the scope of {{capturing}} to a specific screen area, to set the delay (if needed to capture some menu or another <b>UI</b> <b>element</b> which is shown only when focused) and to specify the filename template using wildcards (including those of the strftime function from the C standard library). Other features include creating thumbnails of the taken screenshots and specifying {{the quality of the}} resulting image if lossy format is required.|$|R
5000|$|UI Automation Properties provide {{specific}} information about <b>UI</b> <b>elements</b> or the Control Pattern.|$|E
50|$|And a set {{of classes}} that inherit from WKInterfaceObject and {{represents}} visual <b>UI</b> <b>elements.</b>|$|E
5000|$|Arranging the <b>UI</b> <b>elements</b> and the {{controls}} of the application on forms and tables.|$|E
40|$|The Rational Unified Process (RUP) is a {{use case}} driven {{iterative}} software engineering process User Interface design within the RUP involves user interface modelling and user interface prototyping. This paper describes two support artefacts- extended tabular use cases and <b>UI</b> <b>element</b> clusters- which provide {{a bridge between}} these two activities. They provide support for 'flow of events' storyboarding, the clustering of user interface elements and identification of UML boundary classes, and the initial sketching of user interface prototypes...|$|R
5000|$|... iRise is a {{software}} {{company based in}} El Segundo, California. It provides a cloud-based requirements definition and visualization platform for teams and businesses. iRise allows product owners, product managers, business analysts and other stakeholders to prototype new products, features, and enhancements without any code or scripting. iRise also supports creating interactive business process flows, use cases, and other diagrams. Each screen, <b>UI</b> <b>element,</b> and diagram can be annotated with detailed requirements that can be exported into custom documentation.|$|R
5000|$|ImageCropper {{provides}} the <b>UI</b> and interactive <b>elements</b> for a client-side image cropper.|$|R
5000|$|XMLGUI - allows {{defining}} <b>UI</b> <b>elements</b> such as {{menus and}} toolbars via XML files ...|$|E
50|$|A classic use of callbacks in Python (and other languages) is {{to assign}} events to <b>UI</b> <b>elements.</b>|$|E
5000|$|... some bundled <b>UI</b> <b>elements</b> are {{reproductions of}} {{standard}} HTML elements (e.g. drop-down menus) {{and do not}} gracefully degrade ...|$|E
40|$|Abstract. This paper reports {{performance}} metrics and end-user {{perceptions of}} a display leasing service, introduced for a network of public displays. Through leasing, users can acquire a temporary ownership of a public display and utilize it as an application <b>UI</b> <b>element</b> together with a personal mobile device. We argue that this functionality is necessary as the quantity of public displays grows, {{in order to facilitate}} public resource utilization and alleviate patterns such as queuing and polling. We implemented a prototype of the leasing service and conducted a field trial with a real-world city centre scenario, through which we analyze the serviceâ€™s signaling overhead and key deployment challenges...|$|R
5000|$|... sws - web-service that {{transforms}} XML {{description of}} <b>UI</b> windows and <b>elements</b> into GUI representation.|$|R
50|$|Many {{aspects of}} the game were {{designed}} to improve playability, especially for non-hardcore war gamers. For instance, the game used small icons of men or tanks to indicate unit types, instead of the more opaque NATO unit markers that are commonly used in the wargame field. On the Macintosh platform, existing UI guidelines were used for all operations. The game eschewed the traditional highly-modal interfaces of most games, using Mac menus, mouse commands and dialogs boxes for most interaction. For instance, giving commands to a unit to move was handled simply by clicking on the unit and then dragging it to the desired location, stacks of units could be moved with a shift-drag. This <b>UI</b> <b>element</b> has since become common.|$|R
5000|$|... {{comes with}} a big {{collection}} of <b>UI</b> <b>elements</b> providing a wealth of functionality and only have to be configured but not programmed ...|$|E
50|$|Microsoft UI Automation (UIA) is an {{application}} programming interface (API) that allows one to access, identify, and manipulate the user interface (<b>UI)</b> <b>elements</b> of another application.|$|E
5000|$|... open source, {{except for}} some of Jolla's <b>UI</b> <b>elements.</b> Those {{interested}} in further development can become involved through the Mer project or the Sailfish Alliance or Jolla; ...|$|E
2500|$|A {{key element}} of the Swift system {{is its ability to}} be cleanly {{debugged}} and run within the development environment, using a readâ€“evalâ€“print loop (REPL), giving it interactive properties more in common with the scripting abilities of Python than traditional system programming languages. The REPL is further enhanced with the new concept playgrounds. These are interactive views running within the Xcode environment that respond to code or debugger changes on-the-fly. Playgrounds allow programmers to add in Swift code along with markdown documentation. If some code changes over time or with regard to some other ranged input value, the view can be used with the Timeline Assistant to demonstrate the output in an animated way. In addition, Xcode has debugging features for Swift development including breakpoints, step through and step over statements, as well as <b>UI</b> <b>element</b> placement breakdowns for app developers.|$|R
5000|$|Presentation Layer {{applications}} are created using an XML based declarative markup language, known as Media Center Markup Language (MCML). MCML {{is used to}} define the user interface, with animation, text input, navigation, data binding, and local storage support available from the markup itself. If custom code or other functionality is required to implement a certain feature, CLI assemblies can be referred. Any CLI language {{can be used to}} write the code-behind assemblies that implement the required functionality. An MCML document defines the interface as a collection of [...] elements, each exposing four attributes: [...] which defines what that <b>UI</b> <b>element</b> will display, [...] to control the presentation aspects of the element, [...] which enumerate the set of private state data for the element, and [...] which allow the attributes to be modified based on certain triggers. By modifying these attributes at runtime, either from markup or code behind classes, the interface is generated.|$|R
50|$|Definition : In a {{sequence}} u(uk)1â‰¤kâ‰¤n, there is right-to-left minimum (resp. maximum) at rank k if uk is strictly smaller (resp. strictly bigger) than each <b>element</b> <b>ui</b> with i>k, i.e., to its right.|$|R
5000|$|Desktop-like functionality: drag-and-drop, in-line editing, {{clipboard}} operations, data validation, interactivity via Ajax. Starting from version 2.5 UI components {{can have}} skin and behavior similar to standard Window's <b>UI</b> <b>elements.</b>|$|E
50|$|The Thunar {{interface}} {{was developed}} {{prior to the}} coding of its core. A minimally functional software mockup was built in Python. Features were added and <b>UI</b> <b>elements</b> changed iteratively to react to test user input.|$|E
50|$|Automation Element objects expose common {{properties}} of the <b>UI</b> <b>elements</b> they represent. One of these properties is the control type, which defines its basic appearance and functionality as a single recognizable entity (e.g., a button or check box).|$|E
5000|$|Let X be an {{integral}} Noetherian scheme. Then X has a sheaf of rational functions MX. All regular functions are rational functions, {{which leads to a}} short exact sequenceA Cartier divisor on X is a global section of [...] An equivalent description is that a Cartier divisor is a collection , where fi is a section of MXÃ— on <b>Ui,</b> the <b>elements</b> fi agree with each other on the overlaps , and two such collections are equivalent if, after passing to a common refinement of their open covers, the rational functions are equal up to multiplication by elements of OXÃ—.|$|R
25|$|In {{the acute}} {{cases of the}} diphthongs {{starting}} in i, u (i, u + l, m, n, r; <b>ui),</b> the first <b>element</b> does not lengthen and tense in a standard language, but an emphasis remains. Since it does not lengthen, the acute accent {{is marked by a}} grave. The first element of acute mixed diphthongs e, o + l, m, n, r of a foreign origin, does not lengthen as well: hÃ¨rbas â€“ coat of arms, spÃ²rtas â€“ sport.|$|R
3000|$|Step 3 : Establish {{the fuzzy}} {{relationship}} matrix R. Each <b>element</b> <b>ui</b> in V is evaluated {{by a single}} element to obtain a fuzzy membership degree vector Ri[*]=[*](ri 1, [...]..., rij, [...]..., rim) relative to vj (i[*]=[*] 1, 2, â€¦, n and j[*]=[*] 1, 2, â€¦, m). rij is the degree (0 [*]â‰¤[*]rij[*]â‰¤[*] 1), namely the factor ui belongs to vj, which {{is determined by the}} fuzzy membership function. After evaluating all n factors in the factor set U, an n[*]Ã—[*]m fuzzy relation matrix R can be obtained [...]...|$|R
