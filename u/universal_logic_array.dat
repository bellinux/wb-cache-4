0|837|Public
40|$|Classical higher-order logic, when {{utilized}} as a meta-logic {{in which}} various other (classical and non-classical) logics can be shallowly embedded, {{is well suited}} for realising a <b>universal</b> <b>logic</b> reasoning approach. <b>Universal</b> <b>logic</b> reasoning in turn, as envisioned already by Leibniz, may support the rigorous formalisation and deep logical analysis of rational arguments within machines. A respective <b>universal</b> <b>logic</b> reasoning framework is described {{and a range of}} exemplary applications are discussed. In the future, <b>universal</b> <b>logic</b> reasoning in combination with appropriate, controlled forms of rational argumentation may serve as a communication layer between humans and intelligent machines. Comment: 9 page...|$|R
40|$|In-memory {{computation}} {{is one of}} {{the most}} promising features of memristive memory arrays. In this paper, we propose an array architecture that supports in-memory computation based on a <b>logic</b> <b>array</b> first proposed in 1972 by Sheldon Akers. The Akers <b>logic</b> <b>array</b> satisfies this objective since this array can realize any Boolean function, including bit sorting. We present a hardware version of a modified Akers <b>logic</b> <b>array,</b> where the values stored within the array serve as primary inputs. The proposed <b>logic</b> <b>array</b> uses memristors, which are nonvolatile memory devices with noteworthy properties. An Akers <b>logic</b> <b>array</b> with memristors combines memory and logic operations, where the same array stores data and performs computation. This combination opens opportunities for novel non-von Neumann computer architectures, while reducing power and enhancing memory bandwidth...|$|R
40|$|Abstract. Computer Science {{has been}} long {{viewed as a}} {{consumer}} of mathematics in general, and of logic in particular, with few and minor contributions back. In this article we are challenging this view with {{the case of the}} relationship between specification theory and the <b>universal</b> trend in <b>logic.</b> 1 From <b>Universal</b> <b>Logic</b> [...] . Although <b>universal</b> <b>logic</b> has been clearly recognised as a trend in mathematical logic since about one decade only, mainly due to the efforts of Jean-Yves Béziau and his colleagues, it had a presence here and there since much longer. For example the anthology [9] traces <b>universal</b> <b>logic</b> ideas back to the work of Paul Herz in 1922. In fact there is a whole string of famous names in logic that have been involved with <b>universal</b> <b>logic</b> in the last century, including Paul Bernays...|$|R
50|$|<b>Universal</b> <b>logic</b> is {{the field}} of logic that studies the common {{features}} of all logical systems, aiming to be to <b>logic</b> what <b>universal</b> algebra is to algebra. A number of approaches to <b>universal</b> <b>logic</b> have been proposed since the twentieth century, using model theoretic, and categorical approaches.|$|R
40|$|Abstract—Many modern Field Programmable <b>Logic</b> <b>Arrays</b> (FPGAs) use {{lookup table}} (LUT) logic blocks {{which can be}} {{programmed}} to realize any function of a fixed number of inputs. It is possible to employ logic blocks that realize only a subset of all functions, while the rest {{can be obtained by}} permuting and negating the inputs. Such blocks, known as <b>Universal</b> <b>Logic</b> Modules (ULMs), have already been considered for application in FPGAs; in this paper, we propose a new class of ULMs which is more useful in the FPGA environment. Methodology for systematic development of such blocks is presented, based on the BDD description of logic functions. We give an explicit construction of a three-input LUT replacement that requires only five programming bits, which is the optimum for such ULMs. A realistic size four-input LUT replacement is obtained which uses 13 programming bits. Index Terms—FPGAs, ULMs, BDDs, classification of logic functions, synthesis of logic functions. ——————————F——————————...|$|R
5000|$|... #Subtitle level 2: World Congresses and Schools on <b>Universal</b> <b>Logic</b> ...|$|R
5000|$|In <b>universal</b> <b>logic,</b> closure {{operators}} are {{also known as}} consequence operators.|$|R
40|$|Several theorems {{exist that}} allow the {{identification}} of undetectable faults in synchronous sequential circuits by applying combinational ATPG to an iterative <b>logic</b> <b>array</b> of limited length. In this paper, we consider the theorem that resulted {{in one of the}} most effective procedures for identifying undetectable faults. We show conditions on fault free sequential circuits under which the only undetectable faults that can be identified by this theorem using an iterative <b>logic</b> <b>array</b> of any length are combinationally redundant faults. Such faults can be identified using an iterative <b>logic</b> <b>array</b> of length one, or techniques specifically developed for combinationally redundant faults. Whereas for a general circuit, increasing the length of the iterative <b>logic</b> <b>array</b> may help identify additional undetectable faults, this is not the case for circuits with the properties identified here. We demonstrate the existence of benchmark circuits that satisfy these conditions. ...|$|R
40|$|An {{approach}} {{was developed to}} create asynchronous recurrent <b>logic</b> <b>arrays</b> for the binary neural networks used as parallel distributed knowledge models. This approach converts the neurons in a neural network model into recurrent switching functions. These recurrent switching functions are then mapped onto an asynchronous recurrent <b>logic</b> <b>array</b> which completely captures {{the characteristics of the}} original knowledge model. Two modified programmable <b>logic</b> <b>array</b> (PLA) structures were devised for the physical implementation of these asynchronous recurrent <b>logic</b> <b>arrays.</b> Index Terms - Knowledge representation, constraint satisfaction, parallel distributed processing, neural networks, expert systems. I. Introduction A parallel distributed model that uses binary neural networks to represent qualitative knowledge was proposed by Vai and Xu [1]. In this knowledge model, the neuron thresholds and interconnection weights of a neural network are determined so that the stable states of the neural netw [...] ...|$|R
5000|$|Fifth World Congress and School on <b>Universal</b> <b>Logic,</b> 20-30 June 2015, Istanbul, Turkey.|$|R
5000|$|Second World Congress and School on <b>Universal</b> <b>Logic,</b> 16-22 August 2007, Xi'an, China.|$|R
5000|$|Manhattan wiring {{is often}} used to {{represent}} a programmable <b>logic</b> <b>array.</b>|$|R
50|$|Logica Universalis is a peer-reviewed {{academic}} journal {{which covers}} {{research related to}} <b>Universal</b> <b>logic.</b>|$|R
50|$|An {{anthology}} titled <b>Universal</b> <b>Logic</b> {{was published}} in 2012, giving a {{new light on the}} subject.|$|R
5000|$|... “Are Single-Chip Microcomputers the <b>Universal</b> <b>Logic</b> of the 1980s?” Vol. 24, January 5, 1979, pps. 83-89 ...|$|R
5000|$|Fourth World Congress and School on <b>Universal</b> <b>Logic,</b> 29 March-7 April 2013, Rio de Janeiro, Brazil.|$|R
5000|$|The C65 also {{contains}} {{one or two}} programmable <b>logic</b> <b>arrays</b> depending on the version: ...|$|R
40|$|A {{description}} is presented of hardware concepts {{for building a}} massively parallel processing system for two-dimensional data. The processing system is to use <b>logic</b> <b>arrays</b> of 128 x 128 elements which perform over 16 thousand operations simultaneously. Attention is given to image data, <b>logic</b> <b>arrays,</b> basic image <b>logic</b> functions, a prototype negator, an interleaver device, image logic circuits, and an image memory circuit...|$|R
5000|$|In {{the context}} defined by Béziau, three main {{approaches}} to <b>universal</b> <b>logic</b> have been explored in depth: ...|$|R
5000|$|Third World Congress and School on <b>Universal</b> <b>Logic,</b> 18-25 April 2010, Lisbon, Portugal. (Secret Speaker: Jaakko Hintikka.) ...|$|R
5000|$|Ferranti Electronics Ltd of Chadderton, Oldham, Greater Manchester for {{uncommitted}} <b>logic</b> <b>arrays</b> for microelectronics applications.|$|R
40|$|ISSN: 0141 - 9331 Self-checking blocks {{may be used}} {{to ensure}} {{concurrent}} error detection in integrated circuits. On the other hand, <b>logic</b> <b>arrays</b> such as PLAs, ROMs and RAMs are essential to circumvent the increasing complexity of VLSI circuits. Efficient self-checking schemes for <b>logic</b> <b>arrays</b> are therefore essential for concurrent error detection in VLSI circuits. The paper describes schemes that incur low area overhead...|$|R
25|$|In digital {{electronics}} terminology, {{the binary}} NAND gate and the binary NOR gate {{are the only}} binary <b>universal</b> <b>logic</b> gates.|$|R
50|$|The input for ESPRESSO is a {{function}} table of the desired functionality; {{the result is a}} minimized table, describing either the ON-cover or the OFF-cover of the function, depending on the selected options. By default, the product terms will be shared as much as possible by the several output functions, but the program can be instructed to handle each of the output functions separately. This allows for efficient implementation in two-level <b>logic</b> <b>arrays</b> such as a PLA (Programmable <b>Logic</b> <b>Array)</b> or a PAL (Programmable <b>Array</b> <b>Logic).</b>|$|R
50|$|Major RQL gates include: AndOr, AnotB, Set/Reset (with {{nondestructive}} readout), {{which together}} form a <b>universal</b> <b>logic</b> set and provide memory capabilities.|$|R
5000|$|Logic and inference: propositional logic, {{predicate}} <b>logic,</b> attribute <b>logic,</b> <b>universal</b> <b>logic,</b> inductive inference, deductive inference, associative reasoning, analogical reasoning, approximate reasoning.|$|R
2500|$|... (2005). [...] "," [...] in Handbook of the First World Congress and School on <b>Universal</b> <b>Logic,</b> UNILOG'05, ed. Jean-Yves Beziau and Alexandre Costa-Leite. pp. 57–59.|$|R
50|$|The {{spread of}} {{institutional}} model theory has generalized various notions and results of model theory and institutions themselves have impacted {{the progress of}} <b>universal</b> <b>logic.</b>|$|R
5000|$|The Signetics 82S100 FPLA (Field Programmable <b>Logic</b> <b>Array)</b> was {{the first}} commercially {{successful}} user programmable logic device, the forerunner of the modern FPGA.|$|R
40|$|The {{architecture}} of various programmable <b>logic</b> <b>arrays</b> such as PAL (Programmable <b>Array</b> <b>Logic),</b> PLA (Programmable <b>Logic</b> <b>Array)</b> and MAPL (Multiple <b>Array</b> Programmable <b>Logic)</b> differ slightly in interconnection. The introduced types of devices are called PLD (Programmable Logic Devices). It is a bulk of programmable AND functions (product terms), and OR functions. The whole circuit structure is completed by input/output or dedicated output macrocells allowing {{to do the}} minimization of product term number. PLD's internal AND-array, and OR-array differs from the discrete logic AND, and OR devices whereas the functions are similar. The troubleshooting of these devices differs too...|$|R
5000|$|First World Congress and School on <b>Universal</b> <b>Logic,</b> 26 March-3 April 2005, Montreux, Switzerland. Participants {{included}} Béziau, Dov Gabbay, and David Makinson. (Secret Speaker: Saul Kripke.) ...|$|R
25|$|The 3-input Fredkin gate is {{functionally}} complete reversible gate by itself– a sole sufficient operator. There {{are many}} other three-input <b>universal</b> <b>logic</b> gates, such as the Toffoli gate.|$|R
40|$|E�cient {{parallel}} {{schemes for}} carry-propagation-free addition of modi®ed signed-digit trinary numbers are presented. The necessary minterms for implementation using an optical programmable <b>logic</b> <b>array</b> area are derived. The proposed schemes require only a truth table of 25 entries {{compared with an}} earlier scheme of 625 entries. The proposed schemes are amenable to optical implementation. Experimental results using an optical programmable <b>logic</b> <b>array</b> are demonstrated. The experiments show the problems of noise and crosstalk. This suggests some dc bias is necessary to increase the signal-to-noise ratio of th...|$|R
40|$|Iterative <b>Logic</b> <b>Arrays</b> (ILAs) {{are ideal}} as VLSI sub-systems {{because of their}} regular {{structure}} and its close resemblance with FPGAs (Field Programmable Gate Arrays). AND-EXOR based circuits are {{of interest in the}} design of very low power circuits where energy loss implied by high frequency switching is of much consideration. This paper examines the testability of AND-EXOR based Iterative <b>Logic</b> <b>Arrays</b> (ILAs). For certain ILAs it is possible to find a test set whose size remains constant irrespective {{of the size of the}} ILA, while for others it varies with array size. Former type of ILAs is known as Constant-Testable (C-Testable). It has been shown that AND-EXOR based <b>Logic</b> <b>Arrays</b> are C-Testable and size of test set is equal to number of entries in cell truth table. The test generation problem has been shown to be related to certain properties of cycles in a set of graphs derived from cell truth table. By careful analysis of these cycles an efficient test generation technique that can be easily converted to an ATPG program has been presented for both 1 D and 2 D ILAs. How this property of ILAs can be used for testing FPGAs has also been discussed. Keywords - C-Testable, Iterative <b>Logic</b> <b>Arrays,</b> Bijective, Test Generation, ATP...|$|R
50|$|The 3-input Fredkin gate is {{functionally}} complete reversible gate {{by itself}} - a sole sufficient operator. There {{are many other}} three-input <b>universal</b> <b>logic</b> gates, such as the Toffoli gate.|$|R
50|$|A {{programmable}} <b>logic</b> <b>array</b> (PLA) has a programmable AND gate array, which {{links to}} a programmable OR gate array, which {{can then be}} conditionally complemented to produce an output.|$|R
