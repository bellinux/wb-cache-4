98|1144|Public
25|$|The {{standard}} security {{provided by}} Acrobat PDF {{consists of two}} different methods and two different passwords: a <b>user</b> <b>password,</b> which encrypts the file and prevents opening, and an owner password, which specifies operations that should be restricted even when the document is decrypted, which can include modifying, printing, or copying text and graphics out of the document, or adding or modifying text notes and AcroForm fields. The <b>user</b> <b>password</b> encrypts the file, while the owner password does not, instead relying on client software to respect these restrictions. An owner password can easily be removed by software, including some free online services. Thus, the use restrictions that a document author places on a PDF document are not secure, and cannot be assured once the file is distributed; this warning is displayed when applying such restrictions using Adobe Acrobat software to create or edit PDF files.|$|E
2500|$|... <b>user</b> <b>password</b> (or {{smart card}} private key): used to {{generate}} a decryption key to decrypt the user's DPAPI Master Key ...|$|E
5000|$|The BBS {{required}} a new <b>user</b> <b>password</b> {{in order to}} gain access. The password was [...] "VOID".|$|E
5000|$|The <b>user's</b> <b>password</b> is {{restricted}} {{to a maximum of}} fourteen characters.|$|R
50|$|Note: Only {{type in the}} <b>user's</b> <b>password,</b> {{when the}} system asks for it.|$|R
5000|$|Mitigate {{risk for}} access to 3rd-party sites (<b>user</b> <b>passwords</b> not stored or managed externally) ...|$|R
5000|$|NX login as nx user {{using the}} NX SSH key and <b>user</b> <b>password</b> based {{authentication}} on the system.|$|E
5000|$|... <b>user</b> <b>password</b> (or {{smart card}} private key): used to {{generate}} a decryption key to decrypt the user's DPAPI Master Key ...|$|E
5000|$|In Maximum {{security}} mode, {{the disk}} can be unlocked {{only with the}} <b>User</b> <b>password.</b> If the <b>User</b> <b>password</b> is not available, the only remaining way {{to get at least}} the bare hardware back to a usable state is to issue the SECURITY ERASE PREPARE command, immediately followed by SECURITY ERASE UNIT. In Maximum security mode, the SECURITY ERASE UNIT command requires the Master password and will completely erase all data on the disk. Word 89 in the IDENTIFY response indicates how long the operation will take.|$|E
30|$|The RADIUS {{protocol}} encrypts and transmits <b>user</b> <b>passwords</b> {{between the}} client and the RADIUS server in order to eliminate the possibility of <b>user</b> <b>passwords</b> being exposed, although it might not offer sufficient security for <b>user</b> <b>passwords</b> [10]. The use of <b>user</b> <b>passwords</b> on networks where there are many threats always carries with it {{the possibility that the}} passwords will be exposed. The Transport Layer Security (TLS) protocol uses the X. 509 certificate to authenticate {{the client and}} the server [11]. As such, it needs a method of management that will protect the certificate file and the private key pair securely. For certificate-based authentication of the users or mobile devices in mobile network environments, because the certificate and the private key pair are frequently spill due to the vulnerabilities of mobile devices, the theft and misuse of the certificate pairs can undermine the trust of certificate-based authentication. Therefore, a method is needed to increase the reliability of the authentication process.|$|R
50|$|Password-authenticated key {{agreement}} algorithms {{can perform}} a cryptographic key exchange utilizing {{knowledge of a}} <b>user's</b> <b>password.</b>|$|R
5000|$|User {{support means}} {{changing}} data about users on systems and applications, resetting <b>user</b> <b>passwords</b> and so on, to resolve user problems.|$|R
50|$|When FileVault {{is enabled}} the system invites {{the user to}} create a master {{password}} for the computer. If a <b>user</b> <b>password</b> is forgotten, the master password or recovery key {{may be used to}} decrypt the files instead.|$|E
50|$|The {{pass the}} hash {{technique}} was originally published by Paul Ashton in 1997 {{and consisted of}} a modified Samba SMB client that accepted <b>user</b> <b>password</b> hashes instead of cleartext passwords. Later versions of Samba and other third-party implementations of the SMB and NTLM protocols also included the functionality.|$|E
50|$|Its web {{platform}} {{provides a}} new article with three questions {{each day for}} the users. Each reading record is kept for tracking and assessment by teachers and the users themselves. Each student or school involved in this programme is given a school ID number, user ID number and a <b>user</b> <b>password.</b>|$|E
40|$|We {{address the}} issue of {{encrypting}} data in local storage using a key that is derived from the <b>user's</b> <b>password.</b> The typical solution in use today is to derive the key from the password using a cryptographic hash function. This solution provides relatively weak protection, since an attacker that gets hold of the encrypted data can mount an off-line dictionary attack on the <b>user's</b> <b>password,</b> thereby recovering the key and decrypting the stored data. We propose a...|$|R
5000|$|The decoded {{challenge}} is hashed using HMAC-MD5, with a shared secret (typically, the <b>user's</b> <b>password,</b> or a hash thereof) as the secret key.|$|R
50|$|One-time password/Single sign on - It is {{process where}} a <b>userâ€™s</b> <b>password</b> and {{information}} {{is used for}} logon and then, becomes invalid after a set time.|$|R
5000|$|Microsoft Forefront Identity Manager (FIM) is a {{state-based}} {{identity management}} software product, designed to manage users' digital identities, credentials and groupings throughout the lifecycle of their membership of an enterprise computer system. FIM integrates with Active Directory and Exchange Server to provide identity synchronization, certificate management, <b>user</b> <b>password</b> resets and user provisioning {{from a single}} interface.|$|E
50|$|The {{directory}} /tmp is world-writable. Malicious user Mallory {{creates a}} symbolic {{link to the}} file /root/.rhosts named /tmp/foo. Then, Mallory invokes foo with user as the requested account. The program creates the (temporary) file /tmp/foo (really creating /root/.rhosts) and puts information about the requested account (e.g. <b>user</b> <b>password)</b> in it. It removes the temporary file (merely removing the symbolic link).|$|E
50|$|A disk {{always has}} two {{password}}s: A <b>User</b> <b>password</b> and a Master password. Most disks support a Master Password Revision Code. Reportedly, some disks can report if the Master password has been changed, {{or if it}} still is the factory default. The revision code is word 92 in the IDENTIFY response. Reportedly, on some disks, a value of 0xFFFE means the Master password is unchanged. The standard does not distinguish this value.|$|E
25|$|The rate {{at which}} an {{attacker}} can submit guessed passwords to the system is {{a key factor in}} determining system security. Some systems impose a time-out of several seconds after a small number (e.g. three) of failed password entry attempts. In the absence of other vulnerabilities, such systems can be effectively secured with relatively simple passwords. However the system must store information about the <b>user</b> <b>passwords</b> in some form and if that information is stolen, say by breaching system security, the <b>user</b> <b>passwords</b> can be at risk.|$|R
40|$|Abstract. Typical {{protocols}} for password-based authentication {{assume a}} single server which stores {{all the information}} (e. g., the password) necessary to authenticate a user. Unfortunately, an inherent limitation of this approach (assuming low-entropy passwords are used) is that the <b>user's</b> <b>password</b> is exposed if this server is ever compromised. To address this issue, a number of schemes have been proposed in which a <b>user's</b> <b>password</b> information is shared among multiple servers, and these servers cooperate in a threshold manner when the user wants to authenticate...|$|R
50|$|The rate {{at which}} an {{attacker}} can submit guessed passwords to the system is {{a key factor in}} determining system security. Some systems impose a time-out of several seconds after a small number (e.g. three) of failed password entry attempts. In the absence of other vulnerabilities, such systems can be effectively secured with relatively simple passwords. However the system must store information about the <b>user</b> <b>passwords</b> in some form and if that information is stolen, say by breaching system security, the <b>user</b> <b>passwords</b> can be at risk.|$|R
5000|$|Open Directory {{began with}} Mac OS X Server 10.2. In this initial form, Open Directory {{consisted}} of a network-visible NetInfo directory domain and a corresponding Authentication Manager service for storing passwords outside of the directory. Version 10.2 also included support for Kerberos. [...] Mac OS X versions 10.1 and 10.0 stored <b>user</b> <b>password</b> information within the directory domain using crypt password authentication authorities, but version 10.2 {{paved the way for}} the current Shadow Hash and Password Server mechanisms.|$|E
5000|$|The {{standard}} security {{provided by}} Acrobat PDF {{consists of two}} different methods and two different passwords, <b>user</b> <b>password,</b> which encrypts the file and prevents opening, and owner password, which specifies operations that should be restricted even when the document is decrypted, which can include: printing, copying text and graphics out of the document, modifying the document, or adding or modifying text notes and AcroForm fields. The <b>user</b> <b>password</b> (controls opening) encrypts the file and requires password cracking to defeat, with difficulty depending on password strength and encryption method - it is potentially very secure (assuming good password and encryption method without known attacks). The owner password (controls operations) does not encrypt the file, and instead relies on client software to respect these restrictions, and is not secure. An [...] "owner password" [...] can be removed by many commonly available [...] "PDF cracking" [...] software, including some free online services. Thus, the use restrictions that a document author places on a PDF document are not secure, and cannot be assured once the file is distributed; this warning is displayed when applying such restrictions using Adobe Acrobat software to create or edit PDF files.|$|E
50|$|Over the years, {{this feature}} has posed {{difficulties}} for users {{who use the}} Shift key heavily, such as gamers, because an activation popup will be placed above all other applications, disturbing their gameplay. This can be fixed by going into the control panel and going into the accessibility option and then disabling the shortcut option. The feature creates a vulnerability in some versions of Windows, enabling the recovery or replacement of the <b>user</b> <b>password</b> using a method known as a Sticky key attack.|$|E
5000|$|Explanation: Multi-user {{systems have}} <b>user</b> {{specific}} <b>passwords.</b> Breaking into some other <b>user's</b> <b>password,</b> thus intruding his/her private space is unethical. It is not ethical to hack passwords for gaining unauthorized {{access to a}} password-protected computer system. Accessing data {{that you are not}} authorized to access or gaining access to another user's computer without her permission is not ethical.|$|R
5000|$|Pleasant Password Server is a proprietary, {{multi-user}} enterprise password server that {{is fully}} compatible with KeePass Password Safe. Designed for business <b>users,</b> the <b>password</b> server provides access provisioning {{as well as}} per-group and per-entry access restrictions. [...] Pleasant Password Server supports the use of secure passwords, allowing system administrators to manage <b>user</b> <b>passwords</b> from a central web interface.|$|R
30|$|The {{following}} section {{will try to}} answer these questions. In addition, {{we will try to}} analyze the <b>user</b> <b>passwords</b> and identify possible reasons behind any successful intruder attacks.|$|R
5000|$|... 1993 - A fake-{{version of the}} BBS was added. It {{was called}} [...] "Demon Roach Underground Elite." [...] At the main BBS entry prompt, one entered [...] "SMASH." [...] This version of the BBS did not require a new <b>user</b> <b>password.</b> An {{interesting}} feature was that the user list showed the passwords for all users, including the sysop. Thus, any user could log in as any other user. Messages were often posted and e-mails were often sent under other users' names.|$|E
50|$|After an {{attacker}} obtains valid {{user name}} and <b>user</b> <b>password</b> hash values (somehow, using different methods and tools), they are then {{able to use}} that information to authenticate to a remote server or service using LM or NTLM authentication without the need to brute-force the hashes to obtain the cleartext password (as it was required before this technique was published). The attack exploits an implementation weakness in the authentication protocol, where password hash remain static from session to session until the password is next changed.|$|E
5000|$|DaveGrohl is a brute-force {{password}} cracker for Mac OS X. It was originally created in 2010 as a password hash extractor but has since {{evolved into a}} standalone or distributed {{password cracker}}. It supports all of the standard Mac OS X <b>user</b> <b>password</b> hashes (MD4, SHA-512 and PBKDF2) used since OS X Lion and also can extract them formatted for other popular password crackers like John the Ripper. [...] The latest stable release is designed specifically for Mac OS X Lion and Mountain Lion.|$|E
50|$|After {{gathering}} {{a password}} hash, using said hash as a password would fail since the authentication system would hash {{it a second}} time. In order to learn a <b>user's</b> <b>password,</b> a password that produces the same hashed value must be found, usually through a brute-force or dictionary attack.|$|R
5000|$|Web flaws: Classic web {{vulnerabilities}} {{can also}} be present in web-based password managers. In particular, XSS and CSRF vulnerabilities may be exploited by hackers to obtain a <b>user's</b> <b>password.</b>|$|R
5000|$|Password {{management}} flaws: The computer <b>user</b> uses weak <b>passwords</b> {{that could}} be discovered by brute force. [...] The computer <b>user</b> stores the <b>password</b> on the computer where a program can access it. <b>Users</b> re-use <b>passwords</b> between many programs and websites.|$|R
