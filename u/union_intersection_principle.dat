0|1136|Public
40|$|It {{is an open}} {{problem to}} {{construct}} a test for structural relationship among the mean vectors of several multivariate normal populations with unequal covariance matrices. In this paper some solutions to this problem are provided when the unequal covariance matrices are either completely known or possess a special structure and are partially known. A class of admissible Bayes tests is characterized when the covariance matrices are completely known. When the covariance matrices [Sigma] 1, [...] .,[Sigma]k have the structure [Sigma]i = [sigma] 2 iV, where [sigma] 2 i are positive constants and V is a positive definite matrix, we have derived some meaningful tests using the union-intersection principle {{in conjunction with the}} Hotelling's T 2 -test under the assumption that either [sigma] 2 i's are known or V is known. We have also provided an alternative derivation of the likelihood ratio test for the case of equal covariance matrices using the union-intersection principle, and in the sequel proposed a few new tests. Admissible Bayes tests Hotelling's T 2 -test likelihood ratio test structural relationship <b>union</b> [...] <b>intersection</b> <b>principle...</b>|$|R
40|$|Atanassov [1] {{defined the}} <b>union,</b> <b>intersection</b> and {{inclusion}} of intuitionistic fuzzy sets {{on the same}} universal. In [2], Riecan and Atanassov defined new intuitionistic fuzzy sets on different universals and they examined the <b>union,</b> <b>intersection</b> and inclusion of these sets. In this paper we gave counterexamples {{for the results of}} <b>union,</b> <b>intersection</b> and inclusion of these sets. For these situations we defined new intuitionistic fuzzy sets. In addition, we studied some properties of new intuitionistic fuzzy sets to be considered in their new universals...|$|R
5000|$|... #Subtitle level 2: <b>Unions,</b> <b>intersections,</b> and {{relative}} complements ...|$|R
50|$|Co-Büchi automata {{are closed}} under <b>union,</b> <b>intersection,</b> {{projection}} and determinization.|$|R
5000|$|The {{complexity}} {{of each of}} <b>union,</b> <b>intersection</b> and difference is [...] for AVLs of sizes [...] and [...] More importantly, since the recursive calls to <b>union,</b> <b>intersection</b> or difference are independent of each other, they can be executed in parallel with a parallel depth [...] When , the join-based implementation has the same computational DAG as single-element insertion and deletion.|$|R
50|$|The {{languages}} {{accepted by}} Weak Büchi automata are closed under <b>union,</b> <b>intersection</b> and complementation.|$|R
5000|$|Are certain automata closed under <b>union,</b> <b>intersection,</b> or {{complementation}} {{of formal}} languages? (Closure properties) ...|$|R
50|$|Operators for concatenation, fusion, <b>union,</b> <b>intersection</b> {{and their}} {{variations}} {{are shown in}} the table below.|$|R
50|$|Tree {{languages}} {{which are}} recognized by Muller accepting conditions are closed under <b>union,</b> <b>intersection,</b> projection and complementation.|$|R
40|$|In our paper {{published}} in the second issue of the Dogus University Journal we proved that if and are Jordan measurable sets, then the <b>union,</b> <b>intersection,</b> difference and symmetric difference of these sets are again Jordan measurable. In this paper, we have proved that if are Jordan measurable sets, then countable number of these sets is also closed according to the operations <b>union,</b> <b>intersection,</b> two by two difference and symmetric difference...|$|R
5000|$|The {{following}} proposition {{says that}} the statement [...] is equivalent to various other statements involving <b>unions,</b> <b>intersections</b> and complements.|$|R
5000|$|The <b>union,</b> <b>intersection,</b> {{concatenation}} of two context-sensitive languages is context-sensitive, {{also the}} Kleene plus of a context-sensitive language is context-sensitive.|$|R
5000|$|Use of {{geometries}} in the STL {{file format}} or geometrically primitive forms (e.g. ball, cylinder, cone) and their <b>union,</b> <b>intersection</b> and difference ...|$|R
40|$|This {{study is}} an {{investigation}} on super lattice measurable sets. It characterizes super lattice, super lattice measurable set, elementary lattice, monotone class and establishes that the <b>union,</b> <b>intersection,</b> difference of two super lattice measurable sets is a super lattice measurable set. Also it ascertains that {{the class of}} elementary lattice is closed under <b>union,</b> <b>intersection</b> and difference. Finally, it confirms that the product of lattice s- algebra is the smallest monotone class contains all elementary lattices...|$|R
50|$|Languages in the OWL {{family support}} various {{operations}} on classes such as <b>union,</b> <b>intersection</b> and complement. They also allow class enumeration, cardinality, and disjointness.|$|R
50|$|These {{properties}} {{assume the}} existence {{of at least two}} sets: a given universal set, denoted U, and the empty set, denoted {}. The algebra of sets describes the properties of all possible subsets of U, called the power set of U and denoted P(U). P(U) is assumed closed under <b>union,</b> <b>intersection,</b> and set complement. The algebra of sets is an interpretation or model of Boolean algebra, with <b>union,</b> <b>intersection,</b> set complement, U, and {} interpreting Boolean sum, product, complement, 1, and 0, respectively.|$|R
25|$|The algebra of sets {{under the}} set {{operations}} including <b>union,</b> <b>intersection,</b> and complement. Applications include any area of mathematics for which sets form a natural foundation.|$|R
5000|$|The {{complexity}} {{of each of}} <b>union,</b> <b>intersection</b> and difference is [...] for two red-black trees of sizes [...] and [...] This complexity is optimal {{in terms of the}} number of comparisons. More importantly, since the recursive calls to <b>union,</b> <b>intersection</b> or difference are independent of each other, they can be executed in parallel with a parallel depth [...] When , the join-based implementation has the same computational DAG as single-element insertion and deletion if the root of the larger tree is used to split the smaller tree.|$|R
5000|$|Consequently, all the Borel subsets of X [...] - [...] those {{obtainable}} as countable <b>unions,</b> <b>intersections</b> and set-theoretic {{differences of}} open/closed sets [...] - [...] are μ-measurable.|$|R
5000|$|Solids: Calculate volumes and {{manipulate}} 3D models using commands such as <b>union,</b> <b>intersection</b> and subtraction {{as well as}} convert meshes from mesh to solid and vice versa.|$|R
50|$|Context-sensitive {{languages}} are closed under complement. This 1988 result {{is known as}} the Immerman-Szelepcsényi theorem.Moreover, they are closed under <b>union,</b> <b>intersection,</b> concatenation, substitution, inverse homomorphism, and Kleene plus.|$|R
50|$|Certain {{operations}} on languages are common. This includes the standard set operations, such as <b>union,</b> <b>intersection,</b> and complement. Another class of operation is the element-wise application of string operations.|$|R
5000|$|... {{defines a}} type [...] {{composed}} of all finite sets of [...] values. Various operators are defined on sets for constructing their <b>union,</b> <b>intersections,</b> determining proper and non-strict subset relationships etc.|$|R
25|$|A {{concrete}} Boolean algebra or {{field of}} sets is any nonempty set of subsets of a given set X closed under the set operations of <b>union,</b> <b>intersection,</b> and complement relative to X.|$|R
50|$|It is {{said that}} an object is {{constructed}} from primitives by means of allowable operations, which are typically Boolean operations on sets: <b>union,</b> <b>intersection</b> and difference, as well as geometric transformations of those sets.|$|R
5000|$|Given two bit {{arrays of}} the same size {{representing}} sets, we can compute their <b>union,</b> <b>intersection,</b> and set-theoretic difference using n/w simple bit operations each (2n/w for difference), as well as the complement of either: ...|$|R
5000|$|In {{addition}} to the single-element insert, delete and lookup operations, several fast [...] "bulk" [...] operations have been defined on treaps: <b>union,</b> <b>intersection</b> and set difference. These rely on two helper operations, split and merge.|$|R
40|$|Abstract. Flow typing is {{becoming}} a popular mechanism for typing existing programs written in untyped languages (e. g. JavaScript, Racket, Groovy). Such systems require intersections for the true-branch of a type test, negations for the false-branch, and unions to capture {{the flow of information}} at meet points. Type systems involving <b>unions,</b> <b>intersections</b> and negations require a subtype operator which is non-trivial to implement. Frisch et al. demonstrated that this problem was decidable. However, their proof was not constructive and does not lend itself naturally to an implementation. In this paper, we present a sound and complete algorithm for subtype testing in the presence of <b>unions,</b> <b>intersections</b> and negations. ...|$|R
40|$|Among {{the basic}} {{operations}} {{which can be}} performed on fuzzy sets are the operations of <b>union,</b> <b>intersection,</b> complement, algebraic product and algebraic sum. In addition to these operations, new operations called “bounded-sum” and “bounded-difference” were defined by L. A. Zadeh to investigate the fuzzy reasoning which provides a {{way of dealing with}} the reasoning problems which are too complex for precise solution. This paper investigates the algebraic properties of fuzzy sets under these nex operations of bounded-sum and bounded-difference and the properties of fuzzy sets in the case where these new operations are combined with the well-known operations of <b>union,</b> <b>intersection,</b> algebraic product and algebraic sum...|$|R
40|$|Flow typing is {{becoming}} a popular mechanism for typing existing programs written in untyped languages (e. g. JavaScript, Racket, Groovy). Such systems require intersections for the true-branch of a type test, negations for the false-branch, and unions to capture {{the flow of information}} at meet points. Type systems involving <b>unions,</b> <b>intersections</b> and negations require a subtype operator which is non-trivial to implement. Frisch et al. demonstrated that this problem was decidable. However, their proof was not constructive and does not lend itself naturally to an implementation. In this paper, we present a sound and complete algorithm for subtype testing in the presence of <b>unions,</b> <b>intersections</b> and negations. ...|$|R
50|$|Primitive {{data types}} in ICI include integers, reals, strings, files, safe pointers, and regular expressions. Aggregate data types are arrays, sets, and {{associative}} tables. Sets can be heterogeneous, nested, {{and support the}} usual set operations: <b>union,</b> <b>intersection,</b> etc.|$|R
50|$|The set of {{spectra of}} a theory is closed by <b>union,</b> <b>intersection,</b> addition, multiplication. In full generality, {{it is not known}} if the set of spectra {{of a theory}} is closed by complementation, it is the {{so-called}} Asser's Problem.|$|R
5000|$|Date, C. J., McGoveran, D. (June, 1994). Updating <b>Union,</b> <b>Intersection,</b> and Difference Views. [...] "Database Programming & Design". San Francisco, CA: Miller-Freeman. Also in Date, C. J. (1995). [...] "Relational Database Writings 1991-1994". Reading, MA: Addison-Wesley. [...] & [...]|$|R
40|$|In {{this paper}} we prove the Kneser-Poulsen {{conjecture}} for large radii. Namely, if {{a finite number}} of points in Euclidean space E n is rearranged so that the distance between each pair of points does not decrease, then there exists a positive number r 0 that depends on the rearrangement of the points, such that if we consider n-dimensional balls of radius r> r 0 with centers at these points, then the volume of the <b>union</b> (<b>intersection)</b> of the balls before the rearrangement is not less (no more) than the volume of the <b>union</b> (<b>intersection)</b> after the rearrangement. Also under the same conditions we prove a similar result about perimeters instead of volumes. ...|$|R
40|$|The {{generalized}} winding number function measures insideness for arbitrary oriented triangle meshes. Exploiting this, I similarly generalize binary {{boolean operations}} {{to act on}} such meshes. The resulting operations for <b>union,</b> <b>intersection,</b> difference, etc. avoid volumetric discretization or pre-processing. Comment: 1 page, 1 figur...|$|R
5000|$|It is {{immediate}} {{from the}} definition that S is closed under <b>unions,</b> <b>intersections,</b> and complements. Comparing the definition {{with that of}} [...] and , it also follows immediately that S is contained in [...] This inclusion can in fact be strengthened to ZPPNP.|$|R
