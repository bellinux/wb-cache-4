41|3004|Public
50|$|SAVE PROG1,PGMRLIB {{causes the}} current module {{to be saved}} as a {{subroutine}} member (type R) named PROG1 in a <b>user</b> <b>library</b> named PGMRLIB.|$|E
5000|$|In addition, you {{can connect}} an {{external}} ROM {{which is a}} memory expansion unit with stored games and mathematical programs, produced by the manufacturer, that constitute the <b>user</b> <b>library.</b> Manufacturers have produced 4 types of ROM cartridges, three of them containing various mathematical functions, and one, BRP-4, containing game programs) : ...|$|E
50|$|The Base Services Layer is {{the lowest}} level {{reachable}} by user-side operations; it includes the File Server and <b>User</b> <b>Library,</b> a Plug-In Framework which manages all plug-ins, Store, Central Repository, DBMS and cryptographic services. It also includes the Text Window Server and the Text Shell: the two basic services from which a completely functional port can be created {{without the need for}} any higher layer services.|$|E
5000|$|... is {{implemented}} with standard object libraries {{included with the}} Solaris 10 OS or <b>user</b> <b>libraries</b> packaged with the executable ...|$|R
50|$|Audioscrobbler: Adds the {{capability}} of reporting played songs to a user's Last.fm playlist, and play last.fm radio stations (<b>user's</b> <b>library,</b> tags, similar to, etc.).|$|R
5000|$|List of [...]NET {{libraries}} and frameworks, {{a list of}} important <b>user</b> <b>libraries</b> developed {{on top of the}} [...]NET Framework, which extend the functionality of standard libraries.|$|R
5000|$|AMuse is a {{freeware}} music collection {{manager for}} AmigaOS4 that includes Last.fm client functionality [...] AMuse supports submissions of locally played music, listening to Last.fm similar artists and <b>user</b> <b>library,</b> scrobbling of tracks. AMuse's graphical interface {{is written in}} AWNpipe, a handler that provides access to AmigaOS graphical objects, the main program is written in AREXX, Last.fm submissions, playlist retrieval and scrobbling is done by means of Python scripts. Playback is performed by TuneNet. AMuse is developed by Yakov Mindelis.|$|E
50|$|Reaktor is a {{graphical}} modular software music studio {{developed by}} Native Instruments (NI). It lets musicians and sound specialists {{design and build}} their own instruments, samplers, effects and sound design tools. It is supplied with many ready-to-use instruments and effects, from emulations of classic synthesizers to futuristic sound design tools. In addition, more than 3000 free instruments can be downloaded from the growing <b>User</b> <b>Library.</b> One of Reaktor's unique selling points {{is that all of}} its instruments can be freely examined, customized or taken apart; Reaktor is a tool that effectively encourages reverse engineering. Reaktor Player is a free limited version of the software that allows musicians to play NI-released Reaktor instruments, but not edit or reverse-engineer them.|$|E
40|$|The Impact of Service Quality of <b>User</b> <b>Library</b> Satisfication (Studies in Public Library and Archive Malang). A {{quality of}} service {{can be seen from}} the {{tangible}} (physical evidence), reability (reliability), responsiveness (responsiveness), assurance (guarantee) and empathy (empathy) that can be met. With the {{quality of service}} it will create a <b>user</b> <b>library</b> satisfaction, but the importance of a library within the library service quality is not matched with a good infrastructure. Source of data used are primary data with questionnaires. Total sample of 80 respondents. The results showed that all influential variables together against <b>user</b> <b>library</b> satisfaction. Individually variable Assurance and Emphaty can give effect to the satisfaction <b>user</b> <b>library,</b> while variable Tangible, Reability and Responsiveness not give effect on satisfaction <b>user</b> <b>library</b> Public Library and Archive Malang...|$|E
40|$|The main {{objective}} of this poster is to show how libraries can provide an “online video library” to <b>library</b> <b>users.</b> <b>Library</b> <b>users</b> with a computer and an Internet connection can view videos through the library website. This poster also includes {{the technical aspects of}} making streaming videos available to <b>library</b> <b>users...</b>|$|R
50|$|Until May 2011 each copy of iBooks used {{to provide}} a free copy of Winnie-the-Pooh, the 1926 book by A. A. Milne, {{in order to get}} the <b>user's</b> <b>library</b> started.|$|R
5000|$|Backup data: Stickies keeps all {{information}} in a self-contained database. The database can be backed up by copying the file StickiesDatabase, which {{is located in a}} <b>user's</b> <b>Library</b> directory (typically [...] "~/Library/StickiesDatabase") ...|$|R
40|$|Social {{reference}} {{management systems}} provide {{a wealth of}} information {{that can be used for}} the analysis of science. In this paper, we examine whether <b>user</b> <b>library</b> statistics can produce meaningful results with regards to science evaluation and knowledge domain visualization. We are conducting two empirical studies, using a sample of library data from Mendeley, the world’s largest social reference management system. Based on the occurrence of references in users ’ libraries, we perform a large-scale impact factor analysis and an exploratory co-readership analysis. Our preliminary findings indicate that the analysis of <b>user</b> <b>library</b> statistics can produce accurate, timely, and content-rich results. We find that there is a significant relationship between the impact factor and the occurrence of references in libraries. Using a knowledge domain visualization based on co-occurrence measures, we are able to identify two areas of topics within the emerging field of technology-enhanced learning...|$|E
40|$|This chapter {{describes}} the Nios ® II Software Build Tools (SBT), {{a set of}} utilities and scripts that creates and builds embedded C/C++ application projects, <b>user</b> <b>library</b> projects, and board support packages (BSPs). The Nios II SBT supports a repeatable, scriptable, and archivable process for creating your software product. You can invoke the Nios II SBT through either of the following user interfaces...|$|E
40|$|Xab (X-window Analysis and deBugging) is a {{tool for}} run time {{monitoring}} of PVM (Parallel Virtual Machine) programs. PVM supports the programming {{of a network of}} heterogeneous computers as a single parallel computer. Using Xab, PVM programs can easily be instrumented and monitored. Xab uses PVM to monitor PVM programs. This makes Xab very portable but it leads to interesting issues of how to make Xab peacefully coincide with the programs it monitors. Xab consists of three main components, a <b>user</b> <b>library,</b> a monitoring program, and an X windows front end. The <b>user</b> <b>library</b> provides instrumented versions of the PVM calls. The monitoring program runs as a PVM process and gathers monitor events in the form of PVM messages. The Xab front end displays information graphically about PVM processes and messages. This paper discusses the design, implementation, and use of the Xab tool. Related work is briefly presented and contrasted with the approach taken with Xab. How Xab works and how it is use [...] ...|$|E
50|$|As of 2011, {{the library}} had 73 {{computer}} terminals for <b>library</b> <b>users.</b> The <b>library</b> offers tutoring and small group classes in computer skills.|$|R
40|$|The main {{objective}} of this program is to show how libraries can provide an “online video library” to <b>library</b> <b>users.</b> <b>Library</b> <b>users</b> with a computer and an Internet connection can view videos through a library. This presentation will include how to purchase streaming videos, how to catalog them, and {{the technical aspects of}} making them available to <b>library</b> <b>users...</b>|$|R
50|$|Such {{languages}} are used {{extensively in the}} Racket distribution and in <b>user</b> <b>libraries.</b> In fact, creating a new language is so straightforward, {{that there are some}} languages that have less than a handful of uses.|$|R
40|$|Description Use {{new methods}} to mine sub-pathway,but user need to prepare for xml for-mat data of KEGG PATHWAY and store them in ``xml' ' folder under ``paths''(paths li-brary is the default {{directory}} which is set by user) library,prepare KEGG path-way map data and store them in ``png' ' folder under the ``paths''(paths library is the default direc-tory which is set by <b>user)</b> <b>library</b> in advance...|$|E
40|$|Oil spill model {{users and}} modelers were brought {{together}} {{for the purpose of}} fostering joint communication and increasing understanding of mutual problems. The workshop concentrated on defining user needs, presentations on ongoing modeling programs, and discussions of supporting research for these modeling efforts. Specific user recommendations include the development of an oil spill model <b>user</b> <b>library</b> which identifies and describes available models. The development of models for the long-term fate and effect of spilled oil was examined...|$|E
40|$|This paper {{introduces}} several {{data analysis}} routines {{that were designed}} for interactive use with APL (A programming L_anguage) {{and placed in the}} APL <b>user</b> <b>library</b> at the Naval Postgraduate School. Specifically, histograms, density estimation and probability plotting routines are both explained in detail and demonstrated with actual data. In addition, applications and limitations on each of the routines are explored. And, the combined routines give the general user an extensive tool to analyze either discrete or continuous data. [URL] United States Arm...|$|E
30|$|In this approach, <b>user</b> level <b>library</b> {{is linked}} with the {{application}} for checkpointing. Application code does not require any changes for incorporating checkpoint mechanism; however specific linking {{needs to be done}} between <b>user</b> level <b>library</b> and the application.|$|R
50|$|Books can {{be viewed}} in a list view or grid view in the <b>user's</b> <b>library.</b> They can be {{arranged}} based on title, author, file size, file type, {{and when they were}} last opened. Users can also arrange their books into collections.|$|R
5000|$|If {{the library}} doesn't have {{information}} on a given topic, or if the <b>library</b> <b>user</b> wants more information, the librarian can refer the <b>library</b> <b>user</b> to another <b>library</b> or to an organization that can be contacted by phone or mail.|$|R
40|$|Automation reduces input {{length and}} {{potential}} data-entry errors. Matrix Automated Reduction and Coupling (MARC) program used for combining NASTRAN substructural models with primary structural model MARC also constructs job-control language (JCL) stream for NASTRAN batch job that utilizes previously-written <b>user</b> <b>library</b> of dynamic models. Minimizes lengthy input and reduces potential data-entry errors. MARC procedure used in assembling Space Shuttle orbiter dynamic models since 1983 and reduced NASTRAN modeling input time {{by as much}} as 50 percent. MARC program written in FORTRAN IV for interactive execution...|$|E
40|$|The {{content of}} this thesis is {{the design and}} {{implementation}} description of the driver for the NetCOPE platform. This driver is required to provide rapid transfer between hardware and software as well as multi-threaded applications. Driver is designed for Linux and is modified so that it allows multiple applications simultaneous access to the card. The paper provides basic information necessary for its adaptation and implementation details of individual features. The emphasis is on high data throughput. The part of the implementation is also a modification of the <b>user</b> <b>library,</b> which cooperates with the driver...|$|E
40|$|Energy {{has become}} a {{critical}} issue in processor design, especially in embedded environments. Thus, {{there is a need}} for tools, which provide an accurate and fast estimation of energy. In this paper, we present the design and use of a tool, Virtual Energy Counters (vEC), for estimating the energy consumption of user programs. vEC is built on top of the Perfmon <b>user</b> <b>library</b> for the UltraSPARC platform, and provides a user interface, which can be used within user programs to estimate the energy consumption. The energy estimates are provided for those consumed in the data, instruction and extended caches, main memory, address bus, data bus, address pads, and data pads...|$|E
40|$|OBJECTIVE: To {{develop a}} {{quantitative}} method for measuring <b>library</b> <b>user</b> journal needs {{based on an}} analysis of bibliographic search results. DESIGN: Retrospective bibliometric comparison of citation selections generated by <b>users</b> in the <b>library.</b> MEASURES: Number of times each journal was identified by <b>library</b> <b>users</b> during multiple bibliographic search sessions. RESULTS: <b>Library</b> <b>users</b> identified 4907 journal titles. The top 200 journal titles accounted for 55 % of the <b>library</b> <b>user</b> journal needs. Of the 1380 unique titles identified, 652 were selected once. CONCLUSION: Our pilot study demonstrated that analysis of bibliographic search results {{can be used to}} identify <b>library</b> <b>user</b> journal needs. Such a method could also be used to estimate user requirements for online, full-text scientific journals...|$|R
40|$|This Paper study about {{relation}} between collect management and retrieval information for <b>users</b> in <b>library.</b> The result from {{this research is}} Technology application in library makes everything more easyer for users and librarian, more efective for information retrieval. But, many librarian and users can’t operate this technology. Librarian they need more technology information training class and for <b>users,</b> <b>library</b> needs make <b>user</b> education program. This paper study hopefully can help for policy makers in library to preparing library services with technology information basic...|$|R
5000|$|Book Drop <b>Library</b> <b>users</b> {{can return}} <b>library</b> {{materials}} {{through the book}} drop counter that operates at all times.|$|R
40|$|We present AutoDVS, {{a dynamic}} voltage scaling (DVS) system for {{hand-held}} computers. Unlike extant DVS systems, AutoDVS distinguishes common, course-grain, program behavior and couples forecasting techniques to make accurate predictions of future behavior. AutoDVS uses these predictions in combination to guide dynamic voltage scaling. AutoDVS estimates periods of user interactivity, user non-interactivity (think time), and computation perprogram and system wide to ensure {{quality of service}} while reducing energy consumption. We describe our implementation of AutoDVS which consists of a set light-weight, Linux, kernel modules and <b>user</b> <b>library</b> routines for the iPAQ hand-held computer. We evaluate AutoDVS using real user workloads of iPAQ software that consist of interactive and soft-real time tasks executing alone and concurrently. Our results indicate that AutoDVS decreases energy consumption significantly without negatively impacting user perception of system performance. 1...|$|E
40|$|This paper {{describes}} the <b>user</b> <b>library</b> {{developed for the}} HiPPI/D module [1][2] running the RD 13 HiPPI/D firmware (DstFmw) [3] used {{in the context of}} the event building studies under way in RD 13. The library consists of the actual library with routines and macros to use the HiPPI/D module and tools to configure and test it. In the following section 2. 0 will explain the communication between the user process and the DstFmw running on the HiPPI/D module. Section 3. 0 {{describes the}} data structures used for this task. Section 4. 0 covers implementation issues and section 5. 0 gives an alphabetical list of all routines and macros in the library. Section 6. 0 gives an example of how to use the library. And section 7. 0 finally explains the tools to configure and test the HiPPI/D module. 2. 0 Communication Schem...|$|E
40|$|PatchWork (PW), (Laurson, 1996 a), is {{a visual}} {{programming}} language which has a direct correspondence to its base languages Common Lisp and CLOS. The user operates with graphical entities (boxes) and defines relations between them {{with the help of}} connections. PW has been extended by several user libraries that are designed to solve specific musical problems. Our focus in this paper is a <b>user</b> <b>library</b> called PWConstraints (Laurson 1996 a and 1996 b). In PWConstraints the user does not formulate stepwise algorithms but describes the desired result with a set of rules. This approach has been used to solve concrete large-scale musical problems. During the last years PWConstraints has been extended to cover other areas such as generation of rhythms, textures and expressions. This paper offers also some new ideas how instrumental writing could be incorporated more deeply in the computer aided composition process...|$|E
50|$|With Library 2.0, library {{services}} are constantly updated and reevaluated to best serve <b>library</b> <b>users.</b> <b>Library</b> 2.0 also attempts {{to harness the}} <b>library</b> <b>user</b> {{in the design and}} implementation of {{library services}} by encouraging feedback and participation. Proponents of this concept, sometimes referred to as Radical Trust expect that the Library 2.0 model for service will ultimately replace traditional, one-directional service offerings that have characterized libraries for centuries.|$|R
40|$|The 9 th International Modelica Conference is {{the main}} event for <b>users,</b> <b>library</b> developers, tool vendors and {{language}} designers to share their knowledge and learn about the latest scientific and industrial progress related to Modelica, to the Modelica Association and to the Functional Mockup Interface. ...|$|R
50|$|MediaMonkey 3.0.1 was {{released}} on December 25, 2007. MediaMonkey 3 was designed specifically with large <b>user</b> <b>libraries</b> in mind. This was seen in version 3.0.3, released on June 19, 2008, which increased the supported library size to 100,000+ tracks (from a previously advertised 50,000 tracks).|$|R
