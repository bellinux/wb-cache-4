0|10000|Public
5000|$|Automatic route {{selection}} {{is a private}} branch exchange (PBX) feature that allows a system to route a telephone call over the most appropriate carrier and service offering based on {{factors such as the}} type of call (i.e., local, local long distance, etc.), the <b>user's</b> <b>class</b> <b>of</b> <b>service</b> (CoS), the time of day, and the day of the week (e.g., workday, weekend, or holiday).|$|R
50|$|SparrowIQ is a packet-based traffic {{analysis}} and network performance monitoring solution that provides network managers with near real-time traffic visibility into network usage based on conversations, applications, <b>users</b> and <b>class</b> <b>of</b> <b>service.</b>|$|R
40|$|It is {{expected}} that some applications like for instance, e-commerce systems, will be able {{in the future to}} provide different levels <b>of</b> <b>service</b> to different <b>classes</b> <b>of</b> <b>users.</b> <b>Classes</b> <b>of</b> <b>service</b> may for instance be access-oriented, performance-oriented or contentoriented. In this paper, we investigate the introduction of differentiated server selection during the phase of server selection and at independent brokerage entities and not at the server level. This has the advantage that service differentiation can be realized using a broker and a set of generic servers, thus enhancing the portability of servers. Development of servers remains generic while brokers implement sophisticated policy requirements. ...|$|R
40|$|In an {{autonomic}} computing system, an autonomic manager makes tuning, load balancing, or provisioning {{decisions based on}} a predictive model of the system. This paper investigates performance analysis techniques {{to be used by}} the autonomic manager. It looks at the complexity of the workloads, and presents algorithms for computing the bounds of performance metrics for distributed systems under asymptotic and non-asymptotic conditions, i. e. with saturated and non-saturated resources respectively. The techniques used are hybrid in nature, making use of performance evaluation and linear and nonlinear programming models. The workloads are characterized by the workload intensity, which represents the total number of users in the system, and by the workload mixes, which depict the number <b>of</b> <b>users</b> in each <b>class</b> <b>of</b> <b>service.</b> The results presented in this paper can be applied to distributed transactional systems. Such systems serve a large number <b>of</b> <b>users</b> with many <b>classes</b> <b>of</b> <b>services</b> and can thus be considered as representative <b>of</b> a large <b>class</b> <b>of</b> {{autonomic computing}} systems...|$|R
50|$|Policy {{conflicts}} are broadly classified into domain-independent and application-specific, where the former, as the names suggest, {{are independent of}} the policy application, and the latter are bound by {{the constraints of the}} application domain. Example application domains that have been considered in the literature include quality <b>of</b> <b>service</b> (QoS) in IP networks, distributed systems, firewall security, and call control in telecommunication networks. Policy conflicts can also be classified according to the time-frame at which they can be detected: static conflicts can be detected through off-line analysis at policy specification time, whereas dynamic conflicts can only be detected when policies are enforced as they depend on {{the current state of the}} managed system. For example, conflicts can occur between policies for dynamically allocating resources and those setting quotas for <b>users</b> or <b>classes</b> <b>of</b> <b>service.</b> As such, automation should be a key aspect of dynamic analysis mechanisms so that the operational impact of a conflict can be kept to a minimum.|$|R
40|$|Abstract â€” Policy-based dynamic {{resource}} management may involve interaction between independent decision-making components {{which can lead}} to conflicts. For example, conflicts can occur between the policies for allocating resources and those setting quotas for <b>users</b> or <b>classes</b> <b>of</b> <b>service.</b> These policy conflicts cannot be detected by static analysis of the policies at specification-time as the conflicts arise from {{the current state of the}} resources within the system and so can only be detected at run-time. In this paper we use policies related to Quality <b>of</b> <b>Service</b> (QoS) provisioning for configuring Differentiated Services (DiffServ) networks to illustrate techniques for the dynamic detection and resolution of conflicts. Configuration includes implementing network provisioning decisions, performing admission control, and adapting bandwidth allocation dynamically according to emerging traffic demands. We identify possible conflicts between policies that manage the allocation of resources, and we also investigate conflicts that may arise between these policies and higher-level directives refined at the dynamic {{resource management}} level, acting as constraints. The paper shows how Event Calculus can be used to detect conflicts, focusing on the ones that emerge at run-time, and provides an approach for specifying policies to automate conflict resolution. The latter is demonstrated through our initial implementation of a dynamic conflict analysis tool. Keywords: Conflict detection; Conflict resolution; Policy-based resource managemen...|$|R
40|$|Policy-based dynamic {{resource}} management may involve interaction between independent decision-making components {{which can lead}} to conflicts. For example, conflicts can occur between the policies for allocating resources and those setting quotas for <b>users</b> or <b>classes</b> <b>of</b> <b>service.</b> These policy conflicts cannot be detected by static analysis of the policies at specification-time as the conflicts arise from {{the current state of the}} resources within the system and so can only be detected at run-time. In this paper we use policies related to quality <b>of</b> <b>service</b> (QoS) provisioning for configuring differentiated services (DiffServ) networks to illustrate techniques for the dynamic detection and resolution of conflicts. Configuration includes implementing network provisioning decisions, performing admission control, and adapting bandwidth allocation dynamically according to emerging traffic demands. We identify possible conflicts between policies that manage the allocation of resources, and we also investigate conflicts that may arise between these policies and higher-level directives refined at the dynamic {{resource management}} level, acting as constraints. The paper shows how event calculus can be used to detect conflicts, focusing on the ones that emerge at run-time, and provides an approach for specifying policies to automate conflict resolution. The latter is demonstrated through our initial implementation of a dynamic conflict analysis too...|$|R
40|$|Recent {{developments}} in the Internet have inspired {{a wide range of}} business and consumer applications. The deployment <b>of</b> multimedia-based <b>services</b> has driven the demand for increased and guaranteed bandwidth requirements over the network. The diverse requirements of the wide range <b>of</b> <b>users</b> demand differentiated <b>classes</b> <b>of</b> <b>service</b> and quality assurance. The new technology of Multi-protocol label switching (MPLS) has emerged as a high performance and reliable option to address these challenges apart from the additional features that were not addressed before. This problem in lieu of thesis describes how the new paradigm of MPLS is advantageous over the conventional architecture. The motivation for this paradigm is discussed in the first part, followed by a detailed description of this new architecture. The information flow, the underlying protocols and the MPLS extensions to some of the traditional protocols are then discussed followed by the description of the simulation. The simulation results are used to show the advantages of the proposed technology...|$|R
40|$|The {{similarities}} and differences between areas inside and outside U. S. metropolitan areas were evaluated in terms of their commercial/industrial and government employment characteristics. The comparison focuses on the levels, shares, and composition of employment in the commercial/industrial and government sectors that represent potential <b>classes</b> <b>of</b> land mobile communications users. The major findings of the analysis are as follows: (1) non-metropolitan commercial/industrial <b>user</b> <b>classes</b> <b>of</b> land mobile communication services exist in significant numbers; (2) the compositions of non-metropolitan and metropolitan commercial/industrial <b>user</b> <b>classes</b> <b>of</b> land mobile communication services closely resemble each other; (3) non-metropolitan areas have significant levels <b>of</b> the government <b>user</b> <b>classes</b> that represent potential markets for land mobile communication services; and (4) non-metropolitan local governments have a significantly larger proportion of their employment in the primary <b>user</b> <b>classes</b> <b>of</b> private land mobile radio service than do metropolitan local governments...|$|R
5000|$|On Amtrak in the United States, [...] "business class" [...] is {{the premium}} <b>class</b> <b>of</b> <b>service</b> on medium-haul trains (such as most Northeast Corridor trains and the Pacific Surfliner), the {{intermediate}} <b>class</b> <b>of</b> <b>service</b> on some long-haul trains (such as the Cardinal) {{and the main}} <b>class</b> <b>of</b> <b>service</b> on Acela Express. [...] "First class" [...] is the premium <b>class</b> <b>of</b> <b>service</b> on Acela Express and is also the designation for sleeper service on long-haul trains.|$|R
500|$|As of September 2013, JAL Express {{operates}} 42 narrow-body aircraft, {{with either}} two <b>classes</b> <b>of</b> <b>service</b> (<b>class</b> J and Economy class) or single <b>class</b> <b>of</b> <b>service</b> (Economy <b>Class).</b> The average fleet age is 3.8 years ...|$|R
40|$|This {{document}} {{focuses on}} <b>Class</b> <b>of</b> <b>Service</b> Interconnection at inter- domain peering points. It specifies two new non-transitive attributes, which enable adjacent peers to signal <b>Class</b> <b>of</b> <b>Service</b> Capabilities and certain <b>Class</b> <b>of</b> <b>Service</b> admission control Parameters. The new "CoS Capability Attribute" is deliberately kept simple and denotes the general EF, AF Group and BE forwarding support across the advertising AS. The second "CoS Parameter Attribute" is of variable length and contains {{a more detailed}} description of available forwarding behaviours using the PHB id Code encoding. Each PHB id Code is associated with rate and size based traffic parameters, which will be applied in the ingress AS Border Router for admission control purposes to a given forwarding behaviour. The denoted <b>Class</b> <b>of</b> <b>Service</b> forwarding support is meant as the AS externally available (transit) <b>Class</b> <b>of</b> <b>Service</b> support...|$|R
30|$|Traffic {{classification}} {{requires the}} ability to accurately associate network traffic to pre-defined <b>classes</b> <b>of</b> interest. These <b>classes</b> <b>of</b> interest can be <b>classes</b> <b>of</b> applications (e.g. HTTP, FTP, WWW, DNS and P 2 P), applications (e.g. Skype [310], YouTube [488] and Netflix [331]), or <b>class</b> <b>of</b> <b>service</b> [390]. A <b>class</b> <b>of</b> <b>service,</b> for instance based on QoS, encompasses all applications or <b>classes</b> <b>of</b> applications that have the same QoS requirements. Therefore, {{it is possible that}} applications that apparently behave differently, belong to the same <b>class</b> <b>of</b> <b>service</b> [462].|$|R
40|$|Abstract. A {{service is}} controllable, if {{there exists a}} service with which it can {{interact}} properly. We sketch an approach to decide controllability for a certain <b>class</b> <b>of</b> <b>services.</b> Controllability is decided by synthesizing a service that controls the given <b>service.</b> For a <b>class</b> <b>of</b> <b>services</b> which abstracts from data, the synthesis problem is already solved. In this paper, we present an approach for a <b>class</b> <b>of</b> <b>services</b> that deals with data explicitly. ...|$|R
40|$|<b>Classes</b> <b>of</b> <b>service</b> are a {{mechanism}} for differentiation <b>of</b> <b>service</b> and quality <b>of</b> <b>service</b> (QoS) that incurs less overhead than custom-made Service Level Agreements (SLAs), user profiles, and other alternatives. For their formal representation for XML (Extensible Markup Language) Web Services, we have developed the Web Service Offerings Language (WSOL). A service offering in WSOL is a formal description <b>of</b> one <b>class</b> <b>of</b> <b>service</b> <b>of</b> a Web <b>Service.</b> It contain...|$|R
40|$|In this article, {{we study}} the {{composition}} of simple and strict service curves in network calculus for two operations: the concatenation of servers and the residual service curves. Whereas strict service curves enable more operations, the strict character of the curves is not stable by those two op-erations. We show that, beyond the already known results about stability for those two <b>classes</b> <b>of</b> <b>service,</b> no stable <b>class</b> <b>of</b> <b>service</b> curve can be defined in between. We compare this result to some <b>classes</b> <b>of</b> <b>service</b> curves that has been defined in the literature...|$|R
30|$|Configurable {{bandwidth}} {{limits are}} defined for each <b>class</b> <b>of</b> <b>service.</b>|$|R
5000|$|... collect: {{implement}} X.500-style collective attributes (aka Netscape <b>Class</b> <b>Of</b> <b>Service)</b> ...|$|R
5000|$|ACs map {{directly}} from Ethernet-level <b>class</b> <b>of</b> <b>service</b> (CoS) priority levels: ...|$|R
5000|$|MEF 23.1 [...] <b>Class</b> <b>of</b> <b>Service</b> Phase 2 Implementation Agreement (supersedes MEF 23) ...|$|R
5000|$|Business Class Check-In at fully {{integrated}} M&M airlines regardless <b>of</b> the flown <b>class</b> <b>of</b> <b>service</b> ...|$|R
40|$|Virtual {{worlds are}} {{increasing}} in importance as more multi-national firms are investing heavily in these emerging communities. Although much excitement has surrounded {{the idea of}} virtual worlds, a gap exists between those who register and those who engage in virtual worlds. Our analysis of the gap between those who merely register to join a virtual world and those who ultimately engage the community {{on a regular basis}} derives from a lack of assimilation. We present the 3 C approach, a high-level theoretical framework delineating the relationship between three <b>classes</b> <b>of</b> factors (namely the technology <b>class</b> <b>of</b> factors; the community <b>class</b> <b>of</b> factors; and the <b>user</b> <b>class</b> <b>of</b> factors) that we posit explain virtual world assimilation and employ theories to represent these <b>classes</b> <b>of</b> factors and the interaction between them. After discussing and integrating these three <b>classes</b> <b>of</b> factors, we test our model through a study of 223 new users of Second Life. The results provide empirical support for the 3 C framework; specifically, our analysis indicates that the technology and community <b>classes</b> <b>of</b> factors in exert a direct influence upon a user's attitude towards the virtual world, and this relationship is moderated by the <b>user</b> <b>class</b> <b>of</b> factors. close...|$|R
5000|$|Predictability and Reliability: {{allows the}} {{deterministic}} delivery of highest priority messages by using <b>Class</b> <b>of</b> <b>service.</b>|$|R
5000|$|... #Caption: Technical Officer Malcolm Harris adds a wire {{threading}} to the {{cyclic store}} of the TXE 3 model {{to record the}} directory and equipment numbers and the <b>class</b> <b>of</b> <b>service</b> <b>of</b> subscribers ...|$|R
30|$|The second {{argument}} is {{to propose a}} technology-agnostic solution. The method proposed by Kingsley and Dahj [17] was built focusing on the <b>service</b> <b>classes</b> <b>of</b> 3 G mobile networks. As mobile network technologies are evolving, different <b>classes</b> <b>of</b> <b>services</b> and applications are emerging. The SQM-tree proposed in this paper {{can be used for}} multiple technologies. This allow operators to use the same system for upcoming technologies such as 5 G mobile network with different <b>classes</b> <b>of</b> <b>services.</b>|$|R
50|$|TriStar Airlines {{offered only}} one <b>class</b> <b>of</b> <b>service,</b> economy <b>class.</b> It offered {{assigned}} seating and complimentary snacks and beverages.|$|R
5000|$|IEEE 802.1p defines 8 {{different}} <b>classes</b> <b>of</b> <b>service</b> (including one {{dedicated to}} voice) for traffic on layer-2 wired Ethernet.|$|R
40|$|The Web Service Offerings Language (WSOL) {{is a novel}} {{language}} for the formal specification <b>of</b> <b>classes</b> <b>of</b> <b>service,</b> various types <b>of</b> constraint, and management statements for Web Services. Compared with recent competing works, WSOL has several unique characteristics. One {{of them is a}} diverse set of reusability constructs: definition <b>of</b> <b>service</b> offerings, definition <b>of</b> constraint groups, definition and instantiation of constraint group templates, extension, inclusion, specification of applicability domains, and declaration of operation calls. These constructs enable sharing parts of WSOL specifications between <b>classes</b> <b>of</b> <b>service</b> <b>of</b> different Web <b>Services</b> and development <b>of</b> libraries of reusable WSOL specifications. Consequently, they can help in alleviating heterogeneity <b>of</b> Web <b>Services.</b> In addition, reusability constructs are useful for easier development of new WSOL specifications from existing ones, for easier selection <b>of</b> Web <b>Services</b> and their <b>classes</b> <b>of</b> <b>service,</b> and for dynamic (run-time) adaptation of relationships between provider and consumer Web <b>Services.</b> An integration <b>of</b> WSOL reusability constructs into the works competing with WSOL would be beneficial...|$|R
3000|$|Two <b>classes</b> <b>of</b> <b>services</b> are considered: QoS, {{corresponding}} to services with certain guaranteed QoS levels (represented through the set [...]...|$|R
50|$|Modern ANI has two {{components:}} information digits, which {{identify the}} <b>class</b> <b>of</b> <b>service,</b> and the calling party billing telephone number.|$|R
40|$|This paper {{deals with}} discrete-time version of problem as to {{selecting}} profitable orders outof customers sequentially arriving at companies operating in service industries which provide twoclasses <b>of</b> <b>services.</b> The first <b>class</b> <b>of</b> <b>service</b> {{is designed to}} meet the various needs of their customers, and the company 1) has an option to accept or reject a particular order (admission control), or 2) decides the price of a particular order to offer to an arriving customer (pricing control). The second <b>classes</b> <b>of</b> <b>service</b> is provided as a sideline to avoid server 2 Ì† 7 s being idle, and to yield extra income, referred to as the profit from a sideline; in other words, the second <b>class</b> <b>of</b> <b>service</b> is offered only when the number of orders for the first <b>class</b> <b>of</b> <b>service</b> is less than the number of servers. Further, a cost is paid to search for customers, called the search cost. The introduction of thesearch cost eventually yields the option {{as to whether or not}} to conduct the search. We discuss the admission control problem and pricing control problem in an identical framework and investigatethe following problems:Access: via WW...|$|R
50|$|As of August 1, 2006, LAN Airlines merged {{first and}} {{business}} <b>classes</b> <b>of</b> <b>service</b> {{into a single}} class, named Premium Business.|$|R
5000|$|Italo offers four <b>classes</b> <b>of</b> <b>service,</b> {{which it}} refers to as [...] "journey ambiances". Free Wi-Fi is {{available}} throughout the train.|$|R
40|$|Abstract. WSOL (Web Service Offerings Language) is an XML (Extensible Markup Language) {{notation}} {{compatible with}} the WSDL (Web Services De-scription Language) standard. While WSDL is used for describing operations provided by Web Services, WSOL enables formal specification <b>of</b> multiple <b>classes</b> <b>of</b> <b>service</b> for one Web Service. A service offering is a formal represen-tation <b>of</b> one <b>class</b> <b>of</b> <b>service</b> for a Web <b>Service.</b> As <b>classes</b> <b>of</b> <b>service</b> for Web Services are determined by combinations of various constraints, WSOL enables formal specification of functional constraints, some QoS (a. k. a., non-functional) constraints, simple access rights (for differentiation <b>of</b> <b>service),</b> price, and rela-tionships with other <b>service</b> offerings <b>of</b> the same Web Service. Describing a Web Service in WSOL, in addition to WSDL, enables selection of a more ap-propriate Web Service and service offering for particular circumstances. Fur-ther, it supports dynamic adaptation and management <b>of</b> Web <b>Service</b> composi-tions using manipulation <b>of</b> <b>service</b> offerings. ...|$|R
5000|$|Smart: {{the lowest}} <b>class</b> <b>of</b> <b>service,</b> with 2x2 leather seats with table and airline style, and snacks for {{purchase}} from vending machines.|$|R
40|$|This paper proposes an {{admission}} control mechanism based upon two grooming strategies; lightpath-create-first and lightpath-create-last. The key {{feature of the}} proposed mechanism considers the condition when multiple identical requests associated with a source, destination, and <b>class</b> <b>of</b> <b>service</b> arrive simultaneously at an edge router. The mechanism is implemented and investigated using a simulation model of a distributed GMPLS-based IP/WDM network. Moreover, a methodology for providing a <b>class</b> <b>of</b> <b>service</b> based on this mechanism is also proposed...|$|R
