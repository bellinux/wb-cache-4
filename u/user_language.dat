69|2462|Public
50|$|Search engines use hreflang to {{understand}} the lingual and geographical targeting of websites and use the information to show the right URL in search results, depending on <b>user</b> <b>language</b> and region preference.|$|E
50|$|Google {{introduced}} personalized {{search in}} 2004 {{and it was}} implemented in 2005 to Google search. Google has personalized search implemented for all users, not only those with a Google account. There is not much information on how exactly Google personalizes their searches; however, {{it is believed that}} they use <b>user</b> <b>language,</b> location, and web history.|$|E
50|$|As a {{frame-based}} system, every SNePS functional term (including proposition-valued terms) {{is represented}} by a frame with slots and fillers. Each slot may be filled by an arbitrarily-sized set of other terms. However, cycles cannot be constructed. SNePSUL, the SNePS <b>User</b> <b>Language</b> is an input-output language for interacting with SNePS in its guise as a frame-based system.|$|E
50|$|He also {{defined the}} {{research}} area of universal usability to encourage {{greater attention to}} diverse <b>users,</b> <b>languages,</b> cultures, screen sizes, network speeds, and technology platforms.|$|R
5000|$|Extras (plugins), such as {{search engine}} {{optimized}} URLs, custom entrance, login and logout pages, display specific themes based upon <b>user's</b> <b>language,</b> {{time of day}} or date and custom advertising pages.|$|R
5000|$|Match between {{system and}} the real world:The system should speak the <b>user's</b> <b>language,</b> with words, phrases and {{concepts}} familiar to the user, rather than system-oriented terms. Follow real-world conventions, making information appear in a natural and logical order.|$|R
50|$|The data {{modeling}} {{features of the}} French and English editions were originally following 2 different methodologies: Merise for PowerAMC and IE/Information engineering (based on Yourdon / DeMarco works) for PowerDesigner. Since version 7, both editions support all methodologies and only differ from their <b>user</b> <b>language.</b> From v16.6 onwards, both Edition are called PowerDesigner and are delivered in a single installer.|$|E
50|$|Data {{collected}} as part {{of mobile}} analytics typically includes page views, visits, visitors, and countries, {{as well as information}} specific to mobile devices, such as device model, manufacturer, screen resolution, device capabilities, service provider, and preferred <b>user</b> <b>language.</b> This data is typically compared against key performance indicators for performance and return on investment, and is used to improve a website or mobile marketing campaign's audience response.|$|E
50|$|Multi-competence has {{two major}} {{implications}} for language teaching. The first {{is about the}} question of what the final goal should be for language learners. The multi-competence viewpoint sees the goal of learning as becoming a successful L2 <b>user.</b> <b>Language</b> teaching, therefore, should reflect this: the goals of language learning should be based on what successful L2 users can do, not what monolingual native speakers can do. Also, teaching materials should show positive examples of L2 use and L2 users.|$|E
50|$|Traditional transmissionAlso called {{cultural}} transmission. While {{humans are}} born with innate language capabilities, language is learned after birth in a social setting. Children learn how to speak by interacting with experienced <b>language</b> <b>users.</b> <b>Language</b> and culture are woven together.|$|R
40|$|The {{focus of}} this series is on psycholinguistic and sociolinguistic aspects of bilingualism. This entails topics such as {{childhood}} bilingualism, psychological models of bilingual <b>language</b> <b>users,</b> <b>language</b> contact and bilingualism, maintenance and shift of minority languages, and socio-political aspects of bilingualism...|$|R
50|$|Metalink is an {{extensible}} metadata {{file format}} that describes {{one or more}} computer files available for download. It specifies files appropriate for the <b>user's</b> <b>language</b> and operating system; facilitates file verification and recovery from data corruption; and lists alternate download sources (mirror URIs).|$|R
50|$|However, such organisations also warn {{consumers}} of certain risks in using parallel-imported products. Although the products {{may have been}} made to comply with the laws and customs of their place of origin, these products or their use may not comply with those in places where they are used, or some of their functions may be rendered unusable or meaningless (which may needlessly drive up prices). Electronic devices, however, suffer less from this type of risk because newer models support more than one <b>user</b> <b>language.</b>|$|E
50|$|On a {{keyboard}} used for telematic functions, the symbols “” and “#” represent the initiator and the terminator. On {{a keyboard}} used for office purposes, the key denoted by “#” shall show the decimal separator (usually a dot or a comma, {{dependent on the}} <b>user</b> <b>language).</b> On such keyboards, the key position marked by the asterisk may be {{an extension of the}} “0” key, or a “double zero” key. Accordingly, if the yellow key position is used, it may be also an extension of the “0” key, a “double zero” key, or a “triple zero” key.|$|E
40|$|This {{document}} {{attempts to}} merge several existing proposals for E-Lotos, {{in order to}} provide a unified definition for the <b>User</b> <b>Language</b> of E-Lotos, covering several aspects that were so far addressed independently each from the others. This proposal covers the data type part of E-Lotos, as well as the behaviour part, including gate typing. The document first provides rationale for the proposed language features. Then, an abstract syntax of the <b>User</b> <b>Language</b> is given. The static and dynamic semantics of this <b>User</b> <b>Language</b> are defined formally, by using successive translations of the <b>User</b> <b>Language</b> into refined, more primitive sub-languages. Finally, several use examples of the <b>User</b> <b>Language</b> are given, including the Lotos standard data type library and some of the type definitions contained in the so-called Lotosphere proposal. This work has been supported in part by the Commission of the European Communities, under project ISC-CAN- 65 "EUCALYPTUS- 2 : A European/Canadian Lotos Protocol T [...] ...|$|E
50|$|FastPictureViewer is {{extensible}} via COM-based plug-ins, whose specifications {{are available}} from the software publisher upon request. The software adopts the <b>user's</b> <b>language</b> automatically (currently available for Brazilian/Portuguese, Simplified and Traditional Chinese, Dutch, English, French, German, Hungarian, Italian, Japanese, Korean, Polish, Romanian, Russian, Slovenian, Spanish).|$|R
50|$|In computing, a locale {{is a set}} of {{parameters}} {{that defines}} the <b>user's</b> <b>language,</b> region and any special variant preferences that the user wants to see in their user interface. Usually a locale identifier consists of at least a language identifier and a region identifier.|$|R
50|$|AR {{systems such}} as Word Lens can {{interpret}} the foreign text on signs and menus and, in a user's augmented view, re-display the text in the <b>user's</b> <b>language.</b> Spoken words of a foreign language can be translated and displayed in a user's view as printed subtitles.|$|R
40|$|Abstract In {{response}} to growing needs for cross-lingual patent retrieval, we propose PRIME (Patent Retrieval In Multilingual Environment system), in which users can retrieve and browse patents in foreign languages {{only by their}} native language. PRIME translates a query in the <b>user</b> <b>language</b> into the target language, retrieves patents relevant to the query, and translates retrieved patents into the <b>user</b> <b>language.</b> To update a translation dictionary, PRIME automatically extracts new translations from parallel patent corpora. In the current implementation, trilingual (J/E/K) patent retrieval is available. We describe the system design and its evaluation...|$|E
40|$|This paper {{describes}} {{a system for}} lexical knowledge representation and retrieval in interpersonal communication aids, developed {{in the context of}} an innovative modular architecture for the design and development of functionally adaptable interpersonal communicators. This module supports <b>user</b> <b>language</b> adaptability, and communication between users of different languages...|$|E
40|$|A new {{software}} tool, Caesy, is described. This tool provides a strongly typed programming environment {{for research in}} the development of algorithms and software for computer-aided control system design. A description of the <b>user</b> <b>language</b> and its implementation as they currently stand are presented along with a description of work in progress and areas of future work...|$|E
5000|$|... #Subtitle level 3: Multilingual <b>User</b> Interface <b>language</b> packs ...|$|R
50|$|XAML <b>User</b> {{interface}} <b>language</b> using {{vector graphics}} for images.|$|R
40|$|Previous {{work has}} {{revealed}} general characteristics of language change {{at both the}} level of linguistic communities {{as well as individual}} speakers. What are the properties of <b>language</b> <b>users</b> such that we can account for these characteristics? To address this question, we built a computational model of a social network of <b>language</b> <b>users.</b> By holding the network structure constant and varying properties of the <b>language</b> <b>users,</b> we found that language change reflects both the structure of social networks and properties of <b>language</b> <b>users.</b> In particular, our results suggest that although <b>language</b> <b>users</b> must be capable of probabilistically accessing multiple grammars, they must prefer to access a single grammar categorically...|$|R
40|$|AbstractMost {{declarative}} formalisms do {{not support}} changes to the program state. In consequence, {{the benefits of a}} declarative programming style cannot be realized when writing state-changing programs such as environments and programming tools. Backus proposes applicative state transition systems as a solution to this problem. In such systems, computation and update are separated: programs are interpreted as defining functions over states, and update follows successful computation of new states. This paper shows how this idea can be used in practice. A class of programming systems termed declarative state transition (DST) systems is defined. A DST system supports program access to state, incremental description of new states, persistence, and atomic, serializable transactions. These features resolve problems inherent in Backus's original proposal. They are made available in an extended declarative language, which supports a declarative treatment of file system update. This <b>user</b> <b>language</b> is used to implement programming environments and tools. The approach is illustrated by a description of the design and application of Parlog+, the <b>user</b> <b>language</b> in a DST system for parallel logic programming...|$|E
40|$|A {{system for}} imaging {{scientific}} telemetric information, {{based on the}} M- 6000 minicomputer and the SIGD graphic display, is described. Two dimensional graphic display of telemetric information and interaction with the computer, in analysis and processing of telemetric parameters displayed on the screen is provided. The running parameter information output method is presented. User capabilities in the analysis and processing of telemetric information imaged on the display screen and the <b>user</b> <b>language</b> are discussed and illustrated...|$|E
40|$|Abstract. This paper {{describes}} the DiKe model-based diagnosis framework, which incorporates multiple diagnosis engines, multiple user-level system description languages, a theorem prover, and a {{graphical user interface}} to provide an inte-grated toolset {{for the development of}} model-based diagnosis applications. The framework has been used for representing a number of application domains. We present the AD 2 L language, the main <b>user</b> <b>language</b> for the system geared to-wards use by non-specialists, and discuss use of DiKe in various domains. ...|$|E
40|$|This report gives {{a survey}} of <b>user</b> {{interface}} <b>languages</b> and formal representations of user interfaces. The following aspects of <b>User</b> Interface <b>Languages</b> are considered: expressiveness; readability; evaluation (is it possible to evaluate the ergonomic and functional quality of the user interface from the representation); manipulation; compilation/interpretation; possibility to include knowledge representation...|$|R
40|$|This paper {{describes}} {{a model of}} the emergence and the universal structural tendencies of vowel systems. Both are considered as the result of self-organisation in a population of <b>language</b> <b>users.</b> The <b>language</b> <b>users</b> try to imitate each other and to learn each other's vowel systems as well as possible under constraints of production and perception, {{while at the same time}} maximising the number of available speech sounds...|$|R
25|$|Blueprint <b>users</b> (<b>language</b> <b>users)</b> in the {{toolmakers}} paradigm can converge by inference on accurate replications of others' tools (mental content) after a laborious {{series of}} exchanges. Using the same diagram for the conduit-metaphor paradigm instead, the hub is a duplicator that can transfer actual materials and constructions among sectors, ending the isolation. No guesswork or construction is needed: Alex puts the rake {{in a special}} chamber, pushes a button, and precise replicas appear instantly in similar chambers for Bob, Curt and Don.|$|R
40|$|The {{processing}} of multi database transactions requires {{not only a}} powerful non procedural <b>user</b> <b>language</b> to express a query on several databases but also the possibility to specify the execution control of such queries. In this paper, we show how transaction control {{can be added to}} MSQL queries. A minimal set of language primitives is combined with the VPL (Vienna Parallel Logic) language so that the dynamic formulation of MSQL queries with explicit control specification is supported...|$|E
40|$|Abstract. In {{this paper}} we {{describe}} Bliss 2003, an Information and Communication Technology (ICT) aid for verbal impaired people sup-porting {{the use of}} Augmentative and Alternative Communication (AAC) languages. Bliss 2003 allows to compose messages in Bliss and other AAC languages (i. e. PCS, PIC, etc.), to translate them in natural lan-guage, to send and receive them via email, or to vocally synthetize them. Bliss 2003 {{is characterized by a}} predictive module that allows for a more efficient selection of graphical symbols and more natural sessions of com-munication by adapting a model of the <b>user</b> <b>language</b> behavior. ...|$|E
40|$|The aim of {{this thesis}} was to pick up with the {{structure}} of soldering pads positional data of PCB Phoenix X-ray Micromex 180 and then to create programs for export of input data for this device. Theoretical part of this thesis {{is dedicated to the}} description of X-ray equipment and also, to the issues of conversion of positional data, folowed by PCB manufacturing formats description. The first part of the thesis deals with the process of creating the <b>User</b> <b>Language</b> Program (ULP) for PCB design software Cadsoft Eagle, in second part a program was made program for exporting data from ODB++ format...|$|E
40|$|This paper {{describes}} {{a model for}} explaining the emergence and the universal structural tendencies of vowel systems. Both are considered {{as the result of}} self-organisation in a population of <b>language</b> <b>users.</b> The <b>language</b> <b>users</b> try to imitate each other and to learn each other's vowel systems as well as possible under constraints of production and perception, {{while at the same time}} maximising the number of available speech sounds...|$|R
50|$|The message {{contains}} {{a list of}} up to 2048 event phrases defined by 11 binary bits (of which 1402 were in use as of 2007) that can be translated by the receiver into the <b>user's</b> <b>language.</b> Some phrases describe individual situations such as a crash, while others cover combinations of events such as construction causing long delays.|$|R
5000|$|For each language, Duolingo {{also has}} a [...] "Progress Quiz" [...] feature, an {{extended}} quiz found in the Lingot store for 25 lingots. It measures the <b>user's</b> <b>language</b> learning progress on a 5 point scale, with 5 being the best score. This quiz is not adjusted to the player's level and only tests overall language competence.|$|R
