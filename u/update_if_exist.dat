0|10000|Public
40|$|In {{this paper}} {{we aim at}} finding {{conditions}} under which risk measures can be consistently updated. Since the class of risk measures that allow dynamically consistent updates appears to be limited, we consider weaker notions of consistency in addition to dynamic consistency, concentrating on notions that are still strong enough to ensure uniqueness of updating. We show that a weak type of consistency called conditional consistency does have the uniqueness property, and we identify an update operator that must produce the consistent <b>update</b> <b>if</b> there <b>exists</b> such an update. We give necessary as well as sufficient conditions {{for the existence of}} consistent updates of a given risk measure, in the sense of conditional consistency and in related senses, and we clarify the relations between several notions of consistency. The theory is illustrated by examples of existence and nonexistence of consistent updates...|$|R
40|$|Abstract. View {{updating}} is a {{long standing}} difficult problem. Given a view defined over base data sources and a view update, there are several different updates over the base data sources, called translations, that perform the update. A translation {{is said to be}} correct if it performs the update {{and at the same time}} does not update any portion of the view not specified in the update (no view side-effects). The view update prob-lem finds a correct translation for a given view <b>update</b> <b>if</b> one <b>exists.</b> In the relational scenario, previous research has attempted to study the view update problem either by utilizing only the schema knowledge, or by directly examining the base data. While utilizing only the schema knowledge is very efficient, we are not guaranteed to find a correct translation even <b>if</b> one <b>exists.</b> On the other hand, examining the base data is guaranteed to find a correct translation <b>if</b> one <b>exists,</b> but is very time-consuming. The view update problem is even more complex in the XML context due to the nested hi-erarchical structure of XML and the restructuring capabilities of the XQUERY view specification. In this paper we propose a schema-centric framework, named HUX, for efficiently updating XML views specified over relational databases. HUX is com-plete (always finds a correct translation <b>if</b> one <b>exists)</b> and is efficient. The efficiency of HUX is achieved as follows. Given a view update, HUX first exploits the schema to determine whether there will never be a correct translation, or there will always be a correct translation. Only <b>if</b> the <b>update</b> cannot be classified using the schema, HUX will examine the base data to determine if there is a correct translation. This data-level checking is further optimized in HUX, by exploiting the schema knowledge extracted in the first step to significantly prune the space of potential translations that is explored. Experiments illustrate the performance benefits of HUX over previ-ous solutions. ...|$|R
40|$|Although most of {{the theory}} {{development}} concerning risk measures has concentrated on convex or even coherent risk measures, nonconvex risk measures are used in practice, the prime example of course being Value-at-Risk. The {{purpose of this paper}} is to investigate the relations between various notions of time consistency for nonconvex risk measures. We focus on three notions in particular which, as we show, all satisfy a certain compatibility property that other notions of consistency do not always have. One of these notions is the strong consistency (also called dynamic consistency) that has received most attention in the literature. Despite the fact that the other two notions are weaker, we show that they are still strong enough to make consistent <b>updates</b> unique <b>if</b> they <b>exist</b> at all. We give a number of sufficient and necessary conditions that an aggregate risk measure has to satisfy for consistent updating to be possible...|$|R
50|$|Aptana Studio {{comes with}} the {{following}} JavaScript libraries, but more can be added or <b>updated</b> <b>if</b> desired.|$|R
5000|$|...#*#2432546#*#* (spells CHECKIN) Checks for <b>updates.</b> <b>If</b> {{check-in}} fails, {{an alert}} {{will appear in}} the notification bar.|$|R
5000|$|Web Forms {{standards}} such as XForms to {{know what}} visual elements to <b>update</b> <b>if</b> data in the model changes.|$|R
3000|$|... is selected, the {{distances}} to its adjacent vertices are <b>updated.</b> <b>If</b> {{the distance from}} the origin vertex to the pivot (D[w [...]...|$|R
25|$|This {{article has}} been written in 2008, with updates {{concerning}} access figures in 2012. Please feel free to further <b>update</b> <b>if</b> need be.|$|R
3000|$|... [...]. T is not <b>updated</b> <b>if</b> {{correlation}} {{lies between}} these two thresholds. The sampling duration T is changed using a scaling parameter κ as earlier.|$|R
5|$|Seismic {{activity}} is {{monitored by the}} USGS Cascades Volcano Observatory in Vancouver, Washington, which issues weekly updates (and daily <b>updates</b> <b>if</b> significant eruptive {{activity is}} occurring at a Cascades volcano).|$|R
50|$|A print {{may exist}} in the Library of Congress collection. The Library of Congress online {{database}} shows no listing and {{may need to be}} <b>updated</b> <b>if</b> a print does exist.|$|R
50|$|A Facebook page of Weather Underground (香港地下天文台) {{is created}} in March, 2011. The page will <b>update</b> <b>if</b> {{there is any}} weather events and warnings, such as typhoon, rainstorm, monsoon and earthquakes.|$|R
5000|$|Confusion {{about where}} the Tennessee 4 came from, as they were not listed in the heats. There may be {{confusion}} between Temple and Tennessee. Please <b>update</b> <b>if</b> you have more information ...|$|R
3000|$|After allocating the tasks, the {{constructed}} bipartite is <b>updated</b> <b>if</b> any task {{remain to}} be processed. Fig.  5 is the bipartite graph of the set of virtal machine and set of resources.|$|R
50|$|A {{property}} binding specifies {{the value}} of a property in a declarative way. The property value is automatically <b>updated</b> <b>if</b> the other properties or data values change, following the reactive programming paradigm.|$|R
30|$|This process {{allows for}} the {{emphasizing}} of the crack, <b>if</b> <b>exists.</b>|$|R
5000|$|... {{supports}} gzip, zlibraw, zlib formats {{using the}} zlib library <b>if</b> <b>exists</b> ...|$|R
50|$|Note: So far, {{based on}} 2012 -2013 school year {{data from the}} OGSD {{official}} website. The number of students and teachers {{may be out of}} date. Please <b>update</b> <b>if</b> you have any information.|$|R
5000|$|Let [...] {{denote the}} length of the largest suffix of [...] that is also a prefix of , <b>if</b> one <b>exists.</b> <b>If</b> none <b>exists,</b> let [...] be zero.|$|R
50|$|Subscribe would update any file in {{the left}} folder that also exists in the right folder and {{is found to be}} older. No new files would be copied, only {{existing}} files <b>updated,</b> <b>if</b> needed.|$|R
40|$|Abstract. We {{study the}} problem of {{updating}} XML views defined over XML documents. A view update is performed by finding the base updates over the underlying data sources that achieve the desired view <b>update.</b> <b>If</b> such base <b>updates</b> do not exist, the view update {{is said to be}} untranslatable and rejected. In SQL, determining whether a view update is translatable is performed using schema level analysis, where the view definition and the base schema are used. XML schemas are more complex than SQL schemas, and can specify recursive types and cardinality constraints. In this paper, we propose a solution based on schema level analysis for determining whether an update over XML views is translatable and for finding the translation <b>if</b> one <b>exists,</b> while considering the features of XML schemas. ...|$|R
5000|$|Notice that as {{addressed}} in Behavior of Atomic DEVS, {{depending on the}} value of [...] return by , last event time,, and next event time,,consequently, elapsed time, , and lifespan, are <b>updated</b> (<b>if</b> [...] ) or preserved (if [...] ).|$|R
5000|$|... <b>if</b> this limit <b>exists.</b> <b>If</b> all limits <b>exist</b> up to α0, {{then the}} series converges.|$|R
3000|$|..., {{then the}} value of DPV and the {{timestamp}} is <b>updated.</b> <b>If</b> the DPV of a node is not refreshed for long duration, the entry becomes invalid and is not used for selection of the next hop node.|$|R
5000|$|Revised Project Management Team List This team {{comprises}} the entire management structure of Project Board, project manager, plus any Team Managers and project assurance roles. The team is checked and changes are <b>updated</b> <b>if</b> there are any.|$|R
50|$|Theorem 1. For each number a in A, D*f(a) <b>exists</b> <b>if</b> {{and only}} <b>if</b> DF(α−1(a)) <b>exists,</b> and <b>if</b> they do <b>exist,</b> then D*f(a) = β(DF(α−1(a))).|$|R
30|$|Theorem: The {{interconnecting}} node D, <b>if</b> <b>exists,</b> {{is always}} {{located in the}} IC triangle as defined above.|$|R
2500|$|In {{a variant}} of the method, a pixel's {{distribution}} is only <b>updated</b> <b>if</b> it is classified as background. This is to prevent newly introduced foreground objects from fading into the background. The update formula for the mean is changed accordingly: ...|$|R
5000|$|Basic {{exception}} safety: Implemented {{by ensuring}} that the size field is guaranteed to be <b>updated</b> <b>if</b> [...] is successfully inserted. Also, all allocations need to be handled {{in a way that}} prevents any chance of a resource leak, regardless of failure.|$|R
5000|$|In {{a variant}} of the method, a pixel's {{distribution}} is only <b>updated</b> <b>if</b> it is classified as background. This is to prevent newly introduced foreground objects from fading into the background. The update formula for the mean is changed accordingly: ...|$|R
5000|$|On {{receiving}} a message, the counter {{of the recipient}} is <b>updated,</b> <b>if</b> necessary, to the greater of its current counter and the timestamp in the received message. The counter is then incremented by 1 before the message is considered received.|$|R
30|$|Step 7 : Select a non-zero entry {{from that}} row {{to form a}} fuzzy Hamiltonian cycle, <b>if</b> <b>exists.</b>|$|R
5000|$|... {{search the}} list {{to see if the}} value to be deleted <b>exists,</b> <b>if</b> <b>exists</b> mark the node logically deleted ...|$|R
50|$|ESET SysRescue Live is a Linux-based {{bootable}} Live CD/USB {{image that}} can be used to boot and clean heavily-infected computers independent of the installed operating system. The program is offered free of charge, and can download <b>updates</b> <b>if</b> a network connection is present.|$|R
30|$|Condition R 3 : Despite those {{referred}} to in Condition R 2, rotations of limbs (<b>if</b> <b>exist)</b> must be complete.|$|R
50|$|The theorem {{does not}} assert the {{existence}} of a non-trivial decomposition, but merely any such two decompositions (<b>if</b> <b>exist)</b> are same.|$|R
