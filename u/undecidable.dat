4902|4|Public
5|$|Wang tiles are squares {{coloured}} on each edge, {{and placed}} so that abutting edges of adjacent tiles {{have the same}} colour; hence they are sometimes called Wang dominoes. A suitable set of Wang dominoes can tile the plane, but only aperiodically. This is known because any Turing machine can be represented {{as a set of}} Wang dominoes that tile the plane if and only if the Turing machine does not halt. Since the halting problem is <b>undecidable,</b> the problem of deciding whether a Wang domino set can tile the plane is also <b>undecidable.</b>|$|E
5|$|Wang's student Robert Berger {{proved that}} the Domino Problem was <b>undecidable</b> (so Wang's {{conjecture}} was incorrect) in his 1964 thesis, and obtained an aperiodic set of 20426 Wang dominoes. He also described a reduction to 104 such prototiles; the latter did not appear in his published monograph, but in 1968, Donald Knuth detailed a modification of Berger's set requiring only 92 dominoes.|$|E
5|$|Several {{methods are}} known for {{defining}} cellular automata rules that are reversible; these include the block cellular automaton method, in which each update partitions the cells into blocks and applies an invertible function separately to each block, and the second-order cellular automaton method, in which the update rule combines states from two previous steps of the automaton. When an automaton is not defined by one of these methods, but is instead given as a rule table, the problem of testing whether it is reversible is solvable for block cellular automata and for one-dimensional cellular automata, but is <b>undecidable</b> for other types of cellular automata.|$|E
25|$|A {{consistent}} {{theory that}} has the property that every consistent extension is <b>undecidable</b> {{is said to be}} essentially <b>undecidable.</b> In fact, every consistent extension will be essentially <b>undecidable.</b> The theory of fields is <b>undecidable</b> but not essentially <b>undecidable.</b> Robinson arithmetic is known to be essentially <b>undecidable,</b> and thus every consistent theory that includes or interprets Robinson arithmetic is also (essentially) <b>undecidable.</b>|$|E
25|$|Some {{questions}} that are <b>undecidable</b> for wider classes of grammars become decidable for context-free grammars; e.g. the emptiness problem (whether the grammar generates any terminal strings at all), is <b>undecidable</b> for context-sensitive grammars, but decidable for context-free grammars.|$|E
25|$|Martin Davis, The <b>Undecidable,</b> Basic Papers on <b>Undecidable</b> Propositions, Unsolvable Problems and Computable Functions, Raven Press, New York, 1965. The two {{papers of}} Post {{referenced}} above {{are included in}} this volume. Other papers include those by Godel, Church, Rosser, and Kleene.|$|E
25|$|The {{interpretability}} {{method is}} often used to establish undecidability of theories. If an essentially <b>undecidable</b> theory T is interpretable in a consistent theory S, then S is also essentially <b>undecidable.</b> This is closely related to the concept of a many-one reduction in computability theory.|$|E
25|$|Some team {{games with}} {{imperfect}} information are <b>undecidable.</b>|$|E
25|$|It {{was shown}} by Pyotr Novikov in 1955 that {{there exists a}} finitely {{presented}} group G such that the word problem for G is <b>undecidable.</b> It follows immediately that the uniform word problem is also <b>undecidable.</b> A different proof was obtained by William Boone in 1958.|$|E
25|$|Grzegorczyk {{proved the}} {{elementary}} theory of closure algebras <b>undecidable.</b>|$|E
25|$|The halting {{problem is}} {{historically}} {{important because it}} was one of the first problems to be proved <b>undecidable.</b> (Turing's proof went to press in May 1936, whereas Alonzo Church's proof of the undecidability of a problem in the lambda calculus had already been published in April 1936 (Church, 1936).) Subsequently, many other <b>undecidable</b> problems have been described.|$|E
25|$|Gödel's (first) incompleteness theorem {{shows that}} many axiom systems of {{mathematical}} interest will have <b>undecidable</b> statements.|$|E
25|$|In 1972, J. H. Conway {{proved that}} a natural {{generalization}} of the Collatz problem is algorithmically <b>undecidable.</b>|$|E
25|$|Many mild {{extensions}} of the first order theory of abelian groups {{are known to be}} <b>undecidable.</b>|$|E
25|$|Ray tracing in 3D optical {{systems with}} a finite set of {{rectangular}} reflective or refractive objects is <b>undecidable.</b>|$|E
25|$|Robinson {{arithmetic}} (and therefore any consistent extension, such as Peano arithmetic) {{is essentially}} <b>undecidable,</b> as established by Raphael Robinson in 1950.|$|E
25|$|Ray tracing in 3D optical {{systems with}} a finite set of {{refractive}} objects {{represented by a}} system of rational linear inequalities is <b>undecidable.</b>|$|E
25|$|Background texts: The {{following}} {{bibliography of}} source papers includes {{a number of}} texts {{to be used as}} background. The mathematics that led to the flurry of papers about abstract machines in the 1950s and 1960s can be found in van Heijenoort (1967)—an assemblage of original papers spanning the 50 years from Frege (1879) to Gödel (1931). Davis (ed.) The <b>Undecidable</b> (1965) carries the torch onward beginning with Gödel (1931) through Gödel's (1964) postscriptum (p.71); the original papers of Alan Turing (1936-7) and Emil Post (1936) are included in The <b>Undecidable.</b> The mathematics of Church, Rosser and Kleene that appear as reprints of original papers in The <b>Undecidable</b> is carried further in Kleene (1952), a mandatory text for anyone pursuing {{a deeper understanding of the}} mathematics behind the machines. Both Kleene (1952) and Davis (1958) are referenced by a number of the papers.|$|E
25|$|Ray tracing in 3D optical {{systems with}} a finite set of {{reflective}} or refractive objects {{represented by a}} system of rational quadratic inequalities is <b>undecidable.</b>|$|E
25|$|The undecidability of {{this problem}} follows {{from the fact that}} if an {{algorithm}} to determine ambiguity existed, the Post correspondence problem could be decided, which is known to be <b>undecidable.</b>|$|E
25|$|Kurt Godel, 1992. On Formally <b>Undecidable</b> Propositions Of Principia Mathematica And Related Systems, tr. B. Meltzer, with a {{comprehensive}} introduction by Richard Braithwaite. Dover reprint of the 1962 Basic Books edition.|$|E
25|$|Ray tracing in 3D optical {{systems with}} a finite set of {{reflective}} or partially reflective objects {{represented by a}} system of linear inequalities, some {{of which can be}} irrational is <b>undecidable.</b>|$|E
25|$|Turing, A. (1936), On Computable Numbers, With an Application to the Entscheidungsproblem. Proceedings of the London Mathematical Society, Series 2, Volume 42 (1936). Reprinted in M. Davis (ed.), The <b>Undecidable,</b> Raven Press, Hewlett, NY, 1965.|$|E
25|$|A {{statement}} that is neither provable nor disprovable from {{a set of}} axioms is called <b>undecidable</b> (from those axioms). One example is the parallel postulate, which is neither provable nor refutable from the remaining axioms of Euclidean geometry.|$|E
25|$|Geraud Senizergues (1997) {{proved that}} the {{equivalence}} problem for deterministic PDA (i.e. given two deterministic PDA A and B, is L(A)=L(B)?) is decidable, a proof that earned him the 2002 Gödel Prize. For nondeterministic PDA, equivalence is <b>undecidable.</b>|$|E
25|$|The {{decision}} problem of whether an arbitrary grammar is ambiguous is <b>undecidable</b> {{because it can}} be shown that it is equivalent to the Post correspondence problem. At least, there are tools implementing some semi-decision procedure for detecting ambiguity of context-free grammars.|$|E
25|$|Mathematicians {{have shown}} {{there are many}} {{statements}} that are neither provable nor disprovable in Zermelo-Fraenkel set theory with the axiom of choice (ZFC), the standard system of set theory in mathematics (assuming that ZFC is consistent); see list of statements <b>undecidable</b> in ZFC.|$|E
25|$|In 1934 Gödel gave {{a series}} of lectures at the Institute for Advanced Study (IAS) in Princeton, New Jersey, {{entitled}} On <b>undecidable</b> propositions of formal mathematical systems. Stephen Kleene, who had just completed his PhD at Princeton, took notes of these lectures that have been subsequently published.|$|E
25|$|There {{have been}} several {{attempts}} to classify cellular automata in formally rigorous classes, inspired by the Wolfram's classification. For instance, Culik and Yu proposed three well-defined classes (and a fourth one for the automata not matching any of these), which are sometimes called Culik-Yu classes; membership in these proved <b>undecidable.</b>|$|E
25|$|First-order {{logic is}} not decidable in general; in particular, {{the set of}} logical validities in any {{signature}} that includes equality {{and at least one}} other predicate with two or more arguments is not decidable. Logical systems extending first-order logic, such as second-order logic and type theory, are also <b>undecidable.</b>|$|E
25|$|Building on his {{interests}} in belief and religion, Harris completed a PhD in cognitive neuroscience at UCLA. He used fMRI to explore whether the brain responses differ between sentences that subjects judged as true, false, or <b>undecidable,</b> {{across a wide}} range of categories including autobiographical, mathematical, geographical, religious, ethical, semantic, and factual statements.|$|E
25|$|Languages {{generated}} by context-free grammars {{are known as}} context-free languages (CFL). Different context-free grammars can generate the same context-free language. It is important to distinguish {{the properties of the}} language (intrinsic properties) from the properties of a particular grammar (extrinsic properties). The language equality question (do two given context-free grammars generate the same language?) is <b>undecidable.</b>|$|E
25|$|The halting {{problem is}} an {{analogous}} example {{from the field}} of centralised computation: we are given a computer program and the task is to decide whether it halts or runs forever. The halting problem is <b>undecidable</b> in the general case, and naturally understanding the behaviour of a computer network is at least as hard as understanding the behaviour of one computer.|$|E
25|$|Alan Turing proved in 1936 that {{a general}} {{algorithm}} {{to solve the}} halting problem for all possible program-input pairs cannot exist. A {{key part of the}} proof was a mathematical definition of a computer and program, which became known as a Turing machine; the halting problem is <b>undecidable</b> over Turing machines. It {{is one of the first}} examples of a decision problem.|$|E
25|$|A {{real number}} is called computable if there exists an {{algorithm}} that yields its digits. Because {{there are only}} countably many algorithms, but an uncountable number of reals, almost all real numbers fail to be computable. Moreover, the equality of two computable numbers is an <b>undecidable</b> problem. Some constructivists accept the existence of only those reals that are computable. The set of definable numbers is broader, but still only countable.|$|E
25|$|There {{are several}} basic results about decidability of theories. Every {{inconsistent}} theory is decidable, as every formula in {{the signature of}} the theory will be a logical consequence of, and thus member of, the theory. Every complete recursively enumerable first-order theory is decidable. An extension of a decidable theory may not be decidable. For example, there are <b>undecidable</b> theories in propositional logic, although the set of validities (the smallest theory) is decidable.|$|E
