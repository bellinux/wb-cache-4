30|0|Public
5|$|Other {{items include}} a task manager, a system {{information}} tool and an <b>undeletion</b> tool.|$|E
25|$|VFAT Long File Names (LFNs) {{are stored}} on a FAT file system using a trickâ€”adding (possibly multiple) {{additional}} entries into the directory before the normal file entry. The additional entries are {{marked with the}} Volume Label, System, Hidden, and Read Only attributes (yielding 0x0F), which is a combination that is not expected in the MS-DOS environment, and therefore ignored by MS-DOS programs and third-party utilities. Notably, a directory containing only volume labels is considered as empty and is allowed to be deleted; such a situation appears if files created with long names are deleted from plain DOS. This method {{is very similar to}} the DELWATCH method to utilize the volume attribute to hide pending delete files for possible future <b>undeletion</b> since DRDOS6.0 (1991) and higher. It is also similar to a method publicly discussed to store long filenames on Ataris and under Linux in 1992.|$|E
2500|$|The MSX 3.5" [...] floppy disks are {{directly}} compatible with MS-DOS (although some details like file <b>undeletion</b> and boot sector code were different). Like MS-DOS1, MSX disks (formatted) under MSX-DOS1 have no support for subdirectories.|$|E
50|$|<b>Undeletion</b> is {{a feature}} for {{restoring}} computer files {{which have been}} removed from a file system by file deletion. Deleted data can be recovered on many file systems, but not all file systems provide an <b>undeletion</b> feature. Recovering data without an <b>undeletion</b> facility is usually called data recovery, rather than <b>undeletion.</b> Although <b>undeletion</b> can help prevent users from accidentally losing data, it can also pose a computer security risk, since users may not be aware that deleted files remain accessible.|$|E
50|$|Not all file {{systems or}} {{operating}} systems support <b>undeletion.</b> <b>Undeletion</b> is possible on all FAT file systems, with <b>undeletion</b> utilities provided since MS-DOS 5.0 and DR DOS 6.0 in 1991. It is {{not supported by}} most modern UNIX file systems, though AdvFS is a notable exception. The ext2 file system has an add-on program called e2undel which allows file <b>undeletion.</b> The similar ext3 file system does not officially support <b>undeletion,</b> but ext3grep was written to automate the <b>undeletion</b> of ext3 volumes. Undelete was proposed in ext4, but {{is yet to be}} implemented. However, a trash bin feature was posted as a patch on December 4, 2006. The Trash bin feature uses undeleteattributes in ext2/3/4 and Reiser file systems.|$|E
5000|$|Filesystem {{recovery}} and <b>undeletion</b> tools {{on the computer}} can not be used.|$|E
50|$|Data erasure is {{term that}} refers to {{software-based}} methods of preventing file <b>undeletion.</b>|$|E
50|$|Other {{items include}} a task manager, a system {{information}} tool and an <b>undeletion</b> tool.|$|E
5000|$|The {{workings}} of <b>undeletion</b> {{depend on the}} file system on which the deleted file was stored. Some file systems, such as HFS, cannot provide an <b>undeletion</b> feature because no information about the deleted file is retained (except by additional software, which is not usually present). Some file systems, however, do not erase all traces of a deleted file, including FAT file systems: ...|$|E
5000|$|When <b>undeletion</b> {{operation}} is attempted, {{the following conditions}} must be met for a successful recovery of the file: ...|$|E
50|$|<b>Undeletion</b> is not fail-safe. In general, {{the sooner}} <b>undeletion</b> is attempted, {{the more likely}} it will be successful. This is because the more a system is used, the more data is written to the drive and {{potentially}} allocated to that deleted space. Fragmentation of the deleted file may also reduce the probability of recovery, {{depending on the type of}} file system (see below). A fragmented file is scattered across different parts of the disk, instead of being in a contiguous area.|$|E
5000|$|The {{clusters}} formerly {{used by the}} deleted file {{must not}} be overwritten yet by other files. This can fairly well be verified by checking that the clusters are not marked as used in the File Allocation Table. However, if, in the meantime, a new file had been written to the disk, using those sectors, and then deleted again, freeing those sectors again, this cannot be detected automatically by the <b>undeletion</b> program. In this case an <b>undeletion</b> operation, even if appearing successful, might fail because the recovered file contains different data.|$|E
5000|$|The MSX 3.5" [...] floppy disks are {{directly}} compatible with MS-DOS (although some details like file <b>undeletion</b> and boot sector code were different). Like MS-DOS 1, MSX disks (formatted) under MSX-DOS 1 have no support for subdirectories.|$|E
50|$|Another {{significant}} {{finding of}} the paper is that one Wikipedia policy edit or WikiProject edit is worth ten article edits. A related observation is that candidates with experience in multiple areas of the site stood better chance of election. This {{was measured by the}} diversity score, a simple count of the number of areas that the editor has participated in. The paper divided Wikipedia in 16 areas: article, article talk, articles/categories/templates for deletion (XfD), (<b>un)deletion</b> review, etc. (see paper for full list). For instance, a user who has edited articles, her own user page, and posted once at (<b>un)deletion</b> review would have a diversity score of 3. Making a single edit in any additional region of Wikipedia correlated with a 2.8% increased likelihood of success in gaining administratorship.|$|E
50|$|Norton UNERASE was an {{important}} component in Norton Utilities version 1.0 in 1982. Microsoft included a similar UNDELETE program in versions 5.0 to 6.22 of MS-DOS, but applied the Recycle Bin approach instead in later operating systems using FAT. DR DOS 6.0 and higher support UNDELETE as well, but optionally offer additional protection utilizing the FAT snapshot utility DISKMAP and the resident DELWATCH deletion tracking component, which actively maintains deleted files' date and time stamps and keeps the contents of deleted files from being overwritten unless running out of disk space. DELWATCH also supports <b>undeletion</b> of remote files on file servers. Since Novell DOS 7 the kernel will store the first letter of deleted files in the directory entries {{in order to further}} assist <b>undeletion</b> tools in recovering the original name. PTS-DOS offers the same feature, configurable by a SAVENAME CONFIG.SYS directive.|$|E
50|$|Another {{approach}} {{is offered by}} programs such as Norton GoBack (formerly Roxio GoBack): {{a portion of the}} hard disk space is set aside for file modification operations to be recorded {{in such a way that}} they may later be undone. This process is usually much safer in aiding recovery of deleted files than the <b>undeletion</b> operation as described below.|$|E
50|$|If the <b>undeletion</b> program cannot detect clear {{signs of}} the above {{requirements}} not being met, it will restore the directory entry as being in use and mark all consecutive clusters, beginning with the one as recorded in the old directory entry, as used in the File Allocation Table. It is then up to the user to open the recovered file and to verify that it contains the complete data of the formerly deleted file.|$|E
50|$|Microsofts Recycle Bin is {{implemented}} {{as a special}} folder with columns like Date deleted and Original location. Typically only files deleted via Windows Explorer (but not necessarily other Windows graphical interfaces such as file selection dialogs) will be put into the Recycle Bin; files deleted via the Command Prompt are permanently deleted, as (by default) are files deleted via operating system APIs and applications other than Windows Explorer. Some operating system APIs do, however, allow applications to recycle files rather than delete them. In previous Windows operating systems and in MS-DOS, <b>undeletion</b> {{was the only way}} to recover accidentally or intentionally deleted files.|$|E
5000|$|In MS-DOS, {{one can use}} the {{undelete}} command. In MS-DOS the [...] "deleted" [...] {{files are}} not really deleted, but only marked as deleted - {{so they could be}} undeleted during some time, until the disk blocks they used are eventually taken up by other files. This is how data recovery programs work, by scanning for files that have been marked as deleted. As the space is freed up per byte, rather than per file, this can sometimes cause data to be recovered incompletely. Defragging a drive may prevent <b>undeletion,</b> as the blocks used by deleted file might be overwritten since they are marked as [...] "empty".|$|E
50|$|A process ambiguously called undeleting {{allows the}} {{recreation}} of links to {{data that are}} no longer associated with a name. However, this process is not available on all systems and is often not reliable. When a file is deleted, it is added to a free space map for re-use. If {{a portion of the}} deleted file space is claimed by new data, <b>undeletion</b> will be unsuccessful, because {{some or all of the}} previous data will have been overwritten, and may result in cross-linking with the new data and leading to filesystem corruption. Additionally, deleted files on solid state drives may be erased at any time by the storage device for reclamation as free space.|$|E
50|$|In 1992 XTree for Windows was released. The product dropped {{many of the}} {{features}} liked in the DOS versions, with <b>undeletion</b> and file editing particularly noticeable by their absence. The program also took considerably longer to load than both DOS Xtree and other Windows file managers, and operations like viewing files were slower. Despite this, features like native support for file compression and {{a wide range of}} file viewers made it the most feature complete Windows file manager of that year. It was not a success for the company. In 1993, the XTree Company was sold to Central Point Software, which was in turn acquired by Symantec in 1994, and in 1995 production of XTree products was halted.|$|E
5000|$|In a speech, Stallman {{elaborated}} that [...] "The TRIX kernel runs, {{and it has}} {{a certain}} limited amount of Unix compatibility, but it needs a lot more. Currently it has a file system that uses the same structure on disk as the ancient Unix file system does. This made it easier to debug the thing, because they could set up the files with Unix, and then they could run TRIX, but that file system doesn't have any of the features that I believe are necessary." [...] The features Stallman wished to add (file versioning, <b>undeletion,</b> information on when and how and where the file was backed up on tape, atomic file updates) are not generally associated with Unix.|$|E
50|$|XTree was {{supplemented}} by the enhanced XTreePro in 1988, which added features {{for working with}} multiple disk drives, speed improvements, and brought the keyboard commands {{more in line with}} other common DOS programs. A version of XTreePro with Novell NetWare connectivity debuted in late 1988. XTreeProGold/XTreeGold succeeded Xtree Pro in 1989, adding pull-down menus to enhance the interface, additional file viewers, and the choice of a Norton Commander-style split pane between locations on different disks. The first GUI-enabled XTree product was XTreeMac, also launched in 1989, which brought the XTree interface metaphors to the Macintosh System as a Finder replacement. While the Macintosh System software already had competent file management, XTreeMac made it easier to move and copy files and added <b>undeletion</b> and enhanced file finding tools.|$|E
5000|$|Graphical user environments {{often take}} a {{different}} approach to <b>undeletion,</b> instead using a [...] "holding area" [...] for files to be deleted. Undesired files are moved to this holding area, and all of the files in the holding area are deleted periodically or when a user requests it. This approach is used by the Trash can in Macintosh operating systems and by the recycle bin in Microsoft Windows. This is a natural continuation of the approach taken by earlier systems, such as the limbo group used by LocoScript. This approach is not subject to the risk that other files being written to the filesystem will disrupt a deleted file very quickly; permanent deletion will happen on a predictable schedule or with manual intervention only.|$|E
5000|$|While a few Gpcode {{variants}} {{have been}} successfully implemented, many variants have flaws that allow users to recover data without paying the ransom fee. The first versions of Gpcode used a custom-written encryption routine that was easily broken. Variant Gpcode.ak writes the encrypted file to a new location, and deletes the unencrypted file, and this allows an <b>undeletion</b> utility to recover some of the files. Once some encrypted+unencrypted pairs have been found, this sometimes gives enough information to decrypt other files. [...] Variant Gpcode.am uses symmetric encryption, which made key recovery very easy.In late November 2010, a new version called Gpcode.ax was reported. It uses stronger encryption (RSA-1024 and AES-256) and physically overwrites the encrypted file, making recovery nearly impossible.|$|E
50|$|VFAT Long File Names (LFNs) {{are stored}} on a FAT file system using a trickâ€”adding (possibly multiple) {{additional}} entries into the directory before the normal file entry. The additional entries are {{marked with the}} Volume Label, System, Hidden, and Read Only attributes (yielding 0x0F), which is a combination that is not expected in the MS-DOS environment, and therefore ignored by MS-DOS programs and third-party utilities. Notably, a directory containing only volume labels is considered as empty and is allowed to be deleted; such a situation appears if files created with long names are deleted from plain DOS. This method {{is very similar to}} the DELWATCH method to utilize the volume attribute to hide pending delete files for possible future <b>undeletion</b> since DR DOS 6.0 (1991) and higher. It is also similar to a method publicly discussed to store long filenames on Ataris and under Linux in 1992.|$|E
50|$|Even when an {{explicit}} deleted file retention facility is not provided {{or when the}} user does not use it, operating systems do not actually remove {{the contents of a}} file when it is deleted unless they are aware that explicit erasure commands are required, like on a solid-state drive. (In such cases, the operating system will issue the Serial ATA TRIM command or the SCSI UNMAP command to let the drive know to no longer maintain the deleted data.) Instead, they simply remove the file's entry from the file system directory, because this requires less work and is therefore faster, and the contents of the fileâ€”the actual dataâ€”remain on the storage medium. The data will remain there until the operating system reuses the space for new data. In some systems, enough filesystem metadata are also left behind to enable easy <b>undeletion</b> by commonly available utility software. Even when undelete has become impossible, the data, until it has been overwritten, can be read by software that reads disk sectors directly. Computer forensics often employs such software.|$|E
40|$|Black South African English (BSAfE) is now {{generally}} regarded as an independent variety of English rather than an interlanguage {{on the way to}} Standard English (Van Rooy, 2008 : 274, 300 and in this issue). Mesthrie (2006 : 115) demonstrates that many of the characteristic features of BSAfE can be ascribed to the overarching tendency of anti-deletion. Anti-deletion is a term coined by Mesthrie (2006 : 115) to encompass three kinds of linguistic phenomena that are the opposite of deletion in generative analyses of English, namely <b>undeletion,</b> non-deletion and insertion. <b>Undeletion</b> â€˜restores an element that is often assumed to be deleted or to have an empty node in generative analyses of Englishâ€™ (Mesthrie, 2006 : 125), e. g. She made me to go (Mesthrie, 2006 : 111) in which the infinitive marker to is undeleted. Insertion entails the addition of grammatical morphemes, e. g. can be able (Mesthrie, 2006 : 139 â€“ 40). After examination of a number of <b>undeletion</b> phenomena in interviews with 12 mesolectal speakers of BSAfE, Mesthrie (2006 : 129) arrives at the following principle: â€˜If a grammatical feature can be deleted in [Standard English], it can be undeleted in [Black South African English] mesolect. â€™ He points out that such undeletions are not mandatory and adds the following corollary to the principle of undeletion: â€˜If a grammatical feature can be deleted in StE, it can also be (variably) deleted in [Black South African English] mesolect, at a lower rate of frequencyâ€™ (Mesthrie, 2006 : 129). [URL]...|$|E
40|$|In 2001 Germany {{implemented}} a new electronic reporting system for surveillance of notifiable infectious diseases (SurvNet@RKI). The system {{is currently being}} used in all 431 local health departments (LHD), the 16 state health departments (SHD) and the Robert Koch-Institut (RKI), the national agency for infectious disease epidemiology. The SurvNet@RKI software is written in MS Access 97 and Visual Basic and it supports MS Access as well as MS SQL Server database management systems as a back-end. The database is designed as a distributed, dynamic database for 73 reporting categories with more than 600 fields and about 7000 predefined entry values. An integrated version management system documents deletion, <b>undeletion,</b> completion and correction of cases {{at any time and}} entry level and allows reproduction of previously conducted queries. Integrated algorithms and help functions support data quality and the application of case definitions. RKI makes the system available to all LHDs and SHDs free of charge. RKI receives an average of 300, 000 case reports and 6240 outbreak reports per year through this system. A public web-based query interface, SurvStat@RKI, assures extensive and timely publication of the data. During the 5 years that SurvNet@RKI has been running in all LHDs and SHDs in Germany it has coped well with a complex federal structure which makes this system particularly attractive to multinational surveillance networks. The system is currently being migrated to Microsoft C#/. NET and transport formats in XML. Based on our experiences, we provide recommendations for the design and implementation of national or international electronic surveillance systems...|$|E
40|$|Thesis (M. A. (English)) [...] North-West University, Potchefstroom Campus, 2006. In the South African {{secondary}} and tertiary education system {{writing is a}} very important part of the curriculum. Students are expected to master basic writing skills in order to learn how to write longer argumentative essays during their tertiary education. Previous research has shown that tertiary learners, especially Black South African English learners, experience problems in writing well-structured, coherent argumentative essays. Previous research also identifies a number of distinct BSAE grammatical features that could have a detrimental effect on the structure, coherence and grammatical correctness of argumentative student writing. This study investigates one of those features, linking adverbials, and the effect it has on the coherence and cohesion of student argumentative writing in ENL, ESL and EFL student writing corpora. Linking adverbials play a fundamental role in the structuring of a logical argument. Used incorrectly, linking adverbials can confuse the reader of a text and mar the cohesion and coherence of a text. This is a field of study that hasn't been exhaustively investigated in South African or international academic communities. This makes this study all the more important, as it sheds light on the issue of linking adverbial usage in students writing and the effect it has on cohesion and coherence. Although a few studies have been done in this field, there is no evidence that explains the problem of linking adverbials, or a study that has fully investigated the link between linking adverbials, cohesion and coherence. The research done in this study, at least in part, is a beginning to fill this gap. Corpus linguistics methodology forms the basis of the study. This is a linguistic methodology founded on the use of electronic collections of naturally occurring texts or corpora. This study centres on learner corpora. There are two ways of approaching corpora for analysis. One can either take a corpus- based or a corpus-driven approach. In this study a corpus-based approach will be taken, as this method can accurately supply information as to which grammatical structures are found and to what extent they are used. The corpus-based approach entails that one formulates a problem and hypotheses about the problem, and then uses the corpora in order to prove the hypotheses true or false. The main sources of data for this study will be the TLEC (Tswana Learner English Corpus), the Locness Corpus and the Dutch student writing component of ICLE (The International Corpus of Learner English). Each of these corpora consist of argumentative student essays written in English. As machine-readable corpora will be used as the main sources of information in this study, it follows that corpus linguistic data analysis methods will be employed in this study. By using the linking adverbial categories stipulated by Halliday and Matthiesen (2004) as well as Biber et al. (2002 a), corpus samples are tagged and analysed using correspondence analysis. A basic theoretical framework, providing an outline of grammatical concepts, defining various concepts and terms used in the study as well as an interpretative framework which will aid in understanding the deeper underlying issues at the root of the study, is used. The choice of the term 'linking adverbials' and cohesion and coherence is discussed, as well as the link between these concepts. This theoretical framework is used later in the study for the annotation of the data and the data analysis. The numerical data presented in this study shows that the TLEC differs a great deal from the ENL and EFL corpus. One would expect the foreign language English corpus to differ the most, as it is generally expected that foreign language English students are less proficient in English than second language speakers. However, the data presented paints a different picture. The findings of this study are that ENL, ESL and EFL students have different ways of using linking adverbials, showing a surprising tendency that EFL student academic writing adheres more closely to the ENL standard than ESL student academic writing does. Possible explanations involve Williams's (1 987) issues of economy and hyper clarity, Meshtrie's <b>undeletion</b> hypothesis (2003), Van Rooy's (2006) statement that Outer Circle (or New) varieties of English develop their own norms, while expanding circle (or EFL varieties) of English stay closer to the inner circle norm, and language acquisition and tranfer-related issues. All of these may be viable explanations as to why the ESL data are non-standard, and why the data in the ESL corpus differs from that in the ENL corpus. This study also emphasises the finding that BSAE students are not fully literate in academic English and that this is an issue that the educational system needs to address. This study further shows that certain linking adverbial semantic categories are overused by some student communities while others are underused. This study shows that this is a field worthy of concern and has proven that cohesion and coherence is influenced by the misuse of linking adverbials. Master...|$|E

