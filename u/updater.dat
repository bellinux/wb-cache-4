165|41|Public
25|$|Iriver {{initially}} dropped UMS {{support for}} the U10, T30, T20 and T10 models in favor of Microsoft's MTP. The company later released an official Firmware <b>Updater</b> that allows users to switch between the MTP and UMS interfaces (for some models except 256MB and 2GB ones). The <b>updater</b> will only connect to the player from Windows XP SP1 or above.|$|E
25|$|By May, 2015, the Jawbone <b>Updater</b> {{would no}} longer work with legacy devices {{including}} the Icon.|$|E
25|$|Java is yet {{to release}} an {{automatic}} <b>updater</b> that does not require user intervention and administrative rights unlike Google Chrome and Flash player.|$|E
50|$|In 2010 he {{developed}} The Update Framework (TUF), a flexible security library {{designed to be}} added to software <b>updaters</b> to make them resilient to compromise.|$|R
40|$|Correctness of data {{residing}} in a database is vital. While integrity constraint enforcement can often ensure data consistency, it is inadequate {{to protect against}} updates that involve careless, unintentional errors, e. g., whether a specified update to an employee’s record was for the intended employee. We propose a novel approach that is complementary to existing integrity enforcement techniques, to guard against such erroneous updates. Our approach is based on (a) <b>updaters</b> providing an update certificate with each database update, and (b) the database system verifying the correctness of the update certificate provided before performing the update. We formalize a certificate as a (challenge, response) pair, and characterize good certificates as those that are easy for <b>updaters</b> to provide and, when correct, give the system enough confidence that the update was indeed intended. We present algorithms that efficiently enumerate good challenges, without exhaustively exploring the search space of all challenges. We experimentally demonstrate that (i) databases have many good challenges, (ii) these challenges can be efficiently identified, (iii) certificates can be quickly verified for correctness, (iv) under natural models of an <b>updater’s</b> knowledge of the database, update certificates catch {{a high percentage of}} the erroneous updates without imposing undue burden on the <b>updaters</b> performing correct updates, and (v) our techniques are robust across a wide range of challenge parameter settings...|$|R
40|$|A {{series of}} {{experiments}} suggest that, compared to the Bayesian benchmark, people may either underreact or overreact to new information. We consider a setting where agents repeatedly process new data. Our main result shows a basic distinction between the long-run beliefs of agents who underreact to information and agents who overreact to information. Like Bayesian learners, non-Bayesian <b>updaters</b> who underreact to observations eventually forecast accurately. Hence, underreaction may be a transient phenomenon. Non-Bayesian <b>updaters</b> who overreact to observations eventually forecast accurately with positive probability but may also, with positive probability, converge to incorrect forecasts. Hence, overreaction may have long-run consequences. ...|$|R
25|$|Late 2000s {{versions}} of Google Earth require a software component {{running in the}} background that will automatically download and install updates. Several users expressed concerns that there is not an easy way to disable this <b>updater,</b> as it runs without the permission of the user.|$|E
25|$|On the 737 season, Enchong Dee was {{introduced}} {{as a new}} host; however, {{as part of the}} tradition of the program, he had to stay in the House first and experience how the housemates are experiencing their stay inside the House. He later was allowed to exit the house; afterwards, he returned to his hosting stint as the show's hourly <b>updater.</b> On the other hand, Mariel Rodriguez returned to the show after five years to play as the last celebrity houseguest and later host the Big Nights marking her significant return as host, similar to that of what happened to Gonzaga in the first Teen Edition Big Night.|$|E
2500|$|Chrome OS {{uses the}} same release system as Google Chrome: there are three {{distinct}} channels: Stable, Beta, and Developer preview (called the [...] "Dev" [...] channel). The stable channel is updated with features and fixes that have been thoroughly tested in the Beta channel, and the Beta channel is updated approximately once a month with stable and complete features from the Developer channel. New ideas get tested in the Developer channel, which can be very unstable at times. A fourth canary channel was confirmed to exist by Google Developer Francois Beaufort and hacker Kenny Strawn, by entering the Chrome OS shell in developer mode, typing the command [...] to access the bash shell, and finally entering the command [...] It is possible to return to verified boot mode after entering the canary channel, but the channel <b>updater</b> disappears {{and the only way}} to return to another channel is using the [...] "powerwash" [...] factory reset.|$|E
50|$|The initial rollout of the Android 7.0 Nougat {{software}} update in September 2016 was temporarily halted after reports of battery drain among early <b>updaters.</b> The issue was not fixed and the rollout continued.|$|R
40|$|This paper models {{an agent}} in a multi-period setting {{who does not}} update {{according}} to Bayes’ Rule, and who is self-aware and anticipates her updating behavior when formulating plans. Choice-theoretic axiomatic foundations are provided to capture updating biases that re‡ect excessive weight given to either prior beliefs, or alternatively, to observed data. The paper describes a counterpart of the exchangeable learning Bayesian model. Like Bayesian learners, non-Bayesian <b>updaters</b> who underreact to observations also uncover the true data generating process. Non-Bayesian <b>updaters</b> who overreact to data learn to forecast correctly with positive probability but, in some cases, may, with strictly positive probability, converge to incorrect forecasts...|$|R
5000|$|Aju John {{proposed}} an RCU-like implementation where <b>updaters</b> simply {{wait for a}} fixed period of time, {{under the assumption that}} readers would all complete within that fixed time, as might be appropriate in a hard real-time system. [...] Van Jacobson proposed a similar scheme in 1993 (verbal communication).|$|R
5000|$|... the builtin {{function}} <b>updater</b> returning the <b>updater</b> of the doublet. Of course, <b>updater</b> was itself a doublet {{and could be}} used to change the <b>updater</b> component of a doublet.|$|E
5000|$|... 2002-May: Macromedia ColdFusion MX version 6.0 (build 6,0,0,48097), <b>Updater</b> 1 (build 6,0,0,52311), <b>Updater</b> 2 (build 6,0,0,55693), <b>Updater</b> 3 (build 6,0,0,58500) ...|$|E
50|$|Instead of Google <b>Updater,</b> Comodo Dragon {{features}} its own built-in <b>updater.</b> If Dragon is uninstalled, {{users are}} given the option of keeping Dragon's cache and cookie files or deleting them.|$|E
5000|$|A {{common problem}} {{encountered}} occurs when some <b>updaters</b> and uninstallers rename or {{delete the file}} oledlg.dll, preventing the operating system from loading unicows.dll. This results in applications, such as OpenOffice.org, reporting that [...] "Application cannot start {{because one of the}} required libraries cannot be found." [...] This occurs even if unicows.dll is installed in the system.|$|R
50|$|Of course, RCU {{also has}} disadvantages. For example, RCU is a {{specialized}} technique that works best in situations with mostly reads and few updates, but is often less applicable to update-only workloads. For another example, although {{the fact that}} RCU readers and <b>updaters</b> may execute concurrently is what enables the lightweight nature of RCU's read-side primitives, some algorithms may not be amenable to read/update concurrency.|$|R
40|$|A method, {{system and}} {{computer}} program product for supporting concurrent updates to a shared data element group while preserving group integrity on behalf {{of one or more}} readers that are concurrently referencing group data elements without using locks or atomic instructions. Two or more <b>updaters</b> may be invoked to generate new group data elements. Each new data element created by the same up dater is assigned a new generation number that is different than a global generation number associated with the data element group and which allows a reader of the data element group to determine whether the new data element is a correct version for the reader. The new generation numbers are different for each up dater and assigned according to an order in which the <b>updaters</b> respectively begin update operations. The global generation number is updated so that when all of the up daters have completed data element update processing, the global generation number will correspond to the new generation number that is associated with the last of the up daters to begin update operations...|$|R
50|$|Google Pack {{comes with}} Google <b>Updater</b> as a package {{management}} system {{to assist in}} downloading, installing, removing and automatically updating the Pack's applications. <b>Updater</b> can be uninstalled without removing the applications.|$|E
50|$|The {{service was}} {{launched}} in beta in 2006, and the Nokia Software Updater's beta phase ended at 25 August 2011. Nokia Software <b>Updater</b> 3.0.495 was released to consumers in 2011. After acquisition of Nokia's devices and services divisions by Microsoft, the application was renamed to Microsoft Software <b>Updater.</b> the Microsoft Software <b>Updater</b> does not install any pre-release of Nokia device software, but will restore the latest updates.|$|E
50|$|Microsoft Software <b>Updater</b> (earlier Nokia Software <b>Updater</b> and Ovi Suite Software <b>Updater)</b> is a Windows and OS X (though the Mac {{version is}} only in Beta) based {{application}} launched in 2006, that enables customers to update and recover their mobile device firmware of a S40 or S60 or Lumia device from any Internet enabled access point. To avoid data loss users are prompted with on-screen {{advice on how to}} safely update their device.|$|E
50|$|A key {{property}} of RCU is that readers can access a data structure {{even when it}} {{is in the process of}} being updated: RCU <b>updaters</b> cannot block readers or force them to retry their accesses. This overview starts by showing how data can be safely inserted into and deleted from linked structures despite concurrent readers. The first diagram on the right depicts a four-state insertion procedure, with time advancing from left to right.|$|R
50|$|CD-ROM Today was an American {{magazine}} {{targeted at}} computer users. Published from 1993 to 1996 by Imagine Publishing (now Future US), {{the magazine was}} initially issued once every other month, before becoming a monthly. Each issue included software and hardware reviews, {{as well as a}} CD containing fonts, video and text files, system <b>updaters,</b> freeware and shareware and demo versions of commercial software. Products were included for both Macintosh and Windows PC.|$|R
40|$|Results of {{comparing}} updating versus nonupdating modeling assumptions {{call into question}} the use of models based on nonupdating strategies as valid representations of actual farmer actions. If farmers are sequential <b>updaters,</b> the results indicate that models assuming no updating are inaccurate. The degree of this inaccuracy ranges between 4 % and 10 % of profits for the study area. Further, the results indicate that updating appears to be important for both descriptive and prescriptive studies of farmer behavior. Crop Production/Industries,...|$|R
5000|$|Microsoft Software <b>Updater</b> (earlier Nokia Software <b>Updater</b> and Ovi Suite Software <b>Updater)</b> is a Windows and OS X (though the Mac {{version is}} only in beta) based {{application}} launched in 2007, that enables customers to update and recover their mobile device firmware of a S40, S60 or Lumia device from any Internet enabled access point. The full list of supported phones {{is available in the}} official site. The service was launched in beta in 2006, and the Nokia Software Updater's beta phase ended at 25 August 2011, and started offering a similar service named Nokia Download!, a desktop application for downloading content to your mobile phone. Nokia Software <b>Updater</b> 3.0.495 was released to consumers in 2011. After acquisition by Microsoft, the application was renamed to Microsoft Software <b>Updater.</b> The service can be used to restore the firmware on [...] "bricked" [...] phones which previously could only be done at local Nokia Care customer service centres.|$|E
50|$|On 15 December 2007, {{the company}} {{released}} {{a version of}} its automatic <b>updater</b> for OS X with a serious program error. The company fixed the <b>updater</b> on 17 December, but by then it had caused substantial data loss {{for a number of}} users.|$|E
5000|$|Google <b>Updater</b> is {{no longer}} supported. Launching it and {{browsing}} to the Installed Software tab gives the message [...] "We regret {{to inform you that}} Google <b>Updater</b> {{is no longer}} a supported Google application. We recommend you to uninstall it from your PC." ...|$|E
40|$|Proof of Proposition 1. It suffices to {{show that}} any <b>updater’s</b> belief will {{converge}} to x̄, {{the mean of the}} received messages. Let x be the sequence of messages x 1, [...] ., xn and x ̄ be the mean of these messages. Suppose > 0 and N = σ 2 x(|µ̂ 0 −x̄|−) σ 20. Then n> N implies |µ̂n|x − x | = ∣∣∣∣∣∣σ 20 x + (σ 2 x/n) µ̂ 0 − x(σ 20 + σ 2 x/n) σ 20 + σ 2 x/...|$|R
50|$|The {{line between}} program and data can become blurry. An {{interpreter}}, for example, is a program. The input data to an interpreter {{is itself a}} program, just not one expressed in native machine language. In many cases, the interpreted program will be a human-readable text file, which is manipulated with a text editor program (more normally associated with plain text data). Metaprogramming similarly involves programs manipulating other programs as data. Programs like compilers, linkers, debuggers, program <b>updaters,</b> virus scanners and such use other programs as their data.|$|R
40|$|Product {{software}} is constantly evolving through extensions, maintenance, changing requirements, changes in configuration settings, and changing licensing information. Managing evolution of released and deployed product {{software is}} a complex and often underestimated problem {{that has been the}} cause of many difficulties for both software vendors and customers. This paper presents a process model and typology to characterize techniques that support product software update methods. Also, this paper assesses and surveys a variety of existing techniques against the characterization framework and lists unsolved problems related to software product <b>updaters...</b>|$|R
5000|$|... #Subtitle level 2: Distributions {{that use}} the Software <b>Updater</b> ...|$|E
5000|$|WinZip Driver Updater: Windows {{device driver}} manager and <b>updater</b> ...|$|E
5000|$|QuarkXPress 8.5 (2010) - Bug fixes, auto <b>updater,</b> DOCX import.|$|E
40|$|A {{number of}} {{algorithms}} {{have been proposed}} for accessing B-trees concurrently, but the performance of these algorithms is not yet well understood. In this paper, we study the performance of various concurrency control algorithms using a detailed simulation model of B-tree operations in a centralized DBMS. Our study considers {{a wide range of}} data contention situations and resource conditions. Results from our experiments indicate that algorithms in which <b>updaters</b> lock-couple using exclusive locks perform poorly as compared to those that permit more optimistic index descents. In particular, the B-link algorithms provide the most concurrency and the best overall performance...|$|R
40|$|We {{investigate}} how college students form and update their beliefs about future earnings using a unique “information” experiment. We provide college students true {{information about the}} population distribution of earnings and observe how this information causes respondents to update their beliefs about their own future earnings. We show that college students are substantially misinformed about population earnings and logically revise their self-beliefs {{in response to the}} information we provide, with larger revisions when the information is more specific and is good news. We classify the updating behaviors observed and find that the majority of students are non-Bayesian <b>updaters.</b> Prediction (Psychology); Wages; Universities and colleges; Demography; Uncertainty; Bayesian statistical decision theory...|$|R
40|$|Read-Copy Update (RCU) is a scalable, highperformance Linux-kernel {{synchronization}} {{mechanism that}} runs low-overhead readers concurrently with <b>updaters.</b> Productionquality RCU implementations are decidedly non-trivial and their stringent validation is mandatory. This suggests use of formal verification. Previous formal verification efforts for RCU either focus on simple implementations or use modeling languages. In this paper, we construct a model {{directly from the}} source code of Tree RCU in the Linux kernel, and use the CBMC program analyzer to verify its safety and liveness properties. To {{the best of our}} knowledge, this is the first verification of a significant part of RCU’s source code—an important step towards integration of formal verification into the Linux kernel’s regression test suit...|$|R
