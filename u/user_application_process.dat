0|10000|Public
30|$|If {{the initial}} {{decision}} state is successfully passed, the system reaches {{the final decision}} stage. At this stage, an adaptive scoring system reads multiple parameters to decide which network is suitable according to the <b>user</b> <b>application</b> <b>processes</b> preferences. If the scoring system decides that WIMAX is better than WIFI, then vertical handover occurs.|$|R
50|$|In computing, {{configuration}} files (or config files) are files used {{to configure}} the parameters and initial settings for some computer programs. They {{are used for}} <b>user</b> <b>applications,</b> server <b>processes</b> and operating system settings.|$|R
30|$|The {{upcoming}} non-volatile (NV) memory technologies, such as {{phase change}} memory (PCM), magnetoresistive RAM (MRAM), and spin-transfer torque RAM (STT-RAM), achieve high performance that matches up with dynamic RAM (DRAM) while they provide persistency for data store. They {{can be used}} as main memory because of their byte addressability and high performance while they can also be used as secondary storage because of their persistency. Therefore, the integration of their management is possible. Such integration enables the memory allocation for processes and files from the same source, and <b>user</b> <b>application</b> <b>processes</b> can take advantage of its large size by removing the necessity of the page swapping between main memory and storage. Therefore, the integration can improve the system performance. While the advantage brought by the integration were discussed (Bailey et al. 2011; Jung and Cho 2011), there was no research effort to realize it in an actual operating system (OS).|$|R
5000|$|Bizagi Studio is a Freeware Business Process Management (BPM) {{solution}} that allows organizations to build (automate) business processes and workflows. It {{acts as the}} construction module where <b>users</b> build <b>process</b> <b>applications</b> (<b>user</b> interface, forms, business rules, etc.) associated to their business processes and workflows, in preparation for process execution. Models are stored in a database and then used at runtime for process execution.|$|R
30|$|Information {{about the}} {{structures}} {{and characteristics of}} the past database workloads can be collected from a database management system in a form of audit trails, traces from processing of SQL statements, sequences of snapshots of internal systems states, dynamic performance views, etc. Due to {{a large number of}} concurrently <b>processed</b> <b>user</b> <b>applications,</b> a structure of workload trace is very complex and irregular with no clearly visible patterns in the ways how data containers are accessed and how database operations are processed. This is why ad hoc discovery of complex periodic patterns in a database workload is a difficult and time-consuming task. On the other hand, many of <b>user</b> <b>applications</b> are <b>processed</b> in the regular ways because the same applications implement the real-world processes, which due to the business or legal reasons must be periodically performed by the individuals and organizations.|$|R
40|$|The article {{deals with}} {{possibilities}} of {{utilization of the}} designed and developed BilPol software system that extremely facilitates, accelerates and specifies the very important initial stage of estimation of coal reserves. The system quickly and transparently compiles and illustrates logs of boreholes and cuttings with indicated seams and benches. In the user-friendly and intuitive graphic environment it provides the user tools for automated search and definition of economical seam parts. In the logs there are indicated in addition segments fulfilling some important criteria- e. g. maximum average content of ash as a qualitative parameter of usability conditions. The <b>user</b> <b>application</b> <b>processes</b> data of a coal database containing specifications of layers in boreholes and represents it graphically in a transparent form. The database has been conceived to be generally applicable on all coal deposits in CR. Using the BilPol system {{it is possible to}} compile more quickly and more precisely variant 3 D models of balance and sub-economical parts of seams for subsequent calculation of coal resources. The system is implemented using the Microsoft Visual Basic language. While creating the program the additional component Microsoft Common Dialog Control 6. 0 has been used for creation of the user environment [4]. Access to the database in the MDB format is provided through the Microsoft DAO 3. 6 Object Library. Abstrak...|$|R
40|$|In companies, the {{historically}} developed IT systems are mostly application islands. They always produce good results if the system's requirements and surroundings are not changed {{and as long}} as a system interface is not needed. With the ever increas-ing dynamic and globalization of the market, however, these IT islands are certain to collapse. Interoperability (IO) is the bid of the hour, assuming the integration of <b>users,</b> data, <b>applications</b> and <b>processes.</b> In the following, important IO enablers such as ETL, EAI, and SOA will be examined on the basis of practica-bility. It will be shown that especially SOA produces a surge of interoperability that could rightly be referred to as IT evolution...|$|R
40|$|Capturing, defining, and {{modeling}} {{the essence of}} context are challenging, compelling, and prominent issues for interdisciplinary research and discussion. The roots of its emergence lie in the inconsistencies and ambivalent definitions across and within different research specializations (e. g., philosophy, psychology, pragmatics, linguistics, computer science, and artificial intelligence). Within the area of computer science, the advent of mobile context-aware computing has stimulated broad and contrasting interpretations due to the shift from traditional static desktop computing to heterogeneous mobile environments. This transition poses many challenging, complex, and largely unanswered research issues relating to contextual interactions and usability. To address those issues, many researchers strongly encourage a multidisciplinary approach. The primary aim {{of this article is}} to review and unify theories of context within linguistics, computer science, and psychology. Summary models within each discipline are used to propose an outline and detailed multidisciplinary model of context involving (a) the differentiation of focal and contextual aspects of the user and application's world, (b) the separation of meaningful and incidental dimensions, and (c) important <b>user</b> and <b>application</b> <b>processes.</b> The models provide an important foundation in which complex mobile scenarios can be conceptualized and key human and social issues can be identified. The models were then applied to different applications of context-aware computing involving user communities and mobile tourist guides. The authors' future work involves developing a user-centered multidisciplinary design framework (based on their proposed models). This will be used to design a large-scale user study investigating the usability issues of a context-aware mobile computing navigation aid for visually impaired people...|$|R
40|$|Abstract Background A {{fundamental}} {{activity in}} biomedical research is Knowledge Discovery {{which has the}} ability to search through large amounts of biomedical information such as documents and data. High performance computational infrastructures, such as Grid technologies, are emerging as a possible infrastructure to tackle the intensive use of Information and Communication resources in life science. The goal of this work was to develop a software middleware solution in order to exploit the many knowledge discovery applications on scalable and distributed computing systems to achieve intensive use of ICT resources. Methods The development of a grid application for Knowledge Discovery in Text using a middleware solution based methodology is presented. The system must be able to: perform a <b>user</b> <b>application</b> model, <b>process</b> the jobs with the aim of creating many parallel jobs to distribute on the computational nodes. Finally, the system must be aware of the computational resources available, their status and must be able to monitor the execution of parallel jobs. These operative requirements lead to design a middleware to be specialized using <b>user</b> <b>application</b> modules. It included a graphical user interface in order to access to a node search system, a load balancing system and a transfer optimizer to reduce communication costs. Results A middleware solution prototype and the performance evaluation of it in terms of the speed-up factor is shown. It was written in JAVA on Globus Toolkit 4 to build the grid infrastructure based on GNU/Linux computer grid nodes. A test was carried out and the results are shown for the named entity recognition search of symptoms and pathologies. The search was applied to a collection of 5, 000 scientific documents taken from PubMed. Conclusion In this paper we discuss the development of a grid application based on a middleware solution. It has been tested on a knowledge discovery in text process to extract new and useful information about symptoms and pathologies from a large collection of unstructured scientific documents. As an example a computation of Knowledge Discovery in Database was applied on the output produced by the KDT user module to extract new knowledge about symptom and pathology bio-entities. </p...|$|R
5000|$|... #Caption: Anything {{between the}} kernel and <b>user</b> <b>applications</b> is {{considered}} middleware. Functionality such as gesture recognition or speech recognition is usually processed by some middleware, {{and the results}} are transmitted to <b>user</b> <b>applications.</b>|$|R
40|$|Cloud {{computing}} {{is currently}} based on hardware virtualization wherein a host operating system provides a virtual machine interface {{nearly identical to}} that of physical hardware to guest operating systems. Full transparency allows backward compatibility with legacy software but introduces unpredictability at the guest operating system (OS) level. The time perceived by the guest OS is non-linear. As a consequence, {{it is difficult to}} run real-time or latency-sensitive applications in the cloud. In this paper we describe an alternative approach to cloud computing where we run all <b>user</b> <b>applications</b> on top of a single cloud operating system called Osprey. Osprey allows dependable, predictable, and real-time computing by consistently managing all system resources and exporting relevant information to the applications. Osprey ensures compatibility with legacy software through OS emulation provided by libraries and by porting runtime environments. Osprey's resource containers fully specify constraints between applications to enforce full application isolation for real-time execution guarantees. Osprey pushes much of the state out of the kernel into <b>user</b> <b>applications</b> for several benefits: full application accounting, mobility support, and efficient networking. Using a kernel-based packet filter, Osprey dispatches incoming packets to the <b>user</b> <b>application</b> as quickly as possible, eliminating the kernel from the critical path. A real-time scheduler then decides on the priority and order in which <b>applications</b> <b>process</b> their incoming packets while maintaining the limits set forth in the resource container. We have implemented a mostly complete Osprey prototype for the x 86 architecture and we plan to port it to ARM and PowerPC and to develop a Linux library OS...|$|R
40|$|Abstract—Cloud {{computing}} {{is currently}} based on hardware virtualization wherein a host operating system provides a virtual machine interface {{nearly identical to}} that of physical hardware to guest operating systems. Full transparency allows backward compatibility with legacy software but introduces unpredictability at the guest operating system (OS) level. The time perceived by the guest OS is non-linear. As a consequence, {{it is difficult to}} run real-time or latency-sensitive applications in the cloud. In this paper we describe an alternative approach to cloud computing where we run all <b>user</b> <b>applications</b> on top of a single cloud operating system called Osprey. Osprey allows dependable, predictable, and real-time computing by consistently managing all system resources and exporting relevant information to the applications. Osprey ensures compatibility with legacy software through OS emulation provided by libraries and by porting runtime environments. Osprey’s resource containers fully specify constraints between applications to enforce full application isolation for real-time execution guarantees. Osprey pushes much of the state out of the kernel into <b>user</b> <b>applications</b> for several benefits: full application accounting, mobility support, and efficient networking. Using a kernel-based packet filter, Osprey dispatches incoming packets to the <b>user</b> <b>application</b> as quickly as possible, eliminating the kernel from the critical path. A real-time scheduler then decides on the priority and order in which <b>applications</b> <b>process</b> their incoming packets while maintaining the limits set forth in the resource container. We have implemented a mostly complete Osprey prototype for the x 86 architecture and we plan to port it to ARM and PowerPC and to develop a Linux library OS. Keywords-cloud; virtualization; predictability; real-time; I...|$|R
40|$|This paper {{details the}} process of {{converting}} a single <b>user</b> <b>application</b> into a multiple <b>user</b> <b>application</b> {{through the use of}} Aspect Oriented Programming (AOP). While AOP hopes to enable developers to capture crosscutting concerns (e. g., features that affect different classes and modules of source code) my goal is to treat multiple user functionality as a cross cutting concern that should be easily added to a single <b>user</b> <b>application.</b> This primary contribution of this paper is the detailing of the issues encountered in the exercise of trying to apply aspects to existing single <b>user</b> <b>applications.</b> Through a detailed analysis of the issues encountered there is the potential to refine the design of current and future Aspect Oriented Tools...|$|R
5000|$|When the {{computer}} system is executing {{on behalf of a}} <b>user</b> <b>application,</b> the system is in user mode. However, when a <b>user</b> <b>application</b> requests a service from the operating system (via a system call), the system must transition from user to kernel mode to fulfill the request.|$|R
50|$|A <b>user</b> <b>application</b> {{interacts with}} MINA APIs, {{shielding}} the <b>user</b> <b>application</b> from low level I/O details. MINA internally uses I/O APIs {{to perform the}} actual I/O functions. This {{makes it easy for}} the users to concentrate on the application logic and leave the I/O handling to Apache MINA.|$|R
40|$|Aim of {{presented}} bachelor thesis, {{it was a}} preparation, {{implementation and}} debugging of <b>user</b> <b>application</b> designed for control system of experimental unit INTEQ II. Experimental unit INTEQ II is a technology serving for carrying out laboratory and semi-operational scale testing of catalytic filtration materials. Regarding the interdisciplinary character of thesis, the author threads technological description of experimental unit INTEQ II and also explains the principles of nitrogen oxides (NOx) reduction. Consequently he describes chosen control system and algorithms which served as a specification for <b>user</b> <b>application.</b> In the practical part of thesis, he passes through the source code of the <b>user</b> <b>application</b> and reveals the way he programmed and debugged tasks defined in algorithms. The <b>user</b> <b>application</b> has been implemented, debugged and tested in laboratories of institute of process and environmental engineering at faculty {{of mechanical engineering at}} Brno, University of technology. In the chapters on the end the thesis, author presents the results of his effort and comments the changes in the <b>user</b> <b>application</b> that had been done due to restriction of technology itself...|$|R
40|$|The partial {{reconfiguration}} {{feature of}} some of the currentgeneration Field Programmable Gate Arrays (FPGAs) can improve dependability by detecting and correcting errors in onchip configuration data. Such an error recovery process can be executed online with minimal interference of <b>user</b> <b>applications.</b> However, because Look-up Tables (LUTs) in Configurable Logic Blocks (CLBs) of FPGAs can also implement memory modules for <b>user</b> <b>applications,</b> a memory coherence issue arises such that memory contents in <b>user</b> <b>applications</b> may be altered by the online configuration data recovery process. In this paper, we investigate this memory coherence problem and propose a memory coherence technique that does not impose extra constraints on the placement of memory-configured LUTs. Theoretical analyses and simulation results show that the proposed technique guarantees the memory coherence with a very small (on the order of 0. 1 %) execution time overhead in <b>user</b> <b>applications...</b>|$|R
40|$|This paper {{investigates the}} end <b>user</b> <b>application</b> {{requirements}} {{in the light}} of emerging IP multimedia and 3 G technologies. It proposes a higher-level architecture, which takes into consideration the issues associated in providing enhanced application service platform to empower the end <b>user</b> <b>applications.</b> Proposed integrated application service platform will facilitate end <b>user</b> terminal <b>applications</b> to seamlessly shuffle between the underlying application protocols as per the application logic requirements through a manageable standard interface in addition to encapsulating application layer protocol specific features...|$|R
5000|$|API Plug-ins {{that connect}} the <b>user's</b> <b>applications</b> to the Techila Distributed Computing Engine.|$|R
40|$|International audienceThis paper {{describes}} different {{safety and}} security mechanisms implemented in the Linux kernel to prevent and protect against accidental or malicious misbehaviour in <b>user</b> <b>applications.</b> First, we present a generic system model for <b>user</b> <b>applications</b> with different levels of criticality and deterministic behaviour. From this, a theoretical model for failure modes and attack scenarios on {{the stability of the}} operating system and concurrently executed <b>user</b> <b>applications</b> is derived. Then, technologies in the Linux kernel to counter the identified failure modes and attack scenarios are examined and compared. Current work in progress is to implement requirement-based tests for these security measures and assess their effectiveness, efficiency and limits...|$|R
5000|$|Memory: 64MB RAM SDRAM / 64MB Flash ROM (32MB for <b>user</b> <b>applications</b> and data) ...|$|R
50|$|To {{protect against}} this scenario, an {{authentication}} {{system can be}} set up between the <b>user's</b> <b>application</b> (word processor, email client, etc.) and the signing application. The general idea is to provide some means for both the <b>user</b> <b>application</b> and signing application to verify each other's integrity. For example, the signing application may require all requests to come from digitally signed binaries.|$|R
5000|$|Ports - {{represent}} either physical connections or <b>user</b> <b>applications</b> which send {{media to}} the network; ...|$|R
5000|$|CP: Central processor; The {{standard}} processors. For {{use with}} any supported operating system and <b>user</b> <b>applications.</b>|$|R
5000|$|Clinical Context Object Workgroup (CCOW) - an {{interoperability}} specification for {{the visual}} integration of <b>user</b> <b>applications</b> ...|$|R
5000|$|... #Caption: Gesture {{recognition}} is usually processed in middleware, {{the results are}} transmitted to the <b>user</b> <b>applications.</b>|$|R
5000|$|If {{they are}} also present in the <b>user's</b> <b>Applications</b> folder, the {{following}} applications are automatically included: ...|$|R
40|$|Most {{research}} in collaborative systems {{has been based}} on designing an ideal system from ground up. Most applications are designed without collaboration in mind however, so we need to consider how we can apply these systems to existing single <b>user</b> <b>applications.</b> I present a summary of some recent work on introducing collaboration to single <b>user</b> <b>applications,</b> and an analysis and comparison of their usefulness. 1...|$|R
50|$|In many {{computerized}} environments, {{a single}} <b>user,</b> <b>application,</b> or transaction can appropriate all server resources and by that, affect {{the quality of}} service & user experience of other active <b>users,</b> <b>applications</b> or transactions. For example, a single report in a data warehouse environment can monopolize data access by demanding large amounts of data. Similarly, a CPU-bound application may consume all server processing power and starve other activities.|$|R
50|$|Novell exteNd, {{formerly}} known as SilverStream, was a web application development suite from Novell that was discontinued in 2005. The latest version was 5.2. With the release of Novell Identity Manager 3, {{the components of the}} portal services in exteNd were rebranded into the IDM <b>User</b> <b>Application.</b> The latest shipping version of the IDM <b>User</b> <b>Application</b> is the Roles Based Provisioning Module 4.0 released in October 2010.|$|R
50|$|Real-time XTI end <b>user</b> <b>application</b> {{will use}} XTI {{interface}} asynchronously (otherwise {{there are no}} guarantees about how long a call waiting for data will block). The set of functions is the same as synchronous calls but when initializing transport endpoint, O_NONBLOCK parameter is provided. XTI asynchronous mode permits end <b>user</b> <b>application</b> be notified about various events of file handles: connections indications requests, new data, time outs.|$|R
5000|$|Support for IOS on tablets and phones (end <b>users</b> <b>applications</b> {{have already}} been {{accepted}} on the App Store) ...|$|R
5000|$|<b>User</b> Management <b>Application</b> & Vendor Integration Manager - Single sign-on and <b>user</b> {{provisioning}} <b>applications</b> {{for clinical}} trial technologies ...|$|R
5000|$|Performance Enhancing Proxies {{improve the}} {{performance}} of <b>user</b> <b>applications</b> running across the Airborne Network by countering wireless network impairments, such as limited bandwidth, long delays, high loss rates, and disruptions in network connections. Proxy systems are implemented between the <b>user</b> <b>application</b> and the network {{and can be used}} to improve performance at the application and transport functional layers of the OSI model. Some techniques that can be employed include: ...|$|R
40|$|The {{goal with}} this thesis {{was to build}} parts of a service that, {{depending}} on a user’s interests and previous activity, can deliver interesting news for that user. The service integrates with social medias to gather information about a user’s interests and his or hers friend’s interests. In this way the system can deliver targeted news for the specified user. The system consists of two main parts, a server side system (which consists of several parts) and a <b>user</b> <b>application.</b> The <b>user</b> <b>application</b> is responsible for showing news and communicating with the server side. The server side system consists of three parts. – Front-end server which handles all communication between the <b>user</b> <b>application</b> and the server side. It also crawls social medias for information about a certain user. – Back-end server which delivers targeted news to a certain user. – A database, used by the server on the server side for sharing and storing data. This thesis focuses on a <b>user</b> <b>application</b> (used by a user on e. g an iPhone or Androi...|$|R
50|$|The ecoDrive <b>user</b> <b>application</b> {{was written}} using Adobe Air to {{facilitate}} cross platform use by UK consulting firm AKQA.|$|R
