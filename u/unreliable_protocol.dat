18|68|Public
50|$|Connection-oriented {{protocol}} {{services are}} often {{but not always}} reliable network services, that provide acknowledgment after successful delivery, and automatic repeat request functions in case of missing data or detected bit-errors. ATM, Frame Relay and MPLS are examples of a connection-oriented, <b>unreliable</b> <b>protocol.</b>|$|E
50|$|TCP, {{the main}} {{protocol}} {{used on the}} Internet, is a reliable unicast protocol. UDP, often used in computer games or in other situations where speed is an issue {{and the loss of}} a little data is not as important because of the transitory nature of the data, is an <b>unreliable</b> <b>protocol.</b>|$|E
5000|$|File Service Protocol (FSP) is a UDP-based {{replacement}} for the File Transfer Protocol, designed for anonymous access with lower hardware and network requirements than FTP. In particular, because it uses UDP, it avoids the problems that many FTP servers have had with requiring a separate process for each client, [...] {{and because it is}} built to use an <b>unreliable</b> <b>protocol,</b> it can more easily handle resuming a transfer after a network failure.|$|E
50|$|Reliable {{protocols}} typically incur more overhead than <b>unreliable</b> <b>protocols,</b> {{and as a}} result, function {{more slowly}} and with less scalability. This often {{is not an issue}} for unicast protocols, but it may become a problem for reliable multicast protocols.|$|R
50|$|HTTP is an {{application}} layer protocol designed {{within the framework}} of the Internet protocol suite. Its definition presumes an underlying and reliable transport layer protocol, and Transmission Control Protocol (TCP) is commonly used. However HTTP can be adapted to use <b>unreliable</b> <b>protocols</b> such as the User Datagram Protocol (UDP), for example in HTTPU and Simple Service Discovery Protocol (SSDP).|$|R
50|$|Often, a {{reliable}} unicast protocol is also connection-oriented. For example, TCP is connection-oriented, with the virtual-circuit ID consisting of source and destination IP addresses and port numbers. Some <b>unreliable</b> <b>protocols</b> are connection-oriented as well. These include ATM and frame relay. There are also reliable connectionless protocols, such as AX.25 when it passes data in I-frames. But this combination occurs rarely: reliable-connectionless is uncommon in commercial and academic networks.|$|R
5000|$|In {{computer}} networking, {{a reliable}} protocol provides reliability properties {{with respect to}} the delivery of data to the intended recipient(s), as opposed to an <b>unreliable</b> <b>protocol,</b> which does not provide notifications to the sender as to the delivery of transmitted data. The term [...] "reliable" [...] is a synonym for assured, which is the term used by the ITU and ATM Forum {{in the context of the}} ATM Service-Specific Coordination Function, for example for transparent assured delivery with AAL5.|$|E
40|$|A {{method of}} {{buffering}} location {{data on a}} mobile device. The method transmits location data packets via an <b>unreliable</b> <b>protocol</b> to a receiving device and buffers {{a copy of the}} location data packet. Periodically, the method also transmits a location data packet via a reliable protocol to the receiving device. When no acknowledgement is received from the receiving device, the location data sent via the reliable protocol is buffered to memory. Once an acknowledgement is received from the receiving device, all of the buffered location data is sent to the receiving device via an <b>unreliable</b> <b>protocol...</b>|$|E
40|$|This paper {{surveys the}} design issues for user-level network {{interface}} protocols for modern high-speed networks such as Myrinet. It first explains {{the principles of}} such protocols through a simple, <b>unreliable</b> <b>protocol.</b> Next, six important design issues are discussed in more detail: data transfers, address translation, protection, control transfers, reliability, and multicast. The design issues are illustrated by performance measurements on a Myrinet cluster and by representative examples taken from 11 communication systems for Myrinet...|$|E
50|$|Because {{of these}} {{transactional}} mechanisms, <b>unreliable</b> transport <b>protocols,</b> {{such as the}} User Datagram Protocol (UDP), are sufficient for SIP operation.|$|R
30|$|MANET nodes are {{power and}} {{bandwidth}} limited and communication is relatively slow and <b>unreliable,</b> so <b>protocols</b> {{should attempt to}} minimize the amount of transmitted data between nodes.|$|R
40|$|Parallel programmers {{typically}} {{assume that}} all resources required for a program's execution are dedicated to that purpose. However, in local and wide area networks, contention for shared networks, CPUs, and I/O systems can result in significant variations in availability, with consequent adverse effects on overall performance. We describe a new message-passing architecture, MPICH-GQ, that uses quality of service (QoS) mechanisms to manage contention and hence improve performance of message passing interface (MPI) applications. MPICH-GQ combines new QoS specification, traffic shaping, QoS reservation, and QoS implementation techniques to deliver QoS capabilities to the high-bandwidth bursty flows, complex structures, and reliable protocols used in highperformance applications [...] -characteristics {{very different from the}} low-bandwidth, constant bit-rate media flows and <b>unreliable</b> <b>protocols</b> for which QoS mechanisms were designed. Results obtained on a differentiated services testbed demonstr [...] ...|$|R
40|$|This text {{is aimed}} at solving {{problems}} {{that are associated with}} communication over IP networks, problems that are primarily related to real-time voice communication. Outcome of this thesis is program with voice communication as main feature. Other features include administration of communications using given permissions system. This application allows multiple concurrent separate communications of two or more participants, while ensuring correct functionality over <b>unreliable</b> <b>protocol.</b> Program can be extended using third party plug-ins without any modifications to the program itself. Application is targeted at Windows operation system with. NET installed...|$|E
30|$|In {{order to}} best exploit the {{topology}} of IaaS clouds different behaviours occur {{at each level}} of the gossip hierarchy. The rationale for this hierarchy {{is rooted in the}} differences between intra and inter cloud communication. Within IaaS environments there are high bandwidth, low latency and unmetered network connections. This is true of virtually all cloud providers. It is also true of any private cloud with a public network between cloud regions. This environment lends itself to the use of an <b>unreliable</b> <b>protocol</b> for rapid and near constant state propagation. Between cloud regions this is not as feasible, costs arising from latency and bandwidth metering force communication to be performed in a slower, more reliable fashion.|$|E
40|$|This paper {{surveys the}} design issues for user-level network {{interface}} protocols for modern high-speed networks such as Myrinet. It first explains {{the principles of}} such protocols through a simple, <b>unreliable</b> <b>protocol.</b> Next, six important design issues are discussed in more detail: data transfers, address translation, protection, control transfers, reliability, and multicast. The design issues are illustrated by performance measurements on a Myrinet cluster and by representative examples taken from 11 communication systems for Myrinet. Introduction Modern high-speed local area networks offer great potential for communication-intensive applications. Traditional communication protocols (e. g., TCP/IP), however, are unable to realize this potential. In the common implementation of these protocols, all network access is through the operating system, which adds significant overheads to both the transmission path (typically a system call and a data copy) and the receive path (typically an int [...] ...|$|E
50|$|UDP is {{a minimal}} message-oriented {{transport}} layer protocol that is documented in RFC 768. UDP provides no guarantees {{to the upper}} layer protocol for message delivery and the UDP layer retains no state of UDP messages once sent. For this reason, UDP sometimes {{is referred to as}} <b>Unreliable</b> Datagram <b>Protocol.</b>|$|R
40|$|In {{this paper}} we {{introduce}} an agent-based {{framework for the}} diagnosis of spatially distributed technical systems, based on a suitable distributed diagnosis architecture. We implement the framework using the concepts of vivid agents and extended logic programming. To demonstrate the power of our approach, we solve a diagnosis example from the domain of <b>unreliable</b> datagram <b>protocols...</b>|$|R
40|$|As mobile hosts move, they {{encounter}} changing network characteristics. Characteristics such as bandwidth, reliability can change drastically when a mobile host moves from indoor to outdoor environment and vice versa. A mobile host can find {{itself in a}} lossy environment due to external conditions such as interference and fading. Existing end-toend protocols are designed with an assumption that packet loss is a random and rare event. However, due to mobility of hosts, there can be transient yet significant packet loss. In this paper, we consider the effect of mobility on <b>unreliable</b> <b>protocols</b> such as UDP. We provide a mechanism by which unnecessary loss of packets can be avoided by allowing transmission only under "good" link conditions. 1. Introduction Mobile communication protocols have to operate under different constraints than communication protocols designed for the wired world. The underlying links that form the wired network are fairly reliable and any packet loss is a rare and r [...] ...|$|R
40|$|Video {{and data}} is {{becoming}} the dominant traffic over the Internet. To provide better Quality of Service (QoS) to end users, {{it is important for}} network operators, content providers to optimize their transmission. In this research work, artificial intelligent optimization algorithms for video and data packets transmission over User Datagram Protocol (UDP) is presented. UDP is an important protocol used in applications of sending voice over IP, instant messaging and E-mail delivery. UDP has shown to be <b>unreliable</b> <b>protocol</b> that drops packets over the network whilst at the same time crucial contents of information tends to be lost along the way hence degrading overall performance (Stallings, 2007). This paper highlights the development, design, testing of Artificial Intelligence (AI) optimized voice and data at the UDP functioning within the Transport Protocol. The two artificial intelligence (AI) algorithms applied in this work are Artificial Bee Colony (ABC) and Particle Swarm Optimization (PSO) ...|$|E
40|$|Today, all {{multicast}} applications use the connectionless and <b>unreliable</b> <b>protocol</b> as the Use Datagram Protocol (UDP) {{to achieve}} multicast communications. Developing reliable UDP is {{as complicated as}} developing TCP. In this paper, to achieve reliability, we propose the Multicast extension to Transmission Control Protocol (M/TCP), a TCP extension that enables multicast transmission to the existing TCP applications. M/TCP is designed based on the concepts of the explicit multicast (xcast); {{a new kind of}} multicast supports small group communications. M/TCP has the following features. First, M/TCP can be applied to those applications that a sender triggers data transfer (sender-initiated), for example, FTP and SMTP. Second, it requires only implementation on the sender. Third, it provides multiple transmission rates by reclassifying receivers in multiple multicast groups. In this paper, we provide the details of M/TCP, and show how M/TCP can be widely deployed in the existing global Internet...|$|E
40|$|With the {{proliferation}} of the internet, voice over IP has penetrated in both terrestrial and satellite networks. One of the popular protocols responsible for its widespread usage is SIP. SIP is the signalling protocol responsible for the session establishment and termination. By default, it uses UDP as the transport layer protocol. As UDP is an <b>unreliable</b> <b>protocol,</b> the retransmission of the SIP messages is managed by the application layer, using exponential backoff algorithm. In this paper, this retransmission algorithm is studied in satellite environment. Based on the shortcomings of this algorithm, a new algorithm is proposed. The performance of the new algorithm is tested and evaluated on the satellite network testbed at Centre for Communication Systems Research (CCSR), University of Surrey. The {{results show that the}} performance of the new algorithm is better than the basic one, in terms of number of retransmissions of SIP messages and their bandwidth consumption, in addition to reduction in call setup time...|$|E
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2006). This document describes for the historical record the motivation behind the Datagram Congestion Control <b>Protocol</b> (DCCP), an <b>unreliable</b> transport <b>protocol</b> incorporating end-to-end congestion control. DCCP implements a congestion-controlled, unreliable flow of datagrams fo...|$|R
40|$|Vivid agents [48] are software-controlled systems whose state {{comprises}} the mental components of knowledge, perceptions, tasks, and intentions, and whose behaviour {{is represented by}} means of action and reaction rules. We present an execution model for vivid agents {{which is based on}} an architecture for concurrent action and planning (CAP). We evaluate the concept of vivid agents and the CAP architecture in distributed diagnosis including fault-tolerant diagnosis and the diagnosis of an <b>unreliable</b> communication <b>protocol...</b>|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. Itdoes not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2006). This document describes for the historical record the motivation behind the Datagram Congestion Control <b>Protocol</b> (DCCP), an <b>unreliable</b> transport <b>protocol</b> incorporating end-toend congestion control. DCCP implements a congestion-controlled, unreliable flow of datagrams for use by applications such as streaming media or on-line games...|$|R
40|$|Abstract: This paper {{presents}} {{experiences with}} TCP/IP optimizations on BCL- 4 – a high-performance low-level communication protocol {{used on a}} cluster of SMPs called DAWNING- 4000. We presently implement the TCP/IP support on BCL- 4 with a gigabit-per-second Myrinet network. This implementation (called BCL- 4 /IP) realizes most of optimizations for TCP/IP, including extended MTU, scatter/gather DMA, checksum offloading, interrupt suppression, PIO/DMA tradeoff and using the <b>unreliable</b> <b>protocol</b> in the basic BCL protocol layer. Our experiment results demonstrate that the improvement of TCP performance over Fast Ethernet by orders of magnitude is possible. The one-way latency decreases from 63. 9 us to 38. 8 us, while the bandwidth increases from 94 Mb/s to 931 Mb/s. BCL- 4 /IP enables most of communication software such as WWW, NFS and FTP applications, {{which are based on}} TCP/IP, to obviously benefit from the high-speed Myrinet network. The binary compatibility with these applications is also realized on BCL- 4 /IP. Keywords: Network performance, TCP/IP optimizations, Cluster, BCL- 4 /IP, Myrinet...|$|E
40|$|The Datagram Congestion Control Protocol (DCCP) is a {{proposal}} for a new transport protocol. In short, DCCP is an <b>unreliable</b> <b>protocol</b> like UDP, but provides congestion control like TCP. DCCP can be easily extended to support multiple congestion control mechanisms. Currently there are two congestion control mechanisms, TCP-like and TFRC, specified. The goal of this master thesis project was to implement a DCCP module for the Network Simulator (ns) that supports both TCP-like and TFRC congestion control and all features needed for them to function according to the specifications. The resulting module provides a good base for further development and evaluation of the DCCP protocol. Well-defined interfaces enable code reutilisations in future implementations, both for simulation and for real- world usage. This thesis includes, besides a description of the design, discussions and possible solutions to issues found in the specification. Also, simulation results from a comparison between the throughputs of SACK based TCP and TCP- like are presented. Validerat; 20101217 (root...|$|E
40|$|Abstract – Recent {{wireless}} measurement {{studies have}} revealed {{the presence of}} high-order memory in wireless bit-error channels. However, most wireless studies continue to employ the memory-less or 1 st order Gilbert bit-error channels to design, analyze and verify wireless protocols and systems. The inaccuracies incurred by ignoring high-order channel memory are largely unexplored. This paper quantifies inaccuracies incurred by ignoring bit-level wireless channel memory {{in the context of}} two simple and commonly-used protocol metrics: (i) packet goodput of an abstract <b>unreliable</b> <b>protocol</b> and (ii) number of retransmissions per packet for an abstract reliable protocol. We analytically derive expected values of these metrics in terms of the parameters of four models with varying levels of memory. We then train the models using actual 802. 11 b bit-error traces and use the analytical expressions to estimate the metrics. Comparison of the model-based estimates with actual values of the metrics derived from the traces shows that the memory-less and 1 st order models incur significant inaccuracies. The remaining two models that capture high-order memory are very accurate in their estimates of the crucial goodput and retransmission metrics. I...|$|E
40|$|Vivid agents (Wagner, 1996) are software-controlled systems whose state {{comprises}} the mental components of knowledge, perceptions, tasks, and intentions, and whose behavior {{is represented by}} means of action and reaction rules. An execution model for vivid agents is presented, {{which is based on}} an architecture for concurrent action and planning (CAP). The concept of vivid agents and the CAP architecture in distributed diagnosis is evaluated, including fault-tolerant diagnosis and the diagnosis of an <b>unreliable</b> communication <b>protocol...</b>|$|R
50|$|The RADIUS {{protocol}} is {{a widely}} deployed authentication and authorization protocol. The supplementary RADIUS Accounting specification also provides accounting mechanisms, thus delivering a full AAA protocol solution. However, RADIUS is experiencing two major shortcomings as time passes since its initial design: its dependency on the <b>unreliable</b> transport <b>protocol</b> UDP {{and the lack of}} security for large parts of its packet payload. Specifically, for the latter, RADIUS security is based on the MD5 algorithm, which has been proven to be insecure.|$|R
40|$|Optical {{metropolitan}} area networks are commonly implemented {{in a ring}} architecture. In this research, we study various access protocols for multicasting in an optical burst switched (OBS) WDM ring environment. To our knowledge, {{this is the first}} detailed study of multicast protocols in an OBS ring architecture. A ring topology is appropriate for multicasting since routing is significantly simplified as compared to a mesh topology. This allows us to forgo complex routing algorithms and focus on performance of various access protocols. We have developed multicast access protocols that use simple scheduling and coordination schemes, and therefore are easy to implement in hardware. We consider only distributed protocols to avoid having a single point of failure. We study reliable versus <b>unreliable</b> <b>protocols,</b> and collision versus collision-free protocols. Ring nodes are equipped with a single fixed transmitter and tunable receiver (FT-TR). Signaling is done via a dedicated control wavelength. The performance of the multicast access protocols is analyzed by simulation. We measure the performance of the access protocols in terms of throughput, delay, channel utilization, and fairness. We show that there is a relationship between throughput, delay, and channel utilization. Specifically, throughput and delay performance can be increased at the expense of higher channel utilization. One of the proposed protocols, named Unicast Token, has high channel utilization, but performs well in terms of throughput, delay, and fairness...|$|R
3000|$|The {{internet}} {{as we know}} today {{is based on a}} few, very simple and very meaningful principles. One of those is the [...] "end-to-end" [...] principle: keeping the technologies in the network very simple and dealing with complexity at the end points only, allowed the Internet architecture to be very scalable (Carpenter, 1996). With regards to the IoT domain, there might be a different point of view. First of all, it has to be considered up to what extent IP technology will be used. While many technologists believe that IP will finally be on each and every smart device (Ipso, 2011), there are two particular cases which show the likeliness that different solutions are necessary. Firstly, real-time devices, such as braking systems in cars, which cannot be based on best-effort, connectionless, <b>unreliable</b> <b>protocol</b> (as the IP is, by definition). Secondly, tiny, extremely cheap devices, (such as passive RFID tags) which may be stateless and therefore cannot use complex protocols such as IP. Moreover, it is questionable if the end-to-end principle can (and will) be used in the IoT domain. As the end points of IoT can be extremely simple (as a temperature sensor), even if {{they will be able to}} use the IP protocol it is unlikely that they will be able to deal with complexity. Moreover, smart devices do not necessarily need to speak the same language: a medical device such as a nanorobot used to fight cancer cells in the human body has totally different needs than those of a smart fabric needing to communicate its characteristics to a washing machine. Therefore, it is likely that, at some layer, there will be bridges between systems; and these bridges (or gateways) might be considered the end-to-end points between communicating entities. In other words, between two different objects communicating, the communication path may be broken into different sections (object-to-gateway, gateway-to-gateway, gateway-to-object). As this is considered a [...] "curse" [...] in today's internet, and is likely to be a highly controversial topic, there is a strong need to further investigate this matter, and to come up with a commonly accepted set of founding principles.|$|E
40|$|Digital library {{applications}} require {{large amount}} of network bandwidth because of huge size of multimedia data. High transmission costs are important criteria for these applications. Reducing transmission costs, or in other words reducing response time, can help to improve system efficiency and user satisfaction [1, 2, 3]. Reliable protocols like TCP guarantee the integrity of transmitted multimedia data, but they require extensive handshaking and acknowledgement messaging [6, 7, 8]. However, multimedia data is tolerant to loss or corruption, unlike the text and binary data. In most of the realtime video and audio streaming applications, timeliness {{is more important than}} accuracy of information [1]. An unreliable, but fast and lightweight protocol may make improvement in transmission costs of multimedia data. However, loss sensitive parts of multimedia data, such as “header ” sections, should still be sent by using a reliable protocol in order to interpret actual multimedia data correctly [1]. In this project, we will research the effects of using an unreliable and fast protocol for image data transfer on transmission costs. 2 Tasks to be done • We expect that using an unreliable, fast protocol will reduce communication costs, but how my much this gain is valuable to implement is a question that should be answered. By finding simulation (and, if time permits, experimental) results, we will gain valuable statistics about image data transmission on different types of networks. • Packet losses on an <b>unreliable</b> <b>protocol</b> can be eliminated by an application layer protocol, if accuracy of data is important. The application layer protocol can also be configured to catch a level of accuracy, which means exact accuracy of data is not required, only satisfying over an accuracy level is enough. We will produce some statistics of performance benefits using such an application protocol and compare it with usage of a reliable protocol. Accuracy of data and transmission costs are reversely proportional. We will try to find better proportion for these two criteria. • Another question that should be answered, how could we give an accuracy level for image data or how user satisfaction can be measured. 3 Solutio...|$|E
40|$|The session Initiation Protocol (SIP) {{has been}} {{developed}} by Internet Engineering Taskforce standard (IETF) with {{the main purpose of}} establishing and managing sessions between two or more parties wishing to communicate. SIP is a signaling protocol which is used for the current and future Internet Protocol (IP) telephony services, video services, and integrated web and multimedia services. SIP is an application layer protcol, thus it can run over Transmission Control Protocol(TCP) or User Datagram Protocol (UDP). When the packets are sent over the network, a form of congestion control mechanism is necessary to prevent from network collapse. TCP is a reliable protocl and provides the congestion control by adjusting the size of the congestion windows. UDP is an <b>unreliable</b> <b>protocol</b> and no ﬂow control mechanism is provided. Many applications of the Internet require the establishment and management of sessions. The purpose of the thesis is to study the session establishnment procedure in SIP and try to reduce the time taken for the session setup in two different conditions. One, when there is no congestion in the network, and the other is when there is a network congestion. We have simulated the behaviour of session establishment in SIP using Network Simulator (NS 2). UDP is used as the transport protocol. We have created different network topologies. In the topology we had created SIP user agents who wants to communicte, proxy servers for forwarding the requests on behalf of the user agents, and a Domain Name Server (DNS) which maintains the location information of all proxy servers. We tried to reduce the time taken for the session establishment. As UDP does not provide any congestion control mechanisms, we used the binary exponential backoff (BEB) algorithm to set the timers. In our network topolgy when there is no packet loss in the network, the time taken for the session establishment is reduced from 0. 86 sec to 0. 574 sec. In case of network congestion the setup time is reduced from 4. 55 sec to 2. 86 sec. From the simulation, we conclude that the session establishment time can be reduced by reducing the number of message exchanges required for session setup...|$|E
40|$|This paper {{presents}} {{our experience}} in implementing OMG <b>Unreliable</b> Multicast Inter-ORB <b>Protocol</b> specifications into an ORB. An integration model is proposed {{to allow the}} coexistence of two di#erent protocol stacks (IIOP/TCP/IP and MIOP/UDP/IP multicast) making possible a large spectrum of middleware support for distributed objects communication. That integration model is discussed in this paper, giving evidence of the compatibility of our approach with the CORBA specifications...|$|R
40|$|We {{propose a}} {{solution}} to mitigate the performance degradation and corresponding Quality of Experience (QoE) reduction caused by packet reordering for multimedia applications which utilise <b>unreliable</b> transport <b>protocols</b> like the Datagram Congestion Control Protocol (DCCP). We analytically derive the optimum buffer size based on the applications data rate and the maximum delay tolerated by the multimedia application. We propose a dynamically adjustable buffer in the transport protocol receiver which uses this optimum buffer size. We demonstrate, via simulation results, that our solution reduces the packet loss rate, increases the perceived bandwidth and does not increase jitter in the received applications packets while still being within the application's delay limits, therefore resulting in an increased QoE of multimedia applications...|$|R
40|$|Abstract. This paper {{presents}} {{a proposal for}} integrating in a single CORBA middleware platform two important OMG specications: FT-CORBA, which provides fault-tolerance support for CORBA objects, and UMIOP, an <b>unreliable</b> multicast <b>protocol</b> devised for CORBA mid-dleware. The integration model denes a middleware support which sup-plies the basis to a large spectrum of group communication properties for distributed objects. Our propositions create a framework for active replication that is implemented using only OMG standards. Algorithms for reliable and atomic multicasts needed for this replication technique are presented using theoretical concepts for expressing their main fea-tures. At last, our FT-CORBA and UMIOP integration is compared to related experiences described in the literature and other active replica-tion protocols. ...|$|R
