0|10000|Public
40|$|The {{economic}} analysis of business process on the mixed farm in Prekmurje region in Slovenia was performed. For {{the assessment of}} farm business analysis specific technologic-economic simulation model with sub-models were developed. The analysis showed that the most economically feasible vegetable product is onion (Financial result,    FR = 2 783. 71 € and Coefficient of economics, Ce = 2. 24). Among the analyzed field crops is economically the most interesting production of oil pumpkins (FR = 1 920. 84 € and Ce = 2. 13). The analysis showed that the production of analyzed crops without direct payments is economically <b>unfeasible.</b> Further, <b>linear</b> optimization <b>program</b> for optimization farm production plan was presented too. Considering financial results maximization, production total cost minimization, {{as well as other}} resource limitation, in the production plan, the most advantageous combination is one of barley and oilseed rape by the scenario 1. In scenario 2, early cabbage, onion and early potatoes production were suggested. By the scenario 3 barley, red onions, and silver onions is defined. By the last scenario 4 onions and pumpkin oil production is suggested. </span...|$|R
50|$|Columns in {{the primal}} <b>linear</b> <b>program</b> {{corresponds}} to rows in the dual <b>linear</b> <b>program.</b> The equivalent dual <b>linear</b> <b>program</b> of LPBoost {{is the following}} <b>linear</b> <b>program.</b>|$|R
40|$|Fuzzy <b>Linear</b> <b>Programming</b> (FLP) is a <b>Linear</b> <b>Programming</b> method {{applied in}} Fuzzy environment. In this research, it was applied in a {{production}} planning problem. In Fuzzy <b>Linear</b> <b>Programming,</b> objective functions and constraints {{do not mean}} as strict {{as it should be}} in <b>Linear</b> <b>Programming</b> because of several reasons to be considered in the system. Fuzzy <b>Linear</b> <b>Programming</b> implementation in production planning problem gave a maximum sales point and can be compared to typical <b>Linear</b> <b>Programming</b> technique...|$|R
40|$|<b>Linear</b> <b>programming</b> {{is one of}} {{the most}} {{extensively}} used techniques in the toolbox of quantitative methods of optimization. One of the reasons of the popularity of <b>linear</b> <b>programming</b> is that it allows to model a large variety of situations with a simple framework. Furthermore, a <b>linear</b> <b>program</b> is relatively easy to solve. The simplex method allows to solve most <b>linear</b> <b>programs</b> efficiently, and the Karmarkar interior-point method allows a more efficient solving of some kinds of <b>linear</b> <b>programming.</b> The power of <b>linear</b> <b>programming</b> is greatly enhanced when came the opportunity of solving integer and mixed integer <b>linear</b> <b>programming.</b> In these models all or some of the decision variables are integers, respectively. In this book we provide a brief introduction to <b>linear</b> <b>programming,</b> together with a set of exercises that introduce some applications of <b>linear</b> <b>programming.</b> We will also provide an introduction to solve <b>linear</b> <b>programming</b> in R. For each problem a possible solution through <b>linear</b> <b>programming</b> is introduced, together with the code to solve it in R and its numerical solution. Postprint (published version...|$|R
40|$|We {{present and}} study <b>linear</b> <b>programming</b> based {{detectors}} for two-dimensional intersymbol interference channels. Interesting instances of two-dimensional intersymbol interference channels are magnetic storage, optical storage and Wyner's cellular network model. We {{show that the}} optimal maximum a posteriori detection in such channels lends itself to a natural <b>linear</b> <b>programming</b> based sub-optimal detector. We call this the Pairwise <b>linear</b> <b>program</b> detector. Our experiments show that the Pairwise <b>linear</b> <b>program</b> detector performs poorly. We then propose two methods to strengthen our detector. These detectors are based on systematically enhancing the Pairwise <b>linear</b> <b>program.</b> The first one, the Block <b>linear</b> <b>program</b> detector adds higher order potential functions in an exhaustive manner, as constraints, to the Pairwise <b>linear</b> <b>program</b> detector. We show by experiments that the Block <b>linear</b> <b>program</b> detector has performance close to the optimal detector. We then develop another detector by adaptively adding frustrated cycles to the Pairwise <b>linear</b> <b>program</b> detector. Empirically, this detector also has performance close to the optimal one and {{turns out to be}} less complex then the Block <b>linear</b> <b>program</b> detector. Comment: 5 Pages, Submitted to ISIT 201...|$|R
40|$|In the {{real-world}} optimization problems, coefficients {{of the objective}} function are not known precisely and {{can be interpreted as}} fuzzy numbers. In this paper we define the concepts of optimality for <b>linear</b> <b>programming</b> problems with fuzzy parameters based on those for multiobjective <b>linear</b> <b>programming</b> problems. Then by using the concept of comparison of fuzzy numbers, we transform a <b>linear</b> <b>programming</b> problem with fuzzy parameters to a multiobjective <b>linear</b> <b>programming</b> problem. To this end, we propose several theorems which are used to obtain optimal solutions of <b>linear</b> <b>programming</b> problems with fuzzy parameters. Finally some examples are given for illustrating the proposed method of solving <b>linear</b> <b>programming</b> problem with fuzzy parameters. Linear optimization, fuzzy number, ranking function, multiobjective <b>linear</b> <b>programming...</b>|$|R
40|$|In this paper, simple <b>linear</b> <b>programming</b> {{procedure}} is proposed for generating all efficient extreme points and all efficient extreme rays of a multiple objective <b>linear</b> <b>programming</b> problem (V P). As an application we solve the <b>linear</b> multiplicative <b>programming</b> {{associated with the}} problem (V P). Key words. Multiple objective <b>linear</b> <b>programming,</b> <b>linear</b> multiplicative <b>programming,</b> efficient extreme point, efficient solution. ...|$|R
40|$|In the thesis, {{there are}} two kinds of fuzzy <b>linear</b> <b>programming</b> problems, one of them is a <b>linear</b> <b>programming</b> problem with fuzzy {{technological}} coefficients and the second is <b>linear</b> <b>programming</b> problem in which both the right-hand side and the technological coefficients are fuzzy numbers. I solve the fuzzy <b>linear</b> <b>programming</b> problems with fuzzy decisive set method...|$|R
40|$|<b>Linear</b> <b>programs</b> are {{problems}} that involve the optimization of a linear objective function subject to linear constraints. Every <b>linear</b> <b>program</b> has an inherent geometric representation. Each constraint defines an halfspace and the feasible {{region of the}} the <b>linear</b> <b>program</b> is the convex polyhedron defined by intersection of all the halfspaces. The maximal solution to the <b>linear</b> <b>program</b> (if i...|$|R
40|$|When {{developing}} <b>linear</b> <b>programming</b> models, {{issues such}} as budget limitations, customer requirements, or licensing may preclude the use of commercial <b>linear</b> <b>programming</b> solvers. In such cases, one option is to use an open-source <b>linear</b> <b>programming</b> solver. A survey of <b>linear</b> <b>programming</b> tools was conducted to identify potential open-source solvers. From this survey, four open-source solvers were tested using a collection of <b>linear</b> <b>programming</b> test problems {{and the results were}} compared to IBM ILOG CPLEX Optimizer (CPLEX) [1], an industry standard. The solvers considered were: COIN-OR <b>Linear</b> <b>Programming</b> (CLP) [2], [3], GNU <b>Linear</b> <b>Programming</b> Kit (GLPK) [4], lp_solve [5] and Modular In-core Nonlinear Optimization System (MINOS) [6]. As no open-source solver outperforms CPLEX, this study demonstrates the power of commercial <b>linear</b> <b>programming</b> software. CLP was found to be the top performing open-source solver considered in terms of capability and speed. GLPK also performed well but cannot match the speed of CLP or CPLEX. lp_solve and MINOS were considerably slower and encountered issues when solving several test problems...|$|R
40|$|We {{introduce}} {{a class of}} <b>linear</b> <b>programs</b> with constraints {{in the form of}} implications. Such <b>linear</b> <b>programs</b> arise in support vector machine classi cation, where in addition to explicit datasets to be classi ed, prior knowledge such as expert's experience in the form of logical implications, are imposed on the classi er. The overall problem can be viewed either as a semi-in nite <b>linear</b> <b>program</b> or as a <b>linear</b> <b>program</b> with equilibrium constraints which, in either case, can be solved by an equivalent simple <b>linear</b> <b>program</b> under mild assumptions...|$|R
40|$|Abstract—Fuzzy <b>linear</b> <b>programming</b> is an {{application}} of fuzzy set theory in linear decision making problems {{and most of these}} problems are related to <b>linear</b> <b>programming</b> with fuzzy variables. A convenient method for solving these problems is based on using of auxiliary problem. In this paper a new method for solving fuzzy variable <b>linear</b> <b>programming</b> problems directly using linear ranking functions is proposed. This method uses simplex tableau which is used for solving <b>linear</b> <b>programming</b> problems in crisp environment before. Keywords—Fuzzy variable <b>linear</b> <b>programming,</b> fuzzy number, ranking function, simplex method. I...|$|R
5000|$|Balanced {{matrices}} are {{studied in}} <b>linear</b> <b>programming.</b> The importance of balanced matrices {{comes from the}} fact that the solution to a <b>linear</b> <b>programming</b> problem is integral if its matrix of coefficients is balanced and its right hand side or its objectice vector is an all-one vector. [...] In particular, if one searches for an integral solution to a <b>linear</b> <b>program</b> of this kind, it is not necessary to explicitly solve an integer <b>linear</b> <b>program,</b> but it suffices to find an optimal vertex solution of the <b>linear</b> <b>program</b> itself.|$|R
40|$|An {{upper bound}} is {{given for the}} number of non-unique {{assignments}} when solving the <b>linear</b> <b>programming</b> relaxation of (mixed) integer <b>linear</b> <b>programming</b> problems in which the integer variables are governed by assignment type constraints. Key-words: (mixed) integer <b>linear</b> <b>programming,</b> assignment problems, class-room scheduling...|$|R
40|$|In {{this note}} we {{introduce}} the k-sum <b>linear</b> <b>programming</b> problem (KLP) which subsumes the classical <b>linear</b> <b>programming</b> {{problem and the}} minmax <b>linear</b> <b>programming</b> problem. KLP can {{be transformed into a}} <b>linear</b> <b>program</b> with an exponential number of additional constraints and one additional variable. Exploiting the special structure of these additional constraints, we show that KLP can be solved in polynomial time. Two promising simplex-based algorithms are also suggested to solve KLP...|$|R
40|$|Solving a <b>linear</b> <b>program</b> with 0 - 1 {{constrained}} variables is an NP-complete problem. Such <b>linear</b> <b>programs</b> {{have many}} practical uses {{in the area}} of scheduling. This paper describes a heuristic-based method for finding feasible solutions to such <b>linear</b> <b>programs.</b> We will also provide the motivation for attempting to find feasible solutions for such problems by showing how several interesting scheduling problems can be formulated as <b>linear</b> <b>program...</b>|$|R
40|$|AbstractIn {{previous}} work we proposed <b>Linear</b> <b>Programs</b> {{as a fine}} grained model for imperative programs, and showed how the model checking procedure used in SLAM can be generalised to a model checking procedure for <b>Linear</b> <b>Programs.</b> In this paper we show that our model checking procedure for <b>linear</b> <b>programs</b> can be extended {{in such a way}} to support the analysis of <b>linear</b> <b>programs</b> featuring a symbol for undefined values and conditional expressions. This extension is particularly important as it paves the way to the construction of model checking procedures for wider classes of imperative programs such as, e. g., <b>linear</b> <b>programs</b> with arrays. We provide a detailed account of a symbolic model checking procedure for this extended class of <b>linear</b> <b>programs,</b> discuss its implementation in the eureka tool, and present experimental results that confirm its effectiveness in the analysis of <b>linear</b> <b>programs</b> with arrays...|$|R
50|$|The {{problem can}} be modeled as binary integer <b>linear</b> <b>programming</b> which is a special case of integer <b>linear</b> <b>programming.</b>|$|R
40|$|We {{investigate}} {{the behavior of}} randomized simplex algorithms on special <b>linear</b> <b>programs.</b> For this, we develop combinatorial models for the Klee-Minty cubes [16] and similar <b>linear</b> <b>programs</b> with exponential decreasing paths. The analysis of two randomized pivot rules on the Klee-Minty cubes leads to (nearly) quadratic lower bounds for the complexity of <b>linear</b> <b>programming</b> with random pivots. Thus we disprove two bounds conjectured in the literature. At the same time, we establish quadratic upper bounds for random pivots on the <b>linear</b> <b>programs</b> under investigation. This motivates the question whether some randomized pivot rules possibly have quadratic worst-case behavior on general <b>linear</b> <b>programs...</b>|$|R
50|$|Successive <b>Linear</b> <b>Programming</b> (SLP), {{also known}} as Sequential <b>Linear</b> <b>Programming,</b> is an {{optimization}} technique for approximately solving nonlinear optimization problems.|$|R
40|$|Proposes a {{decision}} making under uncertainty approach for treating <b>linear</b> <b>programming</b> under uncertainty. The author formulates a payoff matrix for the <b>linear</b> <b>program</b> and then apply the usual decision analysis criteria. Also, the problems encountered in converting a <b>linear</b> <b>program</b> under uncertainty to one under ris...|$|R
40|$|Fuzzy Integer <b>Linear</b> <b>Programming</b> {{problem is}} an {{application}} of fuzzy set theory in linear decision problems {{and most of these}} problems are related to <b>linear</b> <b>programming</b> with fuzzy variables. In this paper, we proposed a method for Integer <b>linear</b> <b>programming</b> problems with fuzzy variables. Two numerical examples were illustrated {{with the help of the}} proposed method. This method is a simple tool for the best solution to a variety of Integer <b>linear</b> <b>programming</b> problems...|$|R
40|$|In this paper, we {{initiate}} {{the systematic study}} of solving <b>linear</b> <b>programs</b> under differential privacy. The first step is simply to define the problem: to this end, we introduce several natural classes of private <b>linear</b> <b>programs</b> that capture different ways sensitive data {{can be incorporated into}} a <b>linear</b> <b>program.</b> For each class of <b>linear</b> <b>programs</b> we give an efficient, differentially private solver based on the multiplicative weights framework, or we give an impossibility result...|$|R
5000|$|The {{challenge}} in {{the first step is}} to choose a suitable integer linear program.Familiarity with <b>linear</b> <b>programming</b> is required, in particular, familiarity withhow to model problems using <b>linear</b> <b>programs</b> and integer <b>linear</b> programs.But, for many problems, there is a natural integer <b>linear</b> <b>program</b> that works well,such as in the Set Cover example below. (The integer <b>linear</b> <b>program</b> should have a smallintegrality gap;indeed randomized rounding is often used to prove bounds on integrality gaps.) ...|$|R
40|$|Fuzzy <b>linear</b> <b>programming</b> {{is one of}} the <b>linear</b> <b>programming</b> {{developments}} which able {{to accommodate}} uncertainty in the real world.  Genetic algorithm approach in solving <b>linear</b> <b>programming</b> problems with fuzzy constraints has been introduced by Lin (2008) by providing a case which consists of two decision variables and three constraint functions.  Other <b>linear</b> <b>programming</b> problem arise with the presence of some coefficients which are fuzzy in <b>linear</b> <b>programming</b> problems, such as the coefficient of the objective function, the coefficient of constraint functions, and right-hand side coefficients constraint functions.  In this study, the problem studied is to explain the genetic algorithm approach to solve <b>linear</b> <b>programming</b> problems where the objective function coefficients and right-hand sides are fuzzy constraint functions. PT Dakota Furniture study case provides a <b>linear</b> <b>programming</b> formulation with a given objective function coefficients and right-hand side coefficients are fuzzy constraint functions.  This study describes the use of genetic algorithm approach {{to solve the problem of}} <b>linear</b> <b>programming</b> of PT Dakota to maximize the mean income.  The genetic algorithm approach is done by simulate every fuzzy number and each fuzzy numbers by distributing them on certain partition points.  Then genetic algorithm is used to evaluate the value for each partition point.  As a result, the Final Value represents the coefficient of fuzzy number.   Fitness function is done by calculating the value of the objective function of <b>linear</b> <b>programming</b> problems.  Empirical results indicated that the genetic algorithm approach can provide a very good solution by giving some limitations on each fuzzy coefficient. Genetic algorithm approach can be extended not only to resolve the case of PT Dakota Furniture, but can also be used to solve other <b>linear</b> <b>programming</b> case with some coefficients in the objective function and constraint functions are fuzzy. Keywords : Genetic Algorithm, Fuzzy <b>Linear</b> <b>Programming,</b> <b>Linear</b> <b>Programming,</b> Two-Phase Simplex Metho...|$|R
40|$|George Karypis and Vipin Kumar Computer Science Department University of Minnesota May 21, 1994 1 Introduction <b>Linear</b> <b>programming</b> is of {{fundamental}} importance in many optimization problems. The simplex method [4] is a commonly used way of solving <b>linear</b> <b>programming</b> problems. Solving large instances of <b>linear</b> <b>programming</b> problems takes significant time; thus, solving <b>linear</b> <b>programming</b> problems in parallel offers a viable path for speeding up {{this type of}} computation. A standard-form <b>linear</b> <b>programming</b> problem is specified as follows: Given an m Θ n matrix A, a m Θ 1 vector b, and an 1 Θ n vector c, {{the goal is to}} minimize z = cx subject to Ax = b and x 0 The vector c is called the cost vector, while z is called the objective function. In this paper, we are mainly concerned with <b>linear</b> <b>programs</b> whose constraint matrix is dense. Such problems are commonly solved using the tablue method [4]. Many parallel simplex formulations for dense <b>linear</b> <b>programming</b> proble [...] ...|$|R
40|$|This essay {{investigates the}} concept of <b>linear</b> <b>programming</b> in general and <b>linear</b> {{stochastic}} <b>programming</b> in particular. <b>Linear</b> stochastic <b>programming</b> is described as the model where {{the parameters of the}} <b>linear</b> <b>programming</b> admit random variability. The first three chapters present through a set-geometric approach the foundations of <b>linear</b> <b>programming.</b> Chapter one describes the evolution of the concepts which resulted in the adoption of the model. Chapter two describes the constructs in n-dimensional euclidian space which constitute the mathematical basis of <b>linear</b> <b>programs,</b> and chapter three defines the <b>linear</b> <b>programming</b> model and develops the computational basis of the simplex algorithm. The second three chapters analyze the effect of the introduction of risk into the <b>linear</b> <b>programming</b> model. The different approaches of estimating and measuring risk are studied and the difficulties arising in formulating the stochastic problem and deriving the equivalent deterministic problems are treated from the theoretical and practical point of view. Multiple examples are given throughout the essay for clarification of the salient points...|$|R
40|$|Introduction 1. 1 Definition <b>Linear</b> <b>programming</b> is {{the name}} of a branch of applied {{mathematics}} that deals with solving optimization problems of a particular form. <b>Linear</b> <b>programming</b> problems consist of a linear cost function (consisting of a certain number of variables) which is to be minimized or maximized subject to a certain number of constraints. The constraints are linear inequalities of the variables used in the cost function. The cost function is also sometimes called the objective function. <b>Linear</b> <b>programming</b> is closely related to linear algebra; the most noticeable difference is that <b>linear</b> <b>programming</b> often uses inequalities in the problem statement rather than equalities. 1. 2 History <b>Linear</b> <b>programming</b> is a relatively young mathematical discipline, dating from the invention of the simplex method by G. B. Dantzig in 1947. Historically, development in <b>linear</b> <b>programming...</b>|$|R
40|$|<b>Linear</b> <b>programming</b> {{is one of}} the {{frequently}} applied {{tools in}} supply chain management. However, managers and decision makers may lack information about exact values of most of the parameters used in the optimization models. Fortunately, fuzzy <b>linear</b> <b>programming</b> comes up with a powerful tool to deal with this kind of incomplete data. In this paper, the exible approach of fuzzy <b>linear</b> <b>programming</b> is proposed and used to solve supply chain management of steel manufacturing company. This approach reformulated some constraints from conventional <b>linear</b> <b>programming</b> to fuzzy <b>linear</b> <b>programming</b> and provides alternative solutions to decision makers. The results obtained indicate that the fuzzy <b>linear</b> <b>programming</b> gives more exibility to the decision maker to achieve some aspiration level in order to choose what he considers as the best optimal solution. Scopu...|$|R
40|$|We {{consider}} transmission over a binary-input additive white Gaussian noise channel using low-density parity-check codes. One of {{the most}} popular techniques for decoding low-density parity-check codes is the <b>linear</b> <b>programming</b> decoder. In general, the <b>linear</b> <b>programming</b> decoder is suboptimal. I. e., the word error rate is higher than the optimal, maximum a posteriori decoder. In this paper we present a systematic approach to enhance the <b>linear</b> <b>program</b> decoder. More precisely, in the cases where the <b>linear</b> <b>program</b> outputs a fractional solution, we give a simple algorithm to identify frustrated cycles which cause the output of the <b>linear</b> <b>program</b> to be fractional. Then adding these cycles, adaptively to the basic <b>linear</b> <b>program,</b> we show improved word error rate performance. Comment: 5 Pages, Submitted to Information Theory Workshop (ITW) 201...|$|R
25|$|The minimum vertex cover {{problem can}} be {{formulated}} as a half-integral <b>linear</b> <b>program</b> whose dual <b>linear</b> <b>program</b> is the maximum matching problem.|$|R
40|$|A simplex-based {{method of}} solving {{specific}} classes of large-scale <b>linear</b> <b>programs</b> is presented. The structure of both staircase and block-angular <b>linear</b> <b>programs</b> is exploited {{to construct an}} advanced or "crash" basis {{to be used with}} a simplex-based <b>linear</b> <b>program</b> solver. First, the constraint matrix is decomposed into blocks. In contrast to many other systems that require additional information about the form of the <b>linear</b> <b>program,</b> the method described here determines this decomposition without prior knowledge of the matrix structure. As the problem of automatically finding such a decomposition is NP-complete, a heuristic is used to discover blocks within the constraint matrix. After a decomposition of the constraint matrix is determined, smaller <b>linear</b> <b>programs</b> called subproblems are formed. These subproblems are solved using a simplex-based solver, and the solution information is used to construct an advanced or "crash" basis for the original <b>linear</b> <b>program.</b> In contrast to decomposition methods that iteratively solve subproblems to obtain a solution to the original problem, this approach requires solving each subproblem at most twice. Finally, the original <b>linear</b> <b>program</b> is solved by providing the advanced basis to a simplex-based solver. Results indicate that this method solves some large <b>linear</b> <b>programs</b> much faster than state-of-the-art simplex-based solvers do. For example, for a set of <b>linear</b> <b>programs</b> that range in size from 5, 000 x 9, 000 to 30, 000 x 50, 000 constraints and variables, the presented method solves each <b>linear</b> <b>program</b> in about a tenth the number of simplex iterations. This reduces the total time required to solve each <b>linear</b> <b>program</b> by a factor of from two to five...|$|R
30|$|Optimally {{solving the}} dual-objectives in (2) {{can be done}} {{sequentially}} via two <b>linear</b> <b>programs</b> (after relaxing the variables to be continuous) using solvers such as LIPSOL[19]. The MAXUSER problem can be solved first as a <b>linear</b> <b>program</b> to obtain the feasible set of users, and then solve the MINBANDWIDTH problem as another <b>linear</b> <b>program</b> for the feasible set of users. It may however be too complex to be beneficial in real time as it involves solving two <b>linear</b> <b>programs.</b>|$|R
40|$|Abstract. The most {{powerful}} technique known at present for bounding {{the size of}} quantum codes of prescribed minimum distance is the quantum <b>linear</b> <b>programming</b> bound. Unlike the classical <b>linear</b> <b>programming</b> bound, it is not immediately obvious that if the quantum <b>linear</b> <b>programming</b> constraints are satisfiable for dimension K, that the constraints can be satisfied for all lower dimensions. We show that the quantum <b>linear</b> <b>programming</b> bound is monotonic in this sense, and give an explicitly monotonic reformulation...|$|R
40|$|Fuzzy <b>linear</b> <b>programming</b> is an {{application}} of fuzzy set theory in linear decision making problems {{and most of these}} problems are related to <b>linear</b> <b>programming</b> (LP) with fuzzy variables. In this paper, an approximate but convenient method for solving these problems with fuzzy non-negative technical coefficient and without using the ranking functions, is proposed. With the help of numerical examples, the method is illustrated. Keyword:Fuzzy <b>linear</b> <b>programming,</b> Fuzzy variable <b>linear</b> <b>programming,</b> Fuzzy number, Optimal solution, Decomposition method...|$|R
40|$|In this paper, we solve strict mixed-integer <b>linear</b> <b>programming</b> not {{including}} integer <b>linear</b> <b>programming</b> by isometric cylinder method under the MATLAB environment. The algorithm considers the optimization problems for both whole and real variables of the strict mixed-integer <b>linear</b> <b>programming,</b> and can quickly obtain the optimal mixed-integer point simultaneously using isometric planes and cutting planes derived from polyhedral-cones and rounded-minimal-cylinders {{at the highest}} vertex. Only a few <b>linear</b> <b>programming</b> problems need to be solved. Numerical tests show the conclusions...|$|R
