38|1390|Public
25|$|Not every change {{needs to}} be managed. Some kinds of changes {{are a part of}} the {{everyday}} routine of information processing and adhere to a predefined procedure, which reduces the overall level of risk to the processing environment. Creating a new user account or deploying a new desktop computer are examples of changes that do not generally require change management. However, relocating <b>user</b> <b>file</b> shares, or upgrading the Email server pose a much higher level of risk to the processing environment and are not a normal everyday activity. The critical first steps in change management are (a) defining change (and communicating that definition) and (b) defining the scope of the change system.|$|E
5000|$|Sets the <b>user</b> <b>file</b> {{creation}} mode mask, umask, {{the same}} for directories only, dmask and for files only, fmask.|$|E
50|$|Quickly add {{bookmarks}} {{from the}} location {{bar with a}} single click; a second click lets the <b>user</b> <b>file</b> and tag them.|$|E
50|$|ASR {{does not}} back up <b>user</b> <b>files</b> or other data, only data {{necessary}} for restoring the system configuration state. Other backup systems {{should be put}} in place to ensure <b>user's</b> actual data <b>files</b> are also backed up. In the event of a failure, an ASR restore is performed first, which allows <b>user</b> <b>files</b> to then be recovered.|$|R
5000|$|MTS files {{fall into}} one of three categories: public <b>files,</b> <b>user</b> <b>files,</b> and {{temporary}} files: ...|$|R
5000|$|... 200MHz ARM9 with 64MB of flash RAM for {{the primary}} LINUX {{operating}} system and <b>user</b> <b>files</b> ...|$|R
50|$|The TOPS-10 {{scheduler}} supported prioritized run queues, and appended {{a process}} onto a queue depending on its priority. The system also included <b>User</b> <b>file</b> and Device independence.|$|E
5000|$|Note {{that any}} of the above may be changed with {{appropriate}} changes to the configuration file. (The system file is typically /etc/X11/twm/system.twmrc and the <b>user</b> <b>file</b> is typically ~/.twmrc [...]) ...|$|E
50|$|System/34 BASIC {{has a very}} {{dangerous}} command called FREE. Typing FREE followed by a filename deletes that file without a trace. It will work for every <b>user</b> <b>file,</b> {{unless there is a}} conflict of security or an in-use condition that blocks it.|$|E
50|$|Zinstall Easy Transfer is a PC {{migration}} software, {{which allows}} to transfer <b>user</b> <b>files,</b> settings, profile and customization from one computer to another. Unlike other Zinstall transfer products, Easy Transfer does not transfer the programs themselves - only their settings and <b>user</b> <b>files.</b> The product is cited {{as an alternative}} to the Windows Easy Transfer Wizard, a feature that has been removed from Microsoft Windows 10 standard options.|$|R
25|$|In January 2014 two <b>users</b> <b>filed</b> {{a lawsuit}} against Facebook alleging that their privacy had been {{violated}} by this practice.|$|R
50|$|This {{means that}} an {{application}} {{does not have}} to run with the user's full authority. In other words, the application {{does not have to}} have the right to access all the <b>user's</b> <b>files.</b> An important aspect of the powerbox interface is that it can look to the user just like any other insecure file dialog, but can act to protect the bulk of the <b>user's</b> <b>files</b> from potentially untrustworthy software such as Trojan horses or other forms of Malware.|$|R
50|$|Sector {{does not}} split user files into blocks; instead, a <b>user</b> <b>file</b> is stored intact {{on the local}} file system {{of one or more}} slave nodes. This means that Sector has a file size {{limitation}} that is application specific. The advantages, however, are that the Sector file system is very simple, and it leads to better performance in Sphere parallel data processing due to reduced data transfer between nodes. It also allows uploaded data to be accessible from outside the Sector system.|$|E
50|$|NTFS {{contains}} several {{files that}} define and organize the file system. In all respects, {{most of these}} files are structured like any other <b>user</b> <b>file</b> ($Volume being the most peculiar), but are not of direct interest to file system clients. These metafiles define files, back up critical file system data, buffer file system changes, manage free space allocation, satisfy BIOS expectations, track bad allocation units, and store security and disk space usage information. All content is in an unnamed data stream, unless otherwise indicated.|$|E
5000|$|On the 30th August 2012, Wikidot {{announced}} plans began migration from their traditional datacenter operated by SoftLayer Technologies, Inc. to Amazon.com's EC2. This was completed on the 4th September 2012. [...] Since then, load speeds have increased dramatically. [...] Static files like CSS Stylesheets, User Avatars and Javascript files are delivered through Amazon CloudFront and DNS services {{is provided by}} Amazon Route 53. Since the 12th September, Wikidot also stores <b>user</b> <b>file</b> uploads directly on Amazon's S3 storage system. [...] Regular database backups are also made and stored on S3 to ensure data durability.|$|E
5000|$|Cobian Backup {{supports}} Unicode, FTP, compression (ZIP, SQX, 7z), encryption (including Blowfish, Rijndael, DES, RSA-Rijndael [...] ), incremental and differential backup, {{for example}} a differential backup every night (which backs up <b>user</b> <b>files</b> that {{have changed since}} the last full backup) and a full backup every seventh night (backing up {{a full set of}} <b>user</b> <b>files).</b> Backups can be saved to CD, DVD, USB memory stick, a second hard drive (internal or external), etc. It supports long file names (32,000 characters) for all backup routines.|$|R
5000|$|... {{permanent}} storage units each {{are designed to}} store hundres of terabytes of NGS data and reference genomes as well as storage for computational results and personal <b>user</b> <b>files.</b>|$|R
5000|$|The cc:Mail {{message store}} {{is based on}} a related set of files {{including}} a message store file, a directory and index <b>file,</b> and <b>user</b> <b>files.</b> In this structure, multiple users may have a reference in their individual files to the same message, thus the product offered a single instance message store. Message references in <b>user</b> <b>files</b> relate to message offsets stored in an indexed structure. Message offsets refer to locations within the message store file which is common to all users within a given database or [...] "post office".|$|R
50|$|In {{contrast}} to other RDBMS, NoSQL has the full power of UNIX during application development and usage. Its user interface uses the UNIX shell. So, {{it is not}} necessary to learn a set of new commands to administer the database. From the view of NoSQL, the database is not more than a set of files similar to any other <b>user</b> <b>file.</b> No scripting or other type of database language is used besides the UNIX shell. This shell-nature encourages casual use of this database, which makes its use familiar, resulting in formal use. In other words, NoSQL is a set of shell routines that access normal files of the operating system.|$|E
50|$|At the {{top level}} of an ODS file system is the master file {{directory}} (MFD), which contains all top-level directory files (including itself), and several system files used to store file system information. On ODS-1 volumes, a two-level directory structure is used: each user identification code (UIC) has an associated <b>user</b> <b>file</b> directory (UFD), of the form GROUP.USER. On ODS-2 and later volumes, the layout of directories under the MFD is free-form, subject to a limit on the nesting of directories (8 levels on ODS-2 and unlimited on ODS-5). On multi-volume sets, the MFD is always stored on the first volume, and contains the subdirectories of all volumes.|$|E
5000|$|In the Summer of 1982 Keith Hall of Commodore {{secured the}} money to {{commission}} the prototype which was run on an ADP DEC-10 machine. Ariadne Software wrote the software in 6502 Assembler for the client and FORTRAN for the host. The X25 packet protocol was modified to provide error correction for all file transfers. At ADP's suggestion reliable uploading was achieved by using temporary file names which were changed to <b>user</b> <b>file</b> names when the last byte had been correctly received by the host. Nick Green sought partners who could provide local call access and Host facilities. Alan Carmichael, Graham Craigie and Robert Foot of ADP joined the project.|$|E
50|$|Transferring a <b>user's</b> <b>files</b> {{to another}} {{computer}} is possible, {{provided that the}} files are not copy restricted by DRM, using the Media Transfer Protocol (MTP) in supported operating systems.|$|R
5000|$|Separation of the {{operating}} system (OS) and program <b>files</b> from <b>user</b> <b>files.</b> This allows image backups (or clones) {{to be made of}} only {{the operating}} system and installed software.|$|R
50|$|In computing, a {{directory}} structure {{is the way}} an operating system's file system and its files are displayed to the <b>user.</b> <b>Files</b> are typically displayed in a hierarchical tree structure.|$|R
50|$|Not every change {{needs to}} be managed. Some kinds of changes {{are a part of}} the {{everyday}} routine of information processing and adhere to a predefined procedure, which reduces the overall level of risk to the processing environment. Creating a new user account or deploying a new desktop computer are examples of changes that do not generally require change management. However, relocating <b>user</b> <b>file</b> shares, or upgrading the Email server pose a much higher level of risk to the processing environment and are not a normal everyday activity. The critical first steps in change management are (a) defining change (and communicating that definition) and (b) defining the scope of the change system.|$|E
5000|$|Stage three {{allowed for}} [...] "really shared files", where the $PERMIT command or the PERMIT {{subroutine}} {{can be used}} to share a file {{in a variety of ways}} with lists of other users, projects, all other users, or a combination of these. The types of access that can be allowed are read, write-extend, write-change or empty, renumber or truncate, destroy, and permit. As for stages one and two, by default a <b>user</b> <b>file</b> is permitted with unlimited access for its owner and no access for others. A file’s owner’s access can also be changed, although an owner always retains permit access. The $FILESTATUS command or FILEINFO and GFINFO subroutines {{can be used to}} obtain a file’s permit status.|$|E
5000|$|On June 15, 2008 Interpol {{issued a}} new press release in {{response}} to a statement by Ecuador's Foreign Ministry that Interpol considered to be incorrect. The press release stated that [...] "Ecuador inaccurately suggests that Interpol had not established whether the eight seized exhibits forensically examined by Interpol's computer forensic experts had been recovered by Colombian authorities on 1 March 2008 from a FARC camp or belonged to Raul Reyes. In fact, based on a review of all the information and material provided by Colombia, including a classified oral briefing, Interpol was able to satisfy itself, and clearly stated in its report, that the seized computer exhibits it was requested to forensically examine were taken from the FARC terrorist camp on 1 March 2008 and belonged to Raul Reyes." [...] Interpol also added: [...] "Validating that the contents of the computer exhibits were not manipulated after their seizure by Colombian authorities is not in any way, shape or form the same as saying that the contents of the user files are true and accurate. Interpol therefore objects to those who suggest that Interpol's report validates the source and accuracy of any particular document or <b>user</b> <b>file</b> contained therein." ...|$|E
50|$|It is a Trojan horse-type {{ransomware}} {{virus that}} encrypts the <b>user's</b> <b>files.</b> The <b>user</b> must then purchase something on specific Web sites {{to obtain the}} password to decrypt the files.|$|R
50|$|By default, a computer's disk is {{partitioned}} {{into two}} partitions: one of limited size for booting, BitLocker {{and running the}} Windows Recovery Environment and the second with the operating system and <b>user</b> <b>files.</b>|$|R
50|$|Filetopia {{is also a}} full {{featured}} Instant Messenger software, {{that allows}} for different online modes and status lines, as well as messaging offline <b>users.</b> <b>File</b> sharing is also fully integrated with this functionality.|$|R
30|$|Through {{analysis}} we can {{see that}} (1) measurement procedure does not expose user’s privacy about files in virtual machine, (2) a model can monitor <b>user</b> <b>file</b> integrity in virtual machines to prevent the presence of an illegal file, and (3) a model can detect violations of network behavior to other IaaS users’ security.|$|E
40|$|This paper {{presents}} {{the design and}} implementation of Opportunistic file-associations, designed to decouple the storage and handling of user files in a mobile device. A file with an Opportunistic file-association {{is not limited to}} a local application environment on a mobile device. Rather, the runtime environment supporting Opportunistic file associations causes a <b>user</b> <b>file</b> to be opened at the most appropriate device in the environment of the user...|$|E
40|$|The {{main purpose}} of this data base is to offer the {{researcher}} a supply of information which can be analyzed, revised and updated in a repetitive way. This {{can be accomplished by}} an interactive approach. It is possible to use data from the central file (official data) and from a private single <b>user</b> <b>file.</b> It is possible to write regression equations, as well as algebraic expressions defining transformations of the economic variables. ...|$|E
50|$|Because Sector {{does not}} split <b>user</b> <b>files,</b> Sphere can simply wrap up many {{existing}} applications that accepts files or directories as input, without rewriting them. Thus {{it can provide}} greater compatibility to legacy applications.|$|R
50|$|In late 2017, the iPad Pro {{will receive}} the iOS 11 update, that will add the ability to run {{multiple}} windows, drag and drop from one app to another, and browse a <b>user's</b> <b>files.</b>|$|R
40|$|Abstract On-Demand Computing {{fulfills}} {{the need}} of computing availability at limited hard-ware and software costs. Distributed systems of this kind typically store <b>user</b> <b>files</b> in a shared filesystem, and consequently can expose to high risks <b>user’s</b> private <b>files,</b> unless they are not pro-tected by strong security mechanisms. In this pa-per, we describe an agent-based system which is able to keep private all <b>user’s</b> <b>files</b> on the stor-age, {{through the use of}} transparent and on-the-fly cryptographic techniques, which do not cause any modification to the node’s operating systems or application codes. Thanks to our approach, pri-vate files are always protected, even by malicious system administrators, while they are processed by a user’s application. Our system is designed {{so that it can be}} deployed in single-server or desk-top computer contexts as well. We also report experimental results that show a low overhead of our techniques...|$|R
