20|10000|Public
40|$|This paper {{presents}} an intelligent <b>user</b> <b>interface</b> <b>agent</b> architecture based on Bayesian networks. Using a Bayesian network knowledge representation not only dynamically captures and models user behavior, {{but it also}} dynamically captures and models uncertainty in the interface's reasoning process. Bayesian networks' sound semantics and mathematical basis enhances it's ability to make correct, intelligent inferences as to the user's needs. We show explicit examples of our agent's reasoning using our Bayesian network and present results showing the utility of Bayesian networks {{in the domain of}} user interfaces. Content Areas: user interfaces, agent architecture, cognitive reasoning, expert systems, reinforcement learning, probabilistic reasoning Introduction GESIA 1 (Generic Expert System Intelligent Assistant) is an intelligent <b>user</b> <b>interface</b> <b>agent</b> architecture conceived out of the development of a generic expert system shell (Harrington, Banks, & Santos 1996). This expert system shell [...] ...|$|E
40|$|We {{describe}} our computational Affective Knowledge Repre-sentation (AKR) {{the hierarchical}} model of affect – includ-ing affect, mood, emotion, and personality – {{which we have}} developed {{for the design of}} socially intelligent agents. We describe a script implementation of emotion concepts used which we applied to create an intelligent <b>user</b> <b>interface</b> <b>agent</b> endowed with 1) affect sensory capacities as well as 2) gen-eral affective knowledge...|$|E
40|$|Letizia is a <b>user</b> <b>interface</b> <b>agent</b> that assists a user {{browsing}} the World Wide Web. As {{the user}} operates a conventional Web browser such as Netscape, the agent tracks user behavior {{and attempts to}} anticipate items of interest by doing concurrent, autonomous exploration of links from the user's current position. The agent automates a browsing strategy consisting of a best-first search augmented by heuristics inferring user interest from browsing behavior. ...|$|E
40|$|This paper {{concerns}} an agent-based human-robot interface via the Internet. A user {{client and}} an embedded software {{are viewed as}} agents with limited computational and communication resources. To facilitate the communication between the real-time embedded <b>agents</b> and the <b>user</b> <b>interface</b> <b>agents</b> via the communication channel of uncertain quality the proxy agent is proposed as a mediator. The functions assigned to the proxy agent target reduction of inter-agent communication load and minimization of computational resources taken by the embedded <b>agents</b> and <b>user</b> <b>interface</b> <b>agents</b> for communicationrelated tasks. An XML-based language, RoboML, is designed {{to serve as a}} common language for robot programming, agent communication and knowledge representation. The human-robot interface software prototype is developed for an autonomous guided vehicle to evaluate the proposed techniques. ...|$|R
40|$|This paper {{describes}} MiBiblio, {{a highly}} personalizable interface to large collections in digital libraries. MiBiblio {{allows users to}} create virtual places we term personal spaces. As users find useful items in the repositories, they organize these items and keep them handy in their personal spaces for future use. Personal spaces may also be updated by user agents. KEYWORDS: Personal Spaces, Personalization, <b>User</b> <b>Interfaces,</b> <b>Agents...</b>|$|R
40|$|The {{widespread}} {{acceptance of}} digital library will depend, {{to a large}} extent, on the ease-of-use and appeal of the <b>user</b> <b>interface.</b> Hence, {{the development of a}} versatile and friendly <b>user</b> <b>interface</b> for digital library becomes indispensable and this has been the objective of this thesis. A pilot project on digital library was undertaken jointly by the four universities in Montreal. At Concordia University we undertook the responsibility for developing a <b>User</b> <b>Interface.</b> The sample digital library consists of 9000 photographs of architectural images and associated texts. The <b>user</b> <b>interface</b> design deals with providing a uniform interface for texts and images. It makes use of a simple conceptual model that is well suited for digital libraries, and provides a direct manipulation interface with affordances that are appropriate to a "distributed digital library". The biggest challenge in a distributed digital library will be to balance between recall and precision to a level satisfactory to the user. Most searches on digital library often provide a large number of hits and thus overloading the user with information. To overcome the problem of information overloading, in this thesis, we have investigated collaboration in information retrieval. Collaboration among multiple users stem from reusing and sharing information gathered by one with others. Software <b>agents</b> called <b>user</b> <b>interface</b> <b>agents</b> are expected to assist users in collaboration and filtering. A protocol is proposed for cooperation and inter-operation between multiple <b>user</b> <b>interface</b> <b>agents.</b> The analysis shows that conflicts can arise during collaboration and they can be resolved using negotiation...|$|R
40|$|A <b>User</b> <b>Interface</b> <b>Agent</b> (UIA) is a {{software}} entity that assists its users in effectively using the user interface software. In electronic commerce applications, the user interface software {{plays an important}} role. Users of different kinds and backgrounds will use this software with different expectations. Traditional studies of user interface technology have shown {{the existence of a}} "gap" between what the user interface software can actually do and the users' expectations about it. Agent technology, in the form of personalized user interface agents, can help narrow this gap. In this thesis, the supports that software agents can provide in various stages of consumers' shopping process are introduced. Roles of the <b>user</b> <b>interface</b> <b>agent</b> and contents of the user model are analyzed. Also, this thesis explores the use of a <b>user</b> <b>interface</b> <b>agent</b> to provide personalized service to the user by knowing the user's preferences. The UIA maintains a knowledge base about the user, based on a user model. Such user models can be constructed by taking application dependent and application independent attributes into account. The user model is used to deal with incompleteness and ambiguity that might arise in the user's search query, to help the UIA decide when and what kind of proactive information to present to the user, or to enable the UIA to filter the search response set. The UIA assists the user by "reasoning" effectively based on a set of rules that captures the user's needs, preferences and the way he is interacting with the software system. A prototype for UIA has been implemented on the Java platform for electronic shopping. A set of test cases demonstrates that employment of the user model for the UIA improves the effectiveness of the user interface in electronic commerce application...|$|E
30|$|Data {{mining and}} MAS {{have been used}} for {{building}} a complex system [34], they are combined to produce automatic data mining system. In this work, we used MAS to modeling several autonomous intelligent agents: Mining Rules Agent (MR-Agent), Quality Measurement Agent (QM-Agent), Decision Support Agent (DS-Agent), Principal Agent (MCA-Principal Agent), Control agent (Control Agent) and the <b>user</b> <b>interface</b> <b>agent.</b> Each one has a specific task to achieve, the combination of the whole tasks will produce the main objective of the proposed approach.|$|E
30|$|The main {{function}} of this agent is {{to manage the}} communication between all components of the system, and control the data transmission among them. It is responsible for transferring the user needs from the <b>user</b> <b>interface</b> <b>agent</b> to MR-agent, QM-agent and DS-agent and sending back the result to the control agent to save it in the knowledge base. Once the result is saved in the knowledge base, the control agent, transfer it to the principal agent to begin the evaluation task of extracted rules.|$|E
40|$|International audienceThis paper proposes SAASHA, a Self-Adaptable Agent System for Home Automation that {{provides}} end-users {{with the capacity}} of defining custom scenarios to act on their environment. The proposed system adapts dynamically to the environment without any expert intervention. It is composed of two types of component-based software agents: Graphical <b>User</b> <b>Interface</b> <b>Agents</b> that constitute the system's front-end and Device Control Agents that control the devices from the environment and implement user-defined scenarios. SAASHA seamlessly avoids scenario conflicts and automatically recovers from device failures...|$|R
40|$|Agent-oriented {{approach}} is increasingly showing its magic {{power in a}} diversity of fields, specifically, ubiquitous computing and smart environment. Meanwhile, it is considered the next creative issue is to interconnect and integrate isolated smart spaces in real world together into a higher level space known as a hyperspace. In this paper, an agent-oriented architecture, which involves the techniques of mobile agents, middleware, and embedded artificial intelligence, is proposed. Detailed implementations describe our efforts {{on the design of}} terminal device, <b>user</b> <b>interface,</b> <b>agents,</b> and AI comput...|$|R
40|$|The {{development}} of <b>user</b> <b>interfaces</b> for large applications {{is subject to}} a series of well-known problems including cost, maintainability, and sensitivity to changes in the operating environment. The Chiron <b>user</b> <b>interface</b> development system has been built to address these software engineering concerns. Chiron introduces a series of layers that insulate components of an application from other components that may experience change. To separate application code from <b>user</b> <b>interface</b> code, <b>user</b> <b>interface</b> <b>agents</b> called artists are attached to application abstract data types. Operations on abstract data types within the application implicitly trigger <b>user</b> <b>interface</b> activities. Chiron also provides insulation between the <b>user</b> <b>interface</b> layer and the underlying system; artist code is written in terms of abstract depiction libraries that insulate the code from the specifics of particular windowing systems and toolkits. Concurrency is pervasive in the Chiron architecture. Inside an application there [...] ...|$|R
40|$|This paper {{deals with}} the design of user {{interfaces}} of highly interactive DAI systems composed of multiple coarse grained intelligent agents. A methodological framework for the analysis and design steps required {{for the development of}} the <b>user</b> <b>interface</b> <b>agent</b> is outlined. An assumption is made that the DAI system is already fully specified or built out of pre-existing components. The main aspect of this methodology is the. mmsparency analysis of the interface which determines the degree of detail the end user is expected to know about the DAI system. The outlined methodology, which is in the preliminary phases of verification, is useful for interface designers of DAI applications with similar characteristics...|$|E
40|$|We are {{reaching}} a crisis with design of user interfaces for consumer electronics. Flashing 12 : 00 time indicators, push-andhold buttons, and interminable modes and menus are all symptoms {{of trying to}} maintain a one-to-one correspondence between functions and physical controls, which becomes hopeless {{as the number of}} capabilities of devices grows. We propose instead to orient interfaces around the goals that users have for the use of devices. We present Roadie, a <b>user</b> <b>interface</b> <b>agent</b> that provides intelligent context-sensitive help and assistance for a network of consumer devices. Roadie uses a Commonsense knowledge base to map between user goals and functions of the devices, and an AI partialorder planner to provide mixed-initiative assistance with executing multi-step procedures and debugging help when things go wrong...|$|E
40|$|In this article, we {{describe}} an Affective Knowledge Repre-sentation (AKR) scheme to represent emotion schemata {{to be used}} in the design a variety of socially intelligent artificial agents. Our approach in this article and in the applications of our AKR scheme, focusses on the notion of “social expertise” of socially intelligent agents in terms of their 1) external be-havior and 2) internal motivational goal-based abilities. AKR is derived from combining multiple emotion theories in a use-ful hierarchical model of affective phenomena and includes a taxonomy of affect, mood, emotion, and personality, as well as a framework for emotional state dynamics. Our model is being applied to design and implement two systems: 1) EBA, an Emotion-Based Architecture for two autonomous robots, 2) MAUI, a Multimodal Affective <b>User</b> <b>Interface</b> <b>agent...</b>|$|E
40|$|The {{metaphor of}} a 'desktop' as a <b>user</b> <b>interface</b> was {{useful for the}} {{migration}} from mainframe applications to personal computers. But it must be re-evaluated when thinking about new concepts and implementations of <b>user</b> <b>interfaces</b> for modern working and home environments, especially mobile applications. The departure from tools that enable the user to directly manipulate content towards intelligent agent-based applications suggests a shift of paradigms. We propose {{a new generation of}} <b>user</b> <b>interfaces</b> extending the widely accepted WIMP metaphor by anthropomorphous <b>user</b> <b>interface</b> <b>agents,</b> conversational <b>user</b> <b>interface</b> elements, the inclusion of mobile information appliances, and appropriate multimodal interaction techniques. Initial prototype systems following this line have been successfully developed. In strategic projects with alliances of research and industry, these technologies will be further advanced into first products in the areas of mobile multimedia offices and electronic multimed [...] ...|$|R
40|$|The Chiron- 1 <b>user</b> <b>interface</b> system {{demonstrates}} key techniques which {{enable a}} strict separation of an application from its <b>user</b> <b>interface.</b> These techniques include separating the control flow {{aspects of the}} application and user interface: they are concurrent and may contain many threads. Chiron also separates windowing and look-andfeel issues from dialog and abstract presentation decisions via mechanisms employing a client-server architecture. To separate application code from <b>user</b> <b>interface</b> code, <b>user</b> <b>interface</b> <b>agents</b> called artists are attached to instances of application abstract data types (ADTs). Operations on ADTs within the application implicitly trigger <b>user</b> <b>interface</b> activities within the artists. Multiple artists can be attached ADTs, providing multiple views and alternative forms of access and manipulation by either a single user or by multiple users. Each artist and the application run in separate threads of control. Artists maintain the <b>user</b> <b>interface</b> by making remote cal [...] ...|$|R
40|$|<b>Interface</b> <b>agents</b> are {{computer}} programs that provide personalized assistance to users with their computerbased tasks. The <b>interface</b> <b>agents</b> developed {{so far have}} focused their attention on learning a user's preferences in a given application domain and on assisting him according to them. However, in order to personalize the interaction with <b>users,</b> <b>interface</b> <b>agents</b> should also learn how to best interact with each user and how to provide them assistance of the right sort at the right time. Particularly, an <b>interface</b> <b>agent</b> has to determine when the user wants a suggestion to solve a problem, when he requires only a warning about it, when he wants the agent to execute an action {{to deal with the}} problem and when he wants the agent to do just nothing. In this work we propose a learning algorithm, named WATSON, to tackle this problem. The WATSON algorithm enables an <b>interface</b> <b>agent</b> to adapt its behavior and its interaction with a user to the user's assistance requirements...|$|R
40|$|It {{has been}} very {{difficult}} to develop spoken dialogue systems with high domain extensibility. Not only the system complexity inevitably increases {{with the number of}} topics and domains, but the concurrent topics need to be handled persistently and consistently across different domains. This paper presents a distributed architecture for cooperative spoken dialogue agents with high domain extensibility. Under this architecture, different spoken dialogue agents handling different domains can be developed independently, and cooperate with one another to respond to the user's requests, while a <b>user</b> <b>interface</b> <b>agent</b> can access the correct spoken dialogue agent through a domain switching protocol, and carry over the dialogue state and history so as to keep the knowledge processed persistently and consistently across different domains. Initial experiments provide very encouraging results. 1. INTRODUCTION In recent years, many spoken dialogue systems have been successfully develop [...] ...|$|E
40|$|This paper {{presents}} an intelligent <b>user</b> <b>interface</b> <b>agent</b> architecture based on Bayesian networks. Using a Bayesian network not only dynamically captures and models user behavior, {{but it also}} dynamically captures and models uncertainty in the interface's reasoning process. We present an approach that allows our intelligent interface agent (IIA) to alter its own topology to better adapt itself to modeling a particular user. We present several metrics that provide useful information concerning the performance of our IIA. IIA's sound semantics and mathematical basis enhances its ability to make correct, intelligent inferences as to the user's needs. Keywords: intelligent user interface, Bayesian network, intelligent agent, generic expert system, knowledge representation, reinforcement learning, cognitive reasoning Methods, Models, Tools, and Techniques [...] Oral Presentation A Dynamic Bayesian Intelliegent Interface Agent Scott M. Brown and Eugene Santos Jr. and Sheila B. Banks Department [...] ...|$|E
40|$|Recently, DAI {{techniques}} {{have moved from}} toy domain problems and experimental testbeds towards real application environments. As a result, their potential users now reside outside the closed circle of system developers who were ready to accept the idiosyncrasies of their artefact. Building adequate user interfaces for these systems becomes therefore an issue of particular importance. A key aspect to study in this frame, is {{the identification of the}} new problems user interface developers are faced with, beyond the already known difficulties of AI and distributed systems user interface design. This paper addresses these questions and outlines the main issues related with interface development of DAI applications through a classification and a survey of reported interactive DAI systems. The paper presents also in some detail the concept of the <b>User</b> <b>Interface</b> <b>Agent</b> and the relevance of realistic metaphors to efficient user interaction...|$|E
40|$|<b>Interface</b> <b>agents</b> are {{computer}} programs that learn users' preferences {{to provide them}} personalized assistance with their computer-based tasks. In order to personalize the interaction with <b>users,</b> <b>interface</b> <b>agents</b> must learn how to best interact with each user and how to provide them assistance of the right sort at the right time. Particularly, an <b>interface</b> <b>agent</b> has to discover when the user needs a suggestion to solve a problem, when he requires only a warning about it, when he wants the agent to execute an action and when he wants the agent to do just nothing. In this work we propose a learning algorithm, named WATSON, to tackle this problem. The WATSON algorithm enables an <b>interface</b> <b>agent</b> to adapt its behavior and its interaction with a user to the user's assistance requirements. Our algorithm uses association rules to discover associations among problem situations and a user's assistance requirements in a given application domain...|$|R
40|$|In {{this paper}} we {{introduce}} a presentation agent framework for speech applications. In this framework presentation agents {{are used to}} produce dynamic, adaptive and prosody rich speech outputs. Using this framework in our speechonly e-mail reader {{we have been able}} to handle multilingual issues and support different user groups. Our goal is to build unique computer `voices' to make speech outputs more intelligible and pleasant for the users. Keywords Speech <b>user</b> <b>interfaces,</b> speech output, <b>user</b> <b>interface</b> <b>agents,</b> dynamic output generation, prosody INTRODUCTION In current speech <b>user</b> <b>interfaces</b> speech output is often treated in a very inefficient way. Usually speech output is generated using a fixed string that is sent to a synthesizer. It is not uncommon that the resulting utterance is unpleasant and unintelligible for the user. To improve speech output we should use dynamic, adaptive and highly context sensitive messages. It is noteworthy that different people prefer different types of [...] ...|$|R
40|$|Open Sesame! ® 1. 0 —released in 1993 —was the world’s first {{commercial}} <b>user</b> <b>interface</b> (UI) learning <b>agent.</b> The {{development of this}} agent involved a number of decisions about basic design issues {{that had not been}} previously addressed, including the expected types of agent and the preferred form and frequency of interaction. In the two years after shipping Open Sesame! 1. 0, we have compiled a rich database of customer feedback. Many of our design choices have been validated by the general approval of our customers while some were not received as favorably. Thanks to the overwhelming amount of feedback, we were able to substantially improve the design for Open Sesame! 2. 0, and develop a cross-platform learning engine- Learn Sesame- {{that can be used to}} add learning agent functionality to any third party application. In this paper, we present a summary of the lessons learned from customer feedback, an outline of resulting design changes, the details of the developed learning agent engine and planned research. 1 1. Background on <b>User</b> <b>Interface</b> Learning <b>Agents</b> In our <b>user</b> <b>interface</b> learning <b>agent</b> paradigm, a learning agent sits in the background and observes user actions, finds repetitive patterns, and automates them upon approval. The learnin...|$|R
40|$|We {{present a}} multi agent system to {{generate}} society profile about facial expressions. Each user interacts with its <b>User</b> <b>Interface</b> <b>Agent</b> which collects user information and communicates {{with the other}} agents in the system. A graphical facial animation program is used to monitor facial expressions and to allow the user to draw his/her expressions. The information processed in the system is the parameters related to facial expressions. The parameters are processed for generating general society profile and local agent beliefs according to facial expressions generated by users and the grades assigned to expressions. The society profile is generated by an intelligent agent, called Clustering Agent having ability to cluster all the agent information in the system. The Clustering Agent learns some parameter weights used in the clustering process by the rewards of the users. The system may be {{a useful tool for}} multimedia applications, including advertisements, games, and entertainment. KEY WORDS: Intelligent agents, clustering, learning, facial expression analysis, multimedia applications. 1...|$|E
40|$|This paper {{describes}} {{the design and}} implementation of the Office Assistant [...] an agent that interacts with visitors at the office door and manages the office owner's schedule. We claim that rich context information about users is key to making a flexible and believable interaction. We also argue that natural face-to-face conversation is an appropriate metaphor for human-computer interaction. Keywords Human-computer Interaction, <b>User</b> <b>Interface,</b> <b>Agent,</b> Office Automation INTRODUCTION This paper {{describes the}} design {{and implementation of the}} Office Assistant [...] an agent that interacts with visitors at the office door and manages the office owner's schedule. The agent is installed at the threshold of a high-traffic office in a noisy environment where the office owner prefers to have the door closed. The agent's goal is to facilitate informal, everyday office communication in an unobtrusive manner. One of the primary tasks of the office assistant agent is to interact with visitors, give [...] ...|$|E
40|$|Information {{on the web}} is {{increasing}} at an enormous speed. Search histories of the users, browsing pattern, query expansion using relevance feedback {{are some of the}} techniques used in the literature to personalize the web search. This study proposed the integrated approach of personalized web search using Agents and Information Scent. Agent based information retrieval system personalizes the web search by clustering the query sessions of users on the web using information scent, information scent is the measure of the sense of value of clicked web page in the query session with respect to the information need of the <b>user.</b> <b>Interface</b> <b>agent</b> after receiving the input query generates the query recommendations using the cluster which is closes to the information need of input query and is expanded using related keywords to disambiguate its context. The proposed framework effectively personalizes the web search through input query sense disambiguation and exposes the part of Surface Web through Hubs and Authorities recommendations using user profile modeled using Information Scent of clicked URLs and clusters of query sessions on the web. The effectiveness of the proposed system on the precision of search results is confirmed with the experiments conducted on the data set collected using proposed architecture...|$|E
40|$|The {{advent of}} the World Wide Web and digital {{photography}} {{has led to a}} phenomenal increase in the number and complexity of stored images. Accordingly, the ability to browse and retrieve images based upon image content is of rapidly growing importance. The goals of this research project are to develop a Content-Based Image Retrieval (CBIR) system that combines dynamic, user-driven search capabilities with artificial intelligence techniques and to examine the system 2 ̆ 7 s effectiveness. The experimental method will be used to test the specific hypotheses and various research questions proposed in this research project. All of the experiments will be conducted using a CBIR prototype system that incorporates intelligent <b>User</b> <b>Interface</b> <b>Agents</b> (UIA). The UlAs will use both neural networks and an expert reasoning system. The actual experiments will be conducted using a task-oriented approach, with both descriptive and analytical statistics used to assess the results. In addition, a new evaluation CBIR metric will be proposed and applied. It is expected that this research will benefit CBIR research and CBIR system development by: 1) demonstrating the effectiveness of providing <b>users</b> with an <b>interface</b> that allows them to sketch an image, provides a relevance feedback mechanism that is based on providing similar images, and offers query refinement suggestions; 2) presenting a reusable modular design approach {{that can be used to}} create CBIR systems; 3) showing how AI techniques, particularly intelligent <b>User</b> <b>Interface</b> <b>Agents,</b> can be used effectively in CBIR systems; 4) proposing a 2 ̆ 2 standard 2 ̆ 2 CBIR user interface; and 5) proposing a new CBIR evaluation metric. The results of this research project should advance the current state of CBIR in that it designs, implements and evaluates an interactive CBIR system that uses image input and incorporates both the user 2 ̆ 7 s interactive guidance and artificial intelligence techniques to access images...|$|R
40|$|Computer-based {{presentation}} systems {{enable the}} realization of effective and dynamic presentation styles that incorporate multiple media. Obvious examples are animated <b>user</b> <b>interface</b> <b>agents</b> which verbally comment on multimedia objects displayed on the screen while performing cross-media and cross-window pointing gestures. The design of such presentations must account for the temporal coordination of media output and the agent’s behavior. In this paper we describe a new presentation system which not only creates the multimedia objects to be presented, but also generates a script for presenting the material to the user. In our system, this script is forwarded to an animated presentation agent running the presentation. The paper details the kernel of the system which is a component for planning temporally coordinated multimedia...|$|R
40|$|The {{complexity}} of current software applications is overwhelming users. The need exists for intelligent <b>interface</b> <b>agents</b> {{to address the}} problems of increasing taskload that is overwhelming the human <b>user.</b> <b>Interface</b> <b>agents</b> could help alleviate user taskload by extracting and analyzing relevant information, and providing information abstractions of that information, and providing timely, beneficial assistance to users. Central to providing assistance to a user is the issue of correctly determining the user's intent. The Clavin project is to build an intelligent natural language query information management system. Clavin must maintain a dynamic user model of the relevant concepts in the user inquiries as they relate to the information sources. The primary goal of Clavin is to autonomously react to changes in user intent as well as the information sources, by dynamically constructing the appropriate queries relative to the changes identified. In this paper, we discuss the [...] ...|$|R
40|$|Intelligent {{agents are}} rapidly gaining {{popularity}} in our increasingly networked world since their emergence {{at the beginning}} of the last decade as a promising design and implementation solution for future applications. They provide information monitoring, searching filtering, and decision aiding that help people focus on the information that is most pertinent to them in a particular context. One central class of agents is personal assistants. They can be distinguished from ordinary agents by the fact that they work at the interface level rather than the application level. They model their owners' interests, provide services to them, and act on their behalf when required. Their domains of application include Internet information retrieval, E-commerce, telecommunication, and network management. This thesis aims to present a general model of personal assistants using agent technology. The proposed model aims to efficiently provide all necessary functionality regardless of the application. Our system architecture consists of three distinct agents. They are the <b>User</b> <b>Interface</b> <b>Agent,</b> Information Management Agent, and Personal Agent. They communicate with each other, with the human user, and with other agents using Agent Communication Language in order to provide services to their owners. The model was applied in the Virtual Team Collaboration project as an agent that helps the user managing his Agenda, managing the team, scheduling meetings, and acting on the user's behalf. The thesis work show also how can we use our model of personal assistant in E-commerce...|$|E
40|$|In {{recent years}} {{there has been}} {{considerable}} interest in the possibility of building complex problem solving systems as groups of co-operating experts. This has led us to develop a multiagent expert systems capable to run on servers that can support a large group of users (clients) who communicate with the system over the network. The system provides an architecture to coordinate the behavior of several specific agent types. Two types of agents are involved. One type works on the server computer and the other type works on the client computers. The society of agents in our system consists of expert systems agents (diagnosis agents, and a treatment agent) working on the server side, each of which contains an autonomous knowledge-based system. Typically, agents will have expertise in distinct but related domains. The whole system is capable of solving problems, which require the cumulative expertise of the agent community. Besides to the <b>user</b> <b>interface</b> <b>agent</b> who employs an intelligent data collector, so-called communication model in KADS, working on the client sides. We took the advantage of a successful pre-existing expert systems—developed at CLAES (Central Laboratory for Agricultural Expert Systems, Egypt) —for constructing an architecture of a community of cooperating agents. This paper describes our experience with decomposing the diagnosis expert systems into a multi-agent system. Experiments on a set of test cases from real agricultural expert systems were preformed. The expert systems agents are implemented in Knowledge Representation Object Language (KROL) and JAVA languages using KADS knowledge engineering methodology on the WWW platform...|$|E
40|$|The need {{exists in}} the work force for generic intelli-gent user {{interface}} agents {{to address the problem of}} in-creasing taskload that is overwhelming the human user. Interface agents could help alleviate user taskload by providing abstractions and intelligent assistance in a self-contained software agent that communicates with the user through the existing user interface and also adapts to user needs and behaviors. The benefits of a generic intelligent <b>user</b> <b>interface</b> <b>agent</b> environment is it can be applied to any highly interactive and informa-tion intensive software system from freight and parcel management systems to Wall Street financial invest-ment and analysis. We desire to address the two following difficulties with developing interface agents: (1) The extensive number of existing computer systems makes it impractical to build these agents by hand for each system; (2) Any such agent must be compliant with existing user inter-face standards and business practices (e. g., the United States Air Force’s Common Operating Environment (COE) standards as defined by the Defcnse Informa-tion Infrastructure (DII)). Thus, an environment constructing intelligent interface agents that facilitates standards compliance is necessary. We investigate the feasibility of developing an inte-grated environment for constructing generic intelligent user interface agents. We base our proposed design on three components: (1) a knowledge acquisition tool for support of specification and design of interface agents taking in to account compliance with existing computer-based systems and user interface standards; (2) a utility theory-based methodology for interface agent requirements, assistance, and adaptivity; and (3) a correction model for user adaptivity based on user metrics evaluation...|$|E
40|$|The {{design and}} {{development}} of the Open Agent Architecture (OAA) 1 system has focused on providing access to agentbased applications through an intelligent, cooperative, distributed, and multimodal agent-based <b>user</b> <b>interfaces.</b> The current multimodal interface supports a mix of spoken language, handwriting and gesture, and is adaptable to the user's preferences, resources and environment. Only the primary <b>user</b> <b>interface</b> <b>agents</b> need run on the local computer, thereby simplifying the task of using a range of applications from a variety of platforms, especially low-powered computers such as Personal Digital Assistants (PDAs). An important consideration {{in the design of the}} OAA was to facilitate mix-andmatch: to facilitate the reuse of agents in new and unanticipated applications, and to support rapid prototyping by facilitating the replacement of agents by better versions. The utility of the agents and tools developed as part of this ongoing research project has been demonstrated by their [...] ...|$|R
50|$|Embodied {{conversational}} {{agents are}} {{a form of}} intelligent <b>user</b> <b>interface.</b> Graphically embodied <b>agents</b> aim to unite gesture, facial expression and speech to enable face-to-face communication with users, providing a powerful means of human-computer interaction.|$|R
40|$|The {{complexity}} of " current soft. ware applications is overwhelming users. The need exists for inteUigent <b>interface</b> <b>agents</b> {{to address the}} problems of increasing taskload that is overwhelming the hunloax <b>user.</b> <b>Interface</b> <b>agents</b> could help alleviate user taskload by extracting and analyzing relevant information, and providing information abstractions of that informatiou, and providing timely, beneficial assistance to users. Central to providing assistance to a user is the issue of correctly determining the user’s intent. The C. lavin project is to build an intelligent natural language query information management system. Clavin must mMntain a dynamic user model of the relevant concepts in the user inquiries as they relate to the information sources. The primary goal of Clavin is to antonomously react to changes in user intent as well as the information sources, by dynamically constructing the appropriate queries relative to the changes identified. In this paper, we discuss the problems and issues that arise in achieving user-intent ascription through dynamic user model construction with Bayesian networks...|$|R
