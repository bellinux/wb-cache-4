51|34|Public
60|$|Under this head, too, falls that homage, very pure, as I think, {{which all}} ranks pay to {{the hero of}} the day, from Coriolanus and Gracchus, down to Pitt, Lafayette, Wellington, Webster, Lamartine. Hear the shouts in the street! The people cannot see him enough. They delight in a man. Here is a head and a trunk! What a front! What eyes! Atlantean shoulders, and the whole {{carriage}} heroic, with equal inward force to guide the great machine! This pleasure of full expression to that which, in their private experience, is usually cramped and obstructed, runs, also, much higher, and is the secret of the reader's joy in literary genius. Nothing is kept back. There is fire enough to fuse the mountain of ore. Shakspeare's principal merit may be conveyed, in saying that he, of all men, best understands the English language, and can say what he will. Yet these <b>unchoked</b> channels and floodgates of expression are only health or fortunate constitution. Shakspeare's name suggests other and purely intellectual benefits.|$|E
60|$|By what miracle I escaped destruction, it is {{impossible}} to say. Stunned by the shock of the water, I found myself, upon recovery, jammed in between the stern-post and rudder. With great difficulty I gained my feet, and looking dizzily around, was, at first, struck with the idea of our being among breakers; so terrific, beyond the wildest imagination, was the whirlpool of mountainous and foaming ocean within which we were engulfed. After a while, I heard the voice of an old Swede, who had shipped with us at the moment of our leaving port. I hallooed to him with all my strength, and presently he came reeling aft. We soon discovered that we were the sole survivors of the accident. All on deck, with the exception of ourselves, had been swept overboard;--the captain and mates must have perished as they slept, for the cabins were deluged with water. Without assistance, we could expect to do little for the security of the ship, and our exertions were at first paralyzed by the momentary expectation of going down. Our cable had, of course, parted like pack-thread, at the first breath of the hurricane, or we should have been instantaneously overwhelmed. We scudded with frightful velocity before the sea, and the water made clear breaches over us. The frame-work of our stern was shattered excessively, and, in almost every respect, we had received considerable injury; but to our extreme Joy we found the pumps <b>unchoked,</b> and that we had made no great shifting of our ballast. The main fury of the blast had already blown over, and we apprehended little danger from the violence of the wind; but we looked forward to its total cessation with dismay; well believing, that, in our shattered condition, we should inevitably perish in the tremendous swell which would ensue. But this very just apprehension seemed by no means likely to be soon verified. For five entire days and nights--during which our only subsistence was a small quantity of jaggeree, procured with great difficulty from the forecastle--the hulk flew at a rate defying computation, before rapidly succeeding flaws of wind, which, without equalling the first violence of the Simoom, were still more terrific than any tempest I had before encountered. Our course for the first four days was, with trifling variations, S.E. and by S.; and we must have run down the coast of New Holland.--On the fifth day the cold became extreme, although the wind had hauled round a point more to the northward.--The sun arose with a sickly yellow lustre, and clambered a very few degrees above the horizon--emitting no decisive light.--There were no clouds apparent, yet the wind was upon the increase, and blew with a fitful and unsteady fury. About noon, as nearly as we could guess, our attention was again arrested by the appearance of the sun. It gave out no light, properly so called, but a dull and sullen glow without reflection, as if all its rays were polarized. Just before sinking within the turgid sea, its central fires suddenly went out, as if hurriedly extinguished by some unaccountable power. It was a dim, sliver-like rim, alone, as it rushed down the unfathomable ocean.|$|E
50|$|If '''''' {{then the}} nozzle is <b>UNCHOKED.</b>|$|E
50|$|As {{long as the}} LP turbine remains choked, {{there is}} no {{significant}} change in HP turbine pressure ratio (or deltaH/T) and flow. Once, however, the LP turbine <b>unchokes,</b> the HP turbine deltaH/T starts to decrease. Eventually the HP turbine <b>unchokes,</b> causing its flow capacity to start to fall. Ground Idle is often reached shortly after HPT <b>unchoke.</b>|$|R
5000|$|... #Subtitle level 2: Progressive <b>unchoking</b> of the {{expansion}} system ...|$|R
25|$|BitTorrent peers use tit-for-tat {{strategy}} to optimize their download speed. More specifically, most BitTorrent peers use {{a variant of}} Tit for two Tats which is called regular <b>unchoking</b> in BitTorrent terminology. BitTorrent peers have {{a limited number of}} upload slots to allocate to other peers. Consequently, when a peer's upload bandwidth is saturated, it will use a tit-for-tat strategy. Cooperation is achieved when upload bandwidth is exchanged for download bandwidth. Therefore, when a peer is not uploading in return to our own peer uploading, the BitTorrent program will choke the connection with the uncooperative peer and allocate this upload slot to a hopefully more cooperating peer. Regular <b>unchoking</b> corresponds very strongly to always cooperating on the first move in prisoner’s dilemma. Periodically, a peer will allocate an upload slot to a randomly chosen uncooperative peer (<b>unchoke).</b> This is called optimistic <b>unchoking.</b> This behavior allows searching for more cooperating peers and gives a second chance to previously non-cooperating peers. The optimal threshold values of this strategy are still the subject of research.|$|R
5000|$|Once <b>unchoked,</b> {{the nozzle}} static {{pressure}} {{is equal to}} ambient pressure: ...|$|E
50|$|The {{following}} special calculation is required, if {{the nozzle}} {{happens to be}} <b>unchoked.</b>|$|E
5000|$|Can {{limit the}} upload and {{download}} bandwidth usage and {{the maximum number of}} <b>unchoked</b> peers ...|$|E
40|$|Optimistic <b>unchoking</b> {{plays an}} {{important}} role in BitTorrent Peer-to-Peer (P 2 P) [46, 45, 48, 4] file sharing networks. Peers use optimistic <b>unchoking</b> to find upload bandwidth information about their neighbors. However, free-riders can also take advantage of optimistic <b>unchoking</b> and download from the network without uploading anything. In this thesis, a novel optimistic <b>unchoking</b> algorithm for BitTorrent is proposed. The main purposes of our algorithm are to prevent free-riding and to improve the efficiency of optimistic <b>unchoking.</b> A stochastic model is then proposed to analyze the performance of my algorithm. We also verify the results by simulations. BitTorrent also have a built-in incentive mechanism called "Tit-for-Tat" [4] to prevent free-riding. Basically, a peer will upload to other peers (default is four) that give it the highest download rate. In this thesis, We will show that by adjusting the upload rate and the number of uploads, a selfish peer can take advantage of the "Tit-for-Tat" [4] to improve its download rate. However, this strategy of the selfish peer is harmful to the whole network. If many peers take the same strategy, the performance of the whole network will be significantly decreased. It is then theoretically proved that the "Tit-for-Tat" [4] is not an optimal incentive mechanism. To solve this problem, We propose a new incentive mechanism for BitTorrent. With this new mechanism, even if all peers are selfish, the performance of the whole network can still be maintained at a very high leve...|$|R
40|$|Abstract—Although {{the popular}} BitTorrent {{protocol}} strives to limit free-riding via its tit-for-tat incentives, recent research efforts {{have shown that}} it does not strictly enforce fairness. Freeriding opportunities indeed exist, mainly via optimistic <b>unchokes,</b> a BitTorrent mechanism that facilitates the continuous discovery of better peers to interact with. Our results in this work also show that increasing numbers of free-riders can considerably hurt the performance of compliant peers. In an effort to address this problem, this paper proposes a BitTorrent-like protocol that dynamically organizes peers of similar upload bandwidth in teams — groups of peers collaborating for mutual benefit. Team members mostly satisfy their data download needs inside their team and only perform optimistic <b>unchokes</b> when absolutely necessary. We show that, as a result, the team protocol improves peer performance via explicit cooperation within teams. At the same time, it limits bandwidth spent on optimistic <b>unchokes,</b> thereby rendering the system more robust against free-riders. We have modified an existing BitTorrent implementation to implement the team protocol and have evaluated its impact by running real experiments on a controlled PlanetLab testbed. Our results show that the protocol enables slightly improved performance for compliant peers, while free-riders are unable to sustain high download rates, as compared to regular BitTorrent. In addition, we observe a higher degree of robustness: increasing numbers of free-riders in the system have a significantly lower negative impact on the performance of contributing peers. I...|$|R
50|$|Military turbofans {{tend to have}} a {{much higher}} design fan {{pressure}} ratio than civil engines. Consequently, the final (mixed) nozzle is choked at all flight speeds, over most of the throttle range. However, at low throttle settings the nozzle will <b>unchoke,</b> causing {{the lower end of the}} working lines to have a short curved tail, particularly at low flight speeds.|$|R
5000|$|The nozzle {{pressure}} thrust term is zero if the nozzle is <b>unchoked,</b> so only the Momentum Thrust {{needs to be}} calculated: ...|$|E
50|$|The fire {{broke out}} after smoke from an unswept chimney had seeped through an <b>unchoked</b> vent in a {{partition}} between the wooden and main walls in the Field Marshal's Hall. The wall begun to smoulder and a {{fire broke out}} in the roof of the Peter the Great Hall. The dry waxed floors and the oil-painted fretwork caught fire immediately.|$|E
50|$|As {{the second}} {{illustration}} shows, a low pressure ratio fan (such as that {{used on a}} high bypass ratio turbofan) has a range of working lines. At high flight speeds, the ram pressure ratio factors up the cold nozzle pressure ratio, causing the nozzle to choke. Above the choking condition, the working lines tend to coalesce into a unique steep straight line. When the nozzle unchokes, the working line starts to become more curved, reflecting the curvature of the nozzle characteristic. With falling flight Mach number, the cold nozzle pressure ratio decreases. Initially this has no effect upon {{the position of the}} working line, apart from the curved (<b>unchoked)</b> tail, which becomes longer. Eventually, the cold nozzle will become <b>unchoked</b> at lower flight Mach numbers, even at full throttle. The working lines will now become curved, gradually migrating towards surge as flight Mach number decreases. The lowest surge margin working line occurs at static conditions.|$|E
40|$|Abstract—Locality-aware BitTorrent (BT) systems {{reduce the}} inter-ISP traffic by {{providing}} peers with physically close neigh-bors. However, they still rely on randomized optimistic unchok-ing, leaving a design space for performance improvement. In this paper, we propose a biased optimistic <b>unchoking</b> mechanism called PicBou. In PicBou, a typical peer prefers to optimistically <b>unchoke</b> the neighbors that are physically {{close to it}} or have file pieces rarely replicated among its internal neighbors. The PicBou enables peers in the same ISPs to cooperatively get missing pieces in a prompt way, and share pieces among internal neighbors once the pieces have been downloaded into the ISPs. This feature greatly reduces the content distribution time and saves the backbone bandwidth consumption. The PicBou is simple and can be easily integrated in current locality-aware BT systems. We evaluate the performance through extensive simulations. The results show that PicBou reduces the content distribution time of locality-aware BT systems by about 20 % and cuts down the inter-ISP traffic by 19 - 36 %. I...|$|R
50|$|The low {{pressure}} turbine 'sees' {{the variation in}} flow capacity of the primary nozzle. A falling nozzle flow capacity tends to reduce the LP turbine pressure ratio (and deltaH/T). As the left hand map shows, initially the reduction in LP turbine deltaH/T has little effect upon the entry flow of the unit. Eventually, however, the LP turbine <b>unchokes,</b> causing the flow capacity of the LP turbine to start to decrease.|$|R
40|$|We propose two new greedy {{algorithms}} {{to be used}} by software clients {{running the}} BitTorrent peer to peer protocol: a new peer selection algorithm and a new piece selection algorithm. We provide experimental results showing that the proposed algorithms are better than the ones currently in use. When used together in our experiments, the algorithms decreased the expected download time by?? % on average when compared to an identical client running the standard Rarest First and Choke/Random <b>Unchoke</b> algorithms. ...|$|R
50|$|However, ultra-high {{bypass ratio}} turbofans {{have a very}} low design fan {{pressure}} ratio (e.g. 1.2, on the bypass section). Consequently, even at cruise flight speeds, the cold (or mixed final) propelling nozzle is <b>unchoked.</b> The fan working lines become more spread-out with flight Mach number, because they move bodily up the map, towards the top right hand corner. As a result, the static working line can be well into surge.|$|E
50|$|On the RHS is {{a typical}} primary (i.e. hot) nozzle map (or characteristic). Its {{appearance}} {{is similar to that}} of a turbine map, but it lacks any (rotational) speed lines. Note that at high flight speeds (ignoring the change in altitude), the hot nozzle is usually in, or close to, a choking condition. This is because the ram rise in the air intake factors-up the nozzle pressure ratio. At static (e.g. SLS) conditions there is no ram rise, so the nozzle tends to operate <b>unchoked</b> (LHS of plot).|$|E
50|$|Cleaning is {{accomplished}} by inserting a choke plug {{into one of the}} lines leading to the transfer pump, and sucking large volumes of water from a wash-water supply tank into the choked line. This choke plug is mounted on a rod, and is inserted into the line before cleaning, and pulled out for regular milking. Due to the choke, the water, which is sufficient to completely fill the pipe, is sucked up one side of the pipeline, over the high point joining the two pipeline sections, and then flows back to the receiver bowl and transfer pump through the <b>unchoked</b> line. The transfer pump is then used to move the cleaning solution from the receiver bowl back to the wash-water supply tank to restart the process.|$|E
40|$|In general, {{jet engines}} operate with choked nozzle during take-off, climb and cruise, whereas <b>unchoking</b> occurs while landing and taxiing (when engine is not running at full power). Appropriate thrust in an {{aircraft}} in {{all stages of}} the flight, i. e., take-off, climb, cruise, descent and landing is achieved through variation in the nozzle exit area. This paper describes the effect on thrust and IR radiance of a turbojet engine due to variation in the exit area of a just choked converging nozzle (M-e = 1). The variations in the nozzle exit area result in either choking or <b>unchoking</b> of a just choked converging nozzle. Results for the change in nozzle exit area are analyzed in terms of thrust, mass flow rate and specific fuel consumption. The solid angle subtended (Omega) by the exhaust system is estimated analytically, for the variation in nozzle exit area (A(ne)), as it affects the visibility of the hot engine parts from the rear aspect. For constant design point thrust, IR radiance is studied from the boresight (phi = theta degrees, directly from the rear side) for various percentage changes in nozzle exit area (%Delta A(ne)), in the 1. 9 - 2. 9 mu m and 3 - 5 ism bands. (C) 2015 Elsevier B. V. All rights reserved...|$|R
40|$|We {{study the}} problem of {{neighbor}} selection in BitTorrent-like peerto-peer (P 2 P) systems, and propose a “soft-worst-neighbor-choking” algorithm that is provably optimal. In practical P 2 P systems, peers often keep a large set of potential neighbors, but only simultaneously upload/download to/from a small subset of them, which we call active neighbors, to avoid excessive connection overhead. A natural question to ask is: which active neighbor set should each peer choose to maximize the global system performance? The combinatorial {{nature of the problem}} makes it especially challenging. In this paper, we formulate an optimization problem and derive a distributed algorithm. We remark that our solution has a similar favor compared to the worst neighbor choking and optimistic <b>unchoking</b> neighbor selection algorithms that are implemented by BitTorrent. However, it encourages peers to stick to better performing neighbors for longer time and is provably globally optimal. Our proposed solution is easy to implement: each peer periodically waits for a constant period of time that depends {{on the size of the}} potential neighbor set and the aggregated utility of the active neighbors, chokes (drops) one of its current active neighbors with probability proportional to an exponential weight on the utility of the corresponding link, and randomly <b>unchokes</b> (adds) a new neighbor from its potential neighbor set. Our theoretical findings provide insightful guidelines to designing practical P 2 P systems. Simulation results corroborate our proposed solution...|$|R
40|$|Many {{protocols}} for distributed and peer-to-peer {{systems have}} the feature that nodes will stop providing service for others {{once they have}} received {{a certain amount of}} service. Examples include BitTorent's <b>unchoking</b> policy, BAR Gossip's balanced exchanges, and threshold strategies in scrip systems. An attacker can exploit this by providing service in a targeted way to prevent chosen nodes from providing service. While such attacks cannot be prevented, we discuss techniques {{that can be used to}} limit the damage they do. These techniques presume that a certain number of processes will follow the recommended protocol, even if they could do better by ``gaming'' the system...|$|R
5000|$|The taxonomic {{dichotomy}} {{is especially}} interesting {{in this group}} of symbionts, because vegetative propagation of fungal mycelium occurs by vertical transmission, i.e., fungal growth into newly developing host tillers (=individual grass plants). Importantly, all Neotyphodium and some Epichloë species infect new grass plants solely by growing into the seeds of their grass hosts, and infecting the growing seedling. Manifestation of the sexual state — which only occurs in Epichloë species — causes [...] "choke disease", {{a condition in which}} grass inflorescences are engulfed by rapid fungal outgrowth forming a stroma. The fungal stroma suppresses host seed production and culminates in the ejection of meiospores (ascospores) that mediate horizontal (contagious) transmission of the fungus to new plants. So, the two transmission modes exclude each other, although in many grass-Epichloë symbiota the fungus actually displays both transmission modes simultaneously, by choking some tillers and transmitting in seeds produced by <b>unchoked</b> tillers.|$|E
5000|$|Some high-bypass-ratio civil turbofans use an {{extremely}} low area ratio (less than 1.01), convergent-divergent, nozzle on the bypass (or mixed exhaust) stream, {{to control the}} fan working line. The nozzle acts {{as if it has}} variable geometry. At low flight speeds the nozzle is <b>unchoked</b> (less than a Mach number of unity), so the exhaust gas speeds up as it approaches the throat and then slows down slightly as it reaches the divergent section. Consequently, the nozzle exit area controls the fan match and, being larger than the throat, pulls the fan working line slightly away from surge. At higher flight speeds, the ram rise in the intake increases nozzle pressure ratio {{to the point where the}} throat becomes choked (M=1.0). Under these circumstances, the throat area dictates the fan match and, being smaller than the exit, pushes the fan working line slightly towards surge. This is not a problem, since fan surge margin is much better at high flight speeds.|$|E
40|$|Computer {{programs}} and resulting tabulations are presented of pipeline length-to-diameter ratios {{as a function}} of Mach number and pressure ratios for compressible flow. The tabulations are applicable to air, nitrogen, oxygen, and hydrogen for compressible isothermal flow with friction and compressible adiabatic flow with friction. Also included are equations for the determination of weight flow. The tabulations presented cover a wider range of Mach numbers for choked, adiabatic flow than available from commonly used engineering literature. Additional information presented, but which is not available from this literature, is <b>unchoked,</b> adiabatic flow over a wide range of Mach numbers, and choked and <b>unchoked,</b> isothermal flow {{for a wide range of}} Mach numbers...|$|E
40|$|Current {{peer-to-peer}} {{systems are}} network-agnostic, often generating {{large volumes of}} unnecessary inter-ISP traffic. Although recent work has shown the benefits of ISP-awareness on bulk transfer applications, no {{studies have focused on}} optimizing P 2 P live streaming systems. These are harder to design, as data must be diffused to all receivers within short delays. We have designed a novel scheme for ISP-friendly meshbased live streaming. Each peer maintains two distinct sets of overlay neighbors, used respectively for local and global stream propagation. A dynamic <b>unchoke</b> mechanism minimizes inter-ISP traffic in normal operation, enabling it promptly when local diffusion is impaired, e. g., when fast local sources become suddenly unavailable. Our scheme i...|$|R
40|$|Abstract—BitTorrent is {{the most}} {{successful}} peer-to-peer system and has attracted {{a lot of attention}} from the research community. Researchers have studied a number of aspects of the system, including its scalability, performance, efficiency and fairness. However, the complexity of the system has forced most researchers to make a number of simplifying assumptions, e. g. user homogeneity, or even ignore some aspects of the protocol altogether, e. g. the Tit-for-Tat (TFT) <b>unchoking</b> scheme, {{in order to keep the}} analysis tractable. Motivated by this, in this paper we propose two analytical models that accurately predict the performance of the system without compromising on the realism of the modeling methodology. Our first model is a steady-state one, in the sense that it is valid during periods of time where the number of users remains fixed. Freed by the complications of time-dynamics, we account for all the details of the BitTorrent protocol, including TFT and optimistic <b>unchoking,</b> and predict a number of performance metrics including upload and download rates, as well as file download delays. Our second model builds upon prior work on fluid models for BitTorrent. Using our first model, we extend the fluid-based methodology to capture the transient behavior as new users join or old users leave, while fully modelling central properties of the BitTorrent system, e. g. TFT. Finally, as an example of how to use our analytical models to study variations of the basic BitTorrent scheme and make design decisions, we propose a flexible token-based scheme for BitTorrent that can be used to tradeoff between overall system performance and fairness, and evaluate the scheme’s parameters that achieve a target operational point. Index Terms—Heterogeneous P 2 P networks, BitTorrent, performance analysis, token based scheme, fairness/delay tradeoff. I...|$|R
40|$|Locality {{promotion}} in P 2 P content distribution networks {{is currently}} a major research topic. One {{of the goals of}} all discussed approaches is to reduce the interdomain traffic that causes high costs for ISPs. However, the focus of the work in this field is generally on the type of locality information that is provided to the overlay and on the entities that exchange this information. An aspect that is generally neglected or only shortly addressed is how this information is used by the peers. In this paper, we consider the predominant approach of Biased Neighbor Selection and compare it with Biased <b>Unchoking,</b> an alternative locality aware peer selection strategy we propose in this paper. We show that both mechanisms complement each other for the BitTorrent file sharing application and achieve the best performance when combined. ...|$|R
40|$|An {{experimental}} {{investigation of}} flow conditioning devices used to suppress internal rig noise in high speed, high temperature experimental jet facilities is discussed. The aerodynamic and acoustic {{characteristics of a}} number of devices including pressure loss and extraneous noise generation are measured. Both aerodynamic and acoustic characteristics are strongly dependent on the porosity of the flow conditioner and the closure ratio of the duct system. For <b>unchoked</b> flow conditioners, the pressure loss follows conventional incompressible flow models. However, for choked flow conditioners, a compressible flow model where the duct and flow conditioner system is modeled as a convergent-divergent nozzle can be used to estimate pressure loss. Choked flow conditioners generate significantly more noise than <b>unchoked</b> conditioners. In addition, flow conditioners with small hole diameters or sintered metal felt material generate less self-noise noise compared to flow conditioners with larger holes...|$|E
40|$|In this paper, {{we propose}} a {{modification}} to the BitTorrent protocol {{related to its}} peer unchoking policy. In particular, we apply a novel optimistic unchoking approach that improves the quality of inter-connections amongst peers, i. e., increases the number of directly-connected and interested-in-cooperation peers without penalizing underutilized and/or idle peers. Our optimistic unchoking policy takes into consideration the number of clients currently interested in downloading from a peer {{that is to be}} <b>unchoked.</b> Our conjecture is that peers having few clients interested in downloading data from them, should be favored with optimistic unchoke intervals. This enables the peers in question to receive data since they become <b>unchoked</b> faster and in turn, they will trigger the interest of additional clients. In contrast, peers with plenty of "interested" clients should enjoy a lower priority to be selected as planned optimistic <b>unchoked,</b> since these peers likely have enough data to forward; nevertheless, they receive enough data due to tit-for-tat peer reciprocation and are not in need of optimistic unchoking slots. Armed with this realization, we establish an analytical model and prove a significant performance improvement under our modified BitTorrent protocol. Experimental results, also, indicate that our approach significantly outperforms the existing optimistic unchoking policy in three important aspects: first, there is a higher number of interested-in-cooperation and directly-connected peers. Second, since leechers now act as data intermediaries, the load on seeders eases up considerably. Last, a shorter bootstrapping period for fresh peers is achieved. Hence, we claim that our approach helps implement an enhanced BitTorrent protocol and we name it "EnhancedBit...|$|E
40|$|A set of computer-program {{routines}} {{has been}} developed for calculating pressure drops and recoveries of flows through standard venturis, nozzle venturis, and orifices. Relative to prior methods used for such calculations, the method implemented by these routines offers greater accuracy because it involves fewer simplifying assumptions and is more generally applicable to wide ranges of flow conditions. These routines are based on conservation of momentum and energy equations for real nonideal fluids, the properties of which are calculated by curve-fitting subroutines based on empirical properties data. These routines are capable of representing cavitating, choked, non-cavitating, and <b>unchoked</b> flow conditions for liquids, gases, and supercritical fluids. For a computation of flow through a given venturi, nozzle venturi, or orifice, the routines determine which flow condition occurs: First, they calculate a throat pressure {{under the assumption that}} the flow is <b>unchoked</b> or non-cavitating, then they calculate the throat pressure under the assumption that the flow is choked or cavitating. The assumption that yields the higher throat pressure is selected as the correct one...|$|E
40|$|A user-oriented {{computer}} program, CAS 22, was developed that is applicable to aerodynamic analysis and transonic shock-free redesign of existing two-dimensional cascades of airfoils. This FORTRAN {{program can be}} used: (1) as an analysis code for full-potential, transonic, shocked or shock-free cascade flows; (2) as a design code for shock-free cascades that uses Sobieczky's fictitious-gas concept; and (3) as a shock-free design code followed automatically by the analysis in order {{to confirm that the}} newly obtained cascade shape provides for an entirely shock-free transonic flow field. A four-level boundary-conforming grid of an O type is generated. The shock-free design is performed by implementing Sobieczky's fictitious-gas concept of elliptic continuation from subsonic into supersonic flow domains. Recomputation inside each supersonic zone is performed by the method of characteristics in the rheograph plane by using isentropic gas relations. Besides converting existing cascade shapes with multiple shocked supersonic regions into shock-free cascades, CAS 22 can also <b>unchoke</b> previously choked cascades and make them shock free...|$|R
40|$|BitTorrent is {{a popular}} {{peer-to-peer}} file sharing protocol. From a user’s perspective, {{it is important that}} a BitTorrent client downloads the files as fast as possible. The socially enhanced BitTorrent client called Tribler – from the Delft University of Technology and the Vrije Universiteit – was presumed to be lacking in speed. This presumption started this thesis’ research project. The research focused on two questions. How poor is Tribler’s download performance and what determines the performance of a BitTorrent client in general? To understand the problem, we need to be aware that the limited available upload capacity of the peers in the swarm is a speed bottleneck and that one own’s upload capacity is a valuable, but limited currency that can be exchanged for speed from others. However, it is not known which behaviour is best. In order to solve this mystery, we have to compare different behaviours through measurement. Important aspects to measure include: 9 ̆ 5 Peer discovery and try out, measured by connection attempts and optimistic <b>unchokes.</b> 9 ̆ 5 Implementation of the tit-for-tat algorihtm, measured by chokes and <b>unchokes.</b> To measure and analyse these aspects, two approaches were taken. Our first de- sign involved modifying existing BitTorrent clients to log internal events, but its applicability was limited to open source clients. As a result, we came with a design that analysed network traffic and was therefore applicable to all clients. However, a wrongly taken design decision limited its analysis power. The knowledge gained from our analysis is that the initial phase and the end phase of a download are important. For the initial phase, a good discovery of peers required. For the end phase, a different piece selection algorithm is required. There are also some questions left that need to be answered and work to be done. Questions left are: 9 ̆ 5 Do different peer discovery algorithms benefit in different situations? 9 ̆ 5 Does the Mainline BitTorrent client benefit from its new DNA service or is it malware? Future work involves improving our measuring tool and answering these questions. Parallel and Distributed SystemsElectrical Engineering, Mathematics and Computer Scienc...|$|R
40|$|Abstract: Current {{peer-to-peer}} {{systems are}} network-agnostic, often generating {{large volumes of}} unnecessary inter-ISP traffic. Although recent work has shown the benefits of ISP-awareness on bulk transfer applications, no {{studies have focused on}} optimizing P 2 P live streaming systems. These are harder to design, as data must be diffused to all receivers within short delays. In this paper we propose a novel scheme for ISP-friendly mesh-based live streaming. Each peer maintains two distinct sets of overlay neighbors, used respectively for local and global stream propagation. A dynamic <b>unchoke</b> mechanism minimizes inter-ISP traffic in normal operation, enabling it promptly when local diffusion is impaired, e. g., when fast local sources become suddenly unavailable. Our scheme is independent of the chunk scheduling algorithm, and thus can be applied {{to a wide range of}} existing systems. We have integrated our ISP-friendly scheme to our P 2 P live streaming prototype, and evaluated its performance through emulation and Planetlab experiments. Our results show that our scheme adapts quickly to churn and network partitions, and achieves up to a ten-fold reduction in transit traffi...|$|R
