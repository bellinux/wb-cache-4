101|10000|Public
2500|$|Direct-field {{acoustic}} testing, or DFAT, is {{a technique}} used for acoustic testing of aerospace structures by subjecting them to sound waves created by an array of acoustic drivers. The method uses electro-dynamic acoustic speakers, arranged around the test article to provide a uniform, well-controlled, direct sound field at {{the surface of the}} <b>unit</b> <b>under</b> <b>test.</b> The system employs high capability acoustic drivers, powerful audio amplifiers, a narrow-band multiple-input-multiple-output (MIMO) controller and precision laboratory microphones to produce an acoustic environment that can simulate a helicopter, aircraft, jet engine or launch vehicle sound pressure field. A high level system is capable of overall sound pressure levels in the 125â€“147dB for more than one minute over a frequency range from 25Hz to 10kHz.|$|E
5000|$|D/UUT: Device Under Test or <b>Unit</b> <b>Under</b> <b>Test</b> - The object {{undergoing}} {{the test}} ...|$|E
5000|$|Contact Test (To {{verify the}} test system is {{connected}} to the <b>Unit</b> <b>Under</b> <b>Test</b> (UUT) ...|$|E
40|$|Abstract. In the {{literature}} of life-testing, general progressive censoring has been studied extensively. But, all {{the results have been}} developed under the key assumption that the <b>units</b> <b>under</b> <b>test</b> are independently distributed. In this paper, we study general progressively Type-II cen-sored order statistics arising from identical <b>units</b> <b>under</b> <b>test</b> which are jointly distributed according to an Archimedean copula with completely monotone generator (GPCOSARCM-II). Density, distribution and joint density functions of GPCOSARCM-II are all derived. Finally, some ex-amples of GPCOSARCM-II are also provided...|$|R
40|$|Understanding and {{maintaining}} complex software systems {{is a difficult}} task. In principle, tests {{can be a good}} source of information about how the system works. Unfortunately, tests are frequently unstructured and disconnected from each other and from their <b>units</b> <b>under</b> <b>test.</b> We propose a new approach to organizing unit tests in which tests produce examples of their <b>units</b> <b>under</b> <b>tests</b> which also can be reused for composing higher-level tests. The approach is based on the Eg meta-model, which classifies tests according to their granularity and their goals. We have developed the EgBrowser, an experimental tool for specifying tests that conform to the Eg metamodel while keeping track of the connection between tests themselves and their <b>units</b> <b>under</b> <b>test.</b> Initial usability studies suggest that the approach is both easy to learn and more efficient than the programmatic approach to developing tests. ...|$|R
50|$|An {{anechoic}} chamber {{must therefore be}} large to accommodate those absorbers and isolation schemes, but still allow for space for experimental apparatus and <b>units</b> <b>under</b> <b>test.</b>|$|R
5000|$|Setup: Put the <b>Unit</b> <b>Under</b> <b>Test</b> (UUT) or {{the overall}} test {{system in the}} state needed to run the test.|$|E
50|$|Electric motor/generator dynamometers are a {{specialized}} type of adjustable-speed drive. The absorption/driver unit {{can be either}} an alternating current (AC) motor or a direct current (DC) motor. Either an AC motor or a DC motor can operate as a generator that {{is driven by the}} <b>unit</b> <b>under</b> <b>test</b> or a motor that drives the <b>unit</b> <b>under</b> <b>test.</b> When equipped with appropriate control units, electric motor/generator dynamometers can be configured as universal dynamometers. The control unit for an AC motor is a variable-frequency drive, while the control unit for a DC motor is a DC drive. In both cases, regenerative control units can transfer power from the <b>unit</b> <b>under</b> <b>test</b> to the electric utility. Where permitted, the operator of the dynamometer can receive payment (or credit) from the utility for the returned power via net metering.|$|E
50|$|The ATLAS {{language}} is oriented toward the <b>Unit</b> <b>Under</b> <b>Test</b> and {{is independent of}} the test equipment used. This allows interchangeability of test procedures developed by different organizations, and thus reduces costly duplication of test programming effort.|$|E
40|$|In {{this article}} {{proposed}} {{to use a}} modified neural network Fuzzy-ART for classification of thetechnical condition of composite materials. This neural network {{is used as a}} part of nondestructivetesting system to perform diagnosis of composite materials and provides cluster analysis andclassification of <b>units</b> <b>under</b> <b>test.</b> The advantage of the described neural network and the system ingeneral is its flexible architecture, high performance and high reliability of data processin...|$|R
40|$|One of {{the oldest}} {{techniques}} to explain abstract concepts is to provide concrete examples. By explaining an abstract concept with a concrete example people {{make sure that the}} concept is understood and remembered. Examples in software can be used both to test the software and to illustrate its functionality. Object-oriented programs are built around the concepts of classes, methods and variables, where methods are the atoms of the functionality. But the meta-models of object-oriented languages do not allow developers to associate runnable and composable examples with these concepts and particularly not with methods. Unit tests on the other hand, assure the quality of the <b>units</b> <b>under</b> <b>test</b> and document them. Not being integrated into the language, unit tests are not linked explicitly to their <b>units</b> <b>under</b> <b>test</b> which makes it unnecessarily difficult to use them for documenting, typing and debugging software. In addition they are not composable making it hard to develop higher level test scenarios in parallel with higher level objects. In this thesis we analyze unit tests to learn about implicit dependencies among tests and from tests to the methods <b>under</b> <b>test.</b> We develop a technique to partially orde...|$|R
40|$|In Extreme Programming, {{unit testing}} is an {{integral}} activity of everyday software development. For isolating units in the tests, Mock Objects are often used to simulate collabo-rators of the <b>units</b> <b>under</b> <b>test.</b> However, writing and main-taining Mock Objects may become a tedious task. This paper presents the Java library EasyMock that dynamically generates Mock Objects for interfaces. This moves the specification of the Mock Objects into the test methods, avoids implementation mistakes, and eases refactoring...|$|R
50|$|The {{purpose of}} ATML {{is to support}} test programs, test asset, and <b>unit</b> <b>under</b> <b>test</b> (UUT) {{interoperability}} within an automatic test environment. ATML accomplishes this through a standard medium for exchanging UUT, test, anddiagnostic information between the various components of the test system.|$|E
50|$|An {{assertion}} is {{a function}} or macro that verifies the behavior (or the state) of the <b>unit</b> <b>under</b> <b>test.</b> Usually an assertion expresses a logical condition that is true for results expected in a correctly running system under test (SUT).Failure of an assertion typically throws an exception, aborting {{the execution of the}} current test.|$|E
50|$|A device {{under test}} (DUT), also known as {{equipment}} under test (EUT) and <b>unit</b> <b>under</b> <b>test</b> (UUT), is a manufactured product undergoing testing, either at first manufacture or later during its life cycle as part of ongoing functional testing and calibration checks. This can include a test after repair to establish that the product is performing {{in accordance with the}} original product specification.|$|E
40|$|State Machines (ASMs) {{for testing}} purposes. We define for ASM {{specifications}} {{a set of}} adequacy criteria measuring the coverage achieved by a test suite, and determining whether sufficient testing has been performed. We introduce a method to automatically generate from ASM specifications test sequences which accomplish a desired coverage. This method exploits the counter example generation of the model checker SMV. We use ASMs as test oracles to predict the expected outputs of <b>units</b> <b>under</b> <b>test...</b>|$|R
40|$|The next {{generation}} space suit requires additional capabilities for controlling and adjusting internal pressure {{compared to that}} of historical designs. Next generation suit pressures will range from slight pressure, for astronaut prebreathe comfort, to hyperbaric pressure levels for emergency medical treatment of decompression sickness. In order to test these regulators through-out their development life cycle, novel automated test rigs are being developed. This paper addresses the design philosophy, performance requirements, physical implementation, and test results with various <b>units</b> <b>under</b> <b>test...</b>|$|R
40|$|This paper tackles {{some aspects}} {{concerning}} {{the exploitation of}} Abstract State Machines (ASMs) for testing purposes. We define for ASM specifications a set of adequacy criteria measuring the coverage achieved by a test suite, and determining whether sufficient testing has been performed. We introduce a method to automatically generate from ASM specifications test sequences which accomplish a desired coverage. This method exploits the counter example generation of the model checker SMV. We use ASMs as test oracles to predict the expected outputs of <b>units</b> <b>under</b> <b>test...</b>|$|R
50|$|The {{one-dimensional}} optical {{transfer function}} can be calculated as the discrete Fourier transform of the line spread function. This data is graphed against the spatial frequency data. In this case, a sixth order polynomial is fitted to the MTF vs. spatial frequency curve to show the trend. The 50% cutoff frequency is determined to yield the corresponding spatial frequency. Thus, the approximate position of best focus of the <b>unit</b> <b>under</b> <b>test</b> is determined from this data.|$|E
5000|$|IPD (Industrial Products Division) {{manufactured}} {{automatic test}} equipment, (Computer Automation had designed an ATE to production test its own product in-house. CA decided {{this was a}} marketable product which was dubbed [...] "Capable"). The first Capable testers used an Alpha 16, later models used the LSI-2. These were functional ATE which ran a program against the UUT (<b>Unit</b> <b>Under</b> <b>Test)</b> to exercise all logic functions. A later development was the Marathon in-circuit tester, which as the name suggests measured viability of components in-circuit.|$|E
5000|$|Automatic test {{equipment}} or automated {{test equipment}} (ATE) is any apparatus that performs tests on a device, {{known as the}} device under test (DUT), equipment under test (EUT) or <b>unit</b> <b>under</b> <b>test</b> (UUT), using automation to quickly perform measurements and evaluate the test results. An ATE can be a simple computer-controlled digital multimeter, or a complicated system containing dozens of complex test instruments (real or simulated electronic test equipment) capable of automatically testing and diagnosing faults in sophisticated electronic packaged parts or on wafer testing, including system on chips and integrated circuits.|$|E
40|$|The paper {{describes}} a new automated {{approach to the}} uncertainty estimation of image-based measurements affected by motion blur. Due to the upward trend to the integration of quality assurance in production processes, image-based measurements are executed in motion or on motion-blurred <b>units</b> <b>under</b> <b>test.</b> In that context new requirements are made on the measure-ment process and the estimation of measurement un-certainty. The main {{purpose of this paper}} is to present the interrelationship between the motion speed during the measurement and the estimation value of the measurement uncertainty. Index Terms- motion-blurred images, image-based measurements, quality assurance measurement uncertainty, deconvolution algorithm 1...|$|R
50|$|It is {{generally}} possible to perform unit testing {{without the support}} of a specific framework by writing client code that exercises the <b>units</b> <b>under</b> <b>test</b> and uses assertions, exception handling, or other control flow mechanisms to signal failure. Unit testing without a framework is valuable in that there is a barrier to entry for the adoption of unit testing; having scant unit tests is hardly better than having none at all, whereas once a framework is in place, adding unit tests becomes relatively easy. In some frameworks many advanced unit test features are missing or must be hand-coded.|$|R
30|$|In our {{research}} [11], we developed an approach for unit testing of AO programs considering a method or an advice as the <b>unit</b> <b>under</b> <b>testing.</b> We proposed {{a model to}} represent the control flow of a unit and the join points that may activate an advice. Special types of nodes, the so called crosscutting nodes, {{are included in the}} CFG to represent additional information about the type of advice that affects that point, as well as the name of the aspect the advice belongs to. Control flow and data flow testing criteria are proposed to particularly require paths that include the crosscutting nodes and their incoming and outgoing edges.|$|R
50|$|In {{electronics}} and electrical engineering, the term smoke test or power on test {{is used to}} refer to the first time a circuit under development is attached to power, which will sometimes produce actual smoke if a design or wiring mistake has been made. Most often, this smoke comes from burning resistors, which produce a unique smell. For certain circuits, overheating and burning due to circuitry that is still not properly operating can be avoided by slowly turning up the input voltage to the <b>unit</b> <b>under</b> <b>test</b> by using a variable autotransformer and watching the electric current consumption.|$|E
50|$|A {{balancing}} machine is a measuring tool used for balancing rotating machine parts such as rotors for electric motors, fans, turbines, disc brakes, disc drives, propellers and pumps. The machine usually {{consists of two}} rigid pedestals, with suspension and bearings on top supporting a mounting platform. The <b>unit</b> <b>under</b> <b>test</b> is bolted to the platform and is rotated either with a belt-, air-, or end-drive. As the part is rotated, the vibration in the suspension is detected with sensors and that information is {{used to determine the}} amount of unbalance in the part. Along with phase information, the machine can determine how much and where to add or remove weights to balance the part.|$|E
50|$|Minimum resolvable {{contrast}} (MRC) is {{a subjective}} {{measure of a}} visible spectrum sensorâ€™s or camera's sensitivity and ability to resolve data. A snapshot image {{of a series of}} three bar targets of selected spatial frequencies and various contrast coatings captured by the UUT (<b>Unit</b> <b>Under</b> <b>Test)</b> are used to determine the MRC of the UUT, i.e. the visible spectrum camera or sensor. A trained observer selects the smallest target resolvable at each contrast level. Typically, specialized computer software collects the inputed data of the observer and provides a graph of contrast v.s. spatial frequency at a given luminance level. A first order polynomial is fitted to the data and an MRC curve of spatial frequency versus contrast is generated.|$|E
40|$|Integrating-sphere {{sources are}} {{convenient}} {{for use as}} near-Lambertian sources to use for calibrating <b>units</b> <b>under</b> <b>test</b> (UUT). An alternative technique is the lamp-plaque method, wherein a calibrated FEL is used to illuminate a polytetrafluoroethylene (PTFE) plaque normally, {{which in turn is}} viewed at or 45 -degrees off normal by the UUT. This begets several difficulties that should be addressed, including obliquity factors and variable distance of the FEL to points on the plaque, the angular variation of the FEL 2 Ì† 7 s intensity, extension of the FEL 2 Ì† 7 s calibration as an irradiance standard varying directions and distances, and non-ideality of the Lambertian nature of PTFE. All of these aspects will be discussed...|$|R
25|$|The SD70ACe-BB is {{a narrow}} gauge {{version of the}} SD70ACe. In October 2015, EMD started {{producing}} SD70ACE-BB locomotives for Brazilian narrow gauge railroads. Two of these <b>units</b> were seen <b>under</b> <b>testing</b> on May 18, 2015 in Vespasiano-MG.|$|R
40|$|This work is {{the result}} of a {{collaboration}} between INESC and LIP in the CMS experiment being conducted at CERN. The collaboration addresses the application of boundary scan test at system level namely the development of a VME boundary scan controller (BSC) board prototype and the corresponding software. This prototype uses the MTM bus existing in the VME 64 * backplane to apply the 1149. 1 test vectors to a system composed of nineteen boards, called here <b>units</b> <b>under</b> <b>test</b> (UUTs). A top-down approach is used to describe our work. The paper begins with some insights about the experiment being conducted at CERN, proceed with system level considerations concerning our work and with some details about the BSC board. The results obtained so far and the proposed work is reviewed in the end of this contribution. (11 refs) ...|$|R
5000|$|ATE systems {{typically}} {{interface with}} an automated placement tool, called a [...] "handler", that physically places the Device Under Test (DUT) on an Interface Test Adapter (ITA) {{so that it}} can be measured by the equipment. There may also be an Interface Test Adapter (ITA), a device just making electronic connections between the ATE and the Device Under Test (also called <b>Unit</b> <b>Under</b> <b>Test</b> or UUT), but also it might contain an additional circuitry to adapt signals between the ATE and the DUT and has physical facilities to mount the DUT. Finally, a socket is used to bridge the connection between the ITA and the DUT. A socket must survive the rigorous demands of a production floor, so they are usually replaced frequently.|$|E
5000|$|Direct-field {{acoustic}} testing, or DFAT, is {{a technique}} used for acoustic testing of aerospace structures by subjecting them to sound waves created by an array of acoustic drivers. The method uses electro-dynamic acoustic speakers, arranged around the test article to provide a uniform, well-controlled, direct sound field at {{the surface of the}} <b>unit</b> <b>under</b> <b>test.</b> The system employs high capability acoustic drivers, powerful audio amplifiers, a narrow-band multiple-input-multiple-output (MIMO) controller and precision laboratory microphones to produce an acoustic environment that can simulate a helicopter, aircraft, jet engine or launch vehicle sound pressure field. A high level system is capable of overall sound pressure levels in the 125-147 dB for more than one minute over a frequency range from 25 Hz to 10 kHz.|$|E
5000|$|LIBRARY ieee;USE ieee.std_logic_1164.ALL; [...] ENTITY bin2bcd_12bit_test_file ISEND bin2bcd_12bit_test_file; ARCHITECTURE {{behavior}} OF bin2bcd_12bit_test_file IS [...] -- Component Declaration for the <b>Unit</b> <b>Under</b> <b>Test</b> (UUT) [...] COMPONENT bin2bcd_12bit PORT( [...] binIN : IN std_logic_vector(11 downto 0); ones : OUT std_logic_vector(3 downto 0); tens : OUT std_logic_vector(3 downto 0); hundreds : OUT std_logic_vector(3 downto 0); thousands : OUT std_logic_vector(3 downto 0) [...] ); END COMPONENT; [...] -- WARNING: Please, {{notice that}} {{there is no need for}} a clock signal in the testbench, since the design is strictly -- combinational (or concurrent, in contrast to the C implementation which is sequential). -- This clock is here just for simulation; you can omit all clock references and process, and use [...] "wait for ... ns" [...] -- statements instead. --Inputs signal binIN : std_logic_vector(11 downto 0) := (others => '0'); signal clk : std_logic := '0'; -- can be omitted --Outputs signal ones : std_logic_vector(3 downto 0); signal tenths : std_logic_vector(3 downto 0); signal hunderths : std_logic_vector(3 downto 0); signal thousands : std_logic_vector(3 downto 0); -- Clock period definitions constant clk_period : time := 10 ns; -- can be omitted -- Miscellaneous signal full_number : std_logic_vector(15 downto 0);BEGIN [...] -- Instantiate the <b>Unit</b> <b>Under</b> <b>Test</b> (UUT) uut: bin2bcd_12bit PORT MAP ( [...] binIN => binIN, ones => ones, tens => tenths, hundreds => hunderths, thousands => thousands [...] ); -- Clock process definitions -- the whole process can be omitted clk_process :process begin clk <= '0'; wait for clk_period/2; clk <= '1'; wait for clk_period/2; end process; [...] -- Combine signals for full number full_number <= thousands & hunderths & tenths & ones; -- Stimulus process stim_proc: process begin [...] -- hold reset state for 100 ns. wait for 100 ns; [...] wait for clk_period*10; -- insert stimulus here [...] -- should return 4095 binIN <= X"FFF"; wait for clk_period*10; assert full_number = x"4095" [...] severity error; -- use [...] "wait for ... ns;" [...] -- should return 0 binIN <= X"000"; wait for clk_period*10; assert full_number = x"0000" [...] severity error; -- should return 2748 binIN <= X"ABC"; wait for clk_period*10; assert full_number = x"2748" [...] severity error; [...] wait; end process;END; ...|$|E
40|$|The {{increasing}} {{complexity of}} today's testing scenarios demands for an integrated, open and flexible approach {{to support the}} management of the overall test process. Furthermore systems <b>under</b> <b>test</b> become composite (e. g. including Computer Telephony Integrated platform aspects), embedded (e. g. with hardware/software codesign) and run on distributed architectures (e. g. client/server architectures). In addition, it is increasingly unrealistic to restrict the consideration of the testing activities to single units, since complex subsystems a#ect each other and require scalable, integrated test methodologies. In this paper, we present a test management layer driving the generation, execution and evaluation of system-level tests in a highly heterogeneous landscape. The management layer introduces the required flexibilization of the overall architecture of the test environment: it is a modular and open environment, so that several tools and <b>units</b> <b>under</b> <b>test</b> can be added at need. By means of a CORBA/RMI-based implementation of the external interfaces of the management layer, we are able to address and encapsulate a wide range of commercial test tools. This increases over time the reach and the capabilities of the resulting environment...|$|R
50|$|Electrically {{connecting}} the failing pin to a ground pin produced the electric current path {{shown in figure}} 2. This electrical path strongly suggests that the current is somehow flowing through all the ground nets though a conductive path located {{very close to the}} wirebond pads from the top down view of the package. Based on electrical and layout analysis of the package, it can be inferred that current is either flowing through the wirebond pads or that the wirebonds are somehow touching a conductive structure at the specified location. After obtaining similar SSM results on the two <b>units</b> <b>under</b> <b>test,</b> further destructive analysis focused around the small potential short region, and it showed that the failing pin wirebond is touching the bottom of one of the stacked dice at the specific XY position highlighted by SSM analysis. The cross section view of one of those units is shown in figure 3.|$|R
40|$|Method {{and system}} for a test process. The method may include {{performing}} tests on one or more <b>units</b> <b>under</b> <b>test</b> (UUTs). At least one test on one or more UUTs may be performed. A signal may be acquired from the UUT. A reference signal may be retrieved. The reference signal may be derived from a transmitted signal characteristic of the UUT. The signal may be analyzed {{with respect to the}} reference signal. Results, useable to characterize the one or more UUTs, from performing the at least one test on the one or more UUTs may be stored. The reference signal may be derived from an initial test and may be stored for subsequent retrieval. A respective reference signal may be retrieved for all UUTs of the one or more UUTs for a respective test. The signal may be a radio frequency signal. The UUT may be a wireless mobile device. Â  QS 2015 </p...|$|R
