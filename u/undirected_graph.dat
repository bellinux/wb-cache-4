4106|2759|Public
5|$|A {{connected}} component of an <b>undirected</b> <b>graph</b> is the subgraph {{consisting of the}} vertices and edges that {{can be reached by}} following edges from a single given starting vertex. A graph is connected if every vertex or edge is reachable from every other vertex or edge. A cycle in an <b>undirected</b> <b>graph</b> is a connected subgraph in which each vertex is incident to exactly two edges, or is a loop.|$|E
5|$|An {{orientation}} of an <b>undirected</b> <b>graph</b> G is any directed graph obtained by choosing {{one of the}} two possible orientations for each edge.|$|E
5|$|This is {{also known}} as the {{dichotomy}} theorem for (<b>undirected)</b> <b>graph</b> homomorphisms, since it divides H-coloring problems into NP-complete or P problems, with no intermediate cases.|$|E
40|$|Abstract — Computing {{combined}} circuits and shortest cyclic paths {{between two}} given nodes in <b>undirected</b> <b>graphs</b> {{is a fundamental}} operation over graphs. While a number of techniques exist for answering computing circuits and approximating node distances efficiently in directed graphs, but the actual circuit calculations, their generations and shortest cyclic paths in <b>undirected</b> <b>graphs</b> are often neglected. However, it is often essential to find out all combined circuits and shortest cyclic paths between two given nodes in an <b>undirected</b> <b>graphs.</b> In this paper, we have addressed this problem and presented an optimistic algorithm that not only supports calculation of circuits but also generates combined circuits and computes corresponding shortest cyclic paths in <b>undirected</b> <b>graphs.</b> This algorithm is also applicable to directed graphs as well...|$|R
5000|$|... #Subtitle level 2: Camerini's {{algorithm}} for <b>undirected</b> <b>graphs</b> ...|$|R
5000|$|Tools for {{visualizing}} and analysing {{directed and}} <b>undirected</b> <b>graphs</b> ...|$|R
5|$|In the clique {{decision}} problem, {{the input}} is an <b>undirected</b> <b>graph</b> {{and a number}} , and the output is a Boolean value: true if the graph contains a -clique, and false otherwise.|$|E
5|$|In {{the maximum}} clique problem, the input is an <b>undirected</b> <b>graph,</b> and the output is a maximum clique in the graph. If there are {{multiple}} maximum cliques, one of them may be chosen arbitrarily.|$|E
5|$|The {{corresponding}} {{concept for}} undirected graphs is a forest, an <b>undirected</b> <b>graph</b> without cycles. Choosing an orientation for a forest produces {{a special kind}} of directed acyclic graph called a polytree. However there are many other kinds of directed acyclic graph that are not formed by orienting the edges of an undirected acyclic graph. Moreover, every <b>undirected</b> <b>graph</b> has an acyclic orientation, an assignment of a direction for its edges that makes it into a directed acyclic graph. To emphasize that DAGs are {{not the same thing as}} directed versions of undirected acyclic graphs, some authors call them acyclic directed graphs or acyclic digraphs.|$|E
50|$|He {{is known}} for characterizing the degree {{sequences}} of <b>undirected</b> <b>graphs.</b>|$|R
50|$|Mean first {{passage time}} is not symmetric, even for <b>undirected</b> <b>graphs.</b>|$|R
5000|$|Do two <b>undirected</b> <b>graphs</b> {{have the}} same number of {{connected}} components? ...|$|R
5|$|In an <b>undirected</b> <b>graph,</b> a widest path may {{be found}} as the path between the two {{vertices}} in the maximum spanning tree of the graph, and a minimax path {{may be found}} as the path between the two vertices in the minimum spanning tree.|$|E
5|$|In the maximal clique listing problem, {{the input}} is an <b>undirected</b> <b>graph,</b> and the output {{is a list}} of all its maximal cliques. The maximum clique problem may be solved using as a {{subroutine}} an algorithm for the maximal clique listing problem, because the maximum clique must be included among all the maximal cliques.|$|E
5|$|In the {{weighted}} maximum clique problem, the input is an <b>undirected</b> <b>graph</b> with weights on its vertices (or, less frequently, edges) and the output is a clique with maximum total weight. The maximum clique {{problem is the}} special case in which all weights are equal. As well as the problem of optimizing the sum of weights, other more complicated bicriterion optimization problems have also been studied.|$|E
50|$|The {{number of}} labeled n-vertex simple <b>undirected</b> <b>graphs</b> is 2n(n &minus; 1)/2.|$|R
5000|$|Modular decomposition, for {{a proper}} {{generalization}} of connected components on <b>undirected</b> <b>graphs</b> ...|$|R
5000|$|Similar to <b>undirected</b> <b>graphs,</b> DOT can {{describe}} directed graphs, such as flowcharts and dependency trees. The syntax {{is the same}} as for <b>undirected</b> <b>graphs,</b> except the digraph keyword is used to begin the graph, and an arrow (->) is used to show relationships between nodes. digraph graphname { a -> b -> c; b -> d; } ...|$|R
5|$|A {{variant of}} the minimax path problem has also been {{considered}} for sets of points in the Euclidean plane. As in the <b>undirected</b> <b>graph</b> problem, this Euclidean minimax path problem can be solved efficiently by finding a Euclidean minimum spanning tree: every path in the tree is a minimax path. However, the problem becomes more complicated when a path is desired that not only minimizes the hop length but also, among paths with the same hop length, minimizes or approximately minimizes the total length of the path. The solution can be approximated using geometric spanners.|$|E
5|$|In {{directed}} planar graphs, simple directed cycles are dual to directed cuts (partitions of the vertices {{into two}} subsets such that all edges go in one direction, from one subset to the other). Strongly oriented planar graphs (graphs whose underlying <b>undirected</b> <b>graph</b> is connected, {{and in which}} every edge belongs to a cycle) are dual to directed acyclic graphs in which no edge belongs to a cycle. To put this another way, the strong orientations of a connected planar graph (assignments of directions {{to the edges of}} the graph that result in a strongly connected graph) are dual to acyclic orientations (assignments of directions that produce a directed acyclic graph).|$|E
5|$|If all edge weights of an <b>undirected</b> <b>graph</b> are positive, {{then the}} minimax {{distances}} between pairs of points (the maximum edge weights of minimax paths) form an ultrametric; conversely every finite ultrametric space comes from minimax distances in this way. A data structure constructed from the {{minimum spanning tree}} allows the minimax distance between any pair of vertices to be queried in constant time per query, using lowest common ancestor queries in a Cartesian tree. The root of the Cartesian tree represents the heaviest minimum spanning tree edge, {{and the children of}} the root are Cartesian trees recursively constructed from the subtrees of the minimum spanning tree formed by removing the heaviest edge. The leaves of the Cartesian tree represent the vertices of the input graph, and the minimax distance between two vertices equals the weight of the Cartesian tree node that is their lowest common ancestor. Once the minimum spanning tree edges have been sorted, this Cartesian tree can be constructed in linear time.|$|E
5000|$|For simple <b>undirected</b> <b>graphs,</b> {{the first}} order theory of graphs {{includes}} the axioms ...|$|R
5000|$|The number Cn of {{connected}} labeled n-vertex <b>undirected</b> <b>graphs</b> {{satisfies the}} recurrence relation ...|$|R
5000|$|... sfdp : a {{layout engine}} for <b>undirected</b> <b>graphs</b> that scales to very large graphs.|$|R
5|$|At an intersection, the {{incoming}} and outgoing lanes of traffic (including {{the ends of}} pedestrian crosswalks and bicycle lanes as well as lanes for motor vehicles) may be represented as the vertices of a graph, placed on the spine of a book embedding in their clockwise order around the junction. The paths through the intersection taken by traffic to get from an incoming lane to an outgoing lane may be represented as the edges of an <b>undirected</b> <b>graph.</b> For instance, this graph might have an edge from an incoming to an outgoing lane of traffic that both {{belong to the same}} segment of road, representing a U-turn from that segment back to that segment, only if U-turns are allowed at the junction. For a given subset of these edges, the subset represents a collection of paths that can all be traversed without interference from each other if and only if the subset does not include any pair of edges that would cross if the two edges were placed in a single page of a book embedding. Thus, a book embedding of this graph describes a partition of the paths into non-interfering subsets, and the book thickness of this graph (with its fixed embedding on the spine) gives the minimum number of distinct phases needed for a signalling schedule that includes all possible traffic paths through the junction.|$|E
25|$|An {{asymmetric}} graph is an <b>undirected</b> <b>graph</b> {{without any}} nontrivial automorphisms.|$|E
25|$|According to the {{handshaking}} lemma, every {{connected component}} of an <b>undirected</b> <b>graph</b> has an even number of odd-degree vertices.|$|E
500|$|Pavol Hell and Jaroslav Nešetřil proved that, for <b>undirected</b> <b>graphs,</b> {{no other}} case is tractable: ...|$|R
2500|$|PageRank computation. They {{also present}} a faster {{algorithm}} that takes [...] rounds in <b>undirected</b> <b>graphs.</b>|$|R
5000|$|Dangalchev (2006), {{in a work}} {{on network}} {{vulnerability}} proposes for <b>undirected</b> <b>graphs</b> a different definition: ...|$|R
25|$|Squaregraph, {{a kind of}} <b>undirected</b> <b>graph</b> {{including}} as {{a special}} case the graphs of vertices and edges of polyominoes.|$|E
25|$|A multigraph, {{as opposed}} to a simple graph, is an <b>undirected</b> <b>graph</b> in which {{multiple}} edges (and sometimes loops) are allowed.|$|E
25|$|A vertex-transitive graph is an <b>undirected</b> <b>graph</b> {{in which}} every vertex may be mapped by an {{automorphism}} into any other vertex.|$|E
25|$|In {{computational}} biology, power graph analysis introduces power graphs as {{an alternative}} representation of <b>undirected</b> <b>graphs.</b>|$|R
30|$|Finally, we {{introduce}} {{a class of}} <b>undirected</b> <b>graphs</b> that will be often mentioned in this manuscript.|$|R
50|$|Block graphs may be {{characterized}} as the intersection graphs of the blocks of arbitrary <b>undirected</b> <b>graphs.</b>|$|R
