14|1|Public
40|$|This paper briefly {{describes}} three <b>user-oriented</b> <b>computer</b> codes {{developed at}} the Ohio State University ElectroScience Laboratory: namely, the On-Aircraft Antenna Code, the Basic Scattering Code, and the Reflector Antenna Code. Each code uses the Geometrical Theory of Diffraction (GTD). An example is {{used to describe the}} basic GTD approach for all three codes. A brief description is given for each code which includes sample results compared to measurements...|$|E
40|$|The {{objectives}} were {{to provide a}} better statistical basis for enrollment projections, to attempt to model the school district's enrollment, and to produce a single estimate of enrollment for each grade, grade group, and ethnic group, and for the total by year. Efforts were also made to provide error estimates for the projections, to design a simple, <b>user-oriented</b> <b>computer</b> program for use by school district administrators, {{and to work with}} real data from local school districts and aid them in making projections on an experimental basis. The study at Jet Propulsion Laboratory was concerned with projection methodology and production of a generally usable computer program...|$|E
40|$|It {{is pointed}} out that ice {{accretion}} on aircraft produces an adverse effect on aircraft performance in terms of decreased lift and increased drag of the lifting surface. Ice {{on the surface of}} a propeller may also cause a decrease in thrust, increase in the required power, and a resultant decrease in propeller efficiency. During the past years, a number of {{attempts have been made to}} analyze the effects of ice accretion on both fixed wings and propellers. The present investigation is concerned with the development of a single <b>user-oriented</b> <b>computer</b> code which makes it possible to calculate propeller performance degradation due to ice accretion for specified flight conditions, atmospheric conditions, and propeller geometry. This development is based on a combination of several of the codes and correlations considered in earlier studies...|$|E
40|$|A <b>user-oriented</b> FORTRAN 4 <b>computer</b> program, called JET 3, is presented. The JET 3 program, {{which employs}} the spatial finite-element and timewise finite-difference method, {{can be used}} to predict the large {{two-dimensional}} elastic-plastic transient Kirchhoff-type deformations of a complete or partial structural ring, with various support conditions and restraints, subjected to a variety of initial velocity distributions and externally-applied transient forcing functions. The geometric shapes of the structural ring can be circular or arbitrarily curved and with variable thickness. Strain-hardening and strain-rate effects of the material are taken into account...|$|R
40|$|In the {{experience}} of the authors, most firms do not have good procedures for estimating the net profitability of coupon promotions. Instead, managers generally examine a number of subsidiary measures such as: redemption rates, market share and the direct costs of the coupon promotion. A <b>user-oriented</b> <b>computer</b> model is presented for simulating the effect of coupon promotions on sales and calculating net profitability. The model includes the actions of the manufacturer, retailers, and consumers. It takes into account three key phenomena of consumer response: the acceleration of product category purchases, the brand loyalty of coupon redeemers, and repeat purchase effects. The model also incorporates the effects of retailer promotions that often accompany a coupon program. Data from an actual application are used to illustrate use of the model. promotions, coupons, simulation, planning...|$|E
40|$|Theoretical {{derivation}} of {{a finite}} element solution algorithm for the transient energy conservation equation in multidimensional, stationary multi-media continua with irregular solution domain closure is considered. The complete finite element matrix forms for arbitrarily irregular discretizations are established, using natural coordinate function representations. The algorithm is embodied into a <b>user-oriented</b> <b>computer</b> program (COMOC) which obtains transient temperature distributions at the node {{points of the}} finite element discretization using a highly stable explicit integration procedure with automatic error control features. The finite element algorithm is shown to posses convergence with discretization for a transient sample problem. The condensed form for the specific heat element matrix is shown to be preferable to the consistent form. Computed results for diverse problems illustrate the versatility of COMOC, and easily prepared output subroutines are shown to allow quick engineering assessment of solution behavior...|$|E
40|$|This report {{serves as}} a user's manual for the Aircraft Modeling Code or AMC. AMC is a <b>user-oriented</b> <b>computer</b> code, based on the method of moments (MM), for the {{analysis}} of the radiation and/or scattering from geometries consisting of a main body or fuselage shape with attached wings and fins. The shape of the main body is described by defining its cross section at several stations along its length. Wings, fins, rotor blades, and radiating monopoles can then be attached to the main body. Although AMC was specifically designed for aircraft or helicopter shapes, it can also be applied to missiles, ships, submarines, jet inlets, automobiles, spacecraft, etc. The problem geometry and run control parameters are specified via a two character command language input format. The input command language is described and several examples which illustrate typical code inputs and outputs are also included...|$|E
40|$|Successful {{predictions}} of the fate and transport of solutes in the subsurface {{is based on the}} availability of accurate transport parameters. Analytical solutions to the advective-dispersive solute-transport equation are useful in predicting the fate of solutes in ground water. Analytical solutions compiled from available literature are presented for one dimension solute transport in uniform ground water flow. These solutions are used for tracer test data interpretation. Tracer testing is generally regarded as the most reliable and efficient method of gathering subsurface hydrogeological information. A <b>user-oriented</b> <b>computer</b> program Mipar 2. 0 was created to for estimating solute transport parameters from observed concentrations (the inverse problem) or for predicting solute concentrations (the direct problem) using the advection-dispersion equation as the transport model. The methods used for interpretation are based on the described analytical solutions. The program usability was verified on field data and on data from literature...|$|E
40|$|A <b>user-oriented</b> <b>computer</b> program SISCAP (SIS Computer Analysis Program) for {{analyzing}} SIS mixers is described. The program allows arbitrary impedance terminations {{to be specified}} at all LO harmonics and sideband frequencies. It is therefore able to treat a much more general class of SIS mixers than the widely used three-frequency analysis, for which the harmonics {{are assumed to be}} short-circuited. An additional program, GETCHI, provides the necessary input data to program SISCAP. The SISCAP program performs a nonlinear analysis to determine the SIS junction voltage waveform produced by the local oscillator. The quantum theory of mixing is used in its most general form, treating the large signal properties of the mixer in the time domain. A small signal linear analysis is then used to find the conversion loss and port impedances. The noise analysis includes thermal noise from the termination resistances and shot noise from the periodic LO current. Quantum noise is not considered. Many aspects of the program have been adequately verified and found accurate...|$|E
40|$|A <b>user-oriented</b> <b>computer</b> program, CAS 22, was {{developed}} that is applicable to aerodynamic analysis and transonic shock-free redesign of existing two-dimensional cascades of airfoils. This FORTRAN {{program can be}} used: (1) as an analysis code for full-potential, transonic, shocked or shock-free cascade flows; (2) as a design code for shock-free cascades that uses Sobieczky's fictitious-gas concept; and (3) as a shock-free design code followed automatically by the analysis in order {{to confirm that the}} newly obtained cascade shape provides for an entirely shock-free transonic flow field. A four-level boundary-conforming grid of an O type is generated. The shock-free design is performed by implementing Sobieczky's fictitious-gas concept of elliptic continuation from subsonic into supersonic flow domains. Recomputation inside each supersonic zone is performed by the method of characteristics in the rheograph plane by using isentropic gas relations. Besides converting existing cascade shapes with multiple shocked supersonic regions into shock-free cascades, CAS 22 can also unchoke previously choked cascades and make them shock free...|$|E
40|$|Abstract: Computer Based Learning (CBL) is most {{effective}} when packages are designed to accommodate the needs and aptitudes of the learners {{as well as the}} goals of the teaching programme. However, design is frequently constrained by cost and the limitations of the implementation environment. A <b>user-oriented</b> <b>computer</b> interface is crucial to a successful CBL program. The interface must be easy to learn and to use, yet it must provide enough variety of task to stimulate the student. In addition, a CBL package can only be truly effective if all exercises can be assessed by the computer to provide learners with immediate feedback about their achievement. Instruction, exercises, evaluation and feedback must be integrated into a single coherent system. Ideally, the system should also provide different learning pathways and instruction sequences for students with different levels of ability. The difficulties of providing such packages are frequently exacerbated because the law teacher is not a computer specialist. What is needed is a mark-up system, or system of templates, so that learning programs designed by a lawyer can be automatically mapped into a hypertext package. This paper discusses the issues involved and describes a prototype mark-up and mapping system...|$|E
40|$|All {{important}} calender {{systems are}} based upon either the solar year or the lunar year. In {{the first part of}} this paper, conformities and differences are regarded. Dating problems or questions of chronological concordance usually are solved even today by using voluminous editions in tabulated form being not free of calculating ard piinting errors which accumulate with using and reading errors. As well error-probability as access-time can be reduced by using a pocket-book large micro-computer. In this article an <b>user-oriented</b> <b>computer</b> program is described beeing capable of any mutual transfer of any date of Julian or gregorian calender, the muslim higra calender, the iraniar- sun-hig'ra calender, the byzantine world aera or the enumeration of 'juliani dies' or 'dies christiani'. Weekly days and medival 'indictiones' are calculated as well as the distance of any two dates of equal or different calender systems. The program is capable to add or subtract to any date any number of days and transform the solution-date to any other calender system. Finally, every moving festive day being dependent of Easter or Advent is automatically calculated and transfered to any calender system...|$|E
40|$|Until {{recently}} {{only the}} theoretical aspects of formulating the analysis techniques were, considered worthy topics for University research efforts. Proper {{design and implementation}} of <b>user-oriented</b> <b>computer</b> software for finite element analysis has now become recognized as {{an essential component of}} the analysis process. In this work, the theoretical formulations are again considered, however, primary emphasis has been placed on design and implementation of the computer software. The governing equations of nonlinear continuum mechanics, usually expressed in tensor form, are given in matrix notation familiar to most structural engineers. Both geometric and material nonlinearities are considered. The classical equations of the Lagrangian description are cast into the finite element method. Specific matrices are given for large deformations of a three dimensional solid to illustrate the procedure. A general purpose, user-oriented software system, FINITE, for static linear and nonlinear analysis is described. FINITE relies upon the POLO supervisor for problem-oriented-language translation, data management, and dynamic memory allocation. FINITE supports multi-level user-defined substructuring and condensation for linear and nonlinear analysis. Isolation of the element and material model libraries from the system enables rapid entry of new modeling capabilities. A number of nonlinear example analyses are presented to demonstrate features of the FINITE system. Office of Naval Research. Department of the Navy. Contract No. N 00014 - 75 -C- 0164 Project NR 064 - 18...|$|E
40|$|Approved {{for public}} release; {{distribution}} unlimited. Preface The {{primary purpose of}} this paper is to document the development of an interactive linear programming package; however, this thesis also provides a variety of spinoff information. It introduces a broad spectrum of advanced programming techniques to those who write computer codes. To those who construct <b>user-oriented</b> <b>computer</b> programs, it offers ideas on creating packages which are easy for others to use. Finally, to managers, this thesis serves as a guage by which to measure other development efforts. To those who are in need of an interactive, user-oriented, linear programming code, this thesis offers a package which can be readily implemented on a Control Data Corporation 6600. For those with other computer systems, this thesis offers the same package which is documented and structured so that it can be modified to meet individual needs. Prior to the completion of this thesis, there was no user-oriented linear programming routine at the Air Force Institute of Technology School of Engineering. This thesis effort has filled that void. All students and faculty members can now solve linear programming problems without knowing anything about the computer. The program was designed to provide a linear programming code which made computer operations transparent to the user. I envision that students will be exposed to LPAFIT in their introductory operations research courses and that they will apply the program to problems which they encounter in more advanced classes. This package will be utilized because it is user-oriented...|$|E
40|$|ABSIM (an {{acronym for}} ABsorption SIMulation) is a <b>user-oriented</b> <b>computer</b> code {{designed}} for the simulation of absorption systems at steady state, in both flexible and modular form. ABSIM {{makes it possible to}} investigate various cycle configurations with different working fluids, to calculate their operating parameters, to predict their performance and to compare them with each other on a uniform basis. A graphical user interface enables the user to draw the cycle diagram on the computer screen, enter data interactively, run the program and view the results either {{in the form of a}} table or superimposed on the cycle diagram. Special utilities enable the user to plot the results and produce a pressure-temperature-concentration (P-T-X) diagram of the cycle. Most absorption systems consist of a number of standard components or units (e. g., absorber, condenser) that may be combined in different forms to produce various cycles. Recognizing this, ABSIM has been structured around unit subroutines, each of which contains the governing equations for the particular unit. These subroutines are activated by a main program that interprets the input for the cycle, calls the units, and links them to each other in an order corresponding to the user's specification to form the complete system. Each unit subroutine, when activated, addresses a property database for the thermodynamic properties of the working fluids. The equations generated by the code are listed and solved simultaneously by a mathematical solver routine. The code requires relatively simple inputs, consisting of the minimum information needed to define an absorption system properly. After drawing the cycle in terms of the units recognizable by the code and showing their interconnections, the user must specify the size of each exchange unit in terms of its heat and mass transfer characteristics, the working fluid(s) at each state point; and the given operating conditions, such as temperatures, flowrates, and the like, fixed at specific state points. Based on this information, the program calculates the temperature, flowrate, concentration, pressure, and the vapor fraction at each state point in the system and the heat duty at each unit, from which the coefficient of performance may be determined. ABSIM has been used successfully to simulate a variety of single-, double- and triple-stage absorption chillers, heat pumps and heat transformers using the working fluids LiBr-H{sub 2 }O, H{sub 2 }ONH{sub 3 }, LiBr/H{sub 2 }O-NH{sub 3 }, LiBr/ZnBr{sub 2 }-CH{sub 3 }OH and more. Some of these results will be described briefly in Sect. 8. Eleven absorption fluids are presently available in the code's property database, and 12 units are available to compose practically every absorption cycle of interest. The code in its present form may be used not only to evaluate new cycles and working fluids, but also to investigate a system's behavior in off-design conditions, to analyze experimental data, and to perform preliminary design optimization. This user manual is organized into eight sections and two appendices. The remainder of this section describes the background for the ABSIM code and presents its special features in comparison with other simulation codes. Section 2 contains information on installation of the code and on basic operations for the first-time user. Section 3 describes the structure of the code, including the input, the output, and the main program. Section 4 describes the unit subroutines containing the governing equations for the 12 unit modules of the code. Section 5 reviews the property database that contains the thermodynamic properties of the working fluids. Section 6 describes the solver package and the method of solution for the equations generated by the code. Section 7 instructs the user on how to use the graphical interface. Some results of the simulation are described in Sect. 8. Appendix A is an input manual describing in detail each item in the input, its significance, and its format. Appendix B contains cycle diagrams and input and output files for several sample cycles provided with the code...|$|E

