0|3814|Public
50|$|Slab mills {{are used}} either by {{themselves}} or in gang milling operations on manual horizontal or <b>universal</b> milling <b>machines</b> to machine large broad surfaces quickly. They have been superseded {{by the use}} of cemented carbide-tipped face mills which are then used in vertical mills or <b>machining</b> <b>centres.</b>|$|R
40|$|Abstract. The main {{topic of}} the present work are <b>universal</b> <b>machines</b> for plain and prefix-free {{description}} complexity and their domains. It is characterised when an r. e. set W is the domain of a plain <b>universal</b> <b>machine</b> {{in terms of the}} description complexity of the spectrum function sW mapping each non-negative integer n to the number of all strings of length n in W; furthermore, a characterisation of the same style is given for supersets of domains of plain <b>universal</b> <b>machines.</b> Similarly the prefix-free sets which are domains or supersets of domains of prefix-free <b>universal</b> <b>machines</b> are characterised. Based on these investigations, the open question whether every domain of a plain <b>universal</b> <b>machine</b> is the superset of the domain of some prefix-free <b>universal</b> <b>machine</b> is discussed. Furthermore, it is shown that the halting probability ΩV of an r. e. prefix-free set V containing the domain of a <b>universal</b> prefix-free <b>machine</b> is Martin-Löf random, while V may not be the domain of any <b>universal</b> prefix-free <b>machine</b> itself...|$|R
5000|$|... where U denotes a {{monotone}} <b>universal</b> Turing <b>machine,</b> andq ranges {{over all}} {{programs on the}} <b>universal</b> <b>machine</b> U.|$|R
40|$|AbstractThe present work investigates several {{questions}} {{from a recent}} survey of Miller and Nies related to Chaitin's Ω numbers and their dependence on the underlying <b>universal</b> <b>machine.</b> Furthermore, the notion ΩU[X]=∑p:U(p) ↓∈X 2 -|p| is studied for various sets X and <b>universal</b> <b>machines</b> U. A <b>universal</b> <b>machine</b> U is constructed such that for all x, ΩU[{x}]= 21 -H(x). For such a <b>universal</b> <b>machine</b> there exists a co-r. e. set X such that ΩU[X] is neither left-r. e. nor Martin-Löf random. Furthermore, one of the open problems of Miller and Nies is answered completely by showing that there is a sequence Un of <b>universal</b> <b>machines</b> such that the truth-table degrees of the ΩUn form an antichain. Finally, it is shown that the members of hyperimmune-free Turing degree of a given Π 10 -class are not low for Ω unless this class contains a recursive set...|$|R
5000|$|... #Caption: Czechoslovak 7.62 mm <b>Universal</b> <b>Machine</b> gun Model 1959.|$|R
5000|$|PK <b>machine</b> gun 7.62×54mmR <b>universal</b> <b>machine</b> gun (local production) ...|$|R
40|$|The present work investigates several {{questions}} {{from a recent}} survey of Miller and Nies related to Chaitin’s Ω numbers and their dependence on the underlying <b>universal</b> <b>machine.</b> It is shown that there are <b>universal</b> <b>machines</b> for which ΩU is just x 21 −H(x). For such a <b>universal</b> <b>machine</b> there exists a co-r. e. set X such that ΩU[X] = � p:U(p) ↓∈X 2 −|p | is neither left-r. e. nor Martin-Löf random. Furthermore, one of the open problems of Miller and Nies is answered completely by showing that there is a sequence Un of <b>universal</b> <b>machines</b> such that the truth-table degrees of the ΩUn form an antichain. Finally it is shown that the members of hyperimmunefree Turing degree of a given Π 0 1 -class are not low for Ω unless this class contains a recursive set. ...|$|R
5000|$|In {{computer}} science, a <b>universal</b> Turing <b>machine</b> (UTM) is a Turing {{machine that}} can simulate an arbitrary Turing machine on arbitrary input. The <b>universal</b> <b>machine</b> essentially achieves this by reading both {{the description of}} the machine to be simulated as well as the input thereof from its own tape. Alan Turing introduced this machine in 1936-1937. This model is considered by some (for example, Martin Davis (2000)) to be the origin of the stored program computer—used by John von Neumann (1946) for the [...] "Electronic Computing Instrument" [...] that now bears von Neumann's name: the von Neumann architecture. It is also known as <b>universal</b> computing <b>machine,</b> <b>universal</b> <b>machine</b> (UM), machine U, U.|$|R
40|$|Abstract. The present work clarifies the {{relation}} between domains of <b>universal</b> <b>machines</b> and r. e. prefix-free supersets of such sets. One such characterisation can be obtained {{in terms of the}} spectrum function sW (n) mapping n to the number of all strings of length n in the set W. An r. e. prefix-free set W is the superset of the domain of a <b>universal</b> <b>machine</b> iff there are two constants c, d such that sW (n) +sW (n + 1) + [...] . + sW (n + c) is between 2 n−H(n) −d and 2 n−H(n) +d for all n; W is the domain of a <b>universal</b> <b>machine</b> iff there is a constant c such that for each n the pair of n and sW (n) +sW (n + 1) + [...] . + sW (n + c) has at least the prefix-free description complexity n. There exists a prefix-free r. e. superset W of a domain of a <b>universal</b> <b>machine</b> which is the not a domain of a universal machine; still, the halting probability ΩW of such a set W is Martin-Löf random. Furthermore, it is investigated to which extend this results can be transferred to plain <b>universal</b> <b>machines.</b> ...|$|R
5000|$|MG-M1 7.62×51mm <b>universal</b> <b>machine</b> gun (PK {{machine gun}} {{derivative}} by Arsenal JSCo) ...|$|R
40|$|We present <b>universal</b> Turing <b>{{machines}}</b> with state-symbol {{pairs of}} (5, 5), (6, 4), (9, 3) and (15, 2). These machines simulate our new variant of tag system, the bi-tag system {{and are the}} smallest known single-tape <b>universal</b> Turing <b>machines</b> with 5, 4, 3 and 2 -symbols, respectively. Our 5 -symbol machine uses {{the same number of}} instructions (22) as the smallest known <b>universal</b> Turing <b>machine</b> by Rogozhin. Also, all of the <b>universal</b> <b>machines</b> we present here simulate Turing machines in polynomial time...|$|R
30|$|The B.K.B. <b>universal</b> {{laboratory}} <b>machine</b> set {{consists of}} a two-pole uniform air gap <b>universal</b> <b>machine</b> coupled to a dc dynamometer. The nominal rating of the <b>universal</b> <b>machine</b> is 2 kVA as a three phase 50  Hz, 3000 r.p.m. The dynamometer is rated at 3  kW, 220  V, 2000 / 3000 r.p.m. The parameters of the machine are shown in Appendix (Table 7). All of the winding connections are brought out to the large terminal panel. The stator connections are also terminated at a 24 -way socket.|$|R
40|$|AbstractThe main {{topics of}} the present work are <b>universal</b> <b>machines</b> for plain and prefix-free {{description}} complexity and their domains. It is characterised when an r. e.  set W is the domain of a <b>universal</b> plain <b>machine</b> {{in terms of the}} description complexity of the spectrum function sW mapping each non-negative integer n to the number of all strings of length n in W; furthermore, a characterisation of the same style is given for supersets of domains of <b>universal</b> plain <b>machines.</b> Similarly the prefix-free sets which are domains or supersets of domains of <b>universal</b> prefix-free <b>machines</b> are characterised. Furthermore, it is shown that the halting probability ΩV of an r. e.  prefix-free set V containing the domain of a <b>universal</b> prefix-free <b>machine</b> is Martin-Löf random, while V may not be the domain of any <b>universal</b> prefix-free <b>machine</b> itself. Based on these investigations, the question whether every domain of a <b>universal</b> plain <b>machine</b> is the superset of the domain of some <b>universal</b> prefix-free <b>machine</b> is discussed. A negative answer to this question had been presented at CiE 2010 by Mikhail Andreev, Ilya Razenshteyn and Alexander Shen, while this paper was under review...|$|R
40|$|We present {{deterministic}} {{polynomial time}} <b>universal</b> Turing <b>machines</b> with statesymbol pairs of (3, 11), (5, 7), (6, 6), (7, 5) and (8, 4). These are the smallest known <b>universal</b> Turing <b>machines</b> that simulate Turing machines in polynomial time. Key words: universality, small <b>universal</b> Turing <b>machine,</b> computational complexity, polynomial time. ...|$|R
25|$|Binary lambda {{calculus}} – A version of {{lambda calculus}} with binary I/O, a binary encoding of terms, and a designated <b>universal</b> <b>machine.</b>|$|R
40|$|We {{investigate}} {{the question of}} whether one can characterize complexity classes (such as PSPACE or NEXP) in terms of efficient reducibility to the set of Kolmogorov-random strings RC. This question arises because PSPACE ⊆ P RC and NEXP ⊆ NP RC, and no larger complexity classes are known to be reducible to RC in this way. We show that this question cannot be posed without explicitly dealing with issues raised by the choice of <b>universal</b> <b>machine</b> in the definition of Kolmogorov complexity. What follows is a list of some of our main results. • Although Kummer showed that, for every <b>universal</b> <b>machine</b> U there is a time bound t such that the halting problem is disjunctive truth-table reducible to RCU in time t, there is no such time bound t that suffices for every <b>universal</b> <b>machine</b> U. We also show that, for some machines U, the disjunctive reduction can be computed in as little as doubly-exponential time. • Although for every <b>universal</b> <b>machine</b> U, there are very complex sets that are ≤P dtt-reducible to RCU, it is nonetheless true that P = REC ∩ ⋂ {A: U A ≤P dtt RCU}. (A similar statement holds for parity-truth-table reductions. ...|$|R
40|$|Abstract. We {{present a}} number of time-efficient small <b>universal</b> Turing <b>machines.</b> We show that there exists {{deterministic}} polynomial time <b>universal</b> Turing <b>machines</b> with state-symbol products of (3, 11), (5, 7), (6, 6), (7, 5) and (8, 4). These machines are the smallest known <b>universal</b> Turing <b>machines</b> that simulate TMs in polynomial time. ...|$|R
50|$|On April 19, 2002—General Motors' Controls, Robotics and Welding (CRW) {{organization}} {{donated the}} original prototype Programmable <b>Universal</b> <b>Machine</b> for Assembly (PUMA) robot to the Smithsonian.|$|R
50|$|A <b>universal</b> Turing <b>machine</b> can {{calculate}} any recursive function, decide any recursive language, and accept any recursively enumerable language. According to the Church-Turing thesis, the problems solvable by a <b>universal</b> Turing <b>machine</b> are exactly those problems solvable by an algorithm or an effective method of computation, for any reasonable definition of those terms. For these reasons, a <b>universal</b> Turing <b>machine</b> {{serves as a}} standard against which to compare computational systems, and a system that can simulate a <b>universal</b> Turing <b>machine</b> is called Turing complete.|$|R
40|$|STACS Topic Classification: Computational and {{structural}} complexity We investigate {{the question of}} whether one can characterize complexity classes in terms of efficient reducibility to the set of Kolmogorov-random strings RK. We show that this question is dependent on the choice of <b>universal</b> <b>machine</b> in the definition of Kolmogorov complexity. We show for a broad class of reductions that the sets reducible to RK have very low computational complexity. Further, we exhibit some other properties of RK that depend on the choice of <b>universal</b> <b>machine.</b> ...|$|R
40|$|This {{thesis is}} {{concerned}} with fission of <b>machining</b> <b>centres</b> for unrotary workpieces,their technical description and usage in industry. In this thesis are some advantages of different machine design concepts and some examples of <b>machining</b> <b>centres.</b> Individual machinery are described with technical characteristics. Thesis {{is concerned with}} machinig centres of current world production...|$|R
40|$|This paper {{demonstrates}} how the Cellular Neural Network <b>Universal</b> <b>Machine</b> (CNNUM) architecture {{can be applied}} to image compression. We present a spatial subband image compression method well suited to the local nature of the CNN <b>Universal</b> <b>Machine.</b> In case of lossless image compression, it outperforms the JPEG image compression standard both in terms of compression efficiency and speed. It performs especially well with radiographical images (mammograms), therefore it is suggested to use it as part of a CNN based mammogram analysis system. The paper also gives a CNN based method for the fast implementation of the MPEG and JPEG moving and still image compression standards. 1 Introduction The Cellular Neural/Nonlinear Network (CNN) paradigm [1, 2] is in an intimate relationship with image processing. The CNN <b>Universal</b> <b>Machine</b> (CNNUM) [3] architecture provides for a stored program spatiotemporal universal chip and for the innovative application of programmed biological information processi [...] ...|$|R
5000|$|Major {{plasma radius}} (<b>machine</b> <b>centre</b> to plasma centre) : 2.25 m ...|$|R
25|$|The on-line {{version of}} Turing's paper has these {{corrections}} in an addendum; however, corrections to the <b>Universal</b> <b>Machine</b> {{must be found}} in an analysis provided by Emil Post.|$|R
40|$|We {{investigate}} {{the question of}} whether one can characterize complexity classes (such as PSPACE or NEXP) in terms of efficient reducibility to the set of Kolmogorov-random strings R_C. We show that this question cannot be posed without explicitly dealing with issues raised by the choice of <b>universal</b> <b>machine</b> in the definition of Kolmogorov complexity. Among other results, we show that although for every <b>universal</b> <b>machine</b> U, there are very complex sets that are dtt -reducible to RCU,itis nonetheless true that P = REC }. We also show for [...] ...|$|R
5000|$|... 5-axis <b>machining</b> <b>centres</b> for milling {{and turning}} {{operations}} from the C series ...|$|R
5000|$|The term [...] "medium machine gun" [...] is used {{to refer}} to the {{ubiquitous}} full-power rifle-caliber machine gun designs, which are alternatively called general-purpose <b>machine</b> guns or <b>universal</b> <b>machine</b> guns.|$|R
40|$|A {{fruitful}} way {{of obtaining}} meaningful, possibly concrete, algorithmically random numbers {{is to consider}} a potential behaviour of a Turing machine and its probability {{with respect to a}} measure (or semi-measure) on the input space of binary codes. For example, Chaitin's Omega is a well known Martin-Loef random number that is obtained by considering the halting probability of a <b>universal</b> prefix-free <b>machine.</b> In the last decade, similar examples have been obtained for higher forms of randomness, i. e. randomness relative to strong oracles. In this work we obtain characterizations of the algorithmically random reals in higher randomness classes, as probabilities of certain events that can happen when an oracle <b>universal</b> <b>machine</b> runs probabilistically on a random oracle. Moreover we apply our analysis to different machine models, including oracle Turing machines, prefix-free machines, and models for infinite online computation. We find that in many cases the arithmetical complexity of a property is directly reflected in the strength of the algorithmic randomness of the probability with which it occurs, on any given <b>universal</b> <b>machine.</b> On the other hand, we point to many examples where this does not happen and the probability is a number whose algorithmic randomness is not the maximum possible (with respect to its arithmetical complexity). Finally we find that, unlike the halting probability of a <b>universal</b> <b>machine,</b> the probabilities of more complex properties like totality, cofinality, computability or completeness do not necessarily have the same Turing degree when they are defined with respect to different <b>universal</b> <b>machines...</b>|$|R
50|$|In 1975, Unimation showed {{its first}} profit. In 1978, the PUMA (Programmable <b>Universal</b> <b>Machine</b> for Assembly) robot was {{developed}} by Unimation from Vicarm (Victor Scheinman) and with support from General Motors.|$|R
5000|$|... #Caption: The {{engineer}} in the <b>machine</b> <b>centre</b> operated the throttles of the 12 engines ...|$|R
2500|$|This {{agrees with}} his {{example in the}} book (there will be a blank between each letter and number). <b>Universal</b> <b>machine</b> U uses the {{alternate}} blank squares as places to put [...] "pointers".|$|R
50|$|L. Blum, M. Shub and S. Smale, On {{a theory}} of {{computation}} and complexity over the real numbers: NP-completeness, recursive functions and <b>universal</b> <b>machines,</b> Bulletin of the American Mathematical Society, July 1989.|$|R
5000|$|This {{agrees with}} his {{example in the}} book (there will be a blank between each letter and number). <b>Universal</b> <b>machine</b> U uses the {{alternate}} blank squares as places to put [...] "pointers".|$|R
40|$|We {{show that}} given any non-computable left-c. e. real α {{there exists a}} left-c. e. real β such that α≠β+γ for all left-c. e. reals and all right-c. e. reals γ. The proof is non-uniform, the {{dichotomy}} being whether the given real α is Martin-Loef random or not. It follows that given any <b>universal</b> <b>machine</b> U, there is another <b>universal</b> <b>machine</b> V such that the halting probability of U is not a translation of the halting probability of V by a left-c. e. real. We {{do not know if}} there is a uniform proof of this fact...|$|R
5000|$|Unlike {{classical}} {{information theory}}, algorithmic information theory gives formal, rigorous definitions of a random string and a random infinite sequence {{that do not}} depend on physical or philosophical intuitions about [...] or likelihood. (The set of random strings depends on {{the choice of the}} <b>universal</b> Turing <b>machine</b> used to define Kolmogorov complexity, but any choicegives identical asymptotic results because the Kolmogorov complexity of a string is invariant up to an additive constant depending only on the choice of <b>universal</b> Turing <b>machine.</b> For this reason the set of random infinite sequences is independent of the choice of <b>universal</b> <b>machine.)</b> ...|$|R
5000|$|A binary string {{is said to}} be random if the Kolmogorov {{complexity}} of the string is at least the length of the string. A simple counting argument shows that some strings of any given length are random, and almost all strings are very close to being random. Since Kolmogorov complexity depends on a fixed choice of <b>universal</b> Turing <b>machine</b> (informally, a fixed [...] "description language" [...] in which the [...] "descriptions" [...] are given), the collection of random strings does depend on the choice of fixed <b>universal</b> <b>machine.</b> Nevertheless, the collection of random strings, as a whole, has similar properties regardless of the fixed machine, so one can (and often does) talk about the properties of random strings as a group without having to first specify a <b>universal</b> <b>machine.</b>|$|R
