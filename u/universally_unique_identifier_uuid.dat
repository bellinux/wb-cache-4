13|2348|Public
50|$|API keys can {{be based}} on the <b>universally</b> <b>unique</b> <b>identifier</b> (<b>UUID)</b> system to ensure they will be unique to each user.|$|E
50|$|A <b>universally</b> <b>unique</b> <b>identifier</b> (<b>UUID)</b> is a 128-bit number used to {{identify}} information in computer systems. The term globally unique identifier (GUID) is also used.|$|E
5000|$|Access to system information, {{such as the}} PC's <b>universally</b> <b>unique</b> <b>identifier</b> (<b>UUID),</b> {{hardware}} asset information, persistent event logs, {{and other}} information that is stored in dedicated memory (not on the hard drive) where it is accessible even if the OS is down or the PC is powered off.|$|E
5000|$|<b>Universally</b> <b>Unique</b> <b>Identifiers</b> (<b>UUID)</b> {{consist of}} a 128-bit value.|$|R
5000|$|The {{total number}} of IP {{addresses}} available under IPv6. Also the number of distinct <b>universally</b> <b>unique</b> <b>identifiers</b> (<b>UUIDs).</b>|$|R
50|$|More recently, Uniform Resource <b>Identifiers</b> (URIs) and <b>universally</b> <b>unique</b> <b>identifiers</b> (<b>UUIDs)</b> {{are usually}} used to uniquely {{identify}} objects. FPIs {{have become a}} legacy system.|$|R
50|$|The file system, chunks {{and devices}} are all {{assigned}} a <b>Universally</b> <b>Unique</b> <b>Identifier</b> (<b>UUID).</b> The header of every tree node contains both the UUID of its containing chunk and the UUID of the file system. The chunks containing the chunk tree, the root tree, device tree and extent tree are always mirrored—even on single-device volumes. These are all intended {{to improve the}} odds of successful data salvage {{in the event of}} media errors.|$|E
50|$|The Service Discovery Protocol (SDP) {{allows a}} device to {{discover}} services offered by other devices, and their associated parameters. For example, when you use a mobile phone with a Bluetooth headset, the phone uses SDP to determine which Bluetooth profiles the headset can use (Headset Profile, Hands Free Profile, Advanced Audio Distribution Profile (A2DP) etc.) and the protocol multiplexer settings needed for the phone to connect to the headset using each of them. Each service is identified by a <b>Universally</b> <b>Unique</b> <b>Identifier</b> (<b>UUID),</b> with official services (Bluetooth profiles) assigned a short form UUID (16 bits rather than the full 128).|$|E
50|$|Bluetooth Beacons {{can be used}} to send {{a packet}} of {{information}} that contains a <b>Universally</b> <b>Unique</b> <b>Identifier</b> (<b>UUID).</b> This UUID is used to trigger events specific to that beacon. In the case of Apple's iBeacon the UUID will be recognized by an app on the user device that will trigger an event. This event is fully customizable by the app developer {{but in the case of}} advertising the event might be a push notification with an ad. However, with a UID based system the users device must connect to an online server which is capable of understanding the beacons UUID. Once the UUID is sent to the server the appropriate message action is sent to a users device.|$|E
5000|$|Computing: 2128 = 340,282,366,920,938,463,463,374,607,431,768,211,456 (≈3.40282367), the {{theoretical}} {{maximum number of}} Internet addresses that can be allocated under the IPv6 addressing system, one more than the largest value that can be represented by a single-precision IEEE floating-point value, {{the total number of}} different <b>Universally</b> <b>Unique</b> <b>Identifiers</b> (<b>UUIDs)</b> that can be generated.|$|R
25|$|Every {{item in the}} Second Life {{universe}} {{is referred to as}} an asset. This includes the shapes of the 3D objects known as primitives, the digital images referred to as textures that decorate primitives, digitized audio clips, avatar shape and appearance, avatar skin textures, LSL scripts, information written on notecards, and so on. Each asset is referenced with a <b>universally</b> <b>unique</b> <b>identifier</b> or <b>UUID.</b>|$|R
40|$|Life Cycle Thinking (LCT) and Life Cycle Assessment (LCA) are the {{scientific}} approaches behind modern environmental policies and business decision support related to Resource-efficiency and Sustainable Consumption and Production. The International Reference Life Cycle Data System (ILCD) provides a common basis for consistent, robust and quality-assured life cycle data and studies. Such data and studies support coherent policy instruments, such as resource-efficiency measures, Environmental footprinting, Ecolabelling, Ecodesign, Carbon footprinting, and Green Public Procurement. This document supports the International Reference Life Cycle Data System (ILCD) Data Network. It provides the technical provisions for assigning and managing <b>Universally</b> <b>Unique</b> <b>Identifiers</b> (<b>UUID)</b> and version numbers of ILCD-formatted data sets {{as well as}} sets conventions for file names {{of any kind of}} LCA data sets documented in the ILCD format, namely Process, Flow, Flow property, Unit group, Source, Contact and LCIA method data sets. The principle target audience for this document is the LCA data set developer, LCA database manager, and LCA software developer. JRC. H. 8 -Sustainability Assessmen...|$|R
30|$|As {{far as the}} way {{in which}} a service is {{identified}} is concerned, a <b>Universally</b> <b>Unique</b> <b>Identifier</b> (<b>UUID),</b> a unique integer value of 128 bits, is used, as a Bluetooth device can offer several services, each of which must have its own UUID. Only the server and the customer share the UUID, so nobody can use the service if {{they do not have the}} identifier in question.|$|E
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2006). This document describes the LDAP/X. 500 ’entryUUID ’ operational attribute and associated matching rules and syntax. The attribute holds a server-assigned <b>Universally</b> <b>Unique</b> <b>Identifier</b> (<b>UUID)</b> for the object. Directory clients may use this attribute to distinguish objects identified by a distinguished name or to locate an object after renaming...|$|E
40|$|Definition of the UUID-Based DHCPv 6 Unique Identifier (DUID-UUID) This {{document}} {{defines a}} new DHCPv 6 Unique Identifier (DUID) type called DUID-UUID. DUID-UUIDs {{are derived from}} the alreadystandardized <b>Universally</b> <b>Unique</b> <b>IDentifier</b> (<b>UUID)</b> format. DUID-UUID {{makes it possible for}} devices to use UUIDs to identify themselves to DHC servers and vice versa. UUIDs are globally unique and readily available on many systems, making them convenient identifiers to leverage within DHCP. Status of This Memo This is an Internet Standards Track document. This document {{is a product of the}} Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|E
40|$|Abstract—In a model-driven service-oriented {{architecture}} (SOA), the services are in large parts generated from models. To facilitate monitoring, governance, and self-adaptation {{the information in}} these models {{can be used by}} services that monitor, manage, or adapt the SOA at runtime. If a service for monitoring, management, or adaptation in an SOA is dependent on models, and the metamodel changes, usually the service needs to be manually adapted to work with the new version, recompiled, and redeployed. This manual effort impedes the use of models at runtime. To address this problem, this paper introduces model-aware services that work with models at runtime. These services are supported using a service environment, called MORSE. Hiding the complexity of implicit versioning of models from users while respecting the principle of <b>Universally</b> <b>Unique</b> <b>Identifiers</b> (<b>UUIDs),</b> it realizes a novel transparent UUID-based model versioning technique. It uses the model-driven approach to automatically generate and deploy MORSE services that are used by the model-aware services to access models in the correct version. In this way, monitoring and adaptation in SOAs can be better supported, and the manual effort to evolve services for monitoring, management, or adaptation, which are based on models at runtime, can be minimized...|$|R
5000|$|Access (preboot) the PC's {{universal}} <b>unique</b> <b>identifier</b> (<b>UUID).</b>|$|R
5000|$|... 1 February 2015: Release of version 2.8.0. Adds Tryton 3.4 compatibility, data {{aggregation}} and synchronization features for distributed environments, a Universal Person <b>Unique</b> <b>Identifier</b> (PUID) and Universal <b>Unique</b> <b>Identifier</b> (<b>UUID)</b> implementation, a HL7 FHIR server, {{birth and death}} certificates, and enhanced crypto features (GNU Privacy Guard integration).|$|R
40|$|Roadkill Reporter is {{a mobile}} app that {{facilitates}} crowdsourcing a parasitology project exploring the genetics {{and distribution of}} the raccoon roundworm, an intestinal parasite infecting 60 - 80 percent of raccoons in the Midwest. The basic {{idea is to get}} more eyes on the road to help in identifying fresh raccoon roadkill. Reports are transmitted and stored using a <b>Universally</b> <b>Unique</b> <b>Identifier</b> (<b>UUID),</b> ensuring participant anonymity while allowing for subsequent report updates, location refinements and reliability measures of reporters based on cumulative accuracy. A companion app, Roadkill Retriever, helps the project PIs locate and retrieve the carcass for necropsy and subsequent analysis. It accesses reports from our web server, then uses GPS coordinates to filter reports, sort by distance, map, and provide guided navigation. Both Android and iPhone versions are available...|$|E
40|$|A <b>Universally</b> <b>Unique</b> <b>IDentifier</b> (<b>UUID)</b> URN Namespace Status of this Memo This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the “Internet Official Protocol Standards ” (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright © The Internet Society (2005). All Rights Reserved. This specification defines a Uniform Resource Name namespace for UUIDs (Universally Unique IDentifier), also known as GUIDs (Globally Unique IDentifier). A UUID is 128 bits long, and can guarantee uniqueness across space and time. UUIDs were originally used in the Apollo Network Computing System {{and later in the}} Open Software Foundation's (OSF) Distributed Computing Environment (DCE), and then in Microsoft Windows platforms. This specification is derived from the DCE specification with the kind permission of the OSF (now known a...|$|E
40|$|Bluetooth Service Discovery Protocol (SDP) {{enables a}} client {{application}} on {{a device to}} discover information about services on other Bluetooth devices. Every service is represented by a profile, identified by a 128 -bit <b>Universally</b> <b>Unique</b> <b>Identifier</b> (<b>UUID).</b> A match occurs on a peer device {{if and only if}} at least one UUID specified by the client is contained in one or more of its service records. We believe that the advantages of UUID-based matching to support service discovery are restricted to ad-hoc Bluetooth networks consisting of resource constrained devices. The more common case for applications using Bluetooth networks, is the existence of one or more resource rich devices (e. g., the Compaq iPAQ) in the network. This calls for a matching mechanism that uses semantic information associated with services and attributes to decide {{the success or failure of}} a query. We present an enhanced version of Bluetooth SDP that supports semantic matching and provides service registration. We evaluate the performance of this enhanced version of SDP and compare it with regular SDP. We show that enhanced SDP performs comparably to regular SDP in terms of Round Trip Time and matching time. I...|$|E
40|$|This paper {{describes}} {{the incorporation of}} Universal <b>Unique</b> <b>Identifiers</b> (<b>UUIDs)</b> into the database design for a children’s email application. Implementation of the new design is described including the mechanism for sharing data between installations using an IMAP based email server. Testing of the software has demonstrated that the design results in a functional distributed application although there remains scope for improving the synchronization algorithm. The Mifrenz application is available from [URL] for download...|$|R
50|$|The {{design and}} {{implementation}} of DCE/RPC, the remote procedure call mechanism in the Distributed Computing Environment, is based on NCA/NCS. It also was the first implementation of <b>Universally</b> <b>unique</b> <b>identifiers.</b>|$|R
50|$|Triggered by location. Up to 10 {{locations}} can {{be added}} to each Pass. A location is programmed as GPS coordinates (longitude, latitude, and altitude) and/or iBeacon UUID (The <b>UUID</b> is a <b>Universally</b> <b>Unique</b> <b>Identifier</b> which is a 32 ASCII character code or a code automatically generated from a name using the PassKit API).|$|R
40|$|International audienceThe {{application}} of mass spectrometry imaging (MS imaging) is rapidly growing with a constantly {{increasing number of}} different instrumental systems and software tools. The data format imzML was developed to allow the flexible and efficient exchange of MS imaging data between different instruments and data analysis software. imzML data is divided in two files which are linked by a <b>universally</b> <b>unique</b> <b>identifier</b> (<b>UUID).</b> Experimental details are stored in an XML file {{which is based on}} the HUPO-PSI format mzML. Information is provided {{in the form of a}} 'controlled vocabulary' (CV) in order to unequivocally describe the parameters and to avoid redundancy in nomenclature. Mass spectral data are stored in a binary file in order to allow efficient storage. imzML is supported by a growing number of software tools. Users will be no longer limited to proprietary software, but are able to use the processing software best suited for a specific question or application. MS imaging data from different instruments can be converted to imzML and displayed with identical parameters in one software package for easier comparison. All technical details necessary to implement imzML and additional background information is available at www. imzml. org. This article is part of a Special Issue entitled: Imaging Mass Spectrometry: A User's Guide to a New Technique for Biological and Biomedical Research...|$|E
5000|$|IdentifierA <b>universally</b> <b>unique</b> numeric <b>identifier</b> for the clock. This is {{typically}} constructed {{based on a}} device's MAC address.|$|R
50|$|Bluetooth beacons use Bluetooth {{low energy}} {{proximity}} sensing to transmit a <b>universally</b> <b>unique</b> <b>identifier</b> {{picked up by}} a compatible app or operating system. The identifier and several bytes sent with {{it can be used to}} determine the device's physical location, track customers, or trigger a location-based action on the device such as a check-in on social media or a push notification.|$|R
50|$|Caching {{performed}} by bcache operates at the block device level, making itself file system - agnostic {{as long as}} the file system provides an embedded <b>universally</b> <b>unique</b> <b>identifier</b> (UUID); this requirement is satisfied by virtually all standard Linux file systems, as well as by swap partitions. Sizes of the logical blocks used internally by bcache as caching extents can go down {{to the size of a}} single HDD sector.|$|R
5000|$|Through LibOFA, {{a program}} can {{fingerprint}} a recording, and submit the fingerprint to MusicDNS via the Internet. MusicDNS attempts {{to match the}} submission to fingerprints in its database. If the MusicDNS service finds an approximate match, it returns a code called a PUID (Portable <b>Unique</b> <b>Identifier).</b> This code does not contain any acoustic information; rather, it enables a computer program to retrieve identifying information (such as the song title and recording artist) from the MusicDNS database. The PUID code is a short, alphanumeric string based on the <b>universally</b> <b>unique</b> <b>identifier</b> standard.|$|R
50|$|The EPCglobal Network is a {{computer}} network used to share product data between trading partners. It was created by EPCglobal. The basis for the information flow in the network is the Electronic Product Code (EPC), which is a <b>universally</b> <b>unique</b> <b>identifier</b> for any physical object anywhere in the world, for all time. The EPC may be encoded in a Radio Frequency Identification (RFID) tag but is not designed exclusively for use with RFID data carriers. For example, EPCs can also be constructed based on the reading of optical data carriers, such as linear barcodes.|$|R
50|$|The {{data in a}} JCR {{consists}} of a tree of nodes with associated properties. Data is stored in the properties, which may hold simple values such as numbers and strings or binary data of arbitrary length. Nodes may optionally have one or more types associated with them which dictate the kinds of properties, number and type of child nodes, and certain behavioral characteristics of the nodes. Nodes may point to other nodes via a special reference type property. In this way nodes in a JCR offer both referential integrity and object-oriented concept of inheritance. Additional node types include the referenceable node type which allows the user to reference said node through use of a <b>universally</b> <b>unique</b> <b>identifier.</b> Another popular type is the versionable type. This makes the repository track a document's history and store copies of each version of the document.|$|R
40|$|AbstractThe Internet Search Environment Number (ISEN) is a {{proposed}} new Internet standard {{analogous to the}} International Standard Book Number (ISBN) and the International Standard Serial Number (ISBN) that would allow Internet searchers to locate more authoritative and reliable information sources than can be identified using conventional search engines. ISEN is also a metadata creation environment and a search engine. For end users, ISEN offers metadata-based basic and advanced search options, as well as features and functionalities that support database providers and ISEN editors and catalogers. In addition, ISEN is {{an environment in which}} external associations, businesses, and organizations can develop value-added services that build on the rich metadata provided by the ISEN service. In general, databases are dynamically driven and routinely updated, producing many versions of the initial database content on a regular basis. ISEN is intended to facilitate the identification of a variety of „search environments. A search environment can be defined as a body of structured information with its own search algorithm. These search environments include not only databases, but digital libraries, institutional repositories, knowledge bases, online public- access catalogs (OPACs) and peer-to-peer (P 2 P) systems. At the core of the ISEN system is the Internet Search Environment Number (ISEN), which is a unique number based on the underlying technologies of Digital Object Identifiers (DOI), handles from the Handle System, and Universal <b>Unique</b> <b>Identifiers</b> (<b>UUIDs).</b> ISEN will be supported by metadata professionals who will provide the metadata for identified search environments...|$|R
40|$|As {{we begin}} to develop {{architectures}} to guide the engineering of context-aware computing systems, {{we will need to}} apply significantly more precision to the notion of “context ” than is afforded by common usage of this term. In this essay, I identify three distinct realms of contextual reference. First, the physical context allows us to imbue our machines with a sense of “place ” in the most literal sense of that term. Second, the device context concerns the relations among information processing systems as such. Finally, computing systems have an information context. The study of information contexts is the province of the discipline of Information Architecture, which we may define as the design of information entities abstracted from the machines that process them. Although these topics raise diverse issues, they arguably all share a need for a uniform basis for dealing with matters of identity and naming. The first step in developing such a basis is the adoption of a uniform scheme for <b>universally</b> <b>unique</b> <b>identifiers,</b> both for identifying digital objects and for referring to physical phenomena...|$|R
30|$|The Open Graph uses {{linked data}} <b>Unique</b> Resource <b>Identifier</b> (URI) {{principles}} to identify publisher and admin owner(s) via the Facebook Developer Application Programming Interface (API 17), and {{these could be}} modified to incorporate institution and author URI’s, thereby evidencing quality and authenticity. A Unique Resource Location (URL) identifies each specific piece of digital content, or additionally adopt a <b>Universally</b> <b>Unique</b> <b>Identifier</b> ‘UUID’, permitting perhaps more efficient searching in any ‘non-relational’ data context. The Open Graph’s ‘Geopoint’ geo-tag coordinate and location meta-properties allow for search by location to a precise level. By adding additional tags for topic (partially catered for in Open Graph ‘Article’ properties but could be defined specifically) and educational level (EQF, K- 12 etc), network knowledge content nodes could be found and delivered more accurately, and searched via a Representational State Transfer (RESTful 18) API as described in Gyrard et al. (2016). This would mean they were independent of any single app or platform, only dependent on a simple RDF and API system. While space here does not permit more detailed examination for how topic, institution, author and educational level could be added as additional Open Graph properties, it is not complex to imagine {{that this could be}} done.|$|R
40|$|This paper {{addresses}} {{the problem of}} naming and identification in distributed systems. It describes an architecture centered on objects, names and contexts which support different naming policies. The pattern solution is driven {{taking into account the}} information embedded in names and the function, structure and meaning of names. 1 Problem A traditional approach to the naming problem is to establish a one-to-one association between names and objects. Such names are known as <b>Unique</b> and Universal <b>Identifiers</b> (<b>UUID)</b> s. UUIDs are used as object identifiers, to distinguish an object from all others. However there are many situations where objects need to be perceived at different levels of abstraction, and must be associated to more than one <b>identifier.</b> <b>UUIDs</b> are also used as object references, as a way to denote a particular object. However the performance overhead in the creation and management of UUIDs makes this approach not suitable to support fine-grain objects. Next, we will see an e [...] ...|$|R
40|$|One {{challenge}} {{associated with}} developing location-based social applications for iOS devices {{is building a}} framework on top of Apple’s Core Bluetooth Framework to drive user discovery. Many applications on Apple’s App Store use Bluetooth to enable location-based user discovery. These Social Location-Based Frameworks are private and often are lacking. An ideal Social Location-Based Bluetooth Framework would be public, would be responsive while the application is minimized, have a light battery footprint, and securely transfer the necessary data to enable social interaction. Samantha, a Social Location-Based Framework, meets all of these characteristics. In a Test Application, Samantha took no more than 5 seconds to start up and discover all nearby users. The average discovery time was 3. 5 seconds. In addition the battery draw, measured using Apple’s Battery Monitoring Instrument, during testing never exceed 1 / 20. This means an application running Samantha in the background for a 12 -hour period would not significantly drain the battery. In terms of security, Samantha transfers a <b>Unique</b> User <b>Identifier</b> (<b>UUID)</b> across Bluetooth than contains no sensitive information. This UUID, a string of random characters, contains no personal information {{and it is only}} useful because it allows specific identification of a nearby user in a database holding additional information. This two-step process ensures that confidential information is never exposed. An example application, Ripple, uses Samantha to create a location-based social application and highlights the framework’s intended use...|$|R
