0|10000|Public
5000|$|The SPICE project {{developed}} an extended <b>Use</b> <b>Case</b> <b>named</b> [...] "split terminal" [...] where a user on a PC can authenticate with their mobile phone: http://www.ist-spice.org/demos/demo3.htm. The NAF was developed on SimpleSAMLPhP and a Firefox extension {{was developed to}} process the GBA digest authencation request from the BSF. Bluetooth SIM Access Profile was used between the Firefox browser and the mobile phone. Later a partner developed a [...] "zero installation" [...] concept.|$|R
5000|$|The {{other way}} of {{describing}} a misuse <b>case,</b> is by <b>using</b> a separate template for this purpose only. It is suggested to inherit some of the field from <b>use</b> <b>case</b> description (<b>Name,</b> Summary, Author and Date). It also adapts the fields Basic path and Alternative path, where they now describe the paths of the misuse cases instead of the <b>use</b> <b>cases.</b> In addition to there, it is proposed to use several other fields too: ...|$|R
5000|$|Note {{that the}} {{theoretical}} limit for a conventional furnace's instantaneous efficiency is 100%, whereas a heat pump used for building heating may exceed 100%. For example, a COP of 1.5 {{is equivalent to}} 150%. Heat pumps are readily available for electric and gas sources. So from a theoretical perspective, in some <b>use</b> <b>cases</b> the <b>name</b> [...] "efficiency" [...] may be misleading.|$|R
5000|$|In C#, it is {{possible}} to enforce a reference with the ref keyword, similar to C++ and in a sense to C. This feature of C# is particularly useful when one wants to create a method that returns more than one object. In Java trying to return multiple values from a method is unsupported, unless a wrapper is <b>used,</b> in this <b>case</b> <b>named</b> [...] "Ref".|$|R
5000|$|Case's {{corporate}} entities and brands changed {{repeatedly in}} the 1980s and 1990s. When its corporate parent, Tenneco, bought International Harvester's agricultural equipment division and merged it into Case, the J. I. Case Company continued, but it began <b>using</b> the <b>Case</b> IH brand. In the 1990s it changed names several more times (each name including [...] "Case") before its merger into CNH Global ended its history as a distinct entity. Various CNH brands continue to make <b>use</b> of the <b>Case</b> <b>name,</b> such as <b>Case</b> CE and Case IH.|$|R
30|$|Besides {{the project}} own {{usage of the}} <b>Use</b> <b>Cases,</b> they also where used to give input for the {{accompanying}} research of the project. Therefore, an export of all <b>Use</b> <b>Cases</b> with their <b>name,</b> short description and long description was provided in their current state to give a more detailed and actual overview. The work of the accompanying research aims in this case at developing overall key performance indicators overarching for all five projects of the funding programme SINTEG.|$|R
30|$|Bonifacio and Borba (2009) propose an approach, Modelling Scenario Variability as Crosscutting Mechanisms (MSVCM), to {{deal with}} the {{variability}} of scenarios as a composition of different artifacts: <b>use</b> <b>cases</b> model, feature model, product configuration, and configuration knowledge. In this approach, the <b>use</b> <b>cases</b> model is composed of <b>use</b> <b>cases</b> and aspectual <b>use</b> <b>cases.</b> An aspectual <b>use</b> <b>case</b> has a <b>name</b> and a list of advices that can extend the behavior of existing scenarios. We also found this template in the work of Alferez et al. (2014) which presents an assessment of the MSVCM approach in regards to modularity, stability, and expressiveness.|$|R
40|$|Abstract. Searching {{for optimal}} ways {{in a network}} is an {{important}} task in multiple application areas such as social networks, co-citation graphs or road networks. In the majority of applications, each edge in a network {{is associated with a}} certain cost and an optimal way minimizes the cost while fulfilling a certain property, e. g connecting a start and a destination node. In this paper, we want to extend pure cost networks to so-called cost-gain networks. In this type of network, each edge is additionally associated with a certain gain. Thus, a way having a certain cost additionally provides a certain gain. In the following, we will discuss the problem of finding ways providing maximal gain while costing less than a certain budget. An application for this type of problem is the round trip problem of a traveler: Given a certain amount of time, which is the best round trip traversing the most scenic landscape or visiting the most important sights? In the following, we distinguish two cases of the problem. The first does not control any redundant edges and the second allows a more sophisticated handling of edges occurring more than once. To answer the maximum round trip queries on a given graph data set, we propose unidirectional and bidirectional search algorithms. Both types of algorithms are tested for the <b>use</b> <b>case</b> <b>named</b> above on real world spatial networks. ...|$|R
50|$|Note {{that under}} VMS, usernames were not case-sensitive and were usually shown in uppercase, but under Ultrix, usernames were case-sensitive, and most sites {{followed}} the unix convention of <b>using</b> lower <b>case</b> usernames. <b>Names</b> of machines on a DECnet network were not case-sensitive. Thus, the header above {{implies that the}} mail is going to a VMS system, but the one following implies the user is on a Unix system.|$|R
40|$|Theme/Doc and <b>use</b> <b>cases</b> are two {{prominent}} approaches to aspect-oriented analysis. They {{have been developed}} independently and up to now, {{there have been no}} attempts to analyze how they are connected to each other. This paper explores the extent to what themes and <b>use</b> <b>cases</b> can be considered the same by developing a process of the transformation of themes into <b>use</b> <b>cases</b> and the reverse one. Extensive similarities have been revealed between themes and <b>use</b> <b>cases</b> with respect to expressing aspectoriented decomposition, relationship to functional decomposition, and generalization. Main differences lie in the way themes and <b>use</b> <b>cases</b> are described, <b>naming</b> convention, lack of actors in themes, and lower level character of some themes. Despite the differences, most of the themes can be transformed directly into <b>use</b> <b>cases</b> and vice versa with a quite straightforward derivation of the relationships among them...|$|R
40|$|We {{start with}} the State of the Art section (2) on the {{evaluation}} of comparable tools to the MMECP. It is shown how far STREETLIFE or in particular the STREETLIFE MMECP can enhance such tools. In section 3 of this deliverable the derived scenarios and <b>use</b> <b>cases</b> from deliverable D 6. 1 [1] for each pilot site we describe. The Key Performance Indicators (KPIs) important for the specific pilot scenarios and <b>use</b> <b>cases</b> are <b>named.</b> Section 4, Methodologies, is a main section of this deliverable. It describes the methodologies {{that will be used}} to achieve the goals of the MMECP. Section 5 describes the architecture of the MMECP component. It contains an architecture description including sequence diagrams for a set of main activities of the MMECP. Section 6 of this deliverable lists all technologies and frameworks that are used for the realization of the MMECP. The conclusion section (7) describes the lessons learned so far and the expectations on the further development of the MMECP...|$|R
40|$|Abstract. <b>Use</b> <b>case</b> {{modeling}} {{is commonly}} applied to document requirements. <b>Use</b> <b>case</b> specifications (UCSs) are usually structured, unrestricted textual documents complying {{with a certain}} template. However, because they remain essentially textual, ambiguities are inevitable. In our previous work, we proposed a new <b>use</b> <b>case</b> modeling approach, <b>named</b> as Restricted <b>Use</b> <b>Case</b> Modeling (RUCM), which is composed {{of a set of}} well-defined restriction rules and a new template. The goal was to reduce ambiguity and facilitate automated analysis. In our works, RUCM has been systematically and empirically evaluated through case studies to be easy to apply and leads to higher quality of UML analysis models. In this paper, we modeled the Crisis Management System (CMS) <b>case</b> study <b>using</b> RUCM and our experience proved that RUCM is easy to apply and sufficient to capture the requirements provided for the case study...|$|R
50|$|The other use means 'on the {{application}} of' when <b>used</b> in the <b>case</b> <b>name</b> where prerogative relief is sought, {{such as a}} writ of prohibition, certiorari or mandamus. Thus for example the <b>case</b> <b>name</b> in the Boilermakers' case is R v Kirby; Ex parte Boilermakers' Society of Australia as the case concerned a writ of prohibition that was sought against Kirby, Dunphy and Ashburner, who were judges of the Commonwealth Court of Conciliation and Arbitration, on {{the application}} of the Boilermakers Society of Australia. While the <b>case</b> <b>name</b> is 'ex parte' it was not heard {{in the absence of a}} party, with the judges being represented by D I Menzies QC who also represented the Commonwealth Attorney-General. Similarly the case of Re Wakim; Ex parte McNally concerned application of McNally for a writ of prohibition in relation to proceedings in the Federal Court that were commenced by Wakim. Both McNally and Wakim appeared in the High Court. There was however no appearance for the first respondents in the bankruptcy cases, the judges of the Federal Court.|$|R
40|$|Abstract. For {{machine and}} {{individuals}} to successfully exchange annotations about audio resources, a technique {{is needed to}} provide these with stable identifiers. In this paper we propose ontological definitions of some identification problems and discuss the preliminary conceptual structure of the Music URI Infrastructure (MUI) project. The idea behind MUI is that of designing a distributed infrastructure to provide stable or seldom changing identifiers to clients querying about audio recordings they might possess either in directly audible format (e. g MP 3) or in low level metadata only (MPEG- 7). In designing MUI, special care has been taken in efficiently addressing the most common <b>use</b> <b>cases,</b> e. g. <b>naming</b> of audio resources downloaded from the Internet. In this case, MUI attempts to make optimal use of the existing metadata, acknowledging {{that this might be}} incomplete, partially or totally incorrect. 1...|$|R
40|$|Abstract. This paper {{presents}} a <b>CASE</b> tool <b>named</b> Software Engineering Tutor (SET), {{aimed at improving}} the student and software engineering formation in order to guide the domain and <b>use</b> <b>case</b> models construction. Besides, this tool offers a repository of case studies, trying {{to make an effort}} to share experiences around the user community...|$|R
5000|$|The name {{international}} unit {{has often been}} capitalized (in English and other languages), although major English-language dictionaries treat it as a common noun and thus <b>use</b> lower <b>case.</b> The <b>name</b> has several accepted abbreviations. It is usually abbreviated as IU in English, UI in Romance languages (for example Spanish unidad internacional, French unité internationale, Italian unità internazionale, Romanian unitate internațională), IE in several Germanic languages (for example German internationale Einheit, Dutch internationale eenheid) or as other forms (for example Russian МЕ, международная единица mezhdunarodnaya jedinica, Hungarian NE, nemzetközi egység). In order to remove the possibility of having the letter [...] "I" [...] confused with the digit [...] "1", some hospitals have it as a stated policy to omit the [...] "I", that is, to only use U or E when talking and writing about dosages, while other hospitals require the word [...] "units" [...] (or words [...] "{{international unit}}s") to be written out entirely.|$|R
50|$|In 1967, Tenneco {{purchased}} J.I. Case, {{continuing to}} market the products under the <b>Case</b> <b>name.</b>|$|R
5000|$|... † In all <b>cases</b> <b>names</b> are {{historically}} inaccurate, i.e. {{they have}} all been applied since preservation.|$|R
50|$|The retrial {{was held}} on June 15, 2009 under the updated <b>case</b> <b>name</b> Capitol Records v. Thomas-Rasset.|$|R
50|$|The main {{buildings}} of Benedictine College {{are in many}} <b>cases</b> <b>named</b> for important persons in Benedictine College history.|$|R
5000|$|The TV series American Justice {{produced}} an episode {{based on this}} <b>case</b> <b>named</b> [...] "The Sam Sheppard Story".|$|R
50|$|The case is colloquially {{known as}} the Spanner <b>case,</b> <b>named</b> after Operation Spanner, the {{investigation}} which led to it.|$|R
50|$|Many terms exist, often {{specifying the}} type of {{standard}} borne (in various <b>cases</b> <b>named</b> in parentheses after the bearer).|$|R
40|$|The control-flow {{for five}} kinds of <b>use</b> <b>cases</b> is analysed: for common <b>use</b> <b>cases,</b> variant <b>use</b> <b>cases,</b> {{component}} <b>use</b> <b>cases,</b> specialised <b>use</b> <b>cases</b> and for ordered <b>use</b> <b>cases.</b> The control-flow semantics of <b>use</b> <b>cases</b> - {{and of the}} uses-relation, the extends-relation and the precedes-relation between <b>use</b> <b>cases</b> - is {{described in terms of}} flowgraphs. Sequence diagrams of <b>use</b> <b>cases</b> are refined to capture the control-flow adequately. Guidelines are given for <b>use</b> <b>case</b> descriptions to attain a well-defined flow of control...|$|R
40|$|Discussion of <b>use</b> <b>cases</b> and UML often {{focuses on}} the UML <b>use</b> <b>case</b> diagram. <b>Use</b> <b>case</b> {{diagrams}} are contrasted (usually unfavorably) with text <b>use</b> <b>cases.</b> But specification of <b>use</b> <b>cases</b> with UML {{is not limited to}} the <b>use</b> <b>case</b> diagram. In fact UML 2 includes a variety of expressive techniques for specifying a <b>use</b> <b>case.</b> This article looks at UML <b>use</b> <b>cases</b> from the ODP viewpoint, and describes UML <b>use</b> <b>case</b> specification techniques in ODP terms. ...|$|R
40|$|Abstract 1 The control-flow {{for five}} kinds of <b>use</b> <b>cases</b> is analysed: for common <b>use</b> <b>cases,</b> variant <b>use</b> <b>cases,</b> {{component}} <b>use</b> <b>cases,</b> specialised <b>use</b> <b>cases</b> and for ordered <b>use</b> <b>cases.</b> The control-flow semantics of <b>use</b> <b>cases</b> – {{and of the}} uses-relation, the extends-relation and the precedes-relation between use cases- is {{described in terms of}} flowgraphs. Sequence diagrams of <b>use</b> <b>cases</b> are refined to capture the control-flow adequately. Guidelines are given for <b>use</b> <b>case</b> de-scriptions to attain a well-defined flow of control...|$|R
30|$|Advice use case: The <b>use</b> <b>case</b> {{template}} {{describes the}} variabilities as advice <b>use</b> <b>cases.</b> The advice <b>use</b> <b>cases</b> capture crosscutting requirements and are {{defined in the}} same form as normal <b>use</b> <b>cases,</b> but they may only {{have some of the}} <b>use</b> <b>case</b> sections. The linking of advice <b>use</b> <b>cases</b> with affected base <b>use</b> <b>cases</b> is based on syntactical matching of joinpoints and pointcut expressions.|$|R
50|$|In a few <b>cases,</b> <b>naming</b> rights {{contracts}} {{have been}} terminated prematurely. Such terminations {{may be the}} result of contractual options, sponsor bankruptcy, or scandals.|$|R
5000|$|... (* Note {{that the}} {{original}} (1972) title of the <b>case</b> <b>named</b> ARC as [...] "Aircraft Radio Corporation -- implying a legally distinct entity, while the appeals court decsion (1975), under that original <b>case</b> <b>name,</b> repeatedly refers to ARC {{in the body of}} the ruling as [...] "Aircraft Radio Company," [...] implying an identity less certainly distinct from its parent company, Cessna—a fact that changed during the litigation, apparently sometime afer a September, 1973 letter from parent Cessna, of which the Court notes...: ...|$|R
30|$|Anthonysamy and Somé (2008) propose an aspect-oriented <b>use</b> <b>cases</b> {{modelling}} {{approach to}} model product line systems that {{is supported by}} a tool called <b>Use</b> <b>Case</b> Editor (UCEd). In this approach, the variabilities can be modeled by advice <b>use</b> <b>cases</b> that extend the behavior of base <b>use</b> <b>cases.</b> These advice <b>use</b> <b>cases</b> are defined {{in the same way as}} normal <b>use</b> <b>cases,</b> but they may only have some of the <b>use</b> <b>case</b> sections.|$|R
40|$|The {{ability to}} express {{sequencing}} constraints {{is critical to}} <b>use</b> <b>case</b> based software development. These constraints are needed to effectively compose <b>use</b> <b>case</b> behavior and support verification and validation activities such as simulation and testing. In this paper, we consider the addition of <b>use</b> <b>case</b> description elements to explicitly express sequencing constraints between <b>use</b> <b>cases.</b> We introduce two complementary constructs. One allows to specify which <b>use</b> <b>cases</b> need to precede a <b>use</b> <b>case</b> and how these preceding <b>use</b> <b>cases</b> are synchronized. The second construct allows to specify which <b>use</b> <b>cases</b> are enabled from a <b>use</b> <b>case</b> and how these <b>use</b> <b>cases</b> execute concurrently. We relate the introduced elements to UML activity diagrams and implicit sequencing based on preconditions and postconditions. 1...|$|R
40|$|A <b>Use</b> <b>Case</b> is a {{specification}} of interactions involving a system and external actors of that system. The intuitive, user centered nature of textual <b>use</b> <b>cases</b> {{is one of}} the reasons for the success of the <b>use</b> <b>case</b> approach. A certain level of formalization is however needed to automate <b>use</b> <b>case</b> based system development, including tasks such as model synthesis, verification and validation. In this paper, a formalization of textual <b>use</b> <b>cases</b> is proposed. At the syntactic-level, an UML metamodel and a restricted-form of natural language are defined for <b>use</b> <b>case</b> description. <b>Use</b> <b>cases</b> execution semantics are proposed as a set of Mapping Rules from well-formed <b>use</b> <b>cases</b> to Basic Petri nets. The semantics consider <b>use</b> <b>cases</b> sequencing constraints defined at the syntactic-level. The proposed formalization serves as a basis for state-model synthesis from <b>use</b> <b>cases.</b> UML activity diagrams are generated to capture <b>use</b> <b>cases</b> sequencing and UML StateCharts to capture event flows within <b>use</b> <b>cases...</b>|$|R
40|$|<b>Use</b> <b>cases</b> are {{promising}} vehicles for specifying requirements. However, obtaining well-organized <b>use</b> <b>case</b> models is difficult during software evolution. The thesis proposes {{to address the}} issue by refactoring <b>use</b> <b>case</b> models. Refactoring is a program transformation approach for iterative software development. Its concept is introduced to <b>use</b> <b>case</b> models in Cascaded Refactoring. The thesis introduces major research involved in refactoring <b>use</b> <b>case</b> models. It defines a <b>use</b> <b>case</b> metamodel to formalize <b>use</b> <b>cases.</b> The three-level metamodel covers the environment or context of a <b>use</b> <b>case</b> model, the structure of <b>use</b> <b>cases</b> in terms of episodes, and the event or message passing details of a scenario. The thesis presents a process algebra semantics for the <b>use</b> <b>case</b> model. The episode semantics is provided from the literature. The semantics of a single <b>use</b> <b>case</b> is defined in terms of the episode model. The semantics of the <b>use</b> <b>case</b> model is defined in terms of the individual <b>use</b> <b>cases</b> and their relationships. The thesis identifies a list of properties that need to be preserved during refactoring. It defines fifty-three <b>use</b> <b>case</b> refactorings, which are described using a template covering the refactoring description, arguments, preconditions, postconditions and verification of behavior preservation. The thesis also introduces a tool for <b>use</b> <b>case</b> modeling and refactoring. The tool helps validate the <b>use</b> <b>case</b> metamodel and refactorings on two case studies, which demonstrate that refactoring <b>use</b> <b>case</b> models is feasible and practical. Based on these case studies, the thesis discusses the nature of <b>use</b> <b>case</b> evolution and provides some guidelines for the refactoring process...|$|R
5000|$|<b>Use</b> <b>case</b> {{developers}} {{often find}} it difficult to determine the level of user interface (UI) dependency to incorporate in a <b>use</b> <b>case.</b> While <b>use</b> <b>case</b> theory suggests that UI not be reflected in <b>use</b> <b>cases,</b> it can be awkward to abstract out this aspect of design, as it makes the <b>use</b> <b>cases</b> difficult to visualize. In software engineering, this difficulty is resolved by applying requirements traceability, for example with a traceability matrix. Another approach to associate UI elements with <b>use</b> <b>cases,</b> is to attach a UI design to each step in the <b>use</b> <b>case.</b> This is called a <b>use</b> <b>case</b> storyboard.|$|R
40|$|Abstract. In general, {{diagrams}} {{and text}} are both {{considered to have}} their advantages and disadvantages for the representation of <b>use</b> <b>case</b> models, but this is rarely investigated experimentally. This paper describes a controlled experiment where we compare safety hazard identification by means of misuse <b>cases</b> based on <b>use</b> <b>case</b> diagrams and textual <b>use</b> <b>cases.</b> The experiment participants found <b>use</b> <b>case</b> diagrams and textual <b>use</b> <b>cases</b> equally easy to <b>use.</b> In most <b>cases</b> those who <b>used</b> textual <b>use</b> <b>cases</b> {{were able to identify}} more failure modes or threats. The main reason for this seems to be that <b>use</b> <b>cases</b> encourage analysts to specifically focus on threats related to the functions mentioned in the <b>use</b> <b>case,</b> and textual <b>use</b> <b>cases</b> include more functional details than diagrams. The focus is decided by information in each <b>use</b> <b>case</b> which will thus decide the number of threats identified...|$|R
50|$|The <b>case</b> <b>name</b> {{has been}} the target of humor, by sources such as Harper's Magazine in 2004 and the Virginia Law Review in both 1955 and 2010.|$|R
