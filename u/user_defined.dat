2296|3020|Public
5|$|The ZX Spectrum came bundled with a {{software}} starter pack {{in the form}} of a cassette tape entitled , which included 8 programs - Thro' the Wall (a Breakout clone), Bubblesort, Evolution (an ecosystem of foxes and rabbits), Life (an implementation of Conway's Game of Life), Draw (a basic object-based drawing utility), Monte Carlo (a simulation of the rolling of two dice), Character Generator (for editing <b>user</b> <b>defined</b> graphics), Beating of Waves (plots the sum of two sine waves).|$|E
25|$|If a {{function}} takes, for example, 2 arguments, any extras are ignored. For <b>user</b> <b>defined</b> functions, if too few arguments are provided, additional one are added with {{the value of}} the empty string (""). A function may have a maximum of 62 arguments.|$|E
25|$|The {{ancillary}} data field {{can be used}} to store <b>user</b> <b>defined</b> data. The {{ancillary data}} is optional and the number of bits available is not explicitly given. The ancillary data is located after the Huffman code bits and ranges to where the next frame's main_data_begin points to. mp3PRO uses ancillary data to encode their bits to improve audio quality.|$|E
5000|$|On-screen display (OSD) lets <b>users</b> <b>define</b> where video {{information}} is located ...|$|R
5000|$|Custom rules (Experimental): lets <b>users</b> <b>define</b> {{their own}} rules for raising alerts ...|$|R
5000|$|Extensibility: Log4j 2 {{supports}} a plugin system to let <b>users</b> <b>define</b> and configure custom components ...|$|R
25|$|APLNext (formerly APL2000) {{offers an}} {{advanced}} APL interpreter that operates under Linux, Unix, and Windows. It supports Windows automation, supports calls to operating system and <b>user</b> <b>defined</b> DLLs, has an advanced APL File System, and represents {{the current level}} of APL language development. APL2000's product is an advanced continuation of STSC's successful APL*Plus/PC and APL*Plus/386 product line.|$|E
25|$|ADA has {{assisted}} {{internal drainage}} boards {{by developing a}} national flood risk management assets database system. Once complete the system will create a register of watercourses, pumping stations, sluices within IDB drainage districts. The system has had {{to take into account}} specific IDB requirements whilst ensuring a format that will enable ease of data transfer to future systems and <b>user</b> <b>defined</b> updates. The system is currently in the initial data gathering phase and is anticipated to go live during July 2008.|$|E
500|$|Instances {{of value}} types {{do not have}} {{referential}} identity nor referential comparison semantics - equality and inequality comparisons for value types compare the actual data values within the instances, unless the corresponding operators are overloaded. Value types are derived from , always have a default value, and can always be created and copied. Some other limitations on value types are that they cannot derive from each other (but can implement interfaces) and cannot have an explicit default (parameterless) constructor. Examples of value types are all primitive types, such as [...] (a signed 32-bit integer), [...] (a 32-bit IEEE floating-point number), [...] (a 16-bit Unicode code unit), and [...] (identifies a specific point in time with nanosecond precision). Other examples are [...] (enumerations) and [...] (<b>user</b> <b>defined</b> structures).|$|E
5000|$|Maghead {{provides}} the declarative schema API to help <b>user</b> <b>define</b> the model schemas, {{and which was}} inspired by Jifty DBI ...|$|R
3000|$|Definition of inputs for the {{walkthrough}} (e.g. {{identifying the}} <b>users,</b> <b>defining</b> the tasks to evaluate, describing the interface in detail) [...]...|$|R
5000|$|Genshi (View) - defines {{templates}} for the HTML or XHTML {{the user}} will generate. This {{is where the}} <b>user</b> <b>defines</b> the front-end the client will interact with.|$|R
2500|$|<b>User</b> <b>defined</b> {{functions}} are created {{using the following}} two built-in ...|$|E
2500|$|Functions {{are either}} {{built-in}} or <b>user</b> <b>defined.</b> A {{large number of}} built-in functions exist and are defined in the TTM reference manual ...|$|E
2500|$|<b>User</b> <b>Defined</b> Functions (UDF), {{which are}} custom {{functions}} written to supplement Excel's set of built-in functions, supports the {{increased number of}} cells and columns. UDFs now can also be multithreaded. Server side UDFs {{are based on the}} [...]NET Managed code.|$|E
30|$|The analyst anchors a {{suspicious}} segment on the curve. In this operation, the <b>user</b> <b>defines</b> the following parameters: start-and-end times, start-and-end data values, and value difference at this dimension.|$|R
5000|$|The Collaborative {{recognizes that}} there is a need to explore and address the {{cessation}} needs and interests among different segments of the population of young tobacco <b>users,</b> <b>defined</b> by factors such as: ...|$|R
30|$|To {{configure}} an NS- 2 simulation, a TCL {{script is}} used. In this script, <b>users</b> <b>define</b> {{the number of}} nodes in the network, network topology, link type, transport agent, routing protocols, type of traffic, among others.|$|R
2500|$|The string F {{is defined}} (line 1) and its body [...] "abcxxdefyy" [...] is {{segmented}} {{on the two}} strings [...] "xx" [...] and [...] "yy" [...] (line2). When invoked (line 3), it will return the value [...] "abc11def22". In effect, we have a <b>user</b> <b>defined</b> function F with two arguments.|$|E
2500|$|The {{second level}} domain names are {{registered}} directly with <b>user</b> <b>defined</b> names, such as company names. There are no standardized category names (such as com or org) used on the second level. The {{second level domain}} names are intended to have Cyrillic characters only, but some have Latin characters or digits instead. For the third level names, it is fairly common that [...] "www" [...] (Latin characters) are used, but most main company addresses don't use any third level name.|$|E
2500|$|Mac OS X Snow Leopard {{includes}} QuickTime X. QuickTime Player X lacks cut, {{copy and}} paste and will only export to four formats, but its limited export feature is free. Users {{do not have an}} option to upgrade to a Pro version of QuickTime X, but those who have already purchased QuickTime 7 Pro and are upgrading to Snow Leopard from a previous version of Mac OS X will have QuickTime 7 stored in the Utilities or <b>user</b> <b>defined</b> folder. Otherwise, users will have to install QuickTime 7 from the [...] "Optional Installs" [...] directory of the Snow Leopard DVD after installing the OS.|$|E
5000|$|A parser that {{implements}} SAX (i.e., a SAX Parser) {{functions as}} a stream parser, with an event-driven API. The <b>user</b> <b>defines</b> a number of callback methods that will be called when events occur during parsing. The SAX events include (among others): ...|$|R
5000|$|The cards {{may have}} {{multiple}} [...] "sides", called fields. The <b>user</b> <b>defines</b> what fields {{and in which}} order {{are used in the}} cards. The application automatically generates cards for different directions, e.g. from English language to French and in reversed order.|$|R
5000|$|... 6.0, June 2007: ISO/ECMA Eiffel {{addition}} (multiple constraint genericity, octal and {{binary notation}} for integers), new tabbed editor, new docking facilities to let <b>user</b> <b>define</b> their workspace, context menu {{is available in}} addition to pick and drop, dependency tool (press release).|$|R
2500|$|The [...] "exception table" [...] ({{interrupt}} vector table interrupt vector addresses) {{is fixed}} at addresses 0 through 1023, permitting 256 32-bit vectors. The first vector (RESET) consists of 2 vectors, namely the starting stack address, and the starting code address. Vectors 3 through 15 {{are used to}} report various errors: bus error, address error, illegal instruction, zero division, CHK and CHK2 vector, privilege violation (to block privilege escalation), and some reserved vectors that became line 1010 emulator, line 1111 emulator, and hardware breakpoint. Vector 24 starts the real interrupts: spurious interrupt (no hardware acknowledgement), and level 1 through level 7 autovectors, then the 16 TRAP vectors, then some more reserved vectors, then the <b>user</b> <b>defined</b> vectors.|$|E
2500|$|Television often uses a [...] "square law" [...] curve, {{providing}} finer {{control in}} top {{part of the}} curve, essential to allow accurate trimming of the colour temperature of lighting. Theatrical dimmers tend to use a softer [...] "S" [...] or linear curve. [...] Digital dimmers {{can be made to}} have whatever curve the manufacturer desires; they may have a choice between a linear relationship and selection of different curves, {{so that they can be}} matched with older analogue dimmers. [...] Sophisticated systems provide user-programmable or nonstandard curves, and a common use of a nonstandard curve is to turn a dimmer into a [...] "non-dim", switching on at a <b>user</b> <b>defined</b> control level.|$|E
2500|$|Modes 0 to 6 (the 'ASCII' modes) could {{display colours}} from a logical palette of sixteen: the eight basic colours at the {{vertices}} of the RGB colour cube and eight flashing colours made by alternating the basic colour with its inverse. [...] The palette could be freely reprogrammed without touching display memory. Modes 3 and 6 were special text-only modes that used less RAM {{by reducing the}} number of text rows and inserting blank scan lines below each row. Mode 6 was the smallest, allocating 8 KB as video memory. Modes 0 to 6 could show diacritics and other <b>user</b> <b>defined</b> characters. All modes except 7 supported bitmapped graphics, but graphics commands such as DRAW and PLOT had no effect in the text-only modes.|$|E
30|$|After handing in the {{solution}} to the final <b>user,</b> <b>defining</b> strategies for gathering feedback from him and from his caregivers on the daily use of the technology developed. Those strategies may include field diaries, software monitoring, periodical meetings, observation of use, focus groups with therapists, etc.|$|R
5000|$|The {{firmware}} on {{some high}} end Samsung plasma TVs moves the video horizontally and vertically so many pixels every few minutes. [...] Some TVs even allow the <b>user</b> <b>define</b> {{the number of}} pixels moved and their interval. On Panasonic Plasma TVs this technique is named Pixel Orbiter.|$|R
30|$|There are {{two main}} {{flavours}} of subspace clustering available in the literature: top down and bottom up. In top down approaches, the <b>user</b> <b>defines</b> the number of clusters {{and the number of}} relevant subspaces [30, 31]. It is not possible to automatically find all possible clusters in all the subspaces using this method.|$|R
2500|$|Microsoft SQL Server 2005 {{includes}} a component named SQL CLR ("Common Language Runtime") via which it integrates with [...]NET Framework. Unlike most other applications that use [...]NET Framework, SQL Server itself hosts the [...]NET Framework runtime, i.e., memory, threading and resource management requirements of [...]NET Framework are satisfied by SQLOS itself, {{rather than the}} underlying Windows operating system. SQLOS provides deadlock detection and resolution services for [...]NET code as well. With SQL CLR, stored procedures and triggers can be written in any managed [...]NET language, including C# and VB.NET. Managed code {{can also be used}} to define UDT's (<b>user</b> <b>defined</b> types), which can persist in the database. Managed code is compiled to CLI assemblies and after being verified for type safety, registered at the database. After that, they can be invoked like any other procedure. However, only a subset of the Base Class Library is available, when running code under SQL CLR. Most APIs relating to user interface functionality are not available.|$|E
5000|$|... mXparser {{delivers}} functionalities such as: basic calculations, built-in constants and functions, numerical calculus operations, iterated operators, <b>user</b> <b>defined</b> constants, <b>user</b> <b>defined</b> functions, <b>user</b> <b>defined</b> recursion.|$|E
50|$|Apache Hive defines, in {{addition}} to the regular <b>user</b> <b>defined</b> functions (UDF), also <b>user</b> <b>defined</b> aggregate functions (UDAF) and table-generating functions (UDTF). Hive enables developers to create their own custom functions with Java.|$|E
5000|$|Analytics, {{especially}} {{forward looking}} or prospective analytics requires interactive modeling, [...] "what if", and experimentation {{of the kind}} that most business analysts do with spreadsheets. This interaction with the data is enabled by the spreadsheet’s cell orientation and its ability to let <b>users</b> <b>define</b> cells calculated as a function of other cells.|$|R
30|$|S 3 {{supports}} flexible <b>user</b> {{requirements in}} <b>defining</b> sensitive data. It enables <b>users</b> to <b>define</b> sensitive data on demand by providing initial concepts. Then S 3 {{is able to}} automatically identify unseen sensitive data by learning from the concepts.|$|R
5000|$|Which will render in the <b>User</b> {{component}} <b>defined</b> in (const <b>User...)</b> ...|$|R
