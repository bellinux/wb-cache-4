6636|10000|Public
5|$|The next {{landmark}} {{decision of}} the U.S. Supreme Court involving the Oregon Supreme Court was Dolan v. City of Tigard, 512 U.S. 374 (1994). In that land <b>use</b> <b>case</b> the Oregon court found the requirements placed on the business owner as conditions to approve an expansion were not a taking under the United States Constitution’s takings clause. However, the U.S. Supreme Court disagreed and overturned the Oregon court. Then the Oregon court ruled in February 2006 that Oregon’s land use law, Measure 37, was constitutional. Macpherson v. Department of Administrative Services, 340 Or. 117, 130 P.3d 308 (2006) allowed people to make claims against the government forcing the government to either pay compensation when land use regulations reduced {{the value of a}} property owners land or waive the regulation.|$|E
25|$|Variations on {{this system}} exist that <b>use</b> <b>case</b> to convey more information. Within the BDSM and D/s subcultures, {{upper and lower}} case letters can signify {{dominant}} (or top) and submissive (or bottom).|$|E
25|$|Use {{cases are}} widely used system {{analysis}} modeling tools for identifying and expressing the functional requirements of a system. Each <b>use</b> <b>case</b> is a business scenario or event for which the system must provide a defined response. Use cases evolved from object-oriented analysis.|$|E
40|$|<b>Use</b> <b>Cases</b> that {{describe}} possible interactions involving a {{system and its}} environment are increasingly being accepted as effective means for requirements elicitation and analysis. In the current practice, informal definitions of <b>use</b> <b>cases</b> are <b>used</b> and the analysis process is manual. We present UCEd an environment for <b>use</b> <b>cases</b> based requirements engineering. UCEd includes tools for <b>use</b> <b>cases</b> edition {{in conjunction with a}} domain model, <b>use</b> <b>cases</b> integration and <b>use</b> <b>cases</b> simulation. 1...|$|R
40|$|This {{report is}} the first {{one of a series of}} reports {{establishing}} different <b>use</b> <b>cases.</b> Thus, this report is divided into a first section that outlines the methodology on how different <b>use</b> <b>cases</b> are established and a second part that describes some first initial <b>use</b> <b>cases.</b> All <b>use</b> <b>cases</b> will go through a consolidation process. Further <b>use</b> <b>cases</b> will emerge during the lifetime of the project and existing <b>use</b> <b>cases</b> will be amplified by different methods...|$|R
40|$|<b>Use</b> <b>Cases</b> that {{describe}} possible interactions involving a {{system and its}} environment are increasingly being accepted as effective means for functional requirements elicitation and analysis. In the current practice, informal definitions of <b>use</b> <b>cases</b> are <b>used</b> and the analysis process is manual. In this paper, we present an approach supported by a tool for <b>use</b> <b>cases</b> based requirements engineering. Our approach includes <b>use</b> <b>cases</b> formalization, a restricted form of natural language for <b>use</b> <b>cases</b> description, and the derivation of an executable specification {{as well as a}} simulation environment from <b>use</b> <b>cases.</b> Key words: <b>Use</b> <b>cases,</b> domain modeling, UML, requirements engineering, prototypin...|$|R
25|$|Domain algorithms, such as fever/flu/infection domain {{logic in}} the cited reference, {{are used to}} derive SQL code that applies the {{selected}} business rules to the <b>use</b> <b>case.</b> Using CVEs in SOA environments improve business agility because the application of SOA 2.0 principles identify business opportunities that would have otherwise been missed or identified much later.|$|E
25|$|Affective {{disorders}} {{have long}} been recognised as a complication of AAS <b>use.</b> <b>Case</b> reports describe both hypomania and mania, along with irritability, elation, recklessness, racing thoughts and feelings of power and invincibility that {{did not meet the}} criteria for mania/hypomania. Of 53 bodybuilders who used AAS, 27 (51%) reported unspecified mood disturbance.|$|E
25|$|The needed {{properties}} of a digital watermark {{depend on the}} <b>use</b> <b>case</b> {{in which it is}} applied. For marking media files with copyright information, a digital watermark has to be rather robust against modifications that {{can be applied to the}} carrier signal. Instead, if integrity has to be ensured, a fragile watermark would be applied.|$|E
40|$|We present UCEd a toolset for <b>use</b> <b>cases</b> edition, <b>use</b> <b>cases</b> verification, {{prototype}} generation, and simulation. UCEd accepts <b>use</b> <b>cases</b> {{expressed in}} a constrained form of natural language. UCEd integrates the <b>use</b> <b>cases</b> in finite state machines using domain knowledge, and provides an interface for system simulation. 1. Backgroun...|$|R
40|$|Essential <b>use</b> <b>cases</b> are an {{effective}} way to analyse the usability requirements for a system under development. Essential <b>use</b> <b>cases</b> are quite stylised — writing good essen-tial <b>use</b> <b>cases</b> is somewhat of a secret art. This paper casts the basics of writing essential <b>use</b> <b>cases</b> into the pattern form. Readers of this paper will be able to write better essential <b>use</b> <b>cases</b> quickly, making it easier to specify usable systems...|$|R
5000|$|... <b>use</b> <b>cases,</b> basic {{course or}} events/alternate paths in <b>use</b> <b>cases</b> ...|$|R
25|$|It {{supports}} UML activity diagram, component diagram, (logical) class diagram, sequence diagram, and <b>use</b> <b>case</b> diagram. Visual Studio Ultimate 2010 {{also includes}} Test Impact Analysis which provides hints on which test cases are impacted by {{modifications to the}} source code, without actually running the test cases. This speeds up testing by avoiding running unnecessary test cases.|$|E
25|$|While Java was {{originally}} made for e.g. client-side applet use in web browsers (usage shifted {{mostly to the}} backend), major browsers no longer have applet support (nor is that <b>use</b> <b>case</b> officially supported by Oracle; neither do they or Apple support Java for macOS; outdated Windows XP is also no longer officially supported, and Microsoft in general hindered use of unchanged Java with their Windows operating system, for a time competing with a J# language).|$|E
25|$|Another common {{feature of}} polysynthetic {{languages}} {{is a tendency}} to use head marking as a means of syntactic cohesion. This means that many polysynthetic languages mark grammatical relations between verbs and their constituents by indexing the constituents on the verb with agreement morphemes, and the relation between noun phrases and their constituents by marking the head noun with agreement morphemes. There are some dependent-marking languages that may be considered to be polysynthetic because they <b>use</b> <b>case</b> stacking to achieve similar effects, and very long words.|$|E
5000|$|<b>Use</b> <b>cases</b> can be over-emphasized. Bertrand Meyer {{discusses}} {{issues such}} as driving system design too literally from <b>use</b> <b>cases,</b> and <b>using</b> <b>use</b> <b>cases</b> {{to the exclusion of}} other potentially valuable requirements analysis techniques.|$|R
40|$|Agile teams {{commonly}} use User Stories, {{conversations with}} Customers, and Test Cases to gather requirements. Some agile teams {{like to add}} other artifacts, such as <b>Use</b> <b>Cases</b> to provide more detail to the agile requirements. This paper {{presents the results of}} a controlled experiment aimed to find evidence that <b>Use</b> <b>Cases</b> could help agile requirements, and, indirectly, to find if agile requirements techniques are sufficient. In the study, subjects were given requirements for three maintenance tasks as <b>Use</b> <b>Cases,</b> as agile requirements, or both. We found that subjects <b>using</b> <b>Use</b> <b>Cases</b> spent less time understanding requirements in contrast to subjects not <b>using</b> <b>Use</b> <b>Cases.</b> In addition the presence of the <b>Use</b> <b>Cases</b> helped subjects to ask better questions to the On-site Customer. However, we could not determine if subjects <b>using</b> <b>Use</b> <b>Cases</b> understood the requirements better. We conclude that the inclusion of <b>Use</b> <b>Cases</b> in agile requirements could benefit agile teams. 1...|$|R
40|$|One of {{the main}} motivations for {{essential}} <b>use</b> <b>cases</b> was the context of user interface design. We, however, have been exploring the application of essential <b>use</b> <b>cases</b> in general object-oriented system development. Our experience has been ve ry positive, and we found advantages to essential <b>use</b> <b>cases</b> that assist in both analysis and in design. This paper outlines two techniques involving essential use cases: use of role-play in requirements analysis, and distribution of system requirements fro m essential <b>use</b> <b>cases</b> to objects. [Keywords: object-oriented design, usage-centered design, essential <b>use</b> <b>cases,</b> software engineering, user interfaces...|$|R
25|$|Another problem {{faced with}} PID {{controllers}} {{is that they}} are linear, and in particular symmetric. Thus, performance of PID controllers in non-linear systems (such as HVAC systems) is variable. For example, in temperature control, a common <b>use</b> <b>case</b> is active heating (via a heating element) but passive cooling (heating off, but no cooling), so overshoot can only be corrected slowly – it cannot be forced downward. In this case the PID should be tuned to be overdamped, to prevent or reduce overshoot, though this reduces performance (it increases settling time).|$|E
25|$|Despite {{a shared}} {{belief in the}} {{potential}} of IoT, industry leaders and consumers are facing barriers to adopt IoT technology more widely. Mike Farley argued in Forbes that many IoT solutions either lack interoperability or a clear <b>use</b> <b>case</b> for end-users. “Instead of convincing consumers that they need complex systems to serve needs they don’t have, we should fix real problems people struggle with every day.” Many gadgets in the consumer IoT space have appealed to early adopters, yet failed to demonstrate relevance to ordinary people’s lives. “In order to boost sales and drive demand beyond the early adopter set, {{we need to stop}} making toys no one cares about and instead work on building simple solutions to real, everyday problems for real people.” A recent study by Ericsson regarding the adoption of IoT among Danish companies, has suggested that many are struggling “to pinpoint exactly where the value of IoT lies for them”. A company must identify where the value of IoT lies in order to capture it, otherwise non-action is the consequence. This indicates that a major roadblock to IoT adoption is not technical but analytical in nature.|$|E
500|$|A <b>use</b> <b>case</b> of this {{function}} is to replace in an expression a NULL by a value like in [...] NVL(SALARY, 0) which says, 'if SALARY is NULL, replace it with the value 0'.|$|E
40|$|<b>Use</b> <b>cases</b> {{are often}} very {{powerful}} and are popular {{to use when}} defining functional requirements for a system. UML supports the <b>use</b> of <b>use</b> <b>cases</b> in object-oriented systems development. However {{it is not always}} clear for systems developers on how to <b>use</b> <b>use</b> <b>cases.</b> It can be very confusing in knowing what to include or how to structure <b>use</b> <b>cases.</b> In this study a weather station system has been analysed with an object-oriented approach. Some problems occurred on how to structure scenarios and <b>use</b> <b>cases.</b> Problems also arose on what to describe in the <b>use</b> <b>cases.</b> The problems were analysed and assessed in this paper. The paper points out that the need for guidelines is of great importance...|$|R
40|$|This {{deliverable}} specifies <b>use</b> <b>cases</b> {{based on}} bioinformatics research {{carried out by}} members of A 2. The <b>use</b> <b>cases</b> involve the <b>use</b> of rules to reason over ontologies and pathways (Dresden, Edinburgh, Paris, Linköping) and rules to specify workflows to integrate bioinformatics data (Lisbon, Skövde, Jena, Bucharest). The <b>use</b> <b>cases</b> are designed as a reference point to foster the take up of A 2 <b>use</b> <b>cases</b> by I-workpackages. Most notably, many of the <b>use</b> <b>cases</b> specify the need for querying and reactivity with languages like Xcerpt (I 4), Erus (I 5) and Prova (I 5). The <b>use</b> <b>cases</b> range from basic research applications to fully deployed software with an international user base...|$|R
5000|$|Can support white-labeled, {{multi-function}} but single application <b>use</b> <b>cases,</b> as well {{as single}} app, single function <b>use</b> <b>cases</b> ...|$|R
500|$|The {{picture has}} been parodied several times, {{including}} for advertising [...] (1994). This {{led to the}} 1998 Second Circuit fair <b>use</b> <b>case</b> Leibovitz v. Paramount Pictures Corp. In addition to being satirically parodied and popularizing pregnancy photographs, there was also backlash. [...] Critics rated it grotesque and obscene, {{and it was also}} seriously considered when Internet decency standards were first being legislated and adjudicated. [...] Others thought it was a powerful artistic statement.|$|E
2500|$|... A YouTube {{movie on}} BPM {{approaches}} explaining the <b>use</b> <b>case</b> of BPM.|$|E
2500|$|Grinding {{wheels are}} consumables, {{although}} {{the life span}} can vary widely depending on the <b>use</b> <b>case,</b> from {{less than a day}} to many years. As the wheel cuts, it periodically releases individual grains of abrasive, typically because they grow dull and the increased drag pulls them out of the bond. Fresh grains are exposed in this wear process, which begin the next cycle. The rate of wear in this process is usually very predictable for a given application, and is necessary for good performance.|$|E
40|$|This paper {{highlights}} the preliminary {{results of a}} survey that is currently being conducted to identify if and how <b>use</b> <b>cases</b> are employed by professionals and researchers. In addition, this paper summarizes common problems and issues encountered by software practitioners while working with <b>use</b> <b>cases.</b> The analysis results of the survey are helpful for practitioners in terms of deciding when or when not to employ <b>use</b> <b>cases</b> and provide guidance while working with <b>use</b> <b>cases...</b>|$|R
5000|$|... ::UUCW = (Total No. of Simple <b>Use</b> <b>Cases</b> x 5) + (Total No. Average <b>Use</b> <b>Cases</b> x 10) + (Total No. Complex <b>Use</b> <b>Cases</b> x 15)::For the Online Shopping System, the UUCW = (2 x 5) + (3 x 10) + (4 x 15) = 100::UUCW = 100 ...|$|R
40|$|Business process {{management}} (BPM) has {{developed as a}} research field primarily situated in the computer and information systems sciences. Recently, van der Aalst (2013) analyzed {{the results of these}} research efforts and identified a set of research topics {{in the form of a}} series of BPM research <b>use</b> <b>cases.</b> Those BPM research <b>use</b> <b>cases</b> emphasize technological and computational challenges and solutions. Ideally, however, BPM research should also address managerial and organizational challenges that the existing technically oriented research <b>use</b> <b>cases</b> do not fully reflect. We propose expanding the scope and impact of BPM research by drawing on work system theory (WST) to identify new BPM research <b>use</b> <b>cases</b> and directions. After comparing a WST perspective on basic BPM topics with the technically oriented BPM perspective expressed in van der Aalst (2013), we present new research topics that extend the technically oriented BPM research <b>use</b> <b>cases</b> in van der Aalst (2013). We also present new research directions that go beyond those <b>use</b> <b>cases.</b> Taken together, the extensions of the existing research <b>use</b> <b>cases</b> and the new <b>use</b> <b>cases</b> lead to a more balanced BPM research agenda that more fully blends technical and managerial challenges...|$|R
2500|$|Since the {{inception}} of Function Point Analysis, several variations have evolved and the family of functional sizing techniques has broadened to include such sizing measures as COSMIC, NESMA, <b>Use</b> <b>Case</b> Points, FP Lite, Early and Quick FPs, and most recently Story Points. However, Function Points {{has a history of}} statistical accuracy, and {{has been used as a}} common unit of work measurement in numerous application development management (ADM) or outsourcing engagements, serving as the [...] "currency" [...] by which services are delivered and performance is measured.|$|E
2500|$|According to Pruitt and Adlin, {{the use of}} personas {{offers several}} {{benefits}} in product development. Personas {{are said to be}} cognitively compelling because they put a personal human face on otherwise abstract data about customers. By thinking about the needs of a fictional persona, designers may be better able to infer what a real person might need. Such inference may assist with brainstorming, <b>use</b> <b>case</b> specification, and features definition. Pruitt and Adlin argue that personas are easy to communicate to engineering teams and thus allow engineers, developers, and others to absorb customer data in a palatable format. [...] They present several examples of personas used for purposes of communication in various development projects.|$|E
2500|$|While {{disruptive}} innovation will typically [...] "attack a traditional business {{model with a}} lower-cost solution and overtake incumbent firms quickly," [...] foundational innovation is slower, and typically {{has the potential to}} create new foundations for global technology systems over the longer term. Foundational innovation tends to transform business operating models as entirely new business models emerge over many years, with gradual and steady adoption of the innovation leading to waves of technological and institutional change that gain momentum more slowly. [...] The advent of the packet-switched communication protocol TCP/IP—originally introduced in 1972 to support a single <b>use</b> <b>case</b> for United States Department of Defense electronic communication (email), and which gained widespread adoption only in the mid-1990s {{with the advent of the}} World Wide Web—is a foundational technology.|$|E
40|$|The {{contribution}} presents {{methodology of}} functional requirements specification {{of the system}} ERTMS/ETCS. This methodology is based on <b>Use</b> <b>Cases</b> of Unified Modelling Language. In the first part there is a brief introduction to <b>Use</b> <b>Cases</b> - their description, aim and structure. Next there is a description of particular parts of <b>Use</b> <b>Cases,</b> their aim, qualities and their mutual relationships with respecting solved problem. The following part is dedicated to relationships between particular <b>Use</b> <b>Cases</b> and their hierarchical arrangement. There are also mentioned the relationships to the following steps of the functional requirements specification and to verification and validation activities in the contribution. Also <b>Use</b> <b>Cases</b> management problem is presented...|$|R
40|$|This {{document}} discusses both <b>use</b> <b>cases</b> {{and operational}} experience with Multipath TCP {{in real world}} networks. It lists several prominent <b>use</b> <b>cases</b> for which Multipath TCP has been considered and is being used. It also gives insight to some heuristics and decisions that have helped to realize these <b>use</b> <b>cases...</b>|$|R
50|$|The US National Highway Traffic Safety Administration’s (NHTSA) report “Vehicle-to-Vehicle Communications: Readiness of V2V Technology for Application“ {{lists the}} initial <b>use</b> <b>cases</b> envisioned for the US. European {{standardisation}} body ETSI and SAE published standards {{on what they}} see as <b>use</b> <b>cases.</b> Early <b>use</b> <b>cases</b> focus on road safety and efficiency.|$|R
