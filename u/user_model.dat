1344|6923|Public
50|$|Extensive {{research}} has been done with the Super <b>User</b> <b>Model</b> in SAP, specifically in regard to the role they take in training and supporting end users. Currently, more than 70% of SAP companies utilize a form of the Super <b>User</b> <b>Model.</b>|$|E
5000|$|ASReml-R {{statistical}} R {{package to}} allow <b>user</b> <b>model</b> complex data.|$|E
50|$|The {{collection}} of user-related data in human-computer interaction {{is used to}} adapt the computer interface to the end user. The data collected are used to build a <b>user</b> <b>model.</b> The <b>user</b> <b>model</b> is then used to help the application to filter the information for the end user. Such systems are useful in recommender applications, military applications (implicit stress detection) and others.|$|E
40|$|In {{this paper}} the {{definitions}} of and approaches to <b>user</b> <b>modeling</b> in natural language dialog systems have been reviewed. The contents of <b>user</b> <b>models</b> are discussed; how <b>user</b> <b>modeling</b> in di#erent research areas relates to <b>user</b> <b>modeling</b> are reviewed; examples of some techniques for building <b>user</b> <b>models</b> through natural language interaction and observed behavior in other media channels are given. Furthermore, the uses of <b>user</b> <b>models</b> in natural language dialog systems are discussed, {{as well as the}} implications of employing <b>user</b> <b>models.</b> It is concluded that natural language aspects of <b>user</b> <b>modeling</b> is needed to complement traditional <b>user</b> <b>modeling</b> in high-functionality applications...|$|R
40|$|Abstract. This paper {{outlines}} a {{new approach}} for decentralized agent based <b>user</b> <b>modelling</b> using a taxonomy of purposes that define a variety of contextdependent <b>user</b> <b>modelling</b> processes rather than creating and maintaining a single centralized <b>user</b> <b>modelling</b> server. This approach {{can be useful in}} distributed environments where autonomous agents develop <b>user</b> <b>models</b> independently and do not necessarily adhere to a common representation scheme. 1 Decentralized active <b>user</b> <b>modelling</b> Traditionally <b>user</b> <b>modelling</b> has focused on creating and maintaining a single global description of the user used internally in an application for some purpose defined at design time [1]. Knowledge representation is a key issue in this kind of traditional <b>user</b> <b>modelling.</b> With the emergence of networked applications, <b>user</b> <b>modelling</b> servers have been proposed [2] to store data {{that can be used to}} support adaptation in several networked applications. <b>User</b> <b>modelling</b> servers provide a centralized solution: <b>user</b> <b>models</b> are stored in centralized or virtually centralized repository. Even if th...|$|R
40|$|We {{propose a}} {{technique}} for <b>user</b> <b>modeling</b> in Adaptive Hypermedia (AH) that is unobtrusive {{at both the}} level of observable behavior and that of cognition. Unobtrusive <b>user</b> <b>modeling</b> is complementary to transparent <b>user</b> <b>modeling.</b> Unobtrusive <b>user</b> <b>modeling</b> induces <b>user</b> <b>models</b> appropriate for Educational AH (EAH) based on metaphors characterized by a shared locus of control over learning, such as small group learning. Transparent <b>user</b> <b>modeling,</b> on the other hand, induces <b>user</b> <b>models</b> appropriate for EAH based on metaphors characterized by an independent locus of control, such as social navigation. We extend an existing decomposition model of adaptation in AH to incorporate summative evaluation of unobtrusive <b>user</b> <b>modeling.</b> Summative evaluation examines the effects or outcomes of a system, while formative evaluation is used to improve a system under development. We also introduce a separate, two-stage model for formative evaluation of unobtrusive <b>user</b> <b>modeling.</b> We then present results from a field study {{for the first of}} the two developmental stages and describe the current field study of the second developmental stage. Finally, we compare unobtrusive and transparent <b>user</b> <b>modeling,</b> and explain the role of each...|$|R
5000|$|A hybrid {{approach}} which {{asks for}} explicit feedback and alters the <b>user</b> <b>model</b> by adaptive learning ...|$|E
5000|$|<b>User</b> <b>model</b> (represents the {{different}} characteristics of end users and the roles {{they are playing}} within the organization) ...|$|E
50|$|To {{support the}} re-use of common {{modeling}} components, AIMMS allows modelers to organize their model in <b>user</b> <b>model</b> libraries.|$|E
40|$|Abstract. This poster {{outlines}} a {{new approach}} for decentralized <b>user</b> <b>modelling</b> using a taxonomy of purposes that define a variety of context-dependent <b>user</b> <b>modelling</b> processes rather than creating and maintaining a single centralized <b>user</b> <b>modelling</b> server. This approach {{can be useful in}} distributed environments where autonomous agents develop <b>user</b> <b>models</b> independently and do not necessarily adhere to a common representation scheme. ...|$|R
40|$|Abstract. The {{current state}} of affairs in <b>user</b> <b>modeling</b> is that <b>user</b> <b>models</b> are {{developed}} ad-hoc, {{as part of a}} specific application. The proprietary <b>user</b> <b>models</b> are evidence of the lack of standard user-modeling processes and the amount of unnecessary rework done. Nowadays, when people tend to share information, open source is available, and Component-based software development is a common practice, it is time to adopt it for <b>user</b> <b>modeling</b> as well. The Component-based user-modeling approach suggests a practical alternative to the ad-hoc development of user models: user-modeling components that can evolve and be developed collaboratively and incrementally by the <b>user</b> <b>modeling</b> community, enabling reuse and flexibility, leading towards new and advanced <b>user</b> <b>models</b> built from existing components...|$|R
40|$|While <b>user</b> <b>modelling</b> {{has become}} a mature field with {{demonstrable}} research systems of great power, comparatively little {{progress has been made}} in the development of <b>user</b> <b>modelling</b> components for commercial software systems. The development of minimalist <b>user</b> <b>modelling</b> components, simplified to provide just enough assistance to a user through a pragmatic adaptive user interface, is seen by many as an important step toward this goal. This paper describes the development, implementation, and empirical evaluation of a minimalist <b>user</b> <b>modelling</b> component for TIMS, a complex commercial software system for financial management. The experimental results demonstrate that a minimalist <b>user</b> <b>modelling</b> component does improve the subjective measure of user satisfaction. Important issues and considerations for the development of <b>user</b> <b>modelling</b> components for commercial software systems are also discussed. 1 Introduction: Pragmatic <b>User</b> <b>Modelling</b> Modern software systems are complex, and they often s [...] ...|$|R
50|$|Earlier {{research}} {{within the}} discipline of information systems especially within the topic of technology acceptance and technology adoption {{is closely related to}} the lazy <b>user</b> <b>model.</b>|$|E
5000|$|Durango later {{dropped the}} [...] "F-85" [...] model name and adopted a <b>user</b> <b>model</b> system, with 700 being the entry model and 950 being the full-featured model.|$|E
5000|$|The XML Library {{provides}} a simple [...] "pull-style" [...] parser for XML. It {{is designed for}} resource-constrained devices, yet {{provides a}} simple <b>user</b> <b>model.</b> It defines types in the following namespace.|$|E
40|$|The {{rapid growth}} of location-based services(LBSs) has greatly enriched people's urban lives and {{attracted}} millions of users in recent years. Location-based social networks(LBSNs) allow users to check-in at a physical location and share daily tips on points-of-interest (POIs) with their friends anytime and anywhere. Such check-in behavior can make daily real-life experiences spread quickly through the Internet. Moreover, such check-in data in LBSNs can be fully exploited to understand the basic laws of human daily movement and mobility. This paper focuses on reviewing the taxonomy of <b>user</b> <b>modeling</b> for POI recommendations through the data analysis of LBSNs. First, we briefly introduce the structure and data characteristics of LBSNs,then we present a formalization of <b>user</b> <b>modeling</b> for POI recommendations in LBSNs. Depending on which type of LBSNs data was fully utilized in <b>user</b> <b>modeling</b> approaches for POI recommendations, we divide <b>user</b> <b>modeling</b> algorithms into four categories: pure check-in data-based <b>user</b> <b>modeling,</b> geographical information-based <b>user</b> <b>modeling,</b> spatio-temporal information-based <b>user</b> <b>modeling,</b> and geo-social information-based <b>user</b> <b>modeling.</b> Finally,summarizing the existing works, we point out the future challenges and new directions in five possible aspect...|$|R
40|$|The design {{options in}} resolving {{heterogeneous}} data source access {{from a single}} query, and for a supporting <b>user</b> <b>modelling</b> component are discussed. The MIPS system is used as an example to consider the role of <b>user</b> <b>modelling</b> in automatically generating hypermedia presentations of the information retrieved from such distributed data sources whose semantics are unknown to its <b>users.</b> A <b>user</b> <b>modelling</b> component from a previous system {{was able to be}} used, showing its portability. The opportunities for the application of <b>user</b> <b>modelling</b> to tailor the retrieval and presentation process are investigated, not only for query construction and information filtering, but throughout the entire process. Keywords <b>user</b> <b>modelling,</b> multidatabase, intelligent interface INTRODUCTION The traditional use for <b>user</b> <b>modelling</b> in information retrieval [1] and filtering [2] tasks had been to establish a description of users' interests to supplement queries. <b>User</b> <b>models</b> are generally acquired actively by asking [...] ...|$|R
40|$|In many <b>user</b> <b>modeling</b> systems, {{assumptions}} about the user and other <b>user</b> <b>modeling</b> knowledge are represented in a knowledge base and used for individualized behavior of applications. Hence, <b>user</b> <b>modeling</b> shell systems need to support both representation and use of knowledge. Ideally, a shell provides powerful techniques for applications with sophisticated needs but is also flexible enough to be suitable for applications with specialized, less complex requirements. This paper describes two mechanisms that were developed for increasing the flexibility of <b>user</b> <b>modeling</b> shell systems: the AsTRa (Assumption Type Representation) framework for powerful and flexible logic-based representation of <b>user</b> <b>modeling</b> knowledg...|$|R
50|$|An {{adaptive}} {{hypermedia system}} should satisfy three criteria: {{it should be}} a hypertext or hypermedia system, it should have a <b>user</b> <b>model</b> and {{it should be a}}ble to adapt the hypermedia using the model.|$|E
5000|$|... link sorting - all {{the links}} on a {{particular}} page are sorted according to the <b>user</b> <b>model</b> and to some goal-oriented criteria: the more towards {{the top of the}} page, the more relevant the link is, ...|$|E
50|$|The system {{categories}} in which user modelling and adaptivity {{have been deployed}} by various researchers in the field share an underlying architecture. The conceptual structure for adaptive systems generally consists of interdependent components: a <b>user</b> <b>model,</b> a domain model and an interaction model.|$|E
40|$|The {{fields of}} <b>user</b> <b>modeling</b> and natural {{language}} processing have been closely linked {{since the early days}} of <b>user</b> <b>modeling.</b> Natural language systems consult <b>user</b> <b>models</b> in order to improve their understanding of users' requirements and to generate appropriate and relevant responses. At the same time, the information natural language systems obtain from their users is expected to increase the accuracy of their <b>user</b> <b>models.</b> In this paper, we review natural language systems for generation, understanding and dialogue, focusing on the requirements and limitations these systems and <b>user</b> <b>models</b> place on each other. We then propose avenues for future research...|$|R
40|$|Abstract. Despite {{the growing}} {{popularity}} of <b>user</b> <b>modeling</b> servers, little {{attention has been paid to}} optimizing and evaluating the performance of these servers. We argue that implementation issues and their influence on server performance should become the central focus of the <b>user</b> <b>modeling</b> community, since there is a sharply increasing real-life load on <b>user</b> <b>modeling</b> servers, This paper focuses on a specific implementation-level aspect of <b>user</b> <b>modeling</b> servers – the choice of push or pull approaches to evidence propagation. We present a new push-based implementation of our <b>user</b> <b>modeling</b> server CUMULATE and compare its performance with the performance of the original pull-based CUMULATE server. ...|$|R
40|$|<b>User</b> <b>models</b> {{are useful}} to {{automatically}} adapt software or information to specific users. Because crafting <b>user</b> <b>models</b> by hand is labor intensive, machine learning techniques {{are used to}} construct <b>user</b> <b>models.</b> In this paper we illustrate how via instance based techniques <b>user</b> <b>modeling</b> tasks can be performed, based on sequences of observed user actions. We compare this approach with a common classification approach on real world data and briefly sketch how this technique is also useful when dealing with non-labeled data...|$|R
50|$|Beginning with Windows 7, some shortcuts also store Application <b>User</b> <b>Model</b> IDs (AppUserModelIDs). Instead of {{the target}} command line, AppUserModelIDs may {{directly}} be used to launch applications. Shortcuts with AppUserModelIDs are used by some desktop programs and all WinRT Modern/Universal Windows Platform apps for launching.|$|E
50|$|Bridging the {{knowledge}} {{gap between what}} users know and {{what they need to}} know about a specific system. Two issues need to be resolved: (i) Building a <b>user</b> <b>model</b> to access individual user's background knowledge on a specific system; (ii) Integrating the mechanism of evolutionary learning.|$|E
50|$|A {{user profile}} is a visual display of {{personal}} data {{associated with a}} specific user, or a customized desktop environment. A profile refers therefore to the explicit digital representation of a person's identity. A user profile {{can also be considered}} as the computer representation of a <b>user</b> <b>model.</b>|$|E
40|$|While <b>user</b> <b>modelling</b> has {{produced}} many research-based systems, comparatively little {{progress has been}} made in the development of <b>user</b> <b>modelling</b> components for commercial software systems. The development of minimalist <b>user</b> <b>modelling</b> components which are simplified to provide "just enough" assistance to a user through a pragmatic adaptive user interface is seen by many as an important step toward this goal. This paper describes the development, implementation, and evaluation of a minimalist <b>user</b> <b>modelling</b> component for the Tax and Investment Management Strategizer (TIMS), a complex commercial software system for financial management. This <b>user</b> <b>modelling</b> component manages several levels of adaptations designed to assist novice users in dealing with the complexity of this software package. Important issues and considerations for the development of <b>user</b> <b>modelling</b> components for commercial software systems and the evaluation of such systems in commercial settings are also discu [...] ...|$|R
40|$|This paper {{describes}} the <b>user</b> <b>modelling</b> approach applied in I-Help; a distributed multi-agent based collaborative environment for peer help. There is {{a multitude of}} <b>user</b> <b>modeling</b> information in I-Help, developed by the various software agents populating the environment. These “user model fragments ” have been created {{in a variety of}} specific contexts to help achieve various goals. They are inherently inconsistent with one another and reflect not only characteristics of the users, but also certain social relationships among them. The paper explores some of the implications of multi-agent <b>user</b> <b>modelling</b> in distributed environments. Key words: distributed <b>user</b> <b>modelling,</b> decentralized, multi-agent systems, agent negotiation, just in time <b>user</b> <b>modelling,</b> modelling interpersonal relationships, help-desk, expert finding, evaluation 1...|$|R
40|$|Contents 2 3 Introduction 1 1. 1 Logic-based <b>User</b> <b>Modeling</b> [...] 3 1. 1. 1 <b>User</b> <b>Models</b> and Knowledge Bases [...] . 3 1. 1. 2 <b>User</b> <b>Modeling</b> Shells and Deductive Knowledge Bases [...] . 4 1. 2 Other <b>User</b> <b>Modeling</b> Approaches [...] 6 1. 3 Assumption Types and Contents [...] 7 1. 4 <b>User</b> <b>Modeling</b> Shells: Power and Flexibility? [...] 8 1. 5 Overview [...] 12 Assumption Type Representation: a Review 2. 1 2. 2 2. 3 Types of Assumptions {{about the}} User [...] 15 Assumption Types and Graduation [...] . 18 The Partition Approach to Belief Modeling [...] . 20 2. 3. 1 Cohen's Nested Contexts [...] . 21 2. 3. 2 Contexts and Acceptance Attitudes in VIE-DPM [...] . 23 2. 3. 3 Partition {{hierarchies}} in BGP-MS [...] 25 2. 3. 4 Ballira's Nested Belief Models [...] 28 Combining Partitions and Logic [...] . 30 Logic for <b>User</b> <b>Modeling</b> 37 3. 1 Propositional Calculu...|$|R
5000|$|The <b>user</b> <b>model</b> is a {{representation}} of the knowledge and preferences which the system ‘believes’ a user (which may be an individual, a group of people or non-human agents) possesses. It is a knowledge source which is separable by the system from the rest of its knowledge and contains explicit assumptions about the user. Knowledge for the <b>user</b> <b>model</b> can be acquired implicitly by making inferences about users from their interaction with the system, by carrying out some form of test, or from assigning users to generic user categories usually called 'stereotypes'. The student model consists of a personal proﬁle (which includes static data, e.g., name and password), cognitive proﬁle (adaptable data such as preferences), and a student knowledge proﬁle. Systems may adapt, depending on user features such as: ...|$|E
5000|$|User model: This model {{realizes the}} user and its {{representation}} in the OpenTMS. The <b>user</b> <b>model</b> works in tight connection with the security. User does now only imply human users, but also other processes. User models have rights attached to them which in turn support the security model of OpenTMS.|$|E
5000|$|... {{conditional}} text - {{with this}} technique, all possible {{information about a}} concept is divided into several chunks of texts. Each chunk {{is associated with a}} condition on the level of user knowledge represented in the <b>user</b> <b>model.</b> When presenting the information about the concept, the system presents only the chunks where the condition is true.|$|E
40|$|Abstract — In this paper, {{we present}} a brief survey of {{different}} <b>user</b> <b>modelling</b> techniques used in human computer interaction. We have investigated {{about the origin of}} <b>user</b> <b>modelling</b> and then classified the existing models into different categories. We have discussed a few examples of <b>user</b> <b>models</b> in each category, pointed out their advantages and disadvantages and finally concluded by presenting a few open questions on <b>user</b> <b>modelling.</b> We hope this paper will help system analysts to select the proper type of model for their applications. Index Terms—User Model, Human Computer Interaction, Cognitive Model. ...|$|R
40|$|The focus if {{this paper}} is <b>user</b> <b>modeling</b> {{in the context of}} {{personalization}} of information systems. Such a personalization is essential to give users the feeling that the system is easily accessible. The way this adaptive personalization works is very dependent on the adaptation model that is chosen. We introduce a generic two-dimensional classification framework for <b>user</b> <b>modeling</b> systems. This enables us to clarify existing as well as new applications in the area of <b>user</b> <b>modeling.</b> In order to illustrate our framework we evaluate push and pull based <b>user</b> <b>modeling...</b>|$|R
40|$|While user-modeling and {{recommender}} systems successfully utilize {{items like}} emails, news, and movies, they widely neglect mind-maps {{as a source}} for <b>user</b> <b>modeling.</b> We consider this a serious shortcoming since we assume <b>user</b> <b>modeling</b> based on mind maps to be equally effective as <b>user</b> <b>modeling</b> based on other items. Hence, millions of mind-mapping users could benefit from user-modeling applications such as recommender systems. The objective of this doctoral thesis is to develop an effective user-modeling approach based on mind maps. To achieve this objective, we integrate a recommender system in our mind-mapping and reference-management software Docear. The recommender system builds <b>user</b> <b>models</b> based on the mind maps, and recommends research papers based on the <b>user</b> <b>models.</b> As part of our research, we identify several variables relating to mind-map-based <b>user</b> <b>modeling,</b> and evaluate the variables' impact on user-modeling effectiveness with an offline evaluation, a user study, and an online evaluation based on 430, 893 recommendations displayed to 4, 700 users. We find, among others, that the number of analyzed nodes, modification time, visibility of nodes, relations between nodes, and number of children and siblings of a node affect the effectiveness of <b>user</b> <b>modeling.</b> When all variables are combined in a favorable way, this novel approach achieves click-through rates of 7. 20 %, which is nearly twice as effective as the best baseline. In addition, we show that <b>user</b> <b>modeling</b> based on mind maps performs about as well as <b>user</b> <b>modeling</b> based on other items, namely the research articles users downloaded or cited. Our findings let us to conclude that <b>user</b> <b>modeling</b> based on mind maps is a promising research field, and that developers of mind-mapping applications should integrate recommender systems into their applications. Such systems could create additional value for millions of mind-mapping users. Comment: PhD Thesis, Otto-von-Guericke University Magdeburg, German...|$|R
