312|252|Public
5|$|At {{the time}} of his WSOP success, he was playing {{approximately}} 2,000 hands per day online at PokerStars under the <b>User</b> <b>ID</b> jcada99. Cada had been a professional poker player for six years at {{the time of}} his world championship. Between the end of 2008 and the 2009 November Nine, Cada had earned $551,788 online. Prior to the tournament, he had a $150,000 downswing that necessitated him finding a financial backer for the WSOP. Professional poker financiers Eric Haber and Cliff Josephy paid his entry fee in exchange for half of his winnings.|$|E
25|$|Under Unix, every running {{program has}} an {{associated}} <b>user</b> <b>id,</b> which normally {{corresponds to the}} user that started the process. This id largely dictates the actions permitted to the program. No outside process can change the <b>user</b> <b>id</b> of a running program. A Hurd process, on the other hand, runs under a set of user ids, which can contain multiple ids, one, or none. A sufficiently privileged process can add and remove ids to another process. For example, there is a password server that will hand out ids {{in return for a}} correct login password.|$|E
25|$|Cite the author's name, screen name, or <b>user</b> <b>ID,</b> etc. If {{the work}} is being {{published}} on the Internet, {{it is nice to}} link that name to the person's profile page, if such a page exists.|$|E
5000|$|The {{ability to}} permit files, {{not just to}} other <b>user</b> <b>IDs</b> and {{projects}} (aka groups), but to specific commands or programs and combinations of <b>user</b> <b>IDs,</b> projects, commands and programs.|$|R
5000|$|Ticket-issuing SAP {{system must}} be able to {{recognize}} <b>user's</b> <b>ID.</b>|$|R
5000|$|During the South Korean presidential election, 2012, {{an agent}} of South Korean National Intelligence Service, known by her last name Kim, created {{multiple}} <b>user</b> <b>IDs</b> in Todayhumor website and posted articles and comments. South Korean Police confirmed that she had signed up for 16 <b>user</b> <b>IDs</b> and made 288 clicks to express support or opposition to articles in Todayhumor. [...] They also confirmed that she posted articles to Todayhumor on politically sensitive topics including Jeju-do Naval Base and Four Major Rivers Project. Subsequently, the police announced that 5 <b>user</b> <b>IDs</b> out of 16 were used by others.|$|R
25|$|Up to 32 {{players are}} {{supported}} in each multiplayer match in Crysis multiplayer, which used the GameSpy Network and required {{the user to}} have an existing <b>user</b> <b>ID</b> or otherwise create a new one. There are two different modes, each with six available maps: Instant Action, a deathmatch type mode; and Power Struggle, which is played by two opposing teams, each trying to destroy the other's headquarters.|$|E
25|$|The Switch's user {{interface}} features tile-based access to games {{that are either}} present in the game card slot or stored within the unit's storage devices. It includes quick access buttons for a News feed from Nintendo, eShop access, and a photo album for screenshots captured during gameplay; the 4.0 update to the software in October 2017 also enabled capturing and sharing video from select games. A single Switch console supports up to eight user profiles, which each can be tied to a Nintendo Account <b>user</b> <b>ID.</b> Profiles can be represented by either a pre-made avatar from an internal gallery, or using a Mii. The Mii creator was upgraded with increased color options for aspects such as hair styles; however, it is integrated into the system settings, rather than being an independent application.|$|E
500|$|Slashdotters {{often use}} the {{abbreviation}} TFA {{which stands for}} The fucking article or [...] ("Read the fucking article"), which itself {{is derived from the}} abbreviation RTFM. Usage of this abbreviation often exposes comments from posters who have not read the article linked to in the main story. Slashdotters typically like to mock then United States Senator Ted Stevens' 2006 description of the Internet as a [...] "series of tubes" [...] or former Microsoft CEO Steve Ballmer's chair-throwing incident from 2005. Microsoft founder Bill Gates is a popular target of jokes by Slashdotters, and all stories about Microsoft were once identified with a graphic of Gates looking like a Borg from [...] Many Slashdotters have long talked about the supposed release of Duke Nukem Forever, which was promised in 1997 but was delayed indefinitely (the game was eventually released in 2011). References to the game are commonly brought up in other articles about software packages that are not yet in production even though the announced delivery date has long passed (see vaporware). Having a low Slashdot user identifier (<b>user</b> <b>ID)</b> is highly valued since they are assigned sequentially; having one is a sign that someone has an older account and has contributed to the site longer. For Slashdot's 10-year anniversary in 2007, one of the items auctioned off in the charity auction for the Electronic Frontier Foundation was a 3-digit Slashdot <b>user</b> <b>ID.</b>|$|E
5000|$|UNIX-style file modes, <b>user</b> <b>ids</b> {{and group}} ids, and file {{timestamps}} ...|$|R
5000|$|A formal {{authorization}} process {{shall be}} defined and followed for provisioning of <b>user</b> <b>IDs.</b>|$|R
40|$|This release {{includes}} two new command line options and similarly named Twarc methods: friend_ids and follower_ids. You {{can use them}} to lookup <b>user</b> <b>ids</b> for accounts that follow a given Twitter <b>user,</b> or <b>user</b> <b>ids</b> for accounts that a given Twitter user follows. % twarc. py [...] follower_ids HillaryClinton > followers. txt or % twarc. py [...] friend_ids HillaryClinton > friends. tx...|$|R
2500|$|This was not {{the first}} time {{comments}} made by Wilson caused problems for the talented left-hander. Wilson was a regular poster on the website [...] under the handle blueglovelefty and in 2005 he stated the average ballplayer is a douchebag. Wilson was later talked to by several team leaders on the Rangers, including Michael Young and Kevin Millwood. After the incident Wilson deleted his <b>user</b> <b>ID</b> and removed all posts from the web site.|$|E
2500|$|In early March 2011, DroidDream, a trojan rootkit exploit, was {{released}} to then-named Android Market {{in the form}} of several free applications that were, in many cases, pirated versions of existing priced apps. This exploit allowed hackers to steal information such as IMEI and IMSI numbers, phone model, <b>user</b> <b>ID,</b> and service provider. The exploit also installed a backdoor that allowed the hackers to download more code to the infected device. The exploit only affected devices running Android versions earlier than 2.3 [...] "Gingerbread". Google removed the apps from the Market immediately after being alerted, but the apps had already been downloaded more than 50,000 times, according to Android Polices estimate. Android Police wrote that the only method of removing the exploit from an infected device was to reset it to factory state, although community-developed solutions for blocking some aspects of the exploit were created. A few days later, Google confirmed that 58 malicious apps had been uploaded to Android Market, and had been downloaded to 260,000 devices before being removed from the store. Google emailed affected users with information that [...] "As far as we can determine, the only information obtained was device-specific (IMEI/IMSI, unique codes which are used to identify mobile devices, and the version of Android running on your device)" [...] as opposed to personal data and account information. It also announced a new [...] "remote kill" [...] functionality, alongside a security update, that lets Google remotely remove malicious apps from users' devices. However, days later, a malicious version of the security update was found on the Internet, though it did not contain the specific DroidDream malware. New apps featuring the malware, renamed DroidDream Light, surfaced the following June, and were also removed from the store.|$|E
5000|$|The saved <b>user</b> <b>ID</b> (...) is {{used when}} a program running with {{elevated}} privileges needs to temporarily do some unprivileged work: it changes its effective <b>user</b> <b>ID</b> from a privileged value (typically root) to some unprivileged one, and this triggers {{a copy of}} the privileged <b>user</b> <b>ID</b> to the saved <b>user</b> <b>ID</b> slot. Later, it can set its effective <b>user</b> <b>ID</b> back to the saved <b>user</b> <b>ID</b> (an unprivileged process can only set its effective <b>user</b> <b>ID</b> to three values: its real <b>user</b> <b>ID,</b> its saved <b>user</b> <b>ID,</b> and its effective user ID—i.e., unchanged) to resume its privileges.|$|E
40|$|UserFS {{provides}} egalitarian OS {{protection mechanisms}} in Linux. UserFS allows any user—not just the system administrator—to allocate Unix <b>user</b> <b>IDs,</b> to use chroot, {{and to set}} up firewall rules in order to confine untrusted code. One key idea in UserFS is representing <b>user</b> <b>IDs</b> as files in a /proc-like file system, thus allowing applications to manage <b>user</b> <b>IDs</b> like any other files, by setting permissions and passing file descriptors over Unix domain sockets. UserFS addresses several challenges in making <b>user</b> <b>IDs</b> egalitarian, including accountability, resource allocation, persistence, and UID reuse. We have ported several applications {{to take advantage of}} UserFS; by changing just tens to hundreds of lines of code, we prevented attackers from exploiting application-level vulnerabilities, such as code injection or missing ACL checks in a PHP-based wiki application. Implementing UserFS requires minimal changes to the Linux kernel—a single 3, 000 -line kernel module—and incurs no performance overhead for most operations, making it practical to deploy on real systems. ...|$|R
5000|$|User {{identity}} management integration (by binding <b>user</b> <b>IDs</b> to IP or MAC addresses for [...] "reputation") ...|$|R
3000|$|Cloud Server keeps user list UL, re-encryption key list RKL {{and the key}} for {{granting}} {{an attribute}} to secret key J. UL records <b>user’s</b> <b>ID,</b> <b>user’s</b> attribute information, secret key components, t [...]...|$|R
50|$|When {{the command}} is used without specifying the new <b>user</b> <b>id</b> as a command line argument, it {{defaults}} {{to using the}} superuser account (<b>user</b> <b>id</b> 0) of the system.|$|E
50|$|The set <b>user</b> <b>ID,</b> setuid, or SUID mode. When a {{file with}} setuid is executed, the {{resulting}} process will assume the effective <b>user</b> <b>ID</b> {{given to the}} owner class. This enables users to be treated temporarily as root (or another user).|$|E
50|$|In a Unix-like system, each user has a <b>user</b> <b>ID</b> number, {{which is}} what the kernel uses to {{distinguish}} users and to manage user permissions. <b>User</b> <b>ID</b> #0 is reserved as the superuser account, and is given permission to do anything on the system.|$|E
50|$|All DOLLx8 {{devices have}} an {{integrated}} unique vendor and product ID {{that consists of}} 12-digits hexadecimal values which includes Country Code, Company Code, Product ID, Manufacturer Product <b>ID,</b> <b>User's</b> Product <b>ID</b> and <b>User</b> sub-Product <b>ID.</b>|$|R
3000|$|... 2, respectively; {{the former}} will compute new (x,y) {{according}} new <b>user’s</b> <b>id,</b> {{and the latter}} will re-randomize the random number.|$|R
3000|$|... [...]. In {{order to}} resolve user {{permutation}} and shift ambiguities, {{one can use}} <b>user</b> <b>IDs</b> embedded in the data [17].|$|R
50|$|The <b>User</b> <b>ID</b> of the file's owner.|$|E
5000|$|Linux {{also has}} a file system <b>user</b> <b>ID</b> (...) which is used {{explicitly}} for access control to the file system. It matches the [...] unless explicitly set otherwise. It may be root's <b>user</b> <b>ID</b> only if , , or [...] is root. Whenever the [...] is changed, the change is propagated to the [...]|$|E
5000|$|Windows NT domain {{controller}} (i.e., <b>User</b> <b>ID</b> and password verification) ...|$|E
30|$|For each tweet {{passing the}} {{logistic}} regression filter, we identify <b>user</b> <b>IDs</b> {{of all the}} tweet’s retweeters. <b>User</b> <b>IDs</b> are then fed into our user geocoder and filtered based {{on whether or not}} they center in Latin America. We assign a latitude and longitude to the forecast event using a robust estimate of the center of the retweeter’s locations, i.e. the forecast location is the l 1 -multivariate median [18] of the retweeter locations.|$|R
40|$|Access {{control in}} Unix systems is mainly based on <b>user</b> <b>IDs,</b> yet the system calls that modify <b>user</b> <b>IDs</b> (uid-setting system calls), such as setuid, are poorly designed, insufficiently documented, and widely {{misunderstood}} and misused. This has caused many security vulnerabilities in application programs. We propose {{to make progress}} on the setuid mystery through two approaches. First, we study kernel sources and compare the semantics of the uid-setting system calls in three major Unix systems: Linux, Solaris, and FreeBSD. Second, we develop a formal model of <b>user</b> <b>IDs</b> as a Finite State Automaton (FSA) and develop new techniques for automatic construction of such models. We use the resulting FSA to uncover pitfalls in the Unix API of the uid-setting system calls, to identify differences in the semantics of these calls among various Unix systems, to detect inconsistency in the handling of <b>user</b> <b>IDs</b> within an OS kernel, and to check the proper usage of these calls in programs automatically. Finally, we provide general guidelines on the proper usage of the uid-setting system calls, and we propose a high-level API that is more comprehensible, usable, and portable than the usual Unix API. ...|$|R
3000|$|... where SUID is the {{secondary}} <b>user's</b> <b>ID</b> (or its agent's identification) {{and it is}} used to help PU to reply back to the corresponding SU, [...]...|$|R
5000|$|HTTP page content {{including}} page title, <b>user</b> <b>ID,</b> and transaction values ...|$|E
5000|$|<b>User</b> <b>id</b> and {{password}} {{maintained in}} an encrypted file by OS 2200 ...|$|E
50|$|Zombie cookies {{allow the}} web traffic {{tracking}} companies to retrieve {{information such as}} previous unique <b>user</b> <b>ID</b> and continue tracking personal browsing habits. When the <b>user</b> <b>ID</b> is stored outside of a single browser's cookie storage, such as in a header injected by the network into HTTP requests, zombie cookies can track users across browsers on the same machine.|$|E
50|$|Panvalet {{can be used}} {{to manage}} program source code, JCL, and object module files. It {{supports}} granular access controls including check-in and check-out by specific mainframe <b>user</b> <b>IDs.</b>|$|R
50|$|IBM Enterprise Identity Mapping (EIM) is a {{framework}} from IBM {{that allows the}} mapping of different identities (<b>user</b> <b>IDs)</b> on various platforms, user repositories and applications to a single identity.|$|R
5000|$|Depending on the script, {{this may}} expose the /etc/passwd file, which on Unix-like systems {{contains}} (among others) <b>user</b> <b>IDs,</b> their login names, home directory paths and shells. (See SQL injection {{for a similar}} attack.) ...|$|R
