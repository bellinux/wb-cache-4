226|249|Public
25|$|OpenID {{is a way}} to use {{a single}} set of <b>user</b> <b>credentials</b> to access {{multiple}} sites, while OAuth facilitates the authorization of one site to access and use information related to the user's account on another site. Although OAuth is not an authentication protocol, it can be used as part of one. The following drawing highlights the differences between using OpenID vs. OAuth for authentication. Note that with OpenID, the process starts with the application asking the user for their identity (typically an OpenID URI), whereas in the case of OAuth, the application directly requests a limited access OAuth Token (valet key) to access the APIs (enter the house) on user's behalf. If the user can grant that access, the application can retrieve the unique identifier for establishing the profile (identity) using the APIs.|$|E
2500|$|Winlogon can be {{configured}} to use {{a different}} GINA, providing for non-standard authentication methods such as smart card readers or identification based on biometrics, or to provide an alternate visual interface to the default GINA. [...] Developers who implement a replacement GINA are required to provide implementations {{for a set of}} API calls which cover functionality such as displaying a [...] "workstation locked" [...] dialog, processing the secure attention sequence in various user states, responding to queries {{as to whether or not}} locking the workstation is an allowed action, supporting the collection of <b>user</b> <b>credentials</b> on Terminal Services-based connections, and interacting with a screensaver.|$|E
50|$|PPP {{configuration}} generally includes: <b>user</b> <b>credentials,</b> {{user name}} and password, and {{is unique to}} each user.|$|E
30|$|Malicious {{insiders}} of {{the cloud}} and bank cannot learn the remote <b>user</b> <b>credential</b> parameters.|$|R
5000|$|Credential Management, {{a unified}} JavaScript API to access <b>user's</b> <b>credentials</b> to {{facilitate}} complex login schemes, ...|$|R
50|$|Example(s)In the below {{example a}} query is {{constructed}} to validate a <b>user’s</b> <b>credentials</b> {{for the purpose}} of logging in.|$|R
5000|$|The <b>user</b> <b>credentials</b> are {{conveyed}} in {{the clear}} to the web site, unless steps such as employment of Transport Layer Security (TLS) are taken.|$|E
5000|$|The {{need for}} UAM rose {{due to the}} {{increase}} in security incidents that directly or indirectly involve <b>user</b> <b>credentials,</b> exposing company information or sensitive files. In 2014, there were 761 data breaches in the United States, resulting in over 83 million exposed customer and employee records. With 76% of these breaches resulting from weak or exploited <b>user</b> <b>credentials,</b> UAM has become a significant component of IT infrastructure. The main populations of users that UAM aims to mitigate risks with are: ...|$|E
50|$|In addition, since {{targeted}} attacks frequently {{result in}} attackers gaining privileged <b>user</b> <b>credentials,</b> monitoring of privileged activities {{is also an}} effective way to identify compromised systems.|$|E
5000|$|Life-cycle {{maintenance}} - the CSP {{is charged}} {{with the task of}} maintaining the <b>user’s</b> <b>credential</b> of the course of its lifetime, while the subscriber is responsible for maintaining his or her authenticator(s).|$|R
50|$|Windows uses CSP to {{implement}} authentication protocols. With Windows Vista, a new authentication package called Credential Security Service Provider (CredSSP) was introduced. CredSSP uses the client-side CSP to enable applications delegate <b>user's</b> <b>credentials</b> {{to the target}} server.|$|R
50|$|By using a UIAlertView {{class with}} the UIAlertViewStyleLoginAndPasswordInput property, the {{infected}} app can display a fake alert dialog box {{that looks like}} a normal Apple ID <b>user</b> <b>credential</b> check and send the input to the Command and control server.|$|R
50|$|Userinit is {{the first}} program that runs with the <b>user</b> <b>credentials.</b> It is {{responsible}} to start all the other programs that compose the user shell environment.|$|E
5000|$|In {{a typical}} use case a user would provide their <b>user</b> <b>credentials</b> and this filter {{would be used}} to {{validate}} these credentials. However, an attacker can enter in a crafted input for the variable [...] such as [...] and any value for password the finished query will become [...] Only the first portion of this query is processed by the LDAP server [...] which always evaluates to true allowing the attacker {{to gain access to the}} system without needing to provide valid <b>user</b> <b>credentials.</b>|$|E
5000|$|The partner website {{now does}} not require any {{password}} to be typed in; instead, the <b>user</b> <b>credentials</b> are passed to the partner extranet site using AD FS.|$|E
30|$|Since the {{proposed}} system is developed {{to enhance the}} level of information confidentiality, availability, and integrity, therefore, to evaluate {{the proposed}} system, it should be tested against hacking the <b>user</b> <b>credential</b> ties, and the TPA auditing credential ties, and hacking the data transmitted between the cloud entities.|$|R
50|$|A login {{manager is}} a login system for Unix and Unix-like {{operating}} systems. It comprises a login daemon, a login user interface, {{and a system}} for tracking login sessions. When a user tries to log in, the login manager passes the <b>user's</b> <b>credentials</b> to an authentication system.|$|R
50|$|Some {{companies}} are well organized {{in this respect}} and have implemented alternative authentication methods or adopted technologies so that a <b>user's</b> <b>credentials</b> are entered automatically, but others may not focus on ease of use or even worsen the situation by constantly implementing new applications with their own authentication system.|$|R
5000|$|The Credential Service is {{responsible}} for the registration and management of <b>user</b> <b>credentials</b> for individuals participating in the Government of Canada Federation for authentication to online services; and ...|$|E
50|$|The {{following}} day, {{a database}} dump of <b>user</b> <b>credentials,</b> chat logs, and source {{code of the}} Gawker website were made available on The Pirate Bay, among other BitTorrent trackers.|$|E
50|$|Credential lag usually occurs for a user who is {{attempting}} to log into a system that relies on updating its cached or otherwise saved <b>user</b> <b>credentials</b> by conferring with Active directory or similar database.|$|E
50|$|Application level {{authentication}} and {{authorization mechanisms}} may be {{effective means of}} providing abstraction from the database layer. The primary benefit of abstraction {{is that of a}} single sign-on capability across multiple databases and platforms. A single sign-on system stores the database <b>user's</b> <b>credentials</b> and authenticates to the database on behalf of the user.|$|R
40|$|Abstract — This {{paper is}} focused on location-based {{authentication}} and authorization in a network environment. We propose a new approach, where the <b>user’s</b> biometric <b>credential</b> and the <b>user’s</b> location are used. A basic framework for the MALBA (Multifactor Authentication and Location-based Authorization) is defined in the article. We describe processes of initial binding, authentication and authorization. Finally, the MAD I (Multifactor Authentication Device) is introduced. The MAD I provides <b>user’s</b> <b>credentials</b> for authentication and authorization processes. The user will get roles in the system dependent {{on his or her}} position. Keywords-location-based authentication; GPS; AES; multi-factor authentication; RBAC, embedded system I...|$|R
50|$|The common {{scheme for}} a CAS {{protocol}} includes the client’s web browser, an application requesting authentication and the CAS server. When authentication is needed, the application {{will send a}} request to the CAS server. The server will then compare the <b>user’s</b> <b>credentials</b> against its database. If the information matches, the CAS will respond that the user has been authenticated.|$|R
50|$|The doors {{system also}} {{provides}} a way for clients and servers to get information about each other. For example, a server can check the client's <b>user</b> <b>credentials</b> or process ID {{to decide whether the}} client is allowed to do something.|$|E
50|$|Login modules {{are written}} by {{implementing}} this interface; they contain the actual code for authentication. It can use various mechanisms to authenticate <b>user</b> <b>credentials.</b> The code could retrieve a password from a database {{and compare it}} to the password supplied to the module.|$|E
50|$|When {{automatic}} PAC provisioning is enabled, EAP-FAST has {{a slight}} vulnerability where an attacker can intercept the PAC {{and use that}} to compromise <b>user</b> <b>credentials.</b> This vulnerability is mitigated by manual PAC provisioning or by using server certificates for the PAC provisioning phase.|$|E
50|$|The RADIUS {{protocol}} transmits obfuscated passwords using {{a shared}} secret and the MD5 hashing algorithm. As this particular implementation provides only weak {{protection of the}} <b>user's</b> <b>credentials,</b> additional protection, such as IPsec tunnels or physically secured data-center networks, {{should be used to}} further protect the RADIUS traffic between the NAS device and the RADIUS server. Additionally, the <b>user's</b> security <b>credentials</b> are the only part protected by RADIUS itself, yet other user-specific attributes such as tunnel-group IDs or vlan memberships passed over RADIUS may be considered sensitive (helpful to an attacker) or private (sufficient to identify the individual client) information as well. The RadSec protocol claims to solve aforementioned security issues.|$|R
5000|$|Initial sign-on prompts the <b>user</b> for <b>credentials,</b> {{and gets}} a Kerberos ticket-granting ticket (TGT).|$|R
3000|$|... [...]. Variations {{of access}} rights could be granted to a user {{according}} to how the <b>user’s</b> <b>credentials</b> satisfy an application’s access constraints. Users are identified by their user ID (user_id), while applications are identified by a system-generated (app_id). Applications {{are associated with a}} URL that refers to the application package on their respective market store. Spaces are identified by a numeric location ID (location_id) representing a physical location s[*]∈[*]S.|$|R
50|$|Biometric {{tokenization}} {{in particular}} builds upon the longstanding practice of tokenization for sequestering secrets {{in this manner}} by having the secret, such as <b>user</b> <b>credentials</b> like usernames and passwords or other Personally Identifiable Information (PII), be represented by a substitute key in the public sphere.|$|E
50|$|Blacklisting {{can also}} apply to <b>user</b> <b>credentials.</b> It is common for systems or {{websites}} to blacklist certain reserved usernames that {{are not allowed to}} be chosen by the system or website's user populations. These reserved usernames are commonly associated with built-in system administration functions.|$|E
50|$|Encryption is {{a proven}} {{data-centric}} technique {{to address the}} risk of data theft in smartphones, laptops, desktops and even servers, including the cloud. One limitation is that encryption becomes useless once a network intrusion has occurred and cybercriminals operate with stolen valid <b>user</b> <b>credentials.</b>|$|E
50|$|In 1999, Secure FTP {{started as}} a senior project at UCSD by classmates Gary Cohen and Brian Knight. The intent {{of the project was}} to address the {{inherent}} security flaws in FTP. Up to this point, there were no easy solutions to secure a <b>user's</b> <b>credentials</b> during login to an FTP server. The outcome of this project led to the first known implementation of FTPS (FTP over SSL/TLS).|$|R
5000|$|... 420,000 {{websites}} {{are reported}} to be affected. [...] According to a New York Times source, some big companies know that their <b>user's</b> <b>credentials</b> are among the stolen. Hold Security did not disclose which sites were compromised, but, instead, offered two separate services, one for website owners and one for consumers to check if they're affected.The service for website owners costs $10 a month. The check for consumers is free.|$|R
50|$|When using a local {{authentication}} scheme, {{the application}} retains {{the data that}} pertains to the <b>user's</b> <b>credentials.</b> This information is not usually shared with other applications. The onus is on the user to maintain and remember the types and number of credentials {{that are associated with}} the service in which they need to access. This is a high risk scheme because of the possibility that the storage area for passwords might become compromised.|$|R
