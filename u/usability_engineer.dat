12|58|Public
50|$|Usability {{testing is}} when {{participants}} are recruited {{and asked to}} use the actual or prototype interface and their reactions, behaviors, errors, and self-reports in interviews are carefully observed and recorded by the <b>Usability</b> <b>Engineer.</b> On {{the basis of this}} data, the <b>Usability</b> <b>Engineer</b> recommends interface changes to improve usability. These studies can be either analytical or empirical.|$|E
5000|$|Web Category Analysis Tool (WebCAT) - {{lets the}} <b>usability</b> <b>engineer</b> {{construct}} and conduct a web category analysis ...|$|E
5000|$|There are {{a variety}} of online {{resources}} that make the job of the <b>Usability</b> <b>Engineer</b> a little easier. Some examples of these include: ...|$|E
5000|$|Room {{large enough}} to {{accommodate}} approximately 6-10 users, 6-10 developers and 2-3 <b>usability</b> <b>engineers</b> ...|$|R
5000|$|Participants {{are given}} written {{instructions}} and rules {{at the beginning}} of the walkthrough session. The rules indicate to all participants (users, designers, <b>usability</b> <b>engineers)</b> to: ...|$|R
5000|$|Synergistic {{redesign}} {{because of}} the group process involving users, developers and <b>usability</b> <b>engineers.</b> The discussion of the identified problems in a multidisciplinary team will spawn creative, usable and quick solutions.|$|R
50|$|Cognitive {{scientist}} and <b>usability</b> <b>engineer</b> Donald Norman used learned helplessness {{to explain why}} people blame themselves {{when they have a}} difficult time using simple objects in their environment.|$|E
50|$|Over {{the past}} {{seventeen}} years, {{the program has}} graduated over 520 students. Right out of school, students graduation from the HCI masters program have taken on various roles in technical and software companies. Some of these include: Interaction Designer, <b>Usability</b> <b>Engineer,</b> Design Team Lead, User Researcher, and User Experience Designer.|$|E
5000|$|Scott Berkun studied {{computer}} science, philosophy, {{and design}} at Carnegie Mellon University. He worked at Microsoft from 1994 to 2003 on Internet Explorer 1.0 to 5.0, Windows, MSN, and in roles including <b>usability</b> <b>engineer,</b> lead program manager, and UI design evangelist. He left Microsoft in 2003 {{with the goal}} of filling his bookshelf with books he has written.|$|E
5000|$|<b>Usability</b> <b>Engineers</b> conduct <b>usability</b> {{evaluations}} of existing or proposed interfaces and their findings are fed {{back to the}} designer for use in design or redesign. Common usability evaluation methods include: ...|$|R
40|$|It {{has been}} argued that it is in the best {{interests}} of IT professionals, to adopt and enforce professional codes in the work place. But there is no code for <b>usability</b> <b>engineers,</b> unless one accepts that it is a branch of software engineering. The new joint ACM/IEEE-CS Software Engineering Code of Ethics is applied to actual usability cases. This enables <b>usability</b> <b>engineers</b> to interpret this code in their profession. This is achieved by utilizing four case studies both directly in terms of the ethical issues involved and in the light of the code. Also examined are the short-comings of the code for the domain of usability engineering, and suggestions are made for enhancements for future revisions of the code...|$|R
50|$|The term {{usability}} engineering (in contrast to interaction design and user experience design) implies {{more of a}} focus on assessing and making recommendations to improve usability than it does on design. However, <b>Usability</b> <b>Engineers</b> may still engage in design to some extent, particularly through the design of wire-frames or other prototypes.|$|R
50|$|The Design of Everyday Things is {{a best-selling}} book by {{cognitive}} scientist and <b>usability</b> <b>engineer</b> Donald Norman about how design {{serves as the}} communication between object and user, and how to optimize that conduit of communication {{in order to make}} the experience of using the object pleasurable. One of the main premises of the book is that although people are often keen to blame themselves when objects appear to malfunction, it is not the fault of the user but rather the lack of intuitive guidance that should be present in the design.|$|E
5000|$|Rapid Iterative Testing and Evaluation (RITE) is an {{iterative}} usability method {{similar to}} traditional [...] "discount" [...] usability testing. The tester and team must define a target population for testing, schedule participants {{to come into}} the lab, decide on how the users behaviors will be measured, construct a test script and have participants engage in a verbal protocol (e.g., think aloud). However it differs from these methods in that it advocates that changes to the user interface are made as soon as a problem is identified and a solution is clear. Sometimes this can occur after observing as few as 1 participant. Once the data for a participant has been collected the <b>usability</b> <b>engineer</b> and team decide if they will be making any changes to the prototype prior to the next participant. The changed interface is then tested with the remaining users.|$|E
5000|$|RITE Method, for Rapid Iterative Testing and Evaluation, {{typically}} {{referred to}} as [...] "RITE" [...] testing, is an iterative usability method. It was defined by Michael Medlock, Dennis Wixon, Bill Fulton, Mark Terrano and Ramon Romero. It has been publicly championed by Dennis Wixon while working in the games space for Microsoft. It has many similarities to [...] "traditional" [...] or [...] "discount" [...] usability testing. The tester and team must define a target population for testing, schedule participants {{to come into the}} lab, decide on how the users' behaviors will be measured, construct a test script and have participants engage in a verbal protocol (e.g. think aloud). However it differs from these methods in that it advocates that changes to the user interface are made as soon as a problem is identified and a solution is clear. Sometimes this can occur after observing as few as one participant. Once the data for a participant has been collected the <b>usability</b> <b>engineer</b> and team decide if they will be making any changes to the prototype prior to the next participant. The changed interface is then tested with the remaining users.|$|E
50|$|In January 2007 Oracle {{had more}} than 150 people working in various roles on the product, {{including}} (in no particular order): developers, development managers, QA engineers, build engineers, doc writers, product managers, customer evangelists, and <b>usability</b> <b>engineers.</b> Development centers operated in Redwood Shores, in Bangalore, in Reading (UK), and in Pleasanton, Colorado.|$|R
40|$|This paper aims to help <b>usability</b> <b>engineers</b> {{interpret}} the code. This {{is achieved by}} utilising five case studies both directly {{in terms of the}} ethical issues involved and {{in the light of the}} code. The paper also examines the short-comings of the code in the domain of usability engineering. The paper concludes with suggestions of how the code might be enhanced to better aid the HCI professional in their wor...|$|R
50|$|When {{usability}} engineering {{began to emerge}} as a distinct area of professional practice in the mid-to late 1980s, many <b>usability</b> <b>engineers</b> had a background in Computer Science or in a sub-field of Psychology such as Perception, Cognition or Human Factors. Today, these academic areas still serve as springboards for the professional practitioner of {{usability engineering}}, but Cognitive Science departments and academic programs in Human-Computer Interaction now also produce their share of practitioners in the field.|$|R
40|$|See end {{of article}} for authors ’ affiliations. DOI: 10. 3163 / 1536 - 5050. 97. 2. 008 Objectives: Skilled website {{developers}} value usability testing to assure user needs are met. When {{the target audience}} differs substantially from the developers, it becomes essential to tailor both design and evaluation methods. In this study, researchers carried out a multifaceted usability evaluation of a website (Healthy Texas) designed for Hispanic audiences with lower computer literacy and lower health literacy. Methods: Methods included: (1) heuristic evaluation by a <b>usability</b> <b>engineer,</b> (2) remote end-user testing using WebEx software; and (3) face-to-face testing in a community center where use of the website was likely. Results: Researchers found standard usability testin...|$|E
40|$|Usability {{engineering}} {{for products}} {{is an increasing}} sales argument for industrial and consumer products. Products and services are designed for target-group adequate usability. But usability is no single-value concept. In contrast, EN ISO 9241 points {{out that it is}} influenced by several moderators, e. g., efficiency, context of use and others. Although standardized questionnaires have been developed to obtain quantitative data from usability tests, it nevertheless remains a qualitative concept – which is clearly accepted in the Human Factors world. Such qualitative approach would not be accepted in many other disciplines. But although since in multimodal applications of the future it is important to increase the quality of the interaction on the level of each single modality, the resulting overall usability will be a major selling point in order to provide a product or service that meets the needs of potential customers. It is the aim of the author to sensitize engineers and researchers in the field of usability engineering and sound design for each other's field. Thus, the author gives examples of a typical usability engineering and sound design process used in the industry. Parallels in the work of usability engineers and sound designers are pointed out, suggesting that a good sound designer in his very field is to be considered a <b>usability</b> <b>engineer...</b>|$|E
40|$|Usability {{practitioners}} frequently face {{ethical dilemmas}} during design {{and evaluation of}} systems [e. g. 1 ‐ 5]. Examples of such professional challenges or ethical dilemmas are: is informed consent required from fellow‐colleagues for usability activities being conducted within the organisation?; what if the client asks the <b>usability</b> <b>engineer</b> to use the data gathered on one study to draw inferences for another related study?; how can the usability data and personal data of the participants be held securely?; will the use of incentives to encourage participation create a bias in sampling or in participant responses?; is it ethical to use the video‐recording of a usability test in a presentation at a conference?; is it fine to include the results from a consultancy activity in a conference paper?; can personal correspondence over emails with a participant about a product or service {{be included in the}} organisation’s usability data for that product or service?. In this mini‐tutorial, we will present real‐life case studies of a variety of systems (web‐based, 3 D virtual worlds) and domains (e‐commerce, e‐learning) to discuss the ethical concerns, and the measures that were taken to cater for the ethics. We will provide a pack to the attendees comprising of the following: web resources to ethics principles, codes of practice for conducting usability research, and guidelines available from professional organisations, samples of research materials such as consent form and project summary sheet that accompanies the consent form, information about tools and techniques for secure storage of data and to protect the privacy and anonymity of the participants, and bibliography related to ethics in Human‐Computer Interaction and usability. References: 1. C. E. Wilson. 2007. Ethical Dilemma Redux, Interactions, pp. 50 ‐ 51. 2. O. K. Burmeister. 2001. Usability Testing: Revisiting Informed Consent Procedures for Testing Internet Sites. In Selected Papers from the Second Australian Institute Conference on Computer Ethics vol. 7. Edited by J. Weckert. ACM International Conference Proceeding Series. Darlinghurst, Australia: Australian Computer Society, 2000, pp. 3 ‐ 9. 3. M. Catterall and P. Maclaren. 2001. Researching consumers in virtual worlds: a cyberspace odyssey, Journal of Consumer Behaviour, vol. 1, no. 3, pp. 228 ‐ 237. 4. R. B. Molich, C. Laurel, C. Snyder, W. Quesenbery, and C. E. Wilson. 2001. Ethics in HCI. In CHI ‘ 01 Extended Abstracts on Human Factors in Computing Systems. CHI ‘ 01 Seattle, Washington, March 31 ‐ April 05, 2001. New York: ACM Press, pp. 217 ‐ 218. 5. W. E. Mackay. 1995. Ethics, lies and videotape [...] ” In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. Denver, Colorado, May 7 ‐ 11, 1995. Edited by I. R. Katz, R. Mack, L. Marks, M. B. Rosson, and J. Nielsen. Conference on Human Factors in Computing Systems. New York: ACM Press/Addison‐Wesley Publishing Co., pp. 138 ‐ 145...|$|E
40|$|This paper {{exhibits}} {{a range of}} user interface analyses from a device perspective. An actual device, in commercial production, {{is used as a}} case study, and we exhibit a functionally equivalent user interface that requires a third fewer keypresses to use than the original design on average, and whose worst case cost is just one sixth. The analyses of both the original and alternative user interfaces are described in sufficient detail to be replicated by other <b>usability</b> <b>engineers.</b> 1. 1 Contributions to HC...|$|R
40|$|Our {{research}} investigates how {{to integrate}} usability concerns into the software development lifecycle {{and in particular}} how to improve the communication between <b>usability</b> and software <b>engineers.</b> In the last few years, many software development teams have tried to integrate user-centered design techniques into their software engineering lifecycle. However, {{because of lack of}} understanding and communication between two diverse teams, they often run into problems. One problem arises {{from the fact that the}} software engineering teams have their own techniques and tools for managing the whole development lifecycle including usability issues, and it is not clear where exactly in this usability engineering techniques should be placed and integrated with existing software engineering methods to maximize benefits gained from both. Several research attempts have been done to reconcile the user-centered design approach and traditional software engineering methods. The optimal methodology is therefore a tailored one, catering to the needs of each project and team. Our research, rather than investigating, how to alleviate the usability concerns of adapted software development lifecycle, focuses on the communication between <b>usability</b> <b>engineers</b> and developers. To motivate our investigations, we first examine two popular requirement-engineering processes: RESPECT and the use-case driven process, as defined in the Rational Unified Process framework. This discussion allows us to identify milestones of a relevant communication between members of the software development team and usability specialists. Finally, we describe a tool which aims to assist both software and <b>usability</b> <b>engineers</b> to mediate their communication...|$|R
40|$|Interaction Designers-whether {{practicing}} as <b>Usability</b> <b>Engineers,</b> Visual Interface Designers, or Information Architects-attempt {{to understand}} and shape human behavior in order to design products that are at once usable, useful, and desirable. Although the value of design is now recognized as essential to product development, the field is often misunderstood by managers and other team members, who don't understand a designer's role in a team. This can cause inefficient and ineffective products. Thoughts on Interaction Design gives individuals engaged in this profession the dialogue to justify...|$|R
40|$|Abstract: In most of {{the cases}} {{usability}} evaluations are done by usability experts. Employing such experts requires a certain size in business. So in a lot of small and middle sized companies developers are forced to learn handling usability aspects. This is not much easier than teaching <b>usability</b> <b>engineers</b> how to develop soft-ware. The usability evaluation process and its requirements also miss usable attributes. As a solution a light weighted usability evaluation model for software developers is created. This model is described by a pattern language...|$|R
50|$|<b>Usability</b> <b>engineers</b> {{sometimes}} work {{to shape}} an interface {{such that it}} adheres to accepted operational definitions of user requirements documentation. For example, the International Organisation for Standardisation-approved definitions (see e.g., ISO 9241 part 11) usability are held {{by some to be}} a context-, efficiency, and satisfaction with which specific users should be able to perform tasks. Advocates of this approach engage in task analysis, then prototype interface design, and usability testing on those designs. On the basis of such tests, the technology is potentially re-designed if necessary.|$|R
40|$|Usability {{engineering}} {{is the process}} of involving users throughout the development cycle to produce user-centric, easy to use software. The process model of involving users throughout this cycle is called user-centered design. Although a logical and proven model, the success of this process is often impeded by poor transference of knowledge between <b>usability</b> <b>engineers,</b> interaction designers, and the development team. Information breakdowns occur when communication fails between process members and deliverables are not produced or interpreted to their fullest potential. Lack of, misinterpretation of, or poor quality of information costs development time, project resources, and often the patience and sanity of the people involved. The design and build stages of the user-centered design process are the most volatile for information breakdowns, particularly between the <b>usability</b> <b>engineers</b> and the development team and the interaction designers and the development team. Many of these information problems can be alleviated or even eliminated by providing better audience-centric documents, more open communication channels, and most of all unbounded iteration of create, evaluate, revise, and repeat. The iterative nature of the user-centered design process is the most important tool available in preventing information breakdowns. The constant communication and revision of information provides many opportunities for potential information breakdowns to be discovered, addressed, and resolved...|$|R
40|$|This paper {{describes}} {{research that}} seeks to facilitate the capture, representation, and reasoning about, temporal information by <b>usability</b> <b>engineers.</b> The product, a method we call KAT-LITTER, {{is an extension of}} Johnson and Johnson's (1991) Knowledge Analysis of Tasks (KAT). An evaluation of KAT-LITTER showed that it influenced the design process in two significant ways: firstly, designers using KAT-LITTER spent more time reasoning about temporal issues than designers using KAT alone, and secondly these same designers considered a broader spectrum of temporal issues. Further developments of KAT-LITTER are briefly discussed...|$|R
50|$|Requirements {{documentation}} is {{the description}} of what a particular software does or shall do. It is used throughout development to communicate how the software functions or how {{it is intended to}} operate. It is also used as an agreement or as the foundation for agreement on what the software will do. Requirements are produced and consumed by everyone involved in the production of software: end users, customers, product managers, project managers, sales, marketing, software architects, <b>usability</b> <b>engineers,</b> interaction designers, developers, and testers, to name a few. Thus, requirements documentation has many different purposes.|$|R
40|$|This {{paper was}} {{completed}} {{as part of}} the final research component in the University of Oregon Applied Information Management Master's Degree Program [see htpp://aim. uoregon. edu]. This study examines open and closed card sorting methods used by information architects and <b>usability</b> <b>engineers.</b> A hybrid data analysis strategy, combining conceptual analysis (Palmquist et. al, 2005) and constant comparative method (Glaser and Strauss, 1967) is employed to review 14 references. Characteristics of card sorting methods and their properties are organized into twelve emergent categories. Results are presented in a hypertext table, designed to be extended by others, and supported with explanations of each category...|$|R
40|$|The author {{describes}} {{a case study}} of a usability test of an on-line engineering statistical handbook. The case study was conducted with two goals: to determine usability issues affecting the use of the handbook and to determine if a kiosk-based testing methodology would be feasible. The paper outlines the design of the experiment and describes the lessons learned, with respect to the design of on-line books and the design of kiosk-based tests for on-line books. The kiosk-based test was conducted twice. In the first instance, <b>usability</b> <b>engineers</b> were present to monitor the experiment. In the second condition, the design team monitored the experiment...|$|R
40|$|Abstract. A {{review of}} case studies about {{usability}} in eight Free/Libre/Open Source Software (FLOSS) projects showed {{that an important}} issue regarding a usability initiative in the project {{was the lack of}} user research. User research is a key component in the user-centered design (UCD) process and a necessary step for creating usable products. Reasons why FLOSS projects suffered from a lack of user research included poor or unclear project leadership, cultural differences between developer and designers, and a lack of <b>usability</b> <b>engineers.</b> By identifying these critical issues, the FLOSS usability community can begin addressing problems in the efficacy of usability activities and work towards creating more usable FLOSS products. ...|$|R
40|$|With a {{relatively}} few <b>usability</b> <b>engineers</b> in large software organizations, the {{vast number of}} APIs does not receive adequate usability coverage. We propose a preliminary API usability evaluation framework that suggests the combination of empirical testing, heuristic evaluation, and usability inspection methods to organically develop and generalize organizational best practices around API usability. Our contribution to CSCW is to offer practitionerbased insights – based on empirical and anecdotal experience at Microsoft – into how large software organizations can adopt and scale API design knowledge based {{on a range of}} evaluation methods for API usability. Author Keywords API usability, cognitive dimensions, usability inspection methods, empirical evaluation, heuristics...|$|R
40|$|Patterns {{describe}} generic {{solutions to}} common problems in context. Originating {{from the world}} of architecture, patterns have been used mostly in object-oriented programming and data analysis. The goal of HCI patterns is to create an inventory of solutions to help designers (and <b>usability</b> <b>engineers)</b> to resolve UI development problems that are common, difficult and frequently encountered. In this paper, we present our pattern-supported approach to user interface design in the context of information visualization. Using a concrete example from the telecommunications domain, we will focus on a task/subtask pattern to illustrate how knowledge about a task and an appropriate interaction design solution can be captured and communicated. ...|$|R
40|$|Smart environments (e. g., airports, hospitals, stadiums, {{and other}} {{physical}} spaces using ubiquitous computing to empower many mobile people) provide novel challenges for <b>usability</b> <b>engineers.</b> Firstly, interaction can be implicit and therefore unintentional {{on the part}} of its users. Secondly, the impact of a smart environment can influence the collective or crowd behavior of those immersed within it. These challenges lead to requirements for complementary analyses which must be combined with the more typical focus on the interaction between user and device. The paper explores a family of stochastic models aimed at analyzing these features with a particular focus on crowd interaction. Categories and Subject Descriptor...|$|R
40|$|It {{has been}} argued that it is in the best {{interests}} of IT professionals, to adopt and enforce professional codes in the work place. Yet applying the Australian Computer Society's Code of Ethics in actual every day situations has been left to individuals. This paper aims to help <b>usability</b> <b>engineers</b> interpret the code. This is achieved by utilising five case studies both directly in terms of the ethical issues involved and in the light of the code. The paper also examines the short-comings of the code in the domain of usability engineering. The paper concludes with suggestions of how the code might be enhanced to better aid the HCI professional in their work...|$|R
