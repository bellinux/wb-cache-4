9|0|Public
60|$|Thus, amid {{obstructions}} {{and stimulating}} furtherances, has the Question of the Trial to grow; emerging and submerging; fostered by solicitous Patriotism. Of the Orations that were spoken on it, of the painfully devised Forms of Process for managing it, the Law Arguments {{to prove it}} lawful, and all the infinite floods of Juridical and other ingenuity and oratory, be no syllable reported in this History. Lawyer ingenuity is good: but what can it profit here? If the truth must be spoken, O august Senators, the only Law in this case is: Vae victis, the loser pays! Seldom did Robespierre say a wiser word than the hint he gave to that effect, in his oration, that it was needless to speak of Law, that here, if never elsewhere, our Right was Might. An oration admired almost to ecstasy by the Jacobin Patriot: who shall say that Robespierre is not a thorough-going man; bold in Logic at least? To the like effect, or still more plainly, spake young Saint-Just, the black-haired, mild-toned youth. Danton is on mission, in the Netherlands, during this preliminary work. The rest, far as one reads, welter amid Law of Nations, Social Contract, Juristics, Syllogistics; to us barren as the East wind. In fact, what can be more unprofitable than the sight of Seven Hundred and Forty-nine ingenious men, struggling with their whole force and industry, for a long course of weeks, to do at bottom this: To stretch out the old Formula and Law Phraseology, so that it may cover the new, contradictory, entirely <b>uncoverable</b> Thing? Whereby the poor Formula does but crack, and one's honesty along with it! The thing that is palpably hot, burning, wilt thou prove it, by syllogism, to be a freezing-mixture? This of stretching out Formulas till they crack is, especially in times of swift change, one of the sorrowfullest tasks poor Humanity has.|$|E
40|$|Code {{coverage}} analysis provides metrics {{to quantify the}} degree of verification completeness. It also allows the designer to identify possible bugs or redundant code thus speeding verification. Many verification engineers report that the most time consuming area of code {{coverage analysis}} is the identification and documentation of intrinsically <b>uncoverable</b> expression cases. With manual inspection of the code being especially time consuming and error prone, automatic methods of identifying <b>uncoverable</b> expression cases are highly desirable. Our work extends the model-checking-based coverability analysis work at IBM [5] to support analysing the coverability of expression cases. We present results of applying our implementation on industrial scale designs provided by Motorola. We also analyse how coding style can impact the coverability of expressions and suggest how expression coverability analysis can be applied within the verification flow...|$|E
40|$|Fibre {{reinforced}} plastics {{are widely used}} in the aerospace industry. Continuous tapes reinforced by carbon fibres are applied to flat surfaces. Several modifications to the tape-laying process are presented and discussed. The modifications include path planning and changes {{to the design of}} the tape itself. During the process of laying unidirectional tape onto double-curved surfaces, gaps and overlaps can occur. The avoidance of these gaps and overlaps is the aim of conventional strategies for path planning. The modified path planning strategy presented here, however, allows the presence of small gaps. This approach makes it possible to cover double-curved surfaces. Areas in which the gaps would be too wide are identified as <b>uncoverable,</b> and it is suggested that patches can be fitted into these areas. Furthermore, a new design of tape is presented which is considerably more deformable than unidirectional tape. Therefore, a smaller number of <b>uncoverable</b> areas are identified during the path planning process than with unidirectional tape. (orig.) SIGLEAvailable from TIB Hannover: RA 437 (2001 - 24) / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekDEGerman...|$|E
40|$|Lubricants {{additives}} {{are inseparable}} component of modern high-tech lubricants. Viscosity index improvers additives play <b>uncoverable</b> {{role in a}} branch of boundary lubrication. They are designed to ensure sufficient oil film thickness in low speeds of frictional surfaces motion. This thesis deal with effect of specific viscosity index improvers additives on boundary lubrication film formation in elliptical contact. The purpose of this work is also checking the effect of concentration changing these additives on lubricantion film thickness formation...|$|E
40|$|ANOTATION The bachelor's thesis deals {{about the}} quality of life and the degree of psychosocialogic pillar by the {{soldiers}} AČR in the outward mission in Afghanistan. It points to the importance of psychologic setout before the departure to the mission, also that the attendence of army psychologists in missions is <b>uncoverable.</b> I'm trying to explain their actions which are connected with this hard life situation for all soldiers who participate there. The accent makes quantitative prospective checking by force of questionary ŽSO/ 01 / 11. Pursuant to it I asked to the degree of psychosocialogic pillar and the quality of soldiers who act in the afghanistan outward mission. The points of interest were regular soldiers, the members of 71. mechanized battalion Hranice, who were added at the function of protection commpany 6. PRT mission ISAF...|$|E
40|$|Abstract. Automated white-box {{testing is}} {{a major issue in}} {{software}} engineering. Over the years, several tools have been proposed for supporting distinct parts of the testing process. Yet, these tools are mostly separated and most of them sup-port only a fixed and restricted subset of testing criteria. We describe in this paper FRAMA-C/LTEST, a generic and integrated toolkit for automated white-box test-ing of C programs. LTEST provides a unified support of many different testing criteria as well as an easy integration of new criteria. Moreover, it is designed around three basic services (test coverage estimation, automatic test generation, detection of <b>uncoverable</b> objectives) covering most major aspects of white-box testing and taking benefit from a combination of static and dynamic analyses. Services can cooperate through a shared coverage database. Preliminary experi-ments demonstrate the possibilities and advantages of such cooperations. ...|$|E
40|$|Abstract. We {{consider}} multi-threaded {{programs with}} an unbounded {{number of threads}} executing a finite-state, non-recursive procedure. Safety properties of such programs can be checked via reduction to the coverability problem for well-structured transition systems (WSTS). In this paper, we present a novel, sound and complete yet empirically much improved solution to this problem. The key idea to achieve a compact search structure is to track uncoverability only for min-imal <b>uncoverable</b> elements, even if these elements {{are not part of}} the original cov-erability query. To this end, our algorithm examines elements in the downward closure of elements backward-reachable from the initial queries. A downside is that the algorithm may unnecessarily explore elements that turn out coverable and thus fail to contribute to the proof minimization. We counter this effect using a forward search engine that simultaneously generates (a subset of all) coverable elements, e. g. a generalized Karp-Miller procedure. We demonstrate in extensive experiments on C programs that our approach targeting minimal uncoverability proofs outperforms existing techniques by orders of magnitude. ...|$|E
40|$|Pthread-style multithreaded {{programs}} feature rich thread communication mechanisms, such as shared variables, signals, and broadcasts. In this article, {{we consider}} the automated verification of such programs where {{an unknown number of}} threads execute a given finite-data procedure in parallel. Such procedures are typically obtained as predicate abstractions of recursion-free source code written in C or Java. Many safety problems over finite-data replicated multithreaded programs are decidable via a reduction to the coverability problem in certain types of well-ordered infinite-state transition systems. On the other hand, in full generality, this problem is Ackermann-hard, which seems to rule out efficient algorithmic treatment. We present a novel, sound, and complete yet empirically efficient solution. Our approach is to judiciously widen the original set of coverability targets by configurations that involve fewer threads and are thus easier to decide, and whose exploration may well be sufficient: if they turn out <b>uncoverable,</b> so are the original targets. To soften the impact of “bad guesses”—configurations that turn out coverable—the exploration is accompanied by a parallel engine that generates coverable configurations; none of these is ever selected for widening. Its job being merely to prevent bad widening choices, such an engine need not be complete for coverability analysis, which enables a range of existing partial (e. g., nonterminating) techniques. We present extensive experiments on multithreaded C programs, including device driver code from FreeBSD, Solaris...|$|E
40|$|The {{knowledge}} {{state of}} an individual {{with respect to a}} particular body of information is conceptualized as the set of all the questions that this individual is capable of solving. The goal of an assessment procedure is to identify, by a sequence of appropriately chosen questions, the individual's state among all possible ones. A deterministic procedure is conceivable, but not realistic, in that it does not account for possible inconsistencies in the observed responses. Such inconsistencies may arise from careless errors or lucky guesses from the subject, but may also be of a more fundamental character. A stochastic framework is developed here, in which an individual ‘state’ is formalized as a distribution on the set of all possible knowledge states. On each trial, the assessor has a likelihood function on the set of knowledge states which provides the basis for selecting the question to be asked on that trial. The response is assumed to depend on the individual ‘state’. The question asked and the response observed are used to update the likelihood function. Several examples of questioning rules and of updating rules are discussed, which lead to Markov processes. A central problem is to describe conditions ensuring that the latent distribution corresponding to the subject's ‘state’ can be estimated. We show that, under general conditions, the ‘state’ of a subject is <b>uncoverable</b> if the latent distribution is concentrated on a particular knowledge state. 1988 The British Psychological SocietySCOPUS: ar. jFLWNAinfo:eu-repo/semantics/publishe...|$|E

