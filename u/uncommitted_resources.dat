2|5|Public
5000|$|To {{dispose of}} many <b>uncommitted</b> <b>resources</b> {{that can be}} applied to {{different}} purposes.|$|E
40|$|Agile {{computing}} is {{an innovative}} metaphor for distributed computing systems, which prescribes {{a new approach}} to their design and implementation. This chapter describes the overall agile computing metaphor as well as one concrete realization through a middleware infrastructure. Agile computing may be defined as the opportunistic discovery, manipulation, and exploitation of available computing and communication resources in order to improve capability, performance, efficiency, fault-tolerance, and survivability. The term agile is used to highlight the desire to both quickly react to changes in the environment as well as to take advantage of transient resources only available for short periods of time. Agile computing thrives in the presence of highly dynamic environments and resources, where nodes are constantly being added, removed, and moved, resulting in intermittent availability of resources and changes in network reachability, bandwidth, and latency. From a high-level perspective, the goal of agile computing is to facilitate resource sharing among distributed computing systems. At this broad level of description, agile computing overlaps with several other areas of research including distributed processing, peer-to-peer resource sharing, grid computing, and cluster computing. The following factors differentiate agile computing from the other areas of research. Transient Resources: The resources in a tactical environment are expected to be highly transient. Indeed, one of the performance metrics for agile computing is defined {{as a function of the}} minimum length of time that a resource must be available in order to be utilized productively. The expectation is to support environments where resources are available on the order of seconds or minutes, as opposed to hours, days, or longer. Therefore, agile computing differs from grid computing and cluster computing, which targets environments where resources are more stable. Limited Communications: The networks used to interconnect resources in tactical environments are expected to be wireless and adhoc. The implication for agile computing is that the middleware must be able to support and operate in low-bandwidth, high and variable latency, and unreliable networks. Again, this differentiates agile computing from grid computing and cluster computing, where the network links tend to be high-performance and reliable. Opportunistic Resource Exploitation: Another goal of agile computing is to take advantage of unexpected resources that happen to be available. In particular, the goal is to exploit new resources dynamically joining the network environment as well as existing resources that have unexpected spare capacity for transient periods of time. While some peer-to-peer systems provide limited forms of the same capabilities, agile computing extends this capability to proactively manipulate the available resources in order to satisfy the application requirements. Manipulation can include physically moving resources (for example, robots or other autonomous vehicles) in order to provide communications or processing capabilities where required. These additional resources may be <b>uncommitted</b> <b>resources</b> assigned for use by the middleware or other resources which can be manipulated without interfering with their original task assignments. This aspect also differentiates agile computing from grid computing and cluster computing...|$|E
40|$|We treat urban {{stormwater}} as {{a problem}} as it causes flooding, transports pollutants and degrades the ecosystem health of waterways (Goonetilleke et al., 2014). Municipal authorities devote a significant component of their budget to capture and remove stormwater from urban areas as rapidly as possible. Unfortunately, it is a largely unappreciated fact that urban stormwater is the last available <b>uncommitted</b> water <b>resource</b> for our cities as the demand for potable water escalates due to growing urbanisation, industrialisation and higher living standards...|$|R
40|$|Health for All' {{will not}} be {{achieved}} by the year 2000 unless additional resources are recruited for health sectors of developing countries. The unmet needs for basic health care cannot be satisfied through better use of the existing health resources alone. The most premising domestic sources of additional health resources are the user fees, and <b>uncommitted</b> community <b>resources.</b> <b>Uncommitted</b> community <b>resources</b> are incomes of communities which are not committed to the provision of basic needs, or to investments {{that are necessary to}} sustain existing standards of living. Foreign exchange is a vital input in the provision of health services in developing countries. Mobilization of domestic resources for health sectors without increasing their foreign exchange inputs could lead to a fall in the quality of health services due for example to shortages in drugs. Ways of increasing supply of foreign exchange to health sectors of developing countries should be explored. Since Ministries of Health must make decisions regarding how much of various quantities of health services to provide before they actually receive their budgets, it is important for them to have a method of forecasting their budgets to avoid planning health activities that are not feasible. The paper contains a revenue prediction model that should be useful in planning and allocating budgets of the Ministries of Health. Two types of costs should be considered in designing health care delivery systems - costs of providing health services, and patients’ costs of using the services. The appropriate or cost-effective health care system is the System that minimizes the sum of these costs. It is argued in the paper that compared to alternative systems, a community based health care system in which the Government and the community share recurrent costs of health services is the most cost-effective system. Cost-sharing arrangements in such a system would include service fees, labour time contributions, prepayments for health services and community managed drug funds...|$|R
30|$|To {{start an}} relay service, the MS j needs to {{initiate}} an relay service request (“request” for short in {{the remainder of}} the paper) first, indicating the requested transmission duration, denoted by D_j^k, where k is the index of the time slot when the request is made. In addition, we use D_j^k= 0 to indicate that no request is made in the kth time slot. The relay service request is processed by the assigned RS and an admission control decision is made instantaneously. Specifically, whenever both the <b>uncommitted</b> channel <b>resource</b> and energy resource of the RS are sufficient to fulfill the MS’s relay service request, this request is admitted. Otherwise, the request is rejected.|$|R
40|$|One of {{the main}} {{challenges}} in developing an effective crosstalk noise management strategy {{is to develop a}} crosstalk noise estimate which is both accurate and leads to a tractable optimization problem {{that can be used to}} optimally redistribute <b>uncommitted</b> routing <b>resources</b> to resolve crosstalk noise violations. Devgan's [4] estimate comes very close to meeting these objectives, however, it is extremely pessimistic for nets with long couplings or aggressor nets with short rise times. The increased complexity of more sophisticated estimates, such as that proposed by Vittal et. al. [13] lead to a crosstalk management problem that is very hard to solve. In this paper we develop two estimates, similar in form to Devgan's estimate, that are based on local approximations of Vittal's estimate. Our estimates are substantially more accurate than Devgan's estimate while still allowing us to formulate the crosstalk management problem in a form that can be solved efficiently...|$|R
40|$|Several {{experiments}} {{have shown that}} seedlings from larger-seeded species {{are better able to}} survive various hazards during establishment. Previous work has suggested a general mechanism might underpin this outcome. Larger-seeded species might tend to mobilize their metabolic resources over a longer period into the autotrophically functioning structures of the seedling. Consequently relatively more <b>resources</b> would remain <b>uncommitted</b> at any given time during the early period of the seedling’s growth, and available to support respiration during carbon deficit. An important aspect of this larger-seed-later-commitment mechanism would be that at a given time, larger-seeded species would hold more <b>resources</b> <b>uncommitted</b> not just absolutely, but relative to the functional seedling structures that needed to be supported. Here we quantify, across a wide range of phanerocotylar species, an allometric pattern that supports the generality of a larger-seed-later-commitment mechanism as an explanation for superior performance by larger-seeded species in face of the hazards of seedling establishment. Larger-seeded species allocate relatively less to cotyledon area, reflecting the initial functional size of the seedling, and relatively more to dry mass per unit area of cotyledon, reflecting stored metabolic reserves. The shift in relative allocation is progressive, rather than seedlings falling into discrete morphological types. The allometry is similar whether considered as correlated evolutionary divergences (phylogenetically independent contrasts) or as correlation across present-day species. 7 page(s...|$|R

