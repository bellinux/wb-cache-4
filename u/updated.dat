10000|10000|Public
5|$|On December 10, 2015, D.C. United {{unveiled}} an <b>updated</b> logo {{designed by}} Peter Horridge, featuring a D.C. flag-inspired design across the eagle, an <b>updated</b> wordmark, and more dynamic wings.|$|E
5|$|A-10C: A-10As <b>updated</b> {{under the}} {{incremental}} Precision Engagement (PE) program.|$|E
5|$|All current {{operational}} radars {{are described}} as Dnepr, and have been <b>updated</b> incrementally.|$|E
40|$|Welcome and Call to Order, Open Enrollment <b>Update,</b> Patient Choice <b>Update,</b> Retiree Insurance <b>Update,</b> Basic Life Insurance Reduction Schedule <b>Update,</b> Dental Insurance <b>Update,</b> Infertility Coverage <b>Update,</b> Short Term and Long Term Disability Insurance <b>Update,</b> HealthPartners Plan Review, Wellness <b>Update,</b> Medical Evacuation Insurance Updat...|$|R
40|$|Review of Committee Charge, Committee Vacancies, Presidential Disability Advisory Committee <b>Update,</b> DSCC <b>Update,</b> Expanded Facilities Condition Assessment <b>Update,</b> Accessibility of Information Technology Report <b>Update,</b> UReturn <b>Update,</b> Adaptive Sports <b>Update,</b> Disabilities Studies Minor <b>Update,</b> Future Agenda Item...|$|R
5000|$|Windows Server <b>Update</b> Services 2.0 {{and above}} {{comprise}} {{a repository of}} <b>update</b> packages from Microsoft. It allows administrators to approve or decline <b>updates</b> before release, to force <b>updates</b> to install by a given date, and to obtain extensive reports on which <b>updates</b> each machine requires. System administrators can also configure WSUS to approve certain classes of <b>updates</b> automatically (critical <b>updates,</b> security <b>updates,</b> service packs, drivers, etc.). One can also approve <b>updates</b> for [...] "detection" [...] only, allowing an administrator to see which machines will require a given <b>update</b> without also installing that <b>update.</b>|$|R
5|$|All {{figures are}} <b>updated</b> as of match played on 14 March 2017.|$|E
5|$|Apps {{that need}} to be <b>updated</b> {{frequently}} can now have notifications that update live.|$|E
5|$|Battery Charging Specification 1.1: Released in March 2007 and <b>updated</b> on 15 April 2009.|$|E
5|$|A further <b>update,</b> {{formally}} designated Windows Server 2012 R2 <b>Update,</b> {{was released}} in April 2014, a cumulative set of security <b>updates,</b> critical <b>updates</b> and <b>updates.</b>|$|R
5000|$|Windows <b>Update</b> has {{supported}} delta <b>updates</b> since Windows XP which are called express installation files. On redistributing <b>updates,</b> Windows Server <b>Update</b> Services {{has supported}} delta <b>updates</b> since Windows Server 2003.|$|R
50|$|<b>Updates</b> to the Windows Desktop <b>Update</b> {{were part}} of IE 4.0 hotfixes and service packs. Later, shell {{security}} <b>updates</b> for Windows 95 and Windows NT 4.0 included both the <b>update</b> to the Windows Desktop <b>Update</b> version and the original version. Also sometimes the Windows Desktop <b>Update</b> version and the <b>update</b> to the original version were packaged separately.|$|R
5|$|Caps {{and goals}} <b>updated</b> as of 16 November 2014.|$|E
5|$|Data through end of September 2017. <b>Updated</b> 7 October 2017.|$|E
5|$|Guilty Gear X2 was {{followed}} by five <b>updated</b> versions of it.|$|E
50|$|MBSA only scans for 3 {{classes of}} <b>updates,</b> {{security}} <b>updates,</b> service packs and <b>update</b> rollups. Critical and optional <b>updates</b> are left aside.|$|R
40|$|Highlights {{from state}} and local {{programs}} [...] Standardized nursing case management interventions described {{in the evaluation of}} a TB targeted testing and treatment project [...] TB Education and Training Network <b>updates</b> [...] TB Epidemiologic Studies Consortium <b>update</b> [...] TB Trials Consortium <b>update</b> [...] Clinical and Health Systems Research Branch <b>update</b> [...] Communications, Education, and Behavioral Studies Branch <b>updates</b> [...] International <b>update</b> [...] Laboratory <b>updates</b> [...] Surveillance <b>updates</b> [...] New CDC publications [...] Personnel notes [...] Calendar of events...|$|R
40|$|The {{field of}} theory <b>update</b> has seen some improvement, in what regards <b>updating,</b> by {{allowing}} desired <b>updates</b> {{to be specified}} by <b>update</b> programs. The <b>updating</b> of models is governed by <b>update</b> rules, {{as well as by}} inertia applied to those literals not directly affected by the <b>update</b> program. Though this is important, it remains necessary to tackle too the <b>updating</b> of theories specified by programs. In this paper we explore logic program <b>updates,</b> namely how to exert inertia on program rules rather than on the literals of their models. We define program <b>updates</b> and characterize them semantically, both for the 2 -valued and the 3 -valued cases. We also define iterated logic program <b>updating,</b> a crucial notion inasmuch as it allows us to conceive what it is to successively <b>update</b> one program by another, and so to prescribe the evolution of knowledge bases by means of <b>updates...</b>|$|R
5|$|Howard Zinn, A People's History of the United States. Revised and <b>Updated.</b> New York: HarperCollins, 2009.|$|E
5|$|In this context, a {{dependency}} graph is a graph {{that has}} a vertex for each object to be <b>updated,</b> and an edge connecting two objects whenever one of them needs to be <b>updated</b> earlier than the other. A cycle in this graph is called a circular dependency, and is generally not allowed, because {{there would be no}} way to consistently schedule the tasks involved in the cycle.|$|E
5|$|Marsh, Jan, Jane and May Morris: A Biographical Story 1839–1938 (<b>updated</b> edition, privately {{published}} by author), London, 2000.|$|E
50|$|The {{programming}} {{is divided into}} five parts. Morning <b>Update</b> airs from 4-9am ET, Daytime <b>Update</b> from 9am-1pm ET, Afternoon <b>Update</b> from 1pm to 5pm ET, Evening <b>Update</b> from 5-10pm ET, and Night <b>Update</b> from 10pm-4am ET.|$|R
40|$|Many {{software}} maintenance problems {{are caused by}} using text editors to change programs. A more systematic and reliable way of performing program <b>updates</b> is to express changes with an <b>update</b> language. In particular, <b>updates</b> should preserve the syntax- and type-correctness of the transformed object programs. We describe an <b>update</b> calculus {{that can be used}} to <b>update</b> lambda-calculus programs. We develop a type system for the <b>update</b> language that infers the possible type changes that can be caused by an <b>update</b> program. We demonstrate that type-safe <b>update</b> programs that fulfill certain structural constraints preserve the type-correctness of lambda terms. The <b>update</b> calculus can serve as a basis for higher-level <b>update</b> languages, such as for Haskell or Java. We briefly indicate a possible design of these <b>update</b> languages...|$|R
5000|$|Automatic Updates: The Automatic <b>Updates</b> utility {{automatically}} downloads and installs critical <b>updates</b> {{from the}} Windows <b>Update</b> Web site with little user interaction. It {{is set up}} to check Windows <b>Update</b> once every 24 hours by default. Users can choose to download which <b>update</b> they want, although high-priority <b>updates</b> must be downloaded and installed.|$|R
5|$|Note: Statistics are <b>updated</b> {{through the}} {{completion}} of the 2015–16 season.|$|E
5|$|Note: Statistics are <b>updated</b> {{through the}} end of the 2016 NFL season.|$|E
5|$|Note: Statistics are <b>updated</b> through week 7 of the 2017 NFL season.|$|E
40|$|When an <b>update</b> to a view is {{requested}} by a user, {{there may be}} no unique way of <b>updating</b> the stored relations in the database to realize the requested <b>update.</b> Chosing one of the alternatives for <b>updating</b> stored relations may not reflect the change that has actually taken place in the real world; in the presence of other derived views, the database may actually present a very wrong model of the world to the user. The problem is even more severe in the case of deductive databases. For avoiding this problem, we introduce a new notion of view <b>updates</b> for knowledge bases, called cumulative <b>updates.</b> The key idea behind cumulative <b>updates</b> is {{that in the case of}} ambiguities, <b>update</b> mechanisms should wait for further <b>update</b> requests to resolve them. Equivalently, current <b>update</b> requests must also take into account previous requests made to the knowledge base. Cumulative <b>updates,</b> therefore, subsume conventional <b>updates</b> in which only the current <b>update</b> request is considered. [...] ...|$|R
40|$|The eld {{of theory}} <b>update</b> has seen some improvement, in what regards <b>updating,</b> by {{allowing}} desired <b>updates</b> to be speci ed by <b>update</b> programs. The <b>updating</b> of models {{is governed by}} <b>update</b> rules, {{as well as by}} inertia applied to those literals not directly a ected by the <b>update</b> program. Though this is important, it remains necessary to tackle too the <b>updating</b> of theories speci ed by programs. In this paper we explore logic program <b>updates,</b> namely how to exert inertia on program rules rather than on the literals of their models. We de ne program <b>updates</b> and characterize them semantically, both for the 2 -valued and the 3 -valued cases. We also de ne iterated logic program <b>updating,</b> a crucial notion inasmuch as it allows us to conceive what it is to successively <b>update</b> one program by another, and so to prescribe the evolution of knowledge bases by means of <b>updates...</b>|$|R
5000|$|Algorithm RPM2D [...] while : while [...] has not converged: // <b>update</b> {{correspondence}} parameters by softassign [...] // apply Sinkhorn's method while [...] has not converged: // <b>update</b> [...] by normalizing {{across all}} rows: [...] // <b>update</b> [...] by normalizing across all columns: [...] // <b>update</b> pose parameters by coordinate descent <b>update</b> [...] using analytical solution <b>update</b> [...] using analytical solution <b>update</b> [...] using Newton's method [...] return [...] and ...|$|R
5|$|Rockoff, Stuart., Encyclopedia of Alabama, August 11, 2009 (Last <b>updated</b> January 27, 2010). Accessed March 4, 2010.|$|E
5|$|Statistics are last <b>updated</b> on 7 November 2017.|$|E
5|$|Statistics are <b>updated</b> {{through the}} end of the 2017 regular season.|$|E
50|$|Empirical {{analysis}} of cons-freeness and activeness safety by Hayden et all show that both techniques permit most correct <b>updates</b> and deny most erroneous <b>updates.</b> However, manually selecting <b>update</b> points results in zero <b>update</b> errors, and still allows frequent <b>update</b> availability.|$|R
40|$|Disability Studies Major/Minor Subcommittee <b>Update,</b> Needs Assessment Project Initiative (NAPI) Work Group <b>Update,</b> Living Legend <b>Update,</b> Asperger’s Syndrome Audio Conference Announcement, Music Mayhem, Fraser Hall <b>Update,</b> Marshall Access & Education Fund (MAEF) <b>Update,</b> New Endowment Fund, Diagnosis Does Not Guarantee Accommodation...|$|R
5000|$|Outputs: Project {{schedule}}, Schedule model data, schedule baseline, {{resource requirements}} <b>update,</b> activity attributes, project calendar <b>updates,</b> request changes, {{project management plan}} <b>updates,</b> schedule management plan <b>updates</b> ...|$|R
