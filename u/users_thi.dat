1|3|Public
40|$|Many Virtual Reality (VR) applications, such as Virtual Learning Environments or Interactive Virtual Tours, {{are based}} on a rich se-mantic {{description}} of the environment and tasks that users have to perform. These applications are built upon Virtual Environments (VEs) in which artificial agents act autonomously while interacting in realtime with users. Semantic modelling of a VR environment makes it possible the knowledge-driven access from the description of VEs that simplifies the development of VR applications. It eases the development of these types of applications. Semantic modelling should provide a consistent representation of the following aspects: 1) The simulated world, its structure and the behavior of its enti-ties, 2) Interactions and tasks, that users and agents can perform in the environment, 3) Knowledge items, that autonomous agents can use for decision-making or for communication with <b>users.</b> <b>Thi...</b>|$|E
40|$|This paper {{describes}} a technique for the recognition and tracking {{of every day}} objects. The goal {{is to build a}} system in which ordinary desktop objects serve as physical icons in a vision based system for man-machine interaction. In such a system, the manipulation of objects replaces <b>user</b> commands. <b>Thi...</b>|$|R
40|$|In many {{data sharing}} settings, such as within the {{biological}} and biomedical communities, global data consistency is not always attainable: different sites’ data may be dirty, uncertain, or even controversial. Collaborators are willing to share their data, {{and in many cases}} they also want to selectively import data from others — but must occasionally diverge when they disagree about uncertain or controversial facts or values. For this reason, traditional data sharing and data integration approaches are not applicable, since they require a globally consistent data instance. Additionally, many of these approaches do not allow participants to make updates; if they do, concurrency control algorithms or inconsistency repair techniques must be used to ensure a consistent view of the data for all <b>users.</b> In <b>thi...</b>|$|R
40|$|User Interface Specification and Graphical User Interface Generation. These steps will be {{explained}} in terms of a hypothetical task in an Insurance Information System. Consider a situation where the insurance company computerized its claims department separately from their customer's database, and therefore owns two separate subsystems, i. e., subsystem 1 and subsystem 2, containing their customer and claims information. Suppose further that in subsystem 2, the user must enter the customer's claim number in order to retrieve the data relevant to generating a report on the customer's accident, but she only knows the name of the customer. So she has to first search for the claim number in the subsystem 1 by entering the customer name, before she can go in subsystem 2 to retrieve the report data. Task Analysis Task analysis occurs in three phases: the first examines a single trace of the task, the second phase examines multiple traces of the same task performed by the same <b>user,</b> and the <b>thi</b> [...] ...|$|R

