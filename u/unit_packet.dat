7|91|Public
3000|$|... where M {{denotes the}} <b>unit</b> <b>packet</b> size (in bits), and the {{function}} ⌊x⌋ indicates the largest integer not greater than x. It is understood that [...]...|$|E
30|$|Our {{proposed}} implementation (Figure 2) first {{reads the}} PSDU (physical layer service data unit) data from memory, {{which can be}} a FIFO coming from the host command processor or an internal memory emulated by the MAC processor. Next, the packet data is used to form the PPDU (PLCP protocol data <b>unit)</b> <b>packet,</b> where we can choose to change the start-of-frame delimiter, add a cyclic redundancy check (CRC), change the CRC algorithm or polynomial, and change the maximum length of the packet. The symbol-to-chip mapping block allows us to modify the chipping sequence, which could allow for non-standard spreading codes for, e.g., strengthened privacy. The modulation is performed using OQPSK with configurable constellation and pulse shape.|$|E
40|$|We {{consider}} the Longest Queue Drop memory management policy in shared-memory switches consisting of N output ports. The shared memory of size M ≥ N {{may have an}} arbitrary number of input ports. Each packet may be admitted by any incoming port, but must be destined to a specific output port and each output port may be used by only one queue. The Longest Queue Drop policy is a natural online strategy used in directing the packet flow in buffering problems. According to this policy and assuming <b>unit</b> <b>packet</b> values and cost of transmis-sion, every incoming packet is accepted, whereas if the shared memory becomes full, one or more packets belonging to the longest queue are preempted, {{in order to make}} space for the newly arrived packets. It was proved in 2001 [Hahne et al., SPAA ’ 01] that the Longest Queue Drop policy is 2 -competitive and at least 2 -competitive. It remained an open question whether a (2 −) upper bound for the competitive ratio of this policy could be shown, for any positive constant. We show that the Longest Queue Drop online policy is 1. 5 -competitive...|$|E
50|$|The {{result is}} a bit-stream that is split into packets where a packet groups {{selected}} passes of all code blocks from a precinct into one indivisible <b>unit.</b> <b>Packets</b> {{are the key to}} quality scalability (i.e., packets containing less significant bits can be discarded to achieve lower bit rates and higher distortion).|$|R
40|$|We {{consider}} {{buffer management}} of <b>unit</b> <b>packets</b> with deadlines for a multi-port device with reconfiguration overhead. The {{goal is to}} maximize the throughput of the device, i. e., the number of packets delivered by their deadline. For a single port or with free reconfiguration, the problem reduces to the well-known packets scheduling problem, where the celebrated earliest-deadlinefirst (EDF) strategy is optimal 1 -competitive. However, EDF is not 1 -competitive {{when there is a}} reconfiguration overhead. We design an online algorithm that achieves a competitive ratio of 1...|$|R
50|$|Circuit {{switching}} {{contrasts with}} packet switching which divides {{the data to}} be transmitted into small <b>units,</b> called <b>packets,</b> transmitted through the network independently. Packet switching shares available network bandwidth between multiple communication sessions.|$|R
40|$|We {{consider}} {{the problem of}} designing risk-sensitive optimal control policies for scheduling packet transmissions in a stochastic wireless network. A single client is connected to an access point (AP) through a wireless channel. Packet transmission incurs a cost C, while packet delivery yields a reward of R units. The client maintains a finite buffer of size B, and a penalty of L units is imposed upon packet loss which occurs due to finite queueing buffer. We show that the risk-sensitive optimal control policy for such a simple set-up is of threshold type, i. e., it is optimal to carry out packet transmissions only when Q(t), i. e., the queue length at time t exceeds a certain threshold τ. It is also shown {{that the value of}} threshold τ increases upon increasing the cost per <b>unit</b> <b>packet</b> transmission C. Furthermore, it is also shown that a threshold policy with threshold equal to τ is optimal for a set of problems in which cost C lies within an interval [C_l,C_u]. Equations that need to be solved in order to obtain C_l,C_u are also provided. Comment: accepted for publication in IEEE Conference on Decision and Control 201...|$|E
40|$|We {{analyze the}} {{following}} problem: Each node of the d-dimensional hypercube independently generates packets {{according to a}} Poisson process with rate lambda. Each of the packets is {{to be sent to}} a randomly chosen destination; each of the nodes at Hamming distance k from a packet's origin is assigned an a priori probability p(k) (1 - p) (d-k). Packets are routed under a simple greedy scheme: each of them is forced to cross the hypercube dimensions required in increasing index-order, with possible queueing at the hypercube nodes. Assuming <b>unit</b> <b>packet</b> length and no other communications taking place, we show that this scheme is stable (in steady-state) if rho < 1, where rho=(def) lambda p is the load factor of the network; this is seen to be the broadest possible range for stability. Furthermore, we prove that the average delay T per packet satisfies T {{less than or equal to}} dp/ 1 -rho, thus showing that an average delay of Theta(d) is attainable for any fixed rho < 1. We also establish similar results in the context of the butterfly network. Our analysis is based on a stochastic comparison with a product-form queueing network...|$|E
40|$|Different {{applications}} of communication networks have different requirements {{that depend on}} the type of application. We consider the problem of differentiating between delay-sensitive applications based on their average delay requirements, as may be of interest in signalling networks. We consider packets of different classes that are to be transmitted on the same link with different average delay requirements, to reside in separate queues with the arrival statistics for the queues being specified. This statistical multiplexer has to schedule packets from different queues in so that the average delays of the queues approach the specified target delays as quickly as possible. For simplicity, we initially consider a discrete-time model with two queues and a single work-conserving server, with independent Bernoulli packet arrivals and <b>unit</b> <b>packet</b> service times. With arrival rates specified, achieving mean queue lengths in a ratio which corresponds to the ratio of target mean delays is a means of achieving individual target mean delays. We formulate the problem in the framework of Markov decision theory. We study two scheduling policies called Queue Length Balancing and Delay Balancing respectively, and show through numerical computation that the expectation of magnitude of relative error in θ (1 /m) and θ (1 /√m) respectively, and that the expectation of the magnitude of relative error in weighted average delays decays as θ (1 /√m) and θ (1 /m) respectively, where m is the averaging interval length. We then consider the model for an arbitrary number of queues each with i. i. d. batch arrivals, and analyse the errors in the average delays of individual queues. We assume that the fifth moment of busy period is finite for this model. We show that the expectation of the absolute value of error in average queue length for {{at least one of the}} queues decays at least as slowly as θ (1 /√m), and that the mean squared error in queue length for at least one of the queues decays at least as slowly as θ (1 /m). We show that the expectation of the absolute value of error in approximating Little’s law for finite horizon is 0 (1 /m). Hence, we show that the mean squared error in delay for at least one of the queues decays at least slowly as θ (1 /m). We also show that if the variance of error in delay decays for each queue, then the expectation of the absolute value of error in delay for at least one of the queues decays at least as slowly as θ (1 /√m) ...|$|E
40|$|Active Networks {{can be seen}} as an {{evolution}} of the classical model of packet-switched networks. The traditional and ”passive” network model is based on a static definition of the network node behaviour. Active Networks propose an “active” model where the intermediate nodes (switches and routers) can load and execute user code contained in the data <b>units</b> (<b>packets).</b> Active Networks are a programmable network model, where bandwidth and computation are both considered shared network resources. This approach opens up new interesting research fields. This paper gives a short introduction of Active Networks, discusses the advantages they introduce and presents the research advances in this field. ...|$|R
5000|$|An {{example is}} shown in Fig. 2. The example assumes each queue {{currently}} has only 3 commodities: red, green, andblue, and these are measured in integer <b>units</b> of <b>packets.</b> Focusing on the directed link (1,2), the differential backlogs are: ...|$|R
3000|$|... 2) Network throughput: The {{number of}} {{successfully}} transmitted packets of all flows {{during the entire}} simulation, and the <b>unit</b> is <b>packet.</b> A packet will be counted as a successfully transmitted packet when its delay {{is no more than}} the threshold.|$|R
40|$|I work as {{a science}} teacher at a school in Germany. While I have enjoyed taking all of my classes within the UNL Masters in Entomology Program, I am not, {{and will not be}} a {{practicing}} entomologist in my career. That is why I would like my thesis project to focus on using the lessons that I have learned in completing this distance education program to improve my teaching. I feel as if I learned a great deal about insects in this program, but in addition I also learned quite a bit about {{what works and what does}} not work in terms of designing asynchronous and online instructional materials. I have chosen to combine these two elements – the study of insects and distance instructional design – in addressing a consistent academic need on the parts of my students, namely statistical analysis skill development. The school where I work has had a 1 -to- 1 -laptop program since 2005. Every student in grades 7 through 12 has been issued a personal laptop for their academic use. Students are expected to bring their computers to every lesson, although there are many lessons where these machines are not utilized because the learning activities of the day do not require the use of a computer. As teachers we have been encouraged to develop “appropriate use(s) that enhance learning” by the administration of our school. Over this time, I have taught kids in grades 7 through 12, and I have tried my best to develop lessons that utilize laptops not simply to replace or replicate established modes of instruction, but rather to improve upon or reinforce sound teaching practice. I have also worked for the past 15 years as a teacher of the International Baccalaureate (IB) Higher and Standard Level Biology. IB Biology is a rigorous, two-year course that has a significant experimental component incorporated into its curriculum design. (For an overview of the material covered in IB Biology Courses, see the following link: [URL] IB Biology is, in my opinion, a far more demanding and thorough introductory course than that offered by The College Board and Advanced Placement (AP) Biology. Not only does the IB syllabus cover more topics within biology, it explores these topics in more detail. The IB Biology syllabus also required a minimum of 60 hours of lab work over the course’s two years. Much of this lab work involves the students designing their own independent lab investigations. Statistical analysis of data is expected as part of their lab work. Helping foster the development of statistical analysis skills is, I feel, one of the most challenging aspects of teaching the IB Biology curriculum. The IB Biology laboratory program requires that, wherever appropriate, students should show appropriate statistical analysis and the use of statistical tests that should inform students as they write up conclusions summarizing the findings of their experiments. Students are expected to perform statistical calculations, such as standard deviation as well as t-tests and chi-squared tests in processing their lab results. They should be able to perform a linear regression. They are also expected to document the uncertainties that accompany any of their measurements taken during their lab work. This expectation of statistical analysis on the parts of 11 th and 12 th graders has been to my experience, one of the most challenging aspects of teaching IB Biology. I try to teach the meaning of reliability and variability, and how to determine means, modes, and medians of data sets. (This tends to be the easier part.) The determination of standard deviations, t-test values, chi-squared values, and lines of best fit is more of a challenge. The most difficult aspect of teaching stats skills is getting the kids to interpret these statistical tests properly so that that can use them in drawing informed conclusions based on their data whereby they don’t just simply fall into the 9 th and 10 grade paradigm of analysis that says if the mean of one data set is bigger than that of another then one can confidently conclude that there is a significant difference between the two. I have, informally, “flipped” some aspects of my teaching of IB Biology. Using the school’s course management software, I have placed all of my course materials online for students to access. My students can access all of the <b>unit</b> <b>packet</b> materials, lab instructions, and supplemental pdf documents that I have created for my courses over the years. If a student wants to read up on DNA replication using these online materials prior to our covering the material together as a class in lessons, they can, but I have as a habit not prepared any of this online content specifically for students to work through independently as an introduction to the material prior to my talking about the topics in class. Much of this online content lacks the guidance necessary to allow students to approach a topic independently. What I have not done is create online materials that fully realize the “flipped classroom” model of instruction. I would like to send my student home each night with their homework being that they go through the prepared online materials for about 15 to 20 minutes. The next day in class, I would like to work through excel-based exercises in calculation of statistical values and tests, as well as the way in which the test values are interpreted to draw informed conclusions based on data. Ideally, I hope to lesson the amount of lecture that I have to deliver on the use of Excel and we will spend far more instructional time in the act of processing data. The other aspect of the challenge is that for the 11 th graders that come into my IB Biology classes they have not been formally introduced to statistics in their math courses. Biology teachers at our school are the first to introduce this mathematical material. We have to do it in September every Fall within the first 4 weeks of our school year because we need to start using stats in our lab work. While we cover stats early in the IB Bio course students need to be able to go back over it again and again as they collect their own data in later lab work over a two-year span. I always try to instill intellectual independence in my students – they need to be able to learn on their own in many ways as they prepare for university – and by putting this resource up online, kids can reference it when they need it, and come to me when they are really struggling with a data processing issue...|$|E
40|$|Steganography is {{the science}} of hiding {{information}} or transmitting secret messages in a given host carrier {{for the purpose of}} enhancing value through undetectable covers. The paper focuses on the existent methods used with ipv 4 and studies the various algorithms. Transfer of data over the internet crosses the different layers of the TCP and IP protocols. Each layer has its own characteristics, which indicate the scenarios in which it can best be used. Information can be hidden in the transport and network layers by usage of optional fields, semantic changes, and improper but acceptable construction of protocol data <b>units</b> (<b>packets).</b> Protocol steganography is the scheme to bypass the firewall. The TCP/IP has the following hidden channels namely the manipulation of HTML, XML, HTTP, UDP, TCP, IP, ICMP, Ethernet (CSMA/CD) in the four layers respectively...|$|R
50|$|The {{protocol}} {{is based}} on pairs of request/response PDUs (protocol data <b>units,</b> or <b>packets)</b> exchanged over OSI layer 4 (TCP session or X.25 SVC3) connections. The well-known port assigned by the IANA for SMPP when operating over TCP is 2775, but multiple arbitrary port numbers are often used in messaging environments.|$|R
40|$|The Internet is a global, {{publicly}} accessible, complex {{network of}} interconnected computer networks {{that uses the}} standard Internet Protocol(IP) to transmit data by dividing it into smaller <b>units,</b> called <b>packets.</b> These packets pass through routers, that connect separate networks, to reach their destinations. Whenever a packet reaches a router, that router has {{to decide on the}} next router o...|$|R
40|$|This thesis {{deals with}} {{the design of a}} {{universal}} hardware acceleration <b>unit</b> for <b>packet</b> filtering in FPGA for 10 G networks. Maximum count of rules is greatly increased by the use of external QDR-II memory. Parameters of accelerator are suitable for NAT, packet filtering and lawful interceptions. The platform uses variable number of processing units. One of them controls accelerator by USB port. The rest is used for network processing...|$|R
40|$|We {{consider}} {{buffer management}} of <b>unit</b> <b>packets</b> with deadlines for a multi-port device with reconfiguration overhead. The {{goal is to}} maximize the throughput of the device, i. e., the number of packets delivered by their deadline. For a single port or with free reconfiguration, the problem reduces to the well-known packets scheduling problem, where the celebrated earliest-deadline-first (EDF) strategy is optimal 1 -competitive. However, EDF is not 1 -competitive {{when there is a}} reconfiguration overhead. We design an online algorithm that achieves a competitive ratio of 1 − o(1) when the ratio between the minimum laxity of the packets and the number of ports tends to infinity. This is one of the rare cases where one can design an almost 1 -competitive algorithm. One ingredient of our analysis, which may be interesting on its own right, is a perturbation theorem on EDF for the classical packets scheduling problem. Specifically, we show that a small perturbation in the release and deadline times cannot significantly degrade the optimal throughput. This implie...|$|R
3000|$|... where {{t is the}} MAG {{residence}} time for a mobile multicast source, dlr denotes the hop distance between the LMA and the RP, λs denotes the multicast source session arrival rate, S represents the average session size in the <b>unit</b> of <b>packet,</b> Ls is the multicast packet size, Sh {{is the size of}} the extra header for the packet encapsulation, and m represents the number of multicast groups for a certain source.|$|R
40|$|Delay Tolerant Networking (DTN) and Information Centric Networking (ICN) bear {{numerous}} similarities. In particular, both may {{operate on}} larger information <b>units</b> than <b>packets</b> {{that can be}} identified by means of metadata. Caching, searching, and content-based routing have been explored individually in both areas. In this paper, we combine the two techniques and extend the traditional caching and data retrieval approaches (“read”) to support changing data in caches (“write”) {{in order to allow}} local content copies to evolve through modifications during network partitions...|$|R
5000|$|Excise stamps {{are most}} {{commonly}} found on tobacco and alcohol products, which reach the consumer in neatly packaged <b>units</b> (namely <b>packets</b> and bottles) {{to which the}} adhesive stamp is easily affixed. Since counterfeit alcohol and cigarettes are extremely common in many countries, {{the presence of a}} genuine excise stamp also goes some way towards guaranteeing the genuineness of the product, as only certified producers may legally buy excise stamps. (However, illegally obtained or counterfeit stamps are common in some countries.) ...|$|R
40|$|The {{immunological}} inspired {{distributed learning}} environment (IIDLE) {{is a novel}} learning system that belongs {{to the field of}} artificial immune systems. It is inspired by specific characteristics of the acquired immune system such as a spatially distributed population of discrete information <b>packets</b> (<b>units)</b> and internal regulatory processes. IIDLE is a relatively|$|R
40|$|Abstract — Wireless MESH {{networks}} {{are a new}} networking paradigm that allow to extend the coverage of traditional wireless access networks with multi-hop connections through fixed wireless mesh routers. Wireless MESH networks partially replace wired backbone networks, and {{it is reasonable to}} carefully plan radio resource assignment in order to provide quality guarantees to traffic flows. Differently from ad hoc networks, energy consumption is usually not a problem with wireless MESH routers, routes are quite stable and bandwidth requirements of traffic flows can be considered almost constants. In this paper we study the scheduling optimization problem in wireless MESH networks assuming a time division multiple access (TDMA) scheme, a dynamic power control able to vary emitted power slot-by-slot, and a rate adaptation mechanism that sets transmission rates according to the signal-to-interference-andnoise ratio (SINR). Traffic quality requirements are expressed in terms of minimum bandwidth and modelled with constraints defining the number of information <b>units</b> (<b>packets)</b> that must be transmitted on each link per frame. We propose an alternative problem formulation where decision variables represent compatible sets of links active in the same slot. Approaches to solve both lower and upper bound for the problem are proposed: since compatible set variables are exponentially many, we use column generation to compute a lower bound for the problem. Heuristic approaches to compute feasible integer solutions are proposed and tested...|$|R
5000|$|An instruction, {{along with}} its {{required}} data operands, is transmitted to an execution <b>unit</b> as a <b>packet,</b> also called an instruction token. Similarly, output data is transmitted back to the CAM as a data token. The packetization of instructions and results allows for parallel execution of ready instructions on a large scale.|$|R
40|$|The {{concept of}} Quality of Service (QoS) {{networks}} has gained growing attention recently, as the traffic volume in the Internet constantly increases, and QoS guarantees {{are essential to}} ensure proper operation of most communication based applications. A QoS switch serves m incoming queues by transmitting packets arriving at these queues through one output port, one <b>packet</b> per time <b>unit.</b> Each <b>packet</b> is marked with a value indicating its guaranteed quality of service. Since the queues have bounded capacity {{and the rate of}} arriving packets can be much higher than the transmission rate, packets can be lost due to insufficient queue space...|$|R
40|$|On-chip source-synchronous serial {{communication}} has many advantages over multi-bit parallel {{communication in the}} aspects of skew, crosstalk, area cost, wiring difficulty, and clock synchronization. However, the serial wire tends to dissipate more energy than parallel bus due to the bit multiplexing. In this paper, we propose a novel coding method to reduce the transmission energy of the {{serial communication}} by minimizing the number of transitions on the serial wire. We demonstrate the significant energy saving in a multimedia application, 3 D graphics. We also apply the coding technique to a CMOS SoC implementation which integrates various processing <b>units</b> with <b>packet</b> switched on-chip networks. 1...|$|R
40|$|Communication {{bandwidth}} and latency reduction {{techniques are}} developed for Distributed Interactive Simulation (DIS) protocols. DIS Protocol Data <b>Unit</b> (PDU) <b>packets</b> are bundled together prior to transmission based on PDU type, internal structure, and content over a sliding window {{of up to}} C adjacent transmission requests, for 1 < C < 64. At the receiving nodes, the packets are replicated as necessary to reconstruct the original packet stream. Bundling strategies including Always- Wait, Always-Send, Type-Only prediction, Type-Length prediction, and Type-Length-Time prediction are developed and then evaluated using both heuristic parameters and a gradient descent backpropagation neural network. Several communication case studies from the One Semi-Automated Forces (OneSAF) Testbed Baseline (OTB...|$|R
40|$|With {{the advent}} of {{multicore}} processors and system-on-chip designs, intra-chip communication demands have exacerbated, leading to a grow-ing adoption of scalable networks-on-chip (NoCs) as the interconnect fabric. Today, conventional NoC designs may consume up to 30 % of the entire chip’s power budget, in large part due to leakage power. In this work, we address this issue by proposing Panthre: our solu-tion deploys power-gating to provide long intervals of uninterrupted sleep to selected <b>units.</b> <b>Packets</b> that would normally use power-gated components are steered away via topology and routing reconfigura-tion, while Panthre provides low-latency alternate paths to their desti-nations. The routing reconfiguration operates in a distributed fashion and guarantees that deadlock-free routes are available at all times. At runtime, Panthre adapts to the application’s communication patterns by updating its power-gating decisions. It employs a feedback-based distributed mechanism to control the amount of sleeping components and of packets detours, so that performance degradation is kept at a minimum. Our design is flexible, providing a mechanism that design-ers can use to tradeoff power savings with performance, based on ap-plication’s requirements. Our experiments on multi-programmed communication-light work-loads from the SPEC CPU 2006 suite show that Panthre reduces total network power consumption by 14. 5 % on average, with only a 1. 8 % degradation in performance, when all processor nodes are active. At times when 15 - 25 % of the processor cores are communication-idle, Panthre enables leakage power savings of 36. 9 % on average, while still providing connected and deadlock-free routes for all other nodes...|$|R
30|$|A CONTROL packet is {{transmitted}} by {{the base station}} to the telemetry unit and contains commands to set parameters such as the conversion rate, the active channel number, the transmission power and whether only strain or strain and motion information are to be transmitted by the <b>unit.</b> A CONTROL <b>packet</b> {{is also used to}} signal the unit to enter or exit the SLEEP mode.|$|R
5000|$|... #Caption: In physics, a wave packet {{is a short}} [...] "burst" [...] or [...] "envelope" [...] of {{wave action}} that travels as a <b>unit.</b> A wave <b>packet</b> can be {{analyzed}} into, or can be synthesized from, an infinite set of component sinusoidal waves of different wavenumbers, with phases and amplitudes such that they interfere constructively only over a small region of space, and destructively elsewhere.|$|R
40|$|Wireless Mesh {{networks}} (WMNs) can partially {{replace the}} wired backbone of traditional wireless access networks and, similarly, they require to carefully plan radio resource assignment {{in order to}} provide the same quality guarantees to traffic flows. In this paper we study the radio resource assignment ptimization problem in wireless Mesh networks assuming a time division multiple access (TDMA) scheme, a dynamic power control able to vary emitted power slot-by-slot, and a rate adaptation mechanism that sets transmission rates according to the signalto- interference-and-noise ratio (SINR). The proposed optimization framework includes routing, scheduling and channel assignment. Quality requirements of traffic demands are expressed in terms of minimum bandwidth and modeled with constraints defining the number of information <b>units</b> (<b>packets)</b> that must be delivered per frame. We consider an alternative problem formulation where decision variables represent compatible sets of links active in the same slot and channel, called configurations. We propose a two phases solution approach where a set of configurations is first selected to meet traffic requirements along the best available paths, and then configurations are assigned to channels according to device characteristics and constraints. The optimization goal is to minimize the number of used slots, which {{is directly related to the}} global resource allocation efficiency. We provide a lower bound of the optimal solution solving the continuous relaxation of problem formulation. Moreover, we propose a heuristic approach to determine practical integer solutions (upper bound). Since configuration variables are exponentially many, our solution approaches are based on the Column Generation technique. In order to assess the effectiveness of the proposed algorithms we show the numerical results obtained on a set of realistic-size randomly generated instances...|$|R
40|$|Abstract. All-to-all {{broadcast}} scheduling {{problems are}} considered in WDM optical passive star networks where k wavelengths {{are available in}} the network. It is assumed that each node has exactly one tunable transmitter and one xed tuned receiver. All transmitters can tune to k di erent wavelengths, and have the same tuning delay to tune from one wavelength to another. In this paper, we take to be a nonnegative integer which can be expressed in <b>units</b> of <b>packet</b> durations. When all-to-all broadcasts are scheduled periodically in the network, the lower bounds are established on the minimum cycle length depending on whether each node sends packets to itself or not. And then, we present optimal scheduling algorithms in both cases for arbitrary number of wavelengths and for arbitrary value of the tuning delay. 1...|$|R
50|$|Where PA is the preamble, SD is a start delimiter, FC is frame control, DA is the {{destination}} address, SA {{is the source}} address, PDU is the protocol data <b>unit</b> (or <b>packet</b> data <b>unit),</b> FCS is the frame check Sequence (or checksum), and ED/FS are the end delimiter and frame status.The Internet Engineering Task Force defined a standard for transmission of the Internet Protocol (which would be the protocol data unit in this case) over FDDI.It was first proposed in June 1989 and revised in 1990.Some aspects of the protocol were compatible with the IEEE 802.2 standard for logical link control. For example, the 48-bit MAC addresses that became popular with the Ethernet family. Thus other protocols such as the Address Resolution Protocol (ARP) could be common as well.|$|R
50|$|In {{other systems}} (e.g., IP/RTP systems), the coded data is carried in packets that are {{framed by the}} system {{transport}} protocol, and identification of the boundaries of NAL <b>units</b> within the <b>packets</b> can be established without use of start code prefix patterns. In such systems, the inclusion of start code prefixes in the data {{would be a waste}} of data carrying capacity, so instead the NAL units can be carried in data packets without start code prefixes.|$|R
40|$|Network {{processing}} is requisite {{for modern}} day secure networks. Extended finite automata (XFA) are a contemporary {{variation of the}} deterministic and non-deterministic finite automata which were either slow or memory inefficient. XFAs are both fast and memory efficient since they are deterministic in their operation and avoid state explosion {{by the addition of}} small scratch memory which is updated by small programs attached to each state. In this work we propose to implement XFAs on a graphical processing <b>unit.</b> As <b>packet</b> stream processing inherently exposes parallelism, it is a prime candidate for graphical processing units. Current processing rates of GPUs are far faster then with standard CPUs. Additionally, GPUs are growing at much greater rates then CPUs. With this fast processing speed we anticipate a high level of speed-up when utilizing the GPU for XFA packet processing when compared to CPU only...|$|R
30|$|In {{the same}} {{scenario}} of Figure 3, when the TB algorithm {{runs out of}} tokens, the out-of-profile EF and AF packets are detected, {{which means that the}} sender generates more <b>packets</b> per time <b>unit</b> than the <b>packets</b> allowed by the SLA. For fixed networks with a relatively low RTT, the general recommendation is to drop these out-of-profile packets[9]. Nevertheless, the situation over the DVB-S 2 satellite link is different, because this type of link virtually does not loose packets, given that the RTT is high.|$|R
