22|10000|Public
500|$|Users of the Hightail service <b>upload</b> <b>a</b> <b>file</b> to Hightail's servers and {{recipients}} {{are provided with}} a link where the file can be downloaded. Users can also manage files in an online folder system, or create desktop folders that access online storage.|$|E
5000|$|... to <b>Upload</b> <b>a</b> <b>file</b> to a WebDav {{repository}} davix-put local_file davs://example.com/folder1/remote_file ...|$|E
5000|$|DropSend is an {{application}} to send large files (up to 8GB) {{to other people}} without being restricted by email attachment sizes. With DropSend you <b>upload</b> <b>a</b> <b>file</b> online and the receiver gets an email with a download link.|$|E
50|$|File execution. This payload for {{targets that}} run Windows <b>uploads</b> <b>a</b> <b>file</b> and executes it.|$|R
50|$|File hosting {{services}} {{may be used}} as a means to distribute or share files without consent of the copyright owner. In such cases one individual <b>uploads</b> <b>a</b> <b>file</b> to <b>a</b> <b>file</b> hosting service, which others can then download. Legal assessments can be very diverse.|$|R
50|$|The Japanese {{security}} firm NetAgent is claiming (2010) {{that they have}} created software capable of deciphering encrypted information such as the IP address of the original computer <b>uploading</b> <b>a</b> <b>file</b> {{as well as the}} file name and other details of Perfect Dark.|$|R
50|$|This tab is {{selected}} by default because this {{the most frequently}} used option. You can enter valid IDs in the box or <b>upload</b> <b>a</b> <b>file,</b> then select list type, choose organism of interest and select the type of analysis.|$|E
50|$|Researchers {{may also}} use the browser to display their own data via the Custom Tracks tool. This feature allows users to <b>upload</b> <b>a</b> <b>file</b> of their own data and view the data {{in the context of}} the {{reference}} genome assembly. Users may {{also use the}} data hosted by UCSC, creating subsets of the data of their choosing with the Table Browser tool (such as only the SNPs that change the amino acid sequence of a protein) and display this specific subset of the data in the browser as a Custom Track.|$|E
50|$|High {{school teacher}} Hideki Satomi (Hiroshi Mikami), his wife, Ayaka (Noriko Sakai) {{who works as}} a {{psychology}} teacher, and their five-year-old daughter, Nana (Hana Inoue) are driving home to Tokyo after a vacation. While on a country road, Hideki stops to <b>upload</b> <b>a</b> <b>file</b> on a phonebooth. Inside, he sees a newspaper scrap showing his daughter being involved in a car crash, dated just a minute later at 8:00 PM. As Ayaka steps outside to get Hideki's help on Nana's jammed seatbelt, a truck smashes through their car, killing Nana. A distraught Hideki tries to find the newspaper scrap when the media comes while Ayaka tearfully tries to stop him.|$|E
25|$|The batch {{processing}} feature permits users to submit {{more than one}} sequence to Phyre2 by <b>uploading</b> <b>a</b> <b>file</b> of sequences in FASTA format. By default, users have a limit of 100 sequences in a batch. This limit can be raised by contacting the administrator.|$|R
50|$|In computing, POST is {{a request}} method {{supported}} by the HTTP protocol used by the World Wide Web. By design, the POST request method requests that a web server accept the data enclosed {{in the body of}} the request message, most likely for storing it. It is often used when <b>uploading</b> <b>a</b> <b>file</b> or when submitting a completed web form.|$|R
50|$|Submit {{a protein}} or DNA {{sequence}} for SCOP superfamily and family level classification using the SUPERFAMILY HMM's. Sequences can be submitted either by raw input or by <b>uploading</b> <b>a</b> <b>file,</b> but all {{must be in}} FASTA format. Sequences can be amino acids, a fixed frame nucleotide sequence, or all frames of a submitted nucleotide sequence. Up to 1000 sequences can be run at a time.|$|R
50|$|The {{workflow}} of Google Translator Toolkit can {{be described}} as follows. First, users <b>upload</b> <b>a</b> <b>file</b> from their desktop or enter a URL of a web page or Wikipedia article that they want to translate. Google Translator Toolkit automatically 'pretranslates' the document. It divides the document into segments, usually sentences, headers, or bullets. Next, it searches all available translation databases for previous human translations of each segment. If any previous human translations of the segment exist, Google Translator Toolkit picks the highest-ranked search result and 'pretranslates' the segment with that translation. If no previous human translation of the segment exists, it uses machine translation to produce an 'automatic translation' for the segment, without intervention from human translators.|$|E
5000|$|The BitTorrent {{protocol}} {{can be used}} {{to reduce}} the server and network impact of distributing large files. Rather than downloading a file from a single source server, the BitTorrent protocol allows users to join a [...] "swarm" [...] of hosts to upload to/download from each other simultaneously. The protocol is an alternative to the older single source, multiple mirror sources technique for distributing data, and can work effectively over networks with lower bandwidth. Using the BitTorrent protocol, several basic computers, such as home computers, can replace large servers while efficiently distributing files to many recipients. This lower bandwidth usage also helps prevent large spikes in internet traffic in a given area, keeping internet speeds higher for all users in general, {{regardless of whether or not}} they use the BitTorrent protocol. A user who wants to <b>upload</b> <b>a</b> <b>file</b> first creates a small torrent descriptor file that they distribute by conventional means (web, email, etc.). They then make the file itself available through a BitTorrent node acting as a seed. Those with the torrent descriptor file can give it to their own BitTorrent nodes, which—acting as peers or leechers—download it by connecting to the seed and/or other peers (see diagram on the right).|$|E
30|$|We {{note that}} an {{operation}} might fail to complete successfully. The error response in general contains information that helps identify the party {{responsible for the}} failure: the customer or the S 3 infrastructure. For example, NoSuchBucket errors are caused by the customer {{when they try to}} <b>upload</b> <b>a</b> <b>file</b> into a non-existent bucket; whereas an InternalError code indicates that S 3 is experiencing internal problems. Our understanding is that the consumer is charged for an operation, whether the operation succeeded or not.|$|E
5000|$|Lotus Mashups has {{the ability}} to {{integrate}} portlets into mashup projects. This is accomplished either by importing a portlet from a connected Websphere Portal server, or by <b>uploading</b> <b>a</b> [...]WAR <b>file.</b>|$|R
5000|$|A {{revision}} of a REST API can be updated by <b>uploading</b> <b>a</b> Swagger definition <b>file.</b>|$|R
50|$|The batch {{processing}} feature permits users to submit {{more than one}} sequence to Phyre2 by <b>uploading</b> <b>a</b> <b>file</b> of sequences in FASTA format. By default, users have a limit of 100 sequences in a batch. This limit can be raised by contacting the administrator.Batch jobs are processed in the background on free computing power as it becomes available. Thus, batch jobs will often take longer than individually submitted jobs, but this is necessary to allow a fair distribution of computing resources to all Phyre2 users.|$|R
40|$|This tool {{allows users}} to upload {{longitude}} and latitude coordinates in decimal degrees and create a dynamic map. The map will zoom in and out, recenter (pan), and allow a query of the dots (if web addresses {{are associated with the}} dots). Using the left mouse button enables the user to drag a bounding box and zoom in. The user can either copy and paste coordinates into an online form or <b>upload</b> <b>a</b> <b>file</b> from a computer. Educational levels: General public, High school, Middle school, Undergraduate lower division...|$|E
40|$|This 90 -minute, {{hands-on}} session {{will explore}} new G Suite features recently added by Google. Topics include: Explore in Docs, Slides, and Sheets; Templates Gallery; predict question type and <b>upload</b> <b>a</b> <b>file</b> feature with Forms; Assign action items, Insert TOC with page numbers, format columns, Outline View in Docs; G Suite Training Chrome extension. Using the new Template Gallery, save time editing and republishing PDFs and use Google Doc 2 ̆ 7 s preview mode instead to make content {{that is not}} only accessible, but is up to date and easy to read on any any device...|$|E
40|$|The goal in {{creating}} a user interface {{was to provide a}} means for initializing CMS+ and executing it without having to edit lines of code, as well as for presenting the ranking output in an aesthetically pleasing and familiar layout. As far as basic functionality was concerned, the user interface would allow a user to <b>upload</b> <b>a</b> <b>file</b> containing the various statistics of every team for that season, view that uploaded file, set the values of the different parameters {{to be used in the}} actual algorithm, execute the algorithm in order to generate a unique ranking, and finally to view the ranking...|$|E
25|$|Externally {{produced}} {{data can}} also {{be added to the}} display, either via a DAS (Distributed Annotation System) server on the internet, or by <b>uploading</b> <b>a</b> suitable <b>file</b> in one of the supported formats, such as BAM, BED, or PSL.|$|R
5000|$|When Chuck is knocked {{unconscious}} by Shaw, he has {{a flashback}} from around the same time. A young Chuck walks into his father's office and uncovers several computers. He <b>uploads</b> <b>a</b> <b>file</b> of encoded images, revealed to be a prototype of the Intersect. Stephen walks in, shocked. Checking the computer, he realizes {{that it was a}} full transfer and Chuck did not feel any side effects. Chuck asks what the file meant. Stephen tells him that it means he's [...] "special." [...] This flashback [...] "reboots" [...] Chuck's brain and enables him to defeat Shaw in 2010.|$|R
5000|$|MediaWiki stores {{uploaded}} {{files in}} directories with names {{derived from the}} base-36 representation of <b>an</b> <b>uploaded</b> <b>file's</b> checksum.|$|R
40|$|Abstract. In Web applications, it {{is often}} needed to <b>upload</b> <b>a</b> <b>file</b> to the server. With current file upload methods, it is {{difficult}} to deal with large file uploading and user experience is also bad. Uploading big files often failed because of network interruption and the client had to reupload. With the development of HTML 5 technology,a series of API about file operation emerged. This makes it possible to use javascript on the client side to slice local files and further achieve the function of file broken-point continuingly-transferring. On the basis,this paper solves timeout problem of merging files and correctness problem of the final file on the server side...|$|E
40|$|This master&# 8217;s thesis {{deals with}} protein {{secondary}} structure prediction. There is a theoretical introduction followed by study of available tools, proposal {{and implementation of}} web application, which combines functionality of several web tools used to predict secondary structure. User is asked to choose prediction methods and insert input sequence as plain text or <b>upload</b> <b>a</b> <b>file.</b> Results collected from selected tools serve to convert data into common format, show the result and create new type of prediction. Finally, the testing is applied and influences of tools are adjusted {{in order to increase}} percentage of prediction. The output of application is a result of prediction also available as plain text or as a file...|$|E
40|$|Web {{services}} {{have been a}} fast evolving field fuelled by the ever-changing customer expectations. As new technologies emerge, investigating and introducing new tools can optimize the time and improves the methods of building web-oriented enterprise applications and web services. With every such advancements, the interface used for inserting new records has to be updated to allow the user to <b>upload</b> <b>a</b> <b>file</b> from their computer and extra steps {{must be taken to}} display or provide means of downloading record associated with binary data, which is challenging. In this context, in this paper, a fully functional application is displayed and associated it with many types and size of data to upload by using ASP. NET. The paper reviews different techniques for storing data and explore how to enable users to <b>upload</b> <b>a</b> <b>file</b> from their computer and have it saved on the web server's file system. This would provide the basis for easy ways of storing and retrieving data directly within the database which involves a bit more code than working with data through the file system. Additionally, in order for a user to view or download data they must be presented with a URL to that data. If the data resides on the web server's file system, the URL would be a straightforward process. And if the data is stored in the database, a web page needs to be created and retrieve and return the data from the database. Further, if the data is stored on the file system, the demand and network congestion between the database server and web server will be less than when the data is stored directly within the database...|$|E
5000|$|With {{the manual}} <b>upload</b> option <b>a</b> user simply add songs to their {{collections}} by choosing the songs he wish to <b>upload</b> from <b>a</b> <b>file</b> folder and start uploading by clicking the [...] "Upload" [...] button. A progress bar will then appear, moving {{from left to}} right below the list, showing how much of the topmost song in the list has been uploaded.|$|R
40|$|MITOPRED {{web server}} enables {{prediction}} of nucleus-encoded mitochondrial proteins in all eukaryotic species. Predictions are made {{using a new}} algorithm based primarily on Pfam domain occurrence patterns in mitochondrial and non-mitochondrial locations. Pre-calculated predictions are instantly accessible for proteomes of Saccharomyces cerevisiae, Caenorhabditis elegans, Drosophila, Homo sapiens, Mus musculus and Arabidopsis species {{as well as all}} the eukaryotic sequences in the Swiss-Prot and TrEMBL databases. Queries, at different confidence levels, can be made through four distinct options: (i) entering Swiss-Prot/TrEMBL accession numbers; (ii) <b>uploading</b> <b>a</b> local <b>file</b> with such accession numbers; (iii) entering protein sequences; (iv) <b>uploading</b> <b>a</b> local <b>file</b> containing protein sequences in FASTA format. Automated updates are scheduled for the pre-calculated prediction database so as to provide access to the most current data. The server, its documentation and the data are available from [URL]...|$|R
50|$|For {{the purpose}} of security, input that crosses a trust {{boundary}} is often the most interesting. For example, {{it is more important}} to fuzz code that handles the <b>upload</b> of <b>a</b> <b>file</b> by any user than it is to fuzz the code that parses <b>a</b> configuration <b>file</b> that is accessible only to a privileged user.|$|R
40|$|The {{importance}} of security is increasing in a current network system. We {{have found a}} big security weakness at the file integration when the people download or <b>upload</b> <b>a</b> <b>file</b> and propose a novel solution how to ensure {{the security of a}} file. In particular, hash value can be applied to ensure a file due to a speed and architecture of file transfer. Hash server stores all the hash values which are updated by file provider and client can use these values to entrust file when it downloads. FileShader detects to file changes correctly, and we observed that it did not show big performance degradation. We expect FileShader can be applied current network systems practically, and it can increase a security level of all internet users...|$|E
30|$|At this point, {{the first}} part of {{authorisation}} has finished, but OpenStack platform has an additional second authorisation step that is performed by the service. After consulting Keystone, Swift needs to evaluate the request against its own policies, for checking whether the user has permission to conduct the requested operation. The Swift PEP then activates Swift PDP to decide (7) whether the user can conduct the requested operation (e.g., <b>upload</b> <b>a</b> <b>file).</b> Swift PDP obtains the access control policies for the service (8 a) and uses the Swift PIP (8 b) to obtain any information that it needs for evaluating the access control policy. Once an access decision is granted (9), Swift PEP allows the user to perform the requested operation (represented by Step 10 towards the Object) and returns to the user a response to the request (Steps 11 and 12).|$|E
40|$|In this paper, {{we study}} Vehicle-to-vehicle (V 2 V) and Vehicle-to-roadside (V 2 R) {{communications}} for vehicles {{that aims to}} <b>upload</b> <b>a</b> <b>file</b> when it is within the APs ’ coverage ranges, where both the channel contention level and transmission data rate vary over time. Dynamic optimal random access (DORA) algorithm scheme achieves an upload ratio 130 % and 207 % better than the heuristic schemes at low and high traffic densities, respectively. The problem with this DORA is that it provides communication to all nodes when one node request the service, this problem can be avoided by the same vehicle based algorithm with server based manner. We evaluate the performance of our system using the ns 2 simulation platform and compare our scheme to existing solutions. The result shows the efficiency and feasibility of our scheme...|$|E
50|$|As {{part of the}} operation, the Dutch {{security}} firm Fox-IT was able to procure the database of private keys used by CryptoLocker; in August 2014, Fox-IT and fellow firm FireEye introduced an online service which allows infected users to retrieve their private key by <b>uploading</b> <b>a</b> sample <b>file,</b> and then receive a decryption tool.|$|R
3000|$|... that {{controls}} who can invoke the <b>upload</b> <b>file</b> operation. <b>A</b> consumer initially performs an unauthorized request for <b>uploading</b> <b>a</b> <b>file</b> (the file {{is not included}} in this request). The web application generates a token using the UUID Python function, it responds to the consumer by encoding the token in an HTTP header and updates the Token Table. The consumer software initiates the authentication and the authorization process described in Section 4.1. Then, it issues an authorized request, by encoding the request parameters in HTTP headers and the file as raw POST data. The web application executes the authorized request decision algorithm and if the consumer is allowed to upload the file, it stores it in the Google Drive. When uploading files, consumers are able to specify a U [...]...|$|R
50|$|Freenet's focus lies on {{free speech}} and anonymity. Because of that, Freenet acts {{differently}} at certain points that are (directly or indirectly) related to the anonymity part. Freenet attempts to protect the anonymity of both people inserting data into the network (uploading) and those retrieving data from the network (downloading). Unlike file sharing systems, {{there is no need}} for the uploader to remain on the network after <b>uploading</b> <b>a</b> <b>file</b> or group of files. Instead, during the upload process, the files are broken into chunks and stored on a variety of other computers on the network. When downloading, those chunks are found and reassembled. Every node on the Freenet network contributes storage space to hold files and bandwidth that it uses to route requests from its peers.|$|R
