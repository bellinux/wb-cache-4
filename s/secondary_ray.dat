17|300|Public
25|$|Soviet {{physicist}} Sergey Vernov was {{the first}} to use radiosondes to perform cosmic ray readings with an instrument carried to high altitude by a balloon. On 1 April 1935, he took measurements at heights up to 13.6 kilometers using a pair of Geiger counters in an anti-coincidence circuit to avoid counting <b>secondary</b> <b>ray</b> showers.|$|E
50|$|Working with a {{modified}} Molchanov sonde, Sergey Vernov {{was the first}} to use radiosondes to perform cosmic ray readings at high altitude. On April 1, 1935, he took measurements up to 13.6 km using a pair of Geiger counters in an anti-coincidence circuit to avoid counting <b>secondary</b> <b>ray</b> showers. This became an important technique in the field, and Vernov flew his radiosondes on land and sea over the next few years, measuring the radiation's latitude dependence caused by the Earth's magnetic field.|$|E
40|$|Using Sal 57 S as test organism, {{the author}} studied {{biological}} effect of x-ray radiation by observing the lethal effect under various conditions, {{in which the}} state of the organism at irradiation, the properties of the material that gives <b>secondary</b> <b>ray</b> and the dosis of radiation were studied in different combinations. The lethal effect mentioned above was measured by enumeration of surviving cells and the following results were obtained. 1) The surviving curve obtained by the irradiation on cell suspension of the microorganisms could be represented in an exponential curve. In this study, several kinds of solutions were examined using as the liquid media of the bacterial suspension, i. e. normal saline, phosphate buffer, Fe++ added normal saline and Mg++ added normal saline. The survival rates obtained on each suspension were not different to a significant degree. However, the survival rate was somewhat decreased at the examination on the suspension into which platine wire was submerged. 2) The survival rates obtained by the x-ray irradiation on cell suspensions in different concentrations were quite the same on either suspensions. However, in comparative study between the irradiation on a homogeneous cell suspension, and that on unhomogeneous cell suspension, the later showed a higher survival rate. 3) The surviving curve obtained by the irradiation on a spreaded growth on the entire surface of nutrient agar was also repesentable by exponential curve. An application of lead plate as the material which gives <b>secondary</b> <b>ray</b> showed prominient reinforcement of lethal effect. The surviving curve vas deviated from the original curve to a downward concaved curve on semi-log co-ordinates. 4) The lethal effect to dry cells was inferior than that to wet cells and also the effect was reinforced by an application of lead plate as material which gives <b>secondary</b> <b>ray.</b> 5) The reinforcement of lethal effect by <b>secondary</b> <b>ray</b> was studied using several materials as the emitter for <b>secondary</b> <b>ray.</b> In this study the effect was determined by means of the growth observed on nutrient agar plate. As the result of this study, the effect of reinforcement came in following order Pb, Cu, Al then wooden plate; this order was the same as atomic numbers. The scondary ray could be easily intercepted even by a sheet of paper, acordingly, the lethal effect by the <b>secondary</b> <b>ray</b> was markedly decreased as an increase of the distance between the emitter and the surface of madia...|$|E
40|$|This paper {{presents}} an efficient method to trace <b>secondary</b> <b>rays</b> in depth-of-field (DOF) rendering, which significantly enhances realism. Till now, the effects by <b>secondary</b> <b>rays</b> have been little addressed in real-time/interactive DOF rendering, because <b>secondary</b> <b>rays</b> have less coherence than primary rays, making them {{very difficult to}} handle. We propose novel measures to cluster <b>secondary</b> <b>rays,</b> and take a virtual viewpoint to construct a layered image-based representation for the objects that would be intersected by a cluster of <b>secondary</b> <b>rays</b> respectively. Therefore, we can exploit coherence of <b>secondary</b> <b>rays</b> in the clusters to speed up tracing <b>secondary</b> <b>rays</b> in DOF rendering. Results show that we can interactively achieve DOF rendering effects with reflections or refractions on a commodity graphics card. This paper {{presents an}} efficient method to trace <b>secondary</b> <b>rays</b> in depth-of-field (DOF) rendering, which significantly enhances realism. Till now, the effects by <b>secondary</b> <b>rays</b> have been little addressed in real-time/interactive DOF rendering, because <b>secondary</b> <b>rays</b> have less coherence than primary rays, making them very difficult to handle. We propose novel measures to cluster <b>secondary</b> <b>rays,</b> and take a virtual viewpoint to construct a layered image-based representation for the objects that would be intersected by a cluster of <b>secondary</b> <b>rays</b> respectively. Therefore, we can exploit coherence of <b>secondary</b> <b>rays</b> in the clusters to speed up tracing <b>secondary</b> <b>rays</b> in DOF rendering. Results show that we can interactively achieve DOF rendering effects with reflections or refractions on a commodity graphics card...|$|R
40|$|Abstract This paper {{presents}} an efficient method to trace <b>secondary</b> <b>rays</b> in depth-of-field (DOF) rendering, which significantly enhances realism. Till now, the effects by <b>secondary</b> <b>rays</b> have been little addressed in real-time/interactive DOF rendering, because <b>secondary</b> <b>rays</b> have less coherence than primary rays, making them {{very difficult to}} handle. We propose novel measures to cluster <b>secondary</b> <b>rays,</b> and take a virtual viewpoint to construct a layered image-based representation for the objects that would be intersected by a cluster of <b>secondary</b> <b>rays</b> respectively. Therefore, we can exploit coherence of <b>secondary</b> <b>rays</b> in the clusters to speed up tracing <b>secondary</b> <b>rays</b> in DOF rendering. Results show that we can interactively achieve DOF rendering effects with reflections or refractions on a commodity graphics card...|$|R
40|$|Tracing <b>secondary</b> <b>rays,</b> such as reflection, {{refraction}} {{and shadow}} rays, {{can often be}} the most costly step in a modern real-time ray tracer. In this paper, we examine this problem by using suitable ray coherence measures and present a thorough evaluation of different reordering heuristics for <b>secondary</b> <b>rays.</b> We also present a simple system design for more coherent scene traversal by caching <b>secondary</b> <b>rays</b> and using sorted packet-tracing. Although the results are only slightly incremental to current research, we believe this study is an interesting contribution for further research in the field...|$|R
40|$|FIGURE 9. Crateromorpha (Neopsacas) obi, sp. nov., spicules: A – B, dermal or atrial pentactins. B, pentactin with rudimental ray {{directed}} {{inside the}} body. C, hypodermal or hypoatrial pentactin. D, hypodermal or hypoatrial hexactin. E – F, parts of choanosomal diactin. G, drepanocome. H, <b>secondary</b> <b>ray</b> of drepanocome...|$|E
40|$|While {{contemporary}} {{approaches to}} SIMD ray tracing typically rely on traversing packets of coherent rays through a binary data structure, we instead {{evaluate the alternative}} of traversing individual rays through a bounding volume hierarchy with a branching factor of 16. Though obviously less efficient than high-performance packet techniques for primary rays, we demonstrate that for less coherent <b>secondary</b> <b>ray</b> distributions this approach is at least competitive with (and often faster than) typical packet traversal techniques...|$|E
40|$|Modern {{high-performance}} ray tracers use large ray packets and SIMD instruction sets {{to decrease}} both the computational and bandwidth cost {{compared to a}} single ray implementation. Current global illumination renderers, however, are still based around single ray implementations and interfaces. The presumption is that while packets {{have been shown to}} work well for highly coherent rays, in the presence of less coherent <b>secondary</b> <b>ray</b> distributions the gains of both packet and SIMD techniques dwindle rapidly. With low enough coherence, performance can be reduced to being as slow as reasonable single ray code – if not worse – so the benefit of packets for a global illumination system is assumed to be next to none. With SIMD width expanding in future architectures, leaving SIMD units underutilized means a massive loss in performance compared to the maximum performance achievable. In this paper, we present a method for recovering packet and SIMD coherence for incoherent <b>secondary</b> <b>ray</b> distributions through demand-driven reordering of rays into more coherent packets. We demonstrate that the reordering overhead is outweighed by the increased coherence within a prototypical implementation in the Manta realtime ray tracer among a wide variety of ray distributions, including diffuse path tracing...|$|E
40|$|The POPOP 4 {{code for}} {{converting}} <b>secondary</b> gamma <b>ray</b> yield data to multigroup <b>secondary</b> gamma <b>ray</b> production cross sections and the POPOP 4 library of <b>secondary</b> gamma <b>ray</b> yield data are described. Recent {{results of the}} testing of uranium and iron data sets from the POPOP 4 library are given. The data sets were tested by comparing calculated <b>secondary</b> gamma <b>ray</b> pulse height spectra measured at the ORNL TSR-II reactor...|$|R
40|$|Abstract. Packet tracing is {{a popular}} and {{efficient}} method for accelerating ray tracing. However, packet traversal techniques become inefficient when they are applied to path tracing since the <b>secondary</b> <b>rays</b> are incoherent. In this paper, we present a simple technique for improving the coherency of <b>secondary</b> <b>rays.</b> This technique uses the same sequence of random numbers for generating <b>secondary</b> <b>rays</b> for all the pixels in each sample. This improves {{the efficiency of the}} packet tracing algorithm, but creates structured noise patterns in the image. We propose an interleaved sampling scheme that reduces the correlation in the noise and makes it virtually imperceptible in the final image. Coherent path tracing is unbiased, simple to implement and outperforms standard path tracing with packet tracing, while producing images with similar RMS error values. 1...|$|R
40|$|FIGURE 3. Nodastrella asconemaoida sp. nov. USNM 1150045, {{specimen}} (A) and skeleton (B – H). (B, C, E, F) scanning electron micrographs; (D, G, H) light micrographs. (A) Deck {{photograph of}} specimen. (B) Dermal stauractin. (C) Atrial hexactin. (D) Dermal tauactin. (E) Microdiscohexaster. (F) Oxyhexaster. (G) " Calycocome " with numerous <b>secondary</b> <b>rays</b> and hardly developed calyces (= calycocome-like stellate discohexaster) (40 X). (H) " Proper " calycocome with fewer <b>secondary</b> <b>rays</b> and well-developed calyces (40 X) ...|$|R
40|$|FIGURE 3. Spicules of Doconesthes dustinchiversi n. sp. A. Diactine lateral prostalium with {{magnified}} shagreen surface. B. Dermalia {{of various}} forms with magnified ray tip of diactin. C. Atrialia with magnified pinular ray tip. D. Pentactine hypodermalia with very short and longer proximal ray, with magnified tangential ray tip. E. Diactine hypodermalium with magnified ray end. F. Choanosomal diactin with magnified ray tip. G. Strobiloplumicome with magnified primary ray tuft and <b>secondary</b> <b>ray</b> tips. H. Oxyhexactin. I. Oxypentactin. J. Hemioxyhexaster with magnified ray tips...|$|E
40|$|The {{ray tracing}} {{technique}} is very {{often used for}} image synthesis because it gives the possibility to render specular objects. Many techniques {{have been developed for}} ray tracing acceleration, more or less sofisticated which, are generally speaking, not easy to implement. A simple method how to speed up primary and <b>secondary</b> <b>ray</b> tracing has been developed. The suggested method based on space subdivision method (not necessarily uniform) is convenient for scenes that consist of many small objects, resp. facets (for experiments only triangles can be used) ...|$|E
40|$|International audienceOne of the {{challenges}} of GPU-based ray tracing is the hierarchical space indexation structure traversal. Stackless approaches to this problem offer benefits {{both in terms of}} maximum representable scene size and performances. We improve on the current stackless traversal methods by increasing memory access locality and accelerating both the primary and <b>secondary</b> <b>ray</b> shooting through specific optimizations achieved at the cost of additional precomputations. Those supplementary steps can be performed on the host and have their results transferred asynchronously on the GPU while the rendering kernel is running, hence being completely hidden...|$|E
40|$|Arabidopsis thaliana {{is a model}} plant used in {{analysis}} of different aspects of plant growth and development. Under suitable conditions, secondary growth {{takes place in the}} hypocotyl of Arabidopsis plants, a finding which helps in understanding many aspects of xylogenesis. However, not all developmental processes of secondary tissue can be studied here, as no <b>secondary</b> <b>rays</b> and intrusive growth have been detected in hypocotyl. However, results presented here concerning the secondary growth in inflorescence stems of Arabidopsis shows that both <b>secondary</b> <b>rays</b> and intrusive growth of cambial cells can be detected, and that, in the interfascicular regions, a storied cambium can be developed...|$|R
40|$|FIGURE 9. Aspidoscopulia bisymmetrica sp. n. (paratypes) : loose spicules (SEM images). A, onychohexaster. B, discohexaster. C, oxyhexaster. D, <b>secondary</b> <b>rays</b> of discohexaster. E, <b>secondary</b> <b>rays</b> of onychohexaster. F – J, pileate clavule. H – K, anchorate clavules (J – K, shafts with finger-like processes). L – O, aspidoscopules. L, {{abnormal}} aspidoscopule. O, aspidoscopule with processes on the shaft. P, head of pileate clavule. Q, head of aspidoscopule. A – B, D – E, P, ZPAL Pf. 22 / wa 75; F – H, K, Q, ZPAL Pf. 22 / wa 86; C, I – J, L, M – O, ZPAL Pf. 22 / wa 72...|$|R
40|$|In this {{supplementary}} material we provide the complete {{evaluation of the}} performance and quality of our Rasterized Bounding Volume Hierarchy (RBVH). Figure 1 shows seven models represented with different levels of approximation: from the finest (Q 0) to the coarsest (Q 4) (columns 2 - 6), and the reference rendering (column 1), which was obtained by ray tracing the triangle based BVH from [AL 09]. All results were measured on an NVIDIA GTX 470. Figure 2 shows the quality and performance for <b>secondary</b> <b>rays.</b> Note that higher error due to the higher approximation is clearly visible in the reconstruction with primary rays (Figure 1), but it is hardly noticeable when tracing for <b>secondary</b> <b>rays</b> (Figure 2) ...|$|R
40|$|Abstract We {{present a}} novel hybrid {{rendering}} method for diffuse and glossy indirect illumination. A scene is rendered using standard rasterization on a GPU. In a shader, <b>secondary</b> <b>ray</b> queries {{are used to}} sample incident light and to compute indirect lighting. We observe {{that it is more}} important to cast many rays than to have precise results for each ray. Thus, we approximate secondary rays by intersecting them with precomputed layered depth images of the scene. We achieve interactive to real-time frame rates including indirect diffuse and glossy effects. Keywords Real-time global illumination · Hybrid rendering...|$|E
40|$|Divide and Conquer Ray Tracing (DACRT) is {{a recent}} {{technique}} which constructs no explicit acceleration structure. It creates and traverses an implicit hierarchy in a depth-first fashion recursively and is suited for dynamic scenes that change constantly. In this paper, we present a parallel version of DACRT that runs entirely on the GPU, which exploits efficient primitives like sort and reduce. Our approach suits the GPU well, with a low memory footprint. Our implementation outperforms the serial CPU algorithm for both primary and <b>secondary</b> <b>ray</b> passes. We show good performance on primary pass and on advanced effects...|$|E
40|$|FIGURE 4. Saccocalyx microhexactin sp. nov. A – N, SEM {{images of}} spicules. A, dermal or atrial hexactin; B, drepanocome I; C, drepanocome II; D, spirodiscohexaster; E, plumicome; F, microhexactin I; G, microhexactin II; H, detail of tubercles {{in the middle}} of a diactine; I, detail of the pinular ray of a hexactin; J, detail of the hook-like <b>secondary</b> <b>ray</b> of a drepanocome I; K, detail of the middle part of a drepanocome II; L, detail of the tooth disc of a spirodiscohexaster; M, detail of the whorl of a plumicome; N, spicules of the peduncle; O – Q, LM images of spicule and skeleton; O, choanosomal hexactin; P, {{tangential}} view of choanosomal structure; Q, transversal view of choanosomal structure...|$|E
5000|$|... {{a direct}} volume {{rendering}} method, also called volume ray casting, {{in which the}} ray is [...] "pushed through" [...] the object and the 3D scalar field of interest is sampled along the ray inside the object. No <b>secondary</b> <b>rays</b> are spawned in this method.|$|R
40|$|The most time {{consuming}} operation of ray tracing is {{the intersection of}} rays. Since many rays are traced, the use of single instruction multiple data, or SIMD, instructions (such as the 4 -wide SSE) to trace multiple rays simultaneously have been used. However, the incoherence of <b>secondary</b> <b>rays,</b> especially reflection and refraction rays, results in low utilization of the SIMD instructions’ full width. In this thesis we look at using the AVX instruction set which expands upon SSE to allow twice as many rays, but exacerbates the problem of low utilization. We present a method of packaging <b>secondary</b> <b>rays</b> to improve ray coherence within the packet to improve SIMD utilization. While the improvement is only incremental we believe the work is important as we see a trend of wider SIMD instructions such as AVX- 512...|$|R
5000|$|Although [...] "ray casting" [...] and [...] "ray tracing" [...] {{were often}} used interchangeably in early {{computer}} graphics literature,more recent usage tries {{to distinguish the}} two. The distinction is that ray casting is a rendering algorithm that never recursively traces <b>secondary</b> <b>rays,</b> whereas other ray tracing-based rendering algorithms may do so.|$|R
40|$|Figure 1 : Our three test scenes {{rendered}} {{with two}} bounces of diffuse path tracing and one light sample per bounce (six rays per path) at 64 paths per pixel. Our reordering method maintains high SIMD utilization even for these incoherent ray distributions, achieving 1. 2 M rays per second {{for the conference}} scene (far right) (1. 5 × faster than BVH packet traversal and single ray traversal for 4 -wide SIMD). As SIMD width increases, our SIMD speedup increases as well providing more than a 6 × reduction in box tests compared to a single ray implementation for 16 -wide SIMD. Modern high-performance ray tracers use large ray packets and SIMD instruction sets to decrease both the computational and bandwidth cost compared to a single ray implementation. Current global illumination renderers, however, are still based around single ray implementations and interfaces. The presumption is that while packets {{have been shown to}} work well for highly coherent rays, in the presence of less coherent <b>secondary</b> <b>ray</b> distributions the gains of both packet and SIMD techniques dwindle rapidly. With low enough coherence, performance can be reduced to being as slow as reasonable single ray code – if not worse – so the benefit of packets for a global illumination system is assumed to be next to none. With SIMD width expanding in future architectures, leaving SIMD units underutilized means a massive loss in performance compared to the maximum performance achievable. In this paper, we present a method for recovering packet and SIMD coherence for incoherent <b>secondary</b> <b>ray</b> distributions through demand-driven reordering of rays into more coherent packets. We demonstrate that the reordering overhead is outweighed by the increased coherence within a prototypical implementation in the Manta realtime ray tracer among a wide variety of ray distributions, including diffuse path tracing. ...|$|E
40|$|The linear {{complementarity}} problem, LCP(q,M), {{is defined}} as follows. For given M,q find z such that q+Mz>= 0, z>= 0, z(q + M z) = 0,or certify {{that there is no}} such z. It is well known that the problem of finding a Nash equilibrium for a bimatrix game (2 -NASH) can be formulated as a linear complementarity problem (LCP). In addition, 2 -NASH is known to be complete in the complexity class PPAD (Polynomial-time Parity Argument Directed). However, the ingeniously constructed reduction (which is designed for any PPAD problem) is very complicated, so while of great theoretical significance, it is not practical for actually solving an LCP via 2 -NASH, and it may not provide the potential insight that can be gained from studying the game obtained from a problem formulated as an LCP (e. g. market equilibrium). The main goal of this paper is the construction of a simple explicit reduction of any LCP(q,M) that can be verified as belonging to PPAD via the graph induced by the generic Lemke algorithm with some positive covering vector d, to a symmetric 2 -NASH. In particular, any endpoint of this graph (with the exception of the initial point of the algorithm) corresponds to either a solution or to a so-called <b>secondary</b> <b>ray.</b> Thus, an LCP problem is verified as belonging to PPAD if any <b>secondary</b> <b>ray</b> can be used to construct, in polynomial time, a certificate that there is no solution to the problem. We achieve our goal by showing that for any M,q and a positive d satisfying a certain nondegeneracy assumption with respect to M, we can simply and directly construct a symmetric 2 -NASH whose Nash equilibria correspond one-to-one to the end points of the graph induced by LCP(q,M) and the Lemke algorithm with a covering vector d. We note that for a given M the reduction works for all positive d with the exception of a subset of measure 0. Comment: 19 page...|$|E
40|$|Final {{results of}} the two scenes. The chart on the right compares the {{cumulated}} rendering time (in seconds) over the iterations using our method (red) {{with that of the}} method entitled Progressive Photon Mapping: A Probabilistic Approach. Over the past decade, photon mapping is being more and more used to simulate light transport in scenes containing participating media. However, photon mapping is limited practically because of its large memory requirements. Progressive photon mapping addresses this problem [Hachisuka et al. 2008; Knaus and Zwicker 2011]. This approach computes many images of the same scene from the same viewpoint using different sets of photons and different parameter values. The obtained low quality images, when combined together, generate images of higher quality. In this talk, we propose a volume photon mapping method which does not have to store the photon maps, ensures a faster convergence to the final solution, and allows the user to have a full control {{of the size of the}} used memory. We assign a beam to each primary or <b>secondary</b> <b>ray</b> crossing...|$|E
40|$|FIGURE 1. Nodastrella nodastrella USNM 1150046, {{specimen}} (A) and skeleton (B – G). (B – E, G) scanning electron micrographs; (F) light micrograph. (A) Deck {{photograph of}} specimen attached to Lophelia coral. (B) Dermal stauractin. (C) Detail of calycocome. (D) Cluster of calycocomes and a discaster (lower left). (E) Pappocome-like oxyhexaster with most <b>secondary</b> <b>rays</b> broken off. (F) Complete pappocome-like oxyhexaster. (G) Discaster...|$|R
40|$|International audienceWe {{report on}} the {{observation}} of new properties of <b>secondary</b> cosmic <b>rays</b> Li, Be, and B measured in the rigidity (momentum per unit charge) range 1. 9  GV to 3. 3  TV {{with a total of}} 5. 4 × 106 nuclei collected by AMS during {{the first five years of}} operation aboard the International Space Station. The Li and B fluxes have an identical rigidity dependence above 7  GV and all three fluxes have an identical rigidity dependence above 30  GV with the Li/Be flux ratio of 2. 0 ± 0. 1. The three fluxes deviate from a single power law above 200  GV in an identical way. This behavior of <b>secondary</b> cosmic <b>rays</b> has also been observed in the AMS measurement of primary cosmic rays He, C, and O but the rigidity dependences of primary cosmic <b>rays</b> and of <b>secondary</b> cosmic <b>rays</b> are distinctly different. In particular, above 200  GV, the <b>secondary</b> cosmic <b>rays</b> harden more than the primary cosmic rays...|$|R
50|$|The primary {{feature of}} Mental Ray is the {{achievement}} of high performance through parallelism on both multiprocessor machines and across render farms. The software uses acceleration techniques such as scanline for primary visible surface determination and binary space partitioning for <b>secondary</b> <b>rays.</b> It also supports caustics and physically correct simulation of global illumination employing photon maps. Any combination of diffuse, glossy (soft or scattered), and specular reflection and transmission can be simulated.|$|R
40|$|Rendering systems {{organized}} around the ray tracing visibility algorithm provide a powerful and general tool for generating realistic images. These systems are being rapidly adopted for offline rendering tasks, and there is increasing interest in utilizing ray tracing for interactive rendering as well. Unfortunately, standard ray tracing systems suffer from several fundamental problems that limit their flexibility and performance, and until these issues are addressed ray tracing will have no hope of replacing Z-buffer systems for most interactive graphics applications. To realize the full potential of ray tracing, {{it is necessary to}} use variants such as distribution ray tracing and path tracing that can compute compelling visual effects: soft shadows, glossy reflections, ambient occlusion, and many others. Unfortunately, current distribution ray tracing systems are fundamentally inefficient. They have high overhead for rendering dynamic scenes, use excessively detailed geometry for <b>secondary</b> <b>rays,</b> perform redundant computations for shading and <b>secondary</b> <b>rays,</b> and have irregular data access and computation patterns that are a poor match for cost-effective hardware. We describe Razor, a new software architecture for a distribution ray tracer that addresses these issues. Razor supports watertight multiresolution geometry using a novel interpolation technique and a multiresolution kD-tree acceleration structure built on-demand each frame from a tightly integrated application scene graph. This dramatically reduces the cost of supporting dynamic scenes and improves data access and computation patterns for <b>secondary</b> <b>rays.</b> The architecture also decouples shading computations from visibility computations using a two-phase shading scheme. It uses existing best-practice techniques including bundling rays into SIMD packets for efficient computation and memory access. We present an experimental system that implements these techniques, although not in real time. We present results from this system demonstrating the effectiveness of its software architecture and algorithms...|$|R
40|$|In this paper, {{we propose}} an {{efficient}} and stable algorithm for finding the ray-surface intersections. Newton’s method and Bézier clipping are adapted {{to form the}} core of our algorithm. Ray coherence is used to find starting points for Newton iteration. We introduce an obstruction detection technique to verify whether an intersection point found by using Newton’s method is the closest one. When Newton’s method fails to achieve convergence, we use Bézier clipping as the substitution to find the intersection points. This combination achieves significant improvement in tracing primary rays. A similar approach also successfully improves the performance in tracing <b>secondary</b> <b>rays.</b> Keywords: ray tracing, Newton’s method, Bézier clipping, parametric surfaces, ray coherence, Bézier surfac...|$|R
40|$|Figure 1 : Images {{produced}} by renderers which use the open source Embree ray tracing kernels. These scenes are computationally challenging due to complex geometry and spatially incoherent <b>secondary</b> <b>rays.</b> From left to right: The White Room model by Jay Hardy rendered in Autodesk RapidRT, a car model rendered in the Embree path tracer, {{a scene from}} the DreamWorks Animation movie “Peabody & Sherman” rendered with a prototype path tracer, and the Imperial Crown of Austria model by Martin Lubich rendered in the Embree path tracer. We describe Embree, an open source ray tracing framework for x 86 CPUs. Embree is explicitly designed to achieve high performance in professional rendering environments in which complex geometry and incoherent ray distributions are common. Embree consists of a set of low-level kernels that maximize utilization of modern CPU architectures, and an API which enables these kernels to be used in existing renderers with minimal programmer effort. In this paper, we describe the design goals and software architecture of Embree, and show that for <b>secondary</b> <b>rays</b> in particular, the performance of Embree is competitive with (and often higher than) existing state-of-the-art methods on CPUs and GPUs...|$|R
40|$|Figure 1 : Three example scenes {{rendered}} using sample caching. Using caching during walkthrough animations {{allows for}} reusing shading results in subsequent frames, {{and to reduce}} the number of <b>secondary</b> <b>rays</b> to be cast by more than an order of magnitude. Despite tremendous progress in the last few years, realistically ren-dering 3 D scenes with advanced shading and particularly global il-lumination is still extremely difficult to perform at interactive rates. Precomputation techniques can reduce the cost during rendering, however, they typically require long preprocessing times and high storage requirements. We propose a novel world-space sample caching approach for walkthroughs of static scenes that does not require precomputation and relies instead on aggressive caching. During run-time, pixel-sized patches projected adaptively onto the tangent space of visi-ble triangles are used to store the results of shading computations. Patches are organized in a cache, which only requires a small and fixed memory footprint. In subsequent frames these patches can be retrieved, thus exploiting frame-to-frame coherence. In contrast to previous caching methods, the presented technique is extremely easy to implement, and requires only a few dozen lines of code. This caching mechanism can reduce the number of <b>secondary</b> <b>rays</b> for subsequent frames by more than an order of magnitude for mod-erate camera movements...|$|R
2500|$|In the Borealis region, craters are mapped {{according}} to the fivefold classification proposed by McCauley and others (1981), which determines Mercurian crater ages {{on the basis of}} crater diameter and morphologic degradation. Craters less than about [...] in diameter are not mapped. All basins between [...] and [...] in diameter (including those that have central peaks and peak rings) are mapped as craters. Criteria used to determine impact structures are morphologic crater components such as <b>rays,</b> <b>secondary</b> <b>rays,</b> hummocky rims, various facies of crater ejecta, crater geometry and structure, or a combination of these.|$|R
50|$|Leaflets obovate-oblong to oblong-cuneate, thinly coriaceous, {{coarsely}} serrate-dentate. Flowers usually unisexual; inflorescences are compound umbels with 8-20 primary branchlets up to 10 cm long, 15-20 <b>secondary</b> <b>rays,</b> umbellules with 10-15 {{flowers in}} each. Calyx truncate or obscurely 5-toothed; flowers 5mm in diameter, sweet-scented; petals 5, white to pink flushed, ovate to triangular, acute; stamens 5; ovary 2-loculed, each containing 1(-2) ovules; style branches 2, spreading. Fruit fleshy, very dark purple, laterally compressed, 5-8 mm diam.; style branches retained on an apical disc. Seeds 2(-3) per fruit, wrinkled, 3-6 mm long.|$|R
