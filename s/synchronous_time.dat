87|301|Public
40|$|Artificial society" {{refers to}} an {{agent-based}} simulation model used to discover global social structures and collective behavior produced by simple local rules and interaction mechanisms. In most artificial society discrete-event simulation models, <b>synchronous</b> <b>time</b> evolution is used to drive the actions and interactions of the landscape and agents. Although for some applications <b>synchronous</b> <b>time</b> evolution is the correct modeling approach, other applications are better suited for asynchronous time evolution. In this paper we demonstrate that very different behavior {{can be observed in}} a typical artificial society model if agent events occur asynchronously. Using an adaptation of the artificial society model defined by Epstein and Axtell, we describe the implementation of asynchronous time evolution in a discrete-event simulation model. With output from this model, we show that the use of asynchronous time evolution can eliminate potential simulation artifacts produced using <b>synchronous</b> <b>time</b> evolution. Since the use of discrete-event simulation can produce an associated loss in computational performance, we also discuss means of improving the performance of the artificial society simulation model. We provide results demonstrating that acceptable computational performance for asynchronous time evolution can be achieved using an appropriate event list implementation. Artificial Society, Discrete-Event Simulation, <b>Synchronous</b> <b>Time</b> Evolution, Simulation Artifacts, Asynchronous Time Evolution, Next-Event Simulation, Event List Processing...|$|E
40|$|In the {{gathering}} problem, n autonomous robots {{have to meet}} on a single point. We consider {{the gathering}} of a closed chain of point-shaped, anonymous robots on a grid. The robots only have local knowledge about a constant number of neighboring robots along the chain in both directions. Actions are performed in the fully <b>synchronous</b> <b>time</b> model FSYNC. Every robot has a limited memory that may contain one timestamp of the global clock, also visible to its direct neighbors. In this <b>synchronous</b> <b>time</b> model, there is no limited view gathering algorithm known to perform better than in quadratic runtime. The configurations that show the quadratic lower bound are closed chains. In this paper, we present the first sub-quadratic [...] -in fact linear time [...] -gathering algorithm for closed chains on a grid...|$|E
40|$|The (n+ 1) -dimensional Einstein-Gauss-Bonnet (EGB) {{model is}} considered. For {{diagonal}} cosmological metrics the {{equations of motion}} are written {{as a set of}} Lagrange equations with the Lagrangian containing two “minisuperspace ” metrics on R n: a 2 -metric of pseudo-Euclidean signature and a Finslerian 4 -metric that is proportional to n-dimensional Berwald-Moor 4 -metric. When a <b>synchronous</b> <b>time</b> variable is considered the equations of motion are reduced to an autonomous system of first order differential equations. For the case of the “pure ” Gauss-Bonnet model two exact solutions: with power-law and exponential dependence of scale factors (w. r. t. <b>synchronous</b> <b>time</b> variable) are obtained. The first one was obtained earlier by A. Toporensky and P. Tretyakov for n = 5 (and verified for n = 6, 7). Key words: multidimensional cosmology, anisotropic solutions, Einstein-Gauss-Bonne...|$|E
40|$|Abstract [...] This paper {{deals with}} signal {{processing}} techniques for non-destructive fault detection on gearbox of helicopter by using <b>time</b> <b>synchronous</b> averaging. <b>Time</b> <b>synchronous</b> averaging is a signal processing technique {{that is used}} to extract repetitive signals from additive noise. This process requires an accurate measurement of the repetitive frequency of the desired signal or a signal that is synchronous with the desired signal. The raw data is then divided up into segments of equal length blocks related to the synchronous signal and averaged together. When sufficient averages are taken, the random noise is canceled, leaving an improved estimate of the desired signal. <b>Time</b> <b>synchronous</b> averaging is a feature extraction technique that have been used successively to gearbox condition monitoring. rotating machinery. These techniques are applied for the early detection of misalignment in helicopters. In this article we have used several methods for detection of faults in rotating machines and from the cepstral analysis we detected a fault tree of misalignment at the direction of ASL in gearbox of helicopter. (Fig. 1) Index Term [...] <b>time</b> <b>synchronous</b> averaging, misalignment, diagnosis, cepstrum, spectrum. I...|$|R
5000|$|ALSP time {{management}} facilities support discrete event simulation using either asynchronous (next-event) or <b>synchronous</b> (time-stepped) <b>time</b> advance mechanisms. The mechanism to support next-event simulations is ...|$|R
40|$|A Family of Resource-Bound Real-Time Process Algebras This paper {{describes}} three real-time process algebras, ACSR, PACSR and ACSR-VP. ACSR is a resource-bound real-time {{process that}} supports <b>synchronous</b> <b>timed</b> actions and asynchronous instantaneous events {{as well as}} the notions of resource, priority, exception, and interrupt. PACSR is a probabilistic extension of ACSR with resources that can fail and associated failure probabilities. ACSR-VP extends ACSR with value passing between processes and parameterized process definitions. This paper also provides three simple real-time system examples to illustrate the expressive power and analysis technique of each process algebra...|$|R
40|$|<b>Synchronous,</b> <b>time</b> resolved, infra-red, XAFS, {{and mass}} spectroscopies are {{simultaneously}} applied in situ {{to the investigation}} of the dynamic behaviour of Rh/Al 2 O 3 catalysts during NO reduction by CO; NO conversion, and its kinetic character are closely correlated to the conversion of Rh(I) (predominantly Rh-I(CO) (2)) to Rh(0) ...|$|E
40|$|Personal {{communications}} and mobile computing {{will require a}} wireless network infrastructure which is fast deployable, possibly multihop, and capable of multimedia service support. The first infrastructure of this type was the Packet Radio Network (PRNET), developed in the 70 's to address the battlefield and disaster recovery communication requirements. PRNET was totally asynchronous and {{was based on a}} completely distributed architecture. It handled datagram traffic reasonably well, but did not offer efficient multimedia support. Recently, under the WAMIS and Glomo ARPA programs several mobile, multimedia, multihop (M 3) wireless network architectures have been developed, which assume some form of <b>synchronous,</b> <b>time</b> division infrastructure. The <b>synchronous</b> <b>time</b> frame leads to efficient multimedia support implementations. However, it introduces more complexity and is less robust in the face of mobility and channel fading. In this paper, we examine the impact of synchronization on wirel [...] ...|$|E
40|$|In {{this paper}} we study both {{experimentally}} and numerically the intermittent behavior taking place near {{the boundary of}} the <b>synchronous</b> <b>time</b> scales of chaotic oscillators being in the regime of time scale synchronization. We {{have shown that the}} observed type of the intermittent behavior should be classified as the ring intermittency. Comment: 4 pages, 5 figure...|$|E
5000|$|Synchrony: is the {{underlying}} model of <b>time</b> <b>synchronous</b> versus asynchronous? ...|$|R
40|$|This paper {{describes}} three real-time process algebras, ACSR, PACSR and ACSR-VP. ACSR is a resource-bound real-time {{process that}} supports <b>synchronous</b> <b>timed</b> actions and asynchronous instantaneous events {{as well as}} the notions of resource, priority, exception, and interrupt. PACSR is a probabilistic extension of ACSR with resources that can fail and associated failure probabilities. ACSR-VP extends ACSR with value passing between processes and parameterized process de nitions. This paper also provides three simple real-time system examples to illustrate the expressive power and analysis technique of each process algebra. Keywords: Real-time process algebra, probablistic process algebra, value-passing process algebra, schedulability analysis, real-time systems, resourcebound process algebra. 1...|$|R
40|$|In this paper, {{we propose}} a {{functional}} testing method of media synchronization protocols, which control the synchronization between audio and movie, described in concurrent <b>synchronous</b> <b>timed</b> I/O automata. In order to trace all test sequences (I/O event sequences) with synchronization on the model, {{we need to}} execute each I/O event at an adequate timing which satisfies the whole timing constraint for all the given test sequences. However, the outputs are given from the IUT and uncontrollable. Also each output/synchronization timing may a#ect executable timing for its succeeding I/O events in the test sequences. In this paper, we propose a technique to derive a set of time intervals which make all the given test sequences executable, and propose a method for functional testing using the technique...|$|R
40|$|AbstractIn {{a sensor}} network the sensors, or nodes, obtain data {{and have to}} {{communicate}} these data to a central node. Because sensors are battery powered they are highly energy constrained. Data aggregation {{can be used to}} combine data of several sensors into a single message, thus reducing sensor communication costs at the expense of message delays. Thus, the main problem of data aggregation is to balance the communication and delay costs. In this paper we study the data aggregation problem as a bicriteria optimization problem; the objectives we consider are to minimize maximum energy consumption of a sensor and a function of the maximum latency costs of a message. We consider distributed algorithms under a <b>synchronous</b> <b>time</b> model, under an asynchronous time model, and under an almost <b>synchronous</b> <b>time</b> model, where sensor clocks are synchronized up to a small drift. We use competitive analysis to assess the quality of the algorithms...|$|E
40|$|These notes {{cover the}} following: (1) {{directions}} for switching to production APS release R 3. 11. 6; (2) unbundling of channel access clients; (3) access security; (4) channel access additions; <b>synchronous</b> <b>time</b> support; and (5) description of major differences between R 3. 11. 3 and R 3. 11. 6 Also included {{is a list}} of new and/or updated documentation for the program...|$|E
40|$|A virtual {{channels}} scheduling algorithm {{with broad}} applicability based on movable boundary is proposed. According to {{the types of}} date sources, transmission time slots are divided into synchronous ones and asynchronous ones with a movable boundary between them. During the <b>synchronous</b> <b>time</b> slots, the virtual channels are scheduled with a polling algorithm; during the asynchronous time slots, the virtual channels are scheduled with an algorithm based on virtual channel urgency and frame urgency. If there are no valid frames in the corresponding VC at a certain <b>synchronous</b> <b>time</b> slot, a frame of the other synchronous VCs or asynchronous VCs will be transmitted through the physical channel. Only {{when there are no}} valid frames in all VCs would an idle frame be generated and transmitted. Experiments show that the proposed algorithm yields much lower scheduling delay and higher channel utilization ratio than those based on unmovable boundary or virtual channel urgency in many kinds of sources. Therefore, broad applicability can be achieved by the proposed algorithm...|$|E
40|$|There has {{recently}} been significant progress {{in the development of}} timed process algebras for the specification and analysis of real-time systems. This paper describes a timed process algebra called ACSR. ACSR supports <b>synchronous</b> <b>timed</b> actions and asynchronous instantaneous events. Timed actions are used to represent the usage of resources and to model the passage of time. Events are used to capture synchronization between processes. To be able to accurately specify real systems, ACSR supports a notion of priority {{that can be used to}} arbitrate among timed actions competing for the use of resources and among events that are ready for synchronization. The paper also includes a brief overview of other timed process algebras and discusses similarities and differences between them and ACSR...|$|R
40|$|The Soundness and Completeness of ACSR (Algebra of Communicating Shared Resources) Recently, {{significant}} {{progress has been}} made in the development of timed process algebras for the specification and analysis of real-time systems; one of which is a timed process algebra called ACSR. ACSR supports <b>synchronous</b> <b>timed</b> actions and asynchronous instantaneous events. Timed actions are used to represent the usage of resources and to model the passage of time. Events are used to capture synchronization between processes. To be able to specify real systems accurately, ACSR supports a notion of priority that can be used to arbitrate among timed actions competing for the use of resources and among events that are ready for synchronization. Equivalence between ACSR terms is defined in terms of strong bisimulation. The paper contains a set of algebraic laws that are proven sound and complete for finite ACSR agents...|$|R
40|$|Abstract: Traditional {{client-server}} bas single learning server and {{in learning}} group members the work because learners may <b>Synchronous,</b> any <b>time</b> and a learning group can contrib requirement of next generati next generation e-Learning proposed framework is ba resources and interactivity. Learning grouping and man interactive P 2 P based group already available, independ workgroup collaboration, c...|$|R
40|$|In {{a sensor}} network the sensors, or nodes, obtain data {{and have to}} {{communicate}} these data to a central node. Because sensors are battery powered they are highly energy constrained. Data aggregation {{can be used to}} combine data of several sensors into a single message, thus reducing sensor Communication costs at the expense of message delays. Thus, the main problem of data aggregation is to balance the communication and delay costs. In this paper we study the data aggregation problem as a bicriteria optimization problem; the objectives we consider are to minimize maximum energy consumption of a sensor and a function of the maximum latency costs of a message. We consider distributed algorithms under a <b>synchronous</b> <b>time</b> model, under an asynchronous time model, and under an almost <b>synchronous</b> <b>time</b> model, where sensor clocks are synchronized up to a small drift. We use competitive analysis to assess the quality of the algorithms. (C) 2008 Elsevier B. V. All rights reserved...|$|E
3000|$|In {{order to}} develop our results, we will divide the time {{interval}} into two parts, one is [t_k,t_k + d_k [...]) (k = 0, 1, [...]...), the other is [t_k+d_k,t_k+ 1 [...]) (k = 0, 1, [...]...), which correspond to the asynchronous and <b>synchronous</b> <b>time</b> interval between the switched subsystems and their controller unit, respectively. Next we will discuss our problems in two cases.|$|E
40|$|We discuss {{univariate}} {{and multivariate}} statistical properties of volatility time series of equities traded {{in a financial}} market. Specifically, (i) we introduce a two-region stochastic volatility model able to well describe the unconditional pdf of volatility {{in a wide range}} of values and (ii) we quantify the stability of the results of a correlation-based clustering procedure applied to <b>synchronous</b> <b>time</b> evolution of a set of volatility time series...|$|E
40|$|Abstract—In {{constant}} bit-rate timing transfer, {{the reference}} clocks which encode and reconstruct the service clock at {{origin and destination}} may be jittered. We present new, straightforward approaches to finding and visualizing jitter spectra in timing transfer for jittered destination and reference clocks, and confirm our results by simulation. Index Terms—Jitter, nonuniform sampling, sigma-delta modu-lator, synchronization, <b>synchronous</b> residual <b>time</b> stamp (SRTS). I...|$|R
40|$|A {{real-time}} process algebra, called ACSR, {{has been}} developed to facilitate the specification and analysis of real-time systems. ACSR supports <b>synchronous</b> <b>timed</b> actions and asynchronous instantaneous events. Timed actions are used to represent the usage of resources and to model the passage of time. Events are used to capture synchronization between processes. To be able to specify real-time systems accurately, ACSR supports a notion of priority {{that can be used}} to arbitrate among timed actions competing for the use of resources and among events that are ready for synchronization. In addition to operators common to process algebra, ACSR includes the scope operator which can be used to model timeouts and interrupts. Equivalence between ACSR terms is based on the notion of strong bisimulation. This paper briefly describes the syntax and semantics of ACSR and then presents a set of algebraic laws {{that can be used to}} prove equivalence of ACSR processes. The contribution of this paper is the [...] ...|$|R
40|$|In-flight {{vibration}} measurements {{from the}} transmission of an OH- 58 C KIOWA are analyzed. In {{order to understand the}} effect of normal flight variation on signal shape, the first gear mesh components of the planetary gear system and bevel gear are studied in detail. Systematic patterns occur in the amplitude and phase of these signal components with implications for making <b>time</b> <b>synchronous</b> averages and interpreting gear metrics in flight. The phase of the signal component increases as the torque increases; limits on the torque range included in a <b>time</b> <b>synchronous</b> average may now be selected to correspond to phase change limits on the underlying signal. For some sensors and components, an increase in phase variation and/or abrupt change in the slope of the phase dependence on torque are observed in regions of very low amplitude of the signal component. A physical mechanism for this deviation is postulated. <b>Time</b> <b>synchronous</b> averages should not be constructed in torque regions with wide phase variation...|$|R
40|$|This paper {{compares the}} very {{fundamental}} concepts behind two approaches to optimistic parallel discrete-event simulation on BSP computers [10]. We refer to (i) asynchronous simulation time advance {{as it is}} realised in the BSP implementation of Time Warp [3], and (ii) <b>synchronous</b> <b>time</b> advance as it is realised in the BSP implementation of Breathing Time Buckets [8]. Our results suggest that asynchronous time advance can potentially lead to more efficient and scalable simulations in BSP...|$|E
40|$|A frame {{representation}} {{is used to}} derive a first order quasi-linear symmetric hyperbolic system for a scalar field minimally coupled to gravity. This procedure is inspired by similar evolution equations introduced by Friedrich to study the Einstein-Euler system. The resulting evolution system is used to show that small nonlinear perturbations of expanding Friedman-Lemaître-Robertson-Walker backgrounds, with scalar field potentials satisfying certain future asymptotic conditions, decay exponentially to zero, in <b>synchronous</b> <b>time.</b> Comment: Version 4 : Matches final published versio...|$|E
40|$|Abstract—This paper {{proposes a}} {{transient}} stability improvement using hybrid controller design for STATCOM with static <b>synchronous</b> <b>time</b> critical error and better damping system oscillations {{after a short}} circuit fault. This article on a STATCOM Control for transient stability improvement has proposed a hybrid system with fuzzy and neural controller {{to meet with the}} addition of Lyapunov stability criterion to the ability and conditions as well. The performance is analyzed using digital simulation with (SMIB) with infinite bus...|$|E
3000|$|From a {{practical}} point of view, stipulating <b>synchronous</b> access by <b>time</b> slots requires a global clock. This could {{be provided by}} global positioning system (GPS)f. The guard interval T [...]...|$|R
40|$|The Mark-II Data Acquisition and Trigger system {{requirements}} and general solution are described. The solution {{takes advantage of}} the <b>synchronous</b> crossing <b>times</b> and low event rates of an electron positron collider to permit a very highly multiplexed analog scheme to be effective. The system depends on a two level trigger to operate with acceptable dead time. The trigger, multiplexing, data reduction, calibration, and CAMAC systems are described...|$|R
30|$|PIM {{was first}} {{introduced}} in [12] for wireless optical communication systems. It is interesting because it displays a higher transmission capacity by eliminating unused time chips within each symbol and does not require both chip and symbol synchronization, but only chip synchronization, since each symbol is initiated with a pulse. Different anisochronous and <b>synchronous</b> pulse <b>time</b> modulation (PTM) techniques for optical short-range wireless communications are compared in [13].|$|R
40|$|Using {{previously}} unexploited data on time scheduling in {{the employment}} and household contexts, we investigate {{the effect of}} flexible working on couples' coordination of their daily work time schedules in the UK. We consider three distinct dimensions of flexible working: flexibility of daily start and finish times (flexitime), flexibility of work times over the year (annualised hours), and generalised control of working hours. We find that in couples with flexitime there is greater spouse synchronization in daily working times by nearly one hour. The effect is driven by couples with dependent children. However, we find the effect in couples with children of any age (under 16), suggesting it does not stem from the childcare requirements of young children. Robustness checks indicate that flexitime is not endogenous, suggesting that an expansion of flexitime would increase couples' work time coordination. There is less evidence that broader control over working hours increases daily synchronous working time and no evidence that annualised hours increase <b>synchronous</b> <b>time</b> on a daily basis. The weaker relationships with daily <b>synchronous</b> <b>time</b> for these two flexibility measures are consistent with their broader scope (control over amount of hours as well as timing) and longer time span...|$|E
40|$|Suspended between {{metaphor and}} metonymy, between the spatial {{logic of the}} {{collection}} and the scenario of the personal that was the life of its owner, Pierre Loti 2 ̆ 7 s house in Rochefort participates in the same transvestism as his novels. This article explores the house museum as a heterotopia in which the <b>synchronous</b> <b>time</b> of the collection is open to disruption by the souvenir 2 ̆ 7 s reference to past events, to the biography of the collector...|$|E
40|$|International audienceLarge {{disparity}} of flow scales is {{a typical}} feature of aeroacoustic calculations. Because of the low-dispersion and low-dissipation requirement, most of the numerical schemes are based on explicit time stepping. According to the Courant-Friedrichs-Lewy (CFL) stability criterion, the numerical efficiency, in case of <b>synchronous</b> <b>time</b> stepping, drops down because all but the smallest cells are effectively forced to march in time with a very small time step. Asynchronous time stepping, i. e., when the solution in different cell sizes is updated at different rates and adjusted to the cell-local CFL number rather than to a global one, is one popular way of improving the efficiency of explicit methods on highly non-uniform grids. In this paper, a new asynchronous time-stepping technique is implemented for the Compact Accurately Boundary-Adjusting high-REsolution Technique (CABARET) scheme. CABARET is a conservative, low-dissipative and low-dispersive explicit advection scheme that has a very compact stencil. With <b>synchronous</b> <b>time</b> stepping, CABARET has been successfully used for computational aeroacoustics and hydrodynamics problems before. Suggested asynchronous time stepping method has the following important properties: (i) simplicity and flexibility of the original computational grid stencil, (ii) strict flux conservation property and (iii) a built-in recipe {{for the treatment of}} inactive flow regions...|$|E
5000|$|In <b>synchronous</b> frame <b>time,</b> {{lines are}} geodesics in the four-dimensional spacetime. These lines are normal to the hypersurfaces t = const. Indeed, the 4-vector normal to this hypersurface ni = ∂t/∂xi has {{covariant}} components nα = 0, n0 = 1. The respective contravariant components at conditions [...] are again nα = 0, n0 = 1, that is, {{coincide with the}} components of the 4-vector u i tangential to the time lines.|$|R
40|$|This paper {{presents}} {{the design and}} implementation of a low-energy <b>synchronous</b> self <b>timed</b> logic topology using sense ampliﬁer-based pass transistor logic (SAPTL). The SAPTL structure can realize for very lowpower computation by leakage current controlling networks with reduced supply voltages. The introduction of synchronous operation in SAPTL further improves energy-delay performance without a signiﬁcant increase in hardware complexity. A simple XOR gate is implemented in SAPTL architecture. The power consumption of the SAPTL is less...|$|R
40|$|Abstract-In this paper, {{we study}} {{the subject of}} {{exploiting}} interoperator parallelism to optimize the execution of multi-join queries. Specifically, we focus on two major issues: 1) scheduling the execution sequence of multiple joins within a query, and 2) determining the number of processors to be allocated for the execution of each join operation obtained in 1). For the first issue, we propose and evaluate by simulation several methods to determine the general join sequences, or bushy trees. Despite their simplicity, the heuristics proposed {{can lead to the}} general join sequences that significantly outperform the optimal sequential join sequence. The quality of the join sequences obtained by the proposed heuristics is shown to be fairly close to that of the optimal one. For the second issue, it is shown that the processor allocation for exploiting interoperator parallelism is subject to more constraints-such as execution dependency and system fragmentation-than those in the study of intraoperator parallelism for a single join. The concept of <b>synchronous</b> execution <b>time</b> is proposed to alleviate these constraints. Several heuristics to deal with the processor allocation, categorized by bottom-up and top-down approaches, are derived and are evaluated by simulation. The relationship between issues 1) and 2) is explored. Among all the schemes evaluated, the two-step approach proposed, which first applies the join sequence heuristic to build a bushy tree as if under a single processor system, and then, in light of the concept of <b>synchronous</b> execution <b>time,</b> allocates processors to execute each join in the bushy tree in a top-down manner, emerges as the best solution to minimize the query execution time. Index Terms-Bushy trees, <b>synchronous</b> execution <b>time,</b> multi-join query execution dependency, system fragmentation 1 INTRODU~~TION HERE has been a growing interest in applying general purpose parallel machines to database applications 171...|$|R
