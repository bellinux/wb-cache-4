17|101|Public
50|$|The game {{featured}} 50 timed-levels {{whereby the}} player {{would try to}} guide the little people called 'Gumblers' up, away from rising waters, to a safe-haven. This was achieved by dropping interlocking blocks from above to dictate the Gumbler's path to safety. The block shapes included those with sloping surfaces, meaning that badly stacked blocks could slide off and fall down easily.While brightly coloured, the blocks were not direct copies of Tetrominos as seen in Tetris, though due to their bright colours and the similar <b>stacking</b> <b>mechanism</b> it is apparent why parallels to Tetris were made.|$|E
40|$|Multi-Protocol Label Switching (MPLS) is a connection-oriented {{paradigm}} {{suitable for}} metro-core networks wherein forwarding decisions in each node are {{based solely on}} a short label, much smaller than other packet headers (e. g. IP header). In order to scale and allow for hierarchical traffic aggregation, a Label <b>stacking</b> <b>mechanism</b> has been defined within Multi-Protocol Label Switching (MPLS) protocol. In this paper, label stacking is optimized for static MPLS networks {{and its impact on}} the packet processing performance is quantified in real network scenarios. Optimization is carried out by using an integer linear programming formulation and a polynomial time algorithm. Results indicate that the use of label <b>stacking</b> <b>mechanism</b> is recommended in some network scenarios. Moreover, the results evidence that a small size of label stack depth is sufficient to guarantee the performance improvement...|$|E
40|$|We {{investigate}} {{the applicability of}} an adaptive neural network to problems with time-dependent input by demonstrating that a deterministic parser for natural language inputs of significant syntactic complexity can be developed using recurrent connectionist architectures. The traditional <b>stacking</b> <b>mechanism,</b> known to be necessary for proper treatment of context-free languages in symbolic systems, is absent from the design, having been subsumed by recurrency in the network...|$|E
40|$|In the {{commonly}} used multi-threaded memory layout where each thread has its ”worst case ” stack memory exclusively reserved, a process may prematurely {{run out of}} memory, {{even if there is}} unused address space elsewhere. This problem is exacerbated as the number of threads in a process increases since there is less stack space available per thread. In this paper, <b>stack</b> <b>mechanisms</b> that attempt to alleviate this problem are reviewed, and a new <b>stack</b> <b>mechanism</b> is put forward that utilizes the MMU to detect stack overflow. An experimental compiler is used to implement promising <b>stack</b> <b>mechanisms</b> and a suite of benchmarks is used to compare their performance and scalability under varying usage profiles...|$|R
40|$|The {{traditional}} "stack grows {{from the}} top, heap grows {{from the bottom}} " memory layout allows a single-threaded process {{to make use of}} all available address space. This layout is not ideal when multiple threads of execution need to share one address space, for memory exhaustion is no longer signified by the heap meeting the stack. In the commonly used multi-threaded memory layout where each thread has its "worst case" stack memory exclusively reserved, a process may prematurely run out of memory when one thread's stack collides with another's, even if there is unused address space elsewhere. This problem is exacerbated as the number of threads in a process increases since there is less stack space available per thread. In this thesis, alternative <b>stack</b> <b>mechanisms</b> that attempt to alleviate this problem are reviewed, and a new <b>stack</b> <b>mechanism</b> is put forward that utilizes the MMU to detect stack overflow. An experimental compiler implementing a subset of the C language is used to implement promising <b>stack</b> <b>mechanisms,</b> and a suite of test programs are used to compare their performance and scalability under varying usage patterns...|$|R
50|$|When stack-based {{procedure}} {{calls were}} first introduced, an important motivation was to save precious memory. With this scheme, the compiler {{does not have}} to reserve separate space in memory for the private data (parameters, return address, and local variables) of each procedure. At any moment, the stack contains only the private data of the calls that are currently active (namely, which have been called but haven't returned yet). Because {{of the ways in which}} programs were usually assembled from libraries, it was (and still is) not uncommon to find programs that include thousands of subroutines, of which only a handful are active at any given moment. For such programs, the call <b>stack</b> <b>mechanism</b> could save significant amounts of memory. Indeed, the call <b>stack</b> <b>mechanism</b> can be viewed as the earliest and simplest method for automatic memory management.|$|R
40|$|Until the {{availability}} of Kernel 2. 6 the Linux operating system lacked general support to integrate security mechanisms into the kernel. The Linux Security Module Framework (LSM) was designed to overcome this limitation. Although LSM provides a solid baseline for kernel security, it lacks important features. In this paper two of these limitations are addressed: First a framework-managed module <b>stacking</b> <b>mechanism</b> is proposed that allows multiple security policies {{to be present in}} the kernel at the same time. The second aspect this paper deals with is the addition of LSM hooks to the Linux TCP layer. This extension was chosen because it allows the implementation of a State-Based Network Intrusion Detection Mechanism which is outlined {{at the end of the}} article...|$|E
40|$|Surfactants {{are needed}} to create stable {{suspensions}} of carbon nanotubes. Increasingly, these surfactants are given additional functionalities, resulting in bigger and more complex molecules with several subunits. We investigate the effect of assembly of these subunits for a class of perylene-based functional surfactants. The subunits that all surfactants are based on are a perylene core, hydrophilic polyglycerol dendrons, and alkyl chains of different orientations and lengths. The assembly of these subunits affects both the molecules' performance as a surfactant and {{the efficiency of the}} energy-transfer complexes formed by the nanotube and surfactant through a π–π <b>stacking</b> <b>mechanism.</b> This results in a best practice guide for designing functional surfactants with π–π stacking cores, and affords more general insights that are applicable to non π–π stacking systems as well...|$|E
30|$|In principle, the {{adsorption}} of gum Arabic on graphene can {{be described}} by π–π <b>stacking</b> <b>mechanism</b> of surfactant on the interlayer graphite [30]. We suggest that the protein components of gum Arabic in arabinogalactan-protein (AGP) and glycoprotein (GP) are chemically attached on the graphite surface as the efficiency of solid–liquid interfaces is increased due to the amphiphilic nature of AGP and GP components. Polar component of AGP and GP (polysaccharide) meanwhile attach themselves with water molecules in the medium [35]. Colloidal suspension of graphene provides the stability of gum Arabic-graphene after adsorption of gum Arabic on the surface. The assumption of protein as the responsible molecules for exfoliation of graphene is validated from the presented data in previous XPS and IR results. The addition of C=O and C–N in the sample after exfoliation stage indicates the adsorption of protein on the graphene surface.|$|E
25|$|In 1960, {{he began}} work for IBM and, working with Adin Falkoff, created APL {{based on the}} {{notation}} he had developed. This notation was used inside IBM for short research reports on computer systems, such as the Burroughs B5000 and its <b>stack</b> <b>mechanism</b> when <b>stack</b> machines versus register machines were being evaluated by IBM for upcoming computers.|$|R
40|$|We {{present an}} {{abstract}} machine {{designed for the}} parallel execution of functional logic programs, i. e. Babel. It is accomplished utilizing a shared memory model. Efficiency is gained by using the same <b>stack</b> <b>mechanisms</b> as the WAM, i. e. the fast reclamation of memory during backtracking is maintained despite the parallel extensions. In addition to the strict behaviour of programs (e. g. in Prolog), Babel offers non-strict functions that do not necessarily demand all of the arguments for the evaluation. We study the work load behaviour and the introduced restrictions imposed by the insistence on the fast <b>stack</b> <b>mechanisms.</b> The specification is {{carried out in the}} hardware description language VHDL offering simulation facilities, and having a temporal model which allows to gain a performance study of the parallel system. We present the results obtained from the simulation of the VHDL specification, showing the speed-ups gained with different numbers of processors. 1 Introduction Functional p [...] ...|$|R
50|$|One {{disadvantage}} {{of the call}} <b>stack</b> <b>mechanism</b> is the increased cost of a procedure call and its matching return. The extra cost includes incrementing and decrementing the stack pointer (and, in some architectures, checking for stack overflow), and accessing the local variables and parameters by frame-relative addresses, instead of absolute addresses. The cost may be realized in increased execution time, or increased processor complexity, or both.|$|R
40|$|We i nvestigate the {{applicability}} of an adaptive neural network to problems with time-dependent input by demonstrating that a deterministic parser for natural language inputs of significant syntactic complexity can be developed using recurrent connectionist architectures. The traditional <b>stacking</b> <b>mechanism,</b> known to be necessary for proper treatment of context-free languages in symbolic systems, is absent from the design, having been subsumed by recurrencyinthe network. INTRODUCTION Applications of adaptive neural networks to problems with time-dependent input have yielded results manifesting considerable flexibility. One such problem area, natural language processing, is seen by some as pivotal to {{the success or failure}} of connectionism. Pinker and Prince (1988, p. 78) stated that "Connectionism, as a radical restructuring of cognitive theory,will stand or fall depending on its ability to account for human language. "Whether or not one accepts the full force of this contention, it i [...] ...|$|E
40|$|Abstract: In this paper, {{a design}} method that {{teaching}} and playback of motion trajectory based on 5 R parallel <b>stacking</b> <b>mechanism</b> is introduced. Analysis the inverse kinematics of the 5 R mechanism, we can {{concluded that the}} 5 R is given two original moving parts, you can uniquely identify the pose of the rod end of the implementation of parts, but in seeking the position and orientation inverse solution, the only connecting rod track can not determine the only two original moving parts. We can solve this problem with the minimum principle that {{the square of the}} residuals between the prime mover rotation angle of adjacent track points. Finally, we show the program diagram of teaching and playback. The system has such advantages as simple structure, movement speed, large workspace, motor casing fixed, load drive capability and light weight...|$|E
40|$|Abstract. Container {{stacking}} {{problem is}} an NP (Non-Polynomial) -Hard problem. This type of problem requires robust and adaptive algorithms, {{such as the}} Constraints Programming technique. Rule-based programming is ineffective due {{to the complexity of}} container stacking problem. The container stacking processes are restricted to certain heuristic rules, which is difficult to be coded in algorithmic ways. Improper stacking will cause non-economical container forklift movement. As a result it will increase the operational costs. This paper proposed a genetic algorithms technique to solve container-stacking problem, where a prototype has been developed. The scope of the problem is based on Kontena Nasional (KONNAS Malaysia) case study, which is restricted for one-year operational basis. The container <b>stacking</b> <b>mechanism</b> is operated under several Genetic Algorithms operators such as Selection, Mutation and Crossover. The prototype is coded using C++, ORACLE 7. 0 as database and runs under UNIX platform. The average optimal stacking result obtained ranged between 78 - 83 percent. This prototype was developed at Artificial Intelligence System Development Laboratory (AISDEL), Sirim Berhad...|$|E
5000|$|The x86 {{architecture}} has hardware {{support for}} an execution <b>stack</b> <b>mechanism.</b> Instructions such as , , [...] and [...] are used with the properly set up stack to pass parameters, to allocate space for local data, and to save and restore call-return points. The [...] size instruction is very useful for implementing space efficient (and fast) calling conventions where the callee is responsible for reclaiming stack space occupied by parameters.|$|R
40|$|This paper {{presents}} a composition method for stack-attributed tree transducers. Stackattributed tree transducers extend attributed tree transducers with a pushdown stack device for attribute values. Stack-attributed tree transducers are {{more powerful than}} attributed tree transducers due to the <b>stack</b> <b>mechanism.</b> We extend the existing composition method for attributed tree transducers to the composition method for stack-attributed tree transducers. The composition method is proved to be correct and to enjoy a closure property...|$|R
40|$|A {{method is}} {{described}} for implementing on a finite network of processing "cells", called the "implementation graph", programs whose potential parallelism is not fixed by the implementation but {{varies according to}} the input parameters. First, programming constructs are described permitting a computation, regarded as a dynamic structure called the "computation graph", to diffuse through the implementation graph. Second, the implementation problem of mapping an unbounded number of computation nodes on {{a finite number of}} cells is tackled. Processor allocation and message buffering completely disappear from the programmer's concerns. The mechanism proposed is considered a generalization of the <b>stack</b> <b>mechanism...</b>|$|R
40|$|G-quadruplex {{sequences}} {{exist in}} eukaryotic organisms and prokaryotes, {{and the investigation}} of interactions between G-quadruplexes and small molecule ligands is important for gene therapy, biosensor fabrication, fluorescence imaging and so on. Here, we investigated the behaviour of methylene blue (MB), an electroactive molecule, {{in the presence of}} different intramolecular G-quadruplexes by electrochemical method using a miniaturized electrochemical device based on its intrinsic electrochemical property. Although the effects of MB on different intramolecular G-quadruplex structures are not obvious by circular dichroism spectroscopy, distinct differences in binding affinities of MB with different intramolecular G-quadruplexes were fast and easily observed by the electrochemical technique. At the same time, for the human telomerase G-rich sequence (HT), the diffusion current of MB changed sensitively under different ion conditions due to the formation of different conformations of HT, which indicated that our electrochemical method has the potential to study the influence of metal ions on the conformations of the G-quadruplexes with simplicity, rapid response and low cost. From all these, new <b>stacking</b> <b>mechanism</b> and rule were obtained, which were also validated by docking studies and isothermal titration calorimetry (ITC) ...|$|E
40|$|The aim of {{this study}} was to model the 12 MV photon beam from a Saturne 43 LINAC {{configuring}} a 10 × 10 cm 2 radiation field, this by finding the required adjustments to the electron source parameters namely the spot size, shape and energy distribution. The MC simulation tool Geant 4 version 4. 9. 4 was used with rocks clustering software and Geant 4 MPI Interface to parallelize our Geant 4 -based application. In this work, we have developed a user code for Saturne 43 LINAC simulation. This code has the capabilities to run multiple simulations at the same time, perform our own variance reduction techniques, writing and reading phase-space data using IAEA routines, and calculate dose distributions in a water phantom. In aim to speed up the treatment head simulation, we have developed two variance reduction techniques; the first one is based on <b>stacking</b> <b>mechanism</b> and called GAMMATEC, where the second one is a particular implementation of bremsstrahlung splitting and called BREMSPE. The combination of these two techniques can reduce required CPU time about five times. After optimization it was found that the appropriate mean energy, sigma and its full width at half maximum are 11. 5 MeV, 0. 4 MeV and 1. 177 mm...|$|E
40|$|Human Cytochrome P 450 3 A 4 (CYP 3 A 4) is an {{important}} member of the cytochrome P 450 superfamily with responsibility for metabolizing ~ 50 % of clinical drugs. Experimental evidence showed that CYP 3 A 4 can adopt multiple substrates in its active site to form a cooperative binding model, accelerating substrate metabolism efficiency. In the current study, we constructed both normal and cooperative binding models of human CYP 3 A 4 with antifungal drug ketoconazoles (KLN). Molecular dynamics simulation and free energy calculation were then carried out to study the cooperative binding mechanism. Our simulation showed that the second KLN in the cooperative binding model had {{a positive impact on}} the first one binding in the active site by two significant pi-pi stacking interactions. The first one was formed by Phe 215, functioning to position the first KLN in a favorable orientation in the active site for further metabolism reactions. The second one was contributed by Phe 304. This pi-pi stacking was enhanced in the cooperative binding model by the parallel conformation between the aromatic rings in Phe 304 and the dioxolan moiety of the first KLN. These findings can provide an atomic insight into the cooperative binding in CYP 3 A 4, revealing a novel pi-pi <b>stacking</b> <b>mechanism</b> for drug-drug interactions...|$|E
40|$|Abstract (1) Out {{corpus of}} {{descriptive}} text contains {{a significant number}} of long-distance pronominal references (8. 4 % of the total). In order to account for how these pronouns are interpreted, we re-examine Grosz and Sidner's theory of the attentional state, and in particular the use of the global focus to supplement centering theory. Our corpus evidence concerning these long-distance pronominal references, as well as studies of the use of descriptions, proper names and ambiguous uses of pronouns, lead us to conclude that a discourse focus <b>stack</b> <b>mechanism</b> of the type proposed by Sidner is essential to account for the use of these referring expressions. We suggest revising the Grosz & Sidner fl'amework by allowing for the possibility that an entity in a focus space may have special status...|$|R
40|$|We {{formally}} {{prove the}} stackability and linearity of exception handlers of ML-style semantics using a novel proof technique via an ordered logical framework (OLF). We first transform exceptions into continuation-passing-style (CPS) terms and formalize the exception properties as a judgement on the CPS terms. Then, rather than directly proving that the properties hold for terms, we prove our theorem for the {{representations of the}} CPS terms and transform in OLF. We rely upon the correctness of our representations to transfer the results back to the actual CPS terms and transform. Our work {{can be seen as}} two-fold: we present a theoretical justification of using the <b>stack</b> <b>mechanism</b> to implement exceptions of ML-like semantics; and we demonstrate the value of an ordered logical framework as a conceptual tool in the theoretical study of programming languages. ...|$|R
40|$|While {{fine-grained}} concurrent languages can naturally capture concurrency in many irregular {{and dynamic}} problems, their flexibility has generally resulted in poor execution efficiency. In such languages the computation consists of many small threads which are created dynamically and synchronized implicitly. In {{order to minimize}} the overhead of these operations, we propose a hybrid execution model which dynamically adapts to runtime data layout, providing both sequential efficiency and low overhead parallel execution. This model uses separately optimized sequential and parallel versions of code. Sequential efficiency is obtained by dynamically coalescing threads via stack-based execution and parallel efficiency through latency hiding and cheap synchronization using heap-allocated activation frames. Novel aspects of the <b>stack</b> <b>mechanism</b> include handling return values for futures and executing forwarded messages (the responsibility to reply is passed along, like call/cc in Scheme) on the s [...] ...|$|R
40|$|Copyright © 2013 ISSR Journals. This is an {{open access}} article {{distributed}} under the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. ABSTRACT: The {{aim of this study}} was to model the 12 MV photon beam from a Saturne 43 LINAC configuring a 10 × 10 cm 2 radiation field, this by finding the required adjustments to the electron source parameters namely the spot size, shape and energy distribution. The MC simulation tool Geant 4 version 4. 9. 4 was used with rocks clustering software and Geant 4 MPI Interface to parallelize our Geant 4 -based application. In this work, we have developed a user code for Saturne 43 LINAC simulation. This code has the capabilities to run multiple simulations at the same time, perform our own variance reduction techniques, writing and reading phase-space data using IAEA routines, and calculate dose distributions in a water phantom. In aim to speed up the treatment head simulation, we have developed two variance reduction techniques; the first one is based on <b>stacking</b> <b>mechanism</b> and called GAMMATEC, where the second one is a particular implementation of bremsstrahlung splitting and called BREMSPE. The combination of these two techniques can reduce required CPU time about five times. After optimization it was found that the appropriate mean energy, sigma and its full width at half maximum are 11. 5 MeV, 0. 4 MeV and 1. 177 mm...|$|E
40|$|A dual <b>stacking</b> <b>mechanism</b> {{based on}} {{transient}} isotachophoresis (TITP) and induced pH junction focusing is demonstrated {{as a means}} to increase the concentration sensitivity in capillary electrophoresis of highly saline samples. When stacking was carried out with an unbuffered saline sample of fluorescein between two zones of low mobility background electrolyte at high pH under an electric field of reverse polarity, two transient peaks at both boundaries of the sample zone were observed. One peak at the rear boundary could be inferred as a transient isotachophoretic stacked zone. Through computer simulations of an unbuffered sample with a high concentration of sodium chloride, we showed that the fast moving zones of sodium and chloride ions induced pH changes at both boundaries to satisfy the electroneutrality condition and that the peak at the front boundary was due to the induced pH junction. To verify the pH changes, an indicator, thymol blue, was added to an NaCl solution and the color changes under an electric field were observed. The proposed mechanism was supported by observing the dual stacking procedure for an unbuffered sample of 4 -nitrophenol and measuring additional sensitivity enhancements by dual stacking for ten weakly acidic compounds. For the ten analytes including nucleoside phosphates, every dual stacking of an unbuffered sample exhibited an additional enhancement up to 86 % larger than that of usual transient isotachophoresis of the corresponding buffered sample without loss of separation efficiency and reproducibility. Therefore, {{it would be useful to}} skip over buffering in sample preparation for TITP, contrary to the general recommendation. close 212...|$|E
40|$|The unique {{nature of}} {{fluorocarbon}} solvents makes them significant in selective extraction. We studied noncovalent intermolecular associations in fluorous media (fluorous solvents/polymers), and receptor enhanced-extraction of 3 -hydroxypyridine with a fluorous solvent, FC- 72, and a fluorous polymer, Teflon AF 2400. The association through hydrogen bonding and electrostatic interactions between fluorinated carboxylic acids and 3 -hydroxypyridine improves {{the extraction of}} 3 -hydroxypyridine into FC- 72 and the films prepared from Teflon AF 2400. The association {{is found to be}} substantially stronger in FC- 72 than in chloroform; however weaker in the fluorous films due to the specific properties of the polymer and sorption of solvents in the films. Dimensionally stable and chemically inert fluorous polymer films have advantages in fluorous separations. Films of Teflon AF 2400 were cast from solution. Transport measurements on a series of solutes with different polarity and functional groups reveal that the selectivity of the films with and without a perfluoropolyether plasticizer. The films favor the transport of fluorinated solutes in comparison to the hydrogen-containing control. Transport rates are dependent on the solvent making up the source and receiving phases. Various solvents, including organic solvents and the nonvolatile perfluoropolyether plasticizer, were investigated and compared. To study the selectivity of extraction and membrane transport, {{an important part of the}} work is analysis of mixtures of solutes. Capillary electrophoresis (CE) is a powerful analytical technique for separation of diverse samples. For increased sensitivity in CE, we investigated the optimal stacking conditions for separation of barbiturates and analogs with capillary zone electrophoresis (CZE), and micellar electrokinetic chromatography (MEKC). To achieve stacking for all the analytes that have a wide distribution of affinity for the SDS micelles in MEKC, high pH sample matrices have been used to ionize the analytes, thus decreasing their affinity for the SDS micelles, and resulting stacking similar as that in CZE. Both normal stacking and transient ITP <b>stacking</b> <b>mechanism</b> are involved, depending on the sample matrix...|$|E
40|$|We apply a {{systematic}} approach {{to identify a}} high-k/metal gate <b>stack</b> degradation <b>mechanism.</b> Our results demonstrate that the SiO 2 interfacial layer controls the overall degradation and breakdown of the high-k gate stacks stressed in inversion. Defects contributing to the gate stack degradation {{are associated with the}} high-k/metal-induced oxygen vacancies in the interfacial layer...|$|R
40|$|Ideally, a {{pipeline}} processor can run {{at a rate}} that is limited by its slowest stage. Branches in the instruction stream disrupt the pipeIine, and reduce processor performance to well below ideal. Since workloads contain a high percentage of taken branches, techniques are needed to reduce or eliminate thk degradation. A Branch History Table (BHT) stores past action and target for branches, and predicts that future behavior will repeat. Although past action is a good indicator of future action, the subroutine CALL/RETURN paradigm makes correct prediction of the branch target dlfflcult. We propose a new <b>stack</b> <b>mechanism</b> for reducing this type of mispredlction. Using traces of the SPEC benchmark suite running on an RS/ 6000, we provide an analysis of the performance enhancements possible using a BHT. We show that the proposed mechanism can reduce the number of branch wrong guesses by 18. 2 °/ 0 on average...|$|R
40|$|Mixed {{metal oxide}} high-k films have many {{advantageous}} dielectric properties over conventional metal oxides. In this paper, three major subjects on the mixed oxide gate stack {{prepared by the}} sputtering method, i. e., dopant influence on interface layer structures, double-layer gate <b>stack</b> breakdown <b>mechanism,</b> and new CMOS-type nonvolatile memories based on nanocrystals embedded doped oxide high-k films, are examined and discussed...|$|R
40|$|The use of self-assembled gel in {{biomaterials}} {{and drug}} delivery {{is an important}} new area of research, with these novel materials possessing both physical and chemical advantages over current bio-polymers. However, as gel research expands, key elements of the self-assembly process and gel network formation are still poorly understood. If these gels are to be introduced into biological systems, a better model for gelation is needed which incorporates the structural behaviour and molecular interactions, which help define the stability of gels during the initial gelation process and over the long term. A novel family of gelator molecules, tetraalkyl pyromellitamides, were previously {{thought to be a}} model gel system and form in a hierarchical process as proposed in literature for other self-assembled gel systems. A range of gels were synthesised and tested {{to determine the effects of}} small changes to the molecule on the larger bulk gel. Through AFM and TEM imaging, it was found that the gel system does not follow a linear growth mechanism; instead it is a dynamic material which changes unexpectedly over a week. A large initial structure separates into smaller fibres which ten entangle to form super-structures on the nano-scale. Rheological profiles of the gels showed changes in viscosity and stiffness of the gels as they were aged, along with the differences in the initial gel formation. To examine what is causing these changes in the structure, X-Ray and neutron scattering were used to characterise the individual fibres which make up the larger fibres observed in the microscopy images. This data confirmed that a one-dimensional <b>stacking</b> <b>mechanism</b> was responsible for the fibre formation, and these fibres were effectively stretching out over time. To investigate the inter- and intra-molecular interactions, along with the role of the solvent molecules, a new synthesis was devised to produce per-deuterated gelators. Using solid-state deuterium-NMR, the mobility and orientation of the side-chains was observed, showing that the gelator is dynamic even when immobilized at low temperature...|$|E
40|$|Proteomics is a technology-driven {{discipline}} and very labor-intensive. Over {{the last couple}} of years, methods with microfluidic systems have been used to simplify analytical procedures via integration of laboratory processes and equipment into miniaturized formats to achieve reproducible and high throughput analyses of biomolecules. In this thesis work, a microfluidic capture device was used in which charged biomolecules can be immobilized without chemical binding by application of an electric field along a microflow stream. The device was used in combination with either matrix assisted laser desorption ionization (MALDI) or electrospray ionization (ESI) mass spectrometry. In paper I, different applications of the electrocapture technique in preconcentration, sample clean-up and separation were presented. In this demonstration initial work of the present thesis study were included. In paper II, the electrocapture device was used for separation of proteolytic peptides and detergent removal. Capture takes place at an initial, high voltage which is then gradually reduced. Peptides were found to be released in fractions based on their electrophoretic behavior, and their analysis by MALDI-MS was successful. The mechanism and principles which form the basis of the electroimmobilization were investigated in paper III. A modified device with four electric junctions allowed measurements of the electric field values between the junctions. Application of a potential, leads to zones of different electric field strengths: low strength upstream (first junction) and high strength downstream (fourth junction). These zones occur because of ionic rearrangements which are based on the interactions between the channel and the electrode chambers via cation-selective membranes. It was shown that charged molecules can be immobilized in the channel by a <b>stacking</b> <b>mechanism</b> between the zones of different electric field strengths. A functional interface between the outlet of the electrocapture cell and an electrospray source of an ESI mass spectrometer was established in paper IV. A fused silica capillary of appropriate dimensions allowed peptide transfer to the emitter tip and successful on-line analysis of peptides. In paper V, an enrichment strategy for peptides with the electrocapture device was developed. Proteolytic mixtures were first pre-concentrated in the device and then released for identification by on-line ESI mass spectrometry. At low concentrations, the enrichment step proved to be necessary for successful precursor ion selection and identification. Also, improved signal-to-noise-ratios and limit-of-detection values in the low femtomolar range were observed both are crucial factors for the analysis of low abundance samples. In an ongoing study, the electrocapture technology is used for a membrane protein screening project. A shotgun digest of membrane proteins is separated by a novel 2 -D approach (first dimension electrocapture, second dimension LC) ...|$|E
30|$|This article {{describes}} a pipeline synthesis and optimization technique that increases data throughput of FPGA-based system using minimum pipeline resources. The technique is applied on CAL dataflow language, and designed based on relations, matrices, and graphs. First, the initial as-soon-as-possible (ASAP) and as-late-as-possible (ALAP) schedules, {{and the corresponding}} mobility of operators are generated. From this, operator coloring technique is used on conflict and nonconflict directed graphs using recursive functions and explicit <b>stack</b> <b>mechanisms.</b> For each feasible number of pipeline stages, a pipeline schedule with minimum total register width is taken as an optimal coloring, which is then automatically transformed to a description in CAL. The generated pipelined CAL descriptions are finally synthesized to hardware description languages for FPGA implementation. Experimental results of three video processing applications demonstrate up to 3.9 × higher throughput for pipelined compared to non-pipelined implementations, and average total pipeline register width reduction of up to 39.6 and 49.9 % between the optimal, and ASAP and ALAP pipeline schedules, respectively.|$|R
40|$|Our {{corpus of}} {{descriptive}} text contains {{a significant number}} of long-distance pronominal references (8. 4 % of the total). In order to account for how these pronouns are interpreted, we re-examine Grosz and Sidner's theory of the attentional state, and in particular the use of the global focus to supplement centering theory. Our corpus evidence concerning these long-distance pronominal references, as well as studies of the use of descriptions, proper names and ambiguous uses of pronouns, lead us to conclude that a discourse focus <b>stack</b> <b>mechanism</b> of the type proposed by Sidner is essential to account for the use of these referring expressions. We suggest revising the Grosz & Sidner framework by allowing for the possibilitythat an entity in a focus space may have special status. 1 Motivation We call LONG-DISTANCE PRONOMINALISATIONS those cases of pronoun use in which the antecedent of the pronoun does not occur either in the same sentence as the pronoun or in the immediately preceding o [...] ...|$|R
40|$|Flutter {{suppression}} {{concept is}} demonstrated by performin wind-tunnel tests in a low subsonic flow regime. The wing model, witha trailing edge control surface, is constructed to have a bending-torsion flutter. The control surface is actuated by a flexure-hinged lead zirconate titanate <b>stack</b> <b>mechanism</b> acting as an aerodynamic effector. The flutter experiments are conducted using a digital controller, implemented in dSPACE DS 1104, keeping the wing model at 4 deg angle of attack. The wing response is measured by lead zirconate titanate sensors, which are used to generate the feedback control to vibrate the control surface in antiphase motion {{with respect to the}} main surface to introduce active aerodynamic control. It is noticed that both bending and torsion modes are stabilized in dosed-loop configurations. The damping trend of the flutter mode shows an expanded flutter envelope that is estimated to be around 20 %. The actuators are operated within 1000 V/mm, though their allowable field 13; strength is 1500 V/ mm...|$|R
40|$|We are {{interested}} in the memory usage of sparse direct solvers. We particularl- y focus on the parallel multifrontal scheme. In the multifrontal approach two kinds of memory can be distinguished: a static one which corresponds to the result of the factorization process (ie, the factors), and a dynamic or active one, usually handled by a <b>stack</b> <b>mechanism,</b> which corresponds to the working space of the factorization process. For some problems the stack size may be as large as and even greater than the final factors. The size of the stack depends on the assembly tree and on how the computation is distributed. We present an extensive study of the impact of state-of-the-art sparse matrix reordering techniques on the assembly tree and on the memory occupation of the solver in both sequential and parallel executions. The main observation {{of this study is that}} the stack of parallel multifrontal solvers does not scale well if a dynamic scheduling strategy based only on the balance of the workload is used...|$|R
