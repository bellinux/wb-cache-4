0|10000|Public
50|$|A known {{limitation}} of Drive Extender {{was that it}} in some cases changed timestamp of directories and files when data was moved around between disks. According to Microsoft this was expected behaviour. This caused unexpected behaviour when using clients that <b>sort</b> media based <b>on</b> <b>date.</b> Examples are XBMC, MediaPortal, and Squeezebox Server. The aforementioned programs worked fine with WHS; however, files may have appeared out of order due to this caveat.|$|R
50|$|EDD-order is {{an order}} based <b>on</b> due <b>date.</b> The {{sequence}} of remaining jobs in <b>sorted</b> based <b>on</b> non-decreasing due <b>date.</b>|$|R
40|$|Annotation This {{thesis is}} part of the project GA CR No 526 / 09 / 1546 (?Importace of newly assimilated carbon to the {{interaction}} of plants with soil in grassland and wetland ecosystems in varying environmental conditions?). The main intention of this work is to determine the aboveground production of a wetland stand of Hamerské louky in the Třeboň Basin Protected Landscape and Biosphere Reserve and to evaluate the effects of mineral fertiliser on its production and plant species composition. The aboveground biomass was harvested <b>on</b> four sampling <b>dates.</b> <b>On</b> 30. 5, 27. 6 and 27. 8, biomass samples were sorted into species while on 26. 10. samples were not <b>sorted.</b> <b>On</b> each <b>date,</b> the aboveground biomass was harvested from three plots within each of the three fertilization treatments. Two replicate samples of an area of 0, 125 m 2. The biomass values were converted to an area of 1 m 2. The studied plots were assigned to three treatments with a different application of mineral fertiliser doses: treatment with high intensity of fetilization included 300 kg NPK. ha- 2, treatment with low intensity of fertilization included 65 kg NPK. ha- 2 and treatment without fertilization 0 kg NPK. ha- 2. The highest total average aboveground biomass was detected on the last sampling date for all treatments. The values were 733, 6 g [...] m- 2 for the treament with high intensity of fertilization, 592, 9 g. m- 2 for the treatment wtih low intensity of fertilization and 629, 7 g. m- 2 for the treatment without fertiization. Interestingly, high fertiliser dose inhibited the production of mosses...|$|R
5000|$|Code {{sample that}} <b>sorts</b> tickets based <b>on</b> created <b>date</b> and customer: ...|$|R
50|$|The {{following}} graphs {{show the}} letter frequency {{distribution for the}} counted letters; Figure 2 shows a histogram data <b>sorted</b> <b>on</b> Unicode value. Figure 3 shows a histogram data <b>sorted</b> <b>on</b> frequency.|$|R
5000|$|Use the [...] {{option to}} <b>sort</b> <b>on</b> a certain column. For example, use [...] "" [...] to <b>sort</b> <b>on</b> the second column). In old {{versions}} of sort, the [...] option made the program <b>sort</b> <b>on</b> the second {{column of data}} ( [...] for the third, etc.). This usage is deprecated. $ cat zipcode Adam 12345 Bob 34567 Joe 56789 Sam 45678 Wendy 23456 [...] $ sort -k 2n zipcode Adam 12345 Wendy 23456 Bob 34567 Sam 45678 Joe 56789 ...|$|R
25|$|A variant named binary {{merge sort}} uses a binary {{insertion}} sort to sort groups of 32 elements, {{followed by a}} final sort using merge sort. It combines the speed of insertion <b>sort</b> <b>on</b> small data sets {{with the speed of}} merge <b>sort</b> <b>on</b> large data sets.|$|R
40|$|This paper {{describes}} {{in detail the}} bitonic sort algorithm,and implements the bitonic <b>sort</b> algorithm based <b>on</b> cuda architecture. At the same time,we conduct two effective optimization of implementation details according to {{the characteristics of the}} GPU,which greatly improve the efficiency. Finally,we survey the optimized Bitonic <b>sort</b> algorithm <b>on</b> the GPU with the speedup of quick <b>sort</b> algorithm <b>on</b> the CPU. Since Quick Sort is not suitable to be implemented in parallel,but it is more efficient than other <b>sorting</b> algorithms <b>on</b> CPU to some extend. Hence,to see the speedup and performance,we compare bitonic <b>sort</b> <b>on</b> GPU with quick <b>Sort</b> <b>on</b> CPU. For a series of 32 -bit random integer,the experimental results show that the acceleration of our work is nearly 20 times. When array size is about 216,the speedup ratio is even up to 30...|$|R
40|$|Characteristics {{of couples}} {{on or about}} their wedding day and {{characteristics}} of weddings {{have been shown to}} predict marital outcomes. Little is known, however, about how the dates of the weddings predict marriage durability. Using Dutch marriage and divorce registries from 1999 - 2013, this study compares the durations of marriages that began on Valentine's Day and numerically special days (dates with the same or sequential number values, e. g., 9. 9. 99, 1. 2. 03) with marriages <b>on</b> other <b>dates.</b> In the Netherlands, the incidence of weddings was 137 - 509 % higher <b>on</b> special <b>dates</b> than ordinary <b>dates,</b> <b>on</b> an adjusted basis, and the hazard odds of divorce for special-date marriages were 18 - 36 % higher. <b>Sorting</b> <b>on</b> couples' observable characteristics accounts for part of this increase, but even after controlling for these characteristics, special-date marriages were more vulnerable, with 11 - 18 % higher divorce odds compared to ordinary dates. This relation is even stronger for couples who have not married before...|$|R
30|$|The {{three sets}} of factors are 2 [*]×[*] 3 <b>sorts</b> <b>on</b> Size and B/M, or Size and OP, or Size and Inv; 2 [*]×[*] 2 <b>sorts</b> <b>on</b> Size and B/M, or Size and OP, or Size and Inv; and 2 [*]×[*] 2 [*]×[*] 2 [*]×[*] 2 <b>sorts</b> <b>on</b> Size, B/M, OP, and Inv (see details in Fama and French, 2014). In 2 [*]×[*] 3 <b>sorts</b> <b>on</b> Size and B/M, the size and value factors {{independently}} sort stocks into two size groups and three B/M groups and construct the size factor SMB and value factor HML as of FF 3 F model; the 2 [*]×[*] 3 <b>sorts</b> <b>on</b> Size and OP or Size and Inv {{are the same as}} Size and B/M except the sort for B/M groups is replaced by operating profitability or investment. 2 [*]×[*] 2 sorts’ method is similar as 2 [*]×[*] 3 sorts except that the stocks are all independently sorted into two groups. In 2 [*]×[*] 2 [*]×[*] 2 [*]×[*] 2 sorts, the size factor SMB equals the weights high and low B/M, robust and weak OP, and conservative and aggressive Inv portfolio returns.|$|R
25|$|Pidgin {{does not}} allow {{disabling}} the group <b>sorting</b> <b>on</b> the contact list.|$|R
50|$|Statistical leaders {{include the}} postseason are <b>sorted</b> <b>on</b> a per game basis.|$|R
5000|$|... #Caption: [...] Military {{mail and}} {{supplies}} being <b>sorted</b> <b>on</b> {{an aircraft carrier}} ...|$|R
5000|$|Pidgin {{does not}} allow {{disabling}} the group <b>sorting</b> <b>on</b> the contact list.|$|R
5000|$|... <b>sorting</b> <b>on</b> {{this value}} puts the highest {{risks to the}} budget first.|$|R
5000|$|If {{the item}} is judged as {{important}}, it is <b>sorted</b> <b>on</b> a new batch (to a new list) of important elements; if not, it is <b>sorted</b> <b>on</b> a different stack (in a different list) of unimportant elements. This is {{repeated in the}} first iteration until all items have been evaluated into two new stacks (or lists).|$|R
50|$|Publication lists can {{be viewed}} with {{different}} sortings (e.g. <b>sorted</b> <b>on</b> Author, Year, Journal).|$|R
5000|$|... #Caption: Effects of <b>sorting</b> <b>on</b> {{alluvial}} porosity. Black represents solids, blue represents pore space.|$|R
5000|$|... #Caption: Fair trade shade-grown {{coffee beans}} being <b>sorted</b> <b>on</b> a coffee {{plantation}} in Guatemala ...|$|R
5000|$|... #Caption: Presidents Vladimir Putin and George W. Bushsign <b>SORT</b> <b>on</b> 24 May 2002 in Moscow ...|$|R
50|$|Click <b>on</b> the <b>sort</b> symbol {{at the top}} of {{the columns}} to <b>sort</b> <b>on</b> a {{particular}} field.|$|R
50|$|The {{group and}} {{calendar}} was <b>sorted</b> <b>on</b> February 15 in Praia by the Cape Verdean Football Federation.|$|R
30|$|De Schutter and Poppe {{demonstrate}} {{an exceptionally}} noteworthy {{impact of the}} sand <b>sort</b> <b>on</b> the mortar properties [6].|$|R
50|$|The tags file is <b>sorted</b> <b>on</b> the {tagname} field {{which allows}} for fast searching of the tags file.|$|R
50|$|The tsort {{program is}} a command line utility on Unix-like platforms, that {{performs}} a topological <b>sort</b> <b>on</b> its input.|$|R
5000|$|Mickey in Living Color with Leonard Maltin, a short {{biography}} of <b>sorts</b> <b>on</b> the early portion of Mickey's cartoon career ...|$|R
40|$|We {{show that}} by folding data from an n n mesh onto an n (n /k) submesh, <b>sorting</b> <b>on</b> the submesh, and finally {{unfolding}} {{back onto the}} entire n n mesh {{it is possible to}} <b>sort</b> <b>on</b> bidirectional and strict unidirectional meshes using a number of routing steps that is very close to the distance lower bound for these architectures. The technique may also be applied to reconfigurable bus architectures to obtain faster sorting algorithms...|$|R
50|$|It is {{popularized by}} the second GPU Gems book, as an easy way of doing {{reasonably}} efficient <b>sorts</b> <b>on</b> graphics-processing hardware.|$|R
40|$|Abstract. Because {{of their}} various {{desirable}} properties, OTIS networks {{are subject to}} active {{research in the field}} of parallel processing. In this paper, the OTIS network architecture is presented, emphasizing two important varieties, the OTIS-mesh and the OTIS-hypercube. Next, a randomized sorting algorithm presented in the literature for OTIS-mesh structures will be reviewed. Finally, a discussion of <b>sorting</b> <b>on</b> OTIS-hypercubes will be offered, and a suggested algorithm for <b>sorting</b> <b>on</b> these networks, with an MPI implementation will be introduced...|$|R
50|$|The first pass, 5-sorting, {{performs}} insertion <b>sort</b> <b>on</b> five separate subarrays (a1, a6, a11), (a2, a7, a12), (a3, a8), (a4, a9), (a5, a10). For instance, {{it changes}} the subarray (a1, a6, a11) from (62, 17, 25) to (17, 25, 62). The next pass, 3-sorting, performs insertion <b>sort</b> <b>on</b> the three subarrays (a1, a4, a7, a10), (a2, a5, a8, a11), (a3, a6, a9, a12). The last pass, 1-sorting, is an ordinary insertion sort of the entire array (a1,..., a12).|$|R
60|$|Amelius {{was only}} {{too eager to}} hear the confession: it would {{pave the way for}} {{something}} of the same <b>sort</b> <b>on</b> his part.|$|R
5000|$|The {{following}} Python implementation performs cycle <b>sort</b> <b>on</b> an array, {{counting the}} number of writes to that array that were needed to sort it.|$|R
50|$|The GNU Standard C++ {{library is}} similar: uses introsort {{with a maximum}} depth of 2&times;log2 n, {{followed}} by an insertion <b>sort</b> <b>on</b> partitions smaller than 16.|$|R
6000|$|... 'No,' said Steerforth, before I could reply. 'Nothing of the <b>sort.</b> <b>On</b> the contrary, Mr. Copperfield used--or I am much mistaken--to {{have a great}} {{admiration for}} her.' ...|$|R
50|$|It had a {{net revenue}} in 2006 of USD 659.8 million and was ranked No. 43 {{on a list}} of Chinese {{electronics}} companies <b>sorted</b> <b>on</b> this figure.|$|R
6000|$|... "Not the least. I am {{not good}} at speculations of that <b>sort.</b> <b>On</b> my word, {{if you do not}} confess quickly, I will hurry away to the museum." ...|$|R
