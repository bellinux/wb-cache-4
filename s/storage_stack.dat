88|79|Public
5000|$|... #Caption: The {{position}} of I/O schedulers within various {{layers of the}} Linux kernel's <b>storage</b> <b>stack.</b>|$|E
5000|$|... #Caption: The {{position}} of the VFS layer within {{various parts of the}} Linux kernel's <b>storage</b> <b>stack.</b>|$|E
5000|$|... #Caption: The {{position}} of the device mapper targets within various layers of the Linux kernel's <b>storage</b> <b>stack.</b>|$|E
5000|$|In March 2002, the Ceramics Research Center {{opened in}} the Tempe Center just {{to the north of}} the Nelson Center. The center was {{designed}} by Gabor Lorant Architects, Inc. and includes 7500 sq ft with two galleries, open <b>storage</b> <b>stacks</b> and a research library. Additional facilities at the library's two buildings include a lecture room, a print study room, and a [...] "nymphaeum" [...] (courtyard).|$|R
5000|$|... #Caption: U.S. Federal Emergency Management Agency (FEMA) food <b>storage</b> {{containers}} <b>stacked</b> on shipping pallets in Texas, 2008.|$|R
50|$|Lakes Marina {{provides}} dry <b>stack</b> <b>storage.</b> The dry <b>stack</b> <b>storage</b> {{building is}} solid concrete and fitted out with fire fighting and superior lighting equipment. The dry berths are located with repair facilities, parking the marina office. Dry berths {{are available for}} boats up to 30 feet in length and the crane can lift boats up to 4.5 tons. Current facilities {{make it possible to}} store 270 vessels in the dry-stack storage building.|$|R
5000|$|... #Caption: The {{position}} of NVMe data paths and multiple internal queues within various {{layers of the}} Linux kernel's <b>storage</b> <b>stack.</b>|$|E
50|$|StorPool {{supports}} multitude Linux operating systems. Supported virtualization technologies include KVM, LXC and {{any other}} technology compatible with the Linux <b>storage</b> <b>stack.</b>|$|E
5000|$|Minio, Inc is {{the prime}} {{developer}} of Minio cloud <b>storage</b> <b>stack.</b> Minio is a cloud storage server released under Apache License v2, compatible with Amazon S3.|$|E
50|$|Further {{materials}} {{are held in}} <b>storage</b> in <b>Stacks,</b> either in closed access within College or at a book depository in the Dublin suburb of Santry.|$|R
40|$|We {{propose a}} {{generalization}} of {{results on the}} decidability of emptiness for several restricted classes of sequential and distributed automata with auxiliary <b>storage</b> (<b>stacks,</b> queues) that have recently been proved. Our generalization relies on reducing emptiness of these automata to finite-state graph automata (without storage) defined on monadic second-order (MSO) definable graphs of bounded treewidth, where the graph structure encodes the mechanism provided by the auxiliary storage. Our results outline a uniform mechanism to derive emptiness algorithms for automata, explaining and simplifying several existing results, as well as proving new decidability theorems. ...|$|R
50|$|GS/FS {{are also}} used in gcc's thread-local <b>storage</b> and canary-based <b>stack</b> protector.|$|R
50|$|Many {{packaging}} engineers find it {{beneficial to}} periodically audit warehouses and visit customer's package receiving operations. When field performance is observed or documented to have problems, a new cycle {{of design and}} testing may be justified.for a corrugated box to withstand the deformation while stacking or <b>storage</b> (<b>stack</b> load = 1/3 compression strength).where stack load=gross weight of box *stack height.|$|E
50|$|Minio cloud <b>storage</b> <b>stack</b> {{has three}} major components, the cloud storage server, Minio Client aka mc, a desktop client for {{seamless}} file management with Amazon S3 compatible servers and Minio SDKs {{that can be}} used by applications to interact with any Amazon S3 compatible server. Minio Inc also provides MinFS, a FUSE driver for Amazon S3 compatible object storage servers.|$|E
50|$|There is a {{plurality}} of terms {{that are used to}} describe implementations of disk encryption: on-the-fly encryption (OTFE); full disk encryption (FDE), whole disk encryption; filesystem-level encryption, encrypted filesystem, cryptographic filesystem, etc. All of them refer to an encryption layer in the <b>storage</b> <b>stack.</b> This article describes these techniques and explains their pros and cons. This article does not reference any software or hardware implementing these techniques (see disk encryption software and hardware), and it does not describe cryptographic theory behind it (see disk encryption theory).|$|E
40|$|In {{container}} terminal operations, the storage yard {{plays an important}} role for a terminal's overall performance because it links the seaside and landside and serves as the buffer area for storing containers. Therefore, <b>storage</b> and <b>stacking</b> logistics has become a field that increasingly attracts attentions in both academic and practical research during the recent years. The {{purpose of this article is}} to review and classify the growing literature on <b>storage</b> and <b>stacking</b> logistics, and to identify the research areas that could be further investigated. The literature in this area mainly falls into three categories: storage space allocation problem, design of optimal yard layout and container stacking logistics. This article is among the first known to review the literature focus on this area, it thus provides a new perspective for both managers and researchers on the issue of yard operations management...|$|R
40|$|Synchronous small writes play a {{critical}} role in the reliability and availability of file systems and applications that use them to safely log recent state modifications and quickly recover from failures. However, <b>storage</b> <b>stacks</b> usually enforce page-sized granularity in their data transfers from memory to disk. We experimentally show that subpage writes may lead to storage bandwidth waste and high disk latencies. To address the issue in a journaled file system, we propose wasteless journaling as a mount mode that coalesces synchronous concurrent small writes of data into full page-sized blocks before transferring them to the journal. Additionally, we propose selective journaling that automatically applies wasteless journaling on data writes whose size lies below a fixed preconfigured threshold. In the Okeanos prototype implementation that we developed, we use microbenchmarks and application-level workloads to show substantial improvements in write latency, transaction throughput and storage bandwidth requirements. ...|$|R
40|$|Enhanced oil {{recovery}} (EOR) through carbon dioxide (CO₂) sequestration from anthropogenic sources {{has been gaining}} attention in policy circles. In particular, it {{is viewed as a}} potential way to help accelerate the deployment of carbon capture and sequestration (CCS) technologies. The interest in the EOR-CCS model stems from the economic, geologic and regulatory benefits this model offers when compared to the waste-driven CCS model that utilizes saline aquifers for CO₂ storage. However, there are still some major challenges impeding the deployment of the EOR-CCS model; chief among these challenges is the mismatch between CO₂ supplies from anthropogenic sources and CO₂ demand from EOR operations. One potential way to address this challenge is through a CO₂ <b>stacked</b> <b>storage</b> system. A CO₂ <b>stacked</b> <b>storage</b> system utilizes brine formations adjacent to EOR oilfields for the purpose of storing any additional quantities of CO₂ the EOR operation cannot handle. The concept of a <b>stacked</b> <b>storage</b> system with focus on CO₂ supplies from coal-fired power plants was analyzed using a case study. A U. S. coal-fired power plant and a U. S. EOR oilfield were used to model a <b>stacked</b> <b>storage</b> system {{in order to determine the}} economic and technical viability of such a model. More specifically, this thesis has three main objectives. The first is to determine the overall cost of implementing the <b>stacked</b> <b>storage</b> system. The overall cost of the system came to approximately $ 90 per ton of CO₂ avoided. by Ibrahim Toukan. Thesis (S. M.) [...] Massachusetts Institute of Technology, Engineering Systems Division; and, (S. M.) [...] Massachusetts Institute of Technology, Dept. of Mechanical Engineering, 2012. Cataloged from PDF version of thesis. Includes bibliographical references (p. 83 - 85) ...|$|R
50|$|In {{looking at}} this table that compares whether the {{encryption}} software works at the disk, partition, file, etc. layer, there just doesn't seem to be enough room to capture all the options. That's because encryption may be applied at different layers in the <b>storage</b> <b>stack.</b> For example, encryption can be configured at the disk layer, on a subset of a disk called a partition, on a volume, which {{is a combination of}} disks or partitions, at the layer of a file system, or within userland applications such as database or other applications that run on the host operating system.|$|E
5000|$|Some file systems, such as Btrfs, HAMMER, ReFS, and ZFS, use {{internal}} data and metadata checksumming to detect silent data corruption. In addition, if a corruption is detected and the file system uses integrated RAID mechanisms that provide data redundancy, such file systems can also reconstruct corrupted {{data in a}} transparent way. [...] This approach allows improved data integrity protection covering the entire data paths, which is usually known as end-to-end data protection, compared with other data integrity approaches that do not span different layers in the <b>storage</b> <b>stack</b> and allow data corruption to occur while the data passes boundaries between the different layers.|$|E
40|$|Abstract—The {{arrangement}} of file systems and volume management/RAID systems, together {{commonly referred to}} as the <b>storage</b> <b>stack,</b> has remained the same for several decades, despite significant changes in hardware, software and usage scenarios. In this paper, we evaluate the traditional <b>storage</b> <b>stack</b> along three dimensions: reliability, heterogeneity and flexibility. We highlight several major problems with the traditional stack. We then present Loris, our redesign of the <b>storage</b> <b>stack,</b> and we evaluate several aspects of Loris. I...|$|E
5000|$|In {{computer}} programming, {{a static}} variable is a variable {{that has been}} allocated [...] "statically", meaning that its lifetime (or [...] "extent") is the entire run of the program. This {{is in contrast to}} shorter-lived automatic variables, whose <b>storage</b> is <b>stack</b> allocated and deallocated on the call stack; and in contrast to objects, whose storage is dynamically allocated and deallocated in heap memory.|$|R
40|$|We report {{tests of}} a refuelable zinc/air battery of modular, bipolar-cell design, {{intended}} for fleet electric busses and vans. The stack consists of twelve 250 -cm{sup 2 } cells built of two units: (1) a copper-clad glass-reinforced epoxy board supporting anode and cathode current collectors, and (2) polymer frame providing for air- and electrolyte distribution and zinc fuel <b>storage.</b> The <b>stack</b> was refueled in 4 min. by a hydraulic transfer of zinc particles entrained in solution flow...|$|R
40|$|Sliced {{tomatoes}} rapidly become translucent {{and show}} accelerated softening. Slicing-induced development of translucency and firmness decay {{of the outer}} pericarp was investigated in slices with or without locular gel and in slices from different tomato genotypes varying in their amount of locular gel. In addition, the effect of wounding-associated juice release on translucency and softening was investigated in slices stored as “single slice” and stored as “stacked slices” and in slices blotted dry immediately after wounding. Rapid translucency development was severely affected {{by the presence of}} locular gel. In slices where the locular gel was removed, and in cultivars with low amounts of locular gel, translucency development was much less. Translucency development seemed unrelated to the released juice from wounded tissue as it was not affected by the <b>storage</b> method (<b>stacked</b> or single slices) nor by dry blotting of cut surfaces immediately after slicing. Rapid firmness decay in slices is not related to the presence of the locular gel and was also not affected by <b>storage</b> method (<b>stacked</b> or single slices) nor by dry blotting of cut surfaces immediately after slicing The results show that translucency development and firmness decay are independent processes occurring simultaneously after slicin...|$|R
40|$|Abstract—The <b>storage</b> <b>stack</b> in an {{operating}} system faces {{a number of}} dependability threats. The importance of keeping users ’ data safe makes this area particularly worth investigating. We briefly describe the main threats (disk device failures, whole-system failures, software bugs, and memory corruption), and outline the Loris <b>storage</b> <b>stack</b> that we developed previously. We then present an integrated approach that combines several techniques to protect the Loris <b>storage</b> <b>stack</b> against these dependability threats, {{all the way from}} the disk driver layer to the virtual file system (VFS) layer. I...|$|E
40|$|With the {{widespread}} adoption of NAND-flash-based SSDs {{as a primary}} storage medium, heterogeneity in storage installations has become a norm rather than an exception. In this paper, we argue that the compatibility-driven traditional <b>storage</b> <b>stack</b> is fundamentally flawed and incapable of supporting and exploiting heterogeneity properly. After highlighting major issues with the traditional stack, we show how Loris, our fresh redesign of the <b>storage</b> <b>stack,</b> supports easy integration of heterogeneous devices with minimal development effort. We also show how Loris, with a few extensions, can {{be transformed into a}} flexible, modular framework for implementing several hybrid configurations that exploit heterogeneity in the <b>storage</b> <b>stack.</b> ...|$|E
40|$|The common <b>storage</b> <b>stack</b> {{as found}} in most {{operating}} systems has remained unchanged for several decades. In this stack, the RAID layer operates under the file system layer, at the block abstraction level. We argue that this arrangement of layers has fatal flaws. In this paper, we highlight its main problems, and present a new <b>storage</b> <b>stack</b> arrangement that solves these problems. ...|$|E
40|$|In {{this work}} we propose Violin, a {{virtualization}} framework that allows easy extensions of block-level <b>storage</b> <b>stacks.</b> Violin allows (i) developers to provide new virtualization functions and (ii) storage administrators to combine these functions in storage hierarchies with rich semantics. Violin {{makes it easy}} to develop such new functions by providing support for (i) hierarchy awareness and arbitrary mapping of blocks between virtual devices, (ii) explicit control over both the request and completion path of I/O requests, and (iii) persistent metadata management. To demonstrate the effectiveness of our approach we evaluate Violin in three ways: (i) We loosely compare the complexity of providing new virtual modules in Violin with the traditional approach of writing monolithic drivers. In many cases, adding new modules is a matter of recompiling existing user-level code that provides the required functionality. (ii) We show how simple modules in Violin can be combined in more complex hierarchies. We demonstrate hierarchies with advanced virtualization semantics that are difficult to implement with monolithic drivers. (iii) We use various benchmarks to examine the overheads introduced by Violin in the common I/O path. We find that Violin modules perform within 10 % of the corresponding monolithic Linux drivers. 1...|$|R
40|$|The Texas Gulf Coast is an {{attractive}} target for carbon <b>storage.</b> <b>Stacked</b> sand-shale layers provide large potential storage volumes and defense-in-depth leakage protection. However, multiple perforations resulting from intensive hydrocarbon exploration and production have weakened seal integrity in many favorable locations. If {{the ultimate goal of}} carbon storage is to isolate large volumes of CO 2 for hundreds to thousands of years, plume migration will encounter inadequately completed wells miles away from the injection zone. Moreover, the detrimental impact of CO 2 on cement could undermine the structural integrity of all contacted wells, although pressure effects subside quickly after injection. Even wells abandoned to current standards cannot be guaranteed leak-free in the long term. We describe spatial statistics extracted from the Texas RRC Well Bore database as applied to carbon storage. Although the Area of Review (AOR) has been traditionally defined by a fixed radius with the strong regulatory requirement that the injectate stays within the injection layer, buoyancy is a major characteristic of CO 2 that introduces a third dimension into the Area of Review process. Using simple geological mapping to characterize structural traps, we determine the likely pathway and the contacted volume of a migrating plume. The latter can be as large as a fault compartment with dimensions of 20 k...|$|R
40|$|AbstractIn this paper, the {{research}} object {{is the use}} of corrugated carton in packaging low-temperature yogurt, with the focus on hazard factors of external packaging cartons of yogurt in logistics process; on the basis of production, storage and transport links of yoghurt, the factors investigated in this study include relative humidity of storage environment, stock time, <b>storage</b> and <b>stacking,</b> circulation, transportation, handling, loading and unloading procedure; hazard factors and hazard degree encountered in each logistics link are analyzed; finally, the measures to ensure maximum safety and service life of packages of yogurt products are discussed...|$|R
40|$|We {{propose the}} concept of Context-Aware I/O (CAIO), a generic {{mechanism}} that enables lower layers of the <b>storage</b> <b>stack</b> such as the disk, to track application-data and application-I/O relationships. In CAIO, higher-level application context is propagated along with every I/O operation, in an end-to-end fashion, across the <b>storage</b> <b>stack.</b> By decoupling the generation of such contexts at the higher layers from how they are used by the lower layers, CAIO provides a simple, yet effective mechanism to encode and propagate application semantics to the <b>storage</b> <b>stack.</b> In addition to conveying information about the logical task on behalf of which an I/O is executed, context also acts a vehicle for tracking application-specific semantics at any layer of the <b>storage</b> <b>stack.</b> A large class of such semantics can be learned implicitly by the layers, while others can be explicitly associated by way of out-of-band attributes. To demonstrate the usefulness of CAIO, we have designed and evaluated three casestudies that make use of logical contexts to track different kinds of semantic knowledge, achieving interesting functionality. ...|$|E
40|$|We {{describe}} the Logistical Networking Testbed, built using the Network <b>Storage</b> <b>Stack,</b> and sample applications {{that use the}} testbed. The testbed uses the Network <b>Storage</b> <b>Stack,</b> developed at the University of Tennessee, which allows for flexible sharing and utilization of writable storage as a network resource. The sample applications include content delivery, multimedia streaming, overlay routing, checkpointing, and an integrated example. This networking testbed provides over 10 TB of shared storage that is available to all for research...|$|E
40|$|Abstract. We {{describe}} {{the difficulties of}} content distribution and building an ad hoc content distribution network using the Network <b>Storage</b> <b>Stack</b> and a publicly available testbed. The testbed uses the Network <b>Storage</b> <b>Stack,</b> developed at the University of Tennessee, which allows for flexible sharing and utilization of writable storage as a network resource. The ad hoc content distribution network improves resource utilization and user throughput without highly centralized control. The networking testbed provides over 10 TB of shared storage {{around the world that}} is available to all for research. ...|$|E
40|$|Storage {{devices are}} rapidly changing, {{and we need}} to adapt the OS <b>storage</b> {{software}} <b>stack</b> {{to keep up with the}} changes. Such a re-evaluation of the <b>storage</b> software <b>stack</b> is especially required for mobile platforms because they are relying on inexpensive flash storage devices having very different performance characteristics from the familiar hard disk. In this thesis work, we first show the importance of storage in mobile platforms; contrary to conventional wisdom, we find evidence that storage is a significant contributor to application performance on mobile devices. Then, we explore the solution space for flash storage; user-level library for selective logging, host-side write buffering layer, and OS buffer replacement scheme for flash storage have been studied. Finally, we build an integrated solution for smartphone storage, named Fjord. In the Fjord study, we re-design logging and RAM buffering solutions for smartphones, and also propose fine-grained reliability control mechanisms. We prove that non-volatile logging can improve storage performance remarkably. Understanding the characteristics of cloud-backed applications and controlling the reliability constraint for chosen cloud-backed applications can achieve additional significant performance gain. We implement and evaluate our solution on a real Android smartphone, and demonstrate significant performance gains for everyday apps on such platforms. PhDCommittee Chair: Umakishore Ramachandran; Committee Member: Ling Liu; Committee Member: Marilyn C. Wolf; Committee Member: Moinuddin Qureshi; Committee Member: Remzi H. Arpaci-Dussea...|$|R
50|$|Elena Felipe and Bernadina Rivera are Purepecha Mexican potters from Huancito, Michoacán {{known for}} making towers of <b>stacked</b> <b>storage</b> containers. The two are native {{speakers}} {{of the indigenous}} language and are sisters-in-law, with Elena married to Bernadina’s brother. Both learned pottery as children and are passing the tradition onto the next generation.|$|R
50|$|The ConRo vessel is {{a hybrid}} of a RORO and a {{container}} ship. This type of vessel has a below-deck area used for vehicle <b>storage</b> while <b>stacking</b> containerized freight on the top decks. ConRo ships, {{such as those in}} the fleet of Atlantic Container Line, can carry a combination of 1,900 twenty-foot equivalent units (TEU) of containers, up to 1,000 TEU of heavy equipment, project and oversized cargo on three decks, and up to 2,000 automobiles on five decks. Separate internal ramp systems within the vessel segregate automobiles from other vehicles, Mafi trailers, and break-bulk cargo.|$|R
