15|12|Public
50|$|Vector-based GIS is {{typically}} related to operations such as map overlay (combining {{two or more}} maps or map layers according to predefined rules), <b>simple</b> <b>buffering</b> (identifying regions of a map within a specified distance {{of one or more}} features, such as towns, roads or rivers) and similar basic operations. This reflects (and is reflected in) {{the use of the term}} spatial analysis within the Open Geospatial Consortium (OGC) “simple feature specifications”. For raster-based GIS, widely used in the environmental sciences and remote sensing, th{{is typically}} means a range of actions applied to the grid cells of one or more maps (or images) often involving filtering and/or algebraic operations (map algebra). These techniques involve processing one or more raster layers according to simple rules resulting in a new map layer, for example replacing each cell value with some combination of its neighbours’ values, or computing the sum or difference of specific attribute values for each grid cell in two matching raster datasets. Descriptive statistics, such as cell counts, means, variances, maxima, minima, cumulative values, frequencies and a number of other measures and distance computations are also often included in this generic term spatial analysis. Spatial analysis includes a large variety of statistical techniques (descriptive, exploratory, and explanatory statistics) that apply to data that vary spatially and which can vary over time. Some more advanced statistical techniques include Getis-ord Gi* or Anselin Local Moran's I which are used to determine clustering patterns of spatially referenced data.|$|E
40|$|Abstract: In this paper, {{we discuss}} the use of {{fragmented}} bandwidth to improve the performance of staggered striping in a multimedia system. It is observed that potential disruptions can occur when nonconsecutive idle disks are used for displaying multimedia objects. We have identified useful retrieval patterns and shown that with proper selections of fragmented disks and a <b>simple</b> <b>buffering</b> scheme, disruptions can be easily eliminated...|$|E
40|$|We {{consider}} {{the problem of}} minimizing the delay in transporting a signal across a distance in a VLSI circuit. The problem can be restated as a combined buffer insertion, buffer sizing and wire sizing problem. We propose a <b>simple</b> <b>buffering</b> architecture for this problem and show that this architecture achieves a near optimal solution. We also derive simple models for a buffered wire which are suitable for high level design. © IEE...|$|E
40|$|We {{present a}} <b>simple</b> lazy <b>buffering</b> {{technique}} for performing bulk operations on multidimensional spatial indexes (data structures), {{and show that}} it is efficient in theory {{as well as in}} practice. We present the technique in terms of the so-called R-tree and its variants, as they have emerged as practically efficient indexing methods for spatial data...|$|R
40|$|Revising {{buffering}} in multihop CSMA/CA wireless networks Abstract—We {{look at a}} multihop wireless {{path with}} relay nodes running some CSMA/CA protocol. We show that current buffering schemes with a drop-tail policy lead to low throughput, independently of any other MAC layer issues. We propose a <b>simple</b> alternative <b>buffering</b> policy, where relay nodes are essentially bufferless. We show that even without buffering, the network can be stabilized in a regime where the link utilization is optimal, through very simple amendments to the MAC layer. Furthermore, the network operation stays self-organized and resilient to mild interference and transmission failures. Exploiting a packet/hole duality property of the system, we suggest extensions for handling bidirectional traffic along the path, and more general mesh network configurations. I...|$|R
40|$|Asynchronous {{transfer}} mode (ATM) switches based on shared buffering {{are known to}} have better performance and buffer utilization than input or output queued switches. Shared buffer switches do not suffer from head of line blocking which is a problem in <b>simple</b> input <b>buffering.</b> Shared buffer switches have previously been studied under uniform and unbalanced traffic patterns. However, due to the complexity of the model, the performance of such a switch, {{in the presence of a}} single hot spot, has not been fully explored. In this article, we develop a model for a multistage ATM switch constructed of shared buffer switching elements and operating under a hot spot traffic pattern. The model is used to study the switch performance in terms of the throughput, cell delay, cell loss probability and the optimal buffer size. # 1999 Elsevier Science B. V. All rights reserved...|$|R
40|$|The {{current level}} of {{integration}} of microprocessors with space instrumentation is reviewed. Their inclusion provides the benefits of improved measurement resolution, improved reliability, a more efficient use of limited spacecraft resources and further provides control for the latest complex instruments. In the past microprocessors were limited to just controlling instruments and <b>simple</b> <b>buffering</b> of the data produced for the spacecraft telemetry system. Already microprocessors are being relied on to perform mission critical calculations while future uses involve increased on-board intelligence and even on board expert systems...|$|E
40|$|This paper {{relates to}} systems for target {{tracking}} by fusing measurements from heterogeneous sensors. The measurements are corrupted by systematic errors such as offsets {{in the value}} domain and the fusion being complicated due to an Out-of-Sequence measurements problem. We present an example where the offsets of measurements from two sensors are equally large and have opposite algebraic signs. We show that the timely concentrated fusion of measurements according to a <b>simple</b> <b>buffering</b> approach is better suited for diminishing the unwanted effects of systematic errors than the scattered fusion which results from immediately fusing Out-of-Sequence measurements by sophisticated Outof-Sequence measurement fusing algorithms. 1...|$|E
40|$|AbstractA process {{communicates}} {{with its}} environment {{and with other}} processes by syncronized output and input on named channels. The current state of a process {{is defined by the}} sequences of messages which have passed along each of the channels, and by the sets of messages that may next be passed on each channel. A process satisfies an assertion if the assertion is at all times true of all possible states of the process. We present a calculus for proving that a process satisfies the assertion describing its intended behaviour. The following constructs are axiomatised: output; input; simple recursion; disjoint parallelism; channel renaming, connection and hiding; process chaining; nondeterminism; conditional; alternation; and mutual recursion. The calculus is illustrated by proof of a number of <b>simple</b> <b>buffering</b> protocols...|$|E
40|$|A {{model for}} the {{analysis}} of ATM switches based on shared buffer switching for Broadband ISDN networks is developed, and the results are compared with the simulation. Switches constructed from shared buffer switching elements (SE) no longer suffer from the head of line blocking which is a common problem in <b>simple</b> input <b>buffering.</b> The analysis models the state of the entire switch and extends the model introduced by Turner to global flow control with backpressure mechanism. It is shown that buffer utilization is better and throughput improves significantly compared with the same network using local flow control policy. Key Words- Delta networks, shared buffer switches, analytical modeling, Markov chain, ATM switches. 1 Introduction In recent years, broadband ISDN (BISDN) has received increasing attention for its capability to provide a wide variety of services like video communication, graphic applications, and high speed data communications. One of the most promising approaches for B [...] ...|$|R
40|$|Multistage Interconnection Networks {{based on}} shared {{buffering}} {{are known to}} have better performance and buffer utilization than input or output buffered switches. Shared buffer switches do not suffer from head of line blocking which is a common problem in <b>simple</b> input <b>buffering.</b> Shared buffer switches have previously been studied under uniform and unbalanced traffic patterns. However, due to the complexity of the model, the performance of such a network, {{in the presence of a}} single hot spot, has not been fully explored. A hot spot arises when one of the outputs of the network becomes very popular. In this paper, we develop a model for a multistage interconnection network constructed from shared buffer switching elements and operating under a hot spot traffic pattern. The model is validated by comparison with simulation results. The model is used to study the network performance in terms of the throughput, packet delay, packet loss probability and the optimal buffer utilization. Numerica [...] ...|$|R
40|$|Most {{cases of}} autosomal-dominant {{familial}} Alzheimer's disease {{are linked to}} mutations in the presenilin genes (PS 1 and PS 2). In addition to modulating β-amyloid production, presenilin mutations also produce highly specific and selective alterations in intracellular calcium signaling. Although the molecular mechanisms underlying these changes are not known, one candidate molecular mediator is calsenilin, a recently identified calcium-binding protein that associates with the C terminus of both PS 1 and PS 2. In this study, we investigated the effects of calsenilin on calcium signaling in Xenopus oocytes expressing either wild-type or mutant PS 1. In this system, mutant PS 1 potentiated the amplitude of calcium signals evoked by inositol 1, 4, 5 -trisphosphate and also accelerated their rates of decay. We report that calsenilin coexpression reverses both of these potentially pathogenic effects. Notably, expression of calsenilin alone had no discernable effects on calcium signaling, suggesting that calsenilin modulates these signals by a mechanism independent of <b>simple</b> calcium <b>buffering.</b> Our findings further suggest {{that the effects of}} presenilin mutations on calcium signaling are likely mediated through the C-terminal domain, a region that has also been implicated in the modulation of β-amyloid production and cell death...|$|R
40|$|Abstract. Parallel {{programming}} generally requires {{awareness of}} the granularity and communication requirements of parallel subtasks, since without precaution, the overhead for parameter and result communication may outweigh the gain of parallel processing. While this problem is often solved explicitly at the language level, {{it can also be}} alleviated by optimising message passing mechanisms in the runtime environment. We describe how a <b>simple</b> <b>buffering</b> mechanism introduces dynamic list chunking in the runtime environment of the parallel functional language Eden. We discuss design and implementation aspects of dynamic chunking and compare its effects to the original version in a set of measurements. Our optimisation is justified by a simple cost model, measurements analyse the overhead and illustrate the impact of the changed message passing mechanism. ...|$|E
40|$|Rural {{households}} {{in many developing}} economies have incomes that vary seasonally. We explore {{the implications of this}} income seasonality for household consumption. We use household-level data from three Indian villages to document seasonal patterns in income and consumption, and to test whether income seasonality produces seasonal consumption variation. Our basic finding is that while there does appear to be some seasonality in consumption patterns, it is much less pronounced than in the case of income, and more surprisingly, that the patterns are quite similar for households with very different seasonal income patterns. While {{this finding is consistent with}} wellfunctioning credit markets, we show, through simulations, that it is also consistent with a <b>simple</b> <b>buffering</b> model of consumption in which cautious households cannot borrow, but can save via the accumulation of assets. We provide evidence that suggests that households rely more on buffering behavior than on credit markets to smooth consumption under income seasonality...|$|E
40|$|This paper {{explores the}} {{application}} of map generalisation techniques {{in the creation of}} small scale mapping (1 : 250, 000) directly from large scale data (1 : 1250 and 1 : 2500). Small scale mapping provides a synoptic overview. At 1 : 250, 000 scale, it is not that there is less information contained in the map, rather that we see fundamentally different information and relationships – broad-brush information between higher order phenomenon. The evaluation criteria used at this scale are quite different from those used at large scale. This paper describes a methodology by which small scale mapping is derived directly from the large scale (without generating intermediate results) using simple generalisation techniques. The approach illustrated in this case study, creates city boundaries based on <b>simple</b> <b>buffering</b> of building features, and derivation of the single polygon surrounding clusters of buildings over a threshold size. The hull is simplified, small internal polygons removed. The algorithm was applied to large and small conurbations alike. The results obtained via this method were evaluated against paper maps. Initial results point to refinement of this technique...|$|E
40|$|Area bloat in {{physical}} synthesis not only increases power dissipation, but also creates congestion problems, forces designers {{to enlarge the}} die area, rerun the whole design flow, and postpone the design deadline. As a result, it is vital for physical synthesis tools to achieve timing closure and low power consumption with intelligent area control. The major sources of area increase in a typical physical synthesis flow are from buffer insertion and gate sizing, {{both of which have}} been discussed extensively in the last two decades, where the main focus is individual optimized algorithm. However, building a practical physical synthesis flow with buffering and gate sizing to achieve the best timing/area/runtime is rarely discussed in any previous literatures. In this paper, we present two <b>simple</b> yet efficient <b>buffering</b> and gate sizing techniques and achieve a physical synthesis flow with much smaller area bloat. Compared to a traditional timing-driven flow, our work achieves 12 % logic area growth reduction, 5. 8 % total area reduction, 10. 1 % wirelength reduction, and 770 [*]ps worst slack improvement on average on 20 industrial designs in 65 [*]nm and 45 [*]nm...|$|R
40|$|BACKGROUND: One of the {{principal}} explanations for respiratory sinus arrhythmia is that it reflects arterial baroreflex buffering of respiration-induced arterial pressure fluctuations. If this explanation is correct, then elimination of RR interval fluctuations should increase respiratory arterial pressure fluctuations. METHODS AND RESULTS: We measured RR interval and arterial pressure fluctuations during normal sinus rhythm and fixed-rate atrial pacing at 17. 2 +/- 1. 8 (SEM) beats per minute greater than the sinus rate in 16 healthy men and 4 healthy women, 20 to 34 years of age. Measurements were made during controlled-frequency breathing (15 breaths per minute or 0. 25 Hz) with subjects in the supine and 40 degree head-up tilt positions. We characterized RR interval and arterial pressure variabilities in low-frequency (0. 05 to 0. 15 Hz) and respiratory-frequency (0. 20 to 0. 30 Hz) ranges with fast Fourier transform power spectra and used cross-spectral analysis to determine the phase relation between the two signals. As expected, cardiac pacing eliminated beat-to-beat RR interval variability. Against expectations, however, cardiac pacing in the supine position significantly reduced arterial pressure oscillations in the respiratory frequency (systolic, 6. 8 +/- 1. 8 to 2. 9 +/- 0. 6 mm Hg 2 /Hz, P=. 017). In contrast, cardiac pacing in the 40 degree tilt position increased arterial pressure variability (systolic, 8. 0 +/- 1. 8 to 10. 8 +/- 2. 6, P=. 027). Cross-spectral analysis showed that 40 degree tilt shifted the phase relation between systolic pressure and RR interval at the respiratory frequency from positive to negative (9 +/- 7 degrees versus - 17 +/- 11 degrees, P=. 04); that is, in the supine position, RR interval changes appeared to lead arterial pressure changes, and in the upright position, RR interval changes appeared to follow arterial pressure changes. CONCLUSIONS: These results demonstrate that respiratory sinus arrhythmia can actually contribute to respiratory arterial pressure fluctuations. Therefore, respiratory sinus arrhythmia does not represent <b>simple</b> baroreflex <b>buffering</b> of arterial pressure...|$|R
40|$|Modern {{embedded}} systems for DSP applications {{are increasingly being}} implemented on heterogeneous processing architectures, consisting of multiple processors and programmable hardware such as FPGAs. The layered memory structure of FPGAs provides an open platform for memory organisation which many algorithms can benefit from. To efficiently target these platforms, high level design tools are being developed to target these architectures; often for DSP applications, these tools have been based around process networks, and as such, their memory architectures typically closely match the <b>simple</b> FIFO <b>buffering</b> employed by these models. This is not always ideal in a hardware implementation, where off-chip memory accesses may be required, particularly when there is data reuse inherent to the algorithm. This thesis proposes a formalised methodology to synthesise efficient memory architectures for FPGA-based DSP systems from a high level dataflow model. This includes reducing the memory requirements of the system through transformations, model refinements and by including the hardware characteristics into the dataflow analysis: Standard dataflow transformations have been characterised so that their effects on the memory subsystem are apparent and these transformations have been placed appropriately in a memory-centric design flow. The memory generation techniques for hardware cores on these FPGA platforms are also analysed, providing extensions which can reduce memory requirements through automatic sub-scheduling using a range of MoCs. These techniques effectively target the distributed nature of FPGA memories to introduce memory hierarchies into the implementations, targeting any data reuse inherent to the application which {{can take advantage of}} the memory architecture. This layered memory approach is used to reduce the number of accesses reqUired to large memories, which in turn can increase performance and reduce power consumption. For a motion estimation algorithm the reqUired bandwidth for off-chip memory accesses can vary by a factor of a thousand between two DFGs. For a 2 -D convolution algorithm, the total reqUired memory is reduced by half though refinement of the system level model. This methodology has been demonstrated in the design of a video encoder and template matching algorithm and used to efficiently implement the memory sub-systems. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|R
40|$|Network-based {{intrusions}} {{have become}} {{a serious threat to}} the users of the In-ternet. To help cover their tracks, attackers launch attacks from a series of previously compromised systems called stepping stones. Timing correlations on incoming and outgoing packets can lead to detection of the stepping stone and can be used to trace the attacker through each link. Prior work has sought to counter the possibility of the attacker employing chaff packets and randomized delays. To date, however, researchers have not accounted for the full range of techniques that a sophisticated attacker could apply. In this work, we show that such an attacker could avoid detection by the best known stepping stone detection methods. We propose a <b>simple</b> <b>buffering</b> technique that could be used by an attacker on a stepping stone to evade detection. This technique makes the timing of packets in the output flow of the stepping stone entirely independent of the timing of packets from the input flow, thereby eliminating the timing link that makes existing stepping stone detection methods possible. To accomplish this, we only require buffering at the stepping stone and enough chaff packets to generate a constant rate flow. This traffic has the characteristics of a multimedia stream, such as Voice over IP (VoIP), which is quite common on the Internet to...|$|E
40|$|Network-based {{intrusions}} {{have become}} a serious treat to the users of the Internet. To help cover their tracks, attackers launch attacks {{from a series of}} previously compromised systems called stepping stones. Timing correlations on incoming and outgoing packets can lead to detection of the stepping stone and can be used to trace the attacker through each link. Existing approaches, however, deliberately ignore the fact that an attacker can add chaff packets to a traffic stream. An attacker that has complete control over the stepping stone node can install rogue applications that use chaff and introduce delays to make the incoming and outgoing streams have very different traffic characteristics. In this work, we show that such an attacker could avoid detection by the best stepping stone detection methods. We propose a <b>simple</b> <b>buffering</b> technique that could be used by an attacker on a stepping stone to evade detection. In our technique, packets are buffered, selectively dropped, and chaff packets are added to generate constant rate traffic. This traffic has the characteristics of a multimedia stream, such as voice over IP (VoIP), which is quite common on the Internet today. To test the effectiveness of our technique, we simulate both the traffic and detection using a watermark-based timing analysis algorithm. We show that our buffering technique can successfully evade detection with latencies that are reasonable for interactive streams. ...|$|E
40|$|In {{addition}} to their well-known functions in cellular energy transduction, mitochondria {{play an important role}} in modulating the amplitude and time course of intracellular Ca 2 + signals. In many cells, mitochondria act as Ca 2 + buffers by taking up and releasing Ca 2 +, but this <b>simple</b> <b>buffering</b> action by itself often cannot explain the organelle's effects on Ca 2 + signaling dynamics. Here we describe the functional interaction of mitochondria with store-operated Ca 2 + channels in T lymphocytes as a mechanism of mitochondrial Ca 2 + signaling. In Jurkat T cells with functional mitochondria, prolonged depletion of Ca 2 + stores causes sustained activation of the store-operated Ca 2 + current, ICRAC (CRAC, Ca 2 + release-activated Ca 2 +). Inhibition of mitochondrial Ca 2 + uptake by compounds that dissipate the intramitochondrial potential unmasks Ca 2 +-dependent inactivation of ICRAC. Thus, functional mitochondria are required to maintain CRAC-channel activity, most likely by preventing local Ca 2 + accumulation near sites that govern channel inactivation. In cells stimulated through the T-cell antigen receptor, acute blockade of mitochondrial Ca 2 + uptake inhibits the nuclear translocation of the transcription factor NFAT in parallel with CRAC channel activity and [Ca 2 +]i elevation, indicating a functional link between mitochondrial regulation of ICRAC and T-cell activation. These results demonstrate a role for mitochondria in controlling Ca 2 + channel activity and signal transmission from the plasma membrane to the nucleus...|$|E
40|$|The {{positioning}} of the capillary relative to the electrode in the electrolyte vial and buffering of the background electrolyte (BGE) in capillary zone electrophoresis {{have been found to}} have a crucial influence on the magnitude of pH changes of the BGE in the separation capillary. On-capillary measurement of the pH changes was accomplished by adding a suitable pH indicator dye to the BGE and employing absorbance detection in the visible region. This method has been demonstrated using xylenol blue in a chromate BGE commonly used for anion analysis (pH 8. 0) and bromocresol green in an acetate BGE (pH 4. 8). Using the chromate BGE, high pH changes of more than 2. 5 pH units were observed when the capillary end was positioned close to the electrode surface in the inlet electrolyte vial, but changes of less than ± 0. 3 pH unit resulted if the capillary end was displaced at least 1 mm laterally from the electrode and/or at least 1 mm vertically below the electrode end. These effects were explained by direct observations of pH changes around a platinum electrode placed in a photometric cell serving as a BGE reservoir. These observations showed a zone of altered pH being generated close to the electrode and spreading over time through the surrounding BGE by thermal convection. Further, a <b>simple</b> way of <b>buffering</b> the chromate electrolyte with a suitable cation (Tris) is presented, with the buffered electrolyte showing pH fluctuations in the capillary of less than ± 0. 2 pH unit. Practical implications of these findings on the practice of capillary zone electrophoresis are discussed...|$|R
40|$|The {{increase}} in the number of cores that can be integrated on a single chip has forced the designer to use computer network concepts for design of System on Chip (SoC). This idea led to development of Network on Chip (NoC) to deal with more cores on a single chip. NoC has three main parts, namely routers, link and network interface through which cores are connected to NoC. Router is one of the most important parts because cores communicate with other cores through routers. One of the important tasks for a NoC designer is to design router with low latency. Router design depends on the routing protocol and routing algorithm used. Two kinds of routing algorithms are source routing and distributed routing. In source routing, complete route information is available in Head flit while in distributed routing, routing decisions are taken inside every router on the path. Source routing has speed advantage over distributed routing because the packet itself contains the routing information. But source routing leads to overhead to store complete path information in the header of each packet. To overcome this flaw, junction based source routing has been introduced. If destination is far away from the source then first packet will go to a junction and get the new path information from the junction to the destination. Thus we need to store the path information only for a few hops in the packet header. This idea has been taken from the daily experience of train journey. In this thesis we have developed design of a router for junction based source routing. Main component of <b>simple</b> router includes <b>buffering,</b> header modification and making route decision. Router includes a table called Path Table which stores information about paths from junction to various destinations. JB router also includes, picking up the new path information from Path Table and modify the header by adding new path information. We have developed VHDL designs of two versions of the routers for Junction Based Routing. The delay performance of routers have been analysed through simulation. A simple prototype of the router has also been implemented in Altera FPGA to find out the resource requirements of the new router designs...|$|R
40|$|With VLSI(very {{large scale}} integration) {{technology}} shrinking and frequency increasing, the minimum feature size {{is smaller than}} sub-wavelength lithography wavelength, and the manufacturing cost is significantly increasing {{in order to achieve}} a good yield. Consequently design companies need to further lower power consumption. All these factors bring new challenges; simulation and modeling need to handle more design constraints, and need to work with modern manufacturing processes. In this dissertation, algorithms and new methodology are presented for these problems: (1) fast and accurate capacitance extraction, (2) capacitance extraction considering lithography effect, (3) BEOL(back end of line) impact on SRAM(static random access memory) performance and yield, and (4) new physical synthesis optimization flow is used to shed area and reduce the power consumption. Interconnect parasitic extraction {{plays an important role in}} simulation, verification, optimization. A fast and accurate parasitic extraction algorithm is always important for a current design automation tool. In this dissertation, we propose a new algorithm named HybCap to efficiently handle multiple planar, conformal or embedded dielectric media. From experimental results, the new method is significantly faster than the previous one, 77 X speedup, and has a 99 % memory savings compared with FastCap and 2 X speedup, and has an 80 % memory savings compared with PHiCap for complex dielectric media. In order to consider lithography effect in the existing LPE(Layout Parasitic Extraction) flow, a modified LPE flow and fast algorithms for interconnect parasitic extraction are proposed in this dissertation. Our methodology is efficient, compatible with the existing design flow and has high accuracy. With the new enhanced parasitic extraction flow, simulation of BEOL effect on SRAM performance becomes possible. A SRAM simulation model with internal cell interconnect RC parasitics is proposed in order to study the BEOL lithography impact. The impact of BEOL variations on memory designs are systematically evaluated in this dissertation. The results show the power estimation with our SRAM model is more accurate. Finally, a new optimization flow to shed area blow in the design synthesis flow is proposed, which is one level beyond simulation and modeling to directly optimize design, but is also built upon accurate simulations and modeling. Two <b>simple,</b> yet efficient, <b>buffering</b> and gate sizing techniques are presented. On 20 industrial designs in 45 nm and 65 nm, our new work achieves 12. 5 % logic area growth reduction, 5. 8 % total area reduction, 10 % wirelength reduction and 770 ps worst slack improvement on average...|$|R
40|$|This paper elaborates on {{seamless}} handover {{support for}} wireless IP multicast networks {{with the use}} of a novel mobility management mechanism. The latter enables mobile nodes with active multicast sessions to execute seamless remote subscriptions while changing their network attachment point and is formulated by extending the unicast ""Fast Handovers for Mobile IPv 6 "" protocol (FMIPv 6). The proposed scheme minimizes service disruption due to handover, by using conditional tunneling of multicast traffic on a per flow (rather than per mobile node) basis. Moreover, a <b>simple</b> <b>buffering</b> technique is proposed, enabling the temporary storage of the tunneled before the handover packets thus eliminating packet loss occurring during the link layer handover period. Also, multicast traffic recipients experience reduced handover latency due to the timely configuration of the network routers providing the multicast service. The performance of the proposed mechanism is evaluated by OPNET simulation results, for realistic IEEE 802. 11 WLAN indoor simulation scenarios, incorporating spatially correlated shadowing for the propagation environment and random mobility of users. Performance results are provided in terms of service disruption time perceived by video streaming recipients as well as tunneling and buffering overhead for handover support, while varying the FMIPv 6 protocol triggering configuration, the inter-domain distance and the access router buffering capacity. The performance evaluation reveals a significant reduction in the handover packet loss level when compared to similar multicast mobility schemes, causing a slight increase of resource consumption for tunneling and buffering purposes. © 2006 Elsevier B. V. All rights reserved...|$|E
30|$|Utility {{lines in}} GIS are {{typically}} modeled as straight line segments that connect two end points. In 2 D, {{the uncertainty of}} a straight line can be captured as an uncertainty epsilon band that encloses the “true” location of the utility centerline (Mozas and Ariza 2011). This concept was initially proposed by Perkal (Perkal 1956) who used an epsilon band, the 2 D space enclosed by two parallel lines that are also tangents to circular errors at the ending points as the probability range for a line. The epsilon band has been discussed frequently in the literature (Blakemore 1984;Aspinall and Pearson 1995) and has been implemented in 2 D GIS in various algorithms {{in the form of}} a tolerance (Goodchild and Hunter 1997). Caspary and Sheuring (Caspary and Scheuring 1993) and Shi and Liu (Shi and Liu 2000) suggested that intermediate points on a line have smaller errors than the end points and thus, the error band will be “slim” in the middle, leading to a genetic band, or a G-band. Probabilities can be determined for G-bands with various sizes to model the uncertainty in lines (Heuvelink et al. 2007;Wu and Liu 2008). Goodchild and Hunter (Goodchild and Hunter 1997) pointed out that epsilon was often interpreted in a deterministic sense as the minimum buffer width that enclosed the true location of the objects under testing/assessing and was very sensitive to outliers. They proposed a <b>simple</b> <b>buffering</b> approach to evaluate the positional accuracy of linear objects by simultaneously referring to the buffer width and the percentage of lines within this buffer (Goodchild and Hunter 1997). The main limitations of current error modeling for linear objects are (1) being 2 D, (2) being deterministic (e.g. the epsilon band is determined to enclose the true location and given the existence of outliers, the band width is unreasonably large), and (3) the lack of a method to estimate the most probable location of linear objects given their recorded location and associated positional uncertainty, the reverse procedure of accuracy assessment.|$|E
40|$|In {{the present}} work, pI-separation of {{proteins}} by pH-gradient ion-exchange chromatography (IEC) on packed capillary columns is demonstrated. An important technical challenge for adapting this technique to capillary dimensions, i. e. {{the development of}} a miniaturized flow-through pH probe for reliable pH monitoring of the column effluent, was solved by designing a low ÝL/min flow rate housing to a commercially available micro pH probe. Highly linear outlet pH gradients within the pH range 8. 5 to 4. 0 were obtained when applying <b>simple</b> <b>buffering</b> species consisting solely of piperazine, N-methylpiperazine and imidazole on 0. 32 mm ID x 10 cm fused silica capillaries packed with anion-exchange polystyrene divinylbenzene (PS-DVB) -based macroporous materials, i. e. 10 Ým Mono P and 10 Ým PL-SAX. When using a pH gradient from pH 6. 8 to 4. 0, both columns were able to baseline separate the A and B genetic variants of £]-lactoglobulin, which differ with two amino acid residues only. However, the PL-SAX column provided almost a two-fold decrease in peak width compared to the Mono P column. The influence of varying the buffer concentration, injection volume and column temperature on peak widths and resolution of £]-lactoglobulins was investigated, e. g., a 100 ÝL sample of dilute £]-lactoglobulins was injected directly on the column with practically no increase in peak width as compared to what obtained with conventional injection volumes. In addition, slightly better resolution was obtained with 10 mM buffers than with the other concentrations, and the narrowest peaks and best resolution were obtained between 30 and 50 oC. Furthermore, a pH gradient, which was set to decrease from the pH of the start buffer (i. e. 10 mM piperazine and N-methylpiperazine, pH = 6. 8) to the pH of the eluting buffer (i. e. 10 mM piperazine and N-methylpiperazine, pH = 4. 3) in 25 min, was used to fractionate proteins in skimmed bovine milk on the PL-SAX column. The milk was simply diluted 1 : 10 (v/v) with water and filtrated before injection (5 ÝL), and the within-day repeatability (n = 6) of the retention time, peak width and peak area ranged from 0. 3 - 3. 0 %, 3. 1 - 6. 9 %, and 4. 0 - 11. 5 %, respectively. Finally, heart-cut 2 D separation was performed, where bovine milk pI-fractions from the pH-gradient IEC column (first dimension) were injected on-line to a C 8 reversed phase column (second dimension) where further separation according to hydrophobicity was achieved...|$|E

