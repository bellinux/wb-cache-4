1|10000|Public
5000|$|The Open Hardware and Design Alliance has rewritten {{the four}} freedoms of free <b>software</b> <b>as</b> <b>follows</b> to match them to {{hardware}} resp. hardware documentation: ...|$|E
50|$|Some {{commercial}} OMR <b>software</b> {{products are}} <b>as</b> <b>follows.</b>|$|R
30|$|Following {{this line}} of reasoning, we can {{elaborate}} our vision (chapter Vision of future <b>software</b> organizations) consequently <b>as</b> <b>follows.</b> This puts our stated needs for future software organization capabilities into a larger context, thereby rationalizing them further.|$|R
50|$|The v1.1 {{first stage}} has a total sea-level thrust at liftoff of 5885 kN, with the nine engines burning for a nominal 180 seconds, while stage thrust rises to 6672 kN as the booster {{climbs out of}} the atmosphere. The engines have been {{upgraded}} to the more powerful Merlin 1D. These improvements increased the payload capability from 9000 kg to 13150 kg. The stage separation system has been redesigned and reduces the number of attachment points from twelve to three, and the vehicle has upgraded avionics and <b>software</b> <b>as</b> well. <b>Following</b> the September 2013 launch, the second stage igniter propellant lines were insulated to better support in-space restart following long coast phases for orbital trajectory maneuvers.|$|R
50|$|In mid-1985, three Pacific Northwest photogrammetric firms {{combined}} {{resources to}} create DAT/EM Systems International based in Anchorage, Alaska. By {{the spring of}} 1987, DAT/EM Systems International had produced its first viable digital mapping product. The first product allowed AutoCAD software to accept 3D coordinate data input from an analog stereoplotter. A similar interface to MicroStation CAD <b>software</b> <b>followed,</b> <b>as</b> well as support for analytical stereoplotters.|$|R
40|$|This paper {{presents}} a formal method for generating conformance tests for real-time systems. Our algorithm is complete in that, under a test hypothesis, {{if the system}} being tested passes every test generated then the tested system is bisimilar to its specification. Because the test algorithm has exponential worst case complexity and finite state automata models of real-time systems are typically very large, a judicious choice of model is critical for the successful testing of real-time systems. Developing such a model and demonstrating its effectiveness are the main contributions of this paper. Keywords: real-time systems, black-box testing, timed automata 1 Introduction An idealistic description of a formal development method from requirements to an implementation in hardware and <b>software</b> runs <b>as</b> <b>follows.</b> Construct successive refinements of the requirements until a detailed design is produced, verifying formally at each stage that the refinement satisfies the requirements imposed b [...] ...|$|R
30|$|For 3 DP, {{a form of}} {{addictive}} manufacturing for pre-production or production, it {{is necessary}} to first create 3 D objects in a virtual space with 3 D modeling software, which will produce a printable file to create a layer design. Diverse 3 D modeling software is available in the market and the followings are common ones used for fashion-related product designs: MAYA, Rhinoceros (Rhino), AutoCAD, Sketchup, Zbrush, and 3 Ds MAX. In order to create 3 D wearable fashion products using 3 DP, it is crucial for product designers and developers to be familiar with {{at least one of these}} 3 D modeling programs. Characteristics of these widely using 3 D modeling <b>software</b> are presented <b>as</b> <b>follows.</b>|$|R
50|$|Although it is {{possible}} to generate web graphics using other DVI backends such <b>as</b> dvips <b>followed</b> by a PostScript-to-image converter like ImageMagick, using dvipng requires fewer programs to be run. Dvipng is used as the default rendering method for MediaWiki <b>software,</b> <b>as</b> of version 1.8.0. It is also included in the TeXLive distribution and several Linux distributions.|$|R
40|$|In cloud {{computing}} environments, {{one of the}} most important barriers to the adoption of <b>software</b> <b>as</b> a service systems is interoperability. Generally, in {{cloud computing}} environments at <b>software</b> <b>as</b> a service level, interoperability refers to the ability of <b>software</b> <b>as</b> a service systems on one cloud provider to communicate with <b>software</b> <b>as</b> a service systems on another cloud provider. The current <b>software</b> <b>as</b> a service systems in cloud computing environments have not been built with interoperability as a primary concern. <b>Software</b> <b>as</b> a service systems in cloud computing environments are poorly developed to meet the interoperability challenges. A common tactic for enabling interoperability is the use of an interoperability framework or model. During the past few years, at <b>software</b> <b>as</b> a service level, various interoperability frameworks and models have been developed to provide interoperability between systems. The syntactic interoperability of <b>software</b> <b>as</b> a service systems have already been intensively researched. However, not enough consideration has been given to semantic interoperability issues. Both syntactic and semantic interoperability are necessary prerequisites to achieve interoperability. Achieving semantic interoperability is a challenge within the world of <b>software</b> <b>as</b> a service in cloud computing environments. Therefore, a semantic interoperability framework for <b>software</b> <b>as</b> a service systems in cloud computing environments is needed. In this thesis, we develop a semantic interoperability framework for <b>software</b> <b>as</b> a service systems in cloud computing environments. For this purpose, we illustrate how current technologies, such as service oriented architecture, can represent an adequate foundation for implementing such framework. The capabilities and value of service oriented architecture for semantic interoperability between <b>software</b> <b>as</b> a service systems in cloud computing environments will be studied and demonstrated. iv In order to evaluate the effectiveness of the proposed semantic interoperability framework for <b>software</b> <b>as</b> a service systems in cloud computing environments, extensive experimentation and statistical analysis have been performed. Overall, the effectiveness of semantic interoperability of <b>software</b> <b>as</b> a service systems in cloud computing environments with the proposed framework shows a significant improvement in comparison with the existing models and frameworks...|$|R
40|$|Abstract. With {{the rapid}} {{development}} of electronic components manufacturing {{technology and the}} application of reliability technology, the hardware reliability of the CNC system and servo drive system has been greatly improved. Currently, the performance and functionality of CNC system, which achieved gradually by the software instead of hardware, is becoming increasingly complex. However, very few researches on the reliability of CNC system software was presented. In this paper, the basic conceptions and important of CNC software reliability were discussed, and comparative analysis on the research status at domestic and abroad were studied from the view of theoretical research and engineering practice. Meanwhile, the paper collected field failure data on 30 CNC systems in six months, and reliability analysis was made based on the data. 1 the Definition and the Importance of CNC Software Reliability 1. 1 The Definition of Software Reliability In 1983 ，IEEE Computer Society made a clear definition of software reliability, which was accepted as national standard by National Institute of Standards and Technology (NIST) in the United States later. Then in 1989, China also accepted the definition as national standard. According to GB/T 11457 - 95 -Software Engineering Terms, the definition of <b>software</b> reliability is <b>as</b> <b>follow...</b>|$|R
40|$|Gene-expression {{experiments}} We {{used two}} approaches {{to quantify the}} expression levels of genes located near two SNPs shown to associate with variation in monocyte counts previously (rs 7023923, Ferreira et al. 2009) or {{in the present study}} (rs 6740847). The first approach quantified genome-wide RNA expression levels using Illumina expression arrays. Briefly, whole blood was collected directly into a PAXgeneTM tube (QIAGEN) for each twin of 48 pairs of monozygotic (MZ) twins (26 female and 22 male pairs, mean age 14) ascertained from the general population (Aitken et al. 1996; McGregor et al. 1999). Total RNA was extracted using the PBMC gene RNA purification kit, converted to cDNA, amplified and purified. Expression profiles were then generated by hybridising 750 ng of cDNA to Illumina HumanHT- 12 v 3. 0 Beadchip according to the Illumina assay guide. Relative expression values were generated for each transcript using Illumina Genome Studio <b>software</b> and standardised <b>as</b> <b>follows.</b> First, background noise detected from negative control beads was subtracted from raw expression values for each transcript. Data were then filtered for transcripts which were present across 100 % of samples at p < 0. 05 according to the global-error threshold calculated by Genome Studio’s cross-gene error model. Adjuste...|$|R
40|$|Since the {{popularity}} of models and related tools {{for the development of}} software has become more mature, the applications of approaches from the modelling community has begun to be used on models of physical objects, such as buildings, machines and biological systems. This has revealed to software tool researchers that modelling and model manipulation from physical world perspectives has been applied a lot longer in many of these domains than in <b>software.</b> However, <b>as</b> <b>software</b> modelling <b>follows</b> software trends, software modellers and tool builders have been {{able to take advantage of}} new developments such as the open source movement, and agile software methodologies. This has increasingly drawn architects, engineers, biologists and others concerned with physical systems to the software modelling community. This workshop aimed to meet two complimentary goals: providing a focus on physical modelling and its use of software engineering approaches; and attempting to learn lessons in the software community from the longer established disciplines of modelling real world objects and systems which often requires more rigour and narrower margins for failure than software typically achieves. We also hoped that some islands in the IT community may be bridged through the example of bridges between models used in physical disciplines and software models...|$|R
30|$|SaaS (<b>software</b> <b>as</b> {{a service}}): <b>Software</b> <b>as</b> a service {{is the most}} {{commonly}} used cloud service, where clients use open or proprietary cloud- based <b>software,</b> such <b>as</b> cloud based anti-virus and word processing software.|$|R
5000|$|<b>Software</b> <b>as</b> a Service {{essentially}} {{extends the}} idea of the ASP model. The term <b>Software</b> <b>as</b> a Service (SaaS), however, is commonly used in more specific settings: ...|$|R
40|$|Software is a {{good with}} very special {{economic}} characteristics. Taking a general definition of <b>software</b> <b>as</b> its starting-point, this article Â  systematically elaborates the central qualities of the commodity which have implications for its production and cost structure, the demand, the contestability of software-markets, and the allocative efficiency. In this context {{it appears to be}} reasonable to subsume the various characteristics under the following generic terms: <b>software</b> <b>as</b> a means of data-processing, <b>software</b> <b>as</b> a system of commands or instructions, <b>software</b> <b>as</b> a recombinant system, <b>software</b> <b>as</b> a good which can only be used in discrete units, <b>software</b> <b>as</b> a complex system, and <b>software</b> <b>as</b> an intangible good. Evidently, software is characterized by a considerable number of economically relevant qualitiesâ€”ranging from network effects to a subadditive cost function to nonrivalry. Particularly to emphasise is the fact that software fundamentally differs from other information goods: First, from a consumer’s perspective the readability and other aspects concerning how the information is presented, is irrelevant. Second, the average consumer/user is interested only in the funtionality of the algorithms but not in the underlying information. digital goods, compatibility, information good, network effects, nonrivalry, open source, recombinability, software...|$|R
5000|$|The company's {{business}} process automation products are delivered <b>as</b> <b>software</b> solutions and <b>as</b> hosted <b>software</b> <b>as</b> a service (SaaS) solutions. Products include: ...|$|R
40|$|RefactorIT is a {{trademark}} of Aqris <b>Software</b> <b>AS.</b> • All other products mentioned are registered trademarks {{of their respective}} owners. • Aqris <b>Software</b> <b>AS</b> endeavors {{to ensure that the}} information contained in this manual is accurate and correct. Although Aqris <b>Software</b> <b>AS</b> does not accept liability for errors and/or omissions, we do appreciate constructive criticism as to how this document/product can be improved. Please send any corrections and/or suggestions to us a...|$|R
50|$|<b>Software</b> <b>as</b> a Service - Also known <b>as</b> <b>{{software}}</b> on demand, telkomtelstra hosts subscription-based software services.|$|R
50|$|Shifting to a <b>software</b> <b>as</b> {{a service}} model, Adobe {{announced}} more frequent feature updates to its products and the eschewing {{of their traditional}} release cycles. Customers must pay a monthly subscription fee and if they stop paying, they will lose access to the <b>software</b> <b>as</b> {{well as to the}} work they saved in proprietary file formats.|$|R
50|$|From inception, Odoo S.A / OpenERP S.A have {{released}} <b>software</b> <b>as</b> Open Source but {{starting with the}} V9.0 release, the company has transitioned to an open core model which provides subscription-based proprietary Enterprise software and cloud-hosted <b>Software</b> <b>as</b> a service, and a cut-down community version.|$|R
50|$|Exchange Server is {{licensed}} both in {{the forms}} of on-premises <b>software</b> and <b>software</b> <b>as</b> a service. In the on-premises form, customer purchase client access licenses (CALs). In the <b>software</b> <b>as</b> a service form, Microsoft receives a monthly service fee instead (see Microsoft Office 365).|$|R
5000|$|Specialized Geoscience Applications <b>Software</b> <b>as</b> {{processing}} modules.|$|R
40|$|In {{the paper}} {{assumptions}} of free {{open source software}} existence, development, financing and competition models are presented. The free <b>software</b> <b>as</b> a social phenomenon and the open source <b>software</b> <b>as</b> the technological and managerial innovation environment are revealed. The social and business interaction processes are analyzed. Article in Lithuanian</p...|$|R
50|$|Microsoft Office is {{licensed}} through retail, volume {{licensing and}} <b>software</b> <b>as</b> a service channels. Volume licensing includes OEM licenses for bundling Microsoft Office with personal computers and Microsoft Software Assurance. The <b>software</b> <b>as</b> a service channel is called Microsoft Office 365 which was started on 28 June 2011.|$|R
50|$|Under Di Marco’s {{leadership}} TechnologyOne {{has built}} a global software platform having expanded into New Zealand, Asia, South Pacific and the United Kingdom. TechnologyOne is now developing {{one of the largest}} <b>Software</b> <b>as</b> a Service (SaaS) platforms in the Australasian region, delivering large scale enterprise <b>software</b> <b>as</b> a service.|$|R
40|$|As cloud {{computing}} becomes increasingly popular among enterprises, organizations and developers, {{it is time}} to consider how <b>Software</b> <b>as</b> a Service solutions can be built rapidly and cost effectively. This paper presents the possibility of using a service-based architecture operating {{within the framework of the}} public {{cloud computing}} model and implementing <b>Software</b> <b>as</b> a Service. It also describes the architecture, implementation and testing of sample applications. The conclusions drawn with respect to related work and the results obtained shed more light on the application of public cloud systems for <b>Software</b> <b>as</b> a Service purposes...|$|R
5000|$|GetThere's on-demand <b>software</b> <b>as</b> {{a service}} (SaaS) {{solutions}} include: ...|$|R
5000|$|Concur's on-demand <b>software</b> <b>as</b> {{a service}} (SaaS) offerings include: ...|$|R
5000|$|... #Subtitle level 3: Free and {{open-source}} <b>software</b> <b>as</b> successor ...|$|R
50|$|CYBONET, {{formerly}} PineApp, is {{a privately}} held IT security company that provides email security, email archiving and web filtering (content control software) for organizations and enterprises. The products are provided <b>as</b> appliances or <b>software,</b> <b>as</b> well <b>as</b> <b>software</b> <b>as</b> a service and cloud service platforms. The company’s mail relay security includes protection from malware including viruses, Trojans, and spyware, along with anti-spam and anti-phishing.|$|R
50|$|CA Inc. has {{classified}} this as {{denial of}} service <b>software,</b> <b>as</b> well <b>as</b> flooder <b>software,</b> {{a specific type of}} {{denial of service}} attack.|$|R
50|$|Bēhance {{produced}} Life Designed <b>software</b> <b>as</b> part of Twingo launch.|$|R
5000|$|... 2000 - Sing Sweet <b>Software</b> (<b>as</b> Trurl and Klaupacious) (Supremat) ...|$|R
5000|$|Iteratively {{produces}} production <b>software,</b> <b>as</b> {{opposed to}} a throwaway prototype.|$|R
5000|$|Some major vendors offer PostgreSQL <b>as</b> <b>software</b> <b>as</b> a service: ...|$|R
50|$|Hiperos LLC was an American <b>software</b> <b>as</b> {{a service}} {{technology}} company.|$|R
