0|10000|Public
30|$|NFP {{computation}} time/delay: This is {{the time}} taken by the heuristic NFP algorithm at the <b>SDN</b> <b>controller</b> <b>to</b> find the optimal allocation for the given request on the chosen path.|$|R
30|$|Path {{computation}} time/delay: This is {{the time}} taken by the hybrid Dijkstra’s algorithm at the <b>SDN</b> <b>controller</b> <b>to</b> find the candidate paths and choose one out of them for a given request.|$|R
30|$|In particular, the {{proposed}} model {{is based on}} distributed and different MANET and FiWi <b>SDN</b> <b>controllers.</b> The former appropriately reroutes packets among mobile nodes by considering the current MANET state, application requirements, and the access network load advertised by the FiWi <b>SDN</b> <b>controller.</b> The latter detects eventually overloaded cellular base stations (BSs) and reroutes traffic towards less loaded ones, by also informing the MANET <b>SDN</b> <b>controller</b> <b>to</b> appropriately manage the MANET data plane to dispatch packets to the destination mobile node.|$|R
40|$|International audienceFor {{management}} and security purposes, cloud providers {{should know the}} connectivity graph between virtual machines. Since traditional methods used in physical networks produce incomplete results and are hardly usable in the Cloud, we propose to use information provided by a Cloud Management Software and an <b>SDN</b> <b>controller,</b> <b>to</b> compute the connectivity graph in those environments. Our approach shows an exact, complete and up-to-date connectivity graphs computation on a representative infrastructure, in reasonable time...|$|R
30|$|Federated domains: {{multiple}} {{actors are}} in charge of managing heterogeneous domains with different loosely integrated <b>SDN</b> <b>controllers</b> interacting <b>to</b> optimize the end-to-end QoS. For instance, telco operators, service providers, and users manage datacenters, access networks, MANETs/VANETs respectively with different <b>SDN</b> <b>controllers</b> interacting in a peer-to-peer fashion.|$|R
40|$|While SDN {{promises}} fine-grained, {{dynamic control}} of the network, in practice limited switch TCAM rule space restricts most forward-ing to be coarse-grained. As an alternative, we demonstrate that using destination MAC addresses as opaque forwarding labels al-lows an <b>SDN</b> <b>controller</b> <b>to</b> leverage large MAC (L 2) forwarding tables to manage a plethora of fine-grained paths. In this shadow MAC model, the <b>SDN</b> <b>controller</b> can install MAC rewrite rules at the network edge to guide traffic on to intelligently selected paths to balance traffic, avoid failed links, or route flows through mid-dleboxes. Further, by decoupling the network edge from the core, we address many other problems with SDN, including consistent network updates, fast rerouting, and multipathing with end-to-end control...|$|R
30|$|The global {{visibility}} and runtime programmability enabled by SDN technologies introduce unprecedented capabilities to guard {{a communication network}} adequately against cyber incidents. More specifically, the global visibility boosts the efficiency and effectiveness of network-wide traffic management, while the runtime programmability enables the <b>SDN</b> <b>controller</b> <b>to</b> adjust traffic management schedules on demand [52]. Besides, SDN technologies realize the per-flow micromanagement that is especially useful for checking the data integrity while ensuring the timeliness of data transmission. SDN technologies also make the implementation of security policies (i.e., access control, application whitelist) more convenient across the communication network.|$|R
30|$|Considering the {{adoption}} of SDN to improve the QoS of inter-datacenter traffic, some solutions adopt a centralized architecture with a unique controller. For instance, software-driven WAN (SWAN) [22] improves inter-datacenter network exploitation by centrally tuning when and how much traffic services generate and re-configuring the data plane in relation to actual traffic demand. Wu et al. [11] {{address the issue of}} managing bulk data transfers among geo-distributed datacenters hosted by a single cloud provider. To this purpose, they propose that a central <b>SDN</b> <b>controller</b> gathers information from distributed gateways to optimally schedule inter-datacenter transfers based on per-chunk routing choices. However, many solutions adopt multiple <b>SDN</b> <b>controllers</b> <b>to</b> manage inter-datacenter traffic, such as multiple datacenters with distributed <b>controllers.</b> <b>To</b> this purpose, Ahmed and Boutaba [12] present multiple possible architectures, e.g., with either horizontal or vertical multi-controller architecture and based on either in-band or out-of-band communication.|$|R
40|$|Segment Routing (SR) {{combines}} {{the simplicity of}} Link-State routing protocols with the flexibility of Multiprotocol Label Switching (MPLS). By decomposing forwarding paths into segments, identified by labels, SR improves Traffic Engineering (TE) and enables new solutions for the optimization of network resources utilization. This work proposes an Evolutionary Computation approach that enables Path Computation Element (PCE) or Software-defined Network (<b>SDN)</b> <b>controllers</b> <b>to</b> optimize label switching paths for congestion avoidance while using at the most three labels to configure each label switching path. This work has been supported by COMPETE: POCI- 01 - 0145 -FEDER- 007043 and FCT Fundac¸˜ao para a Ciˆencia e Tecnologia within the Project Scope: UID/CEC/ 00319 / 2013. info:eu-repo/semantics/publishedVersio...|$|R
50|$|The HP Virtual Cloud Networking (VCN) SDN Application is {{designed}} to provide virtual network overlays to the OpenStack technology open source cloud computing software, serving as a bridge between the HP Helion OpenStack cloud computing platform and the HP VAN <b>SDN</b> <b>controller.</b> According <b>to</b> published reports, the HP VCN SDN Application will help organizations transition from legacy networks to the cloud.|$|R
40|$|International audienceIn {{the context}} of NFV and agile service production, {{virtualization}} of resources and SFC {{play a key role}} in automating network services deployment. Designing NFV management and orchestration to provide dynamic SFC as a service is addressed by the proposed NFV orchestration framework. 1 The framework is designed to facilitate the development of NFV architecture components with a focus on SFC orchestration, placement algorithms, required monitoring, and network services stitching. The proposed framework can be used to compare placement algorithms as well as develop and evaluate other service function chaining solutions using a variety of <b>SDN</b> <b>controllers</b> <b>to</b> interact with heterogeneous underlying networking technologies. This article presents the SFC orchestration framework, an implementation, and a qualitative and quantitative evaluation of its components in an experimental environmen...|$|R
40|$|Network hypervisors {{provide the}} network {{virtualization}} layer for Software Defined Networking (SDN). They enable virtual network (VN) tenants <b>to</b> bring their <b>SDN</b> <b>controllers</b> <b>to</b> program their logical networks individually {{according to their}} demands. In order {{to make use of}} the high flexibility of virtual SDN networks and to provide high performance, the deployment of the virtualization layer needs to adapt to changing VN demands. This paper initializes the study of the optimization of dynamic SDN network virtualization layers. Based on the definition of reconfiguration events, we formalized mixed integer programs to analyze the multi-objective problem of adapting virtualization layers. Our initial simulation results demonstrate Pareto frontiers of conflicting objectives, namely control plane latency and hypervisor and control path reconfigurations. Comment: Accepted as poster on ACM CoNEXT Student Workshop 201...|$|R
30|$|A common {{strategy}} in current SDN setups is <b>to</b> place <b>controllers</b> {{at the core}} of the network, far from the edge where RANs are located. That is likely to lead to harmful delay of signaling traffic originating at the network edges. In addition, although <b>SDN</b> <b>controllers</b> are expected <b>to</b> handle ultra high speed data flows in wired networks [11], their placement at the network’s core is unlikely <b>to</b> allow centralized <b>SDN</b> <b>controllers</b> <b>to</b> scale with the extra control traffic coming from RANs. As such, an important design consideration of SDWN is that the SDWN <b>controller</b> needs <b>to</b> be positioned closer to the edge of the network. This entity adds scalability to the Control plane by directly handling wireless specific functions. Although the SDWN controller is a logically centralized entity, its implementation could be distributed across the edge of 5 G networks, which brings about the discussion on the definition of horizontal inter-controller APIs (e.g., Westbound and Eastbound) [12]. Therefore, SDWN controllers can still be distributed and also perform centralized logical functions, such as global topology mapping, neighbor wireless resource information retrieving, link discovery, and radio monitoring. It is also worth mentioning that some of the current SDWN proposals are distributed and present hierarchical organization of controllers that provides partial control centralization [10, 13]. Such distribution enable <b>controllers</b> <b>to</b> decrease management complexity keeping part of the centralization benefits [10]. There is also the possibility to pool resources, such as radio frequencies and processing power under the control of SDWN controllers in H-CRAN [9, 14].|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimited. Computer networks {{are constantly being}} actively probed in attempts to build topological maps of intermediate nodes and discover endpoints, either for academic research or nefarious schemes. While some networks employ recommended conventional countermea-sures to simply block such probing at the boundary or shunt such traffic to honey pot systems, other networks remain completely open either by design or neglect. Our research builds on previous work {{on the concept of}} presenting a deceptive network topology, which goes beyond conventional network security countermeasures of detecting and blocking network probe traffic. By employing the technologies from the emerging field of Software-Defined Networking and the OpenFlow protocol, we constructed a custom-built <b>SDN</b> <b>controller</b> <b>to</b> listen for network probes and craft customized deceptive replies to those probes. Through employment of various network probing utilities against our custom-built <b>SDN</b> <b>controller</b> in a test network environment, we are able to present a believable deceptive representation of the network topology to an adversary. Therefore, this work demonstrates that the primitives of the expand-ing OpenFlow protocol show strong potential for constructing an enterprise-grade dynamic deceptive network topology solution to protect computer networks. US Navy (USN) autho...|$|R
40|$|Abstract — Many have {{recognized}} the need to restructure the current internetwork into a much more dynamic networking environment. It is difficult for today’s inflexible infrastructure to cope with the fast changing demands of the users. As a result, Software-Defined Network (SDN) was introduced around 2005 to transform today’s network to have centralized management, rapid innovation, and programmability by decoupling the control and data planes. This study focuses on developing a firewall application that runs over an OpenFlow-based <b>SDN</b> <b>controller</b> <b>to</b> show that most of the firewall functionalities are able to be built on software, without the aid of a dedicated hardware. Among many OpenFlow controllers that already exist for the public, we have chosen POX written in Python for the experiment; and to create the SDN network topology, we have used VirtualBox and Mininet. In this study, we cover the implementation detail of our firewall application, as well as the experimentation result...|$|R
40|$|International audienceSoftware Defined Networking (SDN) has {{attracted}} tremendous {{interest in the}} telecommunication industry due to its ability to abstract, manage and dynamically re-configure end-to-end networks from a centralized <b>controller.</b> Though <b>SDN</b> {{is considered to be}} a suitable candidate for various use cases in mobile networks, none of the work so far has discussed its advantages and actual realization for Train-to-Wayside Communication System (TWC). In this paper, for the first time, the architecture and use cases of SDN controlled mobile backhauling framework for TWC is proposed. We discuss how our proposed architecture can efficiently handle mobility management and also provide dynamic quality-of-service (QoS) for different services on board. As a first step, a software prototype is developed using industrial standard OpenDayLight <b>SDN</b> <b>controller</b> <b>to</b> have our architecture evaluated. Since the automotive sector is being considered to be an important driver for 5 G network, our SDN based mobile backhauling solution can be positioned in 5 G where SDN plays an important role...|$|R
40|$|Network {{virtualization}} {{allows for}} an abstraction between user and physical resources by letting a given physical infrastructure {{to be shared}} by multiple service providers. However, network virtualization presents some challenges, such as, efficient resource management, fast provisioning and scalability. By separating a network’s control logic from the underlying routers and switches, software defined networking (SDN) promises an unprecedented simplification in network programmability, management and innovation by service providers, and hence, its control model presents itself as a candidate solution to the challenges in network virtualization. In this paper, we use the SDN control plane to efficiently manage resources in virtualized networks by dynamically adjusting the virtual network (VN) to substrate network (SN) mappings based on network status. We extend an <b>SDN</b> <b>controller</b> <b>to</b> monitor the resource utilisation of VNs, {{as well as the}} average loading of SN links and switches, and use this information to proactively add or remove flow rules from the switches. Simulations show that, compared with three state-of-art approaches, our proposal improves the VN acceptance ratio by about 40...|$|R
40|$|Data center {{applications}} use multicast as {{an effective}} method to reduce bandwidth cost. However, traditional multicast protocols designed for IP networks are usually bottlenecked by the limited state capacity on switches. In this paper, we propose a scalable multicast solution on fat tree networks based on the observation that data center multicast traffic has strong heterogeneity. We propose to remove the multicast management logic from switches and use the <b>SDN</b> <b>controller</b> <b>to</b> manage multicast groups. The proposed Dual-structure Multicast (DuSM) determines elephant and mice groups according to their traffic amounts and treats them separately. For each elephant group, the controller installs multicast state to maintain multiple shared trees and the group traffic will be balanced evenly among the trees to avoid congestion. For mice groups, the controller applies state-free mutlicast that trades bandwidth capacity for state capacity, such as multicast-to-unicast translation. Our experiments using real multicast traffic data show {{that the number of}} groups DuSM supports can be 300 % of that of IP multicast. DuSM also achieves traffic balance among links...|$|R
40|$|Software defined {{networking}} (SDN) {{is a key}} {{enabling technology}} of industrial Internet of things (IIoT) that provides dynamic reconfiguration to improve data network robustness. In the context of smart grid infrastructure, the strong demand of seamless data transmission during critical events (e. g. failures or natural disturbances) seems to be fundamentally shifting energy attitude towards emerging technology. Therefore, SDN will {{play a vital role}} on energy revolution to enable flexible interfacing between smart utility domains and facilitate the integration of mix renewable energy resources to deliver efficient power of sustainable grid. In this regard, we propose a new SDN platform based on IIoT technology to support resiliency by reacting immediately whenever a failure occurs to recover smart grid networks using real-time monitoring techniques. We employ <b>SDN</b> <b>controller</b> <b>to</b> achieve multi-functionality control and optimization challenge by providing operators with real-time data monitoring to manage demand, resources and increasing system reliability. Data processing will be used to manage resources at local network level by employing SDN switch segment, which is connected <b>to</b> <b>SDN</b> <b>controller</b> though IIoT aggregation node. Furthermore, we address different scenarios to control packet flows between switches on hub-to-hub basis using traffic indicators of the infrastructure layer, in addition to any other data from the application layer. Extensive experimental simulation is conducted to demonstrate the validation of the proposed platform model. The experimental results prove the innovative SDN based IIoT solutions can improve grid reliability for enhancing smart grid resilience...|$|R
40|$|We propose Software Defined Networking (SDN) {{framework}} to {{a fleet of}} naval ships that relies on multiple satellite communication systems for onboard communication. Our solution addresses practical issues in current shipboard naval networks such as sharing and load balancing of multiple satellite communication links as well as overcoming limited bandwidth constraints. To ameliorate link intermittence and outage, we propose Multi-Path Transmission Control Protocol (MPTCP), which improves end-to-end data delivery by creating several subflows under one TCP session. In our SDN framework, each ship is an SDN switch with multiple SATCOM connections. The management and classification of MPTCP subflows are handled by a remote <b>SDN</b> <b>controller.</b> The cooperation between MPTCP and <b>SDN</b> <b>controller</b> leads <b>to</b> an agile, bandwidth efficient, robust naval network. System analysis and numerical evaluation validate the feasibility and efficacy of our SDN-based solution for such a network...|$|R
40|$|Based on {{the actual}} {{framework}} of the SESAME 5 G-PPP EU-funded project, we identify {{the importance of the}} related wireless backhauling within the broader 5 G innovative framework, with the pure aim of using small cells together with suitable network virtualization techniques for serving multiple tenants in a modern architectural approach. The virtualization of the network nodes and the wireless links allow {{for the development of a}} suitable <b>SDN</b> <b>controller</b> intending <b>to</b> perform network slicing, where the wireless backhaul resources are shared and assigned on a per-tenant basis. In order to apply SON features as they are also applied at the access radio level, the <b>SDN</b> <b>controller</b> is responsible for collecting and evaluating status information of the network (link qualities, status of wireless interfaces, ongoing traffic), thus resulting to self-planning, self-optimization and self-healing attributes. Peer ReviewedPostprint (published version...|$|R
40|$|Passive Optical Network (PON) {{elements}} such as Optical Line Terminal (OLT) and Optical Network Units (ONUs) are currently managed by inflexible legacy network management systems. Software-Defined Networking (SDN) is a new networking paradigm that improves the operation and management of networks. In this paper, we propose a novel architecture, based on the SDN concept, for Ethernet Passive Optical Networks (EPON) that includes the Service Interoperability standard (SIEPON). In our proposal, the OLT is partially virtualized {{and some of its}} functionalities are allocated to the core network management system, while the OLT itself is replaced by an OpenFlow (OF) switch. A new MultiPoint MAC Control (MPMC) sublayer extension based on the OpenFlow protocol is presented. This would allow the <b>SDN</b> <b>controller</b> <b>to</b> manage and enhance the resource utilization, flow monitoring, bandwidth assignment, quality-of-service (QoS) guarantees, and energy management of the optical network access, to name a few possibilities. The OpenFlow switch is extended with synchronous ports to retain the time-critical nature of the EPON network. OpenFlow messages are also extended with new functionalities to implement the concept of EPON Service Paths (ESPs). Our simulation-based results demonstrate the effectiveness of the new architecture, while retaining a similar (or improved) performance in terms of delay and throughput when compared to legacy PONs. Peer ReviewedPostprint (author's final draft...|$|R
40|$|Software Defined Networking (SDN) is a {{promising}} approach {{for improving the}} performance and manageability of future network architectures. However, little work has gone into using SDN to improve the performance and manageability of existing networks without requiring a major overhaul of the existing network infrastructure. In this paper, we show how we can dramatically improve, or supercharge, the performance of existing IP routers by combining them with SDN-enabled equipment in a novel way. More particularly, our supercharged solution substantially reduces the convergence time of an IP router upon link or node failure without inducing any reconfiguration of the IP router itself. Our key insight is <b>to</b> use the <b>SDN</b> <b>controller</b> <b>to</b> precompute backup forwarding entries and immediately activate them upon failure, enabling almost immediate data-plane recovery, while letting the router converge at its typical slow pace. By boosting existing equipment's performance, we not only increase their lifetime but also provide new incentives for network operators to kickstart SDN deployment. We implemented a fully functional "supercharger" {{and use it to}} boost the convergence performance of a Cisco Nexus 7 k router. Using a FPGA-based traffic generator, we show that our supercharged router systematically converges within ~ 150 ms, a 900 x reduction with respect to its normal convergence time under similar conditions...|$|R
30|$|It {{is worth}} noting that, since {{applications}} explicitly indicate their own requirements, MANET and FiWi <b>SDN</b> <b>controllers</b> are able <b>to</b> finely tune the data plane. In fact, by specifying application requirements of single flows, the management of forthcoming packets can be optimized. For instance, in case of long lasting multimedia streams with limited bitrate {{it is better to}} exploit low latency and reliable paths. On the contrary, to transfer huge files {{it would be better to}} exploit paths with broad bandwidth, even if available only for a relatively small time period [53].|$|R
3000|$|RAN {{topology}} information. <b>SDN</b> <b>controllers</b> {{should be}} able to acquire a global network view in terms of topology, uplink/downlink traffic flows and requirements, granted and required traffic per domain, and throughput and latency monitoring. In fact, in this manner, {{they would be able to}} acquire full knowledge about the current network status as well as about the forthcoming traffic generated by applications, thus allowing to take proper traffic management decisions. In [56], a fine-grained network resource allocation framework is provided; however, this framework is limited to LTE cellular networks. A wider cooperation of <b>SDN</b> <b>controllers</b> is needed <b>to</b> ensure that a global view in terms of bandwidth allocation is feasible for the whole network. By achieving this, fairness could be ensured by monitoring and adjusting fairness indices either per cell or per MANET domain; [...]...|$|R
40|$|The Internet {{data traffic}} {{constant}} growth {{caused by the}} popularization of cloud services, mobile and social networks, is being stressed by the advent of 5 G technologies. Hence, architectural changes are required at the underlying networks to support the expected traffic volume growth, whereas providing a highly dynamic connectivity. Cost-effective and energy efficient solutions for flexible network subsystems are {{required in order to}} provide future sustainable networks. In this paper, we present flexible optical node designs (ROADM and OXC) and transceivers, remotely managed by a Software Defined Networking (<b>SDN)</b> <b>controller,</b> able <b>to</b> satisfy the requirements of future metroaccess networks in support of 5 G services. In particular, the overall architecture including both the novel data plane devices and the SDN control plane is discussed. Peer ReviewedPostprint (published version...|$|R
40|$|The {{thesis is}} divided into two parts. In the {{literature}} study part, state of Software-defined Networking (SDN) standardization is walked through and compared to the current implementations of on-market vendors. In this part the technical possibilities enabled by SDN are mapped and SDN’s probability of becoming the new way of building networks is assessed lightly. In the case study part, prototypes of such value adding services are designed and created. Showcase starts by comparing available SDN solutions and selecting two of them for closer inspection. Case study continues by making technological choices in API and development tool realms. Then, the process of creating a prototype of a management interface on one <b>SDN</b> <b>controller</b> is described. The designed and implemented solution has the capability of dynamically prioritizing the network flows and dynamically changing the route of a network flow from the shortest path (from source to destination) into forcing it to make a detour through intrusion prevention system before being allowed to reach the destination. As a part of the research, a web tool including user interface for achieving described functions is created, because such tools are widely adopted by ISPs as the visible interface for customers to interact with. After the solution has been finalized on one <b>SDN</b> <b>controller</b> platform, the research shifts to analyze the consequences of changing one <b>SDN</b> <b>controller</b> <b>to</b> another. In this part, standardization situation of both south- and northbound interfaces are discussed more closely. Research finds out that {{because of the lack of}} standardization in northbound REST APIs, change invalidates most, or all, of the developed SDN applications. Thesis articulates if change with full functionality retained is possible, and analyses the amount of needed work for straightforward code conversion or other means. The study indicates that SDN works as enabling technology and makes it possible to achieve functions in network management that have earlier been impossible through programming, mostly because the lack of relevant application programming interfaces. The thesis validates SDN as a functional technology with huge headroom for service development possibilities, however it finds the standardization of the northbound programming interfaces lacking and brings up questions about market penetration chances for the technology due to some major vendors having less than enthusiastic implementations of the technology...|$|R
30|$|The {{appearance}} of software-defined networks (software-defined network, abbreviated as SDN [1]) {{makes it possible}} to control the scheduling of network packets more precisely. SDN technology separates the control plane and data plane of the network, and it provides a new solution for developing new network applications and future Internet technologies [2]. In the traditional seven-layer network architecture, the routing control algorithm located in the network layer lacks the ability of <b>SDN</b> network <b>controller</b> <b>to</b> collect and understand the dynamic information of entire network. Therefore, the traditional routing control algorithm, which is considered as the method of packet scheduling, does not completely release the capability of the network in the SDN architecture. Therefore, it is necessary to propose a new scheduling algorithm to obtain better performance.|$|R
40|$|International audienceRecent {{studies have}} shown that the energy {{consumption}} of wireless access networks is a threat to the sustainability of mobile cloud services. Consequently, energy efficient solutions are becoming crucial for both local and wireless access networks. In this paper, we propose a flow-based management framework to achieve energy efficiency in campus networks. We address the problem from the dynamic perspective, where users come and leave the system in unpredictable way. Specifically, we propose an online flow-based routing approach, that allows dynamic reconfiguration of existing flows as well as dynamic link rate adaptation, while taking into account users' demands and mobility. Our approach is compliant with the emerging Software Defined Networking (SDN) paradigm since it can be integrated as an application on top of an <b>SDN</b> <b>controller.</b> <b>To</b> achieve this, we first formulate the flow-based routing problem as an integer linear program (ILP). As this problem is known to be N P-hard, we then propose a simple yet efficient Ant Colony-based approach to solve the formulated ILP. Through extensive simulations, we show that our proposed approach is able to achieve significant gains in terms of energy consumption, compared to heuristic solutions and conventional routing solutions such as the Shortest Path (SP) routing, the Minimum link Residual Capacity routing metric (MRC) and the load balancing (LB) scheme. In particular, we show that the energy consumption can be reduced by up to 7 %, 35 %, 44 % and 49 % compared to Greedy-OFER, MRC, SP and LB, respectively, while ensuring the required Quality of Service (QoS) ...|$|R
40|$|Software Defined Networking (SDN) and Network Function Virtualization (NFV) are a {{promising}} combination for programmable connectivity, rapid service provisioning and service chaining as they offer the necessary end-to-end optimizations. However, {{with the actual}} exponential growth of connected devices, future networks such as SDN/NFV require an open-solutions architecture, facilitated by standards and a strong ecosystem. Such networks need to support communication services that offers guarantees about fault tolerance, redundancy, resilience and security. The construction of complex networks preserving Security and Dependability (S&D) properties is necessary to avoid system vulnerabilities, which may occur in the various layers of SDN architectures. In this work, we propose a pattern framework build in an <b>SDN</b> <b>controller</b> able <b>to</b> import design patterns in a rule-based language {{in order to provide}} fault tolerance in SDN networks. To evaluate the importance and the functionality of this framework, fault tolerance patterns are proposed to guarantee network connectivity, detection and restoration of network traffic in SDN network infrastructures...|$|R
40|$|Wireless {{technology}} {{has become an}} increasingly popular way for network access. Wireless networks provide efficient, reliable service; supporting {{a broad range of}} emerging applications including multimedia streaming and video conferencing. Currently, there are two dominant technologies for providing wireless network access: cellular broadband networks and wireless local area networks (Wi-Fi). Cellular networks offer ubiquitous coverage, high reliability, and support mobility; yet such networks require expensive specialized equipment and expensive spectrum bands. In contrast, Wi-Fi networks utilize unlicensed frequency bands; relying on commodity equipment. As a result, Wi-Fi infrastructure operational costs are lower than cellular network costs. Wi-Fi networks however, have limited coverage, do not support mobility, and are less reliable than cellular networks. Recently, software-defined-networking architectures are gaining interest. The Software-Defined Networking (SDN) approach separates control (forwarding decisions) and data plane (packet processing). This approach provides an abstraction of a network switch and an interface for manipulating this abstraction with clear semantics. The SDN approach enables applications to control underlying network services without knowing the low-level details of specific network equipment. Thus, this approach allows network programming by modifying the behavior of the routers and switches to meet network application requirements. This thesis introduces a reference architecture that supports user mobility through integration of the SDN technology into Wi-Fi networks. This project then implements a mobility manager application on top of an <b>SDN</b> <b>controller</b> <b>to</b> handle clients? handoff between access points. It proposes an algorithm for mobility prediction, allowing the network operator to minimize packet loss and delays during handoffs. Algorithm validation uses real data traces from the Texas A&M University network. Trace analysis was conducted to extract mobility patterns to build a prediction model which was implemented as an application in the <b>SDN</b> <b>controller.</b> The approach was tested by measuring packet loss that was decreased by approximately nine times. Collected mobility traces were used to analyze our prediction model performance, whose accuracy reached 65 % and 95 % when selecting five users with Last-in-First-out scheme with a high- and low-load access point, respectively. This research lays out groundwork for enhancing the functionality of WiFi networks, including mobility support, while maintaining their advantages in terms of lower cost, flexibility, and user of off-the-shelf components...|$|R
40|$|Routers (WMR) are OpenFlow capable {{switches}} {{that can}} be controlled by <b>SDN</b> <b>controllers,</b> according <b>to</b> the wmSDN (wireless mesh SDN) architecture that we have introduced in a previous work. We consider the issue of controller selection in a scenario with intermittent connectivity. We assume that over time a single WMN can become split in two or more partitions and that separate partitions can merge into a larger one. We assume that a set of <b>SDN</b> <b>controllers</b> can potentially {{take control of the}} WMRs. At a given time only one controller should be the master of a WMR and it should be the most appropriate one according to some metric. We argue that {{the state of the art}} solutions for “master election ” among distributed controllers are not suitable in a mesh networking environment, as they could easily be affected by inconsistencies. We envisage a “master selection ” approach which is under the control of each WMR, and guarantees that at a given time only one controller will be master of a WMR. We designed a specific master selection procedure which is very simple in terms of the control logic to be executed in the WMR. We have implemented the proposed solution and deployed it over a network emulator (CORE) and over the combination of two physical wireless testbeds (NITOS and w-iLab. t) ...|$|R
40|$|This {{study is}} {{concerned}} with migrating traditional networks and their inherent firewall architecture to Software Defined Networking (SDN) architecture to provide an initial attempt at preventing application downtime due to hidden firewall domain rules. In legacy organization environments the networking engineers, firewall teams, and application analysts are often silo groups, but Software Defined Networking (SDN) can blur the lines between these group silos. This thesis first outlines the interworking of SDN, traditional firewall architecture and how it interacts with SDN, an experiment of implementation, and the resulting conclusions. Testing with SDN shows we are approaching new environments where the edges of network are no longer dominated by firmware on switches and routers. The technologies behind SDN allow for the programmability of the entire network, which creates a logical flow of both network traffic and firewall policies {{that allow us to}} bypass traditional errors that may arise from physically segmented networks. The physical and logical level network programming inherent in SDN allows organizations to merge and adapt skill sets of networking engineer and application developers to reduce the risk and reliance on firewall expertise. Utilizing OpenFlow protocols and flow table concepts presented in SDN we can propagate firewall rules centrally and logically, which provides end-to-end traffic with firewall rules in our network. Using these concepts reduces the traditional firewall complexity for organizations. In this study we present a paper prototype that demonstrates that we may add in firewall rules to a centralized instance allowing our <b>SDN</b> <b>controllers</b> <b>to</b> provide firewall protection throughout the entire network instead of isolated risk domains or tiers. In the prototype application developers are prevented from calling incorrect ports and possibly missing hidden local firewalls not previously known. The approach described in this paper is based on a case study of several large American firms...|$|R
40|$|In {{this paper}} we {{consider}} a Wireless Mesh Network (WMN) integrating SDN principles. The Wireless Mesh Routers (WMR) are OpenFlow capable switches {{that can be}} controlled by <b>SDN</b> <b>controllers,</b> according <b>to</b> the wmSDN (wireless mesh SDN) architecture that we have introduced in a previous work. We consider the issue of controller selection in a scenario with intermittent connectivity. We assume that over time a single WMN can become split in two or more partitions and that separate partitions can merge into a larger one. We assume that a set of <b>SDN</b> <b>controllers</b> can potentially {{take control of the}} WMRs. At a given time only one controller should be the master of a WMR and it should be the most appropriate one according to some metric. We argue that {{the state of the art}} solutions for "master election" among distributed controllers are not suitable in a mesh networking environment, as they could easily be affected by inconsistencies. We envisage a "master selection" approach which is under the control of each WMR, and guarantees that at a given time only one controller will be master of a WMR. We designed a specific master selection procedure which is very simple in terms of the control logic to be executed in the WMR. We have implemented the proposed solution and deployed it over a network emulator (CORE) and over the combination of two physical wireless testbeds (NITOS and wiLab. t). Comment: Submitted paper (May 26 th, 2014...|$|R
40|$|There is {{an immense}} {{expectation}} on Software- Defined Networking (SDN) in {{industry as a}} novel approach towards potentially replacing conventional network management and control. However, SDN is not immune to security vulnerabilities which currently exist in the legacy systems or which may newly arise due {{to change in the}} network design. Since the beginning of SDN development, primary focus of research was on separation of control plane from data plane by keeping performance and operational flexibility unchanged. In the due course of achieving this, security aspects of an SDN have taken a back seat. Even though separation of control plane from a data plane is a great step towards simplification of network management, it subjects the network into a potential two way target for intruders to gain control. Due to the centralized design of SDN, compromising security of a controller will be as good as compromising the security of a whole network. Enterprises which are moving towards adapting SDN are concerned about security issues and the resulting problems. In this paper, we analyze the security issues of few of the widely used controllers. We found that the OpenDayLight controller is the most secure one compared to the others. In addition, this paper also provides a snapshot of current development in security aspect of <b>SDN</b> <b>controllers</b> such that it may help <b>SDN</b> <b>controller</b> developers <b>to</b> identify the issues and rectify the same in future releases...|$|R
40|$|Due to {{the limited}} service {{capabilities}} of centralized controllers, {{it is difficult to}} process high volume of flows within reasonable time. This particularly degrades the strict quality of service (QoS) requirements of interactive media applications, which is non-negligible factor. To alleviate this concern, distributed deployments of software-defined network (<b>SDN)</b> <b>controllers</b> are inevitable and have gained a predominant position. However, to maintain application specific QoS requirements, the number of resources used in network directly impacts the capital and operational expenditure. Hence, in distributed SDN architectures, issues such as flow arrival rate, resources required and operational cost have significant mutual dependencies on each other. Therefore, it is essential to research feasible methods to maintain QoS and minimize resources provisioning cost. Motivated from this, we propose a solution in a distributed SDN architectures that provides flow-balancing (with guaranteed QoS) in pro-active operations of <b>SDN</b> <b>controllers,</b> and attempts <b>to</b> optimize the use of instance resources provisioning costs. We validate our solution using the tools of queuing theory. Our studies indicate that with our solution, a network with minimum resources and affordable cost with guaranteed application QoS can be set-up...|$|R
