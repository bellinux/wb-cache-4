416|5017|Public
25|$|Some {{other planets}} and moons in the Solar System have {{sufficiently}} rigid structures to have preserved records {{of their own}} histories, for example, Venus, Mars and the Earth's Moon. Dominantly fluid planets, such as the gas giants, do not preserve their history in a comparable manner. Apart from the Late Heavy Bombardment, events on other planets probably had little direct influence on the Earth, and events on Earth had correspondingly little effect on those planets. Construction of a time scale that links the planets is, therefore, of only limited relevance to the Earth's time scale, except in a Solar <b>System</b> <b>context.</b> The existence, timing, and terrestrial effects of the Late Heavy Bombardment is still debated.|$|E
25|$|Like the {{previous}} two Witcher games, players are given a complex story with multiple choices and consequences. Unlike other game engines, REDengine 3 permits a complex storyline without sacrificing virtual world design. The user interface was made more intuitive with grid-based solutions. The camera system was improved to use long shots for battles with multiple enemies and close-ups for more-intimate confrontations. More animations were used for combat sequences than in The Witcher 2, with each lasting less than one second for quick succession. Game director Konrad Tomaszkiewicz and senior game designer Damien Monnier cited Dark Souls and Demon's Souls as influences on Wild Hunt combat system, and level designer Miles Tost and senior environment artist Jonas Mattsson cited The Legend of Zelda series and Red Dead Redemption as influencing the game's level designs and environments. Months before its release date, the game's economy, crafting, and inventory systems were incomplete and apparently unable to meet the deadline. Senior gameplay designer Matthew Steinke thought of a remedy and drew up a <b>system</b> <b>context</b> diagram. To allocate prices, Steinke wrote a formula based on rate of damage, defence, or healing. Polynomial least squares {{were used to determine}} its efficacy, and it was found to eliminate bugs from the system and reduce loading times.|$|E
2500|$|Functional Flow Block Diagrams (FFBD) usually {{define the}} detailed, {{step-by-step}} operational and support sequences for systems, {{but they are}} also used effectively to define es in developing and producing systems. The software development processes also use FFBDs extensively. In the <b>system</b> <b>context,</b> the functional flow steps may include combinations of hardware, software, personnel, facilities, and/or procedures.|$|E
3000|$|Insufficient {{attention}} to the culture within the helping organization and the regulatory and <b>systems</b> <b>context</b> surrounding it; [...]...|$|R
40|$|Current market {{demands and}} {{government}} legislation force farmers to review their environmental processes and performance. Environmental processes {{can be implemented}} effectively by using Environmental Management Systems (EMSs). Therefore effective use of EMSs is critical for the achievement of environmental performance. However, the role of EMSs in achieving environmental and organizational performance, from an information <b>systems</b> <b>context</b> {{is yet to be}} investigated. Such an investigation requires the use of an effective instrument for reliability. The absence of an effective instrument in Australian agriculture triggered this study to develop an instrument for the investigations. Consequently, the objective of this research is to investigate the role of EMSs in environmental and organizational performance from an information <b>systems</b> <b>context.</b> The study could help explain the relationship between the EMS and the environmental and organizational performance from an Information <b>Systems</b> <b>context.</b> Furthermore, this study could indicate the necessary type of Information Systems resources and environmental capabilities in achieving environmental performance. Such findings are expected to contribute to further development of EMS applications. The users of EMS will benefit immensely as they can focus on the necessary applications of resources and capabilities...|$|R
40|$|Remote {{procedure}} call and client-server mechanisms. Protocol definition and compilation; client and server stubs and application code; transport independence; multiple client and server systems. Applications, e. g., remote database query and update and image filtering and archiving; systems programming and file <b>systems</b> <b>contexts...</b>|$|R
5000|$|The best <b>system</b> <b>context</b> {{diagrams}} {{are used}} to display how a system interoperates {{at a very high}} level, or how systems operate and interact logically. The <b>system</b> <b>context</b> diagram is a necessary tool in developing a baseline interaction between systems and actors; actors and a system or systems and systems. Alternatives to the <b>system</b> <b>context</b> diagram are: ...|$|E
5000|$|... #Caption: A sample <b>system</b> <b>context</b> diagram using Hatley-Pirbhai {{modeling}} ...|$|E
5000|$|This type of diagram {{according}} to Kossiakoff (2003) usually [...] "pictures the {{system at the}} center, with no details of its interior structure, surrounded by all its interacting systems, environment and activities. The objective of a <b>system</b> <b>context</b> diagram is {{to focus attention on}} external factors and events that should be considered in developing a complete set of system requirements and constraints". <b>System</b> <b>context</b> diagrams are related to data flow diagram, and show the interactions between a system and other actors which the system is designed to face. <b>System</b> <b>context</b> diagrams can be helpful in understanding {{the context in which the}} system will be part of software engineering.|$|E
50|$|When a {{transition}} between user mode and kernel mode {{is required in}} an operating <b>system,</b> a <b>context</b> switch is not necessary; a mode transition is not by itself a context switch. However, depending on the operating <b>system,</b> a <b>context</b> switch may also take place at this time.|$|R
40|$|Based on {{urgent needs}} for food {{security}} compounded by a changing climate which impacts and is impacted by agricultural land-use and food distribution practices, we explore {{the processes of}} action in implementing agroecological food systems. We identified the following characteristics for an agroecological food system: 1. Minimizing use of external inputs, 2. Extent of internal resource recycling, 3. Resilience, 4. Multifunctionality, 5. Building on complexity and incorporating greater systems integration, 6. Contextuality, 7. Equity and, 8. Nourishment. We focus on the city-region food <b>systems</b> <b>context,</b> concluding with practical drivers for realizing more agroecological food <b>systems</b> in city-region <b>contexts.</b> Agroecological food <b>systems</b> are widely diverse, shaped by context, and achieved through multi-actor planning in rural, peri-urban and urban areas. Application of agroecological food <b>systems</b> in rural–urban <b>contexts</b> emphasize the necessity of diversification, zoning rural–urban landscapes, planning for seasonality in a food <b>systems</b> <b>context,</b> and producing at scale. Rural–urban food systems are a relevant and challenging entry point that provides opportunities for learning how food systems can be shaped for significant positive change. Social organization, community building, common learning, and knowledge creation are crucial for agroecological contextualized food systems, as are the supports from appropriate governing and institutional structures. Peer Revie...|$|R
40|$|A brief case-study article {{outlining}} the <b>systems</b> <b>context</b> and strategic considerations facing University of West London (UWL) Library Services when deciding {{how best to}} upgrade and host its legacy library management system. A review of progress after twelve months is included with positive and negative aspects identified. Conclusions are drawn...|$|R
50|$|<b>System</b> <b>Context</b> Diagrams... {{represent}} all external entities that may interact with a system... Such a diagram pictures the {{system at the}} center, with no details of its interior structure, surrounded by all its interacting systems, environments and activities. The objective of the <b>system</b> <b>context</b> diagram is {{to focus attention on}} external factors and events that should be considered in developing a complete set of systems requirements and constraints.|$|E
5000|$|Structured {{analysis}} {{breaks down}} a software {{system from the}} <b>system</b> <b>context</b> level to system functions and data entities as described by Tom DeMarco.|$|E
5000|$|A {{mature product}} may possess {{a greater or}} lesser degree of {{readiness}} for use in a particular <b>system</b> <b>context</b> than one of lower maturity ...|$|E
50|$|A {{common form}} of {{multitasking}} is time-sharing. Time-sharing is a method to allow fast response for interactive user applications. In time-sharing <b>systems,</b> <b>context</b> switches are performed rapidly, which makes it seem like multiple processes are being executed simultaneously on the same processor. This seeming execution of multiple processes simultaneously is called concurrency.|$|R
30|$|An {{important}} feature of CSS is the contextual adaptation (Chalmers 2002). In these <b>systems,</b> <b>context</b> {{can be used to}} trigger actions (when a certain set of contextual information reaches specific values); or services (tailored according to the limits and preferences imposed by the <b>context).</b> Hence, these <b>systems</b> use <b>context</b> to direct actions and behaviors to support communication between systems and their users. This support can be achieved changing their sequence of actions, the style of interactions and the type of information provided to users in order to adapt to the user’s current needs or requirements failure (Vieira et al. 2011).|$|R
40|$|Abstract—As {{context-aware}} {{systems have}} grown in sophistication, they have adopted more complex contextual models. This paper steps back from the details of model contents and composition and investigates how personal and group models can be evaluated. A specific method is proposed that leverages the transition in the user’s cognitive state between “ready-at-hand” and “present-at-hand. ” Index Terms — Context-aware <b>systems,</b> <b>context,</b> user modeling...|$|R
5000|$|... == Overview == <b>System</b> <b>context</b> {{diagrams}} show a system, as a {{whole and}} its inputs and outputs from/to external factors. According to Kossiakoff and Sweet (2011): ...|$|E
50|$|In his 1978 {{paper on}} {{distributed}} processes, Brinch Hansen proposed a language for distributed computing based on external requests consisting of procedure calls between processes. This later became known in an operating <b>system</b> <b>context</b> as the remote procedure call.|$|E
50|$|Systems {{modeling}} {{is generally}} a basic principle in engineering and in social sciences. The {{system is the}} representation of the entities under concern. Hence inclusion to or exclusion from <b>system</b> <b>context</b> is dependent of the intention of the modeler.|$|E
40|$|Abstract: This paper {{demonstrates}} {{the feasibility of}} {{a new approach to}} system inversion and input signal estimation based on the exploitation of non-minimal state space feedback control system design methods that can be applied to non-minimum phase and unstable systems. The real and simulated examples demonstrate its practical utility and show that it has particular relevance in a hydrological <b>systems</b> <b>context.</b> 1...|$|R
40|$|Abstract. ConTexts is an {{implementation}} of and proposed design model for an adaptable hypermedia <b>system.</b> <b>ConTexts</b> provides an easy yet powerful way to author the interactive, adaptable effects of adaptive hypermedia without Natural Language Generation modeling. We present {{an overview of}} the architecture and design methodology for ConTexts, its relationship to other technologies, and future research directions for this adaptable hypermedia. ...|$|R
50|$|A {{discovery}} {{system may}} be an artificial intelligence <b>system</b> (in the <b>context</b> of computer science, logic, and mathematics) or a bibliographical search <b>system</b> (in the <b>context</b> of library and information science).|$|R
5000|$|Collective code {{ownership}} (also {{known as}} [...] "team code ownership" [...] and [...] "shared code") means {{that everyone is}} responsible for all the code; therefore, everybody is allowed to change {{any part of the}} code. Collective code ownership is not only an organizational policy but also a feeling. [...] "Developers feel team code ownership more when they understand the <b>system</b> <b>context,</b> have contributed to the code in question, perceive code quality as high, believe the product will satisfy the user needs, and perceive high team cohesion." [...] Pair programming, especially overlapping pair rotation, contributes to this practice: by working in different pairs, programmers better understand the <b>system</b> <b>context</b> and contribute to more areas of the code base.|$|E
50|$|The Unified Modeling Language as used {{in systems}} {{engineering}} defines a context model as the physical scope of the system being designed, which could include the user {{as well as the}} environment and other actors. A <b>System</b> <b>context</b> diagram represents the context graphically..|$|E
50|$|A <b>system</b> <b>context</b> diagram (SCD) in {{engineering}} is a diagram {{that defines the}} boundary between the system, or part of a system, and its environment, showing the entities that interact with it. This diagram is a high level view of a system. It is similar to a block diagram.|$|E
30|$|The {{monitoring}} of {{the environment in which}} the system is inserted {{is one of the main}} characteristics of context-sensitive systems. Accordingly, such activity impact the system’s behavior and it should be represented in the statechart. The results of the monitoring will define which facts and statements are true, causing changes in the <b>system’s</b> <b>context.</b> The management of such results should be implemented as functions of the system.|$|R
40|$|International audienceThis paper {{deals with}} a novel {{transform}} domain channel estimation (TD-CE) based on discrete cosine transform (DCT) for the MIMO-OFDM system. After {{the description of the}} conventional DCT based method, a channel estimation scheme improved in terms of both performance and complexity using small DCT blocks is proposed. Finally the efficiency of this estimator is evaluated within IEEE 802. 11 n and 3 GPP/LTE <b>system</b> <b>contexts...</b>|$|R
40|$|In this paper, we give an {{overview}} of our work to investigate the integration of context into different kind of recommender <b>systems.</b> <b>Context</b> adds an additional another dimension to the user-item data model of recommender system and can be utilized in different ways during content-based or collaborative recommendation processes. We give several application examples {{we are working on}} to apply contextual recommenders in real world scenarios. ...|$|R
5000|$|... #Caption: <b>System</b> <b>context</b> diagram for {{a fictitious}} hotel. (By convention, {{bidirectional}} flows, with arrows at both ends, {{are often used}} when a dialogue is initiated externally. For example, [...] "booking dialogue" [...] contains the flow [...] "booking request", which is the initial trigger; [...] "booking confirmation", the result, is sent back.) ...|$|E
50|$|<b>System</b> <b>context</b> {{diagrams}} {{are used}} early {{in a project}} to get agreement on the scope under investigation. Context diagrams are typically included in a requirements document. These diagrams must be read by all project stakeholders and thus should be written in plain language, so the stakeholders can understand items within the document.|$|E
50|$|An {{object is}} an {{instance}} of a class, which provides a certain set of functionalities. Two objects can be differentiated based on the functionalities (or methods) they support. In an operating <b>system</b> <b>context,</b> objects {{are associated with a}} resource. Historically, the object-oriented design principles were used in operating systems to provide several protection mechanisms.|$|E
50|$|Hydrology and Earth System Sciences: covers {{research}} in hydrology, placed within a holistic Earth <b>system</b> science <b>context.</b>|$|R
5000|$|The DODAF Capability Viewpoint (CV-) {{provides}} a framework to use capabilities in Systems of <b>Systems</b> (SoS) <b>context</b> ...|$|R
40|$|Verification and Validation (V&V) {{is used to}} {{increase}} the level of assurance of critical software, particularly that of safety-critical and mission-critical software. V&V is a systems engineering discipline that evaluates the software in a <b>systems</b> <b>context,</b> and is currently applied during {{the development of a}} specific application system. In order to bring the effectiveness of V&V to bear within reuse-based software engineering, V&V must be incorporated within the domain engineering process...|$|R
