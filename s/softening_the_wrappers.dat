0|10000|Public
2500|$|<b>The</b> stick's <b>wrapper</b> {{is usually}} marked off as eight tablespoons (...) the actual volume of one stick is {{approximately}} nine tablespoons (...) [...] In the United States, unsalted or [...] "sweet" [...] butter typically has red printing on <b>the</b> <b>wrapper,</b> while salted butter typically has blue printing on <b>the</b> <b>wrapper.</b>|$|R
5000|$|<b>The</b> <b>wrapper</b> classes [...] and [...] are {{not one of}} <b>the</b> {{primitive}} <b>wrapper</b> classes but are immutable.|$|R
5000|$|<b>The</b> stick's <b>wrapper</b> {{is usually}} marked off as eight tablespoons (120 ml); the actual volume of one stick is {{approximately}} nine tablespoons (130 ml). In the United States, unsalted or [...] "sweet" [...] butter typically has red printing on <b>the</b> <b>wrapper,</b> while salted butter typically has blue printing on <b>the</b> <b>wrapper.</b>|$|R
5000|$|The {{connection}} object {{obtained from}} the connection pool is often a <b>wrapper</b> around <b>the</b> actual database connection. <b>The</b> <b>wrapper</b> handles {{its relationship with the}} pool internally and hides the details of the pool from the application. For example, <b>the</b> <b>wrapper</b> object can implement a [...] "close" [...] method that can be called just like the [...] "close" [...] method on the database connection. Unlike the method on the database connection, the method on <b>the</b> <b>wrapper</b> may not actually close the database connection, but might instead return it to the pool. The application {{does not need to be}} aware of the connection pooling when it calls the methods on <b>the</b> <b>wrapper</b> object.|$|R
5000|$|The first {{versions}} of <b>the</b> <b>wrapper</b> {{were created by}} hand. However, soon the code base became very difficult to maintain and keep synchronized with wxWidgets releases. Later versions were created with SWIG, greatly decreasing {{the amount of work}} to update <b>the</b> <b>wrapper.</b> <b>The</b> first [...] "modern" [...] version was announced in 1998.|$|R
30|$|Replace the {{invocation}} target with <b>the</b> <b>wrapper</b> function.|$|R
50|$|Examples {{include a}} tie-in with Space 1999 with free cards of episodes inside <b>the</b> <b>wrapper,</b> Star Wars with free masks of major {{characters}} and film facts on <b>the</b> <b>wrappers,</b> <b>The</b> Bionic Man TV series, Superman {{and even a}} Goal lolly with lolly sticks containing famous footballers of the day.|$|R
50|$|<b>The</b> <b>wrapper,</b> lappa, or pagne is a {{colorful}} garment widely worn in West Africa by {{both men and}} women. It has formal and informal versions and varies from simple draped clothing to fully tailored ensembles. The formality of <b>the</b> <b>wrapper</b> depends on <b>the</b> fabric used to create it.|$|R
40|$|This paper studies {{opportunities}} for optimization that are typical to WebSources {{and that will}} allow the mediator to choose a possibly optimal execution plan. These opportunities exist at <b>the</b> <b>wrapper</b> level, at <b>the</b> mediator level, and at the interface of <b>the</b> <b>wrapper</b> and mediator. At <b>the</b> <b>wrapper</b> level, a wrapper typically utilizes an extractor to extract objects by following links to multiple pages on the WebSource. For optimization, the number of accesses to the WebSource, across some wide-area network, or duplicate accesses to the same page by the extractor, must be minimized. <b>The</b> <b>wrapper</b> will also provide a cost estimation of <b>the</b> <b>wrapper</b> query. This cost will be used by the mediator to select a possibly optimal mediator plan. At the mediator level, the mediator has to explore the space of possibly execution plans to choose the one with the lowest cost. The mediator must be provided with knowledge about the capabilities of the sources, so that only safe queries are generated. Another optimization objective is to ensure the mediator enumerates only the space of safe maxima...|$|R
40|$|Wrapping {{databases}} {{allows them}} to be reused in formerly unplanned contexts, such as web-based applications or federated systems. Indeed, a wrapper can provide external clients of an existing (legacy) database with a neutral interface and augmented capabilities. However, except in simplistic cases where <b>the</b> <b>wrapper</b> and <b>the</b> database schemas are similar, <b>the</b> <b>wrapper</b> must implement complex mappings: it must translate queries from <b>the</b> <b>wrapper</b> data manipulation language to the database primitives, and, conversely, translate extracted data into <b>the</b> external <b>wrapper</b> format. We have developed a generic schema mapping framework in which wrappers can be specified formally and generated automatically. This framework comprises a highlevel generic data model {{and a set of}} schema transformations defined for this model. This reference model makes it possible to specify different data models in a uniform formalism. Mappings between schemas are expressed as sequences of reversible schema transformations. We show how these transformations can be used to translate data and queries between two schemas and hence to generate as much as possible of the code of <b>the</b> <b>wrappers.</b> <b>The</b> generation is supported by DB-MAIN, a wide-spectrum CASE tool...|$|R
30|$|The filter-wrapper-based feature {{selection}} method in [49] is a two-phase {{process that has}} been used to reduce the computation load and the complexity of the search operations associated with <b>the</b> <b>wrapper</b> approach. <b>The</b> first phase, which acts as pre-processing phase, involves the filter [48] discussed earlier. As the result, a set of relevant features, f, with minimum redundancy and maximum class discriminability is obtained. In the second phase, the feature subset, f, is presented as an input to <b>the</b> <b>wrapper.</b> <b>The</b> <b>wrapper</b> uses <b>the</b> performance of the classifier, such as the probability of error, to assess the goodness of the selected features [49]. <b>The</b> <b>wrapper</b> was evaluated using three different statistical classifiers, namely linear, quadratic, and k-nearest neighbor. Optimal EEG and HRV feature subsets together with the best performing classifiers were selected as a result of employing the filter-wrapper-based {{feature selection}} method.|$|R
30|$|The filter methods usually use {{heuristics}} {{instead of}} machine-learning algorithms used by <b>the</b> <b>wrapper</b> methods [29]. <b>The</b> {{machine learning algorithm}} selects the optimal set of attributes with high classification accuracy. However, <b>the</b> <b>wrapper</b> methods are time consuming compared to filter methods because the machine-learning algorithm is run iteratively while searching the set of best attributes.|$|R
5000|$|... #Caption: Front {{and back}} of <b>the</b> <b>wrapper</b> of a Galaxy Honeycomb Crisp.|$|R
60|$|Note.--No more published. Without Title-page; {{the above}} Title appears on <b>the</b> <b>wrapper.</b>|$|R
5000|$|... #Caption: Front {{and back}} of <b>the</b> <b>wrapper</b> of a large Galaxy Bubbles bar.|$|R
40|$|Abstract- In this paper, {{we propose}} an {{adaptive}} wrapper generator that can generate adaptable wrapper for adapting networked information sources (NIS) format changes. When NIS’s format changed, <b>the</b> adaptable <b>wrapper</b> can start recovery phase {{to discover the}} extraction rule of the new format of target NIS. <b>The</b> <b>wrapper</b> can automatically adapt the changes of content tag and accurately extract information. <b>The</b> <b>wrapper</b> is also examined in 6 websites in 3 kind of NIS, and the result shows that the average precision is over 98 %. It can conclude that <b>the</b> generated adaptable <b>wrapper</b> can adapt <b>the</b> NIS’s format changes and accurately extract information...|$|R
5000|$|Short Film Palme d'Or: ...Is It the Design on <b>the</b> <b>Wrapper?</b> by Tessa Sheridan ...|$|R
40|$|Although <b>the</b> <b>wrappers</b> {{appear to}} list the {{contents}} they are occasionally inaccurate; in addition some papers that were published in two parts were explained in <b>the</b> <b>wrappers</b> {{but there are a}} few cases where they were not. With the help of a full set of <b>wrappers,</b> <b>the</b> backs of which were sometimes used to complete the text, it is possible to explain all the inconsistencies (except two, one in Vol. 11 and one in Vol. 29) ...|$|R
5000|$|... #Caption: Unwrapped lontong. Different colors {{depend on}} the banana leaf which is used as <b>the</b> <b>wrapper.</b>|$|R
40|$|In this paper, we {{describe}} techniques for learning wrappers efficiently using very few user-supplied labels (typically, 1 or 2 labels, all {{within a single}} page). This is an improvement over previous work, which require multiple labeled examples on multiple pages. In effect, it brings the power of <b>the</b> <b>wrapper</b> down to <b>the</b> level of the end-user, who can teach, by only a few demonstrations, the labels that <b>the</b> <b>wrapper</b> should learn to extract. In contrast to other techniques, our approach also uses unlabeled web pages to guide the selection of appropriate features for <b>the</b> <b>wrapper.</b> We propose techniques to automatically acquire these unlabeled web pages, {{without the need for}} the user to supply them...|$|R
40|$|Abstract. This paper investigates {{automatic}} wrapper {{generation and}} maintenance for Forums, Blogs and News web sites. Web pages are increasingly dynamically generated using a common template populated {{with data from}} databases. This paper proposes a novel method that uses tree alignment and transfer learning method to generate <b>the</b> <b>wrapper</b> from this kind of web pages. The tree alignment algorithm is adopted {{to find the best}} matching structure of the input web pages. A kind of linear regression method is employed to get the weight of different tag-matching. A transfer learning method is adopted to find the most likely content block. A <b>wrapper</b> built on <b>the</b> most probable content block and the repeating patterns extracts data from web pages. <b>The</b> <b>wrapper</b> maintenance arises because web source may experiment changes that invalidate <b>the</b> current <b>wrappers.</b> This paper presents a wrapper maintenance method using a log likelihood ratio test for detecting the change points on the similarity series which gotten from <b>the</b> <b>wrapper</b> and input web pages. <b>The</b> <b>wrapper</b> generation method is applied to generate a <b>wrapper</b> once <b>the</b> web source change is detected. Experimental results show that the method achieves high accuracy and has steady performanc...|$|R
5000|$|.....Is It the Design on <b>the</b> <b>Wrapper?</b> (Est-ce à cause du dessin sur l'emballage?) by Tessa Sheridan ...|$|R
50|$|<b>The</b> <b>wrapper</b> class named Void {{is not a}} {{primitive}} wrapper class, specifically because void is not {{a primitive}} data type. However <b>the</b> Void <b>wrapper</b> class {{can be used to}} create new objects that have methods that are not expected to return a value.|$|R
25|$|In formal use, {{disposable}} chopsticks (waribashi) {{should be}} replaced into <b>the</b> <b>wrapper</b> at <b>the</b> end of a meal.|$|R
5000|$|... #Caption: <b>The</b> <b>wrapper</b> of a {{chocolate}} bar featuring {{the image of}} Grace Darling, from the Grace Darling Museum ...|$|R
5000|$|In formal use, {{disposable}} chopsticks (waribashi) {{should be}} replaced into <b>the</b> <b>wrapper</b> at <b>the</b> end of a meal.|$|R
5000|$|The {{difference}} between forwarding and delegation is the binding {{of the self}} parameter in the wrappee when called through <b>the</b> <b>wrapper.</b> With delegation, <b>the</b> self parameter is bound to <b>the</b> <b>wrapper,</b> with forwarding it is bound to the wrappee. ... Forwarding {{is a form of}} automatic message resending; delegation is a form of inheritance with binding of the parent (superclass) at run time, rather than at compile/link time as with 'normal' inheritance.|$|R
40|$|The {{purpose of}} this thesis project is to develop an XTM (XML Topic Maps) wrapper, called XTMWrapper, for the {{functional}} and object-oriented DBMS Amos II so that XTM files can be accessed through Amos II using its query language, AmosQL. <b>The</b> <b>wrapper</b> {{can be used as}} a database loader for XTM files. <b>The</b> <b>wrapper</b> parses XTM files, translates them into an Amos II data representation, and populates the Amos II database. To represent imported Topic Map data in Amos II, a schema for Topic Maps is developed in terms of its functional data model. The schema represents any Topic Map independent of what the Topic Map describes. <b>The</b> <b>wrapper</b> is written in Java and utilizes a publicly available Topic Map engine, TM 4 J (Topi...|$|R
2500|$|Aside from folios 1 and 2, <b>the</b> <b>wrapper</b> of <b>the</b> {{manuscript}} proper, {{the revised}} extant manuscript comprises the following: ...|$|R
5000|$|... #Caption: Unwrapped lontong. Different colors {{depend on}} banana leaf {{which is used}} as <b>the</b> <b>wrapper</b> is a {{typically}} Indonesian lontong ...|$|R
5000|$|A {{playing card}} {{manufacturer}} {{without a license}} could neither obtain a legal stamp for the ace of spades nor a regulated label placed on <b>the</b> <b>wrapper</b> of <b>the</b> pack of playing cards. An illegal manufacturer of playing cards would have to forge the brass legal stamp placed on the ace of spades and create a counterfeit label for <b>the</b> <b>wrapper.</b> [...] In England, forgery and uttering was a capital offence in 1805.|$|R
5000|$|The folded {{diamond-shaped}} sheet (or [...] "blank") was in use at {{the beginning}} of the 19th century as a novelty wrapper for invitations and letters among the proportion of the population that had the time to sit and cut them out and were affluent enough not to bother about the waste offcuts. Their use first became widespread in the UK when the British government took monopoly control of postal services and tasked Rowland Hill with its introduction. The new service was launched in May 1840 with a postage-paid machine-printed illustrated (or pictorial) version of <b>the</b> <b>wrapper</b> and <b>the</b> much-celebrated first adhesive postage stamp: the Penny Black- for the production of which the Jacob Perkins printing process was used to deter counterfeiting and forgery. <b>The</b> <b>wrappers</b> were printed and sold as a sheet of 12, with cutting the purchaser's task. Known as Mulready stationery, because the illustration was created by the respected artist William Mulready, the envelopes were withdrawn when the illustration was ridiculed and lampooned. Nevertheless, the public apparently saw the convenience of <b>the</b> <b>wrappers</b> being available ready-shaped, and it must have been obvious that with the stamp available totally plain versions of <b>the</b> <b>wrapper</b> could be produced and postage prepaid by purchasing a stamp and affixing it to <b>the</b> <b>wrapper</b> once folded and secured. In this way although the postage-prepaid printed pictorial version died ignominiously, <b>the</b> diamond-shaped <b>wrapper</b> acquired de facto official status and became readily available to the public notwithstanding the time taken to cut them out and the waste generated. With the issuing of the stamps and the operation and control of the service (which is a communications medium) in government hands the British model spread around the world and <b>the</b> diamond-shaped <b>wrapper</b> went with it.|$|R
50|$|A widely {{available}} Russian candy called Барбарис (Barberis) is made using extract from the berries, which are pictured on <b>the</b> <b>wrapper.</b>|$|R
50|$|Due to {{the tobacco}} content in <b>the</b> <b>wrapper</b> leaf, blunts {{carry with them}} the risks of tobacco use, {{including}} nicotine addiction.|$|R
40|$|In {{this paper}} we propose a method to {{generate}} pausible clock based GALS <b>wrapper</b> circuits from <b>the</b> synchronous module’s Verilog specification code automatically. We first parse the input module specification and produce wrapper circuit components based on the specification of entered synchronous module. Existing methods for generation of <b>the</b> <b>wrapper</b> circuit waste <b>the</b> die size because they instantiate one asynchronous port controller for each data vector. In our improved method, we reduced the number of asynchronous port controllers to simultaneous data communication links. This method will be suitable for stream based communication systems. In order to validate the proposed algorithm, we employed <b>the</b> <b>wrapper</b> circuit in Viterbi error detection and correction circuit. The results show that our improved method will reduce the area of <b>the</b> <b>wrapper</b> circuits in contrast to the previous suggested implementations...|$|R
2500|$|... jumbo n. bologna lunch meat (Wisnosky 2003; Johnstone, Andrus and Danielson 2006). <b>The</b> <b>wrapper</b> on <b>the</b> {{meat was}} marked [...] "JUMBO Bologna." ...|$|R
