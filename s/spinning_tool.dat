7|160|Public
5000|$|Ornamental turning - {{also known}} as OT, a method in which the piece is mounted upon a rocking headstock, and a <b>spinning</b> <b>tool</b> is used to cut out exotic and {{decorative}} patterns. The device is called a rose engine lathe ...|$|E
50|$|The basic hand metal <b>spinning</b> <b>tool</b> {{is called}} a spoon, though many other tools (be they commercially produced, ad hoc, or improvised) {{can be used to}} effect varied results. Spinning tools can be made of {{hardened}} steel for using with aluminum or solid brass for spinning stainless steel or mild steel.|$|E
5000|$|The term distaff is {{also used}} as an {{adjective}} to describe the matrilineal branch of a family (e.g., the [...] "distaff side" [...] of a person's family refers to the person's mother and her blood relatives). This term developed in the English-speaking communities where a distaff <b>spinning</b> <b>tool</b> was used often to symbolize domestic life. One still recognized {{use of the term}} is in horse racing, in which races limited to female horses are referred to as distaff races. From 1984 until 2007, at the American Breeders' Cup World Championships, the major race for fillies and mares was the Breeders' Cup Distaff (beginning in 2008, the event {{is referred to as the}} Breeders' Cup Ladies' Classic. Starting in 2013 the name of the race changed back to being called the Breeders' Cup Distaff). It is commonly regarded as the female analog to the better-known Breeders' Cup Classic, though female horses are not barred from entering that race.|$|E
30|$|Initially web {{services}} are composed using Business Process Execution Language for Web Service (BPEL 4 WS) {{and it is}} converted into ESAM (combination of Muller Automata (MA) and Push Down Automata (PDA)) and it is transformed into Promela language, an input language for Simple ProMeLa Interpreter (<b>SPIN)</b> <b>tool.</b> The model is verified using <b>SPIN</b> <b>tool</b> and the results revealed better recital in terms of finding dead transition and deadlock {{in contrast to the}} existing models.|$|R
30|$|Web {{services}} are composed using BPEL 4 WS {{and it is}} transformed into ESAM (grouping of Amend Muller Automata and Push down automata) and it is changed into Promela language, an input language for Simple ProMeLa Interpreter (<b>SPIN)</b> <b>tool.</b> The model is verified using <b>SPIN</b> <b>tool.</b> Only a few cases considered the verification part, deterministic systems in particular. This paper intends to compose web services and verification of web services for non-deterministic systems with the avoidance of dead transition and deadlock.|$|R
40|$|International audienceWe {{present a}} {{complete}} study involving {{in the one}} hand refinement and an associated theorem proving tool and, {{on the other hand}} liveness verification with an associated tool. The event B method is used in the first part whereas Spin is used in the second one. The <b>Spin</b> validation <b>tool</b> is used to simulate and check B abstract systems. This entire development is mechanically proved with respect to safety properties using B tool and with respect to liveness properties using the <b>Spin</b> <b>tool.</b> The semantic compatibility between Spin processes and B systems is used as a basis for the translation from one framework to the other. We show through this study that for some B systems, the <b>Spin</b> <b>tool</b> is well adapted for complementary analysis. The study combines on an example of concurrent system, refinement techniques, verification by theorem proving and model checking...|$|R
40|$|Bezier curve {{has been}} widely used as the roller path in {{conventional}} spinning. In this paper, Finite Element model with parameterized 2 -pass conventional <b>spinning</b> <b>tool</b> paths based on quadratic Bezier curve is developed to explore the influence on the wall thickness reduction of spherical components. The {{results show that the}} first path has significant effect on wall thickness distribution and the selection of parameter values in tool path is crucial for thickness distribution...|$|E
40|$|To be {{competitive}} in the market competition, then a company is required {{to be able to}} work without defects, especially in the production process, especially in terms of time, but in the process of production of the most common problem is the bottleneck. In addition, the process of making the finished product, if the consumer is too long to take the goods orders will certainly lead to additional cost for the manufacturer (PT. WIKA Beton Boyolali). Therefore, it is necessary to charge to cover the cost calculation the amount of cost / additional costs. The purpose and goal of this study was to maximize the production of piling PT. WIKA Beton Boyolali, as well as reducing the amount of losses arising from the cost / surcharge. Bottleneck determination made by the method of calculation of standard time each work station, while charging for the cost calculation performed by three methods: Base On Plan, Mixing Pile, Base On Demand. From the results of the analysis showed that the bottleneck is at the work station spinning, and to reduce the bottleneck distasiun the work can be done by adding the <b>spinning</b> <b>tool</b> and also the addition of workers / operators. While charging the cost of the analysis showed that of the three methods used, the most effective method is a method Charging Cost Base On Mixing Pile. It is expected to cost charging system is then the consumer can pay more attention to pick up their order as soon as possible when the order finished goods...|$|E
40|$|Friction stir welding is a {{relatively}} new advanced joining technique that requires minimal power input, ultimately leading to less inherent residual stresses and distortion. The process involves a <b>spinning</b> <b>tool</b> which first plunges into the surface of the, to be welded assembly and then traverses along the joint. Frictional heat is generated, softening the material at temperatures significantly below the melting temperature of the parent material. As the tool traverses along the joint at a predetermined speed, the assembly is joined by means of a plastic straining process. This advanced welding technology has been validated for various aluminium alloys but it is only recently, due to advances in tool technology, that the possibility of joining mild steel using friction stir welding has become a viable option. This study looks into friction stir welding of mild steel and develops simplified numerical methods for the prediction of thermal gradients, residual stresses and deformation. In principle the process modelling requires a multi-disciplinary approach involving coupled thermo-fluid, microstructural-structural modelling process. Much of the latest thermo-mechanical studies of friction stir welding rely on a number of over simplifications particularly related to the heat flux distribution across the tool shoulder, and also on the backing plate boundary conditions. The objective {{of this paper is to}} scrutinise the effects of modelling in more detail and establish the most important factors leading to accurate yet computationally efficient prediction of thermal gradients and inherent residual stresses. The results show that both the heat input and heat loss modelling, due to heat dissipation to the surroundings, are crucial for the determination of the final inherent welding residual stresses. The heat generated is modelled through a predefined linear heat flux variation across the tool shoulder. However if a more precise and localized residual stress information is sought, a full thermo-fluid-structural analysis is required. This is time consuming and probably does not give significant information on manufacturing optimization. On the other hand, simplified global solutions offer the possibility to optimise friction stir welding parameters and boundary conditions during the preliminary stages of the development of the fabrication procedures, at relatively minimal time and processing power. This work is financed under the European Commission in Call FP 7 -SST- 2012 -RTD- 1 High Integrity Low Distortion Assembly (HILDA) project. This study is being funded by the European Commission in Call FP 7 -SST- 2012 -RTD- 1 under the project titled High Integrity Low Distortion Assembly Hilda. The authors would also like to acknowledge the project partners in particular Mr. Stephen Cater at TWI for providing the FSW parameters and setup configuration together with Dr. Alex Galloway the project coordinator of the HILDA project. This work reflects only the authors views and the European Union is not liable for any use that may be made of the information contained therein. N/...|$|E
3000|$|After composition, the {{verification}} part {{is started}} by mapping the BPEL files to ESAM notations as xml files. For converting into Promela, services are retrieved from xml using “XPath” {{and it is}} stored as variable in pml file. The XML Path Language known as XPath, is a query language for selecting nodes from an XML document. The XPath language {{is based on a}} tree representation of the XML document, and provides the ability to navigate around the tree, selecting nodes by a variety of criteria. The xml file is transformed into [...].pml file and pml file is given as input to <b>spin</b> <b>tool</b> for verifying the composed services. <b>Spin</b> <b>tool</b> will generate the automata diagram for the given pml input and verify the properties like deadlock, dead transition, safety, and reachability.|$|R
40|$|The way program {{verification}} {{is taught}} in our faculty is firstly described. One of the verification methods is model checking, shortly presented to the students in one lecture. One laboratory project consists in using the <b>SPIN</b> <b>tool.</b> The difficulties encountered by students with this project are presented in this paper...|$|R
5000|$|... #Caption: A brass vase spun by hand. Mounted to {{the lathe}} spindle is the mandrel {{for the body}} of the vase; a shell sits on the [...] "T" [...] rest. The {{foreground}} shows the mandrel for the base. Behind the finished vase are the <b>spinning</b> <b>tools</b> used to shape the metal.|$|R
40|$|The aims of this {{research}} are: (1) to describe of student‟s conception degree about probability. (2) to know the causes of student‟s unknown of concept and misconception about probability. This research used the qualitative method. Research‟s subject are students of XI IPA 1 2009 / 2010 academic year. There are 6 students that determined through purposive sampling. Then, those 6 students would be interviewed because of their reliability to the research subject condition. There are have a high first ability, middle first ability, and low first ability, and they could easily to take information when interview consist. It‟s based on consideration from mathematic teacher of XI IPA 1. The technique of collecting data is done with documentation, test, and interview method. Instrument test that used essay test contains 4 items. Validation data is done with a contemporary friends checkup by discussion, it‟s mean to expose the temporary result or final result of research in discussion with contemporary friends. The aim of this method are to make the researcher still defend the open and honest attitude, it‟s also given a good beginning opportunity to began checkup and examine the work of hypothesis which appear from researcher thoughts. Data analysis is done by reducing data, data presentation, and taking summary. Based on research can be concluded that:(1) student‟s conception degree in topic main of probability: (a) about space of sample: (i) student with high and low first ability to be on fourth degree, understanding partly and founded misconception. (ii) student with middle first ability to be on misconception category. Probably exists a misconception on the subject {{when he said that}} the pair of dice (a,b) has the same meaning with a pair of dice (b,a). (b) about probability of event: (i) student with high first ability to be on fourth degree, understanding partly and founded misconception. (ii) student with middle first ability to be on third degree, founded misconception. (iii) student with low first ability to be on misconception category. Probably exists a misconception on the subject when students often interpret events that happen in everyday life have greater opportunities (c) about limitation of probability: all first ability to be on fourth degree, understanding partly and founded misconception. Probably exists a misconception on the subject when students mentioned that the maximum limit or the largest of the values is there any chance of an infinitely (d) about two complex events A and B: all first ability to be on third degree, founded misconception. Probably exists a misconception on the subject when students interpret an event that is free as an incident that occurred on the motion tool free play. (e) about two complex events A or B: (i) student with high first ability to be on sixth degree, understanding. (ii) student with middle and low first ability to be on third degree, founded misconception. Probably exists a misconception on the subject when students interpret an event which they depend disjoint factors that influence the <b>spinning</b> <b>tool,</b> (2) causes of unknown of concept and misconception about probability: (a) about space of sample: student do not have enough practice to answer a question for example and not example case, simplification of meaning about point of sample, misunderstanding the meaning sense of question. (b) about probability of event and limitation of probability: student wrong in given definition about probability of event, student preconception about point of sample still wrong, student just rely don‟t know and just depend on remembering ability without understand concept, the using tool of models is not exactly represent enough to describe of concept, ability of student on remember is not good and forget on formula, student intuition is wrong. (c) about two complex events: student wrong in given definition about two complex event, comprehension about some concept are mingled and cannot diferentiate between concept with another ones, the way of studying on understanding concept still wrong, the using tool of models is not exactly represent enough to describe of concept, student just rely don‟t know and just depend on remembering ability without understand concept, student didn‟t understand about concept of released and unreleased compilation...|$|E
50|$|Some metal <b>spinning</b> <b>tools</b> {{are allowed}} to spin on {{bearings}} during the forming process. This reduces friction and heating of the tool, extending tool life and improving surface finish. Rotating tools may also be coated with thin film of ceramic to prolong tool life. Rotating tools are commonly used during CNC metal spinning operations.|$|R
50|$|PropBASIC is a BASIC {{programming}} language for the Parallax Propeller Microcontroller. PropBASIC requires Brad's <b>Spin</b> <b>Tool</b> (BST), a cross-platform {{set of tools}} for developing with the Parallax Propeller. As of August 2015, BST runs on i386-linux-gtk2, PowerPC-darwin (Mac OS X 10.4 through 10.6), i386-darwin (Mac OS X 10.4 through 10.6) and i386-Win32 (Windows 95 through Windows 7).|$|R
40|$|Some archaeological finds {{potentially}} {{related to}} wool production and its processing {{come from the}} province of Brescia. A relevant number of tools probably used for sheep shearing found in the sites of mountain valleys and in the southern lowlands can be counted among them. <b>Spinning</b> <b>tools</b> are mainly rappresented by spindle whorls whose weight could be functional {{for the production of}} medium or medium-large yarn. All <b>spinning</b> <b>tools</b> are often discovered in funerary areas of the territory. The catalogued loom-weights are recorded especially in the south-eastern plain and come from territorial settlements identified as probable rustic buildings or villae. Most of the collected loom-weights are shaped like a truncated pyramid with a round head and they also reveal a very high weight perhaps connected to the production of heavy wool fabrics. Finally stone loom-weights have been documented in settlements subject to the process of Romanization and located only in Valle Camonica...|$|R
25|$|Tools, {{originally}} {{made of wood}} or bone, {{were bound}} to handles with leather straps. During the Bronze Age, {{they were made of}} bronze with wooden handles. Due to its round hole, the <b>tool</b> head would <b>spin</b> on the handle. The Minoans developed oval-shaped holes in their tools to fit oval-shaped handles, which prevented <b>spinning.</b> <b>Tools</b> included double adzes, double- and single-bladed axes, axe-adzes, sickles and chisels.|$|R
40|$|Spin is {{a general}} {{verification}} tool for proving correctness properties of concurrent/distributed systems specified in the CSP-like modeling language PROMELA. We extend PROMELA's syntax to differentiate between external and internal transitions in a given model and the <b>SPIN</b> <b>tool</b> {{with the ability to}} verify a particular class of semantic relations between two PROMELA models. This document describes this extension and gives an overview of the relevant theoretical foundations...|$|R
3000|$|In the Web service {{composition}} {{part the}} related services are invoked and composed using BPEL 4 WS. While composing, the partner {{links between the}} services are identified. Based on the established links the composition process has been completed. The Web services are created by using Java through Net Beans. After completing the composition, the BPEL file is mapped into Muller automata notations and saved as xml files. For retrieving the xml content from xml file “XPath” xml query language is used. Services are retrieved from xml for converting into Promela and it is stored as variable in pml file and if service is available, it gets increment or it returns service is zero. The xml file is transformed into [...].pml file and pml file is given as input to <b>spin</b> <b>tool</b> for verifying the composed services. <b>Spin</b> <b>tool</b> will generate the automata diagram for the given pml input and safety, Reachability property is verified using that tool. An algorithm is designed for verifying the dead transitions present in the diagram.|$|R
40|$|In {{this paper}} we {{report about the}} {{construction}} of a tool for conformance testing based on <b>Spin.</b> The <b>Spin</b> <b>tool</b> has been adapted such it can derive test primitives from systems described in Promela. These primitives support the on-the-fly conformance testing process. Traditional derivation of tests from formal specifications suffers from the state-space explosion problem and from complexity. Spin {{is one of the most}} advanced model checkers with respect to handling large state spaces. This advantage of Spin has been used for the derivation of test primitives from a Promela description. To reduce the state space, we introduce the on-the-fly testing framework. Within this framework the Primer is distinguished. This Primer derives test primitives from a model of a system according to a well defined and complete testing theory. Algorithms are presented which enable us to derive test primitives from a Promela description. These algorithms have been implemented in the adapted version of the <b>Spin</b> <b>tool</b> which acts as the Primer in the framework. As a result of this prototype study it is concluded that it is in principle possible to derive these primitives automatically from Promela descriptions, and to perform testing...|$|R
40|$|Electronic Commerce and Internet are profoundly {{changing}} the way goods are exchanged, {{but there is still}} little confidence among users concerning the security of their data. The application of formal techniques to the modelling and design of electronic commerce protocols should help to improve their reliability and so enhance the choices of these new technologies. In this paper, basic concepts of security and payment protocols are described, the NetBill protocol is graphically specified and its behaviour in terms of reliability is formally verified using the <b>SPIN</b> <b>tool...</b>|$|R
40|$|In {{this paper}} we {{report about the}} {{construction}} of a tool for conformance testing based on <b>Spin.</b> The <b>Spin</b> <b>tool</b> has been adapted such it can derive test primitives from systems described in Promela. These prmitives suppor t the on-the-fly confor mance testing process. Tr aditional der ivation of testsfr omfor mal specifications suffer s fr om the state-space explosion pr oblem and from complexity. Spin {{is one of the most}} advanced model checker s with r espect to handling large state spaces. This advantage of Spin has been used for the der vation of test pr imitivesfr a a descr ption. To r educe the state space, we intr duce the on-the-fly testing framework. Within this fr or thePr is distinguished. ThisPr der es test pr ives fr a model of a system accor ng to a well defined and complete testing theory. Algor ithms arpr sented which enable us to der ive test primitives from a a description. These algor ithms have been implemented in the adapted ver of the <b>Spin</b> <b>tool</b> which acts as thePr in the framework. As a result of this prototype study it is concluded that it is in principle possible to derive these primitives automatically from a descriptions, and to perform testing...|$|R
40|$|In {{this paper}} {{we report on}} the {{construction}} of a tool for conformance testing based on <b>Spin.</b> The <b>Spin</b> <b>tool</b> has been adapted such that it can derive the building blocks for constructing test cases, called test primitives, from systems described in Promela. The test primitives support the on-the-fly conformance testing process. Traditional derivation of tests from formal specifications suffers from the state-space explosion problem. Spin {{is one of the most}} advanced model checkers with respect to handling large state spaces. This advantage of Spin has been used for the derivation of test primitives from a Promela description. To reduce the state space, we introduce the on-the-fly testing framework. One of the components within this framework is the Primer. The Primer is responsible for deriving test primitives from a model of a system according to a well-defined and complete testing theory. Algorithms are presented which enable us to derive test primitives from a Promela description. These algorithms have been implemented in the adapted version of the <b>Spin</b> <b>tool</b> which acts as the Primer in the framework. Promising experiments have been carried out on an example case study. As a result of this study it is concluded that it is possible to derive test primitives automatically from Promela descriptions, construct test cases from these test primitives, and execute the test cases on-the-fly. ...|$|R
30|$|In this paper, a {{new model}} called ESAM has been {{proposed}} and a new algorithm called Amend Stacked Muller Automata Algorithm has been proposed for the verification of web services composition. Web services are created and composed using BPEL 4 WS, and then it is mapped into Amend Muller Automata notations and transformed into Promela. <b>SPIN</b> <b>tool</b> is used for verifying the composed web services. We experimentally confirmed that our approach can bring 90 % reduction of Reach ability, Dead Transitions and verify the safety correctness property effectively in verification process. Hence the proposed model is suitable for a non-deterministic system and also considers the verification part.|$|R
40|$|Abstract—Complex {{transactions}} {{are part of}} the most com-monly used systems. Substantial part of such {{transactions are}} business transactions. Usually, they coordinate complex interaction among multiple systems, so called Long Running Transactions (LRT). Well known roll-back mechanism does not suffice to handle faults in LRTs, therefore compensation mechanisms are introduced. However, introduced structures are rather complex and hard to be understood and handled. Formal methods are well known tool for modelling, analysis and synthesis of complex systems. In this paper we introduce a work in progress, a technique that allows modelling LRTs using Compensating CSP, then translating them to Promela language and analysing using <b>SPIN</b> <b>tool.</b> We exemplify it usin...|$|R
40|$|The {{ignoring}} problem {{refers to}} the fact that some actions may be infinitely postponed by a state space search algorithm that makes use of partial order reduction (POR). The prevention of this phenomenon is mandatory if one wants to verify more elaborate properties than the deadlock freeness, e. g., safety or liveness properties. We present in this work some solutions to this problem. In order to assess the quality of our propositions, we included them in our model checker Helena. We report the result of some experiments which show that our algorithms yield bet- ter reductions than state of the art algorithms like those implemented in the <b>Spin</b> <b>tool...</b>|$|R
40|$|This paper {{compares the}} <b>tools</b> <b>SPIN</b> and UPPAAL by {{modelling}} and verifying a Collision Avoidance Protocol for an Ethernet [...] like medium. We find that SPIN {{is well suited}} for modelling the untimed aspects of the protocol processes and for expressing the relevant (untimed) properties. However, the modelling of the media becomes ackward {{due to the lack}} of broadcast communication in the PROMELA language. On the other hand we find it easy to model the timed aspects using the UPPAAL tool. Especially, the notion of committed locations supports the modelling of broadcast communication. However, the property language of UPPAAL lacks some expessivity for verification of bounded liveness properties, and we indicate how timed testing automata may be constructed for such properties, inspired by the (untimed) checking automata of SPIN. 1 Motivation During the last few years, the <b>SPIN</b> <b>tool</b> [Hol 91] has attracted much interest from university people teaching formal methods and from industrial developers [...] . ...|$|R
40|$|We propose an {{approach}} to validate a ruleoriented specif ication by a systematic embedding {{of this kind of}} specif ication into a Promela validation model. The approach is illustrated with a case study about a nuclear power station cooling system. We start with an initial logical specif ication given as a rule-oriented model of the system. The study focusses on the systematic derivation of a Promela validation model from the initial model and then its validation. The rule-oriented model is matched with a Promela model {{on the basis of a}} control-oriented architecture. The obtained model is complemented by correctness properties and is then validated with respect to these properties using the <b>Spin</b> <b>tool.</b> 1...|$|R
40|$|Cooperative communications, {{in which}} a relay node assists the source node to deliver its packets to the {{destination}} node thus adding diversity, is gaining more attention within the research community. The initial studies on the physical layer have shown significant gains from cooperative diversity in terms of reliability, coverage range and energy efficiency. A Cooperative Automatic Repeat reQuest MAC protocol, (C-ARQ), has been proposed to utilize cooperative diversity from the MAC layer. In this paper, we inspect this novel C-ARQ protocol to check its integrity and validity using formal methods. The protocol logic is modeled in SDL and implemented in PROMELA. The functionality of the C-ARQ protocol is confirmed through simulations and verified using the <b>SPIN</b> <b>tool.</b> ...|$|R
40|$|Complex {{transactions}} {{are part of}} the most commonly used systems. Substantial part of such {{transactions are}} business transactions. Usually, they coordinate complex interaction among multiple systems, so called Long Running Transactions (LRT). Well known roll-back mechanism does not suffice to handle faults in LRTs, therefore compensation mechanisms are introduced. However, introduced structures are rather complex and hard to be understood and handled. Formal methods are well known tool for modelling, analysis and synthesis of complex systems. In this paper we introduce a work in progress, a technique that allows modelling LRTs using Compensating CSP, then translating them to Promela language and analysing using <b>SPIN</b> <b>tool.</b> We exemplify it using Car Broker Service...|$|R
40|$|Abstract:For {{the formal}} {{verification}} of software, a verification tool {{has to be}} selected and it should check whether the system meets the specification given by the developer. The SPIN (Simple Promela Interface) tool is selected as the verification <b>tool.</b> <b>SPIN</b> accepts two inputs, PROMELA (Process Meta Language) and LTL (Linear Temporal Logic). The code to be tested is in C language. A conversion of C code into PROMELA by preserving the logic has to be done. After the detailed study of code {{and with the help}} of specifications given by the developer, the desired states are identified and these states are manually represented in LTL formula. Desired states are those, which should be met at every part of the code. The other important task is to make <b>SPIN</b> <b>tool</b> facilitate unit testing. For this, C code has to be embedded with promela and make same variables accessed by both languages. After completion of above mentioned tasks the PROMELA and LTL are fed to SPIN, giving the outputs as reached/unreached states...|$|R
40|$|Abstract — For {{developing}} embedded systems, {{the design}} process may benefit in some contexts from the usage of formal methods, namely to find critical errors and flaws, before final design and implementation decisions are taken. The Synchronous and Interpreted Petri Net (SIP-net) modelling language is considered in this article to model embedded systems. This model of computation is based on safe Petri nets with guarded transitions and synchronous transitions firing, and also includes enabling and inhibitor arcs. The <b>Spin</b> <b>tool,</b> whose input language is PROMELA, is a verification system based on model checking techniques. This article presents a program to translate SIP-net models into PROMELA code and discusses in detail {{the adequacy of the}} created PROMELA specification for verification through model checking techniques...|$|R
40|$|We {{present a}} new {{verification}} technique for Promela which exploits state-space symmetries induced by scalarset values {{used in a}} model. The technique involves efficiently computing a marker for each state encountered during search. We propose a complete verification method which only partially exploits symmetry, and an approximate verification method which fully exploits symmetry. We describe how symmetry markers can be efficiently computed and integrated into the <b>Spin</b> <b>tool,</b> and provide an empirical evaluation of our technique using the Topspin symmetry reduction package, which shows very good performance results and {{a high degree of}} precision for the approximate method (i. e. very few non-symmetric states receive the same marker). We also identify a class of models for which the approximate technique is precise...|$|R
40|$|This study {{presents}} a Semantic Web Services composition method based on Model-Driven Architecture (MDA). It uses UML class and use-case diagram {{to build a}} model of static composition for OWL-S and it uses activity diagram to build a model of dynamic composition for OWL-S. Based on semantic matching degree, the matching methods are used to select {{a subset of the}} available web services and then the most suitable composite web services is identified. Through a translation to a verifiable Promela model, the composition UML models are verified by <b>SPIN</b> <b>tool.</b> The verified UML models are stored as templates in the knowledge base of ontology for reuse. Present method not only improves the development efficiency of the semantic web, but, also ensures the correctness of the composition process...|$|R
5000|$|<b>SPIN</b> {{a general}} <b>tool</b> for verifying the {{correctness}} of distributed software models in a rigorous and mostly automated fashion.|$|R
40|$|Abstract. We {{study the}} formal {{verification}} of programs written in dSL, {{an extension of}} the standard ST language used to program industrial controllers. It proposes a trade off between industrial and formal verification worlds. The main advantage of dSL is to provide a transparent code distribution through low level communication mechanisms. The behavior of the synthesized distributed system can therefore be formally modeled, easily monitored and formally verified. The verification of a dSL program, realized with the <b>Spin</b> <b>tool,</b> is eased by the definition of a lattice of models linked with a simulation relation preserving next-free Ltl formulae. We show that, although dSL is an industrial programming language, it gives the possibility to verify systems designed with it. We illustrate the benefit of our approach with a simple control system of two canal locks...|$|R
