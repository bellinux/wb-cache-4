115|211|Public
5000|$|OWASP Application <b>Security</b> <b>Verification</b> Standard (ASVS): A {{standard}} for performing application-level security verifications.|$|E
50|$|In January 2010, the Chinese {{search engine}} Baidu sued Register.com for gross {{negligence}} after an employee allegedly allowed {{a third party}} access to Baidu's account despite them failing to pass basic <b>security</b> <b>verification,</b> allowing their website to be hijacked by the Iranian Cyber Army.|$|E
50|$|For {{three years}} he was a Senior Vice President with JAYCOR, a California-based research, development, and systems {{engineering}} firm. At the firm’s Virginia office he led the Strategic Programs and Analysis Group, a 180-person group working {{in the areas of}} intelligence, <b>security,</b> <b>verification,</b> counter-proliferation, strategic offensive and defensive analysis, operations security, and special operations.|$|E
5000|$|Lack of {{peer review}} prohibits {{external}} <b>security</b> code <b>verification.</b>|$|R
50|$|GeoEdge is a {{provider}} of ad <b>security</b> and <b>verification</b> solutions for the online and mobile advertising industry. GeoEdge guards against non-compliance, malware, inappropriate content, data leakage, operational, and performance issues.|$|R
5000|$|Mechanisms {{for adding}} <b>security</b> and {{reliability}} <b>verification</b> to the language: extended static checking, dependent typing, information flow control, static thread safety.|$|R
50|$|However the {{government}} turned down this suggestion and instead {{the site was}} used exclusively as a vehicle processing centre during the conference. Over 1,000 vehicles traveled {{to and from the}} conference venue on a daily basis. All vehicles and their drivers and passengers had to go through screening at the Tamar Site for <b>security</b> <b>verification</b> before being allowed to enter the conference venue.|$|E
50|$|In djbdns, {{different}} {{features and}} services are split off into separate programs. For example, zone transfers, zone file parsing, caching, and recursive resolving are implemented as separate programs. The result of these design decisions is a reduction in code size {{and complexity of the}} daemon program that provides the core function of answering lookup requests. Bernstein asserts that this is true to the spirit of the Unix operating system, and makes <b>security</b> <b>verification</b> much simpler.|$|E
50|$|On occasion, {{negligence}} {{or computer}} error {{may make a}} merchant attempt to authorize a card twice, creating a double hold on the cardholder's bank account. That often happens when a processor requires additional <b>security</b> <b>verification</b> such as a card security code, ZIP code, or address, and incorrect information is provided or is mistyped. Gasoline pumps often impose a double hold, one for a standard amount (such as $75) and another {{for the amount of}} purchase. Though the merchant will clear the transaction only once, the hold will temporarily lower the customer's available balance, potentially causing declines or, for a debit card, even overdrafts.|$|E
40|$|Abstract. After a short {{introduction}} {{to the field of}} <b>security</b> protocol <b>verification,</b> we present the automatic protocol verifier CryptoVerif. In contrast to most previous protocol verifiers, CryptoVerif does not rely on the Dolev-Yao model, but on the computational model. It produces proofs presented as sequences of games, lik...|$|R
5000|$|Some {{manufacturers}} {{claim that}} STK enables {{higher levels of}} <b>security</b> through identity <b>verification</b> and encryption, which are necessary for secure electronic commerce.|$|R
40|$|Code {{instrumentation}} is {{a mechanism}} that allows modules of programs {{to be completely}} rewritten at runtime. With the advent of virtual machines, this type of functionality {{is becoming more and}} more interesting because it allows the introduction of new functionality after an application has been deployed, easy implementation of aspect-oriented programming, performing <b>security</b> <b>verifications,</b> dynamic software upgrading, among others. The Runtime Assembly Instrumentation Library (RAIL) is one of the first frameworks to implement code instrumentation in the. NET platform. It specifically addresses the limitations that exist between the reflection capabilities of. NET and its code emission functionalities. RAIL gives the programmer an object-oriented vision of the code of an application, allowing assemblies, modules, classes, references and even intermediate code to be easily manipulated. This paper addresses the design of an implementation of RAIL along with the difficulties and lessons learnt in building a framework for code instrumentation in. NET...|$|R
5000|$|On January 12, 2010, Baidu.com's DNS {{records in}} the United States were altered such that browsers to baidu.com were {{redirected}} to a website purporting to be the Iranian Cyber Army, thought to be behind the attack on Twitter during the 2009 Iranian election protests, making the proper site unusable for four hours. Internet users were met with a page saying [...] "This site has been attacked by Iranian Cyber Army". Chinese hackers later responded by attacking Iranian websites and leaving messages.Baidu later launched legal action against Register.com for gross negligence after {{it was revealed that}} Register.com's technical support staff changed the email address for Baidu.com on the request of an unnamed individual, despite failing <b>security</b> <b>verification</b> procedures. Once the address had been changed, the individual was able to use the forgotten password feature to have Baidu's domain passwords sent directly to them, allowing them to accomplish the domain hijacking.|$|E
30|$|The BAN logic formal {{verification}} tool has been employed in aid design of 3 PAKE protocol for authentication and <b>security</b> <b>verification.</b>|$|E
40|$|AbstractSecurity-as-a-service is an {{emerging}} area in cloud computing. Traditionally, security approaches are service provider-centric and provider-driven. In this paper, we propose {{a model for}} security-as-a-service using “crowdsourcing”. Though crowdsourcing {{has been used to}} provide specific security services like browser security, detecting phishing attacks, detecting cybersecurity threats, there has been no work which provides a unified framework to provide different types of <b>security</b> <b>verification.</b> Dispersed computing power of devices is used to perform security verifications. This is done by subscribers in a collaborative way, using their idle resources, in exchange of certain incentives. Our architecture guarantees anonymity of users who request service and the crowd who contribute in verification by using virtualization concepts and virtual machines. Moreover, we propose an approach for managing these <b>security</b> <b>verification</b> jobs, subscribers in a fault tolerant manner. To the best of our knowledge, we are the first to propose a unified security-as-a-service framework using crowdsourcing, thus introducing a new research problem. We discuss a number of applications, challenges and problems of crowdsourcing in <b>security</b> <b>verification...</b>|$|E
5000|$|In 2011 the Social Security Administration (SSA) {{ended the}} {{practice}} of allowing gender to be matched in its Social <b>Security</b> Number <b>Verification</b> System (SSNVS). Therefore, the Social Security Administration no longer sends notifications that alert employers when the gender marker on an employee's W-2 does not match Social Security records, a practice that [...] "outed" [...] some transgender Americans in the past.|$|R
40|$|SPIN {{is a model}} {{checking}} tool. This paper presents {{some ideas}} on how SPIN/PROMELA {{can be adapted to}} cover <b>security</b> protocol <b>verification.</b> Existing methods are usually based on logical deduction and theorem proving, and I briefly describe the strength and weaknesses of BAN logic {{which is one of the}} methods most widely used. The goal of using SPIN for <b>security</b> protocol <b>verification</b> is to see whether model checking can be used to find protocol weaknesses which other methods leave undetected. A brief description of a practical realisation is given, and the difficulties, which are the specification and implementation of the model and the state space explosion, are pointed out. 1 Introduction Security protocols are seemingly easy to design but surprisingly difficult to get right. Many different schemes for digital signature, authentication and other security services are published each year. Security protocols of this kind usually consist of 2 - 5 messages, which is quite a small number. A hu [...] ...|$|R
50|$|Programming {{language}} evolution continues, in both {{industry and}} research. Current directions include <b>security</b> and reliability <b>verification,</b> {{new kinds of}} modularity (mixins, delegates, aspects), and database integration such as Microsoft's LINQ.|$|R
40|$|We {{propose a}} {{practical}} quantum cryptographic scheme which combines high information capacity, such as provided by high-dimensional quantum entanglement, with {{the simplicity of}} a two-dimensional Clauser-Horne-Shimony-Holt (CHSH) Bell test for <b>security</b> <b>verification.</b> By applying a state combining entanglement in a two-dimensional degree of freedom, such as photon polarization, with high-dimensional correlations in another degree of freedom, such as photon orbital angular momentum (OAM) or path, the scheme provides a considerably simplified route towards <b>security</b> <b>verification</b> in quantum key distribution (QKD) aimed at exploiting high-dimensional quantum systems for increased secure key rates. It also benefits from security against collective attacks and is feasible using currently available technologies. Comment: 7 pages, 3 figure...|$|E
40|$|Eunyoung Lee Andrew W. Appel Department of Computer Science Princeton University {elee,appel}@cs. princeton. edu Categories and Subject Descriptors D. 2. 4 [Software Engineering]: Software/Program Verification [...] -formal methods, {{assertion}} checkers General Terms Languages, <b>Security,</b> <b>Verification</b> Keywords Linking, component composition, formal logic, proof-carrying 1...|$|E
40|$|Optical and {{photonic}} {{systems and}} devices have significant potential for homeland security. This title presents significant technical contributions from leaders of industry, government, and academia {{in the field}} of optical and photonic sensors, systems and devices for detection, identification, prevention, sensing, <b>security,</b> <b>verification,</b> and more...|$|E
40|$|<b>Security</b> {{protocol}} <b>verification</b> {{has been}} a very active research area since the 1990 s. This paper surveys various approaches in this area, considering the verification in the symbolic model, as well as the more recent approaches that rely on the computational model or that verify protocol implementations rather than specifications. Additionally, we briefly describe our symbolic security protocol verifier ProVerif and situate it among these approaches...|$|R
40|$|This thesis {{promotes}} {{the use of}} directed model checking for <b>security</b> protocol <b>verification.</b> In particular, we investigated the possibility of designing heuristics that can reduce the overall size of the state space and can direct the search towards states containing an attack. More precisely, •	We have designed three property-specific heuristics namely H 1, H 2, and H 3. The heuristics derive their hints from the security property to be verified and assign weights to states according to their possibility of leading to an attack. •	 H 1 is formally proved correct, i. e., the states pruned by the heuristic H 1 do not contain any attack. •	An existing tool ASPASyA with conventional model checking algorithm (i. e., depth first search) has been modified so as to integrate our heuristics into it. The resulting tool H -ASPASyA uses an informed search algorithm that is equipped with our heuristics. The heuristics evaluate the states which are then explored in decreasing order of their weights. •	The new tool H -ASPASyA is tested against a few protocols to gauge the performance of our heuristics. The results demonstrate the efficiency of our approach. It is worth mentioning that despite being a widely applied verification technique, model checking suffers from the state space explosion problem. Recently directed model checking {{has been used to}} mitigate the state space explosion problem in general model checking. However, the directed model checking approaches have not been studied extensively for <b>security</b> protocol <b>verification.</b> This thesis demonstrates the fact that directed model checking can be adapted for <b>security</b> protocol <b>verification</b> in order to yield better results...|$|R
40|$|We {{present an}} {{advanced}} modeling and verification toolbox for functional programs {{with state and}} exceptions. The toolbox integrates an extensible, monad-based, component model, a monad-based Hoare logic and weakest prcondition calculus, and proof systems for temporal logic and bisimilarity. It is im-plemented in Isabelle/HOL using shallow embeddings and incorporates as much modeling and reasoning power as possible from Isabelle/HOL. We have validated the toolbox’s usefulness in a substantial <b>security</b> protocol <b>verification</b> project...|$|R
40|$|Large prime numbers, {{useful in}} number theory and encryption, require {{large amounts of}} {{computational}} time to find. This project aims {{to break up the}} task of finding them by using distributed computing as well as optimized algorithms. This presentation will cover the techniques used, issues involved including <b>security,</b> <b>verification</b> and performance...|$|E
40|$|Abstract. Call by {{contract}} {{is a way}} to specify and use interchangeable services in secure protocols, so that protocols and services can be independently designed and verified. A selection algorithm is given to test whether a candidate service is uniformly selectable. To facilitate independent <b>security</b> <b>verification</b> of the calling protocol and its services, contracts and requests also provide an NDA (Non-Disclosure Agreement). Informally, NDAs are confidentiality constraints on parameters. ...|$|E
40|$|The {{aim of this}} Dagstuhl Seminar was {{to bring}} {{together}} researchers from various research areas related to the theory and application of tree transducers. Recently, interest in tree transducers has been revived due to surprising new applications {{in areas such as}} XML databases, <b>security</b> <b>verification,</b> programming language theory, and linguistics. This seminar therefore aimed to inspire the exchange of theoretical results and information regarding the practical requirements related to tree transducers...|$|E
40|$|Dr. Glen Warren, {{a nuclear}} {{physicist}} in the radiation detection and nuclear sciences group at Pacific Northwest National Laboratory, discusses the challenges presented by nuclear weapon dismantlement verification. He shares his experience {{working on a}} project to design {{a system that is}} capable of verifying nuclear weapon dismantlement, and he explains that the successful design is less focused on the technologies of the measurements and more focused on satisfying the <b>security</b> and <b>verification</b> challenges...|$|R
40|$|This paper {{presents}} a smart card system design for use within the MIT community. The proposed design employs a token-based access-control model, where access is granted by group membership {{and not by}} individual identity. Several encryption and authentication methods ensure <b>security</b> for <b>verification</b> and token#key distribution. Users perform access-control administration in a distributed and delegated manner. The design addresses tradeoffs between functionality and privacy while attempting to ensure a secure and easily maintainable system...|$|R
40|$|I present my {{previous}} research activities. I do present both the theoretical {{results and the}} software implementa-tions of my research results. Research Interests Application domains software validation system safety runtime <b>verification</b> <b>security</b> runtime enforcement embedded systems conformance testin...|$|R
40|$|The {{objective}} {{of this paper is}} to give a brief introduction to distributed object technology and an overview of security features available in Microsoft. NET and CORBA. The paper explains the architecture of. NET and covers some of its key security concepts like Security Policy, Code Access Security, Role Based <b>Security,</b> <b>Verification</b> and Stackwalk. It also explains CORBA and its security concepts like CORBA Security Services, Security Specifications, Security Policy, Domain Access Policy and Delegation. The paper conclu [...] ...|$|E
40|$|AbstractChannel {{modeling}} {{is crucial}} for studying the behavior of quantum channels {{in order to build}} an efficient error correction scheme in addition to <b>security</b> <b>verification</b> of different protocols. While most current analyses of quantum protocols use a traditional mathematical approach, we employ a simpler probabilistic model checking which is more compatible with classical implementations to investigate the dependency of the security on the quantum channel noise. We also compare a couple of eavesdropping strategies from the security point of view...|$|E
40|$|Terahertz {{holographic}} imaging has broad {{applications in}} the field of personal <b>security</b> <b>verification,</b> concealed weapon detection, and non-destructive testing. To suppress the range ambiguity, a fast sparse image reconstruction approach and imaging scheme is proposed for three-dimensional terahertz holography. The proposed algorithm establishes the terahertz imaging geometry and corresponding echo model. The range ambiguity is eliminated using the random step frequency method, and a frequency shift procedure is applied to recover the targets with a high computational efficiency. Simulation and experimental results verify the proposed algorithm...|$|E
50|$|Interactive Theorem Proving (ITP) is {{an annual}} {{international}} academic {{conference on the}} topic of automated theorem proving, proof assistants and related topics, ranging from theoretical foundations to implementation aspects and applications in program <b>verification,</b> <b>security,</b> and formalization of mathematics.|$|R
25|$|The {{third floor}} houses seminar rooms and {{computer}} labs, {{as well as}} the Department of Political Science and its offices. The fourth floor houses additional seminar and computer rooms, {{as well as the}} Department of Economics and its offices. The fifth and sixth floors of this building are restricted access and can be entered only via <b>security</b> card <b>verification.</b> These two restricted floors are home to the Jack & Nora Walker Canadian Centre for Lifespan Development Research.|$|R
40|$|A {{prototype}} <b>security</b> policy <b>verification</b> {{system for}} Action-Script binaries is presented, whose implementation leverages {{recent advances in}} co-logic programming. Our experience with co-logic programming indicates {{that it is an}} extremely useful paradigm for elegantly expressing algorithms that {{lie at the heart of}} model-checking technologies. This results in an unusually small trusted computing base, making the verification system well-suited to frameworks like certifying in-lined reference monitoring systems, which require small, light-weight verifiers. Preliminary experiments and progress are discussed...|$|R
