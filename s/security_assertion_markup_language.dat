91|5368|Public
5000|$|Interaction between {{applications}} and modules {{are based on}} industry standards such as <b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> (or SAML).|$|E
5000|$|SAML — <b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language,</b> a {{standard}} XML-based {{framework for the}} secure exchange of authentication and authorization information.|$|E
50|$|Building on this work, in November 2002 OASIS {{announced}} the <b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML) V1.0 specification as an OASIS Standard.|$|E
40|$|In many of {{the single}} sign-on (SSO) {{specifications}} that support multitiered authentication, it is not mandatory to include the authentication context in a signed response. This can be exploited by the adversaries to launch {{a new kind of}} attack specific to SSO systems. In this paper, we propose the Weakest Link Attack, which is a kind of parallel session attack feasible in the above settings. Our attack enables adversaries to succeed at all levels of authentication associate to the victim user by breaking only at the weakest one. We present a detailed case study of our attack on web SSO as specified in <b>Security</b> <b>Assertions</b> <b>Markup</b> <b>Language</b> (SAML) V 2. 0, an OASIS standard released in March, 2005. We also suggest the corresponding repair {{at the end of the}} paper. 1 © Springer-Verlag Berlin Heidelberg 2006. link_to_subscribed_fulltex...|$|R
40|$|Abstract—UNICORE (UNiform Interface to COmputing RE-sources) is a Grid {{middleware}} for accessing {{high-performance computing}} capabilities and storage resources in a secure and seamless fashion. In its current version (7. 0), it offers web services using SOAP (Simple Object Access Protocol) {{in conjunction with}} a security stack based on the <b>Security</b> <b>Assertions</b> <b>Markup</b> <b>Language</b> (SAML) and the WS-Security specification. To accom-modate recent integration use cases, the need for more lightweight ways to access resources through UNICORE has arisen. This work describes the architecture, design, and first implementation results of an interface to UNICORE services based on the REST (Representational State Transfer) architectural style. Crucial boundary conditions included a lightweight security layer, and full interoperability with the existing SOAP-based interfaces. This RESTful interface will greatly simplify access to and interaction with the UNICORE services and enable new use cases. It will allow integrating high-performance computing and data management services into web-based and mobile applications...|$|R
40|$|The Simple Object Access Protocol (SOAP) is an XML-based {{messaging}} protocol {{used primarily}} as the wire format for a {{remote procedure call}} (RPC). SOAP offers advantages for RPC communications on the Internet. SOAP messages piggyback on HTTP {{and are able to}} penetrate Internet firewalls and reach distributed computing applications. SOAP also holds the promise of enabling interoperability between competing heterogeneous RPCbased systems. However, SOAP lacks standard security provisions for remote procedure calls. This paper presents Secure-SOAP, an open architecture leveraging existing web security technology that provides confidentiality, integrity, authentication, and authorization for SOAP RPC requests. The architecture includes a general-purpose authorization module based on the emerging <b>Security</b> <b>Assertions</b> <b>Markup</b> <b>Language</b> (SAML) standard. The authorization module can be invoked at a policy enforcement point just prior to the server invoking the remote method in order to enforce access control for SOAP RPC requests. The architecture demonstrates how any SAMLcompliant authorization service acting as a policy decision point can be readily integrated with a SOAP RPC system to provide access control to SOAP RPC requests...|$|R
5000|$|Extensible Markup Language (XML): Most SAML exchanges are {{expressed}} in a standardized dialect of XML, which is the root for the name SAML (<b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language).</b>|$|E
5000|$|The Authentication Service is {{responsible}} for the creation of <b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML) assertions confirming to Service Providers (SPs) that a successful user authentication dialog has taken place.|$|E
50|$|<b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML) is an XML {{standard}} for exchanging authentication and authorization data between security domains. SAML {{is a product}} of the OASIS (organization) Security Services Technical Committee.|$|E
40|$|The {{provision}} {{of one or}} more separate authorisation infrastructures, comparable to the existing Grid authentication infrastructure, is desirable, since it will allow Grid applications to plug and play different authorisation infrastructures in order to choose the best one for their needs. The first half of this paper describes the features that are needed from this interface. Whilst it is possible to standardise every conceivable feature of this interface, it is not practical in the short term, since no existing authorisation infrastructure could easily comply with it, nor are we yet sure of the full set of requirements. Rather, this paper presents the basic minimum set of features that are needed to provide an initial plug and play functionality. Other features, such as a management interface, may be standardised in the future, whilst yet other features may continue to be met in an implementation specific manner. The seco nd half of this paper provides a brief introduction to the <b>Security</b> <b>Assertions</b> <b>Markup</b> <b>Language</b> (SAML) and says how each of the initial authorisation interface requirements can be met by either the basic SAMLv 1. 0 specification or by extensions to it. The paper concludes by anticipating the future standardisation effort that will be needed to completely specify an authorisation interface for the Grid. 1...|$|R
40|$|Web Service {{security}} {{is an ongoing}} battle. On one side are {{those who want to}} break into the service providers system, either for fun or for some advantage to themselves or their organization. On the other side are people who are putting up defences to prevent these break-ins. This ongoing battle results in continuing changes to security solutions. Another dimension is that there is an evolving set of security requirements, such as giving a new group of outsiders controlled access to the system for e-business purposes. The breadth of information security in Web Services applications is broader than one might expect. Web Services change the risk levels associated with deploying software because of the increased ability to access data, and as a consequence, {{security is}} becoming an important design issue for any for any e-business software component, and the security solution depends on the security mechanisms available on the selected application platform. In this work {{it has been shown that}} applications requiring Web Security services can utilize a unified architecture. Authentication, authorization, administration and cryptography security services can be provided by a lightweight but strong architecture common to most applications. Security of Web Services is still under the ongoing working draft by the OASIS WS-Sec Technical Committee. There are some implementations provided by Microsoft, Verisign, IBM Sphere, BEA, etc. The use of new and emerging security standards such as XML Signature, XML Encryption/Decryption, WS-security and SAML is both a benefit and a threat for the Web Services application. The implementation of such service might face major obstacles because of a continuous changes in the specifications. In addition, the specifications are often too complicated, which indicates misunderstandings and implementations that possibly will not interoperate. To avoid this type of problems the specifications of the standard bodies should be written more tightly and include more examples addressing practical use cases. In the future, the new security standards will certainly be dominating the Web Services on the Internet and may be a good investment. In this work, an assessment of the various security concerns and implications for Web Services, and the different means to address them with a focus on security standards have been provided. Standard bodies W 3 C, OASIS, and other industry leaders are intensively reviewing security techniques and models to ensure the protection of exposed critical business data and processes in a standard way. Technologies to secure Web Services at the transport level and at the XML level play a crucial role when designing and developing the security architecture of services on the Internet. These include the emerging XML security standards such as XML Digital Signatures, XML Encryption/Decryption, <b>Security</b> <b>Assertions</b> <b>Markup</b> <b>Language,</b> WS-Security and long-accepted standards such as SSL and Kerberos. Each of them addresses various aspects of the security requirements for authentication, authorization, confidentiality, integrity and non-repudiation. Standards are fine and extremely important to achieve interoperability among different security implementations, though there still does not exist a clear way to combine them in order to compose a comprehensive end-to-end security framework. In the absence of such Web Services implementers are turning to specific products and vendors to address critical security needs. The Web Services security challenges include interoperability problems (between tiers, between security technologies, processing domains, that is, corporate enterprises or business units), lack of sufficiently detailed specifications, overlap and redundancy among specifications, and a high total cost of implementation. The specifications are important for security because, in these area more than any other, it is needed to use the techniques that have been designed and tested by independent security professionals and that have withstood the assaults of these professionals for some time. Security is complex. It requires the skill and experience of professionals to design a model to avoid vulnerabilities. Web Services will take a long time before the full security implications are understood and then resolved. For the time being I recommend, to have a Microsoft strategy, because Microsoft will promote its own security products and strategies and will inevitably be successful in acquirement of various users. In general, it seems that the security specifications are moving in the right direction and addressing the right problems, but that they still have a way to go to be practically applicable...|$|R
50|$|The Service Provisioning <b>Markup</b> <b>language</b> is {{the open}} {{standard}} for the integration and interoperation of service provisioning requests. SPML is an OASIS standard based on the concepts of Directory Service <b>Markup</b> <b>Language.</b> SPML version 1.0 was approved in October 2003. SPML version 2.0 was approved in April 2006.Security <b>Assertion</b> <b>Markup</b> <b>Language</b> exchanges the authorization data.|$|R
50|$|Technologies {{used for}} federated {{identity}} include SAML (<b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language),</b> OAuth, OpenID, Security Tokens (Simple Web Tokens, JSON Web Tokens, and SAML assertions), Web Service Specifications, Microsoft Azure Cloud Services, and Windows Identity Foundation.|$|E
50|$|In February 2007 Oracle Corporation contributed the Identity Governance Framework to the alliance, which {{released}} {{the first version}} publicly in July 2007.The Identity Governance Framework defined how identity related information is used, stored, and propagated using protocols such as LDAP, <b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language,</b> WS-Trust, and ID-WSF.|$|E
50|$|The {{protocol}} specifies how {{integrity and}} confidentiality can be enforced on messages {{and allows the}} communication of various security token formats, such as <b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML), Kerberos, and X.509. Its main focus {{is the use of}} XML Signature and XML Encryption to provide end-to-end security.|$|E
40|$|Abstract. Over {{the last}} decade the <b>Security</b> <b>Assertion</b> <b>Markup</b> Lan-guage (SAML) {{framework}} evolved to a versatile standard for exchanging security statements about subjects. Most notably, SAML facilitates the authentication of users, and is thus deployed in both Webservice (SOAP, WS-Security) and REST-based (SAML SSO webbrowser profile, SAML Bearer token in OAuth) services. But at least SAML provides no stan-dardized, overall solution to transport key material. This paper recommends an extension, STUCK- the SAML Transporta-tion Unit for Cryptographic Keys, to the SAML framework which pro-vides {{an easy way to}} transport cryptographic key material bound to assertions issued by particular subjects. The proposal fits into existing solutions and is fully compliant with the <b>Security</b> <b>Assertion</b> <b>Markup</b> Lan-guage, XML Digital Signature and XML Encryption standards...|$|R
40|$|Approved {{client-server}} authentication {{mechanisms are}} described for the IVOA single-sign-on profile: No Authentication; HTTP Basic Authentication; TLS with passwords; TLS with client certificates; Cookies; Open Authentication; <b>Security</b> <b>Assertion</b> <b>Markup</b> Language; OpenID. Normative rules are {{given for the}} implementation of these mechanisms, mainly by reference to pre-existing standards. The Authorization mechanisms are out of the scope of this document...|$|R
40|$|Abstract—We {{propose a}} web forward proxy server with {{authentication}} method using Shibboleth. With this proxy Single Sign-On would benefit a user and also authentication using Shibboleth protocol solves problems in basic access authenti-cation and digest access authentication supported by existing web forward proxy servers. In order to realize it, the proxy needs to recognize attributes of shibboleth protocol and session cookies and to modify session cookies. We implemented system and evaluated it by accessing to electronic journals from a test network. Keywords-Security <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML); Shibboleth; Single Sign-On (SSO); Web Forward Prox...|$|R
50|$|Identity {{federation}} can {{be accomplished}} any number of ways, some of which involve the use of formal Internet standards, such as the OASIS <b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML) specification, and {{some of which may}} involve open-source technologies and/or other openly published specifications (e.g. Information Cards, OpenID, the Higgins trust framework or Novell’s Bandit project).|$|E
50|$|Access Manager (a.k.a. NAM) is a Web access {{management}} product from NetIQ, now Micro Focus. Formerly owned by Novell, {{it was created}} as the successor to their iChain product. NAM provides single sign-on for web applications, a role-based SSL VPN and many globally recognized open standard federation protocols such as <b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> 1.x/2.x, WS-Federation, WS-Trust, CardSpace, OAuth, OpenID Connect, and others.|$|E
50|$|<b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML, {{pronounced}} sam-el) is an XML-based, open-standard {{data format}} for exchanging authentication and authorization data between parties, in particular, between an identity provider and a service provider. SAML {{is a product}} of the OASIS Security Services Technical Committee. SAML dates from 2001; the most recent major update of SAML was published in 2005, but protocol enhancements have steadily been added through additional, optional standards.|$|E
40|$|Abstract. The {{single point}} login and unified the {{identity}} authentication {{of the existing}} schemes of further research, realize the campus network based on single point login and unified SAML(Security <b>Assertion</b> <b>Markup</b> <b>Language)</b> identity authentication system. Digital campus requirements before the application of various independent integration system, so first must undertake unity identity authentication, such, users in the visit of the campus network resources and application system, just log on a campus network, can be achieved in the user rights within the entire network roaming and avoid {{a repeat of the}} user login and information redundancy...|$|R
40|$|This paper {{describes}} ongoing {{research and}} development aimed at creating a trustworthy software-based model called the Persona Concept. The "Persona Architecture" uses %veb services" to implement this model and {{is designed to provide}} the consumer direct control over their identity, credentials and private data. Credentials are expressed as third-party assertions encapsulated in certificates using Secure <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML) and are digitally signed. The architecture also supports distributed management of electronic credentials and aims at operating across various fixed and mobile platforms including cell phones and wireless Portable Digital Assistants(PDA's...|$|R
40|$|Abstract. This chapter {{identifies}} the main security requirements for Web services and it describes how such security requirements are addressed by standards for Web services security recently developed or under development by various standardizations bodies. Standards are reviewed {{according to a}} conceptual framework that groups them by the main functionalities they provide. Standards that are covered include most of the standards encompassed by the WSS roadmap [2]; the <b>Security</b> <b>Assertion</b> <b>Markup</b> Language-SAML-, WS-Policy, XACML, that is related to access control and has been recently extended with a profile for Web services access control; XKMS and WS-Trust; WS-Federation, LibertyAlliance and Shibboleth, that address the important problem of identity management in federated organizations. Finally, {{issues related to the}} use of the standards are discussed and open research issues in the area of access control for Web services and innovative digital identity management techniques are outlined. ...|$|R
50|$|<b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> 2.0 (SAML 2.0) is {{a version}} of the SAML {{standard}} for exchanging authentication and authorization data between security domains. SAML 2.0 is an XML-based protocol that uses security tokens containing assertions to pass information about a principal (usually an end user) between a SAML authority, named an Identity Provider, and a SAML consumer, named a Service Provider. SAML 2.0 enables web-based, cross-domain single sign-on (SSO), which helps reduce the administrative overhead of distributing multiple authentication tokens to the user.|$|E
50|$|The Shibboleth Internet2 {{middleware}} initiative {{created an}} architecture and open-source implementation for identity management and federated identity-based authentication and authorization (or access control) infrastructure based on <b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML). Federated identity allows {{the sharing of}} information about users from one security domain to the other organizations in a federation. This allows for cross-domain single sign-on and removes the need for content providers to maintain user names and passwords. Identity providers (IdPs) supply user information, while service providers (SPs) consume this information and give access to secure content.|$|E
50|$|The UCS RADIUS app secures {{access to}} the network via the RADIUS protocol. The UCS-integrated SAML app {{provides}} a Single_sign-on identity provider for UCS based on the <b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML) protocol and the SimpleSAMLphp software framework. With help of the identity provider, a single sign-on functionality for third party web services and applications (e.g., Google Apps, Salesforce.com etc.) can be realized while the authentication is done at the identity provider itself. The user management is done via UCS where users are individually activated for particular web services. In addition, the authentication process can be extended by a second factor (2-factor authentication) via privacyIDEA from the App Center.|$|E
40|$|Part 7 : Session 5 - Federated Identity ManagementInternational audienceSecurity <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML, in short) {{is one of}} {{the most}} widely used {{technologies}} to enable Identity Federation among organisations from different trust domains. Despite its several advantages, one of the key disadvantages of SAML is the mechanism by which an identity federation is established. This mechanism lacks flexibility to create a federation in a dynamic fashion to enable service provisioning (or de-provisioning) in real time. Several different mechanisms to rectify this problem have been proposed. However, most of them require a more elaborate change at the core of the SAML. In this paper we present a simple approach based on an already drafted SAML Profile which requires no change of the SAML, rather it depends on the implementation of SAML. It will allow users to create federations using SAML between two prior unknown organisations in a dynamic fashion. Implicit in each identity federation is the issue of trust. Therefore, we also analyse in detail the trust issues of dynamic federations. Finally, we discuss our implemented proof of concept to elaborate the practicality of our approach...|$|R
25|$|The {{essence of}} why {{extensible}} <b>markup</b> <b>languages</b> are necessary is explained at <b>Markup</b> <b>language</b> (for example, see <b>Markup</b> <b>language</b> § XML) and at Standard Generalized <b>Markup</b> <b>Language.</b>|$|R
50|$|A {{general-purpose}} <b>markup</b> <b>language</b> is a <b>markup</b> <b>language</b> that is {{used for}} more than one purpose or situation. Other, more specialized domain-specific <b>markup</b> <b>languages</b> are often based upon these languages. For example, HTML 4.1 and earlier are domain-specific <b>markup</b> <b>languages</b> (for webpages), and are based on the syntax of SGML, which is a general-purpose <b>markup</b> <b>language.</b>|$|R
50|$|The PERMIS {{policy is}} eXtensible Markup Language (XML)-based and has rules for user-role {{assignments}} and role-privilege assignments, the latter containing optional obligations that are {{returned to the}} application when a user is granted access to a resource. A PERMIS policy can be stored as either a simple text XML file, or as an attribute within a signed X.509 attribute certificate to provide integrity protection and tampering detection. User roles and attributes may be held in secure signed X.509 attributes certificates, and stored in Lightweight Directory Access Protocol (LDAP) directories or Web-based Distributed Authoring and Versioning (WebDAV) repositories, {{or they may be}} created on demand as <b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML) attribute assertions.|$|E
50|$|In July 2002, the {{alliance}} announced Liberty Identity Federation (ID-FF) 1.0.At that time, several member companies announced upcoming availability of Liberty-enabled products.Liberty Federation allowed consumers and users of Internet-based services and e-commerce applications to authenticate and sign-on {{to a network}} or domain once from any device and then visit or take part in services from multiple Web sites. This federated approach did not require the user to re-authenticate and can support privacy controls established by the user. The Liberty Alliance released two more versions of the Identity Federation specification, and then in June 2003 contributed its federation specification, to OASIS, forming the foundation for <b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML) 2.0. In 2007, industry analyst firm Gartner said it had wide acceptance.|$|E
50|$|<b>Security</b> <b>Assertion</b> <b>Markup</b> <b>Language</b> (SAML) is an XML-based {{solution}} for exchanging user security information between an enterprise and a service provider. It supports W3C XML encryption and service provider initiated web browser single sign-on exchanges. A user wielding a user agent (usually a web browser) {{is called the}} subject in the SAML-based single sign-on. The user requests a web resource protected by a SAML service provider. The service provider, wishing to know {{the identity of the}} requesting user, issues an authentication request to a SAML identity provider through the user agent. The identity provider is the one that provides the user credentials. The service provider trusts the user information from the identity provider to provide access to its services or resources.|$|E
5000|$|Recommendations for <b>markup</b> <b>languages,</b> such as Hypertext <b>Markup</b> <b>Language</b> (HTML), Extensible Hypertext <b>Markup</b> <b>Language</b> (XHTML), and Scalable Vector Graphics (SVG) from W3C.|$|R
50|$|Java Speech API <b>Markup</b> <b>Language</b> (JSML) is an XML-based <b>markup</b> <b>language</b> for annotating text {{input to}} speech synthesizers. JSML is used within the Java Speech API. JSML is an XML {{application}} and {{conforms to the}} requirements of well-formed XML documents. Java Speech API <b>Markup</b> <b>Language</b> is referred to as JSpeech <b>Markup</b> <b>Language</b> when describing the W3C documentation of the standard. Java Speech API <b>Markup</b> <b>Language</b> and JSpeech <b>Markup</b> <b>Language</b> identical apart from the change in name, which is made to protect Sun trademarks.|$|R
50|$|GuideML (Guide <b>Markup</b> <b>Language)</b> is a {{document}} <b>markup</b> <b>language.</b>|$|R
