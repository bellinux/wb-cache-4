74|342|Public
50|$|A typical CHARGEN <b>service</b> <b>session</b> {{looks like}} this: The user {{connects to the}} host using a telnet client.The user {{receives}} a stream of bytes. Although the specific format of the output is not prescribed by , the recommended pattern (and a de facto standard) is shifted lines of 72 ASCII characters repeating.|$|E
5000|$|At {{the next}} {{community}} <b>service</b> <b>session,</b> Harry approaches Robbie and asks if he'd {{like to come}} to a whisky tasting session in Edinburgh. Robbie, in turn, invites {{the other members of the}} group, where they learn about a cask of priceless whisky, the Malt Mill, set to go on auction soon, and Robbie is passed a card by a whisky collector, Thaddeus (Roger Allam). After they leave, Mo (Jasmin Riggins) reveals she spotted and stole documents detailing the warehouse in which the [...] "Malt Mill" [...] is kept but Robbie tells her that he is not interested in crime and is determined to stay straight for the sake of Leonie and Luke.|$|E
40|$|Congestion {{control in}} Signaling System # 7 faces new {{challenges}} as mobile communication systems and Intelligent Networks grow rapidly. New services change traffic patterns, add to signalling network load, and raise demands on shorter service completion times. To handle new demands, the congestion control mechanisms must foresee an overload situation, {{and respond to}} {{it so that the}} net-work can maintain high probability for successful service completion. By measur-ing the time consumption for the initial Message Signalling Units of a <b>service</b> <b>session</b> it is possible to predict the duration of the <b>service</b> <b>session</b> and to detect an emerging congestion. If the predicted duration of the <b>service</b> <b>session</b> is too long, the <b>service</b> <b>session</b> is annihilated. This is the foundation of a congestion control mechanism that reacts fast and on information supplied by the congested part of the network. The congestion control mechanism increases the ratio of successfully completed services during congestion by several hundred percent. This article is written under the Project "Overload Control in Intelligent Networks...|$|E
40|$|Operating system hangs, crashes, {{deadlocks}} or panics are {{system failures}} that cause loss of active client sessions in an Internet service. We describe {{a system that}} detects such failures and recovers <b>service</b> <b>sessions</b> in clusters of Internet servers. The core of our system is Backdoors, a novel system architecture that enables recovery of light-weight state associated with client <b>service</b> <b>sessions</b> present {{in the memory of}} a server, even when its OS is no longer available. We have built a Backdoors prototype using commodity components and describe our experience with the system in recovering <b>service</b> <b>sessions</b> from multiple node failures in a complex multi-tier auction service. ...|$|R
5000|$|Planning, {{preparing}} and <b>servicing</b> <b>sessions</b> {{of board}} of trustees of the United Nations Voluntary Fund for Victims of Torture, and implementing relevant decisions ...|$|R
5000|$|Terminal Server Extender - Enumerate, {{interrogate}} {{and manipulate}} terminal <b>services</b> <b>sessions</b> on {{systems that have}} terminal services enabled. This functionality also works with system running Citrix software.|$|R
3000|$|... as {{the session}} key of {{information}} service. Afterwards, MN uses the <b>service</b> <b>session</b> key to secure access MIIS.|$|E
30|$|Model prediction. Evaluation {{score of}} the next cycle or media <b>service</b> <b>session</b> and media {{transmission}} policy plan are predicted.|$|E
3000|$|... as {{the session}} key of {{information}} service. Afterwards, MN use, the <b>service</b> <b>session</b> key to secure access MIH information service.|$|E
40|$|Service {{providers}} {{can offer}} {{a wide variety of}} value added services, such as managed home networking, home-automation and security management, multimedia multi-party conferencing and content delivery. Very often hard- and software from different vendors are used to implement these services. In most cases, multiple application servers need to be deployed for each service in order to balance the load of the <b>service</b> <b>sessions.</b> In this paper we describe an architecture that offers automatic load balancing of <b>service</b> <b>sessions</b> over the available application servers, abstracting from the actual type of the service and its implementation by translating the service and vendor specific request formats into an internal XML format. The load balancing of the <b>service</b> <b>sessions</b> is done taking into account the capabilities of each application server (which service(s) does it implement), its load, and the location of running sessions (a request to join an active session has to be forwarded to the application server running the session). Furthermore, scalability is ensured by organizing the application servers into pools. New application servers can easily be added...|$|R
50|$|All Enterprise {{versions}} of NoMachine's NX protocol allow client connections to hosts via Remote Desktop Protocol (for Windows Remote Desktop <b>Services</b> <b>sessions)</b> and remote Virtual Network Computing sessions (most modern {{general-purpose operating system}} platforms) as well as XDM.|$|R
40|$|Table of {{contents}} includes: Minitex OCLC User Group Meeting Now Available Online; Are Your Library Links Up-to-Date in WorldCat?; OCLC eSerials Holdings; Technical <b>Services</b> <b>Session</b> at MLA; Bib Formats & Standards Now Include in Catalogers Desktop; How to Handle Local Handlings in Multiple Formats; Upcoming CONTENTdm Webinar; Upper Midwest CONTENTdm User Group Summary...|$|R
3000|$|... is 1 and {{an active}} File Transfer <b>service</b> <b>session</b> can be {{considered}} as one [...] "long-live" [...] TCP session [3].|$|E
3000|$|... as the <b>service</b> <b>session</b> key. IS generates an {{information}} Service Access RESponse message (S_Acce_RES) and sends to MN. The message has the following items: [...]...|$|E
30|$|Passive tag {{means that}} the {{wireless}} sensor networks upload the cooperative data stream and adaptive mark some opportunistic cooperative nodes {{with the establishment of}} cooperative transport <b>service</b> <b>session.</b>|$|E
5000|$|Desktop as a <b>Service</b> (DaaS) <b>Session</b> Desktops & Accelerated Graphics {{desktops}} ...|$|R
50|$|Baltimore Lab School {{offers its}} {{students}} and the public clinical services, including speech-language therapy, occupational therapy and psychological services. Individual or small group related <b>service</b> <b>sessions</b> are offered on an outpatient basis or through pull-out or push-in services for an extra fee. All {{students are able to}} benefit from these on-site specialists through services integrated into instruction.|$|R
5000|$|Remote Desktop Services (formerly called Terminal Services) is a {{server-based}} computing/presentation virtualization {{component of}} Microsoft Windows {{that allows a}} user to access applications and data hosted on a remote computer over a network. Remote Desktop <b>Services</b> <b>sessions</b> run in a single shared-server operating system (e.g. Windows Server 2008 R2 and later) and are accessed using the Remote Desktop Protocol.|$|R
40|$|To provide Quality of Service (QoS) {{guarantee}} in distributed services, it {{is necessary}} to reserve multiple computing and communication resources for each <b>service</b> <b>session.</b> Meanwhile, techniques have been available for the reservation and enforcement of various types of resources. Therefore, {{there is a need to}} create an integrated framework for coordinated multi-resource reservation. One challenge in creating such a framework is the complex relation between the end-to-end application-level QoS and the corresponding end-to-end resource requirement. Furthermore, the goals of (1) providing the best end-to-end QoS for each distributed <b>service</b> <b>session</b> and (2) increasing the overall reservation success rate of all service sessions are in conflict with each other. In this paper, we present a QoS and contention-aware framework of end-to-end multi-resource reservation for distributed services. The framework assumes a reservation enabled environment, where each type of resource can be reserved. The framework consists of (1) a component-based QoS-Resource Model, (2) a runtime system architecture for coordinated reservation, and (3) a runtime algorithm for the computation of end-to-end multi-resource reservation plans. The algorithm provides a solution to alleviating the conflict between the QoS of an individual <b>service</b> <b>session</b> and the success rate of all service sessions. More specifically, for each <b>service</b> <b>session,</b> the algorithm computes an end-to-end reservation plan, such that it guarantees the highest possible end-to-end QoS level under the current end-to-end resource availability, and requires the lowest percentage of bottleneck resource(s) among all feasible reservation plans. Our simulation results show excellent performance of this algorithm...|$|E
40|$|Today, {{telematics}} services are o Aen compositions of different chargeable service components offered by different service providers. To enhance component-based accounting and charging, the service composition information {{is used to}} match with the corresponding charging structure of a <b>service</b> <b>session.</b> This enables the sharing of revenues among the service providers, and calculation of the total cost for the end-user. When multiple independent service providers are involved, {{it is a great}} challenge to apply interim accounting and charging during a <b>service</b> <b>session</b> in order to minimize financial risks between business partners. Another interesting development is the trend towards outsourcing accounting and charging processes to specialized business partners. This requires a decoupling between provisioning and accounting and charging processes. In this paper, we propose a comprehensive component-based accounting and charging architecture to support <b>service</b> <b>session</b> provisioning across multiple domains. The architecture, modeled in UML, incorporates an interim accounting and charging mechanism to enable the processing and exchange of accounting information needed to update intermediate charges for separate service components and the user’s credit, even during the service provisioning phase...|$|E
30|$|SOA {{promotes}} a different composition pattern based on loosely coupled services; {{which is a}} crucial property for a personalized <b>service</b> <b>session.</b> Service Component Architecture (SCA) [5] and WS (Web Services) are major approaches supporting SOA.|$|E
3000|$|... avg_size_web_page is {{the average}} size of a web page in bytes, which could be assumed to be 312, 000 bytes based on the values {{published}} in [8]. wlan_data_rate is the effective TCP packet transmission rate in the WLAN (e.g., 4, 500 kbps for the IEEE 802.11 b-based WLAN). n_ftp_session {{is the number of}} active File Transfer <b>service</b> <b>sessions</b> in the WLAN.|$|R
5000|$|... systemd is a {{comprehensive}} init framework to start and manage <b>services</b> and <b>sessions</b> meant to replace older init models.|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThis thesis provides a logical design {{view of the}} <b>session</b> <b>services</b> control layer of a distributed network {{to be used in}} the SPLICE (Stock Point Logistics Integrated Communication Environment) project. It examines the functional requirements of <b>session</b> <b>services,</b> the data necessary to provide that functionality, and the interfaces required. These areas typically focus on the SPLICE application specifically, but apply to a generic <b>session</b> <b>services</b> as well. The recommendations that are offered relate specifically to the SPLICE application and address the prospect of placing a fault tolerant capability in <b>session</b> <b>services</b> for SPLICE. Other recommendations are appropriate only to the SPLICE environment. [URL] United States Nav...|$|R
30|$|After {{the media}} <b>service</b> <b>session</b> is established, the server sends a probe packet to the client. When the client {{receives}} a request message, it feeds back the required parameter {{information to the}} server. QoE score is calculated and managed at the server side.|$|E
30|$|Network client {{data are}} the {{messages}} exchanged in a <b>service</b> <b>session</b> {{and the corresponding}} objective is the violation of the confidentiality of the client whereas meta-data is information related to the client's location and service usage profile and the objective is the violation of {{the privacy of the}} client. Primarily, this objective is related to external adversaries and dishonest network operators.|$|E
3000|$|Equation 9 {{is derived}} {{considering}} that the Web Browsing service sessions in the WLAN {{are not able to}} constitute a virtual [...] " [...] long-live" [...] TCP session. An active File Transfer <b>service</b> <b>session</b> can be considered as one [...] "long-live" [...] TCP session. As the value of encp is smaller than the number of File Transfer service sessions plus one, it means that, by neglecting the File Transfer service sessions, the Web Browsing service sessions cannot make the value of encp {{greater than or equal to}} one. Such result indicates that, on average, there is less than one Web Browsing service packet in contention to access the network channel at any time. Therefore, from a Web Browsing service session's point of view, during the ON period, the major competition it will face is from the active File Transfer service sessions rather than the peer Web Browsing service sessions. Therefore, the effective packet transmission rate for the Web Browsing <b>service</b> <b>session</b> can be calculated as wlan_data_rate/(n_ftp_session+ 1).|$|E
5000|$|K: Kernel KA: Kernel Access KC: Kernel Cache KCB: Kernel Cache Buffer KCBW: Kernel Cache Buffer Wait KCC: Kernel Cache Control file KCCB: Kernel Cache Control file Backup KCCCF: Kernel Cache Copy Flash {{recovery}} area KCCDC: Kernel cache Control file Copy KCP: Kernel Cache transPortable tablespace KCR: Kernel Cache Redo KCT: Kernel Cache insTance KD: Kernel Data KG: Kernel Generic KGL: Kernel Generic library cache KGLJ: Kernel Generic library cache Java KJ: Kernel Locking KK: Kernel Compilation KQ: Kernel Query KS: Kernel Service(s) KSB: Kernel Service Background KSM: Kernel Service Memory KSR: Kernel Service Reliable message KSU: Kernel Service User KSUSE: Kernel <b>Service</b> User <b>SEssion</b> KSUSECON: Kernel <b>Service</b> User <b>SEssion</b> CONnection KSUSEH: Kernel <b>Service</b> User <b>SEssion</b> History KT: Kernel Transaction(s) KTU: Kernel Transaction Undo KX: Kernel Execution KXS: Kernel eXecution Sql KZ: Kernel Security K2: Kernel Distributed Transactions ...|$|R
50|$|<b>Session</b> <b>service</b> (NetBIOS-SSN) for connection-oriented communication.|$|R
40|$|Dynamically {{evolving}} {{a widely}} distributed service or application is a challenging systems design task. In this paper, we describe a plausible, high-level {{design for a}} common software framework that supports such extensible distributed services. Our design requires that the distributed service be implemented in an interpreted language, but our framework allows transparent and on-demand procedure instantiation at agents of the distributed service. In addition, this framework enables distributed services to be composed from reusable modules, and <b>service</b> <b>sessions</b> to be initiated from a single site...|$|R
40|$|International audienceNowadays {{many people}} own {{a wealth of}} several fixed and mobile devices with rich media {{capabilities}} such as mobile phones, PDAs, or TV set-top boxes. Each of these devices can have many networking features, {{but in most cases}} they remain functionally separate from each other. As users become more and more nomadic and roam continuously between professional and personal spaces, they need to access transparently and seamlessly their set of personalized services regardless of access networks or communicating devices. They want to continue an ongoing <b>service</b> <b>session</b> when they change the access network or the end device. In this paper, we investigate some prospective scenarios of rich media services and define the subsequent system requirements. We propose an architecture that separates between a <b>service</b> <b>session</b> and underlying signaling and media sessions, enabling an active session to "survive" across different heterogeneous networks and hosts. Furthermore, we describe how the Session Initiation Protocol (SIP) can be suitably used to deal with vertical and host handoff...|$|E
40|$|Abstract: <b>Service</b> <b>session</b> {{mobility}} is a {{new concept}} in the next telecom service generation. It allows users {{to move from one}} terminal in one network to another terminal in another network with service continuity. This concept requires to migrate the current service execution related information, including service context, service data, etc, from one terminal to another. For services that execute within transactions, transaction context is a part of service context and must be migrated too. This paper presents our work on this problem, based on CORBA Object Transaction Service. Mobile agent is the enabling technology which enhances the transaction service with mobility features. This model was initially designed for VHE architecture of VESPER, a European project to design a model for Virtual Home Environment in the next generation of telecom network. However, it can be applied to any other architecture, which require {{to solve the problem of}} <b>service</b> <b>session</b> mobility with transaction. 1...|$|E
40|$|Congestion {{control in}} Signaling System number 7 faces new {{challenges}} as mobile com-munication systems and Intelligent Networks grow rapidly. New services change traffic patterns, add to signalling network load, and raise demands on shorter service completion times. To handle new demands, the congestion control mechanisms must foresee an over-load situation, {{and respond to}} {{it so that the}} network can maintain high throughput. With the introduction of a state machine and a memory function for each signaling link it is possible to predict the completion time of a <b>service</b> <b>session</b> and to detect an emerging congestion. If the predicted completion time of a <b>service</b> <b>session</b> is too long, the session is annihilated. This is the foundation of a congestion control mechanism that reacts fast on information supplied by the network. The congestion control mechanism enables the network to main-tain a high throughput during overload. This article is written under the Project "Overload Control in Intelligent Networks...|$|E
40|$|CDE {{operates}} in a networked, client/server environment. This {{article describes the}} services and configuration files provided in CDE to support client/server remote execution. CDE Networking Services The CDE networking model includes four primary services: Desktop display services. These services consist of the X 11 display server, keyboard and pointing devices, and limited auxiliary processing, such as window management and audio <b>services.</b> <b>Session</b> <b>services.</b> <b>Session</b> servers provide login and authentication, session management, and desktop services such as file manager, style manager, and action invocation. Application services. Application servers provide both terminal and GUI-based applications. When an application is located and running on a system other than the session server, {{it is said to}} be a remote application, and the system running the application is the application server. File services. File servers store the data that applications produce and manipulate. The primary way that application servers, file servers, and session servers share data in CDE 1. 0 is through the remote file system (RFS) mechanisms, as offered by the DCE Distributed File Service (DFS), 1 the Andrew File System (AFS), and the Network File System (NFS). There may be other system services available in the distributed desktop environment, such as font, printing, and fax servers...|$|R
5000|$|<b>Session</b> <b>service</b> for connection-oriented {{communication}} (port: 139/tcp) ...|$|R
50|$|The company {{develops}} standards based, VoIP telephony <b>services</b> using <b>Session</b> Initiation Protocol (SIP) {{and is a}} Quality Mark approved {{member of}} the Internet Telephony Services Providers’ Association (ITSPA).|$|R
