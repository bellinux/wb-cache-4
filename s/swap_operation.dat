81|144|Public
5|$|Tesla Motors {{designed}} its Model S {{to allow}} fast battery swapping. In June 2013, Tesla announced their goal to deploy a battery swapping station {{in each of}} its supercharging stations. At a demonstration event Tesla showed that a battery <b>swap</b> <b>operation</b> with the Model S takes just over 90 seconds, {{about half the time}} it takes to refill a gasoline-powered car used for comparison purposes during the event. The first stations are planned to be deployed along Interstate 5 in California where, according to Tesla, a large number of Model S sedans make the San Francisco-Los Angeles trip regularly. These will be followed by the Washington, DC to Boston corridor.|$|E
25|$|Tesla Motors {{designed}} its Model S {{to allow}} fast battery swapping. In June 2013, Tesla announced {{its goal of}} deploying a battery swapping station in each of its supercharging stations. At a demonstration event, Tesla showed that a battery <b>swap</b> <b>operation</b> with the Model S took just over 90 seconds, {{about half the time}} it takes to refill a gasoline-powered car used for comparison purposes during the event.|$|E
25|$|While at {{the time}} {{computer}} implementation was not an issue, this method suffers from the difficulty sketched above to convert from Lehmer code to permutation efficiently. This can be remedied by using a different bijective correspondence: after using d'i to select an element among i remaining elements of the sequence (for decreasing values of i), rather than removing the element and compacting the sequence by shifting down further elements one place, one swaps the element with the final remaining element. Thus the elements remaining for selection form a consecutive range at each point in time, {{even though they may}} not occur in the same order {{as they did in the}} original sequence. The mapping from sequence of integers to permutations is somewhat complicated, but it can be seen to produce each permutation in exactly one way, by an immediate induction. When the selected element happens to be the final remaining element, the <b>swap</b> <b>operation</b> can be omitted. This does not occur sufficiently often to warrant testing for the condition, but the final element must be included among the candidates of the selection, to guarantee that all permutations can be generated.|$|E
5000|$|The XOR gate may be {{achieved}} by combining [...] (square root of <b>Swap)</b> <b>operations</b> with individual spin operations: ...|$|R
40|$|We {{develop a}} theory and {{accompanying}} mathematical model for quantum communication via {{any number of}} intermediate entanglement <b>swapping</b> <b>operations</b> and solve numerically {{for up to three}} intermediate entanglement <b>swapping</b> <b>operations.</b> Our model yields two-photon interference visibilities post-selected on photon counts at the intermediate entanglement-swapping stations. Realistic experimental conditions are accommodated through parametric down-conversion rate, photon-counter efficiencies and dark-count rates, and instrument and transmission losses. We calculate achievable quantum communication distances such that two-photon interference visibility exceeds the Bell-inequality threshold...|$|R
40|$|Abstract. Mesh {{optimization}} of 2 D and 3 D triangulations is used {{in multiple}} applications extensively. For example, mesh optimization is crucial {{in the context of}} adaptively discretizing geometry, typically representing the geometrical boundary conditions of a numerical simulation, or adaptively discretizing the entire space over which various dependent variables of a numerical simulation must be approximated. Together with operations applied to the vertices the so-called edge or face <b>swap</b> <b>operations</b> are the building block of all optimization approaches. To speed up the optimization or to avoid local minima of the function measuring overall mesh quality these swaps are combined to generalized <b>swap</b> <b>operations</b> with a less local impact on the triangulation. Despite the fact that these <b>swap</b> <b>operations</b> change only the connectivity of a triangulation, it depends on the geometry of the triangulation whether the generalized swap will generate inconsistently oriented or degenerate simplices. Because these are undesirable for numerical reasons, this paper is concerned with geometric criteria that guarantee the generalized swaps for a 3 D triangulation to yield only valid, non-degenerate triangulations. Key words: 3 D triangulation; geometric conditions; <b>swap</b> <b>operations.</b> ...|$|R
2500|$|After {{expanding}} the <b>swap</b> <b>operation</b> in-place as x ← A; A ← A; A ← x (where x {{is a temporary}} variable), a slightly faster version can be produced that moves A to its position in one go and only performs one assignment in the inner loop body: ...|$|E
2500|$|Tesla {{designed}} the Model S to allow fast battery swapping, which also facilitates vehicle assembly. At a demonstration Tesla showed a battery <b>swap</b> <b>operation</b> taking around 90 seconds, {{about half the}} time it takes to refill an empty gas tank. In June 2013, Tesla announced plans to deploy Tesla stations, with facilities to support battery pack swaps, although by June 2015 Tesla said that it was unlikely that more battery swap stations would be added. Battery swapping was planned to be deployed along Interstate 5 in California between San Francisco to Los Angeles, followed by the Washington, D.C. to Boston corridor. Each swapping station costs [...] and stocks about 50 batteries. Owners can pick up their original battery pack fully charged on the return trip, which is included in the swap fee.|$|E
5000|$|The <b>Swap</b> <b>operation</b> is {{achieved}} by applying a pulsed inter-dot gate voltage, so the exchange constant in the Heisenberg Hamiltonian becomes time-dependent: ...|$|E
3000|$|Generate a new {{feasible}} solution by <b>swapping</b> <b>operation</b> {{on location}} of a random selected facility and calculate the objective function value of the new solution [...]...|$|R
30|$|The teacher {{makes the}} {{learners}} {{aware of the}} executions of comparison and <b>swap</b> <b>operations,</b> and suggests {{that the number of}} these operations could be varied according to the initial order of the array.|$|R
40|$|Mesh {{optimization}} of 2 D and 3 D triangulations is used {{in multiple}} applications extensively. For example, mesh optimization is crucial {{in the context of}} adaptively discretizing geometry, typically representing the geometrical boundary conditions of a numerical simulation, or adaptively discretizing the entire space over which various dependent variables of a numerical simulation must be approximated. Together with operations applied to the vertices the so-called edge or face <b>swap</b> <b>operations</b> are the building block of all optimization approaches. To speed up the optimization or to avoid local minima of the function measuring overall mesh quality these swaps are combined to generalized <b>swap</b> <b>operations</b> with a less local impact on the triangulation. Despite the fact that these <b>swap</b> <b>operations</b> change only the connectivity of a triangulation, it depends on the geometry of the triangulation whether the generalized swap will generate inconsistently oriented or degenerate simplices. Because these are undesirable for numerical reasons, this paper is concerned with geometric criteria that guarantee the generalized swaps for a 3 D triangulation to yield only valid, non-degenerate triangulations...|$|R
50|$|In a <b>swap</b> <b>operation</b> {{the label}} is swapped {{with a new}} label, and the packet is {{forwarded}} along the path associated with the new label.|$|E
50|$|Software {{transactional}} memory provides transactional memory semantics in {{a software}} runtime library or the programming language, and requires minimal hardware support (typically an atomic compare and <b>swap</b> <b>operation,</b> or equivalent). As the downside, software implementations usually {{come with a}} performance penalty, when compared to hardware solutions. Hardware acceleration can reduce some of the overheads associated with software transactional memory.|$|E
50|$|While this is conceptually {{simple and}} in many cases the only {{convenient}} way to swap two variables, it uses extra memory. Although this should not be a problem in most applications, the sizes of the values being swapped may be huge (which means the temporary variable may occupy a lot of memory as well), or the <b>swap</b> <b>operation</b> may need to be performed many times, as in sorting algorithms.|$|E
30|$|Here we {{explicitly}} construct {{representations of}} symmetry groups for two quantum simulation models analyzed {{in the main}} text. These representations acting on the Hilbert space of the model can be constructed from elementary <b>SWAP</b> <b>operations.</b>|$|R
5000|$|... #Caption: A double quantum dot. Each {{electron}} spin SL or SR define one quantum two-level system, or qubit in the Loss-DiVincenzo proposal. A narrow gate {{between the two}} dots can modulate the coupling, allowing <b>swap</b> <b>operations.</b>|$|R
40|$|Abstract: In a {{conventional}} binary floating-point number arithmetic system, two’s complement number represen-tation {{is often used}} to perform addition/subtraction in a floating-point adder. Since the significand of an addition operand is usually expressed as a sign-magnitude number representation, the <b>swapping</b> <b>operation</b> of two operands and the carry propagation in the addition will limit the arithmetic speed. In this paper, we introduce a radix-two signed-digit(SD) number arithmetic to the floating-point number arithmetic. Then the <b>swapping</b> <b>operation</b> is not required and the carry propagation becomes free for the inner addition. We present an addition circuit architecture using the SD arithmetic with a normal binary floating-point number representation in both input and output. Effi-cient SD-binary conversion and normalization circuits are also proposed...|$|R
50|$|Tesla Motors {{designed}} its Model S {{to allow}} fast battery swapping. In June 2013, Tesla announced {{its goal of}} deploying a battery swapping station in each of its supercharging stations. At a demonstration event, Tesla showed that a battery <b>swap</b> <b>operation</b> with the Model S took just over 90 seconds, {{about half the time}} it takes to refill a gasoline-powered car used for comparison purposes during the event.|$|E
50|$|The {{significance}} {{of this is that}} if the Working Set Size is larger than the available memory in a virtual memory system then the memory manager must refer to the next level in the memory hierarchy (usually hard disk) to perform a <b>swap</b> <b>operation</b> swapping some memory contents from RAM to hard disk to enable the program to continue working on the problem. If this swapping goes on continuously the program is slowed down significantly. This phenomenon is known as thrashing.|$|E
5000|$|A {{two-stroke}} engine quantum cycle {{equivalent to the}} Otto cycle based on two qubits has been proposed.The first qubit has frequency [...] and the second [...] The cycle is composedof a first stroke of partial equilibration of the two qubits with the hot and cold bath in parallel.The second power stroke is composed of a partial or full swap between the qubits.The <b>swap</b> <b>operation</b> is generated by a unitary transformation which preserves the entropy as a result it is a pure power stroke.|$|E
40|$|Computer {{science has}} many {{important}} concepts {{which are used}} at a very large scale. It is frequently used by the real life and system applications. Sorting {{is one of the}} most important concepts in computer science. Through this paper, we are present a new concept of sorting named “Position Sort ” which improves the sorting algorithm by reducing the <b>swapping</b> <b>operation,</b> which directly effects and improve the running time of algorithm. We solve the problem of sorting by various methods. Some methods are very complex to implement. The concept of position sort is very efficient and easy to implement. It increases the efficiency of problem by reducing the <b>swapping</b> <b>operations.</b> This algorithm uses the basic idea of sorting and produces the result. It places an element at their right position by a single swapping only...|$|R
40|$|This paper {{sets forth}} some basic {{principles}} {{that could help}} debt managers in emerging market and other countries to plan and implement sovereign debt buyback and <b>swap</b> <b>operations.</b> It discusses the macroeconomic context in which buybacks and swaps are undertaken, the objectives of buybacks and swaps, the analytical framework for deciding whether to undertake a particular buyback orswap operation and for selecting among alternative operations, and some key issues in {{the determination of the}} strategy for executing buybacks and swaps. The focus is on developing the analytical framework for evaluating sovereign debt buyback and <b>swap</b> <b>operations,</b> since very little work has been done in thisarea. In this regard, the paper presents a step-wise decision-making procedure, in which discounted cash flow analysis and the use of strategic benchmarks for the debt play central roles...|$|R
40|$|The joint degree {{matrix of}} a graph gives {{the number of}} edges between {{vertices}} of degree i and degree j for every pair (i,j). One can perform restricted <b>swap</b> <b>operations</b> to transform a graph into another with the same joint degree matrix. We prove that the space of all realizations of a given joint degree matrix over a fixed vertex set is connected via these restricted <b>swap</b> <b>operations.</b> This was claimed before, {{but there is an}} error in the previous proof, which we illustrate by example. We also give a simplified proof of the necessary and sufficient conditions for a matrix to be a joint degree matrix. Finally, we address some of the issues concerning the mixing time of the corresponding MCMC method to sample uniformly from these realizations. Comment: 12 pages, 2 figure...|$|R
50|$|Operations of {{the form}} a = b, modulo and bit-wise computationsthat result {{in the loss of}} data, are termed to be destructive.Typically these {{operations}} can only be restored usingconventional state-saving techniques. However, we observethat many of these destructive operations are a consequenceof the arrival of data contained within the event beingprocessed. For example, in the work of Yaun, Carothers, et al., with large-scale TCP simulation, the last-sent time recordsthe time stamp of the last packet forwarded on a router logical process.The <b>swap</b> <b>operation</b> makes this operation reversible.|$|E
50|$|In June 2013, Tesla {{announced}} the goal to deploy a battery swapping station {{in each of}} its existing supercharging stations, now to be renamed Tesla stations. At an event at Tesla's design studio in Los Angeles, CEO Elon Musk demonstrated a battery <b>swap</b> <b>operation</b> with the Tesla Model S, which took just over 90 seconds each for the two cars participating in the demo. The swapping operation took {{less than half the}} time needed to refill a gasoline-powered car used for comparison purposes during the event.The Tesla Model S was designed from the beginning to support fast battery swapping, with Tesla publicly discussing the capability as early as March 2009.|$|E
50|$|It is {{currently}} {{the object of a}} controversial <b>swap</b> <b>operation</b> that would see it transferred, together with sixteenth-century palace Ca Bembo and the modern Palazzo Cosulich, two other university properties, to a property investment fund in exchange for a 1957 former state electricity company edifice. The swap has aroused considerable criticism and investigative weekly L'Espresso has noted the absence of a public auction and problems connected with an apparent violation - only supposed - with Italian heritage law, that forbids the swap of listed property. The chancellor Carlo Carraro has defended the operation on budget grounds, arguing it will help stave off large cuts to scholarships and research funding.|$|E
3000|$|..., and {{normalized}} {{subcarrier spacing}} Q) just by using simple {{digital signal processing}} blocks such as up/down-sampling converters, filters, and sample delays. As already mentioned, no complicated circular shifts, temporary buffers, or memory <b>swapping</b> <b>operations</b> are required, which means a considerable simplification of those FBMC implementations where Q is rational, which have been commonly ignored by the research community.|$|R
40|$|We {{present an}} {{improved}} training strategy for dependency parsers that use online reordering to handle non-projective trees. The new strategy improves both efficiency and accuracy {{by reducing the}} number of <b>swap</b> <b>operations</b> performed on non-projective trees by up to 80 %. We present state-ofthe-art results for five languages with the best ever reported results for Czech. ...|$|R
50|$|NICO also handles trading & <b>swaps</b> <b>operations</b> {{on behalf}} of NIOC. Iran has swap {{arrangements}} with Azerbaijan, Turkmenistan, and Kazakhstan, under which it ships crude from the Central Asian producers to its Caspian ports. In exchange Iran delivers the equivalent barrels of crude {{on behalf of}} the three Central Asian producers to their customers in the Persian Gulf.|$|R
50|$|Tesla Motors {{designed}} its Model S {{to allow}} fast battery swapping. In June 2013, Tesla announced their goal to deploy a battery swapping station {{in each of}} its supercharging stations. At a demonstration event Tesla showed that a battery <b>swap</b> <b>operation</b> with the Model S takes just over 90 seconds, {{about half the time}} it takes to refill a gasoline-powered car used for comparison purposes during the event. The first stations are planned to be deployed along Interstate 5 in California where, according to Tesla, a large number of Model S sedans make the San Francisco-Los Angeles trip regularly. These will be followed by the Washington, DC to Boston corridor.|$|E
5000|$|Tesla {{designed}} the Model S to allow fast battery swapping, which also facilitates vehicle assembly. At a demonstration Tesla showed a battery <b>swap</b> <b>operation</b> taking around 90 seconds, {{about half the}} time it takes to refill an empty gas tank. In June 2013, Tesla announced plans to deploy Tesla stations, with facilities to support battery pack swaps, although by June 2015 Tesla said that it was unlikely that more battery swap stations would be added. Battery swapping was planned to be deployed along Interstate 5 in California between San Francisco to Los Angeles, followed by the Washington, D.C. to Boston corridor. Each swapping station costs [...] and stocks about 50 batteries. Owners can pick up their original battery pack fully charged on the return trip, which is included in the swap fee.|$|E
5000|$|Tesla Motors {{designed}} its Model S {{to allow}} fast battery swapping. In June 2013, Tesla announced their goal to deploy a battery swapping station {{in each of}} its supercharging stations. At a demonstration event Tesla showed that a battery <b>swap</b> <b>operation</b> with the Model S takes just over 90 seconds, {{about half the time}} it takes to refill a gasoline-powered car. The first stations are planned to be deployed along Interstate 5 in California where, according to Tesla, a large number of Model S sedans make the San Francisco-Los Angeles trip regularly. These will be followed by the Washington, DC to Boston corridor. Each swapping station will cost [...] and will have about 50 batteries available without requiring reservations. The service would be offered for the price of about 15 gal of gasoline at the current local rate, around [...] to [...] at June 2013 prices.|$|E
40|$|We {{consider}} {{a model of}} quantum computation in which the set of operations is limited to nearest-neighbor interactions on a 2 D lattice. We model movement of qubits with noisy <b>SWAP</b> <b>operations.</b> For this architecture we design a fault-tolerant coding scheme using the concatenated [[7, 1, 3]] Steane code. Our scheme is potentially applicable to ion-trap and solid-state quantum technologies. We calculate a lower bound on the noise threshold for our local model using a detailed failure probability analysis. We obtain a threshold of 1. 85 × 10 − 5 for the local setting, where memory error rates are one-tenth of the failure rates of gates, measurement, and preparation steps. For the analogous nonlocal setting, we obtain a noise threshold of 3. 61 × 10 − 5. Our results thus show that the additional <b>SWAP</b> <b>operations</b> required to move qubits in the local model affect the noise threshold only moderately...|$|R
40|$|This paper {{presents}} {{the design and}} implementation of an automatic battery swap system for the prolonged activities of home robots. A battery swap station is proposed to implement battery off-line recharging and on-line exchanging functions. It consists of a loading and unloading mechanism, a shifting mechanism, a locking device and a shell. The home robot is a palm-sized wheeled robot with an onboard camera and a removable battery case in the front. It communicates with the battery swap station wirelessly through ZigBee. The influences of battery case deflection and robot docking deflection on the battery <b>swap</b> <b>operations</b> have been investigated. The experimental results show that it takes an average time of 84. 2 s to complete the battery <b>swap</b> <b>operations.</b> The home robot {{does not have to}} wait several hours for the batteries to be fully charged. The proposed battery swap system is proved to be efficient in home robot applications that need the robots to work continuously over a long period...|$|R
30|$|Since the nanogrid {{supplies}} fully-charged batteries to the BSS, a monotonic charge strategy [34] {{is adopted}} in the MI’s battery management system. This strategy forces a consistent charging/discharging direction for each battery. When a battery has been monotonously fully-charged, it gets ready for being swapped or powering the nanogrid. By this means, it can {{make sure that there}} are enough fully-charged batteries for performing battery <b>swapping</b> <b>operation.</b>|$|R
