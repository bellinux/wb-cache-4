17|122|Public
50|$|An LSD radix sort {{operates}} in O(nw) time, where n {{is the number}} of keys, and w is the average key length. This kind of performance for variable-length keys can be achieved by grouping all of the keys that have the same length together and separately performing an LSD radix sort on each group of keys for each length, from shortest to longest, in order to avoid processing the whole list of keys on every <b>sorting</b> <b>pass.</b>|$|E
5000|$|... #Caption: An IBM {{card sorter}} {{performing}} a radix sort {{on a large}} set of punched cards. Cards are fed into a hopper below the operator's chin and are sorted {{into one of the}} machine's 13 output baskets, based on the data punched into one column on the cards. The crank near the input hopper is used to move the read head to the next column as the sort progresses. The rack in back holds cards from the previous <b>sorting</b> <b>pass.</b>|$|E
40|$|The MSPIHT coding {{algorithm}} is modified {{with the use}} of one list to store the coordinates of wavelet coefficients instead of three lists of SPIHT; defines two terms, number of error bits and absolute zerotree; and merges the <b>sorting</b> <b>pass</b> and the refinement pass together as one scan pass, wrote M. Akter and colleagues, Multimedia University...|$|E
50|$|The {{pattern of}} {{repeated}} <b>sorting</b> <b>passes</b> with decreasing gaps {{is similar to}} Shellsort, but in Shellsort the array is <b>sorted</b> completely each <b>pass</b> before going on to the next-smallest gap. Comb <b>sort's</b> <b>passes</b> do not completely sort the elements. This {{is the reason that}} Shellsort gap sequences have a larger optimal shrink factor of about 2.2.|$|R
50|$|An {{example of}} a list that proves this point is the list (2,3,4,5,1), which would only need to go through one <b>pass</b> of {{cocktail}} <b>sort</b> to become sorted, but if using an ascending bubble sort would take four passes. However one cocktail <b>sort</b> <b>pass</b> should be counted as two bubble <b>sort</b> <b>passes.</b> Typically cocktail <b>sort</b> is less than two times faster than bubble sort.|$|R
6000|$|Some {{women of}} the disorderly <b>sort,</b> <b>passing</b> {{on their way to}} the town, heard him. [...] "Ah, you old brute," [...] they called out, with the measureless license of their class, [...] "whatever she did, she served you right!" ...|$|R
40|$|Abstract — The paper {{describes}} an algorithm for automatic record matching in cooperative information systems. The algo-rithm {{is based on}} the well-known Sorted Neighborhood Method. The original contribution is on the proposal of a method to auto-matically choose the key for record matching. The performances of the algorithm are compared with previous literature results; the algorithm detects a higher percentage of correct duplicates and a lower percentage of false positive, on a single key <b>sorting</b> <b>pass.</b> I...|$|E
40|$|This paper {{presents}} the Group Testing for Wavelets algorithm (GTW), {{which is a}} novel embedded wavelet-based image compression technique based {{on the concept of}} group testing. We explain how group testing is a generalization of the zerotree coding technique for wavelet-transformed images. We also show that Golomb coding is equivalent to Hwang's group testing algorithm [3]. GTW is similar to SPIHT [11] but replaces SPIHT's <b>sorting</b> <b>pass</b> with a new group testing based method. Although no arithmetic coding is implemented, GTW performs competitively with SPIHT's arithmetic coding variant in terms of rate-distortion performance...|$|E
40|$|We {{discuss the}} use of lattice vector quantizers in {{conjunction}} with a quadtree-based sorting algorithm for the compression of multidimensional data sets, as encountered, for example, when dealing with hyperspectral imagery. An extension of the SPECK algorithm is presented that deals with vector samples and is used to encode a group of successive spectral bands extracted from the hyperspectral image original block. We evaluate the importance of codebook choice by showing that a choice of dictionary that better matches the characteristics of the source during the <b>sorting</b> <b>pass</b> has as big an influence in performance as {{the use of}} a transform in the spectral direction. Finally, we provide comparison against state-of-the-art encoders, both 2 D and 3 D ones, showing the proposed encoding method is very competitive, especially at small bit rates. We discuss the use of lattice vector quantizers {{in conjunction with a}} quadtreebased sorting algorithm for the compression of multidimensional data sets, as encountered, for example, when dealing with hyperspectral imagery. An extension of the SPECK algorithm is presented that deals with vector samples and is used to encode a group of successive spectral bands extracted from the hyperspectral image original block. We evaluate the importance of codebook choice by showing that a choice of dictionary that better matches the characteristics of the source during the <b>sorting</b> <b>pass</b> has as big an influence in performance as the use of a transform in the spectral direction. Finally, we provide comparison against state-of-the-art encoders, both 2 D and 3 D ones, showing the proposed encoding method is very competitive, especially at small bit rates...|$|E
50|$|The June 2000 SGI C++ Standard Template Library stl_algo.h {{implementation}} of unstable sort uses the Musser introsort approach with the recursion depth {{to switch to}} heapsort passed as a parameter, median-of-3 pivot selection and the Knuth final insertion <b>sort</b> <b>pass</b> for partitions smaller than 16.|$|R
6000|$|... "Something of the <b>sort</b> <b>passed</b> between us, Captain; but {{you forgot}} {{one half of}} the conditions, and I {{overlooked}} the other; and I need not tell so expert a navigator, that two halves make a whole. No wonder, therefore, that the affair dropt through between us." ...|$|R
6000|$|... 'None. Poetical {{days are}} getting past with me, {{according}} to the usual rule. Writing rhymes is a stage people of my <b>sort</b> <b>pass</b> through, as they pass through the stage of shaving for a beard, or thinking they are ill-used, or saying there's {{nothing in the world}} worth living for.' ...|$|R
40|$|Video {{streaming}} over heterogeneous networks (e. g. the Internet) requires {{high degree}} of scalability from the video coding. To achieve all types of scalability required for a fully scalable video coding, a modification of the 3 DSPIHT algorithm is presented in this paper. The proposed algorithm, called fully scalable 3 DSPIHT (FS- 3 DSPIHT), adds spatial and temporal scalability features to the 3 DSPIHT algorithm, through the introduction of resolution dependent lists and a resolution-dependent <b>sorting</b> <b>pass.</b> The important features of the original 3 DSPIHT coder such as compression efficiency and full embeddedness are kept. The output bitstream of the FS- 3 DSPIHT encoder consists {{of a set of}} embedded parts related to the various qualities, spatial and temporal resolutions. It can be easily reordered and truncated by a simple parser in order to adapt various clients 2 ̆ 7 requirements (e. g. quality, spatial resolution and temporal resolution) as well as bandwidth variation in a heterogeneous network...|$|E
40|$|Abstract. We {{present a}} new {{architecture}} for interactive unstructured volume rendering. Our system moves all the computations necessary for order-independent transparency and volume scan conversion from the CPU to the graphics hardware, {{and it makes}} a software <b>sorting</b> <b>pass</b> unnecessary. It therefore provides the same advantages for volume data that triangle-processing hardware provides for surfaces. To address a remaining bottleneck – the bandwidth between main memory and the graphics processor – we introduce two new primitives, tetrahedral strips and tetrahedral fans. These primitives allow performance improvements in rendering tetrahedral meshes similar to the improvements triangle strips and fans allow in rendering triangle meshes. We provide new techniques for generating tetrahedral strips that achieve, on the average, strip lengths of 17 on representative datasets. The combined effect of our architecture and new primitives is a 72 to 85 times increase in performance over triangle graphics hardware approaches. These improvements make it possible to use volumetric tetrahedral meshes in interactive applications. ...|$|E
40|$|Abstract—Video {{streaming}} over heterogenous networks (e. g. the Internet) requires {{high degree}} of scalability from the video coding. To achieve all types of scalability required for a fully scalable video coding, a modification of the 3 DSPIHT algorithm is presented in this paper. The proposed algorithm, called Fully Scalable 3 DSPIHT (FS- 3 DSPIHT), adds spatial and temporal scalability features to the 3 DSPIHT algorithm, through the introduction of resolution dependent lists and a resolution-dependent <b>sorting</b> <b>pass.</b> The important features of the original 3 DSPIHT coder such as compression efficiency and full embeddedness are kept. The output bitstream of the FS- 3 DSPIHT encoder consists {{of a set of}} embedded parts related to the various quality, spatial and temporal resolutions. It can be easily reordered and truncated by a simple parser in order to adapt various clients ’ requirements (e. g. quality, spatial resolution and temporal resolution) as well as bandwidth variation in a heterogeneous network. 1...|$|E
60|$|If Rays of any <b>sort</b> <b>pass</b> perpendicularly {{into several}} Mediums, the Intervals of the Fits of easy Reflexion and Transmission {{in any one}} Medium, are to those Intervals in any other, as the Sine of Incidence to the Sine of Refraction, when the Rays pass {{out of the first}} of those two Mediums into the second.|$|R
60|$|Lady Delahaye looked, and she understood. Slowly {{she rose}} to her feet and crossed the room towards the door. I was tongue-tied. I made no protest--asked no questions. Feurgéres opened the door for her and summoned his servant, but no word of any <b>sort</b> <b>passed</b> between them. Then he turned {{suddenly}} to me. His tone was changed. He was quick and alert.|$|R
60|$|She was gone. She {{drove out}} with Miss Crawley that day. It {{was before the}} latter's illness. At dinner she was unusually {{brilliant}} and lively; but she would take no notice of the hints, or the nods, or the clumsy expostulations of the humiliated, infatuated guardsman. Skirmishes of this <b>sort</b> <b>passed</b> perpetually during the little campaign--tedious to relate, and similar in result. The Crawley heavy cavalry was maddened by defeat, and routed every day.|$|R
40|$|This paper {{addresses}} the compression of multispectral im-ages {{which can be}} viewed, at the encoder side, as a three-dimensional (3 D) data set characterized by a high correlation through the successive bands. Recently, the celebrated 3 D-SPIHT (Sets Partitioning In Hierarchical Trees) algorithm has been widely adopted in the literature for the coding of mul-tispectral images because of its proven state-of-the art per-formance. In order to exploit the spectral redundancy in the 3 D wavelet transform domain, a new scalable SPIHT based multispectral image compression technique is proposed. The rational behind {{this approach is that}} image components in two consecutive transformed bands are significantly dependent in terms of zerotrees locations in the 3 D-DWT domain. There-fore, by joining the trees with the same location into the List of Insignificant Sets (LIS), a considerable amount of bits can be reduced in the <b>sorting</b> <b>pass</b> in comparison with the separate encoding of the transformed bands. Numerical experiments on two sample multispectral images show a highly better per-formance of the proposed technique when compared to the conventional 3 D-SPIHT. 1...|$|E
40|$|Among all {{algorithms}} {{based on}} wavelet transform and zerotree quantization, Said and Pearlman's set partitioning in hierarchical trees (SPIHT) algorithm {{is well known}} for its simplicity and efficiency. SPIHT's high memory requirement is a major drawback for hardware implementation. In this study, a modification of SPIHT named Modified-SPIHT (MSPIHT) is presented. The MSPIHT coding algorithm is modified using one list to store the co-ordinates of wavelet coefficients instead of three lists of SPIHT, defines two terms number of error bits and absolute zerotree, and merges the <b>sorting</b> <b>pass</b> and the refinement pass together as one scan pass. Comparison of MSPIHT with SPIHT on different test images shows that for coding a 512 ׵ 12, grey-level image, MSPIHT reduce execution time for coding at most 7 times and for decoding at most 11 times at low bit rate, saves at least 0. 5625 MBytes of memory, and reduces minor peak signal-to noise ratio (PSNR) values. The algorithm is further downloaded into FPGA for hardware prototyping. Result shows that the hardware implementation speeded up the processing of images few thousands times faster than that of the results obtained from software (Matlab) simulations. No Full Tex...|$|E
40|$|Among all {{algorithms}} {{based on}} wavelet transform and zerotree quantization, Said and Pearlman's set partitioning in hierarchical trees (SPIHT) algorithm {{is well known}} for its simplicity and efficiency. SPIHT's high memory requirement is a major drawback to hardware implementation. In this study, we present a modification of SPIHT named modified SPIHT (MSPIHT), which requires less execution time at a low bit rate and less working memory than SPIHT. The MSPIHT coding algorithm is modified with the use of one list to store the coordinates of wavelet coefficients instead of three lists of SPIHT; defines two terms, number of error bits and absolute zerotree; and merges the <b>sorting</b> <b>pass</b> and the refinement pass together as one scan pass. Comparison of MSPIHT with SPIHT on different test image shows that MSPIHT reduces execution time at most 7 times for coding a 512 x 512 grayscale image; reduces execution time at most 11 times at a low bit rate; saves at least 0. 5625 MB of memory; and reduces minor peak signal-to noise ratio (PSNR) values, thereby making it highly promising for real-time and memory limited mobile communications...|$|E
6000|$|... "You see," [...] Mr. Samuelson explained, [...] "there's no back {{exit from}} my house without {{climbing}} walls {{and that sort of}} thing, and it happened to be a particularly light evening, as you may remember. There are policemen {{at both ends of the}} road, who seem unusually confident that no one carrying a parcel of any <b>sort</b> <b>passed</b> at anything like the time when the thing was probably done. This is where the Johnny from Scotland Yard comes in. He has got the idea into his head that the jewels might have been taken away in the carriage of one of my guests." ...|$|R
60|$|The Count halted, {{putting down}} my bags, closed the door, and {{crossing}} the room, opened another door, which led {{into a small}} octagonal room lit by a single lamp, and seemingly without a window of any <b>sort.</b> <b>Passing</b> through this, he opened another door, and motioned me to enter. It was a welcome sight. For here was a great bedroom well lighted and warmed with another log fire, also added to but lately, for the top logs were fresh, which sent a hollow roar up the wide chimney. The Count himself left my luggage inside and withdrew, saying, before he closed the door.|$|R
60|$|As soon as {{the morning}} meal was over, the two lads started for {{the scene of the}} {{previous}} evening's fight. The road from Aldersgate, with cars rolling in with loads of flour and other provisions, and with many travellers and foot passengers of all <b>sorts</b> <b>passing</b> along, presented a very different appearance to that which it had worn on the evening before. People were {{going in and out of}} the hostelries for their morning draught of ale, and all looked bright and cheerful. The day was fine, and the air brisk. On entering, the landlord at once came up to them.|$|R
40|$|ABSTRACT. Shell {{fragments}} becoming {{embedded in}} kernels during hulling and shelling is a quality control {{problem for the}} almond industry. While embedded shell is rare, with only about 0. 1 % of shelled kernels exhibiting this problem, the incidence has been increasing {{over the past several}} years. The industry, therefore, needs a method to remove these kernels from the process stream. A prototype device was constructed which images laser light transmitted through the kernel and automatically detects and removes kernels with embedded shell fragments. A shell fragment blocks nearly all the transmitted light, forming a dark spot in the image that is detected by a computer algorithm. The computer then activates an air valve to divert the corresponding kernel from the process stream. The sorting device has an inspection rate of approximately 40 kernels/s (100 kg/h). For a single–pass sorting operation, approximately 83 % of the kernels with embedded shell were detected and removed. Additionally, 11 % of the clean kernels (no embedded shell) were incorrectly classified as having embedded shell and were also removed from the process stream. Running the rejects of the first <b>sorting</b> <b>pass</b> through the system a second time recovered approximately 46 % of the previously rejected clean kernels...|$|E
40|$|In this paper, {{we present}} a novel {{extension}} technique to the Set Partitioning in Hierarchical Trees (SPIHT) based image compression with spatial scalability. The present modification and the preprocessing techniques provide significantly better quality (both subjectively and objectively) reconstruction at the decoder with little additional computational complexity. There are two proposals for this paper. Firstly, we propose a pre-processing scheme, called Zero-Shifting, that brings the spatial values in signed integer range without changing the dynamic ranges, so that the transformed coefficient calculation becomes more consistent. For that reason, we have to modify the initialization step of the SPIHT algorithms. The experiments demonstrate a significant improvement in visual quality and faster encoding and decoding than the original one. Secondly, we incorporate the idea to facilitate resolution scalable decoding (not incorporated in original SPIHT) by rearranging {{the order of the}} encoded output bit stream. During the <b>sorting</b> <b>pass</b> of the SPIHT algorithm, we model the transformed coefficient based on the probability of significance, at a fixed threshold of the offspring. Calling it a fixed context model and generating a Huffman code for each context, we achieve comparable compression efficiency to that of arithmetic coder, but with much less computational complexity and processing time. As far as objective quality assessment of the reconstructed image is concerned, we have compared our results with popular Peak Signal to Noise Ratio (PSNR) and with Structural Similarity Index (SSIM). Both these metrics show that our proposed work is an improvement over the original one...|$|E
40|$|In this paper, the {{compression}} of multispectral images is addressed. Such 3 -D data {{are characterized by}} a high correlation across the spectral components. The efficiency of the state-ofthe- art wavelet-based coder 3 -D SPIHT is considered. Although the 3 -D SPIHT algorithm provides the obvious way to process a multispectral image as a volumetric block and, consequently, maintain the attractive properties exhibited in 2 -D (excellent performance, low complexity, and embeddedness of the bit-stream), its 3 -D trees structure is shown to be not adequately suited for 3 -D wavelet transformed (DWT) multispectral images. The fact that each parent has eight children in the 3 -D structure considerably increases the list of insignificant sets (LIS) and the list of insignificant pixels (LIP) since the partitioning of any set produces eight subsets which will be processed similarly during the <b>sorting</b> <b>pass.</b> Thus, a significant portion from the overall bit-budget is wastedly spent to sort insignificant information. Through an investigation based on results analysis, we demonstrate that a straightforward 2 -D SPIHT technique, when suitably adjusted to maintain the rate scalability and {{carried out in the}} 3 -D DWT domain, overcomes this weakness. In addition, a new SPIHT-based scalable multispectral image compression algorithm is used in the initial iterations to exploit the redundancies within each group of two consecutive spectral bands. Numerical experiments on a number of multispectral images have shown that the proposed scheme provides significant improvements over related works...|$|E
25|$|Odd-even sort is a {{parallel}} version of bubble <b>sort,</b> for message <b>passing</b> systems.|$|R
6000|$|... "`All right,' says I, an' away {{we went up}} one hill an' down another--for all {{the world}} as if we was walkin' over a heavy Atlantic swell--till {{we come to a}} <b>sort</b> o' <b>pass</b> among the rocks.|$|R
50|$|The band {{broke up}} in 1973, {{possibly}} also due to political pressure. The Illés {{had been in}} fact barred for one year (plus a fine) from the Capital because of an interview they did release while staying in Britain and where they did criticize government. Nevertheless, the members, especially L. Szörényi and Bródy, continued {{to work together on}} other projects, notably with their new band Fonográf, which tried to blend country elements with Hungarian folk music with hits like Lökd ide a <b>sört!</b> (<b>Pass</b> the beer!) and Mondd, hogy nem haragszol rám! (Say that you are not angry). They also continued their cooperation with singer Zsuzsa Koncz, for whom they had written songs since {{the first half of the}} 1960s.|$|R
40|$|Due to {{the large}} {{requirement}} for memory and the high complexity of computation, JPEG 2000 cannot be used in many conditions especially in the memory constraint equipment. The line-based W avelet transform was proposed and accepted because lower memory is required without affecting the result of W avelet transform, In this paper, the improved lifting schem e is introduced to perform W avelet transform to replace Mallat method that {{is used in the}} original line-based wavelet transform. In this a three-adder unit is adopted to realize lifting scheme. It can perform wavelet transform with less computation and reduce memory than Mallat algorithm. The corresponding HS_SPIHT coding is designed here so that the proposed algorithm is more suitable for equipment. W e proposed a highly scale image compression scheme based on the Set Partitioning in Hierarchical Trees (SPIHT) algorithm. Our algorithm, called Highly Scalable SPIHT (HS_SPIHT), supports High Compression efficiency, spatial and SNR scalability and provides l bit stream that can be easily adapted to give bandwidth and resolution requirements by a simple transcoder (parse). The HS_SPIHT algorithm adds the spatial scalability feature without sacrificing the S NR embeddedness property as found in the original SPIHT bit stream. Highly scalable image compression scheme based on the SPIHT algorithm the proposed algorithm used, highly scalable SPIHT (HS_SPIHT) Algorithm, adds the spatial scalability feature to the SPIHT algorithm through the introduction of multiple resolution dependent lists and a resolution-dependent <b>sorting</b> <b>pass.</b> SPIHT keeps the import features of the original SPIHT algorithm such as compression efficiency, full SNR Scalability and low complexity...|$|E
40|$|ACM SIGGRAPH; Eurographics AssociationIn {{this paper}} we present an {{efficient}} algorithm for multi-layer depth peeling via bucket sort of fragments on GPU, {{which makes it}} possible to capture up to 32 layers simultaneously with correct depth ordering in a single geometry pass. We exploit multiple render targets (MRT) as storage and construct a bucket array of size 32 per pixel. Each bucket is capable of holding only one fragment, and can be concurrently updated using the MAX/MIN blending operation. During the rasterization, the depth range of each pixel location is divided into consecutive subintervals uniformly, and a linear bucket sort is performed so that fragments within each subintervals will be routed into the corresponding buckets. In a following fullscreen shader pass, the bucket array can be sequentially accessed to get the sorted fragments for further applications. Collisions will happen when more than one fragment is routed to the same bucket, which can be alleviated by multi-pass approach. We also develop a two-pass approach to further reduce the collisions, namely adaptive bucket depth peeling. In the first geometry pass, the depth range is redivided into non-uniform subintervals according to the depth distribution {{to make sure that there}} is only one fragment within each subinterval. In the following bucket <b>sorting</b> <b>pass,</b> there will be only one fragment routed into each bucket and collisions will be substantially reduced. Our algorithm shows up to 32 times speedup to the classical depth peeling especially for large scenes with high depth complexity, and the experimental results are visually faithful to the ground truth. Also it has no requirement of pre-sorting geometries or post-sorting fragments, and is free of read-modify-write (RMW) hazards. Copyright © 2009 by the Association for Computing Machinery, Inc...|$|E
60|$|A <b>sort</b> {{of cloud}} <b>passed</b> over Moses's brow. He looked embarrassed, {{and there was}} a pause between them, and then he turned the conversation.|$|R
60|$|A <b>sort</b> of {{convulsion}} <b>passed</b> {{over her}} face, her little hands clinched, {{and the tears}} started into her eyes. Her voice was very quiet.|$|R
60|$|It was {{the first}} {{occasion}} upon which words of this <b>sort</b> had <b>passed</b> between Peter Ruff and his secretary. There was no denying the fact that Miss Violet Brown was in a passion. It was an hour past the time at which she usually left the office. For an hour she had pleaded, and Peter Ruff remained unmoved.|$|R
6000|$|... "You {{can find}} her story by the hundred in your streets, but nothing hinders these paragons of virtue"--he {{nodded at the}} stream of carriages--"from turning up their eyes when they see ladies of her <b>sort</b> <b>pass.</b> She came to London--just three years ago. After a year one of her little boys took fever--the shop was avoided--her husband caught it, and died. There she was, left with two {{children}} and everything gone to pay the debts. She tried to get work; no one helped her. There was no money to pay anyone {{to stay with the}} children; all the work she could get in the house was not enough to keep them alive. She's not a strong woman. Well, she put the children out to nurse, and went to the streets. The first week was frightful, but now she's used to it--one gets used to anything." ...|$|R
