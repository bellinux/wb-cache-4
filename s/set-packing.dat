20|0|Public
5000|$|As {{a simple}} example, suppose your kitchen {{contains}} {{a collection of}} different food ingredients (...) , {{and you have a}} cook-book with a collection of recipes ( [...] ). Each recipe requires a subset of the food ingredients. You want to prepare the largest possible collection of recipes from the cook-book. You are actually looking for a <b>set-packing</b> (...) on (...) - a collection of recipes whose sets of ingredients are pairwise disjoint.|$|E
50|$|Combinatorial auctions {{were first}} {{proposed}} by Rassenti, Smith, and Bulfin (1982), for {{the allocation of}} airport landing slots. Their paper introduced many key ideas on combinatorial auctions, including the mathematical programming formulation of the auctioneer’s problem, {{the connection between the}} winner determination problem and the <b>set-packing</b> problem, the issue of computational complexity, the use of techniques from experimental economics for testing combinatorial auctions, and consideration of issues of incentive compatibility and demand revelation in combinatorial auctions.|$|E
40|$|A {{polyhedron}} having vertices {{is called}} integer {{if all of}} its vertices are integer. This property is coNP-complete in general. Recognizing integral <b>set-packing</b> polyhedra {{is one of the}} biggest challenges of graph theory (perfectness test). Various other special cases are major problems of discrete mathematics...|$|E
40|$|The {{problem of}} routing trains through railway {{junctions}} {{is an integral}} part of railway operations. Large junctions are highly interconnected networks of track where multiple railway lines merge, intersect, and split. The number of possible routings makes this a very complicated problem. We show how the problem can be formulated as a <b>set-packing</b> model with a resource-based constraint system. We prove that this formulation is tighter than the conventional node-packing model, and develop a branch-and-price algorithm that exploits the structure of the <b>set-packing</b> model. A discussion of the variable generation phase, as well as a pricing routine in which these variables are represented by tree structures, is also described. Computational experiments on 25 random timetables show this to be an efficient approach...|$|E
40|$|Traditional ship-scheduling models ignore uncertainty, even {{in highly}} {{volatile}} markets. We present a <b>set-packing</b> model that limits risk using a quadratic variance constraint. After generating first-order linear constraints {{to represent the}} variance constraint, we develop a branch-and-price-and-cut algorithm for medium-sized ship-scheduling problems. Computational results are provided, and extensions are discussed. Risk is prevalent in today’s global economy. Threats of terrorism, depleted oil reserves, and war are examples of new sources of instability. Incomes in the United States have become more volatile, bankruptcies are more frequent, and households are shouldering more uncertainty (Gosselin, 2004). As economic fluctuation increases, logistics planners need to find methods of managing risk. We modify here a traditional <b>set-packing</b> problem for ship scheduling by adding a quadratic constraint to limit the variance of profit. The new model is formulated as max cx s. t. Ax ≤ 1 x T Qx ≤...|$|E
40|$|Facility-layout {{problems}} are well-known {{members of the}} class of wicked problems. Not only are these problems computationally intractable, they defy precise formulation which underscores their 'wickedness'. A conversational optimization methodology is developed for solving the facility-layout planning problem, which utilizes a Lagrangean relaxation process to transform the original problem into a simpler combinatorial optimization problem. The original problem is a <b>set-packing</b> problem, whereas the transformed problem is a relaxed assignment problem. Along with the conversational optimization methodology an APL (a programming language) implementation of the process, a detailed example, and additional examples demonstrating the range and flexibility of the conversational models are presented. ...|$|E
40|$|We {{characterize}} {{when the}} intersection of a <b>set-packing</b> and a set-covering polyhedron or of their corresponding minors has a noninteger vertex. Our result is a common generalization of Lov'asz's characterization of `imperfect' and Lehman's characterization of `nonideal' systems of inequalities, furthermore, it includes new cases in which both types of inequalities occur and interact in an essential way. The proof specializes to a conceptually simple and short common proof for the classical cases, moreover, a typical corollary extracting a new case is the following: if {{the intersection of}} a perfect and an ideal polyhedron has a noninteger vertex, then they have minors whose intersection's coefficient matrix is the incidentce matrix of an odd circuit graph...|$|E
40|$|A sealed-bid {{combinatorial}} auction {{is developed}} for the allocation of airport time slots to competing airlines. This auction procedure permits airlines to submit various contingency bids for flight-compatible combinations of individual airport landing or take-off slots. An algorithm for solving the resulting <b>set-packing</b> problem yields an allocation of slots to packages that maximizes the system surplus as revealed by the set of package bids submitted. The algorithm determines individual (slot) resource prices which are used to price packages to the winning bidders at levels guaranteed to be no greater (and normally smaller) than the amounts bid. Laboratory experiments with cash motivated subjects are used to study the efficiency and demand revelation properties of the combinatorial auction in comparison with a proposed independent slot primary auction. ...|$|E
40|$|A {{mathematical}} model to identify satisficing solutions to infeasible set partitions is introduced. The set-partitioning {{model has been}} {{of interest to the}} location analyst, since it is the basis of a number of spatial problems. This model incorporates the concept of natural slack in a way that permits the decisionmaker to approximate a spatial partition from one of two satisficing directions. One direction identifies the solution which guarantees full demand coverage while minimizing partition overlap. The other identifies the solution which maintains strict partition integrity while minimizing total demand not included in a partition. The first approach yields a set-covering solution and the second yields a <b>set-packing</b> solution. Consequently, the relationships among set covering, set packing, and set partitioning are demonstrated for infeasible spatial partitions. Additionally, a sample problem is presented to illustrate these relationships and the potential of the formulation for use in multiobjective locational analysis is discussed. ...|$|E
40|$|AbstractThe Pattern Minimization Problem (PMP) {{consists}} in finding, among the optimal solutions of a cutting stock problem, one that minimizes {{the number of}} distinct cutting patterns activated. The Work-in-process Minimization Problem (WMP) calls for scheduling the patterns so as to maintain as few open stacks as possible. This paper addresses a particular class of problems, where {{no more than two}} parts can be cut from any stock item, hence the feasible cutting patterns form the arc set of an undirected graph G. The paper extends the case G=Kn introduced in 1999 by McDiarmid. We show that some properties holding for G=Kn are no longer valid for the general case; however, for special cases of practical relevance, properly including G=Kn, quasi-exact solutions for the PMP and the WMP can be found: the latter in polynomial time, the former via a <b>set-packing</b> formulation providing very good lower bounds...|$|E
40|$|The Shortest Path Problem with Resource Constraints is {{a common}} subproblem in many Branch-Cut-and-Price {{algorithms}} (BCP), e. g., routing and scheduling problems. This paper presents a general label-setting algorithm for solving various shortest path problems. An integration of the ‘Shortest Path Problem with Resource Constraints and k-cycle elimination ’ with the ‘Partial Elementarity’ is introduced, and so is a bi-directional label-setting algorithm for solving general Shortest Path Problem with Resource Constraints. Moreover it is shown {{how to handle the}} socalled weighted subset penalties; which say that given a subset of nodes T each weighted with wt ∈ Q: ∀t ∈ T a penalty σ has to be paid for every whole visit to T, i. e., penalty for path P is ⌊∑i∈P∩T wi⌋σ. These additional constraints makes it possible to handle Chvatal Rank 1 cuts applied to a <b>Set-Packing</b> like master problem of a BCP algorithm...|$|E
40|$|When {{combinatorial}} bidding {{is permitted}} in Spectrum Auctions, {{such as the}} upcoming FCC auction # 31, the resulting winner-determination problem can be computationally challenging. We present a branch-and-price algorithm based on a <b>set-packing</b> formulation originally proposed by Dietrich and Forrest (2002). This formulation has a variable for every possible combination of winning bids for each bidder. Our algorithm exploits {{the structure of the}} XOR-of-OR-bidding-language used by the FCC. We also present a new methodology to produce realistic test problems based on the round-by-round-results of FCC auction # 4. We generate test problems which involve 99 items and are substantially larger and more difficult than most of the previously used benchmark problems. Since there are no real-life test problems for combinatorial spectrum auctions, we used these test problems to observe the computational behavior of our algorithm. Our algorithm can solve all 2639 test problems, is very robust and compares favorably to the natural formulation solved using a commercial optimization package...|$|E
40|$|Multiple {{combinations}} of hardware and network components can be selected to design {{an information technology}} (IT) infrastructure that satisfies performance requirements. The professional criterion {{to deal with these}} degrees of freedom is cost minimization. However, a scientific approach has been rarely applied to cost minimization and a rigorous methodological support to cost issues of infrastructural design is still lacking. The methodological contribution of this paper is the representation of complex infrastructural design issues as a set of four intertwined cost-minimization sub-problems: two set-coverings, a <b>set-packing</b> and a min k-cut with a non linear objective function. Optimization is accomplished by sequentially solving all sub-problems with a heuristic approach and finally tuning the solution with a local-search approach. The methodology is empirically verified with a software tool including a database of costs that has also been built as part of this research. The work shows how an overall costminimization approach can provide significant savings and indicates how corresponding infrastructural design rules can substantially differ from the local optima previously identified by the professional literature...|$|E
40|$|In this paper, we {{investigate}} data fusion techniques for target tracking using distributed sensors. Specifically, {{we are interested}} in how pairs of bearing or range sensors can be best assigned to targets in order to minimize the expected error in the estimates. We refer to this as the focus of attention (FOA) problem. In its general form, FOA is NP-hard and not well approximable. However, for specific geometries we obtain significant approximation results: a 2 -approximation algorithm for stereo cameras on a line, a PTAS for when the cameras are equidistant, and a 1. 42 approximation for equally spaced range sensors on a circle. By reposing as a maximization problem - where the goal is to maximize the number of tracks with bounded error - we are able to leverage results from maximum <b>set-packing</b> to render the problem approximable. We demonstrate the results in simulation for a target tracking task, and for localizing a team of mobile agents in a sensor network. These results provide insights into sensor/target assignment strategies, as well as sensor placement in a distributed network...|$|E
40|$|Well-publicized lost {{opportunities}} for U. S. and coalition air forces to strike enemy leadership targets in Afghanistan and Iraq demonstrate {{the importance of}} Time Sensitive Targeting. How do we "pair" the weapon and weapons delivery platform with their target? The available platforms (aircraft, manned or unmanned) {{may be on the}} ground in an alert status, loitering airborne, or on their way to attack other targets. The problem is compounded by the facts that we actually wish to (a) create multiple strike packages simultaneously, (b) recompose existing strike packages that are disrupted by the new plans, (c) minimize such disruptions, (d) satisfy minimum kill probabilities, and (e) avoid the attrition of tasked assets. This thesis develops an automated, optimizing, heuristic decision aid, "RAPT-OR", that rapidly revises a current Air Taking Order (ATO) to meet the requirements above. Using a <b>set-packing</b> model, RAPT-OR, an ATO near optimally, on a desktop PC, in less than two seconds, for a typical scenario with 40 aircraft, four new targets and hundreds of potential strike packages. RAPT-OR allows decision makers the ability of adjusting risk acceptance in the formulation of possible courses of action by manipulating friendly attrition importance in formulating a solution...|$|E
40|$|Abstract. When {{combinatorial}} bidding {{is permitted}} in Spectrum Auctions, {{such as the}} upcoming FCC auction # 31, the resulting winner-determination problem can be compu-tationally challenging. We present a branch-and-price algorithm based on a <b>set-packing</b> formulation originally proposed by Dietrich and Forrest (2002) under contract of the FCC. This formulation has a variable for every possible combination of winning bids for each bid-der. Our algorithm exploits {{the structure of the}} XOR-of-OR-bidding-language used by the FCC. We also present a new methodology to produce realistic test problems based on the round-by-round-results of FCC auction # 4. We generate 2639 test problems which involve 99 items and are substantially larger than most of the previously used benchmark problems. Since there are no real-life test problems for combinatorial spectrum auctions with the XOR-of-OR language, we used these test problems to observe the computational behavior of our algorithm. Our algorithm can solve all but one test problems within ten minutes, appears to be very robust and compares favorably to the natural formulation solved using a commercial optimization package. A version of our code, extended and adapted to accommodate the details of auction # 31...|$|E
40|$|For {{clustering}} of an undirected graph, {{this paper}} presents an exact algorithm for the maximization of modularity density, a more complicated criterion to overcome drawbacks of the well-known modularity. The problem {{can be interpreted as}} the set-partitioning problem, which reminds us of its integer linear programming (ILP) formulation. We provide a branch-and-price framework for solving this ILP, or column generation combined with branch-and-bound. Above all, we formulate the column generation subproblem to be solved repeatedly as a simpler mixed integer linear programming (MILP) problem. Acceleration techniques called the <b>set-packing</b> relaxation and the multiple-cutting-planes-at-a-time combined with the MILP formulation enable us to optimize the modularity density for famous test instances including ones with over 100 vertices in around four minutes by a PC. Our solution method is deterministic and the computation time is not affected by any stochastic behavior. For one of them, column generation at the root node of the branch-and-bound tree provides a fractional upper bound solution and our algorithm finds an integral optimal solution after branching. Comment: Submitted to a journal. Comparison with previous mathematical programming formulations and ours without the acceleration techniques is adde...|$|E
40|$|When {{combinatorial}} bidding {{is permitted}} in auctions, {{such as the}} proposed FCC auction # 31, the resulting full valuations and winner-determination problem can be computationally challenging. We present a branch-and-price algorithm based on a <b>set-packing</b> formulation originally proposed by Dietrich and Forrest (2002). This formulation has a variable for every possible combination of winning bids for each bidder. Our algorithm exploits {{the structure of the}} XOR-of-OR bidding-language used by the FCC. We also present a new methodology to produce realistic test problems based on the round-by-round-results of FCC auction # 4. We generate 2639 test problems which involve 99 items and are substantially larger than most of the previously used benchmark problems. Since there are no real-life test problems for combinatorial spectrum auctions with the XOR-of-OR language, we used these test problems to observe the computational behavior of our algorithm. Our algorithm can solve all but one test problem within ten minutes, appears to be very robust and compares for difficult instances favorably to the natural formulation solved using a commercial optimization package with default settings. Although spectrum auctions are used as the guiding example to describe the merits of branchand-price for combinatorial auctions our approach applies to auctions of multiple goods in other scenarios similarly...|$|E
40|$|Combinatorial {{optimization}} problems {{expressed as}} Boolean constraint satisfaction problems (BCSPs) arise in several contexts, {{ranging from the}} classical unate <b>set-packing</b> problems to the binate minimum cover problems, including the Haplotype Inference by Pure Parsimony (HIPP) problem. These problems are being solved under different formulations and in different formats. Results of experiments that are reported can be seldom compared and replicated. This paper is not about ‘the best BCSP solver’. Rather, it is {{a case study of}} how the scientific method can be applied to comparing the performance of not only BCSP solvers but also other solvers that address NP-hard problems. The approach is founded on two premises: (1) the introduction of instance isomorphs as families of equivalence classes, based on randomized replicas of a given reference instance, and (2) the use of isomorph classes for the design of reproducible experiments with BCSP solvers that includes performance testing hypotheses. We introduce a number of BCSP reference instances from different domains, generate isomorph classes and use various versions of cplex to characterize the solver performance and the isomorph classes themselves. This methodology may make it easier to (1) reliably improve the performance of combinatorial solvers and, (2) report results of experiments under the proposed schema...|$|E
40|$|It is fun {{to travel}} but painful {{to arrange the}} trip. When {{travelers}} start off planning they need flights, accommodation and attractions. Which scattered across multiple websites on the internet? Traveler spends time scouting each of them for the best deals, and gets the attraction reviews from established planners in the market. It will be always good if traveler gives specified designations and time he wants to spend for the trip and some platform will automatically did everything for traveler with added bonus of optimal and customized itineraries. This system is designed for such travelers to design customized itineraries which will be optimal and consist of Point-Of-Interest (POI) selected by traveler, rather than go and visit the traditional and static trip plans by many travel agencies. This system is two-stage processing system for cost effective and optimal results. First is preprocessing stage works offline uses parallel processing engine as MapReduce to precompute Single-Day Itineraries. In further stage which is online the precomputed itineraries are combined to give multiday itineraries. These itineraries produced are optimal as per travelers selected Point-Of-Interest (POI). Here Greedy Approximation Algorithm is used to combine the single day itineraries. In this way Team-Orienteering-Problem (TOP) is transferred to <b>Set-Packing</b> Problem another NP-complete problem...|$|E

