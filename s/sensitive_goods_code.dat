0|1386|Public
5000|$|Consider [...] {{meets the}} Singleton bound with rate of , i.e. [...] has {{relative}} distance [...] In order for [...] {{to be an}} asymptotically <b>good</b> <b>code,</b> [...] {{also needs to be}} an asymptotically <b>good</b> <b>code</b> which means, [...] needs to have rate [...] and relative distance [...]|$|R
5000|$|... 1 not {{all members}} {{participating}} yet2 telecommunications, transport and energy - proposed3 <b>sensitive</b> <b>goods</b> {{to be covered}} from 2012 ...|$|R
5000|$|Kallithea Python {{based project}} {{management}} software with <b>good</b> <b>code</b> review support ...|$|R
40|$|Finding {{the input}} {{distribution}} that maximizes mutual information leads, {{not only to}} the capacity of the channel, but to engineering insights that tell. the designer what <b>good</b> <b>codes</b> should be like. This is due to the folk theorem: The empirical distribution of any <b>good</b> <b>code</b> (i. e., approaching capacity with vanishing probability of error) maximizes mutual information. This paper formalizes and proves this statement...|$|R
50|$|The seventh {{edition of}} Australian Dangerous <b>Goods</b> <b>Code</b> was {{released}} in 2008. However, the sixth edition of Australian Dangerous <b>Goods</b> <b>Code</b> still applies as a substitute to the 7th edition for a period still not decided by governments. The structure of ADG6 which was established in 1998 differs from the current ADG7. Australia is establishing a separate dangerous goods regulation for road and rail transport.|$|R
40|$|We {{consider}} a <b>good</b> <b>code</b> for a discrete memoryless source with a specified distortion level {{to be one}} whose rate {{is close to the}} corresponding rate-distortion function and which, with large probability, reproduces the source within the allowed distortion level. We show that any <b>good</b> <b>code</b> must contain an exponentially large set of codewords, of e#ectively the same rate, which are all typical with respect to the output distribution induced by the rate-distortion achieving channel. Furthermore, the output distribution induced by a <b>good</b> <b>code</b> is asymptotically singular with respect to the i. i. d. output distribution induced by the rate-distortion achieving channel. However, the normalized (Kullback-Leibler) divergence between these output distributions converges to the conditional entropy of the output under the rate-distortion achieving channel...|$|R
5000|$|International Maritime Dangerous <b>Goods</b> <b>Code</b> ("IMDG Code", {{part of the}} International Convention for the Safety of Life at Sea) ...|$|R
50|$|Chapter VII - Carriage of {{dangerous}} goods: Requires the carriage {{of all kinds}} {{of dangerous}} goods to be in compliance with the International Bulk Chemical Code (IBC Code), and the International Maritime Dangerous <b>Goods</b> <b>Code</b> (IMDG Code).|$|R
50|$|Inspection of {{containers}} {{loaded with}} hazardous cargo for compliance with U.S. Coast Guard regulations and/or International Maritime *Dangerous <b>Goods</b> <b>Code.</b>|$|R
5000|$|The {{graphical}} {{nature of}} the language may {{give the impression that}} non-technical staff are capable of writing <b>good</b> <b>code</b> in it. A solid technical background in other programming languages is of great advantage in producing <b>good</b> quality flow <b>code.</b>|$|R
40|$|Let the kth-order {{empirical}} {{distribution of}} a code {{be defined as}} the proportion of k-strings anywhere in the codebook equal to every given k-string. We show that for any fixed k, the kth-order empirical distribution of any <b>good</b> <b>code</b> (i. e., a code approaching capacity with vanishing probability of error) converges in the sense of divergence to the set of input distributions that maximize the input/output mutual information of k channel uses. This statement is proved for discrete memoryless channels as well as a large class of channels with memory. If k grows logarithmically (or faster) with blocklength, the result no longer holds for certain <b>good</b> <b>codes,</b> whereas for other <b>good</b> <b>codes,</b> the result can be shown for k growing as fast as a certain fraction of blocklength...|$|R
40|$|Software {{review is}} a {{necessity}} activity to build high reliability software in software development. In this paper, we experimentally analyze the difference in performance between two types of (checklist based) software reviews: design review and <b>code</b> review. If <b>good</b> <b>code</b> reviewers were also good at design review, then we should assign <b>good</b> <b>code</b> reviewers to the design review too. If not, that means these two reviews require different types of expertise. In our experiment, with ten review participants, we examined two hypotheses each related to the defect detection ratio and the required time to find a defect. As a result, we {{found that there was}} no correlation between two reviews, i. e. <b>good</b> <b>code</b> reviewers were not necessarily the good design reviewers. This suggests the need of a completely different training program for each review. Categories and Subject Descriptor...|$|R
40|$|This {{paper is}} {{dedicated}} to Mark Semenovich Pinsker {{on the occasion of}} his seventieth birthday. We consider a <b>good</b> <b>code</b> for a discrete memoryless source with a specified distortion level to be one whose rate is close to the corresponding rate-distortion function and which, with large probability, reproduces the source within the allowed distortion level. We show that any <b>good</b> <b>code</b> must contain an exponentially large set of codewords, of effectively the same rate, which are all typical with respect to the output distribution induced by the rate-distortion achieving channel. Furthermore, the output distribution induced by a <b>good</b> <b>code</b> is asymptotically singular with respect to the i. i. d. output distribution induced by the rate-distortion achieving channel. However, the normalized (Kullback-Leibler) divergence between these output distributions converges to the conditional entropy of the output under the rate-distortion achieving channel. ...|$|R
3000|$|... [...]. This {{allows the}} {{heuristic}} search algorithms using this cost function to rapidly traverse the code space, thereby allowing <b>good</b> <b>codes</b> {{to be found}} faster.|$|R
30|$|The {{analysis}} {{developed in}} this paper {{is a first step}} towards the choice of <b>good</b> <b>code</b> design techniques for supporting joint security and reliability of transmissions.|$|R
40|$|We {{present a}} {{symmetric}} LDPC code with constant rate and constant distance (i. e. <b>good</b> LDPC <b>code)</b> that its constraint space {{is generated by}} the orbit of one constant weight constraint under a group action. Our construction provides the first symmetric LDPC <b>good</b> <b>codes.</b> This solves the main open problem raised by Kaufman and Wigderson in [4]...|$|R
40|$|Abstract—The weight {{spectrum}} of sequences of binary linear codes that achieve arbitrarily small word error probability on {{a class of}} noisy channels at a nonzero rate is studied. We refer to such sequences as <b>good</b> <b>codes.</b> The class of <b>good</b> <b>codes</b> includes turbo, low-density parity-check, and repeat-accumulate codes. We show that a sequence of <b>codes</b> is <b>good</b> when transmitted over a memoryless binary-symmetric channel (BSC) or an additive white Gaussian noise (AWGN) channel {{if and only if}} the slope of its spectrum is finite everywhere and its minimum Hamming distance goes to infinity with no requirement on its rate growth. The extension of these results to code ensembles in probabilistic terms follows in a direct manner. We also show that the sufficient condition holds for any binary-input memoryless channel. Index Terms—Binary linear <b>code,</b> <b>good</b> <b>codes,</b> low-density parity-check codes, maximum-likelihood (ML) decoding, turbo codes, weight spectrum. I...|$|R
50|$|We can {{construct}} a code that achieves the Zyablov bound in polynomial time. In particular, we can construct explicit asymptotically <b>good</b> <b>code</b> (over some alphabets) in polynomial time.|$|R
40|$|In {{this paper}} we {{presented}} a particular approach to design power and bandwidth efficient trellis coded partial response signaling (TCPRS). Two theorems {{enable us to}} find <b>good</b> TCPRS <b>codes</b> based on <b>good</b> <b>codes</b> for trellis coded modulation (TCM). A class of <b>good</b> TCPRS <b>codes</b> is thus found. The free dis-tance and asymptotic coding gain is calculated, and a maximum coding of 4 dB {{can be achieved by}} this class of codes. We also discuss the distance structure of this class of codes, and finally the performance at median signal to noise ratio (SNR) is presented. ...|$|R
40|$|Abstract — This paper {{considers}} {{the problem of}} secure coding design for a type II wiretap channel, where the main channel is noiseless and the eavesdropper channel is a general binary-input symmetric-output memoryless channel. The proposed secure error-correcting code has a nested code structure. Two secure nested coding schemes are studied for a type II Gaussian wiretap channel. The nesting is based on cosets of a <b>good</b> <b>code</b> sequence for the first scheme and on cosets of the dual of a <b>good</b> <b>code</b> sequence for the second scheme. In each case, the corresponding achievable rate-equivocation pair is derived based on the threshold behavior of <b>good</b> <b>code</b> sequences. The two secure coding schemes together establish an achievable rate-equivocation region, which almost covers the secrecy capacity-equivocation region in this case study. The proposed secure coding scheme is extended to a type II binary symmetric wiretap channel. A new achievable perfect secrecy rate, which improves upon the previously reported result by Thangaraj et al., is derived for this channel. I...|$|R
40|$|Students {{who start}} {{learning}} to program often {{find it difficult}} to acquire programming concepts. Among all teaching materials, code example is favoured most by both teachers and students. A number of code examples can be found in on-line resources, such as TutorialsPoint and W 3 School, however, there is not much work on standardising <b>good</b> <b>code</b> examples. This paper proposed a process to prepare <b>good</b> <b>code</b> example for searching. First, we will define characteristics for <b>good</b> <b>code</b> example, followed by a set of preprocessing methods for extracting and processing these characteristics for searching. To evaluate the perceived usefulness of the extracted and processed characteristics for searching, we devised a questionnaire to evaluate the perceived usefulness of the extracted and processed characteristics that will be used {{in the development of the}} code example search engine. The positive outcome of this preliminary work enabled us to start work on the code example search system to be used by novice programmers to learn programming...|$|R
40|$|<b>Sensitive</b> <b>Goods</b> (i. e. fruits, vegetables, paper rolls, cellulose) need {{a special}} {{treatment}} in a logistic environment. For this reason the logistic processes {{have to be}} planned in consideration of special transportation conditions. In this context, the existence of possible hazards and chances has to be regarded. In order to handle the existing risks of logistic systems and especially for <b>sensitive</b> <b>goods</b> we propose a proactive risk management (RM) system to supplement a holistic process management. It supports the design of processes which are robust and insusceptible to existing and occurring anthropogenic and environmental hazards. This paper analyzes essential parts for a convenient risk definition and examines concepts and tools that allow the adequate management of system and process related risk...|$|R
40|$|We {{show how}} <b>good</b> quantum error-correcting <b>codes</b> can be {{constructed}} using generalized concatenation. The inner codes are quantum codes, the outer codes can be linear or nonlinear classical <b>codes.</b> Many new <b>good</b> <b>codes</b> are found, including both stabilizer codes as well as so-called nonadditive codes. Comment: 5 pages, to be presented at ISIT 200...|$|R
40|$|We {{consider}} {{a world in}} which individuals have private endowments and trade in markets, while their utility is sensitive to the consumption of their neighbors. Our interest is in understanding how social structure of comparisons, taken together with the familiar fundamentals of the economy � endowments, technology and preferences � shapes equilibrium prices, allocations and welfare. We find that equilibrium prices and allocations depend on average individual centrality in the social network. As we add links to a social network, the centralities rise and this pushes up prices of the socially <b>sensitive</b> <b>good.</b> Newly linked agents demand more of the socially <b>sensitive</b> <b>good,</b> while the reverse happens with regard to the standard good. We derive a formula to compute the critical link, i. e., the new link which maximizes price increase. We then turn to a model with heterogenous endowments, and find that inequality in network centrality and in wealth inequality reinforce each other. Thus a transfer of resources from less to more central agents raises prices of the socially <b>sensitive</b> <b>good</b> and alters allocations and utilities of all agents. We show by example that poor individuals lose utility while rich individuals gain utility as society moves from segregation to integration. ...|$|R
40|$|Abstract—We {{show how}} <b>good</b> quantum error-correcting <b>codes</b> can be {{constructed}} using generalized concatenation. The inner codes are quantum codes, the outer codes can be linear or nonlinear classical <b>codes.</b> Many new <b>good</b> <b>codes</b> are found, including both stabilizer codes as well as so-called nonadditive codes. Index Terms—Generalized concatenated codes, quantum error correction, stabilizer codes, nonadditive codes I...|$|R
50|$|Electric {{track vehicle}} systems operate {{horizontal}} and vertical in {{one and the same}} vehicle per transport job. Conveying without transfer allows gentle transport of <b>sensitive</b> <b>goods.</b> Vehicle destination is usually typed into a touchscreen terminal at the station. The vehicles operate with a speed up to 1 m/s.|$|R
50|$|Items on the Commerce Control List (CCL) - which {{includes}} many <b>sensitive</b> <b>goods</b> and technologies like encryption software - require a permit from the Department of Commerce {{before they can}} be exported. To determine whether an export permit is required, an Export Control Classification Number (ECCN) is used.|$|R
30|$|As {{shown in}} [24], the Vandermonde {{structure}} minimizes an upper bound of the pairwise error probability at high signal-to-noise ratios (SNRs). Moreover, this structure yields a <b>good</b> <b>coding</b> gain {{and makes the}} transmission more robust to ill-conditioned/rank-deficient MIMO channels [25].|$|R
40|$|This paper {{introduces}} {{the problem of}} joint source-channel coding in the setup where channel errors are adversarial and the distortion is worst case. Unlike {{the situation in the}} case of stochastic source-channel model, the separation principle does not hold in adversarial setup. This surprising observation demonstrates that designing <b>good</b> distortion-correcting <b>codes</b> cannot be done by serially concatenating <b>good</b> covering <b>codes</b> with <b>good</b> error-correcting <b>codes.</b> The problem of the joint code design is addressed and some initial results are offered...|$|R
40|$|This {{paper is}} {{motivated}} by the computer-generated nonadditive code described in Rains et al [RHSN 97]. We describe a theory of non-stabilizer codes of which the nonadditive code of Rains et al is an example. Furthermore, we give a general strategy of constructing <b>good</b> nonstabilizer <b>codes</b> from <b>good</b> stabilizer <b>codes</b> and give some explicit constructions and asymptotically <b>good</b> nonstabilizer <b>codes.</b> Like {{in the case of}} stabilizer codes, we can design fairly efficient encoding and decoding procedures. ...|$|R
5000|$|ICT Minister Sitthichai {{became a}} vocal critic of open source software. In an interview, he noted, [...] "With open source, {{there is no}} {{intellectual}} property. Anyone can use it and all your ideas become public domain. If nobody can make money from it, {{there will be no}} development and open source software quickly becomes outdated... As a programmer, if I can write <b>good</b> <b>code,</b> why should I give it away? Thailand can do <b>good</b> source <b>code</b> without open source." ...|$|R
40|$|In {{the last}} lecture, we {{introduced}} code concatenation, where we compose an outer code Cout with an inner code Cin. We derived the Zyablov bound by picking Cout on the Singleton bound and Cin on the GV bound. We also presented a polynomial time {{construction of a}} code that achieves the Zyablov bound (and hence, an asymptotically <b>good</b> <b>code).</b> A somewhat unsatisfactory aspect of this construction was the brute force search for a suitable inner code (which lead to the polynomial construction time). In today’s lecture, we will study a strongly explicit construction of an asymptotically <b>good</b> <b>code.</b> 1 Strongly explicit construction A polynomial time construction of an asymptotically <b>good</b> <b>code</b> was presented in the last lecture. A natural followup question is if {{we can have a}} strongly explicit construction. Technically speaking, by strongly explicit construction, we mean a log space construction. However, we will not formally define this notation. We will now consider the so called Justesen code [1]. Justesen code is concatenation code with different linear inner codes, which is composed of an (N, K, D) qk outer code Cout and different (n, k, d) q inner codes Ci in: 1 ≤ i ≤ N. Formally...|$|R
40|$|This paper {{considers}} {{the problem of}} secure coding design for a type II wiretap channel, where the main channel is noiseless and the eavesdropper channel is a general binary-input symmetric-output memoryless channel. The proposed secure error-correcting code has a nested code structure. Two secure nested coding schemes are studied for a type II Gaussian wiretap channel. The nesting is based on cosets of a <b>good</b> <b>code</b> sequence for the first scheme and on cosets of the dual of a <b>good</b> <b>code</b> sequence for the second scheme. In each case, the corresponding achievable rate-equivocation pair is derived based on the threshold behavior of <b>good</b> <b>code</b> sequences. The two secure coding schemes together establish an achievable rate-equivocation region, which almost covers the secrecy capacity-equivocation region in this case study. The proposed secure coding scheme is extended to a type II binary symmetric wiretap channel. A new achievable perfect secrecy rate, which improves upon the previously reported result by Thangaraj et al., is derived for this channel. Comment: To appear in the Proceedings of the 2007 IEEE Information Theory Workshop on Frontiers in Coding Theory, Lake Tahoe, CA, September 2 - 6, 200...|$|R
40|$|This paper {{analyses}} expenditure on environmentally <b>sensitive</b> <b>goods</b> {{and services}} for the member states of the EEC. The main data source used was the EUROSTAT Family Budgets (EUROSTAT 1992, 1993), which contains detailed household consumption data based on surveys {{carried out in the}} 12 member states in 1988. The national surveys are consolidated o...|$|R
40|$|It {{is shown}} that the encoding/decoding problem for any asynchronous-user {{discrete}} memoryless multiple-access channel {{can be reduced to}} corresponding problems for at most 2 M - 1 single-user discrete memoryless channels. This result, which extends a similar result for Gaussian channels, reduces the seemingly hard task of finding <b>good</b> multiple-access <b>codes</b> to the much better understood task of finding <b>good</b> <b>codes</b> for single-user channels. As a by-product, some interesting properties of the capacity region of-user asynchronous discrete memoryless channels are derived...|$|R
50|$|Where coding {{conventions}} {{have been}} {{specifically designed to}} produce high-quality code, and have then been formally adopted, they then become coding standards. Specific styles, irrespective of whether they are commonly adopted, do not automatically produce <b>good</b> quality <b>code.</b> It is {{only if they are}} designed to produce <b>good</b> quality <b>code</b> that they actually result in <b>good</b> quality <b>code</b> being produced, i.e., they must be very logical in every aspect of their design - every aspect justified and resulting in quality code being produced.|$|R
