9271|4355|Public
25|$|Implementations of: the GPU Tabu Search {{algorithm}} {{solving the}} Resource Constrained Project <b>Scheduling</b> <b>problem</b> is freely available on GitHub; the GPU algorithm solving the Nurse Rerostering problem is freely available on GitHub.|$|E
25|$|Details of the <b>scheduling</b> <b>problem</b> {{define the}} {{structure}} of the graph. For example, when assigning aircraft to flights, the resulting conflict graph is an interval graph, so the coloring problem can be solved efficiently. In bandwidth allocation to radio stations, the resulting conflict graph is a unit disk graph, so the coloring problem is 3-approximable.|$|E
500|$|After the {{resolution}} of the strike, Lindelof said that the effect of the strike on the fourth season would be minimal and the season's story arc would be completed as originally intended. However, the first draft of the second part of [...] "There's No Place Like Home," [...] was 85 pages long, approximately 30 pages longer than a typical one hour Lost script. Lindelof and Cuse found that they could not compress {{the second half of the}} season finale into one episode and actually wanted to expand it. Subsequently, the show runners went into [...] "advanced talks" [...] with executives at ABC and convinced them to produce one of their episodes [...] "in the bank", thereby extending [...] "There's No Place Like Home: Part 2" [...] to two hours. However, this caused a <b>scheduling</b> <b>problem</b> with Grey's Anatomy and Ugly Betty, which were both already scheduled to air their season finales on May 22, 2008. To allow Lost to have a two-hour finale, ABC moved it one week later to May 29, 2008 and aired both parts of [...] "There's No Place Like Home" [...] back-to-back. Ultimately, this left thirty-four episodes to be split over seasons five and six, which will each have seventeen episodes. Another effect of the strike was that the backstories of the so-called [...] "freighter folk", i.e. Faraday, Miles and Charlotte, had to be pushed back to season five. As such, the writers dropped hints to Charlotte's backstory in [...] "There's No Place Like Home".|$|E
40|$|International audienceIn this paper, {{we discuss}} <b>scheduling</b> <b>problems</b> in {{semiconductor}} manufacturing. Starting from describing the manufacturing process, we identify typical <b>scheduling</b> <b>problems</b> found in semiconductor manufacturing systems. We describe batch <b>scheduling</b> <b>problems,</b> parallel machine <b>scheduling</b> <b>problems,</b> job shop <b>scheduling</b> <b>problems,</b> <b>scheduling</b> <b>problems</b> with auxiliary resources, multiple orders per job <b>scheduling</b> <b>problems,</b> and <b>scheduling</b> <b>problems</b> related to cluster tools. We also present important solution techniques {{that are used}} to solve these <b>scheduling</b> <b>problems</b> by means of specific examples, and report on known implementations. Finally, we summarize some of the challenges in scheduling semiconductor manufacturing operations...|$|R
40|$|For {{benchmarking}} {{purposes and}} to allow reproduction of the results for flexible job shop <b>scheduling</b> <b>problems</b> and extended flexible job shop <b>scheduling</b> <b>problems,</b> the sets of instances used are available for download at [URL] benchmarking purposes {{and to allow}} reproduction of the results for flexible job shop <b>scheduling</b> <b>problems</b> and extended flexible job shop <b>scheduling</b> <b>problems,</b> the sets of instances used are available for download at [URL]...|$|R
40|$|Abstract: The {{just-in-time}} production {{philosophy has}} led to a growing interest in <b>scheduling</b> <b>problems</b> considering both earliness and tardiness penalties. Most publications considering these so-called non-regular objective functions are devoted to single machine problems. In the case of multi-machine problems, there are some papers dealing with parallel machine problems. However, for multi-operation <b>scheduling</b> <b>problems</b> such as shop <b>scheduling</b> <b>problems,</b> investigations have begun only recently. In this paper, inspired by recent own work (partly yet unpublished), we survey some results on multi-machine <b>scheduling</b> <b>problems</b> with a given common due date, where the focus is on possible approaches for shop <b>scheduling</b> <b>problems.</b> Key words: Multi-machine scheduling, common due date, nonregular criteria, earlinesstardiness penalties...|$|R
2500|$|Multistage flowshop <b>scheduling</b> <b>problem</b> (MFSP) with {{sequence}} dependent setup/changeover times ...|$|E
2500|$|One {{motivation}} for equitable coloring suggested by [...] concerns scheduling problems. In this application, the vertices of a graph represent {{a collection of}} tasks to be performed, and an edge connects two tasks {{that should not be}} performed at the same time. A coloring of this graph represents a partition of the tasks into subsets that may be performed simultaneously; thus, the number of colors in the coloring corresponds to the number of time steps required to perform the entire task. Due to load balancing considerations, it is desirable to perform equal or nearly-equal numbers of tasks in each time step, and this balancing is exactly what an equitable coloring achieves. [...] mentions a specific application of this type of <b>scheduling</b> <b>problem,</b> assigning university courses to time slots in a way that spreads the courses evenly among the available time slots and avoids scheduling incompatible pairs of courses {{at the same time as}} each other.|$|E
50|$|A special type of {{flow shop}} <b>scheduling</b> <b>problem</b> is the {{permutation}} flow shop <b>scheduling</b> <b>problem</b> {{in which the}} processing order of the jobs on the resources {{is the same for}} each subsequent step of processing.|$|E
40|$|<b>Scheduling</b> <b>problems</b> {{deal with}} how to {{sequence}} a list of jobs {{with the objective of}} minimizing some measurement of the job completion times. Inverse <b>scheduling</b> <b>problems</b> assume that a job sequence is given and the objective is to determine the minimal perturbation to the job parameters (e. g. processing times) so that the given sequence becomes optimal with respect to a pre-selected objective function. The objective {{of this paper is to}} study inverse <b>scheduling</b> <b>problems.</b> It will be shown that these problems can be formulated as linear programming (LP) problems even when, in some cases, the corresponding forward <b>scheduling</b> <b>problems</b> are not solvable in polynomial time. Several applications are discussed, including the generation of benchmark optimal solutions for NP-hard forward <b>scheduling</b> <b>problems...</b>|$|R
40|$|The {{purpose of}} this paper is to present {{examples}} for the sometimes surprisingly different behavior of deterministic and stochastic <b>scheduling</b> <b>problems.</b> In particular, it demonstrates some seemingly counterintuitive properties of optimal scheduling policies for stochastic machine <b>scheduling</b> <b>problems.</b> ...|$|R
40|$|We {{survey and}} extend the results on the {{complexity}} of machine <b>scheduling</b> <b>problems.</b> After {{a brief review of}} the central concept of NP-completeness we give a classification of <b>scheduling</b> <b>problems</b> on single, different and identical machines and study the influence of various parameters on their complexity. The problems for which a polynomial-bounded algorithm is available are listed and NP-completeness is established for a large number of other machine <b>scheduling</b> <b>problems.</b> We finally discuss some questions that remain unanswered...|$|R
50|$|The {{interval}} <b>scheduling</b> <b>problem</b> can {{be viewed}} as a profit maximization problem, where the number of intervals in the mutually compatible subset is the profit. The charging argument can be used to show that the earliest finish time algorithm is optimal for the interval <b>scheduling</b> <b>problem.</b>|$|E
5000|$|NPO(II): Equals PTAS. Contains the Makespan <b>scheduling</b> <b>problem.</b>|$|E
5000|$|Multistage flowshop <b>scheduling</b> <b>problem</b> (MFSP) with {{sequence}} dependent setup/changeover times ...|$|E
40|$|International audienceThis paper compares <b>scheduling</b> <b>problems</b> in {{manufacturing}} industry with <b>scheduling</b> <b>problems</b> in service industry and more particular {{in health care}} sector. Our objective {{is to show that}} manufacturing scheduling is not so far than health care resource scheduling and that scheduling knowledge could be adapted and transferred to health care managers. <b>Scheduling</b> <b>problems</b> are quite well classified, problem complexity are known most of the time and health care solution could be found with decision making tools previously developed for manufacturing. We conclude that the main difficulty for the analyst to specify <b>scheduling</b> <b>problems</b> {{in manufacturing}} or service industry is to acquire the ability to model the problem using known characteristics from the literature...|$|R
40|$|During {{the last}} 15 years, many {{mathematical}} {{models have been}} developed in order to solve process operation <b>scheduling</b> <b>problems,</b> using discrete or continuous time representations. In this paper, we present a unified representation and modeling approach for process <b>scheduling</b> <b>problems.</b> Four different time representations are presented, compared, and applied to single-stage and multi-stage batch <b>scheduling</b> <b>problems,</b> as well as crude-oil operations <b>scheduling</b> <b>problems.</b> We introduce three solution methods {{that can be used}} to achieve global optimality or obtain near-optimal solutions depending on the stop criterion used. Computational results show that the Multi-Operation Sequencing time representation is superior to the others as it allows efficient symmetry-breaking and requires fewer priority-slots, thus leading to smaller model sizes...|$|R
40|$|The {{presence}} of symmetry {{is common in}} certain types of <b>scheduling</b> <b>problems.</b> Symmetry can occur when one is scheduling a collection of jobs on multiple identical machines, or if one is determining production schedules for identical machines. General symmetry-breaking methods can be strengthened {{by taking advantage of}} the special structure of the symmetry group in <b>scheduling</b> <b>problems.</b> In this paper, we examine the effectiveness of symmetry-breaking methods for <b>scheduling</b> <b>problems.</b> We also present a modified version of orbital branching, a powerful symmetry-breaking procedure, and discuss when it should and should not be used in practice. Using operating room and power generator <b>scheduling</b> <b>problems</b> as sample problems, we will provide computational results comparing different methods of symmetry breaking...|$|R
50|$|Although VRSP {{is related}} to the Single Depot Vehicle <b>Scheduling</b> <b>Problem</b> and the Multi Depot Vehicle <b>Scheduling</b> <b>Problem,</b> there is a {{significant}} difference in runtime requirements, as VRSP need to be solved in near real-time to allow rescheduling during operations, while SDVSP and MDVSP are typically solved using long running linear programming methods.|$|E
5000|$|Hybrid Estimation of Distribution Algorithm for the Quay Crane <b>Scheduling</b> <b>Problem</b> ...|$|E
5000|$|Stochastic Algorithms : Economic Lot <b>Scheduling</b> <b>Problem</b> and Economic {{production}} quantity ...|$|E
40|$|Tyt. z nagłówka. Bibliogr. s. 35 - 36. In recent years, {{many papers}} {{concerning}} <b>scheduling</b> <b>problems</b> with simultaneous learning and ageing effects were published. In this paper, {{the state of}} the art of research concerning these problems is presented. In order to facilitate understanding this subject, the <b>scheduling</b> <b>problems</b> where these effects occur separately, are firstly explained. Then, the papers devoted to <b>scheduling</b> <b>problems</b> combining the effects of learning and ageing are discussed. Particular attention was paid on practical applications of the considered <b>scheduling</b> <b>problems.</b> After thorough analysis it turned out that both <b>scheduling</b> <b>problems</b> with learning effect, and with ageing effect, as well as, in particular, the problems with models merging learning and ageing effects do not have any reasonable real-life applications. This is because the learning and ageing effects are in general long time horizon phenomena observed in repetitive systems and scheduling theory concerns either with repetitive short-horizon planning problems or single long-horizon projects. Therefore, there is no sense to continue research considering these <b>scheduling</b> <b>problems</b> from practical (computer engineering, automatic control, technical and economical) point of view, unless such reasonable real-life example appears. Dostępny również w wersji drukowanej. KEYWORDS: scheduling, learning effect, ageing effect, real-life applications...|$|R
40|$|Planning and {{scheduling}} are areas attracting an unceasing attention of computer science community. However, despite of their similar character, planning and <b>scheduling</b> <b>problems</b> are usually handled independently using different methods and technologies. While Artificial Intelligence technology is more relevant for planning problems, Operations Research {{has a long}} tradition in studying <b>scheduling</b> <b>problems.</b> Recently, Constraint Programming brings a fresh breeze to both areas as it allows a combination of various methods to solve the planning and <b>scheduling</b> <b>problems</b> within single declarative framework. In th...|$|R
40|$|Logic-based Benders {{decomposition}} {{can combine}} mixed integer programming and constraint programming to solve planning and <b>scheduling</b> <b>problems</b> {{much faster than}} either method alone. We find that a similar technique can be beneficial for solving pure <b>scheduling</b> <b>problems</b> as the problem size scales up. We solve single-facility non-preemptive <b>scheduling</b> <b>problems</b> with time windows and long time horizons that are divided into segments separated by shutdown times (such as weekends). The objective is to find feasible solutions, minimize makespan, or minimize total tardiness...|$|R
5000|$|Several {{products}} {{produced on}} the same machine: Economic lot <b>scheduling</b> <b>problem</b> ...|$|E
5000|$|Several {{products}} {{produced on}} the same machine: Economic Lot <b>Scheduling</b> <b>Problem</b> ...|$|E
5000|$|The {{performance}} {{measures of the}} tasks in the single machine <b>scheduling</b> <b>problem</b> include: ...|$|E
40|$|Abstract. Many <b>scheduling</b> <b>problems</b> involve {{reasoning}} about tasks {{which may}} or may not actually occur, so called optional tasks. The state-ofthe-art approach to modelling and solving such problems makes use of interval variables which allow a start time of ⊥ indicating the task does not run. In this paper we show we can model interval variables in a lazy clause generation solver, and create explaining propagators for scheduling constraints using these interval variables. Given the success of lazy clause generation on many <b>scheduling</b> <b>problems,</b> this combination appears to give a powerful new solving approach to <b>scheduling</b> <b>problems</b> with optional tasks. We demonstrate the new solving technology on wellstudied flexible job-shop <b>scheduling</b> <b>problems</b> where we are able to close 36 open problems. ...|$|R
40|$|We {{identify}} {{two classes}} of machine <b>scheduling</b> <b>problems</b> with time lags that possess Polynomial-Time Approximation Schemes (PTASs). These classes together, one for minimizing makespan and one for minimizing total completion time, include many well-studied time lag <b>scheduling</b> <b>problems.</b> The running times of these approximation schemes are polynomial {{in the number of}} jobs, but exponential in the number of machines and the ratio between the largest time lag and the smallest positive operation time. These classes constitute the first PTAS results for <b>scheduling</b> <b>problems</b> with time lags...|$|R
40|$|This paper {{considers}} one-sided <b>scheduling</b> <b>problems,</b> where a <b>schedule</b> {{of service}} is arranged at one location, {{without regard to}} other schedules. Typically, such <b>scheduling</b> <b>problems</b> are handled on a first-come-firstserve basis, which is grossly inefficient. The present paper proposes a scheduling mechanism that is a non-standard auction, in which the allocation is ruled by evaluating combinations of bids. The proposed mechanism implements the efficient allocation in dominant strategies and is deficit-free. Since that mechanism is suitable for the <b>scheduling</b> <b>problems</b> at sea-ports, loading or unloading at sea-ports is used as an illustration...|$|R
5000|$|Open-shop scheduling, Job Shop Scheduling, Flow Shop <b>Scheduling</b> <b>Problem,</b> {{optimization}} {{problems in}} computer science.|$|E
50|$|The driver <b>scheduling</b> <b>problem</b> (DSP) is type {{of problem}} in {{operations}} research and theoretical computer science.|$|E
50|$|This {{algorithm}} {{is analogous to}} the earliest deadline first scheduling solution to the interval <b>scheduling</b> <b>problem.</b>|$|E
40|$|This paper {{describes}} a GA for job shop <b>scheduling</b> <b>problems.</b> Using the Giffler and Thompson algorithm, we created two new operators, THX crossover and mutation, which better transmit temporal {{relationships in the}} schedule. The approach produced excellent results on standard benchmark job shop <b>scheduling</b> <b>problems.</b> We further tested many models and scales of parallel GAs {{in the context of}} job shop <b>scheduling</b> <b>problems.</b> In our experiments, the hybrid model consisting of coarse-grain GAs connected in a fine-grain-GA-style topology performed best, appearing to integrate successfully the advantages of coarse-grain and fine-grain GAs. ...|$|R
40|$|We {{propose the}} {{adaptive}} algorithm for solving {{a set of}} similar <b>scheduling</b> <b>problems</b> using learning technology. It is devised to combine the merits of an exact algorithm based on the mixed graph model and heuristics oriented on the real-world <b>scheduling</b> <b>problems.</b> The former may ensure high quality of the solution {{by means of an}} implicit exhausting enumeration of the feasible schedules. The latter may be developed for certain type of problems using their peculiarities. The main idea of the learning technology is to produce effective (in performance measure) and efficient (in computational time) heuristics by adapting local decisions for the <b>scheduling</b> <b>problems</b> under consideration. Adaptation is realized at the stage of learning while solving a set of sample <b>scheduling</b> <b>problems</b> using a branch-and-bound algorithm and structuring knowledge using pattern recognition apparatus...|$|R
40|$|In this work, we take {{advantage}} of the powerful quadratic programming theory to obtain optimal solutions of <b>scheduling</b> <b>problems.</b> We apply a methodology that starts, in contrast to more classical approaches, by formulating three unrelated parallel machine <b>scheduling</b> <b>problems</b> as 0 - 1 quadratic programs under linear constraints. By construction, these quadratic programs are non-convex. Therefore, before submitting them to a branch-and-bound procedure, we reformulate them {{in such a way that}} we can ensure convexity and a high-quality continuous lower bound. Experimental results show that this methodology is interesting by obtaining the best results in literature for two of the three studied <b>scheduling</b> <b>problems.</b> <b>Scheduling</b> Quadratic programming Convex reformulations Parallel machines...|$|R
