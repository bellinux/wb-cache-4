5|196|Public
2500|$|A toggle {{light switch}} is a switch, most {{commonly}} used to operate electric lights, permanently connected equipment, or electrical outlets whereby the <b>switch</b> <b>handle</b> does not control the contacts directly, but through an intermediate arrangement of internal springs and levers. The toggle light switch is safe, reliable, and durable, but produces a loud [...] "snap" [...] or [...] "click" [...] noise when a person's finger manually flips the toggle light switch into the on/off position. The design for the toggle light switch was patented in 1916 by William J. Newton and Morris Goldberg of Lynbrook, New York.|$|E
40|$|An {{improved}} lockout assembly for locking {{a circuit}} breaker in a selected off or on position is provided. The lockout assembly includes a lock block and a lock pin. The lock block has a hollow interior which fits over the free end of a <b>switch</b> <b>handle</b> of the circuit breaker. The lock block includes at least one hole that is placed in registration {{with a hole in}} the free end of the <b>switch</b> <b>handle.</b> A lock tab on the lock block serves to align and register the respective holes on the lock block and <b>switch</b> <b>handle.</b> A lock pin is inserted through the registered holes and serves to connect the lock block to the <b>switch</b> <b>handle.</b> Once the lock block and the <b>switch</b> <b>handle</b> are connected, the position of the <b>switch</b> <b>handle</b> is prevented from being changed by the lock tab bumping up against a stationary housing portion of the circuit breaker. When the lock pin is installed, an apertured-end portion of the lock pin is in registration with another hole on the lock block. Then a special scissors conforming to O. S. H. A. regulations can be installed, with one or more padlocks, on the lockout assembly to prevent removal of the lock pin from the lockout assembly, thereby preventing removal of the lockout assembly from the circuit breaker...|$|E
40|$|An {{improved}} lockout assembly {{is provided}} for {{a circuit breaker}} to lock the <b>switch</b> <b>handle</b> into a selected switch position. The lockout assembly includes two main elements, each having a respective foot for engaging {{a portion of the}} upper housing wall of the circuit breaker. The first foot is inserted into a groove in the upper housing wall, and the second foot is inserted into an adjacent aperture (e. g., a slot) in the upper housing wall. The first foot is slid under and into engagement with a first portion, and the second foot is slid under and into engagement with a second portion of the upper housing wall. At the same time the respective two feet are placed in engagement with the respective portions of the upper housing wall, two holes, one on each of the respective two main elements of the assembly, are placed in registration; and a locking device, such as a special scissors equipped with a padlock, is installed through the registered holes to secure the lockout assembly on the circuit breaker. When the lockout assembly of the invention is secured on the circuit breaker, the <b>switch</b> <b>handle</b> of the circuit breaker is locked into the selected switch position and prevented from being switched to another switch position...|$|E
40|$|This {{technical}} report investigates how the Alloy NS- 16 J 16 -port <b>switch</b> <b>handles</b> packets arriving on its backplane using three different methods of starting packet bursts. The packet bursts are generated by Netcom SmartBits 2000 using Netcom SmartWindow software. The switch {{will be used}} in future research as part of the MAGIC project...|$|R
5000|$|I/O: Joystick and console <b>switch</b> IO <b>handled</b> by 6532 RIOT and TIA ...|$|R
5000|$|With the {{popularity}} of USB—USB keyboards, mice, and I/O devices are still the most common devices connected to a KVM switch. The classes of KVM switches that are reviewed, are based on different types of core technologies {{in terms of how}} the KVM <b>switch</b> <b>handles</b> USB I/O devices—including keyboards, mice, touchscreen displays, etc. (USB-HID= USB Human Interface Device) ...|$|R
40|$|Photograph of Ford {{automobile}} lubrication diagram, Southern California, 1930. "Universal {{joint housing}} cap inner, Universal joint housing cap felt, Drive shaft bearing, Drive shaft bearing sleeve, Grease retainer, Rear radius rods, Torque tube, Universal joint, Speedometer driving gear, Speedometer driven gear, Speedometer driven gear shaft, Universal joint housing cap-outer, Rear radius rod bolt; Steering gear adjusting screw, Steering worm adjusting sleeve, Steering worm bearing roller, Steering gear housing, Steering gear housing plug, Steering worm, Steering worm bearing cup, Horn switch wire, Lighting <b>switch</b> <b>handle</b> tube, Steering column clamp, Steering chaft, Steering gear housing cover adjusting stud, Steering worm sector, Steering gear housing cover, Steering gear housing eccentric rivet, Steering arm, Light & horn wire, Light switch, Steering gear housing end plate" [...] on diagram...|$|E
40|$|Intelligent Transport Systems (ITS) is {{a general}} term for information-and commuication systems aimed at making the {{transport}} sector more safe, efficient and environmentally friendly. During the recent years, cars have been equipped with numerous ITS applications such as parking assistant, cruise control and even collision avoidance systems directly interfering with the car to avoid an imminent collision. Car companies claim that autonomous cars, i. e. cars capable of driving without human interference, {{will be on the}} market {{by the end of the}} decade. Private Rapid Transport (PRT) is an emerging public transportation branch combining several different applications developed for ITS. The main difference between PRT and more tradition public transport systems is that the vehicles are operating on demand. When customers places an order, the system will summon the closest vehicle, which will pick up the customers and deliver them at the desired destination automatically. To avoid interference with other vehicles and pedestrians, the vehicles will run along specially built guideways usually separated by levitation. The goal is to make PRT a realistic alternative to the private car by offering close to the same privacy and flexibility. To offer the same flexibility as a car, the system must provide sufficient departure and destination stations. To achieve this, the guideways are intended to form a mesh network scattered all over cities and their suburbs. However, no operational PRT systems with more than five stations exist today. Lego offers a wide range of products spanning from more or less realistic models of trains and other vehicles to advanced programmable robots. Mindstorms is Legos robotic theme, which was introduced in 1998. In this thesis, I have used EV 3, which is the third generation of Lego Mindstorms. EV 3 features many different advanced sensors and both powerful and accurate servo motors that can be connected to and controlled by the EV 3 intelligent brick. By installing the Lego Java Operating System (LeJOS) on the intelligent brick, it is possible make programs in Java and use all the libraries included in the Java 7 Standard Edition. In addition, LeJOS makes the intelligent brick support WiFi communication, leaving developers with their imagination as the biggest restriction. The different pieces are designed to be compatible with each other in some way, regardless of age or theme. This means that a simple Lego toy intended for children under the age of ten can be rebuilt and combined with Lego Mindstorms to become a sophisticated robot. In this thesis I have rebuilt three carriage Lego City trains into a single carriage PRT vehicles, referred to as pods. The purpose of this thesis is to determine whether or not it s possible to simulate a real world PRT control system using Lego Mindstorms in combination with Lego City trains. Because it seems like no one else have ever attempted to do this, I have made a functional PRT system on my own. The process is thoroughly described in this report and the work is mainly divided into two objectives: 1. Design a pod that can drive to a given location with smooth and realistic movements 2. Design a higher level control system that can command the pods to move efficiently and safely between stations. 1. Although I used the physical pod design from my previous project at NTNU, designing the pods control program to keep track of the pods exact location was the most time consuming individual challenge in this project. Early on, I decided to use the color sensor to count sleepers, where each sleeper in the guideway represents a unique location. Because I could not find any other projects using the Lego color sensor for a similar purpose, I had to interpret the raw data from the color sensor and process it into reliable location data on my own. When the color sensor was able to detect each sleeper exactly once, it was relatively simple to calculate the speed of the pod because I knew both the distance and time between each sleeper. To make the pod stop smoothly at a given location, I decided to use a quadratic function to calculate the required braking distance based on the current speed. I also tested different approaches, but without the same consistency as the quadratic function. In the end, the result is a pod stopping at a given location with an accuracy of 10 cm. It accelerates and brakes smoothly. To communicate with a higher level control system, I have chosen to use MQTT. 2. I have chosen to use a control system architecture consisting of a central, multiple guideway controllers and one switch operator per guideway controller. The guideway controllers are responsible of one control area each. There is one control area per switching intersection in the guideway and pods can only enter a control area when ordered to by the guideway controller in charge of that control area. Because the guideway controllers are the only units that can allow a pod to move, it is responsible for the safety, i. e. make sure the pods do not crash into each other. In addition, the guideway controller sends switch commands to the switch operator located in its area. When a pod approaches a switching intersection, the guideway controller looks up the pods destination station in a table and orders the switch operator to switch the tracks in the correct location to route the pod the shortest path. The switch operator receives switch orders from the guideway controller. The switch operator is always aware of the tracks direction. If the tracks are in the correct direction when it receives a switching order, no further action is taken. If not, the tracks are switched in the correct direction by rotating a motor connected to the <b>switch</b> <b>handle.</b> The central was intended to assign orders to pods automatically and constantly monitor the position of each pod to be able to detect congestion and update the routing tables. Unfortunately, I did not have time to make the central automatic. However, I have made a simple graphical user interface where an operator manually can assign orders to pods. An order can be set to repeat, which means that the pod will drive constantly between the two given stations. By assigning multiple pods repeated orders to move between different stations, a lot of interesting situations occurs at both station tracks and merging intersections. When I tested the control system by only using a simple computer simulation, I was able to reveal some logical errors. When I had corrected all these errors, I tested the control system in the lab. This instantly exposed a lot of situations where the system failed, causing deadlocks where one or more pods stopped at wrong locations because it wasn t ordered to continue by the control system. After analyzing the results, I was able to correct most of the errors. However, I did not have time to make the system work perfectly. Nevertheless, most of the times, the system now works as intended for many minutes before an error situation occurs. By using the lab, I was able to expose errors I couldn t detect using computer simulations. In addition, it was much easier to understand the source of the errors from observing the pods behaviour. Based on this experience, I have found that Lego Mindstorms is sufficiently advanced and adaptable to simulate a simple PRT control system...|$|E
50|$|The {{original}} electric distribution {{lines in}} Appleton {{were made of}} bare copper. This posed many challenges in the early development of commercial electricity, because just about everything was made out of wood or other flammable materials. The wiring used in buildings was insulated by {{a thin layer of}} cotton and was fastened to walls using wood cleats. Likewise, wood was used for fuse boxes, light sockets, and <b>switch</b> <b>handles.</b>|$|R
5000|$|Note {{the tacit}} {{assumption}} here that no intelligence or insight {{is brought to}} bear on the problem. However, the existence of different available strategies allows us to consider a separate ("superior") domain of processing — a [...] "meta-level" [...] above the mechanics of <b>switch</b> <b>handling</b> — where the various available strategies can be randomly chosen. Once again this is [...] "trial and error", but of a different type. This leads us to: ...|$|R
40|$|An {{apparatus}} {{is described}} which {{is suitable for}} measuring self-diffusion coefficients in solids using the nuclear magnetic resonance spin-echo technique employing a pulsed field gradient. The design of the probe arrangement for use at high temperature (to 1300 K) and the electronic circuit to generate the large pulses of magnetic field gradient are described in detail. The apparatus is designed for use with a pulsed NMR spectrometer assuming suitable timing pulses are available. The current <b>switch</b> <b>handles</b> 150 A, and the pulse has a fall time (to 10...|$|R
5000|$|The core circuit <b>switched</b> {{network for}} <b>handling</b> voice calls and text ...|$|R
50|$|There {{are three}} kinds of shortlines in the U.S.: <b>handling,</b> <b>switch,</b> and ISS (Interline Settlement System).|$|R
40|$|Component-based {{software}} engineering {{is becoming a}} prominent solution {{to the development of}} complex embedded systems. Since it allows a system to be built by reusable and independently developed components, component-based development substantially facilitates the development of a complex embedded system and allows its complexity to be better managed. Meanwhile, partitioning system behavior into multiple operational modes is also an effective approach to reducing system complexity. Combining the component-based approach with the multi-mode approach, we get a component-based multi-mode system, for which a key issue is its mode <b>switch</b> <b>handling.</b> The mode <b>switch</b> of such a system corresponds to the joint mode switches of many hierarchically organized components. Such a mode switch is not trivial as it amounts to coordinate the mode switches of different components that are independently developed. Since most existing approaches to mode <b>switch</b> <b>handling</b> assume that mode switch is a global event of the entire system, they cannot be easily applied to component-based multi-mode systems where both the mode switch of the system and each individual component must be considered, and where components cannot be assumed to have global knowledge of the system. In this thesis, we present a mechanism [...] -the Mode Switch Logic (MSL) [...] -which provides an effective solution to mode switch in component-based multi-mode systems. MSL enables a multi-mode system to be developed in a component-based manner, including (1) a mode-aware component model proposed to suit the multi-mode context; (2) a mode mapping mechanism for the seamless composition of multi-mode components and their mode switch guidance; (3) a mode switch runtime mechanism which coordinates the mode switches of all related components so that the mode switch can be correctly and efficiently performed at the system level; and (4) a timing analysis for mode switches realized by MSL. All the essential elements of MSL are additionally demonstrated by a case study. ARROW...|$|R
50|$|Henry James Rogers, {{original}} {{owner of}} the house, was {{the manager of the}} Appleton Pulp and Paper Mill. The house's source of electricity was the Appleton Edison Light Company, the first commercial electric plant in America, which was put into operation two weeks after a much larger steam central power station in New York City, known as the Pearl Street Station. The house and two paper mills were powered by a dynamo located inside one of the mills. Distribution wires were bare copper, with light amounts of cotton used to insulate it. Wires were fastened to the walls with wood cleats. Tape was wound around wires where they passed through partitions. Fuse blocks were made of wood, as were the sockets and <b>switch</b> <b>handles.</b> Examples of this equipment still operate in the home.|$|R
5000|$|Aluminium & Plastic Torches: These torches {{have strong}} durable bodies, slide <b>switches</b> for easy <b>handling</b> {{and come in}} a wide range of models and colors.|$|R
5000|$|... #Caption: A trouble light using {{a compact}} {{fluorescent}} lamp. From {{top to bottom}} are a hook, a cage, the <b>switch</b> and a <b>handle</b> in one molding ...|$|R
40|$|Hairdryer {{in white}} plastic housing with coiled plastic flex;mauve on/off <b>switch</b> in <b>handle.</b> Label: morphy richards in black (on front). Adhesive label (back) : Made in England 240 v 360 w 50 htz Model 4822 / 01 and Kite Mark [...] Maker: Morphy, Richards. Date: 1972 - from the The Betty Smithers Design Collection at Staffordshire University. ...|$|R
40|$|Improved <b>switching</b> {{transistors}} <b>handle</b> 400 -A peak {{currents and}} up to 1, 200 V. Using large diameter silicon wafers with twice effective area as D 60 T, form basis for D 7 family of power switching transistors. Package includes npn wafer, emitter preform, and base-contact insert. Applications are: 25 to 50 -kilowatt high-frequency dc/dc inverters, VSCF converters, and motor controllers for electrical vehicles...|$|R
5000|$|... 802.1Q is the {{networking}} {{standard that}} supports virtual LANs (VLANs) on an Ethernet network. The standard defines {{a system of}} VLAN tagging for Ethernet frames and the accompanying procedures {{to be used by}} bridges and <b>switches</b> in <b>handling</b> such frames. The standard also contains provisions for a quality-of-service prioritization scheme commonly known as IEEE 802.1p and defines the Generic Attribute Registration Protocol.|$|R
40|$|Kettle {{in white}} plastic housing. Clear plastic volume {{indicator}} with Max/Min {{and number of}} cups printed to one side. Grey on/off <b>switch</b> below <b>handle.</b> Label indicates product tested in Jan 2007 (Staffordshire University). Kettle stands on white plastic base; label to underside 'Morphy Ricahrds Model 43050 / 2 Made in UK'. Maker: Morphy Richards - from the The Betty Smithers Design Collection at Staffordshire University. ...|$|R
25|$|Ballistic knife: A {{specialized}} combat {{knife with}} a detachable gas- or spring-propelled blade {{that can be}} fired to a distance of several feet or meters by pressing a trigger or <b>switch</b> on the <b>handle.</b>|$|R
40|$|As a {{model for}} an ATM switch we {{consider}} the overflow frequency of a queue that is served at a constant rate and in which the arrival process is the superposition of N traffic streams. We consider an asymptotic as N ! 1 in which the service rate Nc and buffer size Nb also increase linearly in N. In this regime, the frequency of buffer overflow is approximately exp(I(c; b)), where I(c; b) is given by the solution to an optimization problem posed in terms of time-dependent logarithmic moment generating functions. Experimental results for Gaussian and Markov modulated fluid source models show that this asymptotic provides a better estimate of the frequency of buffer overflow than ones based on large buffer asymptotics. ATM SWITCHES; BUFFER OVERFLOW ASYMPTOTICS; EFFECTIVE BANDWIDTHS; LARGE DEVIATIONS; MARKOV MODULATED FLUID AMS 1991 SUBJECT CLASSIFICATION: PRIMARY 60 K 30, SECONDARY 60 F 10, 60 K 25, 68 M 20, 90 B 10, 90 B 22 1. <b>Switches</b> <b>handling</b> many bursty sources In a high speed data com [...] ...|$|R
25|$|A {{patchwork}} quilt of electromechanical <b>switching</b> equipment <b>handled</b> San Jose calls between 1949 and the 1980s. There {{were about}} eight Western Electric Crossbar switches, {{at least one}} Number 1 and mostly Number 5. There was a Western Electric 4A Crossbar that took up two floors of the Main telephone exchange. In the mid-1980s, the 4A crossbar was replaced with a digital switch which took up part of a single floor and quadrupled calling capacity.|$|R
40|$|The {{performance}} of an optical <b>switch</b> that <b>handles</b> contention resolution using a fiber delay line (FDL) is modeled and evaluated. We propose using a simple optical buffer that contains {{only a single}} FDL for contention resolution. The analytical model derived for the {{performance of}} an optical switch based on this buffer is verified using simulations. The analytical model can be utilized with both packet and burst switching schemes to characterize the performance of switches augmented with this FDL architecture. ...|$|R
40|$|Software Defined Networks (SDNs) support diverse network {{policies}} by offering direct, network-wide control over how <b>switches</b> <b>handle</b> traffic. Unfortunately, many controller platforms force applications to grapple simultaneously with end-to-end connectivity constraints, routing policy, switch memory limits, and the hop-by-hop interactions between forwarding rules. We believe solutions to this complex problem should be factored in to three distinct parts: (1) high-level SDN applications should define their end-point connectivity policy {{on top of}} a “one big switch ” abstraction; (2) a midlevel SDN infrastructure layer should decide on the hop-byhop routing policy; and (3) a compiler should synthesize an effective set of forwarding rules that obey the user-defined policies and adhere to the resource constraints of the underlying hardware. In this paper, we define and implement our proposed architecture, present efficient rule-placement algorithms that distribute forwarding policies across general SDN networks while managing rule-space constraints, and show how to support dynamic, incremental update of policies. We evaluate the effectiveness of our algorithms analytically by providing complexity bounds on their running time and rule space, as well as empirically, using both synthetic benchmarks, and real-world firewall and routing policies. 1...|$|R
40|$|Data centre {{networks}} are currently experiencing {{a dramatic increase}} in the amount of network traffic that needs to be handled due to cloud technology and several emerging applications. To address this challenge, mega data centres are required with hundreds of thousands of servers interconnected with high bandwidth interconnects. Current data centre networks, based on electronic packet switches, consume a huge amount of power to support the increased bandwidth required by the emerging applications. Optical interconnects have gained more and more attentions as a promising solution offering high capacity and consuming much lower energy compared to the commodity switch based solutions. This thesis provides a thorough literature study on optical interconnects for data centre networks that are expected to efficiently handle the future traffic. Two major types of optical interconnects have been reviewed. One is referred to hybrid switching, where optical switching deals big flows while electronic <b>switches</b> <b>handles</b> traffic in packet level. The other one is based on all-optical switch, where power-consuming electronic interconnects can be completely avoided. Furthermore, the thesis includes a qualitative comparison of the presented schemes based on their main features such as topology, technology, network performance, scalability, energy consumption, etc...|$|R
30|$|The {{emerging}} {{software-defined networking}} (SDN) technologies {{are effective in}} achieving cyber-secure communications inside microgrids. Conceptually, SDN is a novel communication paradigm that makes the control of a communication network globally visible and directly programmable. In particular, SDN breaks the conventional vertical integration of data and control planes by transferring the network control logic from switches to a logically centralized controller (i.e., SDN controller) [50]. The SDN controller guides the underlying <b>switches</b> to <b>handle</b> data flows via the OpenFlow communication protocol [51].|$|R
40|$|With the use {{of virtual}} {{machines}} {{becoming more and more}} popular, the need for high performance communication between them also grows. Past solutions have seen {{the use of}} hardware assistance, in the form of “PCI passthrough”(dedicating parts of physical NICs to each virtual machine) and even bouncing traffic through physical <b>switches</b> to <b>handle</b> data forwarding and replication. In this paper we show that, with a proper design, very high speed communication between virtual machines can be implemented completely in [...] ...|$|R
50|$|In the 1960s, Condon {{contributed to}} the {{development}} of local area network digital telephone switching.Condon and Ken Thompson promoted the use of the C programming language for AT&T’s switching system control programs. Condon acquired a small AT&T PBX (telephone <b>switch)</b> that <b>handled</b> about 50 phones; he made the necessary hardware changes and Thompson wrote the necessary software programs. The PBX code rewrite in C was a success and hastened the adoption of C for all switching system software within AT&T.|$|R
50|$|Power {{handling}} {{defines the}} ability of a <b>switch</b> to <b>handle</b> power and is very dependent on the design and materials used. There are different power <b>handling</b> ratings for <b>switches</b> such as hot switching, cold switching, average power and peak power. Hot switching occurs when RF/microwave power is present at the ports of the switching {{at the time of the}} switching. Cold switching occurs when the signal power is removed before switching. Cold switching results in lower contact stress and longer life.|$|R
40|$|This paper {{investigates the}} {{integrated}} buck- flyback converter {{as a good}} solution for implementing low- cost high-power-factor ac-dc converters with fast output regulation. It will be shown that, when both buck and flyback semistages are operated in discontinuous conduction mode, the voltage across the bulk capacitor, {{which is used to}} store energy at low frequency, is independent of the output power. This makes it possible to maintain the bulk capacitor voltage at a low value within the whole line voltage range. This project implements a buck converter for the first stage and flyback converter for output stage. These topologies are very good solution for fast output dynamics. Another advantage of this integrated buck-flyback converter, is that <b>switch</b> <b>handles</b> the highest of buck or flyback current not addition of both currents. The remaining current is handled by the diodes of the integrated switch, which gives lower losses. The buck capacitor voltage is independent of load, duty cycle, and switching frequency and it only depends on the ac input voltage and the ratio of the two buck and flyback inductance. This is an important feature of the integrated converter operating in discontinuous mode, which allows them to provide fast output voltage regulation. The simulation has been performed to verify the feasibility of the proposed LED lamp driver...|$|R
50|$|Form X or double-make {{contacts}} are {{equivalent to}} two Form A contacts in series, mechanically linked {{and operated by}} a single actuator, and can also be described as SPST-NO contacts. These are commonly found in contactors and in toggle <b>switches</b> designed to <b>handle</b> high power inductive loads.|$|R
40|$|Electric food mixerin grey {{plastic housing}} with two (different size) clear perspex bowls. Speed {{settings}} controlled by sliding <b>switch</b> to top <b>handle.</b> One bread mixer blade and two cake beaters. Maker: Phillips. Date: 1960 (circa) - from the The Betty Smithers Design Collection at Staffordshire University. ...|$|R
40|$|The CDMA 2000 {{technology}} uses circuit <b>switch</b> {{method to}} <b>handle</b> voice traffic and packet <b>switch</b> method to <b>handle</b> data traffic between the user and RBS (Radio Base Station). These two parameters {{can be used}} to measure performance of the network generally, so it is necessary to optimize them. This paper analyze the performance of RBS by measuring its parameters such as set up failure ratio, drop ratio, and occupancy. Furthermore, the traffic increment is calculated too in order to provide information for improvement in the future. Through the analysis, it is realized that a way to improve configuring it uniquely based on its area of scope. Some RBS need soon, but some others don’t. Beside of that, it is also known that the voice communication effectively while data communication roughly...|$|R
50|$|Such {{networks}} are identical to ethernet computer networks used in businesses and academic institutions, except that their {{purpose is to}} connect homes and buildings to a central office rather than to connect computers and printers within a location. Each <b>switching</b> cabinet can <b>handle</b> up to 1,000 customers, although 400-500 is more typical.|$|R
