25|10000|Public
50|$|Interconnect {{capacitance}} {{is calculated}} {{by giving the}} extraction tool the following information: the top view layout of the design {{in the form of}} input polygons on a set of layers; a mapping to a set of devices and pins (from a Layout Versus Schematic run), and a cross sectional understanding of these layers. This information is used to create a <b>set</b> <b>of</b> <b>layout</b> wires that have added capacitors where the input polygons and cross sectional structure indicate. The output netlist contains the same set of input nets as the input design netlist and adds parasitic capacitor devices between these nets.|$|E
50|$|Interconnect {{resistance}} is calculated {{by giving the}} extraction tool the following information: the top view layout of the design {{in the form of}} input polygons on a set of layers; a mapping to a set of devices and pins (from a Layout Versus Schematic run), and a cross sectional understanding of these layers including the resistivity of the layers. This information is used to create a <b>set</b> <b>of</b> <b>layout</b> sub.wires that have added resistance between various sub-parts of the wires. The above Interconnect Capacitance is divided and shared amongst the sub-nodes in a proportional way. Note that unlike Interconnect Capacitance, Interconnect Resistance needs to add sub-nodes between the circuit elements to place these parasitic resistors. This can greatly increase the size of the extracted output netlist and can cause additional simulation problems.|$|E
5000|$|With modern desktop {{publishing}} software such as flagship software Adobe Indesign and cloud-based Lucidpress, the layout process can occur entirely on-screen. (Similar layout options {{that would be}} available to a professional print shop making a paste-up are supported by {{desktop publishing}} software; in contrast, [...] "word processing" [...] software usually has a much more limited <b>set</b> <b>of</b> <b>layout</b> and typography choices available, trading off flexibility for ease of use for more common applications.) A finished document can be directly printed as the camera-ready version, with no physical assembly required (given a big enough printer). Greyscale images must be either halftoned digitally if being sent to an offset press, or sent separately for the print shop to insert into marked areas. Completed works can also be transmitted digitally to the print shop, who may print it themselves, shoot it directly to film, or use computer to plate technology to skip the physical original entirely. PostScript and Portable Document Format (PDF) have become standard file formats for digital transmission.|$|E
50|$|The {{graphics}} in RPG Maker 3 {{are fully}} 3D. There {{are more than}} 20 character models, 50 enemy models, and several different terrain types. The program also contains a <b>set</b> <b>of</b> choices for all buildings and a large <b>set</b> <b>of</b> <b>layouts</b> for towns and dungeons. Because the program uses a 'database' structure to store data, users are limited to {{a certain number of}} placeable objects in an area.|$|R
40|$|AbstractFor any graph G with fixed {{boundary}} {{there exists}} a layout in the plane, which minimizes the maximum Euclidean distance of any node to its neighbors. This layout balances {{the length of the}} graph edges and is therefore called a (length-) balanced <b>layout</b> <b>of</b> G. Furthermore the existence of a unique optimal balanced layout L with the following properties is proved: (i) L is the minimal element of an order defined on the <b>set</b> <b>of</b> <b>layouts</b> <b>of</b> a graph with fixed boundary. (ii) L may be constructed as the limit <b>of</b> the lp-optimal <b>layouts</b> Lp <b>of</b> G. (iii) If G is a planar graph with fixed boundary, then the optimal balanced <b>layout</b> L <b>of</b> G is quasi-planar...|$|R
40|$|Fixtures {{control the}} {{positions}} and orientations of parts in an assembly process. Inaccuracies of fixture locators or nonoptimal fixture layouts {{can result in}} the deviation of a workpiece from its design nominal and lead to overall product dimensional variability and low process yield. Major challenges involving the design <b>of</b> a <b>set</b> <b>of</b> fixture <b>layouts</b> for multistation assembly system can be enumerated into three categories: (1) high-dimensional design space since {{a large number of}} locators are involved in the multistation system, (2) large and complex design space for each locator since the design space represents the area of a particular part or subassembly surfaces on which a locator is placed, (here, the design space varies with a particular part design and is further expanded when parts are assembled into subassemblies), and (3) the nonlinear relations between locator nominal positions and key product characteristics. This paper presents a new approach to improve process yield by determining an optimum <b>set</b> <b>of</b> fixture <b>layouts</b> for a given multistation assembly system, which can satisfy (1) the part and subassembly locating stability in each fixture layout and (2) the fixture system robustness against environmental noises in order to minimize product dimensional variability. The proposed methodology is based on a two-step optimization which involves the integration of genetic algorithm and Hammersley sequence sampling. First, genetic algorithm is used for design space reduction by estimating the areas of optimal fixture locations in initial design spaces. Then, Hammersley sequence sampling uniformly samples the candidate <b>sets</b> <b>of</b> fixture <b>layouts</b> from those predetermined areas for the optimum. The process yield and part instability index are design objectives in evaluating candidate <b>sets</b> <b>of</b> fixture <b>layouts.</b> An industrial case study illustrates and validates the proposed methodology. ...|$|R
40|$|We {{propose a}} <b>set</b> <b>of</b> <b>layout</b> {{operations}} ensuring flexible and convenient interactive editing of communication diagrams and nested entity-relationship models having textual labels on connections. The set includes several procedures for incremental diagram layout. Tools for fully automatic layout and for direct manual painting of graphic primitives are also integrated {{in a single}} system. In this way we have filled to some extent the gap between both extremal levels of editing...|$|E
40|$|The {{technology}} for obtaining custom integrated circuits from CMOS-bulk silicon foundries using a universal <b>set</b> <b>of</b> <b>layout</b> rules is presented. The technical efforts were {{guided by the}} requirement to develop a 3 micron CMOS test chip for the Combined Release and Radiation Effects Satellite (CRRES). This chip contains both analog and digital circuits. The development employed all the elements required to obtain custom circuits from silicon foundries, including circuit design, foundry interfacing, circuit test, and circuit qualification...|$|E
40|$|HIPARE {{performs}} hierarchical {{circuit and}} parameter extraction from mask layout data including non-Manhattan geometries. Due to its programming modularity {{and a powerful}} <b>set</b> <b>of</b> <b>layout</b> operations HIPARE is very flexible in adapting to different technologies and can compute almost all usual device types and their parameters. Additionally, sophisticated algorithms for detailed parasitics such as resistances, intrinsic and internodal capacitances of arbitrary conductors have been implemented. Hierarchical analysis is based on user-defined abstract representation of cells allowing overlaps and inner-cell interfaces...|$|E
40|$|Optimisation of {{real world}} Variable Data {{printing}} (VDP) documents is a dicult problem because the interdependencies between layout functions may drastically {{reduce the number}} of invariant blocks that can be factored out for pre-rasterisation. This paper examines how speculative evaluation at an early stage in a document-preparation pipeline, provides a generic and effective method of optimising VDP documents that contain such interdependencies. Speculative evaluation will be at its most effective in speeding up print runs if <b>sets</b> <b>of</b> <b>layout</b> invariances can either be discovered automatically, or designed into the document at an early stage. In either case the expertise <b>of</b> the <b>layout</b> designer needs to be supplemented by expertise in exploiting potential invariances and also in predicting the effects of speculative evaluation on the caches used at various stages in the print production pipeline...|$|R
50|$|It is now {{possible}} to type Baybayin directly from the keyboard, without the need to use online typepads. The Philippines National Keyboard <b>Layout</b> includes different <b>sets</b> <b>of</b> Baybayin <b>layout</b> for different keyboard users. QWERTY, Capewell-Dvorak, Capewell-QWERF 2006, Colemak, and Dvorak, all available in Microsoft Windows and GNU/Linux 32-bit and 64-bit installations.|$|R
5000|$|The KtbDarija (Literally [...] "WriteDarija") is {{a project}} aiming at {{standardizing}} the writing of Darija (Moroccan arabic), to improve literacy rate and {{make it easier to}} learn for foreigners. It is double standard that support both Latin and Abjad alphabets. A <b>set</b> <b>of</b> keyboard <b>layouts</b> for writing in these alphabets have also been developed.|$|R
40|$|Post-layout is an {{important}} stage in the modern VLSI de-sign. With the completed detail routing, {{it is the only}} stage where extraction and veri¯cation tools can get accurate re-sults for further optimization. But the problem is that de-sign optimization or modi¯cation are very hard to perform in the post-layout stage, because most layout elements are under tight geometry constraints due to the routing. In this paper we propose a new method to resolve this problem, named TEG. Based on an improved topological layout rep-resentation and a <b>set</b> <b>of</b> <b>layout</b> operation algorithms, TEG provides an incremental layout modi¯cation environment for the post-layout applications. Experimental results showed that TEG was e±cient and e®ective in processing industry VLSI designs. 1...|$|E
40|$|An novel {{method of}} {{generating}} one-line diagrams of radial distribution {{systems in the}} form of a visibility graph is proposed. An algorithm that automatically generates an aesthetically 'pleasing' and 'readable' visibility diagram is presented. In addition to the basic property of a visibility graph that nodes and edges be represented by axis-parallel horizontal and vertical lines, respectively, a new <b>set</b> <b>of</b> <b>layout</b> specifications (aesthetic criteria) suitable for easy visualization of the distribution system have been proposed. This work is based on the premise that, in general, the network data of distribution systems does not contain any geographical information of node locations. Therefore the algorithm assumes that only the identity of the terminal nodes of all the edges are known. The proposed algorithm automatically determines node positions such that the specified aesthetic criteria are satisfied...|$|E
40|$|An {{algorithm}} {{to automatically}} generate an aesthetically 'pleasing' and 'readable' one-line diagram of a radial distribution feeder is presented. Readability is sought {{to be achieved}} by using the visibility representation where buses and transmission lines are drawn as axis-parallel horizontal and vertical lines, respectively. In addition to this choice, a <b>set</b> <b>of</b> <b>layout</b> specifications for enhancing the readability of the distribution system has been proposed. It is assumed here that only the edge-list of the network is available and geographical information regarding locations of the nodes is unavailable. Using this limited input, the proposed algorithm determines the lengths and positions of lines that represent the buses and transmission lines of the network such that the proposed layout specifications are satisfied. Results of application of the algorithm on practical feeders are provided to illustrate its effectiveness...|$|E
40|$|Wire length {{minimization}} (WLM) {{has received}} szgnificant {{attention in the}} compaction stage <b>of</b> VLSI <b>layout</b> synthesis. In most cases, reduction in wire length also results in better circuit yield. However, a trade-off may stall exist between total wire length and yield. In WLM only the area/length <b>of</b> the <b>layout</b> patterns is considered whereas for yield enhancement both the area <b>of</b> the <b>layout</b> patterns and the spacing among them must be considered. The trade-off between these two features is analyzed on a <b>set</b> <b>of</b> benchmark <b>layouts</b> in this paper. ...|$|R
40|$|This {{report will}} examine the {{problems}} and possibilities of building a luxurious modern residence in Pattaya, Thailand, incorporating the old traditional building styles of the wooden houses to an ecological house with a low demand for technology. The client, B. Grimm Group, has recently set up a polo club {{in the vicinity of}} Pattaya and has requested a complete <b>set</b> <b>of</b> <b>layouts</b> regarding a planned housing area on the premises. The project includes a structure plan of the village area, perspectives, facades, building layouts and axonometric views of all house types, as well as garden plans. The written report works as a complement to the designs and explains the background to the final proposal. The report also handles the building technology and construction process of building a traditional Thai house and briefly investigates the ecological aspects of building in Thailand...|$|R
40|$|Figure 1 : Main {{steps of}} our construction, {{from left to}} right: initial field, feature-aligned {{inconsistent}} partition, collapse operations on zero chains, initial parametrization based on partition, final parametrization. We present a robust method for computing locally bijective global parametrizations aligned with a given cross-field. The singulari-ties of the parametrization in general agree with singularities of the field, except in {{a small number of}} cases when several additional cones need to be added in a controlled way. Parametric lines can be constrained to follow an arbitrary <b>set</b> <b>of</b> feature lines on the surface. Our method is based on constructing an initial quad patch partition using robust cross-field integral line tracing. This process is fol-lowed by an algorithm modifying the quad layout structure to en-sure that consistent parametric lengths can be assigned to the edges. For most meshes, the layout modification algorithm does not add new singularities; a small number of singularities may be added to resolve an explicitly described <b>set</b> <b>of</b> <b>layouts.</b> We demonstrate that our algorithm succeeds on a test data <b>set</b> <b>of</b> over a hundred meshes...|$|R
40|$|A {{performance}} evaluation protocol for the layout analysis (page segmentation) {{is discussed in}} this paper. In the University of Washington English Document Image Database-III, there are 1600 English document images that come with manually edited ground truth of entity bounding boxes. These bounding boxes enclose text and non-text zones, text-lines, and words. We describe a performance metric for the comparison of the detected entities and the ground truth {{in terms of their}} bounding boxes. The Document Attribute Format Specification (DAFS) is used as the standard data representation. The protocol is intended to {{serve as a model for}} using the UW-III database to evaluate the document analysis algorithms. A <b>set</b> <b>of</b> <b>layout</b> analysis algorithms which detect different entities have been tested based on the data set and the performance metric. The evaluation results are presented in this paper. Keyword: Document layout analysis, page segmentation, {{performance evaluation}}, document image database. [...] ...|$|E
40|$|This article {{investigates the}} use of 11 refined Gestalt laws as the layout rules for {{instructional}} multimedia screen design {{by way of the}} redesign of the interface of a multimedia computer application and the subsequent evaluation of this redesigned interface. These layout rules are suitable for designing interfaces for complex learning materials in order to achieve more effective learning environments. To test the usefulness of these layout methodologies in visual screen design, they were applied to the redesign of an instructional multimedia application. Three different user groups evaluated the new screen design by comparing the designs. The evaluation results were overwhelmingly positive. Overall, 85 % of the evaluators rated positively both the new design and the value of applying the 11 layout rules to improve the learning. This <b>set</b> <b>of</b> <b>layout</b> rules may also be successfully applied to design many different instructional multimedia applications...|$|E
40|$|International audienceThe major {{objective}} {{of this paper is}} to examine the optimal routing in layout and location problems from a network optimization perspective where manufacturing facilities are modelled as open ®nite queueing networks with a multiobjective set of performance measures. The overall material handling system is broken down into a <b>set</b> <b>of</b> <b>layout</b> topologies. For each one of these topologies the optimal routing is determined so that the product throughput is maximized while minimizing the average sojourn time and holding costs. An approximate analytical decomposition technique for modelling open ®nite queueing networks, called the Generalized Expansion Method (GEM), developed by the authors, is utilized to calculate the desired outputs. A mathematical optimization procedure which is described in this paper is then used to determine the optimal routes. As will be demonstrated, the design methodology of combining the optimization and analytical queueing network models provides a very e€ective procedure for evaluating alternative topologies while simultaneously determining the average sojourn times and the maximum throughputs of the best routes...|$|E
40|$|Abstract. Good data layouts improve cache and TLB {{performance}} of object-oriented software, but unfortunately, selecting an optimal data layout a priori is NP-hard. This paper introduces layout auditing, {{a technique that}} selects the best among a <b>set</b> <b>of</b> <b>layouts</b> online (while the program is running). Layout auditing randomly applies different layouts over time and observes their performance. As it becomes confident about which layout performs best, it selects that layout with higher probability. But if a phase shift causes a different layout to perform better, layout auditing learns the new best layout. We implemented our technique in a product Java virtual machine, using copying generational garbage collection to produce different layouts, and tested it on 20 long-running benchmarks and 4 hardware platforms. Given any combination of benchmark and platform, layout auditing consistently performs close to the best layout for that combination, without requiring offline training. ...|$|R
50|$|The Santa Fe Trail {{problem is}} a genetic {{programming}} exercise in which artificial ants search for food pellets according to a programmed <b>set</b> <b>of</b> instructions. The <b>layout</b> <b>of</b> food pellets in the Santa Fe Trail problem has become a standard for comparing different genetic programming algorithms and solutions.|$|R
40|$|A pretty printer {{converts}} tree structured data, {{for example}} the syntax tree of a program or an XML document, into nicely formatted text with a given line width limit. A pretty printing library provides the functionality common to a large class of pretty printers, thus enabling a programmer to easily implement a specific pretty printer. A pretty printing library enables the programmer to compositionally describe alternative <b>layouts</b> for components <b>of</b> the data to be printed. The pretty printing algorithm then chooses an optimal <b>layout</b> from this <b>set</b> <b>of</b> <b>layouts.</b> There is a trade-off between the available choice <b>of</b> alternative <b>layouts,</b> the optimality criterion and {{the efficiency of the}} pretty printing algorithm. In 1980 Oppen [4] published an imperative pretty printer that allows the description <b>of</b> nice <b>layouts,</b> adequate for many purposes, and that is very efficient. The algorithm takes time linear {{in the size of the}} input, independent of the linewidth limit. Furthermore, the algorithm is bounded, that is, it produces parts of the output already after having processed only limited parts of its input. Oppen’s work inspired numerous pretty printing libraries, in particular severa...|$|R
40|$|OF THE THESIS Aesthetics-based Graph Layout for Human Consumption by Michael Karl Coleman Master of Science in Computer Science University of California, Los Angeles, 1993 Professor D. Stott Parker, Chair Automatic graph layout is an {{important}} and long-studied problem in computer science. The basic straight-edge graph layout problem is: Given a graph, position the vertices {{in a way which}} maximizes some measure of desirability. When graph layout is intended for human consumption, we call this measure of desirability an aesthetic. We seek an algorithm which produces graph layouts of high aesthetic quality, and which handles trees, directed acyclic graphs, and general graphs. Our approach is to model graph layout as a multiobjective optimization problem, where the value of a layout is determined by a user-controlled <b>set</b> <b>of</b> <b>layout</b> aesthetics. We justify this model theoretically, and describe our Aesthetic Graph Layout (AGLO) algorithm and its implementation, the aglo library. The AGLO alg [...] ...|$|E
40|$|This paper {{describes}} a general compiler optimization technique that reduces communication overhead for FORTRAN- 90 (and High Performance FORTRAN currently being drafted) implementations on massively parallel machines. The {{main sources of}} communication, or data motion, for the parallel implementation of a FORTRAN 90 program are from array assignments (using the index triplet notation and vector indexing), array operators (e. g. CSHIFT, TRANSPOSE, etc.), and array parameter passing to and from subroutines. Coupled with the variety of ways arrays can be distributed, a FORTRAN- 90 implementor faces a rich space in which data motion can be organized. A model of data motion and an algebraic representation of data motion and data layout are presented. Yale Extension, a <b>set</b> <b>of</b> <b>layout</b> declarations for directing the compiler in distributing the data, is described. An array reference or an array operation extracted from the source FORTRAN- 90 program, given a particular data layout specified in Yale E [...] ...|$|E
40|$|The direct {{automated}} {{transformation of}} a circuit into the "best" physical layout is hard. An alternative is {{the transformation of}} a circuit into a suitable intermediate form, the layout topology. Each layout topology defines an equivalence class of physical layouts. A few layout topologies can be chosen according to their likeliness for leading to the "best" design. Each of these layout topologies can then {{be transformed into a}} physical layout that will be optimized. The final design can be chosen from the set of optimized physical layouts. Each optimized physical layout corresponds to a unique layout topology. A circuit is modeled as a graph, The circuit's graph model is analyzed by the embedding algorithm. The embedding algorithm determines the <b>set</b> <b>of</b> <b>layout</b> topologies that will be transformed into the physical layouts for further processing. A layout topology is specified as a graph together with the set of cyclic orders of the vertices, and the layer assignment of the edges. ...|$|E
40|$|Fine-grained data {{parallelism}} {{is increasingly}} common in mainstream processors {{in the form}} of longer vectors and onchip GPUs. This paper develops support for exploiting such data parallelism for a class of non-numeric, non-graphic applications, which perform computations while traversing many independent, irregular data structures. While the traversal of any one irregular data structure does not give opportunity for parallelization, traversing a <b>set</b> <b>of</b> these does. However, mapping such parallelism to SIMD units is nontrivial and not addressed in prior work. We address this problem by developing an intermediate language for specifying such traversals, followed by a runtime scheduler that maps traversals to SIMD units. A key idea in our run-time scheme is converting branches to arithmetic operations, which then allows us to use SIMD hardware. In order to make our approach fast, we demonstrate several optimizations including a stream compaction method that aids with control flow in SIMD, a <b>set</b> <b>of</b> <b>layouts</b> that reduce memory latency, and a tiling approach that enables more effective prefetching. Using our approach, we demonstrate significant increases in single-core performance over optimized baselines for two applications...|$|R
40|$|In this work, {{we present}} a novel {{application}} <b>of</b> <b>layout</b> printability verification (LPV) to assess the scalability <b>of</b> physical <b>layout</b> components from 32 nm to 28 and 22 nm with respect to process variability metrics. Starting from the description of a mature LPV flow, the paper illustrates the core methodology for deriving a metric for design scalability. The functional dependency between the scalability metric and the scaling factor can then be modeled to study the scaling robustness <b>of</b> a <b>set</b> <b>of</b> representative <b>layouts.</b> Conversely, quantitative data on scalability limits {{can be used to}} determine which design rules can be pushed and which must be relaxed in the transition from 32 to 22 nm...|$|R
40|$|This {{dissertation}} presents {{research on}} learning <b>of</b> interactive <b>layouts.</b> I develop two models {{based on a}} theory of cognition known as ACT-R (Adaptive Control of Thought–Rational). I validate them against experimental data collected by other researchers. The first model is a simulation model that emulates the transition from novice to expert level in text entry. The model transcribes the presented English letters on a traditional phone keypad. It predicts the non-movement time to copy a pre-cued letter. It explains the visual exploration strategy that a user may employ in the novice to expert continuum. The second model is a closed-form model that accounts for the combined effect of practice, decay, proactive interference and mental effort on task completion time while practicing target acquisition on an interactive layout. The model can quantitatively compare a <b>set</b> <b>of</b> <b>layouts</b> in terms <b>of</b> the mental effort expended to learn them. My first model provides insight into how much practice is needed by a learner to progress from novice to expert level for an interactive layout. My second model provides insight into how effortful is it to learn a layout relative to other layouts...|$|R
40|$|The major {{objective}} {{of this paper is}} to examine the optimal routing in layout and location problems from a network optimization perspective where manufacturing facilities are modelled as open finite queueing networks with a multiobjective set of performance measures. The overall material handling system is broken down into a <b>set</b> <b>of</b> <b>layout</b> topologies. For each one of these topologies the optimal routing is determined so that the product throughput is maximized while minimizing the average sojourn time and holding costs. An approximate analytical decomposition technique for modelling open finite queueing networks, called the Generalized Expansion Method (GEM), developed by the authors, is utilized to calculate the desired outputs. A mathematical optimization procedure which is described in this paper is then used to determine the optimal routes. As will be demonstrated, the design methodology of combining the optimization and analytical queueing network models provides a very effective procedure for evaluating alternative topologies while simultaneously determining the average sojourn times and the maximum throughputs of the best routes...|$|E
40|$|Abstract. Interfaces of web {{information}} systems are highly heterogeneous. Additionally to schema heterogeneity they differ at the presentation layer. Web interface wrappers {{need to understand}} these interfaces in order to enable interoperation among web {{information systems}}. In contrast to the general scenario {{it has been observed}} that inside of application domains (e. g. air travel) hetergeneity is limited. More in detail web interfaces share a limited common vocabulary and use a small <b>set</b> <b>of</b> <b>layout</b> variants. Thus we propose the existence of web interface patterns which are characterized by these two aspects: the used vocabulary {{on the one hand and}} the common layout of pages on the other. These patterns can be derived from a domain model which is structured into an ontological model and a layout model. The paper introduces metamodels for ontological and layout models and describes a model driven approach to generate patterns from a sample set of web interfaces. We use a clustering algorithm to identify correspondences between model instances. This pattern approach allows for the generation of wrappers of deep web sources of a specific domain. ...|$|E
40|$|Abstract — Performance {{measurement}} {{is an area}} {{to which}} facilities have paid much attention recently. There is {{a wide range of}} choices in measuring facility performance is essential to support various decision making problems that may arise during a facilities layout life cycle. The existing models have considered only material handling cost as the performance measurement factor. Nevertheless, general, flow of material, flexibility, space utilization, materials handling, storage arrangement, shipping and receiving, building and utilities, expandability without major disruption, and service activities have a significant contribution towards the layout effectiveness. Therefore, it is necessary to have an efficient model to determine the facilities layout’s effectiveness by considering a <b>set</b> <b>of</b> <b>layout</b> effectiveness factors. The proposed model, using a fuzzy multiple attributes decision-making method, enables the decision-maker of a manufacturing enterprise to analyze alternative layouts in different boards, based on which they can develop decision towards productivity improvement. An illustrative example has been adopted for an empirical illustration. Results showed that the proposed model is a logical, simple and convenient implementation framework. Index Terms — Layout evaluation, multi-criteria decision making, assessment of alternatives, criterion weights, fuzzy logic/modeling. I...|$|E
40|$|MetaUML is an {{library for}} the MetaPost {{language}} for type-setting UML languages. Instead of drawing UML diagrams in a GUI editor, the user specifies each component textually and a <b>set</b> <b>of</b> accompanying <b>layout</b> constraints for the diagram. The diagram {{can then be}} typeset {{in a variety of}} formats, such as PDF or EPS. Figure 1 illustrates an example MetaUML code fragment and resulting class diagram. You can see more examples of MetaUML diagrams on the project web site 1...|$|R
50|$|XPS {{specifies}} a <b>set</b> <b>of</b> document <b>layout</b> functionality for paged, printable documents. It {{also has}} support for {{features such as}} color gradients, transparencies, CMYK color spaces, printer calibration, multiple-ink systems and print schemas. XPS supports the Windows Color System color management technology for color conversion precision across devices and higher dynamic range. It includes a software raster image processor (RIP) (downloadable separately). The print subsystem supports named colors, simplifying color definition for images transmitted to printers supporting those colors.|$|R
30|$|For each node, {{the author}} has to define its layout and the related {{multimedia}} content, that is, the combination of images, sounds, videos, animations and/or texts that represent {{an element of the}} story. The layouts can be selected from a <b>set</b> <b>of</b> <b>layouts</b> suitable to represent content in a Web page, in a screen of mobile apps or in the screen of a multimedia kiosk. For each multimedia item, the author can provide different versions, for example, images at different quality, texts suitable for different purpose (e.g., short text for a brief overview or long in-depth text), animations accessible via Web or by using VR/AR devices. Existing multimedia items are retrieved by the system via the ontology-driven data access service according to the keywords associated with the story structure. The final stories are created by the users by selecting suitable layouts according to their requirements and devices used to access the stories. The multimedia content of each node will then be instantiated according to the user’s profile or wishes.|$|R
