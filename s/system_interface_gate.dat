0|6896|Public
5000|$|May be built {{either as}} an open, flat {{embedded}} RTOS or as a separtely built, secure kernel with a <b>system</b> call <b>gate</b> <b>interface</b> ...|$|R
5000|$|<b>System</b> <b>Interfaces</b> (XSH) - {{contains}} the specification of various functions which are implemented as system calls or library functions. 1123 <b>system</b> <b>interfaces</b> in total are specified.|$|R
50|$|The SHINCOM <b>system</b> <b>interfaces</b> {{with other}} {{shipboard}} communication <b>systems.</b> All <b>interfaces</b> are acronyms ending with COM.|$|R
30|$|The {{statement}} ‘Standardised eLogistics <b>system</b> <b>interfaces</b> {{can increase}} efficiency along the supply chain’ achieved a significant majority agreement; {{there are some}} variations of views (from vast to significant). But there is no majority disagreement. The authors recommend that the standard eLogistics <b>system</b> <b>interface</b> will be helpful to achieve an efficient eLogistics system. The open eLogistics platforms (recommended in previous paragraph) should use standardised <b>system</b> <b>interfaces.</b>|$|R
5000|$|SPI-4.2 [...] - [...] <b>System</b> Packet <b>Interface</b> Level 4 (SPI-4) Phase 2: OC-192 <b>System</b> <b>Interface</b> for Physical and Link Layer Devices.|$|R
50|$|The <b>System</b> <b>Interface</b> Description (SID) links {{together}} the Organizational and Infrastructure Views by depicting the assignments of <b>systems</b> and their <b>interfaces</b> to the nodes and needlines {{described in the}} Node Connectivity Description. The Node Connectivity Description for a given architecture shows nodes (not always defined in physical terms), while the <b>System</b> <b>Interface</b> Description depicts the systems corresponding to the system nodes. The <b>System</b> <b>Interface</b> Description can be produced at four levels, as described below. Level 1 is an essential work product, while Levels 2, 3, and 4 are supporting work products.|$|R
50|$|The <b>System</b> <b>Interface</b> Description {{identifies}} the interfaces between nodes, between systems, {{and between the}} components of a system, depending {{on the needs of}} a particular architecture. A <b>system</b> <b>interface</b> is a simplified or generalized representation of a communications pathway or network, usually depicted graphically as a straight line, with a descriptive label. Often, pairs of connected systems or system components have multiple interfaces between them. The <b>System</b> <b>Interface</b> Description depicts all <b>interfaces</b> between <b>systems</b> and/or system components that are of interest to the architect.|$|R
5000|$|IEEE 1284.1 TIPSI (Transport Independent Printer <b>Systems</b> <b>Interface)</b> ...|$|R
50|$|Early {{machines}} use {{the rare}} Shugart Associates <b>System</b> <b>Interface</b> (SASI) {{for the hard}} disk interface; later versions adopted the industry-standard Small Computer <b>System</b> <b>Interface</b> (SCSI). Per the hardware's capability, formatted SASI drives can be 10, 20 or 30 MB in size and can be logically partitioned as well.|$|R
5000|$|... #Caption: The Senses Sympathy <b>System</b> <b>interface</b> in Root Double.|$|R
5000|$|... #Caption: Chat <b>System</b> <b>interface</b> on the revamped Battle.net 2.0 ...|$|R
5000|$|IETF RFC 3720 Internet Small Computer <b>Systems</b> <b>Interface</b> (iSCSI) ...|$|R
5000|$|SCSI Small Computer <b>System</b> <b>Interface,</b> disk/tape {{peripheral}} attachment bus ...|$|R
40|$|Poor {{perception}} {{from human}} interpretation on <b>system</b> <b>interface</b> design may deviate human critical judgment about state of a system. As a result accidents may occur due to misinterpretation on displayed information {{available on the}} screen. In relation to that, this paper describes designing scenarios for <b>system</b> <b>interface</b> design which reflects with user’s working context. <b>System</b> <b>interface</b> design that familiar with working context will help to increase user’s satisfaction and the ease of use of a particular system. Moreover, through the process in designing scenarios also leads to the identification of problems and how experts deal with challenging tasks in using the system. Human abstract thinking {{which could not be}} gather in a quantitative way motivate authors to employ Cognitive Task Analysis method in collecting <b>system</b> <b>interface</b> design requirements from the experts as to design task scenarios. In general experts involve in this study are from the manufacturing industries where their daily scope of work is in system maintenance tasks. There are five phases involve in Cognitive Task Analysis; define tasks, select participants, task observation, task diagram and knowledge audit. Results from the interview and observation session will give an essential clue in designing scenarios for <b>system</b> <b>interface</b> design. This is because in knowing a correct problem to solve and provide cues at a needed point in time will help users to interpret information on <b>system</b> <b>interface</b> design...|$|R
5000|$|... #Caption: <b>System</b> <b>Interface</b> Description, Levels 1, 2, 3, 4—Generic Examples.|$|R
5000|$|JTC 1 work in user <b>system</b> <b>interfaces</b> and {{document}} presentation ...|$|R
5000|$|SPI-4.1 [...] - [...] <b>System</b> Physical <b>Interface</b> Level 4 (SPI-4) Phase 1: A <b>System</b> <b>Interface</b> for Interconnection Between Physical and Link Layer, or Peer-to-Peer Entities Operating at an OC-192 Rate (10 Gbit/s).|$|R
40|$|Traditional OS <b>system</b> <b>interfaces,</b> {{like the}} POSIX standard, lack {{the level of}} support and ease of {{programming}} needed to develop large parallel programs. In this paper, we first describe our vision for an extensible object-oriented <b>system</b> <b>interface</b> designed {{to cope with the}} challenges of highlyparallel systems. Ease of maintenance and portability is provided through language-independent interface specification and automatic code generation. We then detail our implementation based on the Choices OS and we show the effectiveness of our design by presenting a comparison between the POSIX thread implementation in Linux and our new <b>system</b> <b>interface.</b> 1...|$|R
5000|$|Bridging <b>Systems</b> <b>Interface</b> - a {{standard}} protocol from DHS OIC's SAFECOM program ...|$|R
25|$|Small Computer <b>System</b> <b>Interface</b> (SCSI), {{originally}} named SASI for Shugart Associates <b>System</b> <b>Interface,</b> was {{standard on}} servers, workstations, Commodore Amiga, Atari ST and Apple Macintosh computers through the mid-1990s, {{by which time}} most models had been transitioned to IDE (and later, SATA) family disks. The range limitations of the data cable allows for external SCSI devices.|$|R
40|$|The video shows a rich {{multi-modal}} multi-user telepresence system, {{which was}} developed within the SFB 453 {{funded by the}} German Research Foundation (www. sfb 453. de). As a complex application scenario, the remote repairing of a broken pipe is presented, see Fig. 1. 3 D acoustics stationary human <b>system</b> <b>interface</b> mobile human <b>system</b> <b>interface</b> operator sit...|$|R
5000|$|Small Computer <b>System</b> <b>Interface</b> (SCSI), {{originally}} named SASI for Shugart Associates <b>System</b> <b>Interface,</b> was {{standard on}} servers, workstations, Commodore Amiga, Atari ST and Apple Macintosh computers through the mid-1990s, {{by which time}} most models had been transitioned to IDE (and later, SATA) family disks. The range limitations of the data cable allows for external SCSI devices.|$|R
50|$|Built-in <b>system</b> <b>interface</b> - Gauche has {{built-in}} support for most POSIX.1 system calls.|$|R
5000|$|Adding new {{language}} support, expanded bar code symbologies [...] and <b>system</b> <b>interface</b> enhancements ...|$|R
5000|$|... {{suitable}} {{digital data}} logging and processing <b>systems</b> <b>interfaced</b> with oceanographic and hydrographic sensors.|$|R
5000|$|... 1. 'Spotlight {{the music}} and touch the light' - Audio <b>system</b> <b>interfacing</b> with Lighting ...|$|R
5000|$|SCSI-160, an {{implementation}} of the SCSI (Small Computer <b>System</b> <b>Interface)</b> standards for data communication ...|$|R
5000|$|Radio <b>System</b> <b>Interface</b> - an {{interface}} {{that enables}} VoIP communication to radio system infrastructure ...|$|R
40|$|Abstract- Increasing {{complexity}} of microprocessor-based sys-tems {{puts pressure on}} a product’s time-to-market. We describe a methodology used in designing the <b>system</b> <b>interface</b> of UltraSPARC-I. This methodology allowed us to define the <b>system</b> <b>interface</b> architecture, verify the functionality, perform timing and noise analysis and do the physical board design in parallel. This concurrency permitted rapid implementation of the micro-processor and the system. I...|$|R
40|$|According to {{development}} demand of informational shipboard gun weapon system, design concept of shipboard gun weapon <b>system</b> <b>interface</b> is proposed. <b>System</b> composition is put forward and function demand of interface is analyzed from combat, training and detection aspects. General principle {{need to be}} followed in design process. A new concept is provided for development of shipboard gun weapon <b>system</b> <b>interface.</b> </p...|$|R
5000|$|Low Energy and Equal Spacing; the Multifactorial Evolution of Tuning <b>Systems.</b> <b>Interface,</b> 22, 1993, 319-333.|$|R
5000|$|Obtain {{information}} on data volumes and <b>system</b> <b>interface</b> needs, for network sizing and performance engineering, ...|$|R
50|$|Racket's <b>system</b> <b>interface</b> {{includes}} asynchronous non-blocking I/O, green threads, synchronization channels, semaphores, sub-processes, and TCP sockets.|$|R
5000|$|A {{user-friendly}} navigation <b>system</b> (<b>interface)</b> provides contextual, situation-based cues {{to provide}} information related to a situation.|$|R
50|$|The X/Open Portability Guide is a {{standard}} for UNIX systems originally published by X/Open Company Ltd. Based on the AT&T <b>System</b> V <b>Interface</b> Definition, it has a wider scope than POSIX, which is only concerned with direct operating <b>system</b> <b>interfaces.</b>|$|R
40|$|Traditional OS <b>system</b> <b>interfaces,</b> {{like the}} POSIX standard, lack {{the level of}} support and ease of {{programming}} needed to develop large parallel programs. In this paper, we describe our vision for an ex-tensible object-oriented <b>system</b> <b>interface</b> designed {{to cope with the}} challenges of highly-parallel systems. We provide the rationale for our initial design decisions and we detail our current implementa-tion based on the Choices operating system. 1...|$|R
