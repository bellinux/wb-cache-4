53|400|Public
5|$|Quenya {{allows for}} a very {{flexible}} word order {{because it is an}} inflectional language like Latin. Nevertheless, it has word order rules. The usual <b>syntax</b> <b>structure</b> is subject-verb-object. The adjective can be placed before or after the noun that it modifies.|$|E
50|$|Similarly, {{although}} differing in the vocabulary, Murrinh-Patha and the decaying Mati Ke language {{share the}} <b>syntax</b> <b>structure.</b>|$|E
5000|$|The BlueGriffon HTML editor, in {{versions}} 1.7.x makes {{comments that}} are not embedded in the <b>syntax</b> <b>structure</b> [...] show up on screen. Other HTML editors may have this same defect.|$|E
40|$|Reordering is a {{difficult}} task in translating between widely different languages such as Japanese and English. We employ the postordering framework proposed by (Sudoh et al., 2011 b) for Japanese to English translation and improve upon the reordering method. The existing post-ordering method reorders a sequence of target language words in a source language word order via SMT, while our method reorders the sequence by: 1) parsing the sequence to obtain <b>syntax</b> <b>structures</b> similar to a source language structure, and 2) transferring the obtained <b>syntax</b> <b>structures</b> into the <b>syntax</b> <b>structures</b> of the target language. ...|$|R
30|$|The syntax-based {{approach}} is {{also referred to}} as transformation-based in literature because transformation rules are defined and applied on <b>syntax</b> <b>structures</b> of input sentences.|$|R
50|$|The {{words in}} bold above {{demonstrate}} that in the overt <b>syntax</b> <b>structures,</b> there are words that can be omitted in order to form a covert sentence word.|$|R
50|$|Quenya {{allows for}} a very {{flexible}} word order {{because it is an}} inflectional language like Latin. Nevertheless, it has word order rules. The usual <b>syntax</b> <b>structure</b> is subject-verb-object. The adjective can be placed before or after the noun that it modifies.|$|E
50|$|Özsoy's {{fields of}} study are <b>syntax,</b> <b>structure</b> of Turkish, Caucasian languages, {{cognitive}} linguistics, sign languages and Turkish Sign Language. She {{is one of the}} linguists who studied the now extinct language Ubykh focusing on its syntax. She studied with Tevfik Esenç, the last fluent speaker of Ubykh, in his later years. She organized an international conference, namely Conference on Northwest Caucasian Linguistics, at Boğaziçi University in 1994 in memory of Georges Dumézil, who analysed the language in detail, and Esenç.|$|E
5000|$|The normal {{sentence}} {{structure of}} standard Portuguese (SP) is subject verb object (SVO). In Sri Lanka Portuguese Creole (SLPC), SVO dominates, but SOV and OSV also occur. The <b>syntax</b> <b>structure</b> {{is similar to}} that of Tamil. For example, the verb has been reduced to a single form, and tense-mood-aspect markers (lo, te, ja) indicate the future, present and past tenses; that is, lo leva (SLPC): levarae (SP) 'he will carry'; te folga (SLPC): folgam (SP) 'they rejoice'; ja olha (SLPC): olhei (SP) 'I saw.' [...] (see ‘phrase samples’ below) ...|$|E
40|$|Most natural {{language}} based document retrieval systems use the <b>syntax</b> <b>structures</b> of constituent phrases of documents as index terms. Many {{of these systems}} also attempt to reduce the syntactic variability of {{natural language}} by some normalisation procedure applied to these <b>syntax</b> <b>structures.</b> However, the retrieval performance of such systems remains fairly disappointing. Some systems therefore use a meaning representation language to index and retrieve documents. In this paper, a system is presented that uses Horn Clause Logic as meaning representation language, employs advanced techniques from Natural Language Processing to achieve incremental extensibility, and uses methods from Logic Programming to achieve robustness {{in the face of}} insufficient data...|$|R
40|$|Abstract. This paper {{proposes a}} {{declarative}} approach to multi-mode heterogeneous DSLs based on term rewriting. The paper presents a data model and algorithm for processing <b>syntax</b> <b>structures.</b> It has been val-idated by an implementation that supports {{a range of}} languages. The paper includes an example language that supports both game construc-tion and execution. ...|$|R
5000|$|Suffix is an {{augmentation}} to {{the media}} type definition to additionally specify the underlying structure of that media type. Media types that make use of a named <b>structured</b> <b>syntax</b> should use the appropriate IANA registered [...] "+suffix" [...] for that <b>structured</b> <b>syntax</b> when they are registered. Unregistered suffixes {{should not be used}} (since January 2013). <b>Structured</b> <b>syntax</b> suffix registration procedures are defined in RFC 6838.|$|R
5000|$|Vyakarana in the Hindu traditions {{has been}} a study of both the <b>syntax</b> <b>structure</b> of sentences, {{as well as the}} {{architecture}} of a word. For instance, Panini asserts that grammar is about the means of semantically connecting a word with other words to express and understand meaning, and words are to be analyzed in the context they are used. Katyayana is quoted in Patanjali's Mahabhasya on Vyakarana as asserting the nature of a sentence as follows:A sentence consists of a finite verb together with indeclinables, karakas and qualifiers. - Mahabhasya 1.367.10A sentence has one finite verb. - Mahabhasya 1.367.16— Katyayana ...|$|E
50|$|Fragmentation {{is another}} {{important}} aspect of postmodern literature. Various elements, concerning plot, characters, themes, imagery and factual references are fragmented and dispersed throughout the entire work. In general, there is an interrupted sequence of events, character development and action which can at first glance look modern. Fragmentation purports, however, to depict a metaphysically unfounded, chaotic universe. It can occur in language, sentence structure or grammar. In Z213: Exit, a fictional diary by Greek writer Dimitris Lyacos, {{one of the major}} exponents of fragmentation in postmodern literature, an almost telegraphic style is adopted, devoid, in most part, of articles and conjunctions. The text is interspersed with lacunae and everyday language combines with poetry and biblical references leading up to syntax disruption and distortion of grammar. A sense of alienation of character and world is created by a language medium invented to form a kind of intermittent <b>syntax</b> <b>structure</b> which complements the illustration of the main character's subconscious fears and paranoia {{in the course of his}} exploration of a seemingly chaotic world.|$|E
30|$|Syntactic Parsing (Jurafsky and Martin 2000). It {{generates a}} parse tree of a {{sentence}} showing the hierarchical view of the <b>syntax</b> <b>structure</b> for the sentence. By traversing the parse tree, {{we are able to}} identify target phrases (such as noun phrases and verb phrases) and POS tags.|$|E
50|$|<b>Syntax</b> and <b>structure</b> in HAGGIS {{are very}} similar to other {{programming}} languages and can be easily learned.|$|R
40|$|Additional Media Type <b>Structured</b> <b>Syntax</b> Suffixes A content {{media type}} name {{sometimes}} includes partitioned metainformation distinguished by a <b>structured</b> <b>syntax</b> to permit noting an attribute {{of the media}} as a suffix to the name. This document defines several <b>structured</b> <b>syntax</b> suffixes for use with media type registrations. In particular, it defines and registers the "+json", "+ber", "+der", "+fastinfoset", "+wbxml " and "+zip " <b>structured</b> <b>syntax</b> suffixes, and provides a media type <b>structured</b> <b>syntax</b> suffix registration form for the "+xml " <b>structured</b> <b>syntax</b> suffix. Status of This Memo This document is not an Internet Standards Track specification; it is published for informational purposes. This document {{is a product of}} the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741. Information about the current status of this document, any errata, and how to provide feedback on it may be obtained a...|$|R
40|$|This {{research}} {{describes a}} technique for word and phrase prediction {{to help the}} writer of an English text in text generation and {{to speed up the}} typing process. The technique consists of a learning phase and a generation or prediction phase. The learning phase learns the English phrase and sentence syntax as well as keeps all the corpora for reference against the syntax and the actual text. The prediction of the next word or phrase is based on the preceding one or more words and the history and frequency of occurrences of phrase mappings. This research establishes that word and phrase prediction based on the preceding word or words depending on statistical or frequency use of the words is enhanced by coupling it with <b>syntax</b> <b>structures</b> to ensure that a form of semantics and grammar correctness is maintained. The approach shows the way to learn both the words strings and the <b>syntax</b> <b>structures</b> which are later used for the prediction or generation purposes. We present results to demonstrate that our approach gives enhancements to key stroke reduction and a more accurate and grammatically correct prediction...|$|R
40|$|By {{demand of}} expression, a double {{negation}} sentences {{are used in}} many situations. According to characteristics of double negation sentences, a paraphrase method based on templates is used. The method analysis sentence structure of double negation sentences, extract syntax frame and construct paraphrase templates. The <b>syntax</b> <b>structure</b> of double negative sentence and affirmation sentence are suitable for paraphrase. By comparing the <b>syntax</b> <b>structure</b> of double negative sentences with their affirmation sentences, paraphrase templates are abstracted. Matching of paraphrase templates with paraphrase sentences is completed by calculating their similarity. To evaluate performance of the method, small-scale experiments have been done and got the coverage rate of templates and precision of paraphrase 98. 9 % and 84. 7 % respectively. The experimental results indicate {{the availability of the}} proposed method, and a small corpus resource is established that it can be provided for further research of sentence paraphrase...|$|E
40|$|Managing {{knowledge}} {{is crucial in}} our economy. We derive requirements on personal knowledge management (finding, reminding, collaboration, knowledge re-use and cognitively adequate interfaces) from cognitive psychological research and analyse the limitations of current solutions. We introduce a restful, wiki-based, open architecture for semantic personal knowledge management that fulfills the analysed requirements to a high extent and gives the user a uniform way to work with knowledge on all layers (<b>syntax,</b> <b>structure,</b> formal semantics). We discuss architectural considerations and describe two implementations...|$|E
40|$|We propose Apricot as an {{object-oriented}} language for modeling hybrid systems. The language combines the features in domain specific language and {{object-oriented language}}, that fills {{the gap between}} design and implementation, as a result, we put forward the modeling language with simple and distinct <b>syntax,</b> <b>structure</b> and semantics. In addition, we introduce the concept of design by convention into Apricot. As the characteristic of object-oriented and the component architecture in Apricot, we conclude that it is competent for modeling hybrid systems without losing scalability...|$|E
40|$|A content {{media type}} name {{sometimes}} includes partitioned meta-information distinguished by a <b>structured</b> <b>syntax</b> to permit noting an attribute {{of the media}} as a suffix to the name. This document defines several <b>structured</b> <b>syntax</b> suffixes for use with media type registrations. In particular, it defines and registers the "+json", "+ber", "+der", "+fastinfoset", "+wbxml " and "+zip " <b>structured</b> <b>syntax</b> suffixes, and provides a media type <b>structured</b> <b>syntax</b> suffix registration form for the "+xml " <b>structured</b> <b>syntax</b> suffix. Status of This Memo This document is not an Internet Standards Track specification; it is published for informational purposes. This document {{is a product of}} the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741. Information about the current status of this document, any errata, and how to provide feedback on it may be obtained a...|$|R
50|$|Beyond {{the basic}} Prolog data types, the {{following}} are available: strings,unlimited precision integer and rational numbers,and floating point intervals.Array <b>syntax</b> and <b>structures</b> with field namesare also supported and especially useful in constraint modelling.|$|R
40|$|A key {{aspect of}} {{successfully}} using UML is understanding the semantics of the notations. UML 2 {{will increase the}} already substantial collection of notations supported by UML 1. x. At the same time, this will augment the difficulty users experience in understanding semantics. In this paper we propose that while the diverse notations may render concepts differently, the concepts can often be considered semantically equivalent. This gives rise to an architecture where two single abstract <b>syntaxes</b> (<b>structure</b> and behaviour) underpin UML 2 ’s seven concrete syntax. Because there a fewer semantically distinct concepts, this makes UML both easier to understand and substantially easier to implement. ...|$|R
40|$|Abstract. In {{order to}} solve the problem of the {{recognition}} of manufacturing features in engineering drawings based on geometrical CAD data modal, semantic information in 2 D drawings is first analyzed. Based on the intelligent pattern recognition theory, the semantics and basic entities are regarded as pattern primitives and the relationships between entities as operation rules. Pattern classes are built based on <b>syntax</b> <b>structure.</b> Recognition can be accomplished through extracting, analyzing syntax and matching. A feature recognition system is developed based on AutoCAD with ARX technology...|$|E
40|$|Many {{people think}} of science and {{statistics}} as dry and even lifeless endeavors. In fact, the wellspring of good science and statistics is creativity, and creativity is enhanced by memory, imagination, beauty, and collaboration. I will discuss some of the Stata features that I believe work together to stimulate the creative impulse, including a unified interface design and <b>syntax</b> <b>structure,</b> the "type a little, get a little" paradigm, a very large suite of statistical procedures, expandability, excellent documentation, automation, beautiful and flexible graphics, and inter-operability with other statistical packages. ...|$|E
40|$|This {{comprehensive}} and accessible text/reference presents {{an overview of}} the state of the art in video coding technology. Specifically, the book introduces the tools of the AVS 2 standard, describing how AVS 2 can help to achieve a significant improvement in coding efficiency for future video networks and applications by incorporating smarter coding tools such as scene video coding. Topics and features: introduces the basic concepts in video coding, and presents a short history of video coding technology and standards; reviews the coding framework, main coding tools, and <b>syntax</b> <b>structure</b> of A...|$|E
5000|$|The syntax {{definition}} {{uses the}} Seed7 <b>Structured</b> <b>Syntax</b> Description (S7SSD). A S7SSD statement like ...|$|R
5000|$|HOG {{maintains}} Haskell Curry's {{distinction between}} tectogrammatical <b>structure</b> (abstract <b>syntax)</b> and phenogrammatical <b>structure</b> (concrete <b>syntax).</b>|$|R
40|$|Computational {{discourse}} and semantics; computational linguistics for low-resource languages and for language documentation; discourse structure and coherence, modes of discourse; active learning; language documentation; formal and functional <b>syntax,</b> argument <b>structure</b> and linking, voice; lexical and formal semantics; language and musi...|$|R
30|$|Syntactic Parsing. Preprocessor {{generates a}} parse-tree {{structure}} for a sentence {{based on its}} grammar structure. The parse tree of a sentence shows the hierarchical view of the <b>syntax</b> <b>structure</b> for the sentence. For example, the parse tree of sentence “Facebook will not save your password” is illustrated in Fig.  3. The sentence node is labeled as S. It is the child of the root node. The interior nodes of the tree are labeled by non-terminal tags (e.g., verb phrases VP and noun phrases NP). The leaf nodes are labeled by terminal tags (e.g., pronouns PRP$ and nouns NN). Preprocessor saves the parse tree in the intermediate structure for further analysis.|$|E
40|$|Modeling for {{operation}} rules is essential function requirement in equipment simulation training {{system based on}} VR. Aiming at the modeling actuality of present equipment operation rules, which has no systematic, no generality and no formatting expression, layered modeling system framework based on federation is brought forward referencing to the “Federation and Member ” concept of HLA. Open modeling method is adopted to modeling equipment operation rules {{and it can be}} described with XML <b>syntax</b> <b>structure.</b> Finally, the basic implement principle of equipment operation rules is presented combing with some large tactical communication system equipment. It can provide beneficial reference for constructing similar large scale equipment simulation training system based on VR...|$|E
40|$|Geolibraries {{containing}} {{large volumes}} of complex spatiotemporal data occur {{in a variety of}} application domains. Considerable effort has gone into the design of metadata standards to enable exchange and sharing of georeferenced data sets. Strategies for federating information stores have to deal with integration at several levels, <b>syntax,</b> <b>structure</b> as well as semantics. This paper describes a generic metamodel for geolibraries. It encompasses a conceptually partitioned view of the data space including metadata at various levels of a geolibrary. The model places particular emphasis on ontologies representing domain-dependent knowledge that exists within a research community to facilitate resource discovery and retrieval of information from heterogeneous data stores...|$|E
40|$|The {{annotation}} of morphology, <b>syntax</b> {{and information}} <b>structure</b> in a multilayered diachronic corpus This paper describes the annotation scheme we use for old Germanic and Romance languages, with particular focus on <b>syntax</b> and information <b>structure,</b> {{and the issues}} of economy and disambiguation. We also discuss some of the annotation problems {{we have had to}} solve, in order to demonstrate the complexity of this kind of linguistic annotation. ...|$|R
5|$|The JMP Scripting Language (JSL) is an {{interpreted}} {{language for}} recreating analytic results and for automating or extending the functionality of JMP software. JSL {{was first introduced}} in JMP version 4 in 2000. JSL has a LISP-like <b>syntax,</b> <b>structured</b> {{as a series of}} expressions. All programming elements, including if-then statements and loops, are implemented as JSL functions. Data tables, display elements and analyses are represented by objects in JSL that are manipulated with named messages. Users may write JSL scripts to perform analyses and visualizations not available in the point-and-click interface or to automate a series of commands, such as weekly reports. SAS, R, and Matlab code can also be executed using JSL.|$|R
40|$|Abstract. In model-driven engineering, {{models are}} primary {{artifacts}} and can evolve heavily during their life cycle. Therefore, versioning of models {{is a key}} technique which has to be offered by an integrated development environment for model-driven engi-neering. In contrast to text-based versioning systems we present an approach which takes abstract <b>syntax</b> <b>structures</b> in model states and operational features into account. Considering the abstract syntax of models as graphs, we define model revisions as graph modifications which are not necessarily rule-based. Building up on the DPO approach to graph transformations, we define two different kinds of conflict detection: (1) the check for operation-based conflicts, and (2) the check for state-based conflicts on results of merged graph modifications. ...|$|R
