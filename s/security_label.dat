37|165|Public
5000|$|... <b>security</b> <b>label</b> checks against {{source and}} {{destination}} clearances ...|$|E
50|$|In a {{programming}} language augmented with a security type system every expression carries both a type (such as boolean, or integer) and a <b>security</b> <b>label.</b>|$|E
50|$|PostgreSQL's <b>SECURITY</b> <b>LABEL</b> feature (extension to SQL standards), {{allows for}} {{additional}} security; with a bundled loadable module that supports label-based {{mandatory access control}} (MAC) based on SELinux security policy.|$|E
2500|$|The BellLaPadula Model (BLP) is a {{state machine}} model used for {{enforcing}} access control in government and military applications. It was developed by David Elliott Bell [...] and Leonard J. LaPadula, subsequent to strong guidance from Roger R. Schell, to formalize the U.S. Department of Defense (DoD) multilevel security (MLS) policy. The model is a formal state transition model of computer security policy that describes a set of access control rules which use <b>security</b> <b>labels</b> on objects and clearances for subjects. <b>Security</b> <b>labels</b> range from the most sensitive (e.g., [...] "Top Secret"), down to the least sensitive (e.g., [...] "Unclassified" [...] or [...] "Public").|$|R
40|$|This paper {{describes}} {{the design of}} a peer-to-peer network that supports integrity and confidentiality labeling of shared data. A notion of data ownership privacy is also enforced, whereby peers can share data without revealing which data they own. <b>Security</b> <b>labels</b> are global but the implementation does not require a centralized label server. The network employs a reputation-based trust management system to assess and update data labels, and to store and retrieve labels safely in the presence of malicious peers. The <b>security</b> <b>labeling</b> scheme preserves the efficiency of network operations; lookup cost including label retrieval is O(log N), where N is the number of agents in the network. 1...|$|R
5000|$|The Bell - LaPadula Model (BLP) is a {{state machine}} model used for {{enforcing}} access control in government and military applications. It was developed by David Elliott Bell [...] and Leonard J. LaPadula, subsequent to strong guidance from Roger R. Schell, to formalize the U.S. Department of Defense (DoD) multilevel security (MLS) policy. The model is a formal state transition model of computer security policy that describes a set of access control rules which use <b>security</b> <b>labels</b> on objects and clearances for subjects. <b>Security</b> <b>labels</b> range from the most sensitive (e.g., [...] "Top Secret"), down to the least sensitive (e.g., [...] "Unclassified" [...] or [...] "Public").|$|R
5000|$|The {{discretionary}} labelling mechanism added security {{labels to}} files, application {{windows and the}} clipboard. The user's desktop display was augmented with a stripe {{across the top of}} the screen. This showed the <b>security</b> <b>label</b> of the application window that had focus and the <b>security</b> <b>label</b> of the clipboard. When data was copied to the clipboard the clipboard label was set to that of the source application window. When data was copied from the clipboard the destination application window's label [...] "floated up" [...] to the label of the new data. The user was free to change the label of a window or the clipboard at any time.|$|E
5000|$|Later {{developments}} of guards addressed {{the problem of}} automatic [...] "downgrading" [...] of information exported from a classified system. The Secure Network Server (SNS) Mail Guard (SMG) enforced source/destination address whitelists, <b>security</b> <b>label</b> checks, attachment type filtering and digital signatures to ensure sensitive information is not released ...|$|E
50|$|MAC: In the Mandatory Access Control (MAC) model, {{users are}} given permissions to {{resources}} by an administrator. Only an administrator can grant permissions or right to objects and resources. Access to resources {{is based on}} an object's security level, while users are granted security clearance. Only administrators can modify an object's <b>security</b> <b>label</b> or a user's security clearance.|$|E
40|$|International audienceMandatory Access Control {{is really}} poorly {{supported}} by Cloud environments. Our paper proposes {{extensions of the}} OpenNebula Cloud {{in order to provide}} an advanced MAC protection of the virtual machines hosted by the different nodes of the Cloud. Thus, unique SELinx <b>security</b> <b>labels</b> are associated with the virtual machines and their ressources. The instanciations and migrations of the virtual machines maintain those unique <b>security</b> <b>labels.</b> Moreover, PIGA-Virt provides a unified way to control the information flows within a virtual machine but also between multiple virtual machines. SELinux controls the direct flows. PIGA-Virt adds advanced controls. Thus, a PIGA protection rule can control several direct and indirect flows. The benchmarks of PIGA-Virt show that our Trusted OpenNebula Cloud is efficient regarding the quality of the protection...|$|R
5000|$|Mandatory Access Control (MAC)In MAC, users do {{not have}} much freedom to {{determine}} who has access to their files. For example, security clearance of users and classification of data (as confidential, secret or top secret) are used as <b>security</b> <b>labels</b> to define the level of trust.|$|R
5000|$|... #Caption: A <b>security</b> {{hologram}} <b>label</b> on {{an electronics}} box for authentication ...|$|R
50|$|Sproxilâ€™s service {{places a}} <b>security</b> <b>label</b> with a scratch-off panel on all {{protected}} products. Consumers scratch off the panel at {{point of purchase}} to reveal a unique one-time use code. This {{is a form of}} mass serialization. The code is sent via SMS or mobile app to a country-specific short code, and the consumer receives a reply almost instantly indicating that the product is genuine or suspicious. The company also has a 24/7 call center to provide support during the verification process and take in anonymous reports of suspicious counterfeiting activity.|$|E
5000|$|Sun's Trusted Solaris uses a {{mandatory}} and system-enforced {{access control mechanism}} (MAC), where clearances and labels are used {{to enforce a security}} policy. However note that the capability to manage labels does not imply the kernel strength to operate in Multi-Level Security mode. Access to the labels and control mechanisms are not robustly protected from corruption in protected domain maintained by a kernel. The applications a user runs are combined with the <b>security</b> <b>label</b> at which the user works in the session. Access to information, programs and devices are only weakly controlled.|$|E
50|$|The NFL and law {{enforcement}} announced that tickets to Super Bowl LI would feature heat-sensitive logos to deter counterfeit tickets. On the front of each ticket is a full polymer graphic that is raised and the back features a true color <b>security</b> <b>label</b> with Houston's skyline and the Super Bowl logo. The final security feature is a graphic on the lower portion {{of the back of}} each ticket which is printed with thermochromic ink. The HTX logo and the NRG Stadium image will fade when heat is applied and will return when the heat source is removed.|$|E
40|$|Counterfeiting is a {{challenge}} to companies, customers and markets all over the world. Besides the economic damage which affects in particular the companies and countries that use advanced production and manufacturing processes based on intensive research and development to produce high quality goods, safety standards are omitted. These standards protect usually the customer from goods which are dangerous or harzardous to health. Product piracy prevention is often followed by the application of RFID tags to supervise supply chains. The lack of robust counterfeit detection methods created a market for artificial <b>security</b> <b>labels</b> which are used to secure the product itself. The specific conditions of production, manufacturing technologies and materials generate specific features, which identify every product uniquely. The innovation of this text is the detection of these features in an automated fashion through the combination of digital sensing and machine learning, rendering the application of artificial <b>security</b> <b>labels</b> obsolete...|$|R
50|$|Cash's {{no longer}} make ribbons, {{although}} they continue to weave the time-honoured identity nametapes, together with woven pictures, cards and bookmarks. In more recent years {{the main focus of}} the business has been a new anti-counterfeit and tamper evident <b>security</b> <b>labelling</b> department for high-end brands, called CertiEye. Becoming part of the global Jointak Group has secured the Cash's brand for future generations.|$|R
40|$|This paper gives a {{language}} in which information flow is securely controlled by a dependent type system, yet the security classes of data can vary dynamically. Information flow policies provide the means to express strong security requirements for data confidentiality and integrity. Recent work on security-typed programming languages has shown that information flow can be analyzed statically, ensuring that programs will respect the restrictions placed on data. However, real computing systems have security policies that vary dynamically and that cannot be determined {{at the time of}} program analysis. For example, a file has associated access permissions that cannot be known with certainty until it is opened. Although one security-typed programming language has included support for dynamic <b>security</b> <b>labels,</b> there has been no demonstration that a general mechanism for dynamic labels can securely control information flow. In this paper, we present an expressive language-based mechanism for reasoning about dynamic <b>security</b> <b>labels.</b> The mechanism is formally presented in a core language based on the typed lambda calculus; any well-typed program in this language is provably secure because it satisfies noninterference. ...|$|R
5000|$|During the 1990s, FACT {{created a}} 30-second to 1 minute anti-piracy warning called [...] "Beware of Illegal Video Cassettes", {{reminding}} customers to check {{whether they have}} a genuine video and how to report questionable copies. They appeared on many different video cassettes by various home video companies. Versions for each studio depicting their respective <b>security</b> <b>label</b> (generally a hologram of the studio logo) were created, with several iterations for each as the FACT hotline number changed multiple times throughout the decade. The warning was placed {{at the beginning of}} practically every rental released VHS tape in the UK (as well as many retail tapes), similar to the FBI Warning found on tapes in the United States. Since late 1996, this warning was followed by a public information film featuring a man attempting to return a pirate video purchased from a market after discovering that the sound was garbled and the picture unwatchable, ending with the tagline [...] "Pirate Videos: Daylight Robbery." [...] The [...] "Pirate Videos: Daylight Robbery" [...] ad was used until 2002. A precursor PIF, [...] "Video Piracy: It's Not Worth It!" [...] was released in 1995 that featured a young girl named Rebecca trying to watch a pirated VHS on a TV ending with a VHS player falling down with the words on top: [...] "VIDEO PIRACY. It's not worth it.".|$|E
40|$|The {{cryptosystem}} {{proposed by}} Koyama is not semantically secure. Also, {{it is not}} secure against partial known plaintext attack, linearly related plaintext attack and low exponent attack. In this {{paper we propose a}} cryptosystem over singular cubic curve using the idea of Koyama and Kouichi et al. Our proposed cryptosystem is approximately two times faster than the cryptosystem given by Kouichi et al. with the same <b>security</b> <b>label</b> and more efficient than the Koyama scheme at higher <b>security</b> <b>label.</b> Further, the partially known plaintext attack and the linearly related plaintext attacks are analyzed and concluded that those are not possible in the proposed scheme...|$|E
30|$|The {{characteristics}} of the proposed scenario lead us to consider strategic paths for the organization based on the <b>security</b> <b>label</b> since all the selected alternatives presented the same evaluation {{with respect to the}} response time. Therefore, there are only two alternatives for the organization, namely, B and K. The paths are shown in Table 8.|$|E
40|$|This paper {{presents}} a {{language in which}} information flow is securely controlled by a type system, yet the security class of data can vary dynamically. Information flow policies provide the means to express strong security requirements for data confidentiality and integrity. Recent work on security-typed programming languages has shown that information flow can be analyzed statically, ensuring that programs will respect the restrictions placed on data. However, real computing systems have security policies that cannot be determined {{at the time of}} program analysis. For example, a file has associated access permissions that cannot be known with certainty until it is opened. Although one security-typed programming language has included support for dynamic <b>security</b> <b>labels,</b> there has been no demonstration that a general mechanism for dynamic labels can securely control information flow. In this paper, we present an expressive language-based mechanism for reasoning about dynamic <b>security</b> <b>labels.</b> The mechanism is formally presented in a core language based on the typed lambda calculus; any well-typed program in this language is secure because it satisfies noninterference. ...|$|R
50|$|<b>Security</b> <b>labels</b> {{are used}} for anti-counterfeiting, brand protection, {{tamper-evident}} seals and anti-pilferage seals. These combine a number of overt and covert features to make reproduction difficult. The use of security printing, holography, embossing, barcodes, RFID chips, custom printing and weak (or weakened) backings is common. They {{are used for}} authentication, theft reduction, and protection against counterfeit and are commonly used on ID cards, credit cards, packaging, and products from CDs to electronics to clothing.|$|R
40|$|Cross-domain {{information}} exchange is {{an increasingly important}} capability for conducting efficient and secure operations, both within coalitions and within single nations. A data guard is a common cross-domain sharing solution that inspects the <b>security</b> <b>labels</b> of exported data objects and validates that they are such {{that they can be}} released according to policy. While we see that guard solutions can be implemented with high assurance, we find that obtaining an equivalent level of assurance in the correctness of the <b>security</b> <b>labels</b> easily becomes a hard problem in practical scenarios. Thus, a weakness of the guard-based solution is that there is often limited assurance in the correctness of the <b>security</b> <b>labels.</b> To mitigate this, guards make use of content checkers such as dirty word lists as a means of detecting mislabeled data. To improve the overall security of such cross-domain solutions, we investigate more advanced content checkers based on the use of machine learning. Instead of relying on manually specified dirty word lists, we can build data-driven methods that automatically infer the words associated with classified content. However, care must be taken when constructing and deploying these methods as naive implementations are vulnerable to manipulation attacks. In order to provide a better context for performing classification, we monitor the incoming information flow and use the audit trail to construct controlled environments. The usefulness of this deployment scheme is demonstrated using a real collection of classified and unclassified documents. Â© 2017 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse of any copyrighted component of this work in other works...|$|R
40|$|<b>Security</b> <b>label</b> {{is made to}} {{anticipate}} the increasing of documents falsification trend. In this study, the <b>security</b> <b>label</b> is created using CdSe quantum dots. The quantum dots {{can be used for}} casting light according to its wavelength so that the particle size can be specific. That 2 Ì† 7 s why its worth to be security key from quantum dots. The quantum dots that be used is colloidal CdSe quantum dots with a wavelength of 595 nm and 526 nm. In the previous studies have been done the two-dimensional scanning process of quantum dots for one color as a <b>security</b> <b>label.</b> However, the results obtained are not perfect because it has not done the repair process for the image resulted. Therefore, in this study conducted by the two-dimensional scanning of quantum dots in two colors to add a level of security on the label then followed by image processing in order to obtain a better image. Image processing which have been done by observing the histogram of the image in order to obtain a threshold value between the object and the background image. Scanning generate data {{in the form of a}} sequence intensity value corresponding to the color intensity of quantum dots to obtain image data processing results. Image processing through the observation of the histogram data successfully get the intensity threshold value so that the image can be processed to become more visible in accordance with the sampl...|$|E
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2002). All Rights Reserved. This document discusses how company security policy for data classification can be mapped to the S/MIME <b>security</b> <b>label.</b> Actual policies from three companies provide worked examples. 1...|$|E
40|$|An e#cient and semantically secure {{public key}} {{cryptosystem}} based on singular cubic curve is proposed in this paper. It {{is about two}} {{times faster than the}} cryptosystem of David at the same <b>security</b> <b>label</b> and more e#cient than the Koyama scheme at high security level. Further, the partially known plaintext attack and the linearly related plaintext attacks are analyzed and concluded that those are not possible in the proposed scheme...|$|E
2500|$|The type of {{information}} <b>security</b> classification <b>labels</b> selected and used {{will depend on the}} nature of the organization, with examples being: ...|$|R
50|$|Apache Accumulo {{extends the}} Bigtable data model, {{adding a new}} element to the key called Column Visibility. This element stores a logical {{combination}} of <b>security</b> <b>labels</b> that must be satisfied at query time {{in order for the}} key and value to be returned as part of a user request. This allows data of varying security requirements to be stored in the same table, and allows users to see only those keys and values for which they are authorized.|$|R
40|$|This paper explores {{information}} flow control in systems {{in which the}} security classes of data can vary dynamically. Information flow policies provide the means to express strong security requirements for data confidentiality and integrity. Recent work on security-typed programming languages has shown that {{information flow}} can be analyzed statically, ensuring that programs will respect the restrictions placed on data. However, real computing systems have security policies that vary dynamically and that cannot be determined {{at the time of}} program analysis. For example, a file has associated access permissions that cannot be known with certainty until it is opened. Although one security-typed programming language has include support for dynamic <b>security</b> <b>labels,</b> there has been no examination of whether such a mechanism can securely control information flow. In this paper, we present an expressive language-based mechanism for securely manipulating dynamic <b>security</b> <b>labels.</b> The mechanism is presented both {{in the context of a}} Java-like programming language and, more formally, in a core language based on the typed lambda calculus. This core language is expressive enough to encode previous dynamic label mechanisms; as importantly, any well-typed program is provably secure because it satisfies noninterference...|$|R
40|$|Cross-domain {{information}} exchange {{is necessary to}} obtain information superiority in the military domain, and {{should be based on}} assigning appropriate security labels to the information objects. Most of the data found in a defense network is unlabeled, and usually new unlabeled information is produced every day. Humans find that doing the security labeling of such information is labor-intensive and time consuming. At the same time there is an information explosion observed where more and more unlabeled information is generated year by year. This calls for tools that can do advanced content inspection, and automatically determine the <b>security</b> <b>label</b> of an information object correspondingly. This paper presents a machine learning approach to this problem. To the best of our knowledge, machine learning has hardly been analyzed for this problem, and the analysis on topical classification presented here provides new knowledge and a basis for further work within this area. Presented results are promising and demonstrates that machine learning can become a useful tool to assist humans in determining the appropriate <b>security</b> <b>label</b> of an information objec...|$|E
40|$|Key Assignment Schemes (KASs) {{have been}} {{extensively}} {{studied in the}} context of cryptographically-enforced access control, where derived keys are used to decrypt protected resources. In this paper, we explore the use of KASs in entity authentication protocols, where we use derived keys to encrypt challenges. This novel use of KASs permits the efficient authentication of an entity in accordance with an authentication policy by associating entities with security labels representing specific services. Cryptographic keys are associated with each <b>security</b> <b>label</b> and demonstrating knowledge of an appropriate key is used as the basis for authentication. Thus, by controlling the distribution of such keys, restrictions may be efficiently placed upon the circumstances under which an entity may be authenticated and the services to which they may gain access. In this work, we explore how both standardized protocols and novel constructions may be developed to authenticate entities as members of a group associated to a particular <b>security</b> <b>label,</b> whilst protecting the long-term secrets in the system. We also see that such constructions may allow for authentication whilst preserving anonymity, and that by including a trusted third party we can achieve the authentication of individual identities and authentication based on timestamps without the need for synchronized clocks...|$|E
40|$|Abstract. A key {{assignment}} {{scheme is}} a model for enforcing an information flow policy using cryptographic techniques. Such schemes have been widely studied in recent years. Each <b>security</b> <b>label</b> {{is associated with a}} symmetric encryption key: data objects are encrypted and authorised users are supplied with the appropriate key(s). However, updates to encryption keys pose a significant problem, as the new keys have to be issued to all authorised users. In this paper, we propose three generic approaches to key assignment schemes that remove the problem of key redistribution following key updates. We analyse the overheads incurred by these approaches and conclude that these overheads are negligible in practical applications...|$|E
50|$|Within a {{security}} domain access controls {{are designed to}} stop users from accessing material without a need-to-know and to prevent them making mistakes when handling classified data, while controls over sharing information between security domains are more stringent and defend against attacks and hold the users to account for their actions. The model calls for discretionary <b>security</b> <b>labelling</b> and role based access controls within a domain and user-sanctioned release of information from the domain coupled with application oriented accounting and audit.|$|R
40|$|Common {{security}} models such as Bell-LaPadula {{focus on}} the control of access to sensitive data but leave some important systems issues unspecified, such as the implementation of read-only objects, garbage collection, and object upgrade and downgrade paths. Consequently, different implementations of the same security model may have conflicting operational and security semantics. We propose the use of more expressive <b>security</b> <b>labels</b> for specifying these system issues within the security model, so that the semantics of a system design are precisely understood and are independent of implementation details. Keywords [...] - Data security, garbage collection, multilevel <b>security,</b> object <b>label,</b> read-only object. I. Introduction Multilevel security is a useful model for many commercial and military institutions where the organizations are "naturally" hierarchical and compartmentalized. For example, {{members of the same}} management consulting firm who are advising two competitive oil companies should [...] ...|$|R
5000|$|... #Caption: * GSE {{refers to}} loans either {{purchased}} or guaranteed by government sponsored entities Fannie Mae (FNMA) and Freddie Mac (FHLMC)*SUB refers to loans that were sold into private <b>label</b> <b>securities</b> <b>labeled</b> subprime by issuers*ALT refers to loans sold into private label Alt-a securitizations (not as risky as subprime loans)*FHA refers to loans {{guaranteed by the}} Federal Housing Administration or Veterans Administration (source: Final Report of the National Commission on the Causes of the Financial and Economic Crisis in the United States, p. 218, figure 11.3) ...|$|R
