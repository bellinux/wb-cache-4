1744|2851|Public
25|$|In an unordered list, {{one simple}} {{heuristic}} for decreasing average <b>search</b> <b>time</b> is the move-to-front heuristic, which simply moves an element {{to the beginning}} of the list once it is found. This scheme, handy for creating simple caches, ensures that the most recently used items are also the quickest to find again.|$|E
25|$|The {{benefit of}} alpha–beta pruning {{lies in the}} fact that {{branches}} of the search tree can be eliminated. This way, the <b>search</b> <b>time</b> can be limited to the 'more promising' subtree, and a deeper search can be performed in the same time. Like its predecessor, it belongs to the branch and bound class of algorithms. The optimization reduces the effective depth to slightly more than half that of simple minimax if the nodes are evaluated in an optimal or near optimal order (best choice for side on move ordered first at each node).|$|E
25|$|Using these variables, {{the optimal}} diet model can predict how predators choose between two prey types: big prey1 with energy value E1 and {{handling}} time h1, and small prey2 with energy value E2 and handling time h2. In order to maximize its overall rate of energy gain, a predator {{must consider the}} profitability of the two prey types. If {{it is assumed that}} big prey1 is more profitable than small prey2, then E1/h1 > E2/h2. Thus, if the predator encounters prey1, it should always choose to eat it, because of its higher profitability. It should never bother to go searching for prey2. However, if the animal encounters prey2, it should reject it to look for a more profitable prey1, unless the time it would take to find prey1 is too long and costly for it to be worth it. Thus, the animal should only eat prey2 if E2/h2 > E1/(h1+S1), where S1 is the <b>search</b> <b>time</b> for prey1. Since it is always favorable to choose to eat prey1, the choice to eat prey1 is not dependent on the abundance of prey2. But since the length of S1 (i.e. {{how difficult it is to}} find prey1) is logically dependent on the density of prey1, the choice to eat prey2 is dependent on the abundance of prey1.|$|E
40|$|Twenty {{observers}} {{searched for}} three-digit numbers on displays ranging in density from 10 to 50 items coded in one through ten colors. <b>Search</b> <b>times</b> increased linearly with density and showed a curvilinear relation to numberofcolors used. An initial drop in <b>search</b> <b>times</b> {{as the first}} few colors were added to an uncoded display {{was followed by a}} rise in <b>search</b> <b>times</b> as still more colors were used, Minimal <b>search</b> <b>times</b> at different display densities were as-sociated with different code sizes. <b>Search</b> <b>times</b> increased as more colors were added to the code, even when the number o f items per color category was constant. The detrimental effect on <b>search</b> <b>times</b> o f larger code sizes is interpreted as a camouflage o f the color contour o f the target’s class by the multiple color boundaries in the heterogeneous background...|$|R
40|$|AbstractIn {{previous}} studies the utilisation of spatial frequency information in face perception {{has been investigated}} by using static recognition tasks. In this study we used a visual search task, which requires eye movements and fast identification of previously learned facial photographs. Using Fourier phase randomisation, spatial information was selectively removed without changing the amplitude spectrum of the image. Fourier phase was randomised within one-octave wide bands of nine different centre spatial frequencies (2 – 32 c/face width, 0. 63 – 10. 1 c/deg). In a control condition no randomisation was used. All stimuli had similar contrast. <b>Search</b> <b>times</b> and eye movements during the search were measured. The removal of spatial information by phase randomisation at medium spatial frequencies resulted in a considerable increase of <b>search</b> <b>times.</b> In the main experiment the maximum of the <b>search</b> <b>times</b> occurred between 8 and 11 c/face width. The number of eye fixations behaved similarly. In an additional experiment with a threefold viewing distance the <b>search</b> <b>times</b> increased and the maximum of the <b>search</b> <b>times</b> shifted slightly to lower object spatial frequencies (5. 6 – 8 c/face width). This suggests that the band of spatial frequencies used in face search is not completely scale invariant. The results show that information most important to face search is located at a limited band of mid spatial frequencies. This is consistent with earlier studies, in which non-dynamical face recognition tasks and low-contrast stimuli have been used...|$|R
30|$|The top two {{panels of}} Fig.  6 compare the <b>search</b> <b>times</b> for {{sharpened}} vs original images when observers were {{adapted to the}} same background (original or sharpened). These panels thus highlight whether filtering the images (or adapting to the filtering) affects the speed of target detection. The changes with adaptation were assessed with a sign test comparing {{the number of times}} (images) for which search was faster for the original or sharpened image. For the dense backgrounds, sharpening the mammogram images (and targets) did not result in a significant change in the <b>search</b> <b>times.</b> Thus, these results suggest that the search performance was similar for the original and sharpened images and also that the relative sensitivity to the targets was not affected by the observer’s state of adaptation. For fatty backgrounds, <b>search</b> <b>times</b> instead became longer when the images were sharpened (RTs faster 26 / 38 times for the original images pooled across the two adapting conditions; p[*]=[*] 0.034). The scatter plots also suggest that this trend may be stronger for the fatty test images with the slowest <b>search</b> <b>times,</b> though we do not have sufficient data to formally assess this.|$|R
500|$|However, {{binary search}} is usually more {{efficient}} for searching as binary search trees {{will most likely}} be imperfectly balanced, resulting in slightly worse performance than binary search. This applies even to balanced binary search trees, binary search trees that balance their own nodes—as they rarely produce optimally-balanced trees—but to a lesser extent. Although unlikely, the tree may be severely imbalanced with few internal nodes with two children, resulting in the average and worst-case <b>search</b> <b>time</b> approaching [...] comparisons. Binary search trees take more space than sorted arrays.|$|E
500|$|A second {{expedition}} {{to map the}} wreck of Scorpion was mounted in 1985. Only twelve days of <b>search</b> <b>time</b> would be left {{at the end of}} the {{expedition to}} look for Titanic. As Harris/Grimm's unsuccessful efforts had taken more than forty days, Ballard decided that extra help would be needed. He approached the French national oceanographic agency, IFREMER, with which Woods Hole had previously collaborated. The agency had recently developed a high-resolution side-scan sonar called SAR and agreed to send a research vessel, Le Suroît, to survey the sea bed in the area where Titanic was believed to lie. The idea was for the French to use the sonar to find likely targets, and then for the Americans to use Argo to check out the targets and hopefully confirm whether they were in fact the wreck. The French team spent five weeks, from 5 July to 12 August 1985, [...] "mowing the lawn"– sailing back and forth across the [...] target area to scan the sea bed in a series of stripes. However, they found nothing, though it turned out that they had passed within a few hundred yards of Titanic in their first run.|$|E
500|$|Like other elanid kites, black-shouldered kites hunt by {{quartering}} grasslands {{for small}} creatures. This can {{be from a}} perch, but more often by hovering in mid-air. When hunting the kite hovers with its body hanging almost vertically, and its head into the wind. Unlike the Australian kestrel, the black-winged kite shows no obvious sideways movement, even in a strong breeze. One study of a nesting pair noted that the male searched aerially for 82% of the <b>search</b> <b>time.</b> Typically, a kite will hover [...] above a particular spot, peering down intently, sometimes {{for only a few}} seconds, often for a minute or more, then glide swiftly to a new vantage point and hover again. When hunting from a perch, a dead tree is the preferred platform. Like other Elanus kites, The black-shouldered kite grips a vertical branch with a foot on either side, each one above the other and turned inwards, which enables them to maintain a secure footing on relatively small branches. Though hovering is the most common hunting method, the kites have been observed searching the ground beneath a vantage point for periods of up to an hour.|$|E
40|$|Frames of {{reference}} {{play a central}} role in perceiving an object’s location and reaching to pick that object up. It is thought that the ventral stream, believed to subserve vision for perception, utilises allocentric coding, while the dorsal stream, argued to be responsible for vision for action, primarily uses an egocentric reference frame. We have previously shown that egocentric representations can survive a delay; however, it is possible that in comparison to allocentric information, egocentric information decays more rapidly. Here we directly compare the effect of delay on the availability of egocentric and allocentric representations. We used spatial priming in visual search and repeated the location of the target relative to either a landmark in the search array (allocentric condition) or the observer’s body (egocentric condition). Three inter-trial intervals created minimum delays between two consecutive trials of 2, 4, or 8 seconds. In both conditions, <b>search</b> <b>times</b> to primed locations were faster than <b>search</b> <b>times</b> to un-primed locations. In the egocentric condition the effects were driven by a reduction in <b>search</b> <b>times</b> when egocentric information was repeated, an effect that was observed at all three delays. In the allocentric condition while <b>search</b> <b>times</b> did not change when the allocentric information was repeated, <b>search</b> <b>times</b> to un-primed target locations became slower. We conclude that egocentric representations are not as transient as previously thought but instead this information is still available, and can influence behaviour, after lengthy periods of delay. We also discuss the possible origins of the differences between allocentric and egocentric priming effects...|$|R
40|$|In this paper, we have {{extended}} a macroscopic probabilistic {{model of a}} swarm of homogeneous foraging robots to a swarm of heterogeneous foraging robots. Each robot is capable of adjusting its <b>searching</b> <b>time</b> threshold and resting time threshold following the rules described in our previous paper. In order to model the difference between robots, private resting <b>time</b> and <b>searching</b> <b>time</b> thresholds are introduced. The robots resting at home are divided into two subsets according to which states they are transferred from, either state Deposit or state Homing. For each subset of robots, private resting <b>time</b> and <b>searching</b> <b>time</b> thresholds are {{used to calculate the}} effect of social and internal cues. The transition between state Resting and state Searching is then decided by the corresponding private resting time threshold. Corresponding to private resting time thresholds, a public resting time threshold is used to track the contribution of the social cues, internal cues and environmental cues for the whole swarm, which is a global property owned by all robots. Although the public resting time threshold doesn’t affect the behaviours for the individual robots directly, it affects the private resting time threshold and vice versa. Similarly, a public <b>searching</b> <b>time</b> threshold is introduced to track the contribution...|$|R
40|$|Conceptual {{retrieval}} returns {{information related}} to a specific topic but not restricted to a query term. A common approach is to compare the query with all the documents in the database. When the number of documents is large, the <b>searching</b> <b>time</b> becomes significant. In this paper, we propose a hierarchic architecture which integrates latent semantic indexing (LSI) and hierarchic agglomerative clustering to reduce the <b>searching</b> <b>time.</b> We employ three clustering algorithms (single link, complete link, and group average) and conduct experiments on four standard document collections (CACM, CISI, CRAN, and MED). The experimental results show our method requires less <b>searching</b> <b>time</b> while maintaining comparable retrieval effectiveness as non-clustered search. 1 Introduction Searching information by conceptual meanings often suffers from the vocabulary problem [1], which states that users may fail to obtain desired information if the query terms used {{are different from those}} indexed by the retr [...] ...|$|R
2500|$|Finding a {{specific}} element in a linked list, {{even if it}} is sorted, normally requires O(n) time (linear search). [...] This is one of the primary disadvantages of linked lists over other data structures. [...] In addition to the variants discussed above, below are two simple ways to improve <b>search</b> <b>time.</b>|$|E
2500|$|For a Type I {{functional}} response curve, {{the rate}} of prey capture increases linearly with food density. At low prey densities, the <b>search</b> <b>time</b> is long. Since the predator spends most of its time searching, it eats every prey item it finds. [...] As prey density increases, the predator is able to capture the prey faster and faster. [...] At a certain point, {{the rate of}} prey capture is so high, that the predator doesn't have to eat every prey item it encounters. [...] After this point, the predator should only choose the prey items with the highest E/h.|$|E
2500|$|In 1985, two news {{archiving}} {{systems and}} one RFC were posted to the Internet. The first system, called keepnews, by Mark M. Swenson of The University of Arizona, {{was described as}} [...] "a program that attempts to provide a sane way of extracting and keeping information that comes over Usenet." [...] The main advantage of this system was to allow users to mark articles as worthwhile to retain. The second system, YA News Archiver by Chuq Von Rospach, was similar to keepnews, but was [...] "designed to work with much larger archives where the wonderful quadratic <b>search</b> <b>time</b> feature of the Unix ... becomes a real problem." [...] Von Rospach in early 1985 posted a detailed RFC for [...] "archiving and accessing usenet articles with keyword lookup." [...] This RFC described a program that could [...] "generate and ...|$|E
25|$|A {{self-organizing}} list rearranges its nodes {{based on}} some heuristic which reduces <b>search</b> <b>times</b> for data retrieval by keeping commonly accessed nodes {{at the head of}} the list.|$|R
30|$|According to {{experimental}} {{tests in}} Appendix C, proper parameters Qmax= 2000,Imax= 2000 are chosen to offer good tradeoff between sufficiently good EE performance and sufficiently short <b>searching</b> <b>time.</b>|$|R
40|$|In this study, we {{explored}} how stereoscopic depth affects performance and user {{experience in a}} mobile device with an autostereoscopic touch display. Participants conducted a visual search task with an image gallery application on three layouts with different depth ranges. The task completion times were recorded, and {{the participants were asked}} to rate their experiences. The results revealed that the image <b>search</b> <b>times</b> were facilitated by a mild depth effect and that too great a depth slowed <b>search</b> <b>times</b> and decreased user-experience ratings. © 2014 Elsevier B. V. All rights reserved...|$|R
2500|$|The {{profitability}} of a prey item {{is dependent on}} several ecological variables. [...] E {{is the amount of}} energy (calories) that a prey item provides the predator. Handling time (h) is the amount of time it takes the predator to handle the food, beginning from the time the predator finds the prey item to the time the prey item is eaten. [...] The {{profitability of}} a prey item is then defined as E/h. [...] Additionally, <b>search</b> <b>time</b> (S) is the amount of time it takes the predator to find a prey item and is dependent on the abundance of the food and the ease of locating it. [...] In this model, the currency is energy intake per unit time and the constraints include the actual values of E, h, and S, as well as the fact that prey items are encountered sequentially.|$|E
2500|$|The optimal diet model also {{predicts that}} {{different}} types of animals should adopt different diets based on variations in <b>search</b> <b>time.</b> [...] This idea {{is an extension of}} the model of prey choice that was discussed above. [...] The equation, E2/h2 > E1/(h1+S1), can be rearranged to give: S1 > [...] – h1. [...] This rearranged form gives the threshold for how long S1 must be for an animal to choose to eat both prey1 and prey2. Animals that have S1's that reach the threshold are defined as generalists. [...] In nature, generalists include a wide range of prey items in their diet. An example of a generalist is a mouse, which consumes a large variety of seeds, grains, and nuts. In contrast, predators with relatively short S1's are still better off choosing to only eat prey1. These types of animals are defined as specialists and have very exclusive diets in nature. An example of a specialist is the koala, which solely consumes eucalyptus leaves. In general, different animals across the four functional classes of predators exhibit strategies ranging across a continuum between being a generalist and a specialist. Additionally, since the choice to eat prey2 is dependent on the abundance of prey1 (as discussed earlier), if prey1 becomes so scarce that S1 reaches the threshold, then the animal should switch from exclusively eating prey1 to eating both prey1 and prey2. In other words, if the food within a specialist's diet becomes very scarce, a specialist can sometimes switch to being a generalist.|$|E
50|$|Other {{variants}} for insertion {{are also}} possible that have improved <b>search</b> <b>time.</b> Deletion algorithms have been developed that preserve randomness, and thus the average <b>search</b> <b>time</b> analysis still holds after deletions.|$|E
40|$|To {{test the}} effects of a {{vertical}} versus a horizontal arrangement of brief structured text entries on known-item <b>search</b> <b>times,</b> 2 groups of 12 women university graduates with mean ages of 71 years and 33 years respectively took part in an experiment. Subjects were classified as either having or not having library reference experience. They were asked to locate and answer factual questions concerning thesaurus entries arranged in each format. The important data unit for analysis was the difference in time for each subject rather than the actual times. Results indicated that differences in <b>search</b> <b>times</b> were proportionately the same for both age groups. Significantly slower <b>search</b> <b>times</b> occurred under the horizontal arrangement, and no participant judged the horizontal arrangement to be easier to use than the vertical arrangement. Those younger people with reference experience preformed more slowly with horizontal presentation than did those younger people without experience. No effect of age was found upon disorientation caused by unanticipated arrangement of test entries...|$|R
40|$|We {{study the}} hunting process for a target, {{in which the}} hunter tracks the goal by smelling odors it emits. The odor {{intensity}} is supposed to decrease with the distance it diffuses. The Monte Carlo experiment is carried out on a 2 -dimensional square lattice. Having {{no idea of the}} location of the target, the hunter determines its moves only by random attempts in each direction. By sorting the <b>searching</b> <b>time</b> in each simulation and introducing a variable $x$ to reflect the sequence of <b>searching</b> <b>time,</b> we obtain a curve with a wide plateau, indicating a most probable time of successfully finding out the target. The simulations reveal a scaling law for the <b>searching</b> <b>time</b> versus the distance to the position of the target. The scaling exponent depends on the sensitivity of the hunter. Our model may be a prototype in studying such the searching processes as various foods-foraging behavior of the wild animals. Comment: 7 figure...|$|R
40|$|Text {{readability}} {{was measured}} for {{two types of}} transparent text (additive and multiplicative) at two contrast levels (0. 3 and 0. 45) on three background textures (culture, wave, plain), and it was measured for five levels of low text contrast (0. 1, 0. 15, 0. 2, 0. 25, 0. 3) on plain backgrounds. For the transparent text, reading <b>search</b> <b>times</b> were longer for additive transparency, the low contrast, and the culture then the wave and then the plain background. For the low contrast experiment the 0. 1 contrast level led to significantly slower <b>search</b> <b>times</b> when compared to all other contrast levels. When there were background textures a masking index that combined text contrast and background RMS contrast predicted <b>search</b> <b>times</b> much better than either measure alone. When the masking was adjusted to include the text pixels {{as well as the}} background pixels in computations of mean luminance and contrast variability, predictability improved further...|$|R
5000|$|Group data in {{consistently}} meaningful ways {{to decrease}} <b>search</b> <b>time.</b>|$|E
50|$|In {{computer}} science, {{an optimal}} {{binary search tree}} (Optimal BST), sometimes called a weight-balanced binary tree, is a binary search tree which provides the smallest possible <b>search</b> <b>time</b> (or expected <b>search</b> <b>time)</b> for a given sequence of accesses (or access probabilities). Optimal BSTs are generally divided into two types: static and dynamic.|$|E
50|$|Additionally, if {{testing the}} {{mechanism}} {{to open the}} lock does not modify {{the state of the}} lock, multiple combinations can be tried sequentially, drastically reducing the brute force <b>search</b> <b>time.</b> The first two digits are entered normally once, then, starting from the second digit, the dial is rotated sequentially through the digits, testing the lock on each. If it takes three seconds to input the first digit, two seconds for the second digit, and one second for the third digit, then the normal <b>search</b> <b>time</b> for a 60-number dial with three cams would be (3 + 2 + 1) × 60³. The reduced <b>search</b> <b>time</b> would be (3 + 2 + 60) × 60², a reduction of nearly 82% from 360 hours to 65 hours. This strategy can be extended to the second digit as well, slightly reducing the <b>search</b> <b>time</b> further.|$|E
40|$|Suffix array is {{a widely}} used full-text index that allows fast {{searches}} on the text. It is constructed by sorting all suffixes of the text in the lexicographic order and storing pointers to the suffixes in this order. Binary search is used for fast searches on the suffix array. Compact suffix array is a compressed form of the suffix array that still allows binary searches, but the <b>search</b> <b>times</b> are also dependent on the compression. In this paper, we answer some open questions concerning the compact suffix array, and study practical issues, such as the trade off between compression and <b>search</b> <b>times,</b> and show how to reduce the space requirement of the construction. Experimental results are provided in comparison with other search methods. The results show that usually {{the size of a}} compact suffix array is less than twice the size of the text, while the <b>search</b> <b>times</b> are still comparable to those of suffix arrays...|$|R
40|$|AbstractThe {{ability to}} detect an object depends on the {{contrast}} between the object and its background. Despite this, many models of visual search rely solely on the properties of target and distractors, and do not take the background into account. Yet, both target and distractors have their individual contrasts with the background. These contrasts generally differ, because the target and distractors are different in at least one feature. Therefore, background is likely {{to play an important role}} in visual search. In three experiments we manipulated the properties of the background (luminance, orientation and spatial frequency, respectively) while keeping the target and distractors constant. In the first experiment, in which target and distractors had a different luminance, changing the background luminance had an extensive effect on <b>search</b> <b>times.</b> When background luminance was in between that of the target and distractors, <b>search</b> <b>times</b> were always short. Interestingly, when the background was darker than both the target and the distractors, <b>search</b> <b>times</b> were much longer than when the background was lighter. Manipulating orientation and spatial frequency of the background, on the other hand, resulted in <b>search</b> <b>times</b> that were longest for small target–background differences. Thus, background plays an important role in search. This role depends on the individual contrast of both target and distractors with the background and the type of feature contrast (luminance, orientation or spatial frequency) ...|$|R
40|$|Abstract: The {{performance}} of {{four types of}} avalanche rescue beacons was tested during the winter 2001 in Switzerland. During the first field test the <b>search</b> <b>times</b> were compared. The second test focused on range measurements to determine search strip width. Results show that maximal range of different beacons varies between about 25 and 100 m. Differences in <b>search</b> <b>times</b> are as well significant, but relatively small compared with the total time for recovery of a buried victim. A recently proposed method to determine search strip width based on maximum range measurements in coaxial antenna orientation was verified and can be recommended...|$|R
50|$|This may be {{demonstrated}} as follows:Given List: A(0.1), B(0.1), C(0.3), D(0.1), E(0.4)Without rearranging, average <b>search</b> <b>time</b> required is:Now suppose the nodes are rearranged {{so that those}} nodes with highest probability of access are placed closest to the front so that the rearranged list is now:E(0.4), C(0.3), D(0.1), A(0.1), B(0.1)Here, average <b>search</b> <b>time</b> is:Thus the average time required for searching in an organized list is (in this case) around 40% less than {{the time required to}} search a randomly arranged list.|$|E
50|$|Various {{modifications}} {{of the basic}} Monte Carlo tree search method have been proposed to shorten the <b>search</b> <b>time.</b> Some employ domain-specific expert knowledge, others do not.|$|E
50|$|The time {{to search}} with the Recco {{detector}} {{is about the}} same as the <b>search</b> <b>time</b> with a transceiver so large areas can be searched very quickly.|$|E
40|$|Different catches {{per unit}} of effort {{available}} for industrial and artisanal sardinella fisheries of Senegal have been analysed and compared {{in order to determine}} whether they are acceptable indices of abundance. Among the four units of fishing effort studied (total number of sets, number of trips, time spent on fishing ground, <b>searching</b> <b>time),</b> the first and the second seem inadequate in the studied fleets. The two other units, particularly the <b>searching</b> <b>time,</b> allow the calculation of catches {{per unit of}} effort which best reflect variations in abundance, although they are not completely free of usual deficiencies. ...|$|R
5000|$|The authors {{presented}} modified pruning {{rules for}} applications where corner-cutting {{is not allowed}} the following year. [...] This paper also presents an algorithm for pre-processing a grid in order to minimise online <b>search</b> <b>times.</b>|$|R
40|$|An {{eye-tracking}} {{experiment was}} performed to assess the influence of orthographic and semantic distractor words on visual search for words within lists. The target word (e. g., "raven") was either shown to participants before the search (literal search) or defined by its semantic category (e. g., "bird", categorical search). In both cases, the type of words included in the list affected visual <b>search</b> <b>times</b> and eye movement patterns. In the literal condition, the presence of orthographic distractors sharing initial and final letters with the target word strongly increased <b>search</b> <b>times.</b> Indeed, the orthographic distractors attracted participants' gaze and were fixated for longer times than other words in the list. The presence of semantic distractors related to the target word also increased <b>search</b> <b>times,</b> which suggests that significant automatic semantic processing of nontarget words took place. In the categorical condition, semantic distractors were {{expected to have a}} greater impact on the search task. As expected, the presence in the list of semantic associates of the target word led to target selection errors. However, semantic distractors did not significantly increase <b>search</b> <b>times</b> any more, whereas orthographic distractors still did. Hence, the visual characteristics of nontarget words can be strong predictors of the efficiency of visual search even when the exact target word is unknown. The respective impacts of orthographic and semantic distractors depended more on the characteristics of lists than {{on the nature of the}} search task...|$|R
