11|86|Public
5000|$|It {{does not}} protect against future threats. Inputs that are safe at present may obtain a {{dangerous}} interpretation if the underlying language changes. For example, a UNIX command line <b>security</b> <b>filter</b> designed to stop attacks against C shell will be insecure if {{the software is}} moved to an environment using bash.|$|E
50|$|The {{ground floor}} {{features}} a generous entrance lobby, hosting reception and security desk and {{provides access to}} the upper floors via the <b>security</b> <b>filter</b> accessible by electronic card. The vertical access is ensured by ten elevators, out of which five are low-rise (up to the 18th floor) and five are high-rise (up to the 36th floor).|$|E
50|$|There are two {{security}} filters where passengers {{pass from}} the general public areas into the departures area. At these security filters passengers and their hand luggage is scanned to ensure no prohibited items pass. The main <b>security</b> <b>filter</b> is located between Check-in Areas 2 and 3. There is a second filter located in Check-in Area 1 which is intended to serve exclusively passengers of CanaryFly and Binter Canarias.|$|E
50|$|The School {{maintains}} its own servers to deliver authentication, email, database and anti-virus services. Network <b>security</b> <b>filtering</b> {{is used to}} protect students.|$|R
5000|$|It {{found that}} {{numerous}} countries engaged in [...] "substantial politically motivated filtering", including Burma, China, Iran, Syria, Tunisia, and Vietnam. Saudi Arabia, Iran, Tunisia, and Yemen engage in substantial social content filtering, and Burma, China, Iran, Pakistan and South Korea {{have the most}} encompassing national <b>security</b> <b>filtering,</b> targeting the websites related to border disputes, separatists, and extremists.|$|R
5000|$|Visually {{familiar}} to users of Facebook and other popular social networking websites, the service includes attendance records, online gradebook, tests and quizzes, and homework dropboxes. The social media interface facilitates collaboration among a class, a group, or a school. [...] Schoology {{can be integrated}} with existing school reporting and information systems and also provides the added <b>security,</b> <b>filters</b> and support that school districts may require.|$|R
40|$|Because of {{the high}} {{compressibility}} of the medical images, data compression is desirable for digital storage despite the availability of inexpensive hardware for mass storage. A progressive transmission algorithm with automatic security filtering features for on-line medical image distribution using Daubechies' wavelets has been developed and is discussed in this paper. The system is practical for real-world applications, processing and coding each 12 -bit image of size 512 x 512 within 2 seconds on a Pentium Pro. Besides its exceptional speed, the <b>security</b> <b>filter</b> has demonstrated a remarkable accuracy in detecting sensitive textual information within current or digitized previous medical images. The algorithm is of linear run time...|$|E
40|$|Before digital medical {{images in}} {{computer-based}} patient record {{systems can be}} distributed online, {{it is necessary for}} confidentiality reasons to eliminate patient identification information that appears in the images. We present an automatic security filtering algorithm for on-line medical image distribution using Daubechies' wavelets [Dau 92] and Optical Character Recognition (OCR). The system is practical for realworld applications, processing and coding each 12 -bit image of size 512 x 512 within 2 seconds on a Pentium Pro. Besides its exceptional speed, the <b>security</b> <b>filter</b> has demonstrated high accuracy in detecting sensitive textual information within current or digitized previous medical images. The algorithm is of linear run time...|$|E
40|$|The CCSDS Recommendations for Space Link Extension (SLE) {{transfer}} {{services are}} becoming the predominant internationally accepted standard for interoperability between TT&C networks and mission user facilities. With {{increasing use of}} Space Link Extension (SLE) services the need to secure the communication via SLE interfaces increases as well. The SLE Recommendations include some basic precautions supporting simple authentication but for most security aspects rely on the underlying protocol suite or on measures implemented by applications using SLE services. This paper will discuss options to improve security of SLE services within the current standardization scope and will report {{on the design of}} an application layer <b>security</b> <b>filter</b> for SLE services, the SLE Sentry...|$|E
5000|$|The {{interfaces}} for TCP/IP <b>security</b> (<b>filtering</b> {{for local}} host traffic), the firewall hook, the filter hook, and {{the storage of}} packet filter information has been replaced with a new framework known as the Windows Filtering Platform (WFP). WFP provides filtering capability at all layers of the TCP/IP protocol stack. WFP is integrated in the stack, and is easier for developers to build drivers, services, and applications that must filter, analyze, or modify TCP/IP traffic.|$|R
50|$|Netbox Blue Pty Ltd, now Cyberhound Pty Ltd as of November 2015, is an Australian-owned {{provider}} of internet and email <b>security,</b> <b>filtering</b> and management solutions. The company currently has {{a staff of}} 40 and has clients in more than 20 countries around the world. Netbox Blue was founded in Brisbane by John Oxnam, Justin Cooke and Trent Davis in 1999. It is privately held company with its head office in Spring Hill, Queensland, Australia, and branch offices in Sydney, Melbourne, and London.|$|R
50|$|RFC 3463 {{describes}} the codes used {{to indicate the}} bounce reason. Common codes are 5.1.1 (Unknown user), 5.2.2 (Mailbox full) and 5.7.1 (Rejected by <b>security</b> policy/mail <b>filter).</b>|$|R
40|$|International audienceModel driven {{security}} (MDS) is a {{well known}} approach in the access control domain. It proposes a security-by-design approach intended to link the encoded policy to the security policy modeling. However, this technique does not tie in the specificity and heterogeneity of web applications and hence the proposed model-to-code transformation doesn't fit the needs of web architects. Consequently, web applications are mainly hand-coded, or correspond to legacy code developed before the implementation of security mechanisms. Security concerns are mixed with the application code and hence {{it is difficult to}} understand the policy in order to maintain, correct, or evolve it. This work deals with access control mechanisms following the RBAC pattern. Our work proposes a toolset dedicated to modeling and deployment of an acces control engine for a web application assuming that the functional part of the application is developed following a classical process. Our technique tries to reconcile modeling, validation and implementation of role-based security policies, and favours model driven security in the context of web applications. The toolset allows developers to graphically model an MVC web application by making links to its requirements and then generates a <b>security</b> <b>filter</b> from the web application's model. This technique guaranties that the deployed access control policy is conformant to its specification and associated validation activities...|$|E
40|$|Web {{application}} programmers must {{be aware}} {{of a wide range of}} potential security risks. Although the most common pitfalls are well described and categorized in the literature, it remains a challenging task to ensure that all guidelines are followed. For this reason, it is desirable to construct automated tools that can assist the programmers in the application development process by detecting weaknesses. Many vulnerabilities are related to web application code that stores references to application state in the generated HTML documents to work around the statelessness of the HTTP protocol. In this article, we show that such client-state manipulation vulnerabilities are amenable to tool supported detection. We present a static analysis for the widely used frameworks Java Servlets, JSP, and Struts. Given a web application archive as input, the analysis identifies occurrences of client state and infers the information flow between the client state and the shared application state on the server. This makes it possible to check how client-state manipulation performed by malicious users may affect the shared application state and cause leakage or modifications of sensitive information. The warnings produced by the tool help the application programmer identify vulnerabilities before deployment. The inferred information can also be applied to configure a <b>security</b> <b>filter</b> that automatically guards against attacks at runtime. Experiments on a collection of open source web applications indicate that the static analysis is able to effectively help the programme...|$|E
40|$|Abstract—Web {{application}} programmers must {{be aware}} {{of a wide range of}} potential security risks. Although the most common pitfalls are well described and categorized in the literature, it remains a challenging task to ensure that all guidelines are followed. For this reason, it is desirable to construct automated tools that can assist the programmers in the application development process by detecting weaknesses. Many vulnerabilities are related to web application code that stores references to application state in the generated HTML documents to work around the statelessness of the HTTP protocol. In this paper, we show that such client-state manipulation vulnerabilities are amenable to tool supported detection. We present a static analysis for the widely used frameworks Java Servlets, JSP, and Struts. Given a web application archive as input, the analysis identifies occurrences of client state and infers the information flow between the client state and the shared application state on the server. This makes it possible to check how client-state manipulation performed by malicious users may affect the shared application state and cause leakage or modifications of sensitive information. The warnings produced by the tool help the application programmer identify vulnerabilities. Moreover, the inferred information can be applied to configure a <b>security</b> <b>filter</b> that automatically guards against attacks. Experiments on a collection of open source web applications indicate that the static analysis is able to effectively help the programmer prevent client-state manipulation vulnerabilities. Keywords-Web application security; information flow analysis; static analysis I...|$|E
40|$|AbstractAzerity, which {{produces}} software for {{customer relationship management}} and channel automation for manufacturing industries with complex sales processes, as in high technology, has released ProChannel 6. With 29 modules it incorporates {{a number of key}} industry best practices: sales forecasting, advanced multicurrency and advanced <b>security</b> <b>filtering</b> as well as over 300 enhancements to business processes for demand creation, global dynamic pricing, contract compliance and management, commissions management and channel automation. This is a short news story only. Visit www. three-fives. com for the latest advanced semiconductor industry news...|$|R
50|$|The {{terminal}} departures area {{is split}} into four zones (A, B, C and D). Zone A is for flights {{to the other}} Canary Islands, Zones B and C are for European Union and Scandinavian flights and Zone D is for other international flights. The gates in Zone A are at ground floor level to the Northern end of the terminal. Other gates are {{on the first floor}} (the same level as the <b>security</b> <b>filters</b> into departures) those in Zone D featuring additional security to allow for the screening of international passengers.|$|R
50|$|CronLab Limited is {{a privately}} held limited company which {{provides}} information <b>security</b> web <b>filtering</b> software solutions to businesses and consumers {{either directly or}} via integration into third party products.|$|R
40|$|Network {{data access}} {{services}} such as OPeNDAP enable widespread access to data across user communities. However, without ready means to restrict access to data for such services, data providers and data owners are constrained from making their data more widely available. Even with such capability, the range of different security technologies available can make interoperability between services and user client tools a challenge. OPeNDAP is a key data access service in the infrastructure under development to support the CMIP 5 (Couple Model Intercomparison Project Phase 5). The work is being carried out {{as part of an}} international collaboration including the US Earth System Grid and Curator projects and the EU funded IS-ENES and Metafor projects. This infrastructure will bring together Petabytes of climate model data and associated metadata from over twenty modelling centres around the world in a federation with a core archive mirrored at three data centres. A security system is needed to meet the requirements of organisations responsible for model data including the ability to restrict data access to registered users, keep them up to date with changes to data and services, audit access and protect ﬁnite computing resources. Individual organisations have existing tools and {{services such as}} OPeNDAP with which users in the climate research community are already familiar. The security system should overlay access control in a way which maintains the usability and ease of access to these services. The BADC (British Atmospheric Data Centre) has been working in collaboration with the Earth System Grid development team and partner organisations to develop the security architecture. OpenID and MyProxy were selected at an early stage in the ESG project to provide single sign-on capability across the federation of participating organisations. Building on the existing OPeNDAP speciﬁcation an architecture based on pluggable server side compo- nents has been developed at the BADC. These components ﬁlter requests to the service they protect and apply the required authentication and authorisation schemes. Filters have been developed for OpenID and SSL client based authentication. The latter enabling access with MyProxy issued credentials. By preserving a clear separation between the security and application functionality, multiple authentication technologies may be supported without the need for modiﬁcation to the underlying OPeNDAP application. The software has been developed in the Python programming language securing the Python based OPeN- DAP implementation, PyDAP. This utilises the Python WSGI (Web Server Gateway Interface) speciﬁcation to create distinct <b>security</b> <b>ﬁlter</b> components. Work is also currently underway to develop a parallel Java based ﬁlter implementation to secure the THREDDS Data Server. Whilst the ability to apply this ﬂexible approach to the server side security layer is important, the development of compatible client software is vital to the take up of these services across a wide user base. To date PyDAP and wget based clients have been tested and work is planned to integrate the required security interface into the netCDF API. This forms part of ongoing collaboration with the OPeNDAP user and development community to ensure interoperability. ...|$|E
40|$|Yang, ChengmoWhile the ever-growing {{utilization}} of embedded systems facilitates our daily life, {{it also makes}} the threat from cyber-attacks more severe. Embedded systems are widely deployed in critical circumstances, which make them "attractive" cyber-attack targets. Therefore, designing effective countermeasures against these attacks becomes a hot research area. While effectiveness of countermeasures should be considered seriously, the efficiency of security solutions is of equal importance. Compared to general-purpose computer systems, the resource-critical property of embedded systems brings stricter power, energy, and performance constraints. A high-quality security countermeasure should thus maximize the security level while fulfilling those constraints. ☐ This dissertation utilizes a model that integrates “design-for-trust” (DfT) and “runtime monitoring” to develop security countermeasures for embedded systems. Design-for-trust on one hand introduces security constraints, which are followed during the system design and deployment stage. Runtime monitoring, on the other hand, checks system behaviors in real time to identify suspicious behaviors that violate those pre-defined security rules. Collaboration of design-for-trust and runtime monitoring enhances both the effectiveness and the efficiency of security solutions. On one hand, the security rules and constraints provide easy-to-distinguish patterns, enabling accurate identification of malicious behaviors at runtime. On the other hand, monitoring overhead is reduced since only specific behaviors are checked. ☐ In this dissertation, three scenarios will be discussed as examples of integrating design-for-trust and runtime monitoring to defend against software & hardware attacks towards embedded systems. The first topic discusses stack buffer overflow attacks, performed through overwriting the return address of a procedure, which is stored in stack memory, to alter the control flow and hence change the functionality of the program. Goal {{of this study is}} to develop a hardware-based scheme to “filter out” potential stack buffer overflow attacks, through monitoring certain micro-architectural events, such as mis-predictions in the return address stack and misses in the instruction cache. To further reduce the false positive and false negative rates of the <b>security</b> <b>filter,</b> three hardware enhancements to the return address stack, instruction prefetch engine and instruction cache are proposed. ☐ The second topic aims to mute and detect hardware Trojan collusion in a multiprocessor system-on-chip (MPSoC), where hardware Trojans–malicious hardware modifications–in untrusted 3 PIP processors may collude with each other to produce system-wide catastrophe. The goal is to detect and mute any unauthorized malicious communication without thwarting authorized communications. To achieve this, vendor diversity is utilized; the proposed framework integrates processors from various third-party vendors into the MPSoC. Communication channels between different vendors are considered “safe” and used to hold authorized inter-task communications. This way, any unauthorized communication at runtime will either be muted (if on a safe channel) or be detected. A set of heuristics are presented to ensure that the introduced security constraints can be fulfilled with minimum impact on other design goals, such as performance and hardware cost. ☐ The third scenario aims to detect the collusion of hardware Trojans in cyber-physical systems (CPS). CPS are usually composed of multiple untrusted nodes connected wirelessly to a trusted server in a multi-hop manner. Hardware Trojans in the nodes may seek to collude with each other, spreading messages with trigger information in order to simultaneously activate their payloads over the whole network. The proposed countermeasure is a collaboration between network deployment and runtime detection stages. When deploying the network, vendor diversity is enforced: any pair of neighboring nodes must be from different vendors. This requirement precludes collusion between neighboring nodes, allowing them to monitor each other's behavior. At runtime, a mutual auditing protocol is utilized to check each message, ensuring that it has been correctly encrypted by the source node and that its content has not been tampered with by any other node on the routing path. This framework ensures that any message embedded with a Trojan trigger will be muted or will be detected and abandoned, without interfering with benign messages. ☐ Integration of DfT and runtime monitoring not only effectively detects attacks at runtime, but also achieves high efficiency: all the proposed schemes fulfill the security requirements with minimum system resource costs and performance impacts. In sum, by combining design-for-trust and runtime monitoring, high-quality security countermeasures can be provided to defend against both software and hardware attacks to embedded systems. University of Delaware, Department of Electrical and Computer EngineeringPh. D...|$|E
50|$|The Shareaza {{client has}} some basic content filters {{including}} a forced child and optional adult pornography filter, {{and some other}} optional filters such as a filter for files encumbered with Digital rights management (DRM). Shareaza's <b>security</b> <b>filters</b> can also be extended with user-defined keywords and/or IP addresses. Later versions of Shareaza allow {{for the use of}} regular expressions and filtering by hash.These filters increase the chances of getting the files the user wants and decrease the chance of getting malicious or fake files. The file format used for the filters is an extendable XML schema. The filters are editable inside Shareaza, and can be exported from the application to be shared with others.|$|R
5000|$|... eSafe {{a line of}} {{integrated}} network <b>security</b> and content <b>filtering</b> products, protecting networks against cracked and pirated Internet-borne software.|$|R
5000|$|Computer Security: Abuse Service, Content <b>Filtering,</b> <b>Security</b> Advice Vulnerability Test, Server Certificates, Security Advice and Mediation in Resolving Computer Incidents.|$|R
50|$|NetHosting {{took over}} the dedicated, VPS, virtual, and cloud hosting product lines that Fibernet was offering. The ISP {{is one of the}} oldest {{colocation}} facilities in Utah, and offers include application hosting, colocation, managed services, web design, print design, e-commerce, and SEO services. It also offers internet service to business and residential locations, as well as internet <b>security,</b> <b>filtering,</b> and carrier services. NetHosting runs its services out of Fibernet’s on-site data center, completed in 2002. The Fibernet data center is contained in a Class A SMART building that is designed to Zone 4 earthquake specifications. To reduce energy usage, in 2010 Fibernet installed motion-sensor lighting, and more efficient UPS systems. Fibernet also made use of a more efficient cooling system for use within the datacenter during the cooler months of the year.|$|R
50|$|Nominum {{focuses on}} carrier-grade DNS-based {{products}} for telecommunications service providers {{in the areas}} of network infrastructure, network <b>security,</b> subscriber-defined content <b>filtering</b> and subscriber communications.|$|R
50|$|NATCOM {{provides}} managed fibre Internet {{services and}} Internet security products for New Zealand business, {{and is a}} developer and supplier of Wi-Fi, internet <b>security</b> and content <b>filtering</b> services.|$|R
25|$|This {{has been}} criticised as doubly serious as the {{presence}} of a phishing filter may lull users into a false sense of <b>security</b> when the <b>filter</b> can be bypassed.|$|R
40|$|This article {{deals with}} {{modeling}} and analyzing {{the effects of}} dynamic routing protocols in terms of service reachability, configurations, routing and <b>security</b> <b>filters</b> on dynamic networks {{in the event of}} device or link failures. Modeling phase involves modeling of network topology, protocol behaviors, device configurations and filters. For the modeling, graph algorithms, routing redistribution theory, relational algebra and temporal logics are used. For the analysis of reachability, a modified topology table is introduced. This is a unique centralized table for a given network and invariant for network states. For the analysis of configurations, a constraint-based analysis is developed by using XSD Prolog. The behavior of routing, routing filters and redistribution are analyzed by using the routing information bases. For the analysis of filters, a SATbased decision procedure is incorporated. A part of the analysis is integrated to a simulation tool at OMNeT ++ environment. Finally, it can be concluded that this article discusses novel approaches, modeling methods and analysis techniques in the area of dynamic networks...|$|R
50|$|TCP Intercept is {{a traffic}} <b>filtering</b> <b>security</b> feature that protects TCP servers from TCP SYN flood attacks, {{which are a}} type of denial-of-service attack. TCP Intercept is {{available}} for IP traffic only.|$|R
50|$|Polipo is a {{lightweight}} caching and forwarding web proxy server. It {{has a wide}} variety of uses, from aiding <b>security</b> by <b>filtering</b> traffic; to caching web, DNS and other computer network lookups for a group of people sharing network resources; to speeding up a web server by caching repeated requests. It can be configured to use on-disk cache and serve cached content when offline and perform various forms of content filtering.|$|R
40|$|Atomic energy {{developed}} from 1940 {{as a subject}} shrouded in secrecy. Identified successively as a crucial element in military strategy, national status and export aspirations, {{the research and development}} of atomic piles (nuclear chain-reactors) were nurtured at isolated installations. Like monastic orders, new national laboratories managed their specialist workers in occupational environments that were simultaneously cosseted and constrained, defining regional variants of a new state-managed discipline: reactor technology. This paper discusses the significance of security in defining the new subject in the USA, UK and Canada – wartime allies with similar political traditions but distinct trajectories in this field during the Cold War. The intellectual borders and content of the subject developed differently in each country, shaped under the umbrella of secrecy by disparate clusters of expertise, industrial traditions, and national goals. The nascent cadre was contained until the mid 1950 s by classified publications and state-sponsored specialist courses. The early context of high <b>security</b> <b>filtered</b> its members and capped enduringly both their professional aspirations and public engagement...|$|R
5000|$|IP {{fragment}} incomplete datagram: This exploit {{occurs when}} a datagram {{can not be fully}} reassembled due to missing data. This can indicate a denial of service attack or an attempt to defeat packet <b>filter</b> <b>security</b> policies.|$|R
50|$|ZeroTier is an {{open source}} network {{virtualization}} overlay that combines a cryptographically addressed secure peer-to-peer network with an Ethernet virtualization protocol similar in design to VXLAN that supports multicast, braodcast, <b>filtering,</b> <b>security</b> monitoring, and certificate based access control.|$|R
50|$|Squid is a caching and {{forwarding}} HTTP web proxy. It has a {{wide variety}} of uses, including speeding up a web server by caching repeated requests, caching web, DNS and other computer network lookups for a group of people sharing network resources, and aiding <b>security</b> by <b>filtering</b> traffic. Although primarily used for HTTP and FTP, Squid includes limited support for several other protocols including Internet Gopher, SSL, TLS and HTTPS. Squid does not support the SOCKS protocol.|$|R
40|$|Abstract—The Optical Turing Machine (OTM) is an {{approach}} to digital optical processing that supports computation in the same format used for high-speed transmission. This paper identifies the key capabilities required to support native digital optical processing for typical in-network functions including forwarding, <b>security,</b> and <b>filtering.</b> Current analog and binary digital approaches – including optical transistors – are considered and shown insufficient for optical networks. The requirements for a single encoding are presented, as are the capabilities required for network computation...|$|R
40|$|Abstract-E-mail {{has become}} the most {{commonly}} used form of communication for Businesses. But Spam, which is also called “junk e-mail ” or “unsolicited e-mail”, has disturbed the businesses frequently. The spam seems to be a growing problem, and without appropriate counter-measures, spam messages could eventually undermine the usability of e-mail. In this paper, we propose a spam-filtering model in Intranet and describe the design and implementation of a spam filter based on the model. Index Terms—Filter, Intranet, <b>Security,</b> Spam <b>Filter</b> I...|$|R
