229|558|Public
25|$|Enterprise: SQL Server Enterprise Edition {{includes}} both the core database engine and add-on services, {{with a range}} of tools for creating and managing a SQL <b>Server</b> <b>cluster.</b> It can manage databases as large as 524 petabytes and address 12 terabytes of memory and supports 640 logical processors (CPU cores).|$|E
25|$|In March 2006, CCP made a {{deal with}} Optic Communications to start working on {{bringing}} Eve Online to the Chinese gaming audience. Closed alpha testing was held on a small cluster for some time, with about 3,000 players chosen from an initial pool of 50,000. The Chinese open beta test began on June 13, 2006, and proved to be very popular, gaining numbers comparable to Eve Onlines main <b>server</b> <b>cluster.</b> In order to avoid the shock of quickly adding thousands of new players to the current server (Tranquility), CCP Games decided to launch Eve in China on its own server (Serenity). In 2011, CCP allowed its licensing agreement with CDC Games, which had acquired Optic in July 2007, to expire. CCP created a new partnership with TianCity to relaunch Serenity on December 11, 2012.|$|E
5000|$|Multiple global {{variable}} scope: Request, Session, Client, Application, <b>Server,</b> <b>Cluster</b> ...|$|E
50|$|Since Release 5, <b>server</b> <b>clustering</b> has had {{the ability}} to provide {{geographic}} redundancy for servers.|$|R
5000|$|DRBD {{is fully}} {{supported}} to facilitate replication between ESOS storage servers, and/or to create redundant ESOS storage <b>server</b> <b>clusters.</b>|$|R
40|$|Abstract Nowadays {{operating}} systems on single servers have encountered {{a lot of}} trouble; <b>server</b> <b>clusters</b> {{are not able to}} offer different services for different clients. Under this circumstance, we put forward a new idea, that is, different clients are given different priority domains, thus can gain different services. We improve current resource management mechanism, and use it on <b>server</b> nodes in <b>clusters.</b> Experiment results show that the method is effective, and a cluster can provide different services to different clients, therefore the performance of <b>server</b> <b>clusters</b> are improved...|$|R
5000|$|... #Caption: User {{requests}} to the Wikimedia Elasticsearch <b>server</b> <b>cluster</b> are routed via load balancing ...|$|E
5000|$|Depending on application, {{a record}} inside a domain, or {{subdomain}} might {{refer to a}} hostname, or a service provided {{by a number of}} machines in a cluster. Some websites use different subdomains to point to different server clusters. For example, [...] points to <b>Server</b> <b>Cluster</b> 1 or Datacentre 1, and [...] points to <b>Server</b> <b>Cluster</b> 2 or Datacentre 2 etc..|$|E
50|$|One would {{normally}} deploy a load balancer to ensure high availability for a <b>server</b> <b>cluster</b> {{at the system}} level.|$|E
40|$|Abstract. In {{order to}} solve the problem of {{large-scale}} multimedia content delivery, we present Multimedia Content Delivery Network (MM-CDN). For providing multimedia services with high quality in MM-CDN, the traditional request routing approaches in CDN face two key challenges, namely performance and cost. To balance the tradeoff between performance and cost in MM-CDN, we propose an improved request routing approach. First, based on the idea of network coordinates, the computation and transfer costs of different <b>server</b> <b>clusters</b> are computed depending on the network and server status change. Then, all the <b>server</b> <b>clusters</b> are reorganized in the coordinate space. Finally, user requests can be adaptively redirected to the <b>server</b> <b>clusters</b> with minimum cost without sacrificing performance. Computational results show that the effectiveness of our approach with acceptable time performance...|$|R
40|$|More {{and more}} {{companies}} {{have turned to}} the World Wide Web as an alternative way to do business. The function performed by the web server is critical to a company's business. Web <b>server</b> <b>clustering</b> has been accepted as {{a good choice for}} improving server performance. In this project we implemented one prototype of a web <b>server</b> <b>clustering</b> system and measured its performance. One advantage of our prototype over some available commercial products is its wide portability due to its application-layer implementation...|$|R
40|$|The {{development}} of energy-efficient <b>server</b> <b>clusters</b> requires {{the study of}} different request dispatch policies applied by the central access point of the cluster, {{and the application of}} hardware techniques that provide for the best usage of server resources. However, energy efficiency should not be attained at the expense of a poor quality of service. This paper describes a technique that tries to balance energy consumption and adequate application response times in heterogeneous <b>server</b> <b>clusters.</b> This proposal was evaluated through simulation and showed results that outperform state-of-the-art techniques...|$|R
5000|$|Grid hosting: {{this form}} of {{distributed}} hosting is when a <b>server</b> <b>cluster</b> acts like a grid and is composed of multiple nodes.|$|E
50|$|Cephâ€™s {{file system}} (CephFS) runs {{on top of}} the same object storage system that {{provides}} object storage and block device interfaces. The Ceph metadata <b>server</b> <b>cluster</b> provides a service that maps the directories and file names of the file system to objects stored within RADOS clusters. The metadata <b>server</b> <b>cluster</b> can expand or contract, and it can rebalance the file system dynamically to distribute data evenly among cluster hosts. This ensures high performance and prevents heavy loads on specific hosts within the cluster.|$|E
50|$|Riak {{is a key}} value store {{system that}} can collect {{unstructured}} data and store it as objects in buckets that can then be queried. It's also highly scalable, able to distribute itself over a <b>server</b> <b>cluster</b> and add new servers as needed, while maintaining its own high availability. Riak is written in Erlang, a language that gives a system built-in support for distribution across a <b>server</b> <b>cluster,</b> fault tolerance, {{and an ability to}} absorb new hardware being added to the cluster without disrupting operations.|$|E
40|$|The {{exponential}} {{growth of the}} Internet, cou led with the increasing populari of dynamically generated content on the WorlJWide Web, has created the nee 2 for more and faster Web servers capable of serving the over 100 million Internet users. <b>Server</b> <b>clustering</b> {{has emerged as a}} promising technique to build scalable Web servers. In this article we examine the seminal work, early products, and a sample of contemporary commercial offerings in the field of transparent Web <b>server</b> <b>clustering.</b> We broadly classify transparent <b>server</b> <b>clustering</b> into three categories. he {{exponential growth}} of the Internet, coupled with the increasing popularity of dynamically generated content on the World Wide Web, has created the need for more and faster Web servers capable of serving the over 100 million Internet users. The only solution for scaling server capacity in the past has been to completely replace the old server with a new one...|$|R
40|$|An {{increasing}} number of large-scale <b>server</b> <b>clusters</b> are being deployed in data centers for supporting many di erent web-based application services in a seamless fashion. In this scenario, the rising energy costs for keeping up those <b>server</b> <b>clusters</b> is becoming an important concern. In this paper we present an optimization solution for power and performance management in a platform running multiple independent applications. Our approach assumes a virtualized server environment and includes an optimization model and strategy to dynamically control the cluster power consumption, while meeting the application's dynamic workload demands. ...|$|R
40|$|Today's {{lightning}} fast data generation from massive {{sources is}} calling for efficient big data processing, which imposes unprecedented demands on the computing and networking infrastructures. State-of-the-art tools, most notably MapReduce, are generally performed on dedicated <b>server</b> <b>clusters</b> to explore data parallelism. For grass roots users or non-computing professionals, the cost of deploying and maintaining a large-scale dedicated <b>server</b> <b>clusters</b> can be prohibitively high, {{not to mention the}} technical skills involved. On the other hand, public clouds allow general users to rent virtual machines and run their applications in a pay-as-you-go manner with ultra-high scalability with minimal upfront costs. This new computing paradigm has gained tremendous success in recent years, becoming a highly attractive alternative to dedicated <b>server</b> <b>clusters.</b> This article discusses the critical challenges and opportunities when big data meet the public cloud. We identify the key differences between running big data processing in a public cloud and in dedicated <b>server</b> <b>clusters.</b> We then present two important problems for efficient big data processing in the public cloud, resource provisioning (i. e., how to rent VMs) and VM-MapReduce job/task scheduling (i. e., how to run MapReduce after the VMs are constructed). Each of these two questions have a set of problems to solve. We present solution approaches for certain problems, and offer optimized design guidelines for others. Finally, we discuss our implementation experiences. Department of Computin...|$|R
50|$|In 2005, Appro {{expanded}} manufacturing, {{engineering and}} product development teams in South Korea and introduced its first blade cluster, the Appro HyperBlade <b>Server</b> <b>Cluster</b> Solution and the Appro 1142H, the first 1U 4-processor server {{available to the}} HPC market.|$|E
50|$|In {{addition}} to the before mentioned, to configure a terminal <b>server</b> <b>cluster,</b> one needs a load-balancing technology such as Network Load Balancing (NLB) or DNS round robin. A load balancing solution will distribute client connections {{to each of the}} terminal servers.|$|E
50|$|The GO-Global server {{software}} {{is available for}} Microsoft Windows and UNIX/Linux computers. A GO-Global server can be configured as a physically solo server or {{as a member of}} a <b>server</b> <b>cluster.</b> Due to its optimized implementation, GO-Global adds a minimum amount of overhead.|$|E
5000|$|DNS {{management}} {{software is}} computer software that controls Domain Name System (DNS) <b>server</b> <b>clusters.</b> DNS data is typically deployed on multiple physical servers. The main purposes of DNS management software are: ...|$|R
5000|$|The InterWorx {{control panel}} comes {{equipped}} with most standard web hosting control panel features, with additional focus on load balancing and <b>server</b> <b>clustering</b> in a Comparison of web hosting control panels.|$|R
40|$|Abstractâ€”Currently, an {{increasing}} number of large-scale <b>server</b> <b>clusters</b> (data centers) are being designed for supporting many different web-based application services in a seamless, transparent fashion. In this scenario, the rising energy costs for keeping up those <b>server</b> <b>clusters</b> is becoming an important concern. We present in this work a dynamic configuration support for specifying and deploying power management policies in a platform running multiple application services. In particular, it assumes a virtualized server environment and includes mechanisms that allow a designer to control power consumption, while meeting performance requirements, e. g., soft real-time. Keywords-dynamic configuration, power management, virtualization, soft real-time I...|$|R
50|$|In a high-availability <b>server</b> <b>cluster,</b> each {{individual}} server may attain internal component redundancy by having multiple power supplies, hard drives, and other components. System level redundancy {{could be obtained}} by having spare servers waiting {{to take on the}} work of another server if it fails.|$|E
5000|$|Enterprise: SQL Server Enterprise Edition {{includes}} both the core database engine and add-on services, {{with a range}} of tools for creating and managing a SQL <b>Server</b> <b>cluster.</b> It can manage databases as large as 524 petabytes and address 12 terabytes of memory and supports 640 logical processors (CPU cores).|$|E
50|$|A {{server farm}} or <b>server</b> <b>cluster</b> is a {{collection}} of computer servers maintained by an organization to supply server functionality far beyond the capability of a single device. Modern data centers are now often built of very large clusters of much simpler servers, and there is a collaborative effort, Open Compute Project around this concept.|$|E
50|$|In late 2011, the Vertica Analytics Platform Community Edition {{was made}} {{available}} for free with certain limitations, such as a maximum of one terabyte of raw data, three-node (<b>servers)</b> <b>cluster,</b> and community-based support.|$|R
5000|$|Similar {{products}} include Fujitsu PRIMECLUSTER, IBM HACMP, HP ServiceGuard, IBM Tivoli System Automation for Multiplatforms (SA MP), Linux-HA, Microsoft <b>Cluster</b> <b>Server</b> (MSCS), NEC ExpressCluster, Red Hat Cluster Suite, Veritas <b>Cluster</b> <b>Server</b> and Sun <b>Cluster.</b>|$|R
50|$|October 21, 2008 {{the company}} {{released}} a new customized Linux version (ServageOS) {{for use on}} its <b>server</b> <b>clusters.</b> Most notable features is full process separation between customers and other similar security enhancements suitable for hosting environments.|$|R
5000|$|SQL Server mode: State {{variables}} {{are stored in}} a database, allowing session variables to be persisted across ASP.NET process shutdowns. The main advantage of this mode {{is that it allows}} the application to balance load on a <b>server</b> <b>cluster,</b> sharing sessions between servers. This is the slowest method of session state management in ASP.NET.|$|E
50|$|Databases and DBMSs can be {{categorized}} according to the database model(s) that they support (such as relational or XML), the type(s) of computer they run on (from a <b>server</b> <b>cluster</b> to a mobile phone), the query language(s) used to access the database (such as SQL or XQuery), and their internal engineering, which affects performance, scalability, resilience, and security.|$|E
50|$|The {{two-level}} (client and server) {{peer-to-peer network}} architecture offered {{a balance between}} centralized systems like Napster, and decentralized systems like Gnutella. Where Napster ultimately proved to be vulnerable was its centralized <b>server</b> <b>cluster,</b> which was a stable target for legal action. Gnutella's original design, featuring total elimination of the server network in favor of purely peer-to-peer searching, quickly proved to be infeasible due to massive search traffic overhead between peers.|$|E
50|$|The DNS {{root zone}} {{is served by}} {{thirteen}} root <b>server</b> <b>clusters</b> which are authoritative for queries to the top-level domains of the Internet. Thus, every name resolution either starts with a query to a root server, or, uses information that was once obtained from a root server.|$|R
5000|$|In a geoplex, <b>server</b> <b>clusters</b> are {{duplicated}} {{over one}} or more geographically separate sites. Geoplexes can be [...] "active-active" [...] (where all of the clusters are used in tandem) or [...] "active-passive" [...] (where {{one or more}} of the clusters are kept as a hot spare).|$|R
5000|$|In {{addition}} to a web-based user interface, all InterWorx functions can be managed from the command line or API. InterWorx requires a dedicated server or virtual private server. System requirements of InterWorx are minimal, as it may run <b>server</b> <b>clusters</b> on Raspberry Pi devices using the ARM chipset.|$|R
