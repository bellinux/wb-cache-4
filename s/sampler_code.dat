0|1190|Public
25|$|<b>Sample</b> <b>code</b> and Documentation.|$|R
40|$|Syntax.......................... 78 10. 6 <b>Sample</b> <b>Code............................</b> 80 Prev Back Close Next CONTENTS v 11 Higher-Order Functions 81 11. 1 Functions as Values........................ 81 11. 2 Binding and Scope........................ 82 11. 3 Staging............................... 84 11. 4 Patterns of Control........................ 86 11. 5 Staging............................... 88 11. 6 <b>Sample</b> <b>Code............................</b> 91 12 Exceptions 92 12. 1 Signalling Errors......................... 93 12. 2 Exception Handlers........................ 96 12. 3 Value-Carrying Exceptions.................... 99 12. 4 <b>Sample</b> <b>Code............................</b> 101 13 Mutable Storage 102 [...] ...|$|R
25|$|This <b>sample</b> <b>code</b> {{displays}} various JavaScript features.|$|R
40|$|The {{purpose of}} the study is to {{determine}} the ratio of dodol and ice cream on the characteristics of dodol juice. Methods This study consisted of primary research is to determine the ratio of dodol and ice cream on the characteristics of dodol juice. The design of the statistics used in the study is the 1 x 7 factorial experimental design with three replications in order to obtain 21 units of experiments conducted in a randomized block design (RAK), followed by Duncan test. Factor of primary research is a comparison dodol and ice cream <b>sample</b> <b>code</b> 1 (1 : 8), <b>code</b> <b>sample</b> 2 (1 : 9), the <b>sample</b> <b>code</b> 3 (1 : 11), the <b>sample</b> <b>code</b> 4 (1 : 14), the <b>sample</b> <b>code</b> 5 (1 : 18), the <b>sample</b> <b>code</b> 6 (1 : 26), <b>code</b> <b>samples</b> 7 (1 : 44). Parameter observations conducted on the chemical analysis is test carbohydrate, protein test, test and test vitamin C. fat organoleptic analysis covering the color, taste and viscosity. The results showed that based on chemical analysis, showed the highest carbohydrate content in the sample 5 (27. 850), the highest content in the samples 7 (0. 0059). The treatment is selected from the main study treatment with 5 <b>sample</b> <b>code</b> by comparison dodol and ice cream 1 : 18. The results of the chemical analysis of the selected sample has a protein content of 0. 0063...|$|R
30|$|In {{traditional}} {{education for}} programming in the code-reading stage, the teacher explains the functions {{and the behavior}} of the <b>sample</b> <b>code</b> in the textbooks. Learners require a detailed understanding of the <b>sample</b> <b>code</b> because it is typical of each learning target. However, code reading is a difficult learning activity to externalize achievements. Teachers attempt to understand indirectly the learner’s level of understanding by exercises in writing similar code or tracing values of the variables. It is not obvious that the achievements of these exercises reflect appropriately the level of understanding of the <b>sample</b> <b>code.</b>|$|R
40|$|A {{recent study}} [1] {{examined}} {{the use of}} sampled hardware counters to create <b>sampled</b> <b>code</b> signatures. This approach is attractive because <b>sampled</b> <b>code</b> signatures can be quickly gathered for any application. The conclusion of their study was that there exists a fuzzy correlation between <b>sampled</b> <b>code</b> signatures and performance predictability. The paper {{raises the question of}} how much information is lost in the sampling process, and our paper focuses on examining this issue. We first focus on showing that there exists a strong correlation between code signatures and performance. We then examine the relationship between <b>sampled</b> and full <b>code</b> signatures, and how these affect performance predictability. Our results confirm that there is a fuzzy correlation found in recent work for the SPEC programs with <b>sampled</b> <b>code</b> signatures, but that a strong correlation exists with full code signatures. In addition, we propose converting the sampled instruction counts, used in the prior work, into <b>sampled</b> <b>code</b> signatures representing loop and procedure execution frequencies. These sampled loop and procedure code signatures allow phase analysis to more accurately and easily find patterns, and they correlate better with performance. ...|$|R
5000|$|Jungle Disk : Proprietary license {{download}} client <b>sample</b> <b>code.</b>|$|R
5000|$|Builder allows {{creating}} DOM elements dynamically. Using the <b>sample</b> <b>code</b> below: ...|$|R
50|$|The <b>sample</b> <b>code</b> below shows {{explicit}} casting of the integer datatype.|$|R
5000|$|<b>Sample</b> <b>Code</b> to Send Multipart E-Mail, HTML E-Mail and File Attachments ...|$|R
50|$|<b>Sample</b> <b>code</b> {{implementation}} for filters with custom filter {{strategy is}} given below.|$|R
50|$|The {{specification}} and <b>sample</b> <b>code</b> {{have been}} released into the public domain.|$|R
2500|$|HTM {{for stocks}} - example of {{tracking}} anomalies {{in the stock}} market (<b>sample</b> <b>code)</b> ...|$|R
3000|$|We {{use a small}} <b>sample</b> <b>code</b> {{and show}} how a {{concrete}} code transformation changes the code. We use a compact scheme to address elements of the <b>code</b> <b>samples.</b> For example, [...]...|$|R
2500|$|Rogue {{behavior}} detection - {{example of}} finding anomalies in human behavior (white paper and <b>sample</b> <b>code)</b> ...|$|R
30|$|Run the {{simulation}} <b>sample</b> <b>code,</b> show {{the results and}} have a brief discussion on the observations.|$|R
5000|$|Rogue {{behavior}} detection - {{example of}} finding anomalies in human behavior (white paper and <b>sample</b> <b>code)</b> ...|$|R
50|$|Building {{instructions}} (plugs {{and wires}} only) and <b>sample</b> <b>code</b> {{is available at}} the Hitmen 4 player adapter website.|$|R
3000|$|We have {{implemented}} {{a number of}} <b>sample</b> <b>codes</b> for typical complex systems simulations, including iterative maps, cellular automata, dynamical networks and agent-based models. All of those codes were concisely written in plain Python. They are freely available from the project website.b To run those <b>sample</b> <b>codes,</b> the user will need the following software modules, which are also available for free and widely used for scientific computation in academia and industries: [...]...|$|R
2500|$|Geospatial {{tracking}} - {{example of}} finding anomalies in objectives moving through {{space and time}} (white paper and <b>sample</b> <b>code)</b> ...|$|R
50|$|<b>Sample</b> <b>code</b> for calculating CDDB1 disc IDs {{in various}} {{programming}} languages {{is available on}} theweb, such as in Java.|$|R
5000|$|Geospatial {{tracking}} - {{example of}} finding anomalies in objectives moving through {{space and time}} (white paper and <b>sample</b> <b>code)</b> ...|$|R
5000|$|August 26, 2015: AMD {{released}} AMD APP SDK v3.0 {{which contains}} full support of OpenCL 2.0 and <b>sample</b> <b>coding.</b>|$|R
40|$|Syntax.......................... 89 10. 6 <b>Sample</b> <b>Code............................</b> 91 11 Higher-Order Functions 92 11. 1 Functions as Values........................ 92 11. 2 Binding and Scope........................ 93 11. 3 Returning Functions....................... 95 11. 4 Patterns of Control........................ 97 11. 5 Staging............................... 99 11. 6 <b>Sample</b> <b>Code............................</b> 102 12 Exceptions 103 12. 1 Exceptions as Errors....................... 104 12. 1. 1 Primitve Exceptions................... 104 12. 1. 2 User-Defined Exceptions................. 106 12. 2 Exception Handlers........................ 107 12. 3 Value-Carrying Exceptions................... [...] . ...|$|R
50|$|Building {{instructions}} (plugs, {{wires and}} an IC), <b>sample</b> <b>code,</b> shop and list of supported games {{are available at}} the Protovision website.|$|R
50|$|OpenMAX DL is, {{among other}} companies, openmax_armlibraries {{implemented}} by ARM and ANSI C <b>sample</b> <b>code</b> {{can be downloaded}} from their webpage.|$|R
50|$|Today the TWAIN standard, {{including}} the specification, data source manager and <b>sample</b> <b>code,</b> are {{maintained by the}} not-for-profit organization TWAIN Working Group.|$|R
50|$|D4 has a Pascal-like syntax. D4 <b>sample</b> <b>code</b> {{is usually}} written in UpperCamelCase, {{which is also}} widely used in Pascal and Delphi systems.|$|R
50|$|In addition, {{the suite}} {{contains}} <b>sample</b> <b>code</b> for DirectX and OpenGL developers, {{as well as}} tools for debugging, profiling, optimization and Android development.|$|R
5000|$|The {{following}} is a <b>sample</b> <b>code</b> of the Wang-Landau algorithm in Python, where we assume that a symmetric proposal distribution g is used: ...|$|R
50|$|Included {{with the}} SDK are {{detailed}} integration guidelines and documentation, and fully functioning <b>sample</b> <b>code.</b> For simplified access, wrappers are provided for common technologies.|$|R
50|$|PAW {{uses its}} own {{scripting}} language. Here's a <b>sample</b> <b>code</b> (with its actual output), {{which can be}} used to plot data gathered in files.|$|R
30|$|Using the Python {{language}} {{itself as}} a modeling and simulation platform, we have developed “PyCX”, an online repository of simple, crude, easy-to-understand <b>sample</b> <b>codes</b> for various complex systems simulation.b The target audiences of PyCX are researchers and students {{who are interested in}} developing their own complex systems simulation software using a general-purpose programming language but do not have much experience in computer programming. We carefully designed the <b>sample</b> <b>codes</b> so that our audience can understand, modify, create and visualize dynamic complex systems simulations relatively easily.|$|R
5000|$|DevNet <b>sample</b> <b>code</b> {{exists on}} a GitHub repository. This allows {{developers}} to download, branch, {{and contribute to}} code. Source material for the Learning Labs is also available.|$|R
50|$|A <b>sample</b> <b>code</b> for a Professional Services Application (PSA), where a Web-tier client {{needs to}} access a session bean that {{implements}} the session façade pattern, is provided below.|$|R
5000|$|Live Clipboard is {{licensed}} {{under the}} Creative Commons Attribution-ShareAlike License (version 2.5). As of late 2009, the updated specification, Javascript files and <b>sample</b> <b>code</b> {{can be found}} here: ...|$|R
