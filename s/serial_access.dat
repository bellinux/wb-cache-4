31|41|Public
25|$|The {{development}} of high-speed serial data interfaces such as USB made semiconductor memory systems with serially accessed storage viable, and the simultaneous {{development of}} small, high-speed, low-power microprocessor systems allowed {{this to be}} incorporated into extremely compact systems. <b>Serial</b> <b>access</b> requires far fewer electrical connections for the memory chips than does parallel access, which has simplified the manufacture of multi-gigabyte drives.|$|E
2500|$|Serial flash is a small, {{low-power}} {{flash memory}} that provides only <b>serial</b> <b>access</b> {{to the data}} - rather than addressing individual bytes, the user reads or writes large contiguous groups of bytes in the address space serially. Serial Peripheral Interface Bus (SPI) is a typical protocol for accessing the device.|$|E
2500|$|ENIAC inventors John Mauchly and J. Presper Eckert {{proposed}} the EDVAC's construction in August 1944, and design {{work for the}} EDVAC commenced at the University of Pennsylvania's Moore School of Electrical Engineering, before the ENIAC was fully operational. [...] The design implemented {{a number of important}} architectural and logical improvements conceived during the ENIAC's construction, and a high speed <b>serial</b> <b>access</b> memory. However, Eckert and Mauchly left the project and its construction floundered.|$|E
40|$|This work studies a memory-side {{prefetching}} {{technique to}} hide latency incurred by inherently <b>serial</b> <b>accesses</b> to linked data structures (LDS). A programmable prefetch engine sits close to memory and traverses LDS independently from the processor. The prefetch engine can run {{ahead of the}} processor because of its low latency, high bandwidth path to memory. This allows the prefetch engine to initiate data transfers earlier than the processor and pipeline multiple such transfers over the network...|$|R
50|$|At {{the same}} time that DECnet Phase IV was {{released}}, the company also released a proprietary protocol called LAT for <b>serial</b> terminal <b>access</b> via Terminal servers. LAT shared the OSI physical and datalink layers with DECnet and LAT terminal servers used MOP for the server image download and related bootstrap processing.|$|R
50|$|The Land of Sunshine, v.13, 1900, p. 336 has a {{very nice}} picture of her. The <b>serial</b> can be <b>accessed</b> through Hathi Trust.|$|R
5000|$|Controller port {{interface}} circuits, including <b>serial</b> <b>access</b> to controller data ...|$|E
5000|$|Random {{access to}} video {{chapters}} without rewinding or fast-forwarding (<b>serial</b> <b>access)</b> ...|$|E
50|$|The {{album was}} {{released}} in three editions. The normal edition (2CD) comes with a <b>serial</b> <b>access</b> code to view rehearsal footage from Big Bang's 2013-2014 Japan concert tour. First press limited edition includes 2ALBUM+DVD with a photobook, a sports towel, the bonus DVD containing eleven music videos {{and the making of}} the Who You? music video with a <b>serial</b> <b>access</b> code to view rehearsal footage from Big Bang's 2013-2014 Japan concert tour. Lastly, Playbutton edition which features only the Coup D'Etat album on a playbutton MP3 player. It includes Anna Yatsu (the Japanese cover of That XX) as bonus track.|$|E
50|$|The {{protocol}} supports rich {{remote display}} and input services {{with a number}} of display options to deliver the presentation of the remote applications onto the local display alongside local applications using seamless windows, or self-contained remote environments delivered full-screen or in a standalone window. The protocol also supports audio, printing, and other device mapping services including drive mapping, <b>serial</b> port <b>access,</b> and clipboard mapping.|$|R
50|$|ThinLinc uses SSH for {{transport}} encryption and authentication, and VNC for graphics, keyboard and mouse. Access to client devices is provided through different open protocols such as PulseAudio for sound (playback and recording), NFS for file system access (using a user space NFS server), and Telnet/RFC2217 for <b>serial</b> port <b>access.</b> Access to a client-side Smart Cards is provided via the PC/SC interface using a proprietary protocol.|$|R
50|$|Being a <b>serial</b> machine, <b>access</b> time to {{a single}} {{register}} was 32 microseconds, a double register 64 microseconds, and a quadruple register 128 microseconds. That for a delay line was 1024 microseconds. Instruction times were: addition, subtraction, logical operations: 64 microseconds for 32-bit words; double precision 96 microseconds; multiplication and division 2 milliseconds. For array arithmetic andtransfer operations, time per word was 33 microseconds per word for 32 words.|$|R
50|$|A {{terminal}} emulator {{is a piece}} of software that emulates a text terminal. In the past, before the widespread use of local area networking and broadband internet access, many computers would use a <b>serial</b> <b>access</b> program to communicate with other computers via telephone line or serial device.|$|E
50|$|The {{development}} of high-speed serial data interfaces such as USB made semiconductor memory systems with serially accessed storage viable, and the simultaneous {{development of}} small, high-speed, low-power microprocessor systems allowed {{this to be}} incorporated into extremely compact systems. <b>Serial</b> <b>access</b> requires far fewer electrical connections for the memory chips than does parallel access, which has simplified the manufacture of multi-gigabyte drives.|$|E
50|$|The {{computer}} {{used was}} MARCO 4418 (MARCO stands for Man Rated Computer) whose dimensions were 5 by 8 by 23.75 inches (12.7 by 20.3 by 60.33 centimeters); it weighed 32.7 pounds (14.83 kg) and required 90 watts of power. Because the memory had a <b>serial</b> <b>access</b> it was slower than AGC, although some operations on AEA were performed as fast or faster than on AGC.|$|E
5000|$|In {{embedded}} processors, many [...] "in circuit debuggers" [...] {{with software}} only mode use resident monitor concepts and functions which are frequently accessed by a GUI IDE. They are not {{different from the}} traditionally <b>serial</b> line <b>accessed</b> resident monitor command lines, but users {{are not aware of}} this. At the latest, developers and advanced users will discover these low level embedded resident monitor functions when writing low level API code on a host to communicate with an embedded target for debugging and code test case running.|$|R
40|$|Recent {{advances}} in integrating logic and DRAM {{on the same}} chip potentially open up new avenues for addressing the long-standing problem of tolerating memory latency. This thesis exploits merged DRAM-logic technology to hide latency incurred by inherently <b>serial</b> <b>accesses</b> to linked data struc-tures (LDS). We propose a programmable prefetch engine that sits close to memory and traverses LDS independently from the processor. The prefetch engine can run ahead of the processor because of its low latency, high bandwidth path to memory. This allows the prefetch engine to initiate data transfers much earlier than the processor and pipeline multiple such transfers over the network. We evaluate the proposed memory-side prefetching scheme for the pointer-intensive Olden bench-mark suite, comparing both to a system without any prefetching and to a system with a state-of-the-art processor-side software prefetching scheme for LDS. For the six benchmarks where LDS memory stall time is signicant, the proposed memory-side scheme reduces execution time {{by an average of}} 27 % (range of 0 % to 62 %) compared to a system without any prefetching. Compared to processor-side prefetching, the memory-side scheme reduces execution time in the range of 20 % to 50 % for three of the six applications, is about the same for two applications, and is worse by 18...|$|R
50|$|The {{limited edition}} of the CD {{includes}} an access card to download a character costume for the PlayStation 3 game Tales of Xillia. Also, first pressings of the CD+DVD edition included a <b>serial</b> number to <b>access</b> a special website broadcasting making-of material of Ayumi Hamasaki Countdown Live 2010-2011 A: Do It Again.|$|R
50|$|ENIAC inventors John Mauchly and J. Presper Eckert {{proposed}} the EDVAC's construction in August 1944, and design {{work for the}} EDVAC commenced at the University of Pennsylvania's Moore School of Electrical Engineering, before the ENIAC was fully operational. The design implemented {{a number of important}} architectural and logical improvements conceived during the ENIAC's construction, and a high speed <b>serial</b> <b>access</b> memory. However, Eckert and Mauchly left the project and its construction floundered.|$|E
50|$|Unlike {{analogue}} {{video streams}} {{in which only}} <b>serial</b> <b>access</b> is possible, digital video allows for random access to the media, which raises the possibility of alternative fast forwarding algorithms and visualizations. In video streaming formats, such as H.264, fast forward algorithms use the I-frames to sample the video at faster than normal speed. In streaming videos, fast-forward represents a useful search or browsing mechanism, but introduces extra network overhead when non-I-frames are transmitted {{in addition to the}} viewed I-frames and extra computational complexity in the video transcoder. Finding more network bandwidth-conserving and computationally efficient algorithms for accommodating both fast-forward and normal speed viewing is an active area of research.|$|E
40|$|P. A. Starreveld and W. La Heij (1995) {{tested the}} seriality view of lexical access in speech production, {{according}} to which lexical selection and the encoding of a word's form proceed in serial order without feedback. In 2 experiments, {{they looked at the}} combined effect of semantic and orthographic relatedness of written distracter words in tasks that required conceptually driven naming. They found an interaction between semantic relatedness and orthographic relatedness and argued that the observed interaction refutes the seriality view of lexical access. In this comment, the authors argue that Starreveld and La Heij's rejection of <b>serial</b> <b>access</b> was based on an oversimplified conception of the seriality view and that interaction, rather than additivity, is predicted by existing conceptions of <b>serial</b> <b>access...</b>|$|E
40|$|Abstract: - The {{contribution}} {{of this paper}} relates {{to the ability of}} bitmap indices to support OLAP-oriented queries and analyses. On one hand, the Bitmap index access method improves the <b>serial</b> data <b>access</b> performance. On the other hand, the Bitmap index semantics and use allow one to include the definition and management of complex classes dynamically investigated for analytic purposes. In this novel approach, bitmaps are defined at a higher abstraction level than the traditional indices and bitmaps. In fact, they allow the analytic or decisional user to also categorize objects which satisfy any legal relational query...|$|R
50|$|Developed {{in part as}} a {{response}} to the <b>serials</b> crisis, open <b>access</b> models have included new models of financing scholarly journals that may serve to reduce the monopoly power of scholarly journal publishers which is considered a contributing factor to the creation of the serials crisis. These include open access journals and open access repositories.|$|R
50|$|Some PC BIOSes, {{especially}} in servers, also support <b>serial</b> consoles, giving <b>access</b> to the BIOS through a serial port {{so that the}} simpler and cheaper serial console infrastructure can be used. Even where BIOS support is lacking, some operating systems, e.g. FreeBSD and Linux, can be configured for serial console operation either during bootup, or after startup.|$|R
40|$|This {{thesis is}} focused on solving the problem of {{traveling}} salesman. At first, the problem is solved by <b>serial</b> <b>access</b> at four algorithms. There are two of them chosen and transferred to parallel access. In the end there are summarized observations about different parameters of both access. This thesis also introduces questions of programming parallel applications with threads to the reader...|$|E
40|$|The {{focus of}} this work lies on two {{problems}} emerging in systems allowing concurrent access of multiple users to shared data. Small amounts of data have to be locked to ensure <b>serial</b> <b>access,</b> synchronization of bigger volumes requires a versioning mechanism. Firstly, a way of implementing shared data locking using the means of RDBMS is proposed. Secondly, a synchronization mechanism is demonstrated, which allows a part of data to be managed "off-line" and seamlessly synchronized back to the database. An implementation of both algorithms is demonstrated on a multi-tier budgeting application...|$|E
40|$|Choices in {{persistent}} {{data models}} and data organization have significant performance ramifications for data-intensive scientific computing. In experimental high energy physics, organizing file-based event data for efficient per-attribute retrieval may improve the I/O performance of some physics analyses but hamper {{the performance of}} processing that requires full-event access. In-file data organization tuned for <b>serial</b> <b>access</b> by a single process may be less suitable for opportunistic sub-file-based processing on distributed computing resources. Unique I/O characteristics of high-performance computing platforms pose additional challenges. The ATLAS experiment at the Large Hadron Collider employs a flexible I/O framework and a suite of tools and techniques for persistent data organization to support an increasingly heterogeneous array of data access and processing models...|$|E
40|$|This work studies a memory-side {{prefetching}} {{technique to}} hide latency incurred by inherently <b>serial</b> <b>accesses</b> to linked data structures (LDS). A programmable prefetch engine sits close to memory and traverses LDS independently from the processor. The prefetch engine can run {{ahead of the}} processor because of its low latency, high bandwidth path to memory. This allows the prefetch engine to initiate data transfers earlier than the processor and pipeline multiple such transfers over the network. We evaluate the proposed memory-side prefetching scheme for the pointer-intensive Olden benchmark suite, comparing both to a system without any prefetching and one with a state-of-the-art processor-side software prefetching scheme for LDS. For the six benchmarks where LDS memory stall time is significant, the memory-side scheme reduces execution time {{by an average of}} 27 % (range of 0 % to 62 %) compared to a system without any prefetching. Compared to processor-side prefetching, the memory-side scheme reduces execution time in the range of 20 % to 50 % for three of the six applications, is about the same for two applications, and is worse by 18 % for one application. We conclude that memory-side prefetching is effective, but a combination of processor- and memory-side prefetching is best and provide a qualitative framework to determine when either scheme should be used. Our results differ from a previous memory-side prefetching study in significant ways, primarily because we perform our comparisons with a state-of-the-art processor-side scheme. ...|$|R
50|$|VAXclustering {{was greatly}} {{aided by the}} {{introduction}} of terminal servers using the LAT protocol. By allowing ordinary <b>serial</b> terminals to <b>access</b> the host nodes via Ethernet, it became possible for any terminal to rapidly and easily connect to any host node. This made it much simpler to accomplish fail over of the user terminals from one node of the cluster to another.|$|R
40|$|Purpose - The {{purpose of}} this paper is to address the {{integration}} of SFX link resolver with Evergreen open source integrated library system (ILS). It also aims to describe a method to incorporate print serials into SFX. Design/methodology/approach - A print serials project has been proposed and implemented to integrate print and electronic serials at University of Windsor Leddy Library. It contains two sub-projects: to incorporate all forms of serials in SFX; and to integrate SFX with the Evergreen library catalogue for <b>serials</b> <b>access.</b> Various issues associated with print serials and open source software were also investigated. Findings - A unified view of print and electronic serials is desired and well received by librarians and patrons. There is no technical difficulty uploading print serials data into SFX, but the process can be time-consuming and challenging. Open source software is flexible in terms of customization and interoperability with other library systems though it presents challenges to system staff. Originality/value - This paper has the following contributions: it is the first work on the integration of Evergreen open source ILS and the proprietary link resolver, SFX, in the literature. The issues encountered and their solutions presented in this paper may be applicable to the integration of open source ILSs, such as Evergreen and Koha, with link resolvers or other library systems; and the method described in this paper to facilitate users in accessing all forms of serials may be useful for other institutions having SFX or other link resolver systems...|$|R
40|$|P. A. Starreveld and W. La Heij (1995) {{tested the}} seriality view of lexical access in speech production, {{according}} to which lexical selection and the encoding of a word's form proceed in serial order without feedback. In 2 experiments, {{they looked at the}} combined effect of semantic and orthographic relatedness of written distractor words in tasks that required conceptually driven naming. They found an interaction between semantic relatedness and orthographic relatedness and argued that the observed interaction refutes the seriality view of lexical access. In this comment, he authors argue that Starreveld and La Heij's rejection of <b>serial</b> <b>access</b> was based on an oversimplified conception of the seriality view and that interaction, rather than additivity, is predicted by existing conceptions of <b>serial</b> <b>access.</b> In two experiments, a picture naming and a definition naming experiment, Starreveld and La Heij (1995) observed an interaction between semantic and orthographic relatedness of written distractor words. They concluded that these findings refute a model of lexical access in speech production in which lexical selection (hereafter referred to as lemma retrieval) and word-form encoding (hereafter eferred to as phonological encoding) occur in serial order without feedback (e. g., Levelt et al., 1991 a, 1991 b; Schriefers, Meyer, & Levelt, 1990). According to Starreveld and La Heij, the seriality view "pre-dicts additive effects of semantic similarity and orthographic similarity. The present study showed this prediction to be incorrect " (Starreveld & La Heij, 1995, p. 694). In this comment, we argue that their rejection was based on a wrong conception of the seriality view, and that the observed interac-tion can readily be obtained within a serial model of lexical access...|$|E
40|$|Abstract—A single-chip {{rendering}} engine {{that consists of}} a DRAM frame buffer, a SRAM <b>serial</b> <b>access</b> memory, pixel/edge processor array and 32 -b RISC core is proposed for low-power three-dimensional (3 -D) graphics in portable systems. The main features are two-dimensional (2 -D) hierarchical octet tree (HOT) array structure with bandwidth amplification, three dedicated network schemes, virtual page mapping, memory-coupled logic pipeline, low-power operation, 7. 1 -GB/s memory bandwidth, and 11. 1 -Mpolygon/s drawing speed. The 56 -mm 2 prototype die integrating one edge processor, eight pixel processors, eight frame buffers, and a RISC core are fabricated using 0. 35 - m CMOS embedded memory logic (EML) technology with four poly layers and three metal layers. The fabricated test chip, 590 mW at 100 -MHz 3. 3 -V operation, is demonstrated with a host PC through a PCI bridge. Index Terms—Embedded memory, embedded logic, 3 -D graphic rendering. I...|$|E
40|$|Processing {{information}} in working memory requires selective {{access to a}} subset of working-memory contents by a focus of attention. Complex cognition often requires joint access to 2 items in working memory. How does the focus select 2 items? Two experiments with an arithmetic task and 1 with a spatial task investigate time demands for successive operations that involve 2 digits or 2 spatial positions, respectively. When both items used in an operation {{have been used in}} the preceding operation, latencies are shortened. No such repetition benefit (arithmetic) or a much smaller benefit (spatial) was found when only 1 item was repeated. The results rule out <b>serial</b> <b>access</b> to the 2 items, parallel access by expanding the focus, and parallel access by splitting the focus. They support the notion that 2 items are accessed by chunking them, so that they fit a focus limited to 1 chunk. (PsycINFO Database Record (c) 2009 APA, all rights reserved...|$|E
50|$|The Collection stands around 280,000 volumes, 400 <b>serial</b> titles, has <b>access</b> through UBorrow to lend and {{borrow from}} all the {{institutions}} in the State University System and Illiad which allows borrowing and lending from institutions world-wide. USF is able to contribute, in addition to books of their own in the library's stacks, access to hundreds of Ebooks and databases ranging from dissertations to news articles and full-text academic journals.|$|R
50|$|DOSBox, {{unlike many}} other emulators, can {{simulate}} peer-to-peer or Internet/Intranet networking. This includes modem simulation over TCP/IP, allowing for DOS modem games to be played over modern LANs or the Internet, and IPX network tunneling, which allows for old IPX DOS multiplayer games to be played as UDP/IP over modern LANs or the Internet. Win32 and Linux specific builds support direct <b>serial</b> port <b>access.</b> Some third-party patches also allow DOSBox to emulate an NE2000-class network interface card as a passthrough to the host computer's own network card, essentially allowing full internet connectivity (for example, using Windows 3.1 and Trumpet Winsock) and web browsing using programs such as Netscape Navigator, although this {{is more of a}} curiosity than a useful feature.|$|R
40|$|Abstract:-In {{this paper}} we have {{proposed}} a new solution for sorting algorithms. In {{the beginning of the}} sorting algorithm for <b>serial</b> computers (Random <b>access</b> machines, or RAM’S) that allow only one operation to be executed at a time. We have investigated sorting algorithm based on a comparison network model of computation, in which many comparison operation can be performed simultaneously. Index Terms Sorting algorithms, comparison network, sorting network, the zero one principle, bitonic sorting networ...|$|R
