758|3634|Public
25|$|Many {{mechanical}} engineering companies, {{especially those in}} industrialized nations, have begun to incorporate computer-aided engineering (CAE) programs into their existing design and analysis processes, including 2D and 3D <b>solid</b> <b>modeling</b> computer-aided design (CAD). This method has many benefits, including easier and more exhaustive visualization of products, {{the ability to create}} virtual assemblies of parts, and the ease of use in designing mating interfaces and tolerances.|$|E
25|$|<b>Solid</b> <b>modeling</b> {{systems for}} {{computer}} aided design {{offer a variety of}} methods for building objects from other objects, combination by Boolean operations being one of them. In this method the space in which objects exist is understood as a set S of voxels (the three-dimensional analogue of pixels in two-dimensional graphics) and shapes are defined as subsets of S, allowing objects to be combined as sets via union, intersection, etc. One obvious use is in building a complex shape from simple shapes simply as the union of the latter. Another use is in sculpting understood as removal of material: any grinding, milling, routing, or drilling operation that can be performed with physical machinery on physical materials can be simulated on the computer with the Boolean operation x∧¬y or x−y, which in set theory is set difference, remove the elements of y from those of x. Thus given two shapes one to be machined and the other the material to be removed, the result of machining the former to remove the latter is described simply as their set difference.|$|E
2500|$|The first {{implementation}} of a [...] "real-time" [...] ray-tracer was credited at the 2005 SIGGRAPH computer graphics conference as the REMRT/RT tools developed in 1986 by Mike Muuss for the BRL-CAD <b>solid</b> <b>modeling</b> system. [...] Initially published in 1987 at USENIX, the BRL-CAD ray-tracer is the first known {{implementation of}} a parallel network distributed ray-tracing system that achieved several frames per second in rendering performance. [...] This performance was attained {{by means of the}} highly optimized yet platform independent LIBRT ray-tracing engine in BRL-CAD and by using solid implicit CSG geometry on several shared memory parallel machines over a commodity network. [...] BRL-CAD's ray-tracer, including REMRT/RT tools, continue to be available and developed today as Open source software.|$|E
40|$|AbstractHigh quality hex mesh can be {{effectively}} generated {{based on the}} block structure of a <b>solid</b> <b>model,</b> but the existing approaches to block decomposition of the <b>solid</b> <b>model</b> are still far from the expectation. In this paper, we propose a new method of decomposing the <b>solid</b> <b>model</b> into the block structure based on sheet operations, which can guarantee {{the validity of the}} resultant block structure. The method firstly generates an initial hex mesh of the given <b>solid</b> <b>model</b> based on its tet mesh. Then, it inserts a number of global sheets on the boundary and inside the volume respectively by sheet inflation to make the hex mesh capture the geometry of the <b>solid</b> <b>model.</b> Finally our method determines the optimal sheet set that can be extracted based on quality prediction and extracts the sheet set as a whole to get the reasonable and valid block structure of the <b>solid</b> <b>model.</b> Experimental results show the effectiveness of the proposed method...|$|R
40|$|This paper {{describes}} {{the results of}} basic studies on procedures for creating <b>solid</b> <b>models</b> of component geometry from two-dimensional orthographic projections. An interactive graphic program was developed to allow the input of three orthographic views of a component geometry by digitizing from a drawing. The views may contain straight lines and circular arcs, solid or dashed. No restrictions are placed on the order or direction of lines and arcs in any view. Using {{an extension of the}} Wesley-Markowski procedure, the program constructs a three-dimensional <b>solid</b> <b>model</b> of the object. When the projections are ambiguous, multiple <b>solid</b> <b>models</b> are produced. The <b>solid</b> <b>model</b> may contain planar, cylindrical, conical, spherical and toroidal surfaces. Topological information of the <b>solid</b> <b>model</b> is sotred in a winged edge sturcture. Geometric information is stored as vertex coordinates and surface equations. ...|$|R
40|$|Computer-Aided Design (CAD) {{data and}} <b>Solid</b> <b>Models</b> are {{important}} tools {{in almost all}} the engineering disciplines, with an estimated 30 billion CAD models in the world; however, there are few good methods to manage the growing set of models. CAD data, and the consumers of CAD data, have different requirements from traditional database media such as images, sounds, and videos. <b>Solid</b> <b>models</b> are large, contain components from multiple disciplines (mechanical, electrical, etc), and have no accepted set of readily computable features {{that can be used}} for similarity comparisons. These factors make the efficient storage and retrieval of <b>solid</b> <b>models</b> a non-trivial task. This paper presents our approach for clustering large datasets of <b>solid</b> <b>model</b> designs with the intention of using our findings as a basis for a CAD and <b>Solid</b> <b>Model</b> database. We create a mapping of a <b>solid</b> <b>model's</b> boundary representation (B-Rep) and engineering attributes into Model Signature Graphs (MSG). From the MSGs, we create an Invariant Topology Vector (ITV) which captures shape and engineering properties of the CAD models in a vector of fixed size. We use a simple -clustering algorithm to group the models and provide some of our empirical results to illustrate and qualitatively assess our approach. We test our techniques against <b>solid</b> <b>models</b> in the National Design Repository; a large, publicly available resource which contains over 55, 000 <b>solid</b> <b>models</b> from many different engineering disciplines and can be found at [URL]...|$|R
2500|$|The first {{ray tracing}} {{algorithm}} used for rendering was presented by Arthur Appel in 1968. This algorithm {{has since been}} termed [...] "ray casting". The idea behind ray casting is to shoot rays from the eye, one per pixel, and find the closest object blocking the path of that ray. Think of an image as a screen-door, with each square in the screen being a pixel. [...] This is then the object the eye sees through that pixel. [...] Using the material properties {{and the effect of}} the lights in the scene, this algorithm can determine the shading of this object. [...] The simplifying assumption is made that if a surface faces a light, the light will reach that surface and not be blocked or in shadow. [...] The shading of the surface is computed using traditional 3D computer graphics shading models. [...] One important advantage ray casting offered over older scanline algorithms was its ability to easily deal with non-planar surfaces and solids, such as cones and spheres. If a mathematical surface can be intersected by a ray, it can be rendered using ray casting. Elaborate objects can be created by using <b>solid</b> <b>modeling</b> techniques and easily rendered.|$|E
50|$|<b>Solid</b> <b>modeling</b> (or modelling) is a {{consistent}} {{set of principles}} for mathematical and computer modeling of three-dimensional solids. <b>Solid</b> <b>modeling</b> is distinguished from related areas of geometric modeling and computer graphics by its emphasis on physical fidelity. Together, the principles of geometric and <b>solid</b> <b>modeling</b> form the foundation of computer-aided design and in general support the creation, exchange, visualization, animation, interrogation, and annotation of digital models of physical objects.|$|E
50|$|<b>Solid</b> <b>Modeling</b> Solutions is {{a company}} who has an {{implementation}} of a mathematical representation of NURBS (Non-uniform rational B-spline), 3D geometry, and <b>Solid</b> <b>modeling</b> technology which emerged in the 1980s and 1990s into a commercial implementation known as SMLib (for <b>solid</b> <b>modeling</b> library). This article will provide the background and history of this implementation into a commercial product line from <b>Solid</b> <b>Modeling</b> Solutions™ (SMS). SMS is an independent supplier of source code for a powerful suite of 3D geometry kernels. SMS provides advanced NURBS-based geometry libraries, SMLib™, TSNLib™, GSNLib™, NLib™, SDLib™, VSLib™, and PolyMLib™, that encompass extensive definition and manipulation of NURBS curves and surfaces with the latest fully functional non-manifold topology.|$|E
40|$|A point-based {{two-stage}} hierarchical {{method for}} automatic {{finite element mesh}} generation from a <b>solid</b> <b>model</b> is presented. Given the <b>solid</b> <b>model</b> of a component and the required nodal density distribution, nodes are generated according to the hierarchy - vertex, edge, face and solid. At the vertices, nodes are established naturally. Nodes on the edges, faces and inside the <b>solid</b> <b>model</b> are generated by recursive subdivision. The nodes are then connected to form a valid and well-conditioned finite element mesh of tetrahedron elements using modified Delaunay Triangulation. Checks are conducted to ensure the compatibility of geometry and topology between the <b>solid</b> <b>model</b> and the mesh. link_to_subscribed_fulltex...|$|R
40|$|Designers need to {{transfer}} three-dimensional objects from their minds via a two-dimensional interface into a <b>solid</b> <b>modelling</b> system. We propose {{a system where}} objects are sketched interactively in two-dimensions and incrementally line-labelled as the drawing progresses, as the preliminary stage in constructing a <b>solid</b> <b>model.</b> Once the sketch is complete, the line-labels are coupled with various inferred constraints to enable us to generate a <b>solid</b> <b>model.</b> In this paper we describe and evaluate a modification to existing line labelling methods {{to allow them to}} work incrementally. In this way, the labelling and region information can be built up as the user sketches, rather than all at once {{at the end of the}} sketching process, which reduces the delay before the final <b>solid</b> <b>model</b> is built...|$|R
40|$|In {{this paper}} a method is {{presented}} to generate uniform hexahedral meshes automatically. In this method, a <b>solid</b> <b>model</b> with complex geometry is decomposed into swept volumes with simpler geometry. A sweepable face on the <b>solid</b> <b>model</b> is selected as the generator face to generate a swept volume. Each generator face is specified with node density and a quadrilateral mesh is generated from it. Then, the mesh is swept into a hexahedral mesh of the swept volume. Finally, all hexahedral meshes of swept volumes are recomposed into a hexahedral mesh of the original <b>solid</b> <b>model...</b>|$|R
50|$|SpaceClaim Corporation {{was founded}} in 2005 to develop 3D <b>solid</b> <b>modeling</b> {{software}} for mechanical engineering. Its first CAD application was launched in 2007 and used an approach to <b>solid</b> <b>modeling</b> where design concepts are created by pulling, moving, filling, combining, and reusing 3D shapes.|$|E
5000|$|Parametric <b>solid</b> <b>modeling</b> (feature-based {{and direct}} modeling) ...|$|E
50|$|Solid Edge is a 3D CAD, {{parametric}} feature (history based) and synchronous technology <b>solid</b> <b>modeling</b> software. It runs on Microsoft Windows {{and provides}} <b>solid</b> <b>modeling,</b> assembly modelling and 2D orthographic view functionality for mechanical designers. Through third party applications it has links {{to many other}} Product Lifecycle Management (PLM) technologies.|$|E
40|$|Abstract: This paper {{presents}} an algorithm, {{which is a}} hybrid-computing algorithm in representing <b>solid</b> <b>model.</b> The proposed algorithm contains two steps namely reconstruction and representation. In the reconstruction step, neural network with back propagation {{has been applied to}} derive the depth values of <b>solid</b> <b>model</b> that was represented by the given two-Dimensional (2 D) line drawing. And then in the representation step, once the depth value was derived, the mathematical modeling was used to generate the mathematical models to represent the reconstructed <b>solid</b> <b>model.</b> The algorithm has been tested on a cube. Totally, there are eighty-three cubes has been used on the development of neural network model and six mathematical equations yielded to represent each one cube. The proposed algorithm successfully takes the advantages of neural network and mathematical <b>modeling</b> in representing <b>solid</b> <b>model.</b> Comparison analysis conducted between the algorithm and skewed symmetry model shows that the algorithm has more advantages in term of the ease of the uses and in simplifying the use of mathematical <b>modeling</b> in representing <b>solid</b> <b>model...</b>|$|R
5000|$|... #Caption: Schematic {{representation}} of the Standard Linear <b>Solid</b> <b>model.</b>|$|R
40|$|We present {{algorithms}} for computing accurate {{moments of}} <b>solid</b> <b>models</b> that are represented using multiple trimmed NURBS surfaces. Our algorithms {{make use of}} programmable Graphics Processing Units (GPUs) to accelerate the computations. We evaluate the surface coordinates and normals accurately, with theoretical bounds, using our GPU NURBS evaluator. We have developed a framework that makes use of this data to evaluate surface integrals of trimmed NURBS surfaces in real time. With our framework, we can compute volume and moments of <b>solid</b> <b>models</b> with theoretical guarantees. The framework also supports local geometry changes, which is useful for providing interactive feedback to the designer while the <b>solid</b> <b>model</b> is being designed. We can compute the center of mass and check for stability of the <b>solid</b> <b>model</b> interactively. Applications of such real-time moment computation include deformation modeling, animation, and physically based simulations...|$|R
5000|$|Optimal strip {{separation}} (used {{in medical}} imaging and <b>solid</b> <b>modeling)</b> ...|$|E
5000|$|PTC Creo Elements/Pro, a 3D CAD/CAM/CAE feature-based, {{associative}} <b>solid</b> <b>modeling</b> software ...|$|E
5000|$|DesignSpark Mechanical {{is a free}} 3D CAD (computer-aided design) <b>solid</b> <b>modeling</b> {{software}} ...|$|E
40|$|Computer-Aided Design {{data and}} <b>Solid</b> <b>Models</b> are of immense {{importance}} across {{the full spectrum}} of engineering disciplines. Current industrial estimates point to the existence of over 30 billion CAD models in the world, with increasing numbers of them including 3 D <b>solid</b> <b>models.</b> While the database and data mining communities have made great strides in management of image, audio and video media, little work exists on how to perform engineering, content-based mining of CAD data and <b>solid</b> <b>models.</b> CAD data, and the engineering consumers of CAD data, have greatly different needs and requirements from traditional database multimedia: large, individual database elements; multi-disciplinary components (mechanical, electrical, etc.) with unique access critera; and the lack of an accepted set of readily identifiable features {{that can be used for}} model indexing and clustering. This paper presents our approach to perform similarity-based clustering on large databases of <b>solid</b> <b>models</b> of mechanical CAD designs. A publicly available source of <b>solid</b> <b>models</b> is the National Design Repository ([URL] which contains over 55, 000 publicly available <b>solid</b> <b>models</b> from many different engineering disciplines. It is this repository which we test our techniques against. We create a mapping of a <b>solid</b> <b>model's</b> boundary representation and engineering attributes into Model Signature Graphs (MSG). From the MSG's, we create an Invariant Topology Vector (ITV) which captures shape and engineering properties of the CAD models. We use a #-clustering algorithm to group the models and provide some of our empirical results to illustrate the approach. We believe that our methodology can form the basis for adapting data mining technquies to large engineering databases and building tool [...] ...|$|R
40|$|<b>Solid</b> <b>Modelling</b> {{has been}} {{introduced}} into the second-year engineering course at the Technical University of Cluj-Napoca. This paper describes an effort to measure {{the effect of the}} <b>solid</b> <b>modelling</b> curriculum on the development of 3 -D spatial visualization skills in the students. The main instrument used was the Mental Rotation Test (MRT). Although the MRT and our methodology have their limitations, the data generally support the inferences that <b>solid</b> <b>modelling</b> does enhance spatial visualization skills and more than wireframe CAD or graphics taught in a traditional way. New directions underway in the research are also reported. ...|$|R
50|$|Engineering {{drawings}} can {{be created}} semi-automatically and reference the <b>solid</b> <b>models.</b>|$|R
5000|$|SolidWorks, a <b>solid</b> <b>modeling</b> {{computer-aided}} design (CAD) and computer-aided engineering (CAE) software ...|$|E
5000|$|Solid Edge, a 3D CAD, {{parametric}} feature and synchronous technology <b>solid</b> <b>modeling</b> software ...|$|E
50|$|Other 3D <b>solid</b> <b>modeling</b> {{software}} programs outside of engineering, such as gameSpace, have similar functions.|$|E
40|$|The {{absence of}} {{constraints}} {{is one of}} the major limitations in current Virtual Reality (VR) environments. Without constraints, it is difficult to perform precise 3 D interactive manipulations in VR environments and precise <b>solid</b> <b>modelling</b> in VR environments cannot be guaranteed. In this paper, constraints are incorporated into the VR environment for intuitive and precise <b>solid</b> <b>modelling.</b> A hierarchically structured constraint-based data model is developed to support <b>solid</b> <b>modelling</b> in the VR environment. <b>Solid</b> <b>modelling</b> in the VR environment is precisely performed in an intuitive manner through constraint-based manipulations. Constraint-based manipulations are accompanied with automatic constraint recognition and precise constraint satisfaction to establish the hierarchically structured constraint-based data model and are realized by allowable motions for precise 3 D interactions in the VR environment. The allowable motions are represented as a mathematical matrix for conveniently deriving allowable motions from constraints. A procedure-based degree-of-freedom incorporation approach for 3 D constraint solving is presented for deriving the allowable motions. A rulebased constraint recognition engine is developed for both constraint-based manipulations and implicitly incorporating constraints into the VR environment. A prototype system has been implemented for precise <b>solid</b> <b>modelling</b> in an intuitive manner through constraintbased manipulations in the VR environment...|$|R
50|$|Cobalt has {{received}} praise for its free-form surfaces on <b>solid</b> <b>modeled</b> objects.|$|R
5000|$|... #Caption: Kepler's Platonic <b>solid</b> <b>model</b> of the Solar {{system from}} Mysterium Cosmographicum ...|$|R
5000|$|Combining {{polygon mesh}} models with CAD <b>solid</b> <b>modeling</b> (design of hip {{replacement}} parts, for example) ...|$|E
5000|$|... 1983: UniSolids V1.0 is released, {{marking the}} industry's first true {{interactive}} <b>Solid</b> <b>Modeling</b> software offering.|$|E
5000|$|Argon is {{the most}} affordable, {{offering}} 3D <b>solid</b> <b>modeling</b> (but not history-based), ray tracing, and animation.|$|E
30|$|The <b>solid</b> <b>model</b> {{has been}} {{obtained}} through the reverse method before the value is analyzed for the engine intake manifold. At the same time, the simplified Gambit model {{is used to}} divide the <b>solid</b> <b>model</b> of the grid so that the analysis can be fully satisfied for the CFD application software. Boundary condition is determined to prepare simulation.|$|R
40|$|With today’s Virtual Reality (VR) systems, it is {{difficult}} to directly and precisely create and modify objects in a VR environment. This chapter presents an approach for <b>solid</b> <b>modelling</b> in a VR environment. <b>Solid</b> <b>modelling</b> in the VR environment is performed precisely in an intuitive manner through constraint-based manipulations. A hierarchically structured and constraint-based data model is developed to support <b>solid</b> <b>modelling</b> in the VR environment. The data model integrates a high-level constraint- based model for precise object definition, a midlevel CSG/Brep (Constructive Solid Geometry/Boundary representation) hybrid <b>solid</b> <b>model</b> for hierarchical geometry abstractions and object creation, and a lowlevel polygon model for real-time visualization and interaction in the VR environment. Constraints are embedded in the <b>solid</b> <b>model</b> and are organized at different levels to reflect the modelling process from features to parts. Constraintbased manipulations are accompanied with automatic constraint recognition and precise constraint satisfaction to establish the hierarchically structured constraintbased data model and are realized by allowable motions for precise 3 D interactions in the VR environment. The allowable motions are represented as a mathematical matrix for conveniently deriving allowable motions from constraints. A procedure-based degree-of-freedom combination approach for 3 D constraint solving is presented for deriving the allowable motions. A rule-based constraint recognition engine is developed for both constraint-based manipulations and implicitly incorporating constraints into the VR environment. A prototype system has been implemented for precise <b>solid</b> <b>modelling</b> in an intuitive manner through constraint-based manipulations...|$|R
5000|$|Fillet {{and chamfer}} between faces and along edges in surface and <b>solid</b> <b>models.</b>|$|R
