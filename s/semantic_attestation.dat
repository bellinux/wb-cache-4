1|4|Public
40|$|Remote {{attestation}} {{was introduced}} in TCG specifications {{to determine whether a}} remote system is trusted to behave in a particular manner for a specific purpose; however, most of the existing approaches attest only the integrity state of a remote system and hence {{have a long way to}} go in achieving the above attestation objective. Behavior-based attestation and <b>semantic</b> <b>attestation</b> were recently introduced as solutions to approach the TCG attestation objective. In this paper, we extend behavior-based attestation to a model-driven remote attestation to prove that a remote system is trusted as defined by TCG. Our model-driven remote attestation verifies two compliance requirements to prove the trustworthiness of a remote system: expected behavior compliance and enforced behavior compliance...|$|E
40|$|Remote {{attestation}} {{is one of}} {{the core}} functionalities provided by trusted computing platforms. It holds the promise of enabling a variety of novel applications. However, current techniques for remote attestation are static, inexpressive and fundamentally incompatible with today's heterogeneous distributed computing environments and commodity open systems. Using language-based virtual machines enables the remote attestation of complex, dynamic, and high-level program properties [...] - in a platform-independent way. We call this <b>semantic</b> remote <b>attestation.</b> This enables a number of novel applications that distribute trust dynamically. We have implemented a prototype framework for <b>semantic</b> remote <b>attestation,</b> and present two example applications built on it [...] - a peer-to-peer network protocol, and a distributed computing application...|$|R
30|$|Several {{problems}} have been identified related to this protocol, and are being examined and addressed in current efforts within the TCG and elsewhere. These problems {{are related to the}} difficulty in measuring a platform configuration accurately, and comparing it against a well-known and standard configuration. In today's complex systems, composed of large numbers of interconnected heterogenous computing environments, performing an integrity measurement is almost meaningless unless there is very strict control on the hardware, operating systems and applications. These problems are driving further research activities in remote attestation, and well-known examples include Direct Anonymous <b>Attestation</b> [34], <b>Semantic</b> Remote <b>Attestation</b> [35], Property-based Attestation [36], and Fine Grained Attestation [37].|$|R
40|$|Abstract—Remote {{attestation}} of the trusted platforms {{is one of}} {{the most}} important aspect of trusted computing specification. The approach of attesting program from higher semantic level has been proved more trustworthy than traditional static approaches. <b>Semantic</b> remote <b>attestation</b> based on virtual machine is a kind of representative measures of trusted attestation, but there are some shortcomings in attestation efficiency and given applications. A new method of trusted remote attestation for web service is proposed based on filter mechanism, which combines property-based attestation with trusted virtual machine. We construct trusted attestation environment by the open-source TPM Emulator and IAIK jTSS on Linux, and Tomcat as Web server. The prototype of remote attestation for web service based on filter was validated by establishing attestation trusted table. The results show that the remote attestation policy of filter mechanism improves attestation efficiency. Keywords- trusted computing, remote attestation, web services, filter I...|$|R
40|$|Abstract—We propose and {{implement}} an innovative remote attestation framework called DR@FT for efficiently measuring a target {{system based on}} an information flow-based integrity model. With this model, the high integrity processes of a system are first measured and verified, and these processes are then protected from accesses initiated by low integrity processes. Toward dynamic systems with frequently changed system states, our framework verifies the latest state changes of a target system instead of considering the entire system information. Our attestation evaluation adopts a graph-based method to represent integrity violations, and the graph-based policy analysis is further augmented with a ranked violation graph to support high <b>semantic</b> reasoning of <b>attestation</b> results. As a result, DR@FT provides efficient and effective attestation of a system’s integrity status, and offers intuitive reasoning of attestation results for security administrators. Our experimental results demonstrate the feasibility and practicality o...|$|R

