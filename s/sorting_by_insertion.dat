1|10000|Public
50|$|Shellsort, {{also known}} as Shell sort or Shell's method, is an in-place {{comparison}} sort. It {{can be seen as}} either a generalization of sorting by exchange (bubble sort) or <b>sorting</b> <b>by</b> <b>insertion</b> (insertion sort). The method starts by sorting pairs of elements far apart from each other, then progressively reducing the gap between elements to be compared. Starting with far apart elements, it can move some out-of-place elements into position faster than a simple nearest neighbor exchange. Donald Shell published the first version of this sort in 1959. The running time of Shellsort is heavily dependent on the gap sequence it uses. For many practical variants, determining their time complexity remains an open problem.|$|E
5000|$|Block <b>sort</b> begins <b>by</b> <b>insertion</b> <b>sorting</b> {{groups of}} 16 - 31 {{items in the}} array. Insertion sort is an [...] operation, so this leads to {{anywhere}} from [...] to , which is [...] once the constant factors are omitted. It must also apply an insertion sort on the second internal buffer after each level of merging is completed. However, as this buffer was limited to [...] in size, the [...] operation also ends up being [...]|$|R
40|$|The {{emergence}} of stacks as a hardware device in stack machines implies {{the recognition of}} the importance of using stacks in different computer applications and the need to make use of them in others. This paper uses stacks to solve the sorting problem. Two stack-based sorting algorithms are introduced. The first is based upon <b>sorting</b> <b>by</b> the <b>insertion</b> technique, whereas the second is based upon <b>sorting</b> <b>by</b> the exchange technique. Their analysis and performance are derived when stack computers are used to run them. A comparison study with other sorting algorithms is pre-sented. This study shows that both algorithms have the best performance with a wide margin relative to other sorting algorithms when stack computers are used. 1...|$|R
50|$|<b>Sorted</b> <b>by</b> year. Click <> to <b>sort</b> <b>by</b> other parameters.|$|R
50|$|The {{connected}} {{problems of}} signed <b>sorting</b> <b>by</b> reversals and <b>sorting</b> <b>by</b> reversals were also studied more recently. Whereas efficient exact algorithms {{have been found}} for the signed <b>sorting</b> <b>by</b> reversals, the problem of <b>sorting</b> <b>by</b> reversals has been proven to be hard even to approximate to within certain constant factor, and also proven to be approximable in polynomial time to within the approximation factor 1.375.|$|R
50|$|The {{games are}} <b>sorted</b> <b>by</b> title. To <b>sort</b> <b>by</b> other columns, click the {{corresponding}} icon in the header row.|$|R
5000|$|... (When <b>sorted</b> <b>by</b> years won or lost, {{the table}} is <b>sorted</b> <b>by</b> the date of each team's first win) ...|$|R
50|$|Standard column {{families}} are column containers <b>sorted</b> <b>by</b> their names can be referenced and <b>sorted</b> <b>by</b> their row key.|$|R
5000|$|When <b>sorted</b> <b>by</b> years won or lost, {{the table}} is <b>sorted</b> <b>by</b> the date of each team's first {{placement}} ...|$|R
5000|$|... #Subtitle level 3: Synthesis <b>by</b> <b>insertion</b> of {{antimicrobial}} agents into polymer backbone ...|$|R
5000|$|... (When <b>sorted</b> <b>by</b> years won or lost, {{the table}} is <b>sorted</b> <b>by</b> the date of each team's most recent win) ...|$|R
50|$|When <b>sorted</b> <b>by</b> year {{of winning}} or losing final(s), {{the table is}} <b>sorted</b> <b>by</b> the year of each club's first final.|$|R
5000|$|When <b>sorted</b> <b>by</b> years won or lost, {{the table}} is <b>sorted</b> <b>by</b> the year of each team's most recent win or loss.|$|R
5000|$|... #Subtitle level 2: Humanization <b>by</b> <b>insertion</b> of {{relevant}} CDRs into human antibody [...] "scaffold" ...|$|R
50|$|Only players {{participated in}} {{official}} matches are listed.Players <b>sorted</b> <b>by</b> numbers, players joined {{during the season}} <b>sorted</b> <b>by</b> the time they joined the team.|$|R
5|$|Date: {{period and}} year; The column entries <b>sort</b> <b>by</b> year. If only a period is known, they <b>sort</b> <b>by</b> the start year of that period.|$|R
50|$|This {{is a list}} of African {{countries}} and dependent territories <b>sorted</b> <b>by</b> motorways' total length, which is <b>sorted</b> <b>by</b> kilometers built in the 21st century.|$|R
50|$|Vehicles {{sold in the}} United States, <b>sorted</b> <b>by</b> risk as {{evaluated}} by the U.S. National Highway Traffic Safety Administration. Click <> to <b>sort</b> <b>by</b> other parameters.|$|R
50|$|Treatment of CCE {{is usually}} by enucleation, {{followed}} <b>by</b> <b>insertion</b> of an ocular implant and prosthesis.|$|R
40|$|AbstractWe {{prove that}} <b>sorting</b> <b>by</b> {{reciprocal}} translocations {{can be done}} in O(n 3 / 2 log(n)) for an n-gene genome. Our algorithm is an adaptation of the algorithm of Tannier, Bergeron and Sagot for <b>sorting</b> <b>by</b> reversals. This improves over the O(n 3) algorithm for <b>sorting</b> <b>by</b> reciprocal translocations given by Bergeron, Mixtacki and Stoye (2006) [4]...|$|R
5000|$|Optionally, {{they can}} be listed <b>sorted</b> <b>by</b> either the imagename, the PID or the amount of {{computer}} usage. But by default, they are <b>sorted</b> <b>by</b> chronological order: ...|$|R
5|$|Date: {{period and}} {{year of the}} construction; The column entries <b>sort</b> <b>by</b> year. If only a period is known, they <b>sort</b> <b>by</b> the start year of that period.|$|R
500|$|Date: {{period and}} year; the column entries <b>sort</b> <b>by</b> year. If the entry {{can only be}} dated to a time-period, they <b>sort</b> <b>by</b> the start year of that period ...|$|R
50|$|<b>Sort</b> <b>by</b> Risk: Development <b>sorts</b> {{the stories}} <b>by</b> risk.|$|R
5|$|Date: {{period and}} {{year of the}} last major reconstruction; The column entries <b>sort</b> <b>by</b> year. If only a period is known, they <b>sort</b> <b>by</b> the start year of that period.|$|R
50|$|Incomplete list, <b>sorted</b> <b>by</b> {{number of}} employees, {{but can be}} <b>sorted</b> <b>by</b> each column. Area use is from county records. Dates are {{at the start of}} 2016 unless {{otherwise}} noted.|$|R
25|$|This {{is a list}} {{of ships}} of the Pawtuxet class. The list is <b>sorted</b> <b>by</b> launch date; however the table {{includes}} sort buttons so the list can be <b>sorted</b> <b>by</b> any column.|$|R
40|$|The {{understanding}} of genome rearrangements {{is an important}} endeavor in comparative genomics. A major computational problem in this field is finding a shortest sequence of genome rearrangements that transforms, or sorts, one genome into another. In this paper we focus on sorting a multi-chromosomal genome by translocations. We reveal new relationships between this problem and the well studied problem of <b>sorting</b> <b>by</b> reversals. Based on these relationships, we develop two new algorithms for <b>sorting</b> <b>by</b> reciprocal translocations, which mimic known algorithms for <b>sorting</b> <b>by</b> reversals: a score-based method building on Bergeron’s algorithm, and a recursive procedure similar to the Berman-Hannenhalli method. Though their proofs are more involved, our procedures for reciprocal translocations match {{the complexities of the}} original ones for reversals. Key words: genome rearrangement, <b>sorting</b> <b>by</b> translocations, <b>sorting</b> <b>by</b> reversals. 1...|$|R
30|$|Seven {{patients}} {{were presented with}} IIH and lumboperitoneal shunt malfunction. These {{patients were}} treated <b>by</b> <b>insertion</b> of ventriculoperitoneal (VP shunt).|$|R
30|$|The {{results suggest}} that bone quality {{measures}} affect primary stability as recorded <b>by</b> <b>insertion</b> torque, and the assessment methods are consistently related.|$|R
50|$|<b>Sorted</b> <b>by</b> relevance.|$|R
30|$|Parienti JJ, et al. Intravascular {{complications}} of central venous catheterization <b>by</b> <b>insertion</b> site. N Engl J Med. 2015; 373 (13): 1220 – 9.|$|R
50|$|Uncommonly, {{the vein}} can fuse with the artery after being damaged <b>by</b> <b>insertion</b> of the catheter. Ultrasound use is {{efficient}} at preventing this complication.|$|R
50|$|<b>Sorted</b> <b>by</b> {{individual}} gold medals.|$|R
40|$|Researchers and {{educators}} often {{argue that a}} student's peers strongly influence his or her educational outcomes. If so, an unequal distribution of advantaged and disadvantaged students across schools in a community will leave many students doubly disadvantaged and amplify existing inequalities. We explore {{the relationship between the}} degree of <b>sorting</b> <b>by</b> socioeconomic characteristics, ethnicity and language across schools within a community and inequality as measured by the variance of standardized high school exam scores within the community. Simple cross- sectional estimates suggest a direct relationship between <b>sorting</b> <b>by</b> ethnicity and the variance of test scores, but no direct relationship between <b>sorting</b> <b>by</b> income or primary parent's education and the variance of test scores. We then implement a fixed effects estimator to control for endogeneity in the extent of sorting: the results indicate that <b>sorting</b> <b>by</b> ethnicity does not affect the variance of test scores, but that <b>sorting</b> <b>by</b> home language and primary parent's education does. social interactions, peer effects, sorting, classroom effects...|$|R
25|$|Poor growth may {{be avoided}} <b>by</b> <b>insertion</b> of {{a feeding tube}} for {{increasing}} food energy through supplemental feeds or by administration of injected growth hormone.|$|R
