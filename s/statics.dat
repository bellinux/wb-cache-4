4175|10000|Public
5|$|Thomas Malthus {{had argued}} that {{population}} growth beyond resources was ordained by God to get humans to work productively and show restraint in getting families, this {{was used in the}} 1830s to justify workhouses and laissez-faire economics. Evolution was by then seen as having social implications, and Herbert Spencer's 1851 book Social <b>Statics</b> based ideas of human freedom and individual liberties on his Lamarckian evolutionary theory.|$|E
5|$|Other {{mathematical}} achievements include deriving {{an accurate}} approximation of pi, defining and investigating the spiral bearing his name, {{and creating a}} system using exponentiation for expressing very large numbers. He {{was also one of}} the first to apply mathematics to physical phenomena, founding hydrostatics and <b>statics,</b> including an explanation of the principle of the lever. He is credited with designing innovative machines, such as his screw pump, compound pulleys, and defensive war machines to protect his native Syracuse from invasion.|$|E
25|$|Fields {{of physics}} studied {{in this period}} include optics, {{mechanics}} (including <b>statics,</b> dynamics, kinematics and motion), and astronomy.|$|E
5000|$|The {{mechanism}} {{can be used}} to reference {{individual members}} of a class:import <b>static</b> java.lang.Math.PI;import <b>static</b> java.lang.Math.pow;or all the <b>static</b> members of a class:import <b>static</b> java.lang.Math.*; ...|$|R
50|$|Aircraft {{flying in}} weather {{will develop a}} <b>static</b> charge from air {{friction}} on the airframe. The <b>static</b> can be discharged with <b>static</b> dischargers or <b>static</b> wicks.|$|R
5000|$|The first {{condition}} {{above is}} positive <b>static</b> stability. In missile analysis this {{is described as}} positive <b>static</b> margin. (In aircraft analysis it may be described as negative <b>static</b> margin.)The second condition above is negative <b>static</b> stability. In missile analysis this is defined as negative <b>static</b> margin. (In aircraft analysis it may be described as positive <b>static</b> margin.) ...|$|R
25|$|In 1605, Simon Stevinus {{was able}} to solve a number of {{problems}} in <b>statics</b> based on the principle that perpetual motion was impossible.|$|E
25|$|The {{envelope}} theorem {{describes how}} {{the value of an}} optimal solution changes when an underlying parameter changes. The process of computing this change is called comparative <b>statics.</b>|$|E
25|$|Practical uses {{of supply}} and demand {{analysis}} often center on the different variables that change equilibrium price and quantity, represented as shifts in the respective curves. Comparative <b>statics</b> of such a shift traces the effects from the initial equilibrium to the new equilibrium.|$|E
5000|$|Late <b>static</b> binding is {{a variant}} of binding somewhere between <b>static</b> and dynamic binding. Consider the {{following}} PHP example:class A { <b>static</b> $word = [...] "hello"; <b>static</b> function hello (...) { print self::$word; }}class B extends A { <b>static</b> $word = [...] "bye";}B::hello (...) ...|$|R
5000|$|Double <b>Static</b> Rook (相居飛車 aiibisha) is, Black <b>Static</b> Rook vs White <b>Static</b> Rook ...|$|R
5000|$|<b>STATIC</b> FUNCTION SomeProcedureName <b>STATIC</b> FUNCTION SomeProcedureName (...) <b>STATIC</b> FUNCTION SomeProcedureName( [...] Param1 ParamsN [...] ) ...|$|R
25|$|The {{terminology}} did not {{settle down}} until {{some time after}} the publication of the Origin of Species. The word evolution was quite a late-comer: it can be seen in Herbert Spencer's Social <b>Statics</b> of 1851, and {{there is at least one}} earlier example, but it was not in general use until about 1865-70.|$|E
25|$|Galileo did {{not fully}} grasp the third law of motion, {{the law of the}} {{equality}} of action and reaction, though he corrected some errors of Aristotle. With Stevin and others Galileo also wrote on <b>statics.</b> He formulated the principle of the parallelogram of forces, but he {{did not fully}} recognize its scope.|$|E
25|$|Hydraulic {{engineering}} {{is concerned with}} the flow and conveyance of fluids, principally water. This area of civil {{engineering is}} intimately related to the design of pipelines, water supply network, drainage facilities (including bridges, dams, channels, culverts, levees, storm sewers), and canals. Hydraulic engineers design these facilities using the concepts of fluid pressure, fluid <b>statics,</b> fluid dynamics, and hydraulics, among others.|$|E
5000|$|... public <b>static</b> void main(String args)public <b>static</b> void main(String... args)public <b>static</b> void main(String args) ...|$|R
5000|$|... <b>static</b> void Main (...)<b>static</b> void Main(string args);static int Main (...)<b>static</b> int Main(string args); ...|$|R
5000|$|... import <b>static</b> java.lang.Integer.*;import <b>static</b> java.lang.Long.*;public class HelloWorld { public <b>static</b> void main(String args) { System.out.println(MAX_VALUE); }} ...|$|R
25|$|Leibniz {{contributed a}} fair amount to the <b>statics</b> and {{dynamics}} emerging around him, often disagreeing with Descartes and Newton. He devised a new theory of motion (dynamics) based on kinetic energy and potential energy, which posited space as relative, whereas Newton was thoroughly convinced that space was absolute. An important example of Leibniz's mature physical thinking is his Specimen Dynamicum of 1695.|$|E
25|$|From 1584 until 1641 the {{statistics}} are not complete, and in the Gabel's periods from 1642–1708 only a few statistics are available, but from 1709 until today the <b>statics</b> seem to be concise and reliable. Statistics before 1584 were {{the responsibility of the}} Catholic church and are not available in the Faroes today. But statistics back to as far as 1584 are available.|$|E
25|$|In 1859 Besant vacated his Fellowship with Saint John's {{college to}} marry Margaret Elizabeth Willis, {{daughter}} of Rev. Robert Willis, {{a professor of}} natural philosophy at Cambridge. They had two sons and a daughter. In 1863 Besant published Elementary Hydrostatics, a textbook on fluid <b>statics</b> containing mathematical exercises such as students might face in examination. The book was reprinted several times, and revised in 1892. He also wrote Treatise on Hydromechanics (1867) covering fluid mechanics. His book Elementary Conics came out in 1901.|$|E
5000|$|... import consoles.*;class ConsoleDemo { public <b>static</b> MainModule console = null; public <b>static</b> void prepare (...) { console = MainModule.getSingleton (...) console.prepare (...) } public <b>static</b> void unprepare (...) { console.unprepare (...) } public <b>static</b> void execute(String args) { console.printString("Hello World"); console.printNewLine (...) console.scanNewLine (...) } public <b>static</b> void main(String args) { prepare (...) execute(args); unprepare (...) }} ...|$|R
50|$|<b>Static</b> constructors allow complex <b>static</b> {{variable}} initialization.Static constructors {{are called}} implicitly when {{the class is}} first accessed. Any call to a class (<b>static</b> or constructor call), triggers the <b>static</b> constructor execution.Static constructors are thread safe and implement a singleton pattern. When used in a generic programming class, <b>static</b> constructors are called at every new generic instantiation one per type. <b>Static</b> variables are instantiated as well.|$|R
5000|$|... class ConsoleDemo { public <b>static</b> Consoles.MainModule Console = null; [...] public <b>static</b> void prepare (...) { Console = Consoles.MainModule.getSingleton (...) [...] Console.prepare (...) } [...] public <b>static</b> void unprepare (...) { Console.unprepare (...) } [...] public <b>static</b> void execute (...) { Console.PrintString("Hello World"); Console.PrintNewLine (...) Console.ScanNewLine (...) } [...] public <b>static</b> void main (...) { prepare (...) execute(args); unprepare (...) } } ...|$|R
25|$|For the {{analysis}} of entire systems, this approach {{can be used in}} conjunction with <b>statics,</b> giving rise to the method of sections and method of joints for truss analysis, moment distribution method for small rigid frames, and portal frame and cantilever method for large rigid frames. Except for moment distribution, which came into use in the 1930s, these methods were developed in their current forms {{in the second half of}} the nineteenth century. They are still used for small structures and for preliminary design of large structures.|$|E
25|$|In Hellenistic Egypt, the {{mathematician}} Euclid {{laid down}} the foundations of mathematical rigor and introduced the concepts of definition, axiom, theorem and proof still in use today in his Elements, considered the most influential textbook ever written. Archimedes, {{considered one of the}} greatest mathematicians of all time, is credited with using the method of exhaustion to calculate the area under the arc of a parabola with the summation of an infinite series, and gave a remarkably accurate approximation of Pi. He is also known in physics for laying the foundations of hydrostatics, <b>statics,</b> and the explanation of the principle of the lever.|$|E
25|$|The {{study of}} fluid {{mechanics}} goes {{back at least}} to the days of ancient Greece, when Archimedes investigated fluid <b>statics</b> and buoyancy and formulated his famous law known now as the Archimedes' principle, which was published in his work On Floating Bodies – generally considered to be the first major work on fluid mechanics. Rapid advancement in fluid mechanics began with Leonardo da Vinci (observations and experiments), Evangelista Torricelli (invented the barometer), Isaac Newton (investigated viscosity) and Blaise Pascal (researched hydrostatics, formulated Pascal's law), and was continued by Daniel Bernoulli with the introduction of mathematical fluid dynamics in Hydrodynamica (1739).|$|E
40|$|Abstract In this paper, we {{consider}} two-stage adjustable robust linear opti-mization problems under uncertain constraints {{and study the}} performance of piecewise <b>static</b> policies. These are a generalization of <b>static</b> policies where we divide the uncertainty set into several pieces and specify a <b>static</b> solution for each piece. We show that in general there is no piecewise <b>static</b> policy with a polynomial number of pieces that has a significantly better performance than an optimal <b>static</b> policy. This is quite surprising as piecewise <b>static</b> policies are significantly more general than <b>static</b> policies. The proof {{is based on a}} combinatorial argument and the structure of piecewise <b>static</b> policies...|$|R
40|$|Abstract. Access control {{policies}} {{often are}} partly <b>static,</b> i. e. no depen-dence on any run-time information, and partly dynamic. However, {{they are usually}} enforced dynamically- even the <b>static</b> parts. We propose a new hybrid approach to policy enforcement in the Category-Based Access Control (CBAC) meta-model. We build on previous work, which estab-lished a <b>static</b> system for the enforcement of (<b>static)</b> hierarchical Role-Based Access Control (RBAC) policies. We modify the previous policy language, JPol, to specify <b>static</b> and dynamic categories. We establish an equivalence between <b>static</b> categories and <b>static</b> roles (in RBAC), there-fore {{we are able to}} use the previous design patterns and <b>static</b> verification algorithm, with some changes, to enforce <b>static</b> categories. For dynamic categories, we propose a new design methodology and generate code in the target program to do the necessary run-time checks. ...|$|R
5000|$|Serve/cache <b>static</b> content: A reverse proxy can offload the {{web servers}} by caching <b>static</b> content like {{pictures}} and other <b>static</b> graphical content.|$|R
25|$|Al-Biruni {{contributed to}} the {{introduction}} of the experimental scientific method to mechanics, unified <b>statics</b> and dynamics into the science of mechanics, and combined the fields of hydrostatics with dynamics to create hydrodynamics. He came up with different methods for exploring densities, weight, and even gravity. Along with those methods, Biruni {{went so far as to}} describe instruments that go along with each of those areas as well. Although he never entirely focuses just on physics in any of his books, the study of physics is present throughout many of his various works. Biruni also came up with different hypotheses about heat and light.|$|E
25|$|Both as an {{adolescent}} {{and as a}} young man, Spencer {{found it difficult to}} settle to any intellectual or professional discipline. He worked as a civil engineer during the railway boom of the late 1830s, while also devoting much of his time to writing for provincial journals that were nonconformist in their religion and radical in their politics. From 1848 to 1853 he served as sub-editor on the free-trade journal The Economist, during which time he published his first book, Social <b>Statics</b> (1851), which predicted that humanity would eventually become completely adapted to the requirements of living in society with the consequential withering away of the state.|$|E
25|$|Mechanical {{engineers}} typically use mechanics in {{the design}} or analysis phases of engineering. If the engineering project were {{the design of a}} vehicle, <b>statics</b> might be employed to design the frame of the vehicle, in order to evaluate where the stresses will be most intense. Dynamics might be used when designing the car's engine, to evaluate the forces in the pistons and cams as the engine cycles. Mechanics of materials might be used to choose appropriate materials for the frame and engine. Fluid mechanics might be used to design a ventilation system for the vehicle (see HVAC), or to design the intake system for the engine.|$|E
5000|$|... public <b>static</b> Void f(Void x) { return null; }public <b>static</b> Void g(Void x) { return null; }public <b>static</b> void main(String args){ f(g(null));} ...|$|R
40|$|We {{developed}} a methodology and tools for synthesizing monotonic <b>static</b> CMOS networks, which consist of alternating low-skewed and high-skewed <b>static</b> gates. When {{used with a}} dual V T process, monotonic <b>static</b> CMOS can simultaneously reduce standby <b>static</b> power and increase performance by using low V T devices in the evaluation networks and making all other devices high V T. Experimental results show monotonic <b>static</b> CMOS to be 1. 67 times faster than traditional <b>static</b> CMOS. 1...|$|R
5000|$|... package org.examples;import <b>static</b> org.mockito.Matchers.any;import <b>static</b> org.mockito.Matchers.eq;import <b>static</b> org.mockito.Mockito.mock;import <b>static</b> org.mockito.Mockito.times;import <b>static</b> org.mockito.Mockito.verify;import <b>static</b> org.mockito.Mockito.when;import org.junit.Before;import org.junit.Test;import org.examples.HelloApplication.HelloActable;import org.examples.HelloApplication.HelloAction;import org.examples.HelloApplication.Greeter;import org.examples.HelloApplication.HelloGreeter;public class HelloActionIntegrationTest { HelloActable helloAction; Greeter helloGreeter; Appendable helloWriterMock; [...] @Before public void setUp (...) { helloGreeter = new HelloGreeter("welcome", [...] " [...] says [...] "); helloWriterMock = mock(Appendable.class); helloAction = new HelloAction(helloGreeter, helloWriterMock); } [...] @Test public void testSayHello (...) throws Exception { when(helloWriterMock.append(any(String.class))).thenReturn(helloWriterMock); helloAction.sayHello("integrationTest", [...] "universe"); verify(helloWriterMock, times(2)).append(any(String.class)); verify(helloWriterMock, times(1)).append(eq("integrationTest says [...] ")); verify(helloWriterMock, times(1)).append(eq("welcome universe")); }} ...|$|R
