67|70|Public
5|$|The game {{takes place}} in the fictional city of Karnaca. After Empress Emily Kaldwin is deposed by the witch Delilah Copperspoon, the player may choose between playing as either Emily or her Royal Protector and father Corvo Attano as they attempt to reclaim the throne. Both Emily and Corvo employ their own array of supernatural abilities, though the player can {{alternatively}} decide to forfeit these abilities altogether. There is a multitude of ways to complete missions, from stealth to purposeful violent conflict, navigated through a <b>sandbox</b> <b>environment.</b>|$|E
25|$|Multiplayer is also {{available}} in every game that uses the same gameplay elements in single-player. The first Crackdown game offered players cooperative gameplay of up to 2 players. The second Crackdown game improved the coop mode to accommodate 4 players while also adding new modes such as Rocket Tag, Vehicle Tag, Capture the Orb, Deathmatch and Team Deathmatch. Crackdown 3 further expanded the series' coop by allowing over 8 players to participate, as well being the first to have a fully destructible <b>sandbox</b> <b>environment</b> in multiplayer.|$|E
500|$|Other critics, however, likened Grand Theft Auto III to The Legend of Zelda and Metroid, {{as well as}} Shenmue in particular, {{and noted}} how GTA III had {{combined}} elements from previous games and fused them together into a new immersive experience. For instance, radio stations had been implemented earlier in games such as Sega's Out Run (1986) and Maxis' SimCopter (1996), open-ended missions based on operating a taxi cab in a <b>sandbox</b> <b>environment</b> were the basis for Sega's Crazy Taxi (1999), the ability to kill non-player characters dated back to action role-playing games like [...] (1985), and Final Fantasy Adventure (1991), {{and the way in}} which players run over pedestrians and get chased by police has been compared to Pac-Man (1980).|$|E
50|$|According to a {{security}} evaluation by Meng Xu, ARC apps may communicate with other installed Chrome Extensions and the files stored on the underlying operating system which might open avenues to various attacks. These threats are mitigated by the heavily <b>sandboxed</b> <b>environment</b> of ARC.|$|R
50|$|ARC builds {{upon the}} Google Native Client. The Native Client {{platform}} is being extended with a POSIX-compatible layer {{on top of}} the NaCl Integrated Runtime and Pepper APIs which emulate the Linux environment in the foundation of an Android phone. This then allows running an almost unchanged Dalvik VM in a <b>sandboxed</b> <b>environment.</b>|$|R
40|$|Running on {{billions of}} today’s {{computing}} devices, JavaScript {{has become a}} ubiquitous platform for deploying web applications. Unfortunately, an application developer who wishes to include a third-party script must enter into an implicit trust relationship with the thirdparty—granting it unmediated access to its entire application content. In this paper, we present js. js, a JavaScript interpreter (which runs in JavaScript) that allows an application to execute a third-party script inside a completely isolated, <b>sandboxed</b> <b>environment.</b> An application can, at runtime, create and interact with the objects, properties, and methods available from within the <b>sandboxed</b> <b>environment,</b> giving it complete control over the third-party script. js. js supports {{the full range of}} the JavaScript language, is compatible with major browsers, and is resilient to attacks from malicious scripts. We conduct a performance evaluation quantifying the overhead of using js. js and present an example of using js. js to execute Twitter’s Tweet Button API. ...|$|R
500|$|Crackdown is a third-person shooter {{set in a}} <b>sandbox</b> <b>environment,</b> akin to [...] After {{selecting}} one of the predefined Agent characters, {{the player}} is assigned to defeat the Kingpin of each gang, {{though there is no}} precise approach to do this, leaving players to select their preferred method. While the player may face the Kingpin and his bodyguards at any time, they can improve their chances of taking out the Kingpin by facing and defeating the various Generals responsible for certain aspects of the Kingpin's offense and defense, removing them from play. For example, by eliminating a gang's weapon dealer, gang members will no longer be as heavily armed or will fire fewer shots to conserve ammunition; assassinating the gang recruitment officer similarly reduces the size of the Kingpin's protective force. It is at the player's discretion whether to kill the Generals or skip them entirely before facing the Kingpin. However, the gangs cannot be completely eradicated from the city without tracking down and killing all Generals and Kingpins.|$|E
2500|$|The games {{also have}} an impact on the open-world genre. James Hunt of Den of Geek {{described}} the first Crackdown game as [...] "the first in a line of original, postmodern superhero creations on games consoles, and great fun to boot." [...] Its formula of controlling super-powered beings in a massive <b>sandbox</b> <b>environment,</b> and using their abilities to cause mayhem and destruction has influenced other video game series such as Infamous, Prototype, Saints Row, The Saboteur and Just Cause 2. Game creator Brian Fleming was influenced by the climbing and parkour aspects of the first Crackdown in designing the gameplay for Infamous. The series' mainstay gameplay of collecting orbs in an open world environment to increase a character's abilities, was also copied by another similar game called Prototype. Keiichiro Toyama cited Crackdown as a big influence in developing his award-winning game Gravity Rush, stating that he [...] "really liked the aspect of unlocking skills and becoming more powerful, and achieving a higher level of freedom as you become more powerful".|$|E
50|$|Portal Knights {{combines}} the exploration and building elements of games such as Minecraft and Terraria with the role-playing aspects from games such as The Legend of Zelda and Dark Souls. It provides a multiplayer <b>sandbox</b> <b>environment,</b> in which players can explore, fight monsters and build.|$|E
50|$|Cisco DevNet is Cisco's {{developer}} {{program to}} help developers and IT professionals who want to write applications and develop integrations with Cisco products, platforms, and APIs. Cisco DevNet includes Cisco's products in software-defined networking, security, cloud, data center, internet of things, collaboration, and open-source software development. The DevNet site also provides learning and <b>sandbox</b> <b>environments</b> for those trying to learn coding and testing apps.|$|R
50|$|Firefighters {{have been}} using <b>sandbox</b> <b>environments</b> to rapidly and {{physically}} model topography and fire for wildfire incident command strategic planning. The SimTable is a 3D interactive fire simulator, bringing sandtable exercises to life. The SimTable uses advanced computer simulations to model fires in any area, including local neighborhoods, utilizing actual slope, terrain, wind speed/direction, vegetation, and other factors. SimTable Models were used in Arizona's largest fire on record, the Wallow Fire.|$|R
40|$|We study {{techniques}} {{to visualize the}} behavior of malicious software (malware). Our aim is to help human analysts to quickly assess and classify {{the nature of a}} new malware sample. Our techniques are based on a parametrized abstraction of detailed behavioral reports automatically generated by <b>sandbox</b> <b>environments.</b> We then explore two visualization techniques: treemaps and thread graphs. We argue that both techniques can effectively support a human analyst (a) in detecting maliciousness of software, and (b) in classifying malicious behavior...|$|R
50|$|Flatpak (formerly xdg-app) is a {{software}} utility for software deployment, package management, and application virtualization for Linux desktop computers. It provides a <b>sandbox</b> <b>environment</b> in which users can run applications {{in isolation from}} the rest of the system. Applications using Flatpak need permission from the user to control hardware devices or access the user's files.|$|E
50|$|Unlike the {{original}} Viva Piñata, Party Animals {{is based on}} elements from the television show, including its characters and voices. Furthermore, the title provides a mini-game based experience, similar to the Mario Party series, rather than the <b>sandbox</b> <b>environment</b> of {{the original}}. There are over 40 mini-games, as well as kart-style races which are conducted on foot.|$|E
5000|$|Microsoft Office 2010 {{introduced}} the [...] "Protected View" [...] isolated <b>sandbox</b> <b>environment</b> for Excel, PowerPoint, and Word that prohibits potentially unsafe documents from modifying components, files, {{and other resources}} on a system. Protected View operates as a low-integrity process and, in Windows Vista and later versions of Windows, uses MIC and UIPI to further restrict the sandbox.|$|E
30|$|Access to the {{application}} during reconstruction: It is assumed that the reconstruction is done off-line. This means that during the reconstruction process there is no access to the server, and the tool only exploits previously collected HTTP traces. This assumption ensures that the tool remains effective even when the server is not available (for example, because of an attack or a bug in {{the application}}). Moreover, replaying the session off-line without accessing the server provides a <b>sandboxed</b> <b>environment</b> which is especially desirable during forensic analysis.|$|R
5000|$|Windows Runtime (WinRT), is a platform-agnostic {{application}} architecture first introduced in Windows 8 and Windows Server 2012 in 2012. WinRT supports development in C++/CX (Component Extensions, a language based on C++), JavaScript-TypeScript, and the managed code languages C# and Visual Basic [...]NET (VB.NET). WinRT applications natively support both the x86 and ARM processors, and run inside a <b>sandboxed</b> <b>environment</b> to allow greater security and stability. WinRT components {{are designed with}} interoperability between multiple languages and APIs in mind, including native, managed and scripting languages.|$|R
2500|$|Java {{is a set}} of {{computer}} software [...] and specifications developed by Sun Microsystems, which was later acquired by the Oracle Corporation, that provides a system for developing application software and deploying it in a cross-platform computing environment. Java is used {{in a wide variety of}} computing platforms from embedded devices and mobile phones to enterprise servers and supercomputers. Java applets, which are less common than standalone Java applications, run in secure, <b>sandboxed</b> <b>environments</b> to provide many features of native applications and can be embedded in HTML pages.|$|R
50|$|The Maemo SDK {{is based}} around the Debian-oriented Scratchbox Cross Compilation Toolkit, which {{provides}} a <b>sandbox</b> <b>environment</b> in which development may take place. Scratchbox uses QEMU to emulate an ARM processor or sbrsh to remotely execute instructions. Scratchbox-compatible rootstraps are available for both x86 and ARM, so the majority of development and debugging takes place on x86, with final packaging being for ARM.|$|E
5000|$|MMORPG.com {{rated the}} game 5.5/10 and {{wrote that the}} game was bland and uninspired, lacking a true <b>sandbox</b> <b>environment</b> and {{offering}} [...] "little more than grinding combat and crafting" [...] while also noting that the game suffered from performance issues. GameFront rated the game 65/100, praising the game's art direction but stated that the game offered slow progression and lacked a sizable playerbase.|$|E
50|$|The basic game {{features}} mixed PvP/PvE combat {{sessions in}} two basic scenarios: Training Room and Standard Battles. A separate tutorial intro mode includes covers game fundamentals over {{a series of}} lessons. Training Mode is a <b>sandbox</b> <b>environment</b> for new players and teams, helping them test tactics, new planes, and practice shooting at static and flying targets. No experience or credits are earned in training mode.|$|E
40|$|Cloud {{computing}} can {{be described}} as the homogenisation of resources distributed across computing nodes, so as to facilitate their sharing by a number of programs. In some sense, the use of virtual machines in languages such as Java and Erlang, are a first step towards to this idea of cloud computing, by providing a common layer of abstraction over nodes with different characteristic. This has fostered various forms of distributed computing mechanisms such as web services based on remote procedure calls (RPCs) and code on demand (COD) applets executing in <b>sandboxed</b> <b>environment.</b> peer-reviewe...|$|R
50|$|Java {{is a set}} of {{computer}} software and specifications developed by Sun Microsystems, which was later acquired by the Oracle Corporation, that provides a system for developing application software and deploying it in a cross-platform computing environment. Java is used {{in a wide variety of}} computing platforms from embedded devices and mobile phones to enterprise servers and supercomputers. While they are less common than standalone Java applications, Java applets run in secure, <b>sandboxed</b> <b>environments</b> to provide many features of native applications and can be embedded in HTML pages.|$|R
25|$|By default IIS 5.1 {{and earlier}} run {{websites}} {{in a single}} process running {{the context of the}} System account, a Windows account with administrative rights. Under 6.0 all request handling processes run {{in the context of the}} Network Service account, which has significantly fewer privileges, so that should there be a vulnerability in a feature or in custom code it won't necessarily compromise the entire system given the <b>sandboxed</b> <b>environment</b> these worker processes run in. IIS 6.0 also contained a new kernel HTTP stack (http.sys) with a stricter HTTP request parser and response cache for both static and dynamic content.|$|R
50|$|The program calculates {{and manages}} dependencies, executes ebuilds and {{maintains}} the local Portage tree and database of installed packages. The compilation settings used by ebuilds {{can be changed}} through the CFLAGS environment variable, {{based on the specifications}} of the individual computer and on the user's desire for optimization. The emerge utility executes ebuilds in a <b>sandbox</b> <b>environment.</b> This way the system is protected from software executed by the ebuild and resulting binaries are only merged after a successful build and sandboxed install.|$|E
50|$|Multiplayer is also {{available}} in every game that uses the same gameplay elements in single-player. The first Crackdown game offered players cooperative gameplay of up to 2 players. The second Crackdown game improved the coop mode to accommodate 4 players while also adding new modes such as Rocket Tag, Vehicle Tag, Capture the Orb, Deathmatch and Team Deathmatch. Crackdown 3 further expanded the series' coop by allowing over 8 players to participate, as well being the first to have a fully destructible <b>sandbox</b> <b>environment</b> in multiplayer.|$|E
50|$|The game {{primarily}} {{takes place}} in a <b>sandbox</b> <b>environment</b> but contains a mixture of puzzle-solving, indirect combat and exploration. The player has the ability to trap enemies, objects and other items in the game in order to take their functions and modify the creature. The functions that you collect can then be given to any other object or creature to create minions that will defend the player or help them overcome certain obstacles and puzzles. All the player's decisions will have a major impact.|$|E
2500|$|Windows Store apps run {{within a}} new set of APIs known as Windows Runtime, which {{supports}} programming languages such as C, C++, Visual Basic [...]NET, C#, along with HTML5 and JavaScript. If written in some [...] "high-level" [...] languages, apps written for Windows Runtime can be compatible with both Intel and ARM versions of Windows, otherwise they are not binary code compatible. Components may be compiled as Windows Runtime Components, permitting consumption by all compatible languages. To ensure stability and security, apps run within a <b>sandboxed</b> <b>environment,</b> and require permissions to access certain functionality, such as accessing the Internet or a camera.|$|R
5000|$|By default IIS 5.1 {{and earlier}} run {{websites}} {{in a single}} process running {{the context of the}} System account, a Windows account with administrative rights. Under 6.0 all request handling processes run {{in the context of the}} Network Service account, which has significantly fewer privileges, so that should there be a vulnerability in a feature or in custom code it won't necessarily compromise the entire system given the <b>sandboxed</b> <b>environment</b> these worker processes run in. IIS 6.0 also contained a new kernel HTTP stack (...) with a stricter HTTP request parser and response cache for both static and dynamic content.|$|R
5000|$|Windows Store apps run {{within a}} new set of APIs known as Windows Runtime, which {{supports}} programming languages such as C, C++, Visual Basic [...]NET, C#, along with HTML5 and JavaScript. If written in some [...] "high-level" [...] languages, apps written for Windows Runtime can be compatible with both Intel and ARM versions of Windows, otherwise they are not binary code compatible. Components may be compiled as Windows Runtime Components, permitting consumption by all compatible languages. To ensure stability and security, apps run within a <b>sandboxed</b> <b>environment,</b> and require permissions to access certain functionality, such as accessing the Internet or a camera.|$|R
50|$|The game {{takes place}} in the fictional city of Karnaca. After Empress Emily Kaldwin is deposed by the witch Delilah Copperspoon, the player may choose between playing as either Emily or her Royal Protector and father Corvo Attano as they attempt to reclaim the throne. Both Emily and Corvo employ their own array of supernatural abilities, though the player can {{alternatively}} decide to forfeit these abilities altogether. There is a multitude of ways to complete missions, from stealth to purposeful violent conflict, navigated through a <b>sandbox</b> <b>environment.</b>|$|E
5000|$|... lime is a {{unit testing}} and {{functional}} testing framework built {{specifically for the}} Symfony web application framework based on the Test::More Perl library. The framework is designed to have readable output from tests, including color formatting, by following the Test Anything Protocol which also allows for easy integration with other tools. lime tests are run in a <b>sandbox</b> <b>environment</b> to minimize test executions from influencing each other. [...] Though the lime testing framework is built for testing within Symfony, lime is contained within a single PHP file and has no dependency on Symfony or any other library.|$|E
50|$|A sandbox is a fully {{functional}} {{environment in}} which the system can be built, tested and executed. In order to make changes to the database schema in an evolutionary manner it is ideal for every developer to have his/her own physical sandbox, copy of source code and a copy of database. In a <b>sandbox</b> <b>environment</b> the developer can make changes to the database schema and run tests without affecting the work of other developers and other environments. Once the change has been implemented successfully, it is promoted to pre-production environment where in acceptance testing is performed and after the acceptance tests succeed it is deployed into production.|$|E
50|$|Metro Exodus is a first-person shooter {{game with}} {{survival}} horror and stealth elements. Set in the post-apocalyptic wasteland {{of the former}} Russian Federation, the player must cope with the new hazards and engage in combat against mutated creatures as well as hostile humans. The player wields an arsenal of hand-made weaponry which can be customised through scavenging materials and a crafting system. The game features a mixture of linear levels and <b>sandbox</b> <b>environments.</b> It also includes a dynamic weather system, a day-night cycle and environments that change along with the seasons as the story progresses (it will be set {{over the course of}} one whole in-game year).|$|R
50|$|CIS v6, {{released}} February 2013, {{provided a}} major {{revision of the}} user interface and significant new features such as a fully <b>sandboxed</b> desktop <b>environment.</b> On March 6, 2014 Comodo announced completion of beta testing for CIS v7.|$|R
40|$|The Internet is a {{dangerous}} place. Both naïve and educated users routinely become infected with viruses and accidentally run spyware despite widespread knowledge of such risks and how to avoid them. Clearly, user education is a dead-end. Another approach is to finely limit what different applications can do so that viruses and malware can’t do any damage in the first place. We observed that system-call execution is needed for viruses and malware to do any damage, so we developed iPoJ, a userpace <b>sandboxing</b> <b>environment</b> for Linux. With this, application and OS vendors can precisely define which system calls each application can execute and how. A properly iPoJ-protected user exposed to a virus or spyware would escape certain death unharmed. 1...|$|R
