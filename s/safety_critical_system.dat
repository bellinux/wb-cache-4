109|8434|Public
50|$|There {{are four}} {{different}} types of critical systems: mission critical, business critical, safety critical and security critical. The key difference between a <b>safety</b> <b>critical</b> <b>system</b> and mission critical system, is that <b>safety</b> <b>critical</b> <b>system</b> is a system that, if it fails, may result in serious environmental damage, injury, or loss of life, while mission critical system may result in failure in goal-directed activity. An example of a <b>safety</b> <b>critical</b> <b>system</b> is a chemical manufacturing plant control system. Mission critical system and business critical system are similar terms, but a business critical system fault can influence only a single company or an organization and can partially stop lifetime activity (hours or days). So it {{also can be used}} as a mission critical system in the business. Failure of it will cause very high cost loss for the business. Security critical system may lead to loss of sensitive data through theft or accidental loss. All these four systems are generalized as critical system.|$|E
5000|$|A {{brake-by-wire}} system, by nature, is a <b>safety</b> <b>critical</b> <b>system</b> {{and therefore}} fault tolerance is a vitally important characteristic of this system. As a result, a brake-by-wire {{system is designed}} in such way that many of its essential information would be derived {{from a variety of}} sources (sensors) and be handled by more than the bare necessity hardware. Three main types of redundancy usually exist in a brake-by-wire system: ...|$|E
50|$|An {{essential}} {{characteristic of}} all flight safety critical systems {{is that their}} behavior has to be precisely defined, analyzed and tested to meet formal certification requirements. This characteristic is often misinterpreted as timing determinism but is in fact predictability. The degree of precision required for timing is specific to eachapplication {{and has to be}} quantified by system analysis. The ultimate target to be reached, however, is that it may be demonstrated to certification authorities (i.e. FAA, EASA) that a <b>safety</b> <b>critical</b> <b>system</b> behaves predictably under foreseeable circumstances. Using CANaerospace, this predictability may be achieved.|$|E
40|$|By {{describing}} several industrial-scale {{applications of}} formal methods, this paper intends {{to demonstrate that}} formal methods for software development and safety analysis are increasingly adopted in the <b>safety</b> <b>critical</b> <b>systems</b> sector. The benefits and limitations of using formal methods are described, and the problems of developing software for <b>safety</b> <b>critical</b> <b>systems</b> are analysed. Keywords: formal methods, functional requirements analysis, <b>safety</b> analysis, <b>safety</b> <b>critical</b> <b>systems.</b> 1 Introduction A significant problem of developing software for <b>safety</b> <b>critical</b> <b>systems</b> is how to guarantee that the functional behaviour of a developed software system will satisfy the corresponding functional requirements and will not violate the safety requirements for the associated overall system. In order to solve this problem, {{it is important to}} analyse thoroughly the safety properties of the overall system, to achieve accurate software functional requirements and to verify properly the implementatio [...] ...|$|R
5000|$|Caselle - Avionics, Mission & Surveillance <b>Systems</b> and <b>Safety</b> <b>Critical</b> <b>Systems</b> ...|$|R
5000|$|Bowen, J.P., editor, Towards Verified Systems. Elsevier Science, Real-Time <b>Safety</b> <b>Critical</b> <b>Systems</b> series, volume 2, 1994[...]|$|R
40|$|Keywords–high availability; safety {{critical}} systems; timed automata; task scheduler; digital axle counter; railway signaling; Abstract—The paper revisits {{the approach of}} distributed timed automata {{in order to improve}} and optimize the methodology used in order to increase the availability of a <b>safety</b> <b>critical</b> <b>system</b> and implements using embedded real time task scheduler. A double wheel counter or digital axle counter system, a typical <b>safety</b> <b>critical</b> <b>system</b> that is used in solid state based railway signaling systems, is considered for achieving higher availability under certain failures. The improvement in the software architecture is influenced by the theory of task scheduler of real time operating system...|$|E
3000|$|In {{the safety}} {{assessment}} of metro projects, ISA will check {{each of the}} <b>safety</b> <b>critical</b> <b>system</b> products provided by suppliers {{to make sure that}} they have obtained the product safety certification. The safety certification process for the CBTC system is as follows: [...]...|$|E
40|$|This paper {{introduces}} {{an extension}} to CCS which models {{the concept of}} simultaneity of actions. In order to express simultaneity, we require the semantics of our language to allow agents the facility to proceed concurrently. An example of a <b>safety</b> <b>critical</b> <b>system</b> exemplifies the ideas expressed within this paper and their application...|$|E
5000|$|GL Studio SC (Safety Critical): {{the tool}} for <b>safety</b> <b>critical</b> <b>systems</b> and the {{recognized}} industry {{standard for the}} rapid prototyping of <b>safety</b> <b>critical</b> Human Machine Interfaces (HMI).|$|R
40|$|This {{monograph}} {{focuses on}} {{a proposal for a}} testing model in <b>safety</b> <b>critical</b> <b>systems.</b> Due to the large scope of these systems, we have focused on the system testing and we have included requirements for testing the communication subsystem. After establishing the theoretical background for testing, we have defined the differences and specifics of traditional software <b>systems</b> and <b>safety</b> <b>critical</b> <b>systems,</b> based on standards and guidelines analysis for various <b>safety</b> <b>critical</b> <b>systems.</b> The system testing that we are using is not clearly integrated into the process of design and development of <b>safety</b> <b>critical</b> <b>systems.</b> Therefore, we have proposed basic steps of this process to which we have integrated system testing. Given the scope of the system testing, we have decided to propose two testing models. We have focused on performance and step stress testing. These models implement requirements for testing of <b>safety</b> <b>critical</b> <b>systems</b> specified by us. To verify the proposed models, we have defined a metric. Based on its value we can determine whenever the proposed model meets testing requirements specified by us. Scientific Monographs in Automation and Computer Science; 13 Auch im Buchhandel erschienen: Design for a testing model of a communication subsystem for a safety-critical control system / Lukáš Špendla Ilmenau : Univ. -Verl. Ilmenau, 2013. - 140 S. (Scientific Monographs in Automation and Computer Science; 13) ISBN 978 - 3 - 86360 - 083 - 9 Preis: 13, 00 €Übersicht: Scientific Monographs in Automation and Computer Science</a...|$|R
50|$|In the future, it {{is likely}} that a {{requirement}} for <b>safety</b> <b>critical</b> <b>systems</b> is that they are analyzed using both static and measurement-based approaches.|$|R
40|$|Abstract. Safety {{critical}} systems, {{better known}} as hard real-time systems, rely processes to meet their requirements. More specifically, {{they need to meet}} their deadlines. Because these systems operate in environments in which the faulttolerance is very close to zero, a scheduling algorithm has to be chosen to schedule these very important processes in a way, that they meet their deadlines and it’s predictable whether it’s possible to meet their deadlines. The basis is an online hard real-time system. After an initial introduction, two types of scheduling algorithms are discussed, fixed-priority and dynamic-priority driven. Both will be put to the test and will be compared to the requirements of an online <b>safety</b> <b>critical</b> <b>system,</b> which will lead to a final conclusion determining the best suitable priority driven algorithm to be used in an online <b>safety</b> <b>critical</b> <b>system.</b> 1...|$|E
3000|$|A {{real time}} {{system is a}} {{reactive}} system, which responds to an input within a definite amount of time (Olderog and Dierks 2008). A real time system can be a <b>safety</b> <b>critical</b> <b>system,</b> where the real time constraints are extracted from the safety requirements of that system. A real time system has the following properties: [...]...|$|E
40|$|Assuring {{safety and}} {{reliability}} is fundamental when developing a <b>safety</b> <b>critical</b> <b>system.</b> Road, naval and avionic transportation; water and gas distribution; nuclear, eolic, and photovoltaic energy production are only some examples {{where it is}} mandatory to guarantee those properties. The continuous increasing in the design complexity of <b>safety</b> <b>critical</b> <b>system</b> calls for a never ending sought of new and more advanced analytical techniques. In fact, {{they are required to}} assure that undesired consequences are highly improbable. In this Thesis we introduce a novel methodology able to raise the bar in the area of automated safety and reliability analysis. The proposed approach integrates a series of techniques, based on symbolic model checking, into the current development process of safety critical systems. Moreover, our methodology and the resulting techniques are thereafter applied to a series of real-world case studies, developed in collaboration with authoritative entities such as NASA and the Boeing Company...|$|E
40|$|Semi-formal methods ate {{accepted}} and often requited techniques and measures for the devel-opment of <b>safety</b> <b>critical</b> <b>systems</b> that are applied within various development {{steps of the}} lifecyclc. This paper investigates how SysML (System Modeling Language) elements may support the overall functional safety approach of IEC 61508 to <b>safety</b> <b>critical</b> <b>systems.</b> For a modular sample system some functional safety requirements are discussed. It is shown if and how the functional safety requirements may be formulated and verified {{with the help of}} SysML...|$|R
40|$|The {{comprehensive}} {{management of}} the software development process (SDP) {{is a prerequisite for}} handling increasing project complexity (large number of components, distributed development, re [...] engineering) and in particular for the development of <b>safety</b> <b>critical</b> <b>systems</b> including distributed <b>safety</b> <b>critical</b> <b>systems.</b> The more formal the description of the SDP, the better it may be mastered. The quality of software may be partially defined by the development process it has run through. Therefore we intend to provide an environment to formalize the SDP. The SDP definition specifies the relationships of project steps along with their requirements and results. The formalized definition provides a way of managing tool integration, activity and document dependencies and versions, and it may even be adapted during project development. 1. OBJECTIVES Mastering the SDP is a requirement for developing <b>safety</b> <b>critical</b> <b>systems</b> and attaining higher levels of maturity [1]. Development and maintenance [...] ...|$|R
40|$|Progress is {{described}} in an on-going project, the aim {{of which is to}} provide an integrated environment to support the design of <b>safety</b> <b>critical</b> <b>systems.</b> Central to the research is the development and use of an electronic analogy of a designer's journal, to enable design traceability through the capture and later recall and replay of sequences of design actions. An important aim is to facilitate the production of high quality designs through the reuse of previously proven designs; for this, the application of case-based reasoning is considered to be appropriate. Proposals for the enhancement of the environment, through the provision of case-based design support, are discussed. Keywords: case-based reasoning, design reuse, <b>safety</b> <b>critical</b> <b>systems,</b> intelligent agents 1. Introduction This paper considers the potential application of case-based reasoning as a means of providing one form of artificial intelligence support in an integrated <b>safety</b> <b>critical</b> <b>systems</b> development environment. The [...] ...|$|R
30|$|The {{branching}} {{perspective of}} CTL is {{more suitable for}} verifying correctness of a <b>safety</b> <b>critical</b> <b>system</b> because all possible states in all possible computational paths are ascertained {{for the absence of}} a safety negating state. A CTL statement or formula expresses the properties and perspective behavior of the model. The CTL statements are formed by using temporal and logical operators.|$|E
40|$|International audienceWith the {{publishing}} of ED- 12 C and ED- 218, an opportunity {{has been created}} in which Model-Based Development is better defined for a <b>Safety</b> <b>Critical</b> <b>System</b> Environment. This positioning paper describes the approach and methodology applied to move from a conventional development, to a Model-Based Development. The major issue of how to integrate the two development methodologies is discussed...|$|E
30|$|The {{system design}} theory was {{established}} and the self-developed complete sets of {{systems and equipment}} were developed, which include: (1) the system design theory of moving block; (2) the design method of <b>safety</b> <b>critical</b> <b>system</b> in the whole life cycle; (3) self-developed safety computer platform; (4) technology and equipment based on the integrated design, e.g., the two-level scheduling model and three kinds of control level [11].|$|E
40|$|Abstract: Human factors {{contribute}} to risk in <b>safety</b> <b>critical</b> <b>systems.</b> However, current approaches to integrating human factors issues {{in the development of}} <b>safety</b> <b>critical</b> <b>systems</b> appear not fully sufficient. In this paper a new approach is pro-posed based on a technique from chemical engineering risk analysis called Safety Modelling Language (SML). SML provides a way to conceptually de-sign risk reduction based on barriers. The approach further helps to design and implement safety barriers. The approach is demonstrated using a case in which human factors play an important role from the medical domain...|$|R
40|$|<b>Safety</b> <b>critical</b> <b>systems</b> require to {{be highly}} {{reliable}} and thus special care is taken when verifying {{them in order to}} increase the confidence in their behavior. This paper addresses the problem of formal verification of <b>safety</b> <b>critical</b> <b>systems</b> by providing empirical evidence of the practical applicability of symbolic execution and of its usefulness for checking safety-related properties. In this paper, symbolic execution is used for building an operational model of the software on which safety properties, expressed by means of a Path Description Language (PDL), can be assessed...|$|R
40|$|International audienceThe {{development}} of <b>safety</b> <b>critical</b> <b>systems</b> often requires design decisions which influence not only dependability, but also other properties {{which are often}} even antagonistic to dependability, e. g., cost. Finding good compromises considering different goals {{while at the same}} time guaranteeing sufficiently high safety of a system is a very difficult task. We propose an integrated approach for modeling, analysis and optimization of <b>safety</b> <b>critical</b> <b>systems.</b> It is fully automated with an implementation based on the Eclipse platform. The approach is tool-independent, different analysis tools can be used and there exists an API for the integration of different optimization and estimation algorithms. For <b>safety</b> <b>critical</b> <b>systems,</b> a very important criterion is the hazard occurrence probability, whose computation can be quite costly. Therefore we also provide means to speed up optimization by devising different combinations of stochastic estimators and illustrate how they can be integrated into the approach. We illustrate the approach on relevant case-studies and provide experimental details to validate its effectiveness and applicability...|$|R
30|$|Air traffic {{management}} {{system is a}} complex adaptive and <b>safety</b> <b>critical</b> <b>system</b> which requires considerable attention for its modelling and verification. Currently Air traffic control (ATC) systems are heavily dependent upon human intervention at airport causing accidents and delays because of failure of communication. The {{purpose of this study}} is to develop, plan, manage and verify aircrafts movement procedures at the airport surface that prevent delays and collisions.|$|E
30|$|In {{modelling}} of the ATC system, various {{benefits for}} applications of formal methods in a <b>safety</b> <b>critical</b> <b>system</b> were observed. For example, decomposition of system into its components provided us a complete characterization at a detailed level of specification. After the component-level analysis, compositional approach {{enabled us to}} give reasoning about the components and subsequently the entire system. The model is near to implementation while guaranteeing the transformation of syntax and semantics rules.|$|E
40|$|Abstract – Mission- and <b>safety</b> <b>critical</b> <b>system</b> {{designers}} {{are more and}} more forced to use a Commercial-Off-The-Shelf (COTS) approach due to more focus on cost and development times, even if COTS components normally are not specifically designed and developed for robust operation. Many safety critical systems have to be assessed or certified by independent organisations. This paper addresses the challenges assessors and certification bodies meet when facing the assessment of such systems...|$|E
40|$|The {{scheduling}} {{of tasks}} in <b>safety</b> <b>critical</b> <b>systems</b> such that the timing requirements are reliably met is often difficult. <b>Safety</b> <b>critical</b> <b>systems</b> are different to other systems because a failure to meet a requirement {{may lead to a}} catastrophic effect, for example an accident leading to loss of life. For this reason, there is a greater emphasis on verification and validation of software than with other types of <b>systems.</b> <b>Safety</b> <b>critical</b> <b>systems</b> are found {{in a wide range of}} industries including; nuclear, chemical, aerospace and automotive industries. The particular area of interest for this thesis is in the avionics industry and in particular engine controllers. This provides a greater emphasis on hybrid systems, where the software is responsible for the performance of the mechanical components. Frequently, the systems developed have problems caused by insufficient resources, this leads to costly redesigns and timing requirements having to be altered so that they can be met. A major contr [...] ...|$|R
50|$|Ease of Implementation: The {{amount of}} code to {{implement}} CANaerospace {{is very little}} by design {{in order to minimize}} the effort for testing and certification of flight <b>safety</b> <b>critical</b> <b>systems.</b>|$|R
40|$|How can {{traceability}} {{of software}} safety requirements be created for legacy <b>safety</b> <b>critical</b> <b>systems?</b> Requirements in <b>safety</b> standards are imposed most times during contract negotiations. On the other hand, there are instances where safety standards are levied on legacy <b>safety</b> <b>critical</b> <b>systems,</b> {{some of which}} may be considered for reuse for new applications. Safety standards often specify that software development documentation include process-oriented and technical safety requirements, and also require that system and software safety analyses are performed supporting technical safety requirements implementation. So what can be done if the requisite documents for establishing and maintaining safety requirements traceability are not available...|$|R
40|$|Abstract. This article {{describes}} our {{experience with the}} use of the formal specification language VDM-SL, in the evolutionary development of a <b>safety</b> <b>critical</b> <b>system</b> for the daily programming of the HRVIR (High Resolution Visible and Infra-Red instrument) payload of the SPOT 4 satellite. This system controls the validity of the commercial photographic commands with respect to the constraints of the satellite and generates binary executable code that is then uploaded and executed on-board. ...|$|E
30|$|Interlocking {{system is}} a safety control system which supervises correct {{movement}} in a train yard. Since {{it is a real}} time <b>safety</b> <b>critical</b> <b>system,</b> it required modeling and exhaustive verification to prevent errors being introduced into the final built design. We have used time automata framework to model this system by extracting real time constraints from this <b>safety</b> <b>critical</b> <b>system.</b> In this paper we presented the designed model and verification of automated interlocking system model of Rawalpindi Cantt train yard in UPPAAL toolbox (Larsen et al. 1997). The simplicity and modularity of the constructed design enables us to add or delete routes in a yard or append more wayside equipment into the already existing routes with ease. Thus, if there is a new development in the yard, causing an increase in conflicting routes for a particular route, the adjustment in the design is simply an addition of a boolean variable(s) in the route selection automata of that route. It is advisable for every up-gradation of the routes, conflict tables should be made, as shown in this study, which will help in portraying the overall effect of an addition or deletion on the whole system.|$|E
40|$|Safety {{systems are}} {{frequently}} used in modern society. This project focuses on design patterns used in software engineering, {{and how these}} patterns {{are affected by the}} introduction of safety critical requirements. A navigation system has been chosen as a case study to simulate the behavior of such a <b>safety</b> <b>critical</b> <b>system.</b> This navigation system uses three main patterns in the initial architectural design: The Cyclic Execution Pattern – a concurrency pattern for program execution; Component based architecture – a pattern for subsystem and component based systems; and The Synchronizer deign pattern – a local system pattern for handling data streams. A HAZOP analysis was then performed on the developed safety and reliability view of the navigation system. A set of deviations, possible hazards, and the effect of these hazards was documented and taken into consideration in the further development of the system. In the case study, a set of safety patterns got supplemented “on top ” of the initial design patterns to meet the safety requirements of the system. A software emulator of the navigation system was also made to illustrate the implementation of the <b>safety</b> <b>critical</b> <b>system</b> in practice...|$|E
40|$|Abstract: A brief {{overview}} of the fields that must be considered when designing safety-critical systems is presented. The design of <b>safety</b> <b>critical</b> <b>systems</b> has been adopted static techniques to minimize error detection and fault tolerance. This paper specifies basic design approach by identifying the basic components of a <b>safety</b> <b>critical</b> computer <b>system</b> mishap causes and risk factors. Examines the design approach that implements safety and reliability. This paper also deals with some implementation issues...|$|R
40|$|Abstract—Reliability of <b>safety</b> <b>critical</b> <b>systems</b> such as {{nuclear power}} plants and {{automobiles}} has become a significant issue to our society. As more computing systems are utilized in these <b>safety</b> <b>critical</b> <b>systems,</b> there are high demands for verification and validation (V&V) techniques to assure the reliability of such complex computing systems. However, as the complexity of computing systems increases, conventional V&V techniques such as testing and model checking have limitations, since such systems often control highly complex continuous dynamics. To improve the reliability of such systems, statistical model checking (SMC) techniques have been proposed. SMC techniques can check if a target system satisfies given requirements through statistical methods. In this paper, we propose a new hybrid SMC technique that integrates sequential probability ratio test (SPRT) technique and Bayesian interval estimation testing (BIET) technique to achieve precise verification results quickly. In our experiment, the new hybrid SMC was up to 20 % faster than BIET. In addition, we demonstrate the effectiveness and efficiency of this hybrid SMC technique by applying the hybrid SMC technique to three <b>safety</b> <b>critical</b> <b>systems</b> in the automobile domain. I...|$|R
40|$|In {{recent years}} {{strictly}} mechanical solutions have evolved towards electromechanical which have introduced {{an increase in}} complexity that cannot be ignored. This {{is especially important for}} <b>safety</b> <b>critical</b> <b>systems</b> and the way they are developed. This thesis is part of a project with the goal of evaluating the development process ISO 26262 concerning <b>safety</b> <b>critical</b> <b>systems</b> in vehicles. The result of this thesis is a multi-interfaced presentation system for demonstrating the effects of not correctly handling hazards in a Steer-by-Wire system. The presentation system is written in C/C++ programming languages and connects different interfaces such as; Vehicle Simulator, CAN communication, HUD presentation, Microcontroller and Steering controls...|$|R
