10000|10000|Public
5|$|As Thompson began porting {{the game}} to the new system, {{he decided not to}} base the code on any of the {{existing}} software for the computer, and instead write his own. As a result, he implemented his own base code libraries for programs to use, including arithmetic packages and graphics <b>subsystems.</b> These initial <b>subsystems</b> were coded in assembly language on the GECOS system and assembled, then the output physically put on punched tapes to be carried over and inserted into the PDP-7. Thompson then wrote an assembler for the PDP-7 to avoid this laborious process. The game ran very slowly on the new machine, causing Thompson to branch out from there to design his own file system based on some ideas by Dennis Ritchie and Rudd Canaday, rooted in their experience with the Multics file system, with which he then ran Space Travel.|$|E
5|$|Other major <b>subsystems</b> in the E-3 Sentry are navigation, communications, and computers. Fourteen {{consoles}} display computer-processed data in graphic and {{tabular format}} on video screens. Console operators perform surveillance, identification, weapons control, battle management and communications functions. The radar and computer <b>subsystems</b> on the E-3 can gather and present broad and detailed battlefield information. This includes position and tracking information on enemy aircraft and ships, and location {{and status of}} friendly aircraft and naval vessels. The information {{can be sent to}} major command and control centers in rear areas or aboard ships. In times of crisis, data can be forwarded to the National Command Authority in the U.S. via RC-135 or naval aircraft carrier task forces.|$|E
5|$|Since release 1.8 DragonFly has a {{virtualization}} mechanism {{similar to}} User-mode Linux, allowing a user to run another kernel in the userland. The virtual kernel (vkernel) is run in completely isolated environment with emulated network and storage interfaces, thus simplifying testing kernel <b>subsystems</b> and clustering features.|$|E
40|$|An {{apparatus}} for {{formation of}} a three dimensional object comprising a sealed container; an electron beam <b>subsystem</b> capable of directing energy within said container; a positioning <b>subsystem</b> contained within said container; a wire feed <b>subsystem</b> contained within said container; an instrumentation <b>subsystem</b> electronically connected to said electron beam <b>subsystem,</b> positioning <b>subsystem,</b> and wire feed subsystem; and a power distribution <b>subsystem</b> electrically connected to said electron beam <b>subsystem,</b> positioning <b>subsystem,</b> wire feed <b>subsystem,</b> and said instrumentation <b>subsystem...</b>|$|R
40|$|Analyses of ERTS- 1 {{performance}} during the ninth {{quarter of its}} operation are presented. Topics discussed include orbital parameters, power <b>subsystem,</b> attitude control <b>subsystem,</b> command/clock <b>subsystem,</b> telemetry <b>subsystem,</b> orbit adjust <b>subsystem,</b> magnetic moment compensating assembly, unified S band/premodulation processor, electrical interface <b>subsystem,</b> thermal <b>subsystem,</b> narrowband tape recorders, wideband telemetry <b>subsystem,</b> attitude measurement sensor, wideband video tape recorders, return beam vidicon <b>subsystem,</b> multispectral scanner <b>subsystem,</b> and data collection system...|$|R
40|$|A {{description}} of the work accomplished with the Landsat- 1 and Landsat- 2 satellites during the period 23 Jan. - 23 Apr. 1975 was presented. The following information was given for each satellite: operational summary, orbital parameters, power <b>subsystem,</b> attitude control <b>subsystem,</b> command/clock <b>subsystem,</b> telemetry <b>subsystem,</b> orbit adjust <b>subsystem,</b> magnetic moment compensating assembly, unified S-band/premodulation processor, electrical interface <b>subsystem,</b> thermal <b>subsystem,</b> narrowband tape recorders, wideband telemetry <b>subsystem,</b> attitude measurement sensor, wideband video tape recorders, return beam vidicon, multispectral scanner <b>subsystem,</b> and data collection <b>subsystem...</b>|$|R
5|$|Information {{from the}} sense organs is {{collected}} in the brain. There {{it is used to}} determine what actions the organism is to take. The brain processes the raw data to extract information about the structure of the environment. Next it combines the processed information with information about the current needs of the animal and with memory of past circumstances. Finally, {{on the basis of the}} results, it generates motor response patterns. These signal-processing tasks require intricate interplay between a variety of functional <b>subsystems.</b>|$|E
5|$|The GCV {{was to be}} {{operable}} {{with the}} current battle command control and communications suite but would gradually use a more state-of-the-art networked integration system known as the BCT Network. It would provide exportable electrical power, and a battery charging capability for external hardware including vehicles and electronics from the BCT Soldier <b>subsystems.</b> The system {{would be capable of}} integration with unmanned systems and dismounted soldiers.|$|E
5|$|The {{computer}} command subsystem (CCS) {{controls the}} cameras. The CCS contains fixed computer {{programs such as}} command decoding, fault detection and correction routines, antenna pointing routines, and spacecraft sequencing routines. This computer is an improved version of {{the one that was}} used in the 1970s Viking orbiters. The hardware in both custom-built CCS <b>subsystems</b> in the Voyagers is identical. There is only a minor software modification for one of them that has a scientific subsystem that the other lacks.|$|E
25|$|There {{are four}} main {{environment}} subsystems: the Win32 <b>subsystem,</b> an OS/2 <b>subsystem,</b> the Windows <b>Subsystem</b> for Linux and a POSIX <b>subsystem.</b>|$|R
40|$|Users {{manual for}} the Management Information System" [...] Vol. 1. "September 1, 1984. "v. 1. General {{information}} [...] v. 2. Authorized codes and titles [...] v. 6. Mine status <b>subsystem</b> [...] v. 7. Inspections/investigations <b>subsystem</b> [...] v. 8. Time and activity <b>subsystem</b> [...] v. 9. Personnel <b>subsystem</b> [...] v. 10. Violations <b>subsystem</b> [...] v. 11. Manpower and activity planning <b>subsystem</b> [...] v. 12. Quality {{control and audit}} [...] v. 14. MMU/DA/DWP sampling entities <b>subsystem</b> [...] v. 15. Part 90, Sampling entities [...] v. 16. Citations/orders <b>subsystem</b> [...] v. 17. Quartz <b>subsystem.</b> Mode of access: Internet...|$|R
40|$|How much {{redundancy}} {{should be}} built into a <b>subsystem</b> such as a space power <b>subsystem.</b> How does a reliability or design engineer choose between a power <b>subsystem</b> with 0. 990 reliability and a more costly <b>subsystem</b> with 0. 995 reliability. How does the engineer designing a power <b>subsystem</b> for a satellite decide between one power <b>subsystem</b> and a more reliable but heavier power <b>subsystem.</b> High reliability is not necessarily an end in itself. High reliability may be desirable {{in order to reduce}} the statistically expected loss due to a <b>subsystem</b> failure. However, this may not be the wisest use of funds since the expected loss due to <b>subsystem</b> failure is not the only cost involved. The <b>subsystem</b> itself may be very costly. The cost of the <b>subsystem</b> or the expected loss due to <b>subsystem</b> failure may not be considered separately. Therefore, the total of the two costs is minimized, i. e., the total of the cost of the <b>subsystem</b> plus the expected loss due to <b>subsystem</b> failure. A specific type of redundant system is considered, called a k-out-of-n: G <b>subsystem.</b> Such a <b>subsystem</b> has n modules, of which k are required to be good for the <b>subsystem</b> to be good. Five models are discussed which can be applied in the design of a power <b>subsystem</b> to select the unique redundancy method which will minimize the total of the cost of the power <b>subsystem</b> plus the expected loss due to the power <b>subsystem</b> failure. A BASIC computer program is available...|$|R
5|$|The game {{features}} many gameplay {{elements of}} the original Final Fantasy VII, including a three-member party structure and adaptations of the game's <b>subsystems.</b> The items, spells and equipment available to the player are based upon those in the original game, and although a large number have been omitted along with optional characters and some side quests, the original story was reproduced in very minute detail. The game was received with mixed reception, cited as an impressive achievement {{but at the same}} time criticized for its difficulty and choice of a target console.|$|E
5|$|Before 2010, the {{computing}} {{reliability of}} GPGPU consumer-grade hardware was largely unknown, and circumstantial evidence {{related to the}} lack of built-in error detection and correction in GPU memory raised reliability concerns. In the first large-scale test of GPU scientific accuracy, a 2010 study of over 20,000 hosts on the Folding@home network detected soft errors in the memory <b>subsystems</b> of two-thirds of the tested GPUs. These errors strongly correlated to board architecture, though the study concluded that reliable GPU computing was very feasible as long as attention is paid to the hardware traits, such as software-side error detection.|$|E
5|$|E-3 Sentry {{aircraft}} {{were among}} the first to deploy during Operation Desert Shield, where they immediately established as an around-the-clock radar screen to defend against Iraqi forces. During Operation Desert Storm, E-3s flew 379 missions and logged 5,052 hours of on-station time. The data collection capability of the E-3 radar and computer <b>subsystems</b> allowed an entire air war to be recorded for the first time in history. In addition to providing senior leadership with time-critical information on the actions of enemy forces, E-3 controllers assisted in 38 of the 41 air-to-air kills recorded during the conflict.|$|E
40|$|A {{parallel}} integrated {{frame synchronizer}} which implements a sequential pipeline process wherein serial {{data in the}} form of telemetry data or weather satellite data enters the synchronizer by means of a front-end <b>subsystem</b> and passes to a parallel correlator <b>subsystem</b> or a weather satellite data processing <b>subsystem.</b> When in a CCSDS mode, data from the parallel correlator <b>subsystem</b> passes through a window <b>subsystem,</b> then to a data alignment <b>subsystem</b> and then to a bit transition density (BTD) /cyclical redundancy check (CRC) decoding <b>subsystem.</b> Data from the BTD/CRC decoding <b>subsystem</b> or data from the weather satellite data processing <b>subsystem</b> is then fed to an output <b>subsystem</b> where it is output from a data output port...|$|R
40|$|<b>Subsystem</b> {{codes are}} the most {{versatile}} class of quantum error-correcting codes known to date that combine the best features of all known passive and active error-control schemes. The <b>subsystem</b> code is a subspace of the quantum state space that is decomposed into a tensor product of two vector spaces: the <b>subsystem</b> and the co-subsystem. A generic method to derive <b>subsystem</b> codes from existing <b>subsystem</b> codes is given that allows one to trade the dimensions of <b>subsystem</b> and co-subsystem while maintaining or improving the minimum distance. As a consequence, it is shown that all pure MDS <b>subsystem</b> codes are derived from MDS stabilizer codes. The existence of numerous families of MDS <b>subsystem</b> codes is established. Propagation rules are derived that allow one to obtain longer and shorter <b>subsystem</b> codes from given <b>subsystem</b> codes. Furthermore, propagation rules are derived that allow one to construct a new <b>subsystem</b> code by combining two given <b>subsystem</b> codes. Comment: 5 pages, trading dimensions of <b>subsystem</b> codes, MDS <b>subsystem</b> codes, and propagation rules. All stabilizer codes are converted to <b>subsystem</b> codes. A talk given at QEC 07, and submitted to IEEE ISIT 200...|$|R
40|$|In this paper, {{a generic}} method to derive <b>subsystem</b> codes from {{existing}} <b>subsystem</b> codes is given that {{allows one to}} trade the dimensions of <b>subsystem</b> and co-subsystem while maintaining or improving the minimum distance. As a consequence, it is shown that all pure MDS <b>subsystem</b> codes are derived from MDS stabilizer codes. Furthermore, a simple construction of pure MDS <b>subsystem</b> codes is obtained {{that allows us to}} derive several classes of <b>subsystem</b> codes from RS codes. A fair comparison between <b>subsystem</b> and stabilizer codes are shown. Finally, two extension rules for <b>subsystem</b> codes are derived that allows one to derive longer and shorter <b>subsystem</b> codes...|$|R
5|$|FreeSpace 2 {{has many}} helpful {{features}} available. The player can target enemies attacking a protected objective or match speeds with them. Power can be shunted between shields, engines, and weapons, thereby allowing faster recharge of shields, afterburners, and weapons {{at the expense}} of other <b>subsystems.</b> These features can be ignored without any detrimental effects on gameplay. The mission parameters are not rigidly fixed, as there is an allowance for the failures of some primary objectives. When the mission is concluded, a post-mission briefing will be conducted to discuss the mission, and the performance of the player, before the next mission can be taken on.|$|E
5|$|Players {{have access}} to a {{communication}} system {{that can be used to}} contact other starfighters, which has more impact in the game's single-player mode. Through the system, the player can order either a single starfighter, a wing, or all craft (depending on how many are still active), with tasks such as taking down a player's target, covering the player, or engaging all hostiles, amongst other commands. The system can also be used to call in for reinforcements (if available), and requesting deployment of a support ship to repair a player's <b>subsystems</b> as well as re-arm their secondary weapons; the support ship can be given limited orders when deployed. Furthermore, a player can manage the energy input of certain <b>subsystems,</b> thus affecting how efficient it is in battle; changing the input for engines, for example, changes the max speed of the craft and the time needed to fully recharge the ship's afterburners. The controls for the game in both modes are designed so that players have ease with controlling their starfighter and its systems, and be able to do so with either a joystick, or a keyboard (on its own or with a mouse). Because of the flexibility in controls, some have categorised Descent: FreeSpace as a flight simulator, since it has more controls and commands than a typical arcade game, yet its flight model is simple, akin to that of the game , and incorporates some elements of Newtonian physics such as precise collision physics.|$|E
5|$|The {{combination}} {{of wind and}} solar PV has the advantage that the two sources complement each other because the peak operating times for each system occur {{at different times of}} the day and year. The power generation of such solar hybrid power systems is therefore more constant and fluctuates less than each of the two component <b>subsystems.</b> Solar power is seasonal, particularly in northern/southern climates, away from the equator, suggesting a need for long term seasonal storage in a medium such as hydrogen or pumped hydroelectric. The Institute for Solar Energy Supply Technology of the University of Kassel pilot-tested a combined power plant linking solar, wind, biogas and hydrostorage to provide load-following power from renewable sources.|$|E
40|$|<b>Subsystem</b> codes protect quantum {{information}} by encoding it in a tensor factor of a subspace {{of the physical}} state space. <b>Subsystem</b> codes generalize all major quantum error protection schemes, and therefore are especially versatile. This paper introduces numerous constructions of <b>subsystem</b> codes. It is shown how one can derive <b>subsystem</b> codes from classical cyclic codes. Methods to trade the dimensions of <b>subsystem</b> and co-subystem are introduced that maintain or improve the minimum distance. As a consequence, many optimal <b>subsystem</b> codes are obtained. Furthermore, it is shown how given <b>subsystem</b> codes can be extended, shortened, or combined to yield new <b>subsystem</b> codes. These <b>subsystem</b> code constructions are used to derive tables of {{upper and lower bounds}} on the <b>subsystem</b> code parameters...|$|R
40|$|The GEOMBIL is a Land Based Mobile Mapping System (LBMMS) {{developed}} by the ICC. It is a modular system that allows the direct orientation of any sensor mounted on a roof platform. The GEOMBIL system is composed of the following subsystems: orientation <b>subsystem,</b> image <b>subsystem,</b> laser ranging <b>subsystem,</b> synchronization <b>subsystem,</b> power and environmental control <b>subsystem</b> and data extraction software <b>subsystem...</b>|$|R
40|$|A generic {{method to}} derive <b>subsystem</b> codes from {{existing}} <b>subsystem</b> codes is given that {{allows one to}} trade the dimensions of <b>subsystem</b> and co-subsystem while maintaining or improving the minimum distance. As a consequence, it is shown that all pure MDS <b>subsystem</b> codes are derived from MDS stabilizer codes. The existence of numerous MDS <b>subsystem</b> codes is established. Another propagation rule is derived that allow one to obtain longer <b>subsystem</b> codes from a given <b>subsystem</b> code...|$|R
25|$|Provides inter-process {{communication}} ports with connection semantics. LPC ports {{are used}} by user-mode <b>subsystems</b> to communicate with their clients, by Executive <b>subsystems</b> to communicate with user-mode <b>subsystems,</b> and {{as the basis for}} the local transport for Microsoft RPC.|$|E
25|$|In VLSI design, the vertex {{separation}} {{problem was}} originally studied {{as a way}} to partition circuits into smaller <b>subsystems,</b> with a small number of components on the boundary between the <b>subsystems.</b>|$|E
25|$|A {{subsystem}} of second-order arithmetic is {{a theory}} {{in the language of}} second-order arithmetic each axiom of which is a theorem of full second-order arithmetic (Z2). Such <b>subsystems</b> are essential to reverse mathematics, a research program investigating how much of classical mathematics can be derived in certain weak <b>subsystems</b> of varying strength. Much of core mathematics can be formalized in these weak <b>subsystems,</b> some of which are defined below. Reverse mathematics also clarifies the extent and manner in which classical mathematics is nonconstructive.|$|E
5000|$|Console <b>Subsystem</b> Interface - {{standard}} specifies {{the basic}} messaging to interface a console <b>subsystem</b> to a P25 RF <b>Subsystem</b> ...|$|R
50|$|It has two subsystems: ground <b>subsystem</b> and onboard <b>subsystem.</b> The ground <b>subsystem</b> may {{based on}} balise, track circuit, radio {{communication}} network (GSM-R), and Radio Block Center (RBC). The onboard <b>subsystem</b> includes onboard computer and communication module.|$|R
2500|$|Best Overall <b>Subsystem</b> Award: Auburn University Hyperloop Team, Auburn University; Special Innovation Award in the Other Subsystem: [...] RIT Imaging, Rochester Institute of Technology; :Levitation <b>Subsystem</b> Technical Excellence Award: [...] TAMU Aerospace Hyperloop, Texas A Braking <b>Subsystem</b> Technical Excellence Award: [...] VicHyper, RMIT University; Propulsion/Compression <b>Subsystem</b> Technical Excellence Award: [...] , Universitat Politècnica de València; Safety <b>Subsystem</b> Technical Excellence Award: [...] UWashington Hyperloop, University of Washington (linked above); <b>Subsystem</b> Technical Excellence Awards: [...] Hyped, University of Edinburgh; Conant Hyperloop Club, Conant High School; <b>Subsystem</b> Innovation Award: [...] Ryerson’s International Hyperloop Team, Ryerson University.|$|R
25|$|The <b>subsystems</b> are {{therefore}} correctly {{described by a}} set of , m quantum numbers (see angular momentum for details). When there is interaction among the <b>subsystems,</b> the total Hamiltonian contains terms that do not commute with the angular operators acting on the <b>subsystems</b> only. However, these terms do commute with the total angular momentum operator. Sometimes one refers to the non-commuting interaction terms in the Hamiltonian as angular momentum coupling terms, because they necessitate the angular momentum coupling.|$|E
25|$|Abstraction (or modularity) – Types enable programmers {{to think}} {{at a higher}} level than the bit or byte, not bothering with {{low-level}} implementation. For example, programmers can begin to think of a string as a set of character values instead of as a mere array of bytes. Higher still, types enable programmers to think about and express interfaces between two of any-sized <b>subsystems.</b> This enables more levels of localization so that the definitions required for interoperability of the <b>subsystems</b> remain consistent when those two <b>subsystems</b> communicate.|$|E
25|$|The entropy of inhomogeneous {{systems is}} the sum of the entropies of the various <b>subsystems.</b> The laws of {{thermodynamics}} hold rigorously for inhomogeneous systems even though they may be far from internal equilibrium. The only condition is that the thermodynamic parameters of the composing <b>subsystems</b> are (reasonably) well-defined.|$|E
40|$|We {{demonstrate}} propagation {{rules of}} <b>subsystem</b> code constructions by extending, shortening and combining given <b>subsystem</b> codes. Given an [[n,k,r,d]]_q <b>subsystem</b> code, we drive new <b>subsystem</b> codes with parameters [[n+ 1,k,r,≥ d]]_q, [[n- 1,k+ 1,r,≥ d- 1]]_q, [[n,k- 1,r+ 1,d]]_q. The interested readers shall consult our companion papers for {{upper and lower}} bounds on <b>subsystem</b> codes parameters, and introduction, trading dimensions, families, and references on <b>subsystem</b> codes [1][2][3] and references therein. Comment: Private comments are welcom...|$|R
50|$|SUV-P: this {{air-to-ground}} <b>subsystem</b> utilizes identical hardware of SUV-VEP air-to-air <b>subsystem,</b> {{but with}} a different processing requirement. This <b>subsystem</b> is mainly used for air-to-surface missiles such as Kh-59, and acts as an interface between the system on board the aircraft and the designated targeting pods of the air-to-surface missiles {{that can not be}} controlled directly by the onboard avionics. The primary <b>subsystem</b> of SUV-P system is SUO-30PK <b>subsystem</b> and A-737 satellite navigational <b>subsystem.</b>|$|R
30|$|Hysteresis-loop burster—The slow <b>subsystem</b> oscillates due to {{feedback}} from the fast <b>subsystem.</b> This can occur if the fast <b>subsystem</b> shows hysteresis between the silent and active states, {{which can be used}} to inform the slow <b>subsystem</b> {{about the state of the}} fast <b>subsystem</b> (e.g., by baseline). In this case one slow variable is enough, m≥ 1.|$|R
