6|1430|Public
3000|$|... l(rp[p]) is {{obtained}} from rp[p] after deleting {{the identities of}} intermediate nodes which cannot be determined. Typically, only the identities of intermediate nodes which are in {{the coverage of the}} observer node could be determined as the observer is monitoring the forwarding of datagrams. Nevertheless, if the packets are <b>source</b> <b>routed,</b> the observer could determine the full identities of nodes in rp.|$|E
40|$|We present path {{verification}} routing (PVR) {{to enable}} robust, instantaneous on-demand loop-free routing of data packets {{based on their}} destination address in mobile ad hoc networks. PVR attains instantaneous loop-freedom by using a path verification technique without the necessity for sequence numbers, source-routed data packets, or nodal synchronization. The motivation for PVR is twofold. On the one hand, DSR provides loop-free routing but requires <b>source</b> <b>routed</b> data packets. On the other hand, AODV, {{which is based on}} destinationbased sequence numbers, is vulnerable to the counting-to-infinity problem and has route requests that in many cases must be answered by the destinations. Simulation experiments are used to show that the performance of PVR is comparable to or better than that of AODV, AODVbis, DSR and OLSR...|$|E
40|$|Shortest path routing {{algorithm}}s, such as Dijkstra’s algorithm {{present an}} overload problem when {{used to define}} routes for ring topologies in networks that implement source routing. This paper presents the effects of Dijkstra’s shortest path routing in the simulation and modeling of static <b>source</b> <b>routed</b> networks, in particular we evaluated {{the effect of this}} routing scheme in the performance of Optical Burst Switched (OBS) networks. A new static shortest path algorithm is presented and its performance compared with the standard shortest path algorithm, using two new metrics. We propose the use of this routing algorithm in network simulators instead of standard Dijkstra, as it produces more symmetric and balanced routes over the network links, thus producing results that are closer to real networks which implement a more dynamic routing. 1...|$|E
40|$|Abstract- In {{this paper}} we {{activated}} the default dynamic <b>source</b> <b>routing</b> protocol with a selfish and inimical node and compared {{the performance of}} this code with default dynamic <b>source</b> <b>routing</b> protocol. The performance of this code is degrades in contrast with default dynamic <b>source</b> <b>routing</b> protocol. To escape from this attack we introduced a personalized dynamic <b>source</b> <b>routing</b> protocol which perform better compare to dynamic <b>source</b> <b>routing</b> protocol with selfish and inimical nodes. For the implementation and analyse the performance NS- 2. 34 was used. For comparison of the both routing protocols throughput, end to end delay, PDR, packet loss and routing overhead parameters are used with Random waypoint mobility model...|$|R
50|$|Source-route {{transparent}} bridging, abbreviated SRT bridging, is {{a hybrid}} of <b>source</b> <b>routing</b> and transparent bridging, standardized in Section 9 of the IEEE 802.2 standard. It allows <b>source</b> <b>routing</b> and transparent bridging to coexist on the same bridged network by using <b>source</b> <b>routing</b> with hosts that support it and transparent bridging otherwise.|$|R
40|$|A novel {{approach}} to <b>source</b> <b>routing</b> in ad hoc networks is introduced that {{takes advantage of}} maintaining information regarding the two-hop neighborhood of a node. The neighborhood aware <b>source</b> <b>routing</b> (NSR) protocol is presented based on this approach, and its performance is compared by simulation {{with the performance of}} the Dynamic <b>Source</b> <b>Routing</b> (DSR) protocol. The simulation analysis indicates that NSR requires much fewer control packets while delivering at least as many data packets as DSR. Keywords On-demand <b>routing,</b> <b>source</b> <b>routing,</b> ad hoc networks, wireless mobile networks, link-state informatio...|$|R
40|$|Modern {{networks}} are expecting fast and efficient setup procedures for their connections. Strict time limits are requested for signaling {{in the normal}} operational mode and also for the recovery/restoration mode. As a possible solution, I proposed a method for fast <b>source</b> <b>routed</b> connection setup that {{takes advantage of the}} existing distributed processing potential in order to minimize the dependency of setup time on the path length. Two alternatives for the parallel setup are presented: sequential synchronization in the intermediate nodes and final synchronization in the egress node. The expected time reduction is considerable. The proposal is in general terms, using abstract messages instead of a specific signaling protocol. In the meantime, RSVP is established as {{the state of the art}} signaling protocol. The research community is still looking for ways to increase its speed and efficiency. In this context, I'm proposing an implementation of the mentioned method based on the current RSVP standard and I'm comparing it with a recent similar proposal...|$|E
40|$|In this paper, we {{investigate}} how to efficiently implement TDMA (Time Division Multiple Access) on a wormhole switched network using a pure software solution {{in the end}} nodes. Transmission is conflict free on the time-slot level and hence deadlock free. On the sub- slot level, however, conflicts are possible when using early sending, a method we propose {{in order to reduce}} latency while still not hazarding the TDMA schedule. We propose a complete system to offer services for dynamic establishment of guaranteed periodic real-time virtual channels. Two different clock synchronization approaches for integration into the TDMA system are discussed. Implementation and experimental studies have been done on a cluster of PCs connected by a Myrinet network. Also, a case study with a radar signal processing application is presented to show the usability. A best-case reduction of the latency of up to 37 percent for 640 Byte messages by using early sending in Myrinet is shown in the case study. <b>Source</b> <b>routed</b> wormhole switching networks are assumed in the work but the results are applicable on some other categories of switched networks too...|$|E
40|$|Part I: Theory Provable {{security}} {{is an important}} goal {{in the design of}} public-key cryptosystems. For most security properties, it is computational security that has to be considered: an attack scenario describes how adversaries interact with the cryptosystem, trying to attack it; the system can be called secure if adversaries with reasonably bounded computational means have negligible prospects of success. The lack of computational problems that are guaranteed to be hard in an appropriate sense means that there is little hope for absolute proofs of computational security. Instead, reduction-based security proofs have to be used: the computational security of a complex cryptographic scheme is related to the security of simpler underlying cryptographic primitives (under appropriate notions of security). The idea is to show that if the complex scheme is not secure, then this is because one of the primitives is not secure. Security can be described quantitatively as "concrete security", measured depending on the power given to adversaries. The DHAES construction (due to Abdalla, Bellare, and Rogaway) allows building a public-key encryption scheme from a key encapsulation mechanism (KEM), a one-time message authentication code (one-time MAC), and a pseudo-random bit string generator. A reduction-based security proof shows that DHAES achieves security against (adaptive) chosen-ciphertext attacks if these underlying primitives are secure. (Such chosen-ciphertext attacks are the most general attack scenario for public-key encryption.) A specific application for public-key cryptography is considered, namely Chaum's mix chain concept for untraceable electronic mail via cryptographic remailers: to obtain anonymity without requiring trust in a single authority, messages are recursively public-key encrypted to multiple intermediates (mixes), each of which forwards the message after removing one layer of encryption. To conceal as much information as possible when using variable (<b>source</b> <b>routed)</b> chains, all messages passed to mixes should be of the same length; thus, message length should not decrease when a mix transforms an input message into the corresponding output message directed at the next mix in the chain. Chaum described an implementation for such length-preserving mixes, but it is not secure against active attacks. This thesis presents a new construction for practical length-preserving mixes, which uses the cryptographic primitives described for DHAES. The conventional definition of security against chosen ciphertext attacks for public-key encryption schemes is not applicable to length-preserving mixes, so appropriate security definitions are introduced; it is shown that the mix construction achieves provable security. Part II: Practice Most instantiations of public-key cryptography involve computing powers (exponentiation) or computing power products ("multi-exponentiation") in some commutative semigroup with neutral element. This thesis describes the sliding window technique for arbitrary commutative semigroups with neutral element and its signed-digit variant ("window NAF") for groups where inversion is fast (e. g. point groups of elliptic curves and class groups of imaginary quadratic number fields), and then presents new techniques. Fractional windows, a generalization of the previously known window methods, can be useful for devices with limited storage. Interleaved exponentiation is a simple strategy for multi-exponentiation; the comparison with previous simultaneous exponentiation methods shows that it often provides better efficiency. Window NAF splitting is a method for fast exponentiation with precomputation for a fixed base in groups where inversion is fast. For the case of elliptic curves, side-channel attacks are discussed, i. e. attacks where adversaries use power consumption measurements or similar observations to derive information on secret values. Two methods are shown that are designed to limit potential information leakage available to adversaries: a 2 w-ary left-to-right method employing special representations of scalars, and a 2 w-ary right-to-left method with a special randomized initialization stage...|$|E
40|$|In {{an ad hoc}} network, the use of <b>source</b> <b>routing</b> {{has many}} advantages, {{including}} simplicity, correctness, and flexibility. For example, all routing decisions for a packet are made by the sender of the packet, avoiding the need for up-to-date routing information at intermediate nodes and allowing the routes used to be trivially guaranteed loopfree. It is also possible for the sender to use different routes for different packets, without requiring coordination or explicit support by the intermediate nodes. In addition, on-demand <b>source</b> <b>routing</b> has performed very strongly when compared against other proposed protocol designs. However, <b>source</b> <b>routing</b> has the disadvantage of increased per-packet overhead due to the source route header that must be present in every packet originated or forwarded. In this paper, we propose and analyze the use in ad hoc networks of implicit <b>source</b> <b>routing,</b> and show that it preserves the advantages of <b>source</b> <b>routing</b> while avoiding the associated per-packet overhead in most cases. We evaluated this technique through detailed simulations of ad hoc networks based on the Dynamic <b>Source</b> <b>Routing</b> protocol (DSR), an on-demand ad hoc network routing protocol based on <b>source</b> <b>routing.</b> Although routing packet overhead increased slightly with implicit <b>source</b> <b>routing,</b> by about 12. 3 %, {{the total number of}} bytes of overhead decreased substantially, by between 44 and 86 %. On all other metrics evaluated, the performance of DSR either did not change significantly or actually improved somewhat, due to indirect effects of the reduced routing overhead. 1...|$|R
5000|$|Scalable <b>Source</b> <b>Routing</b> (SSR) is a routing {{protocol}} for unstructured networks such as mobile ad hoc networks, mesh networks, or sensor networks. It combines <b>source</b> <b>routing</b> with routing along a virtual ring, {{and is based}} on the idea of [...] "pushing Chord into the underlay".|$|R
40|$|Abstract—Opportunistic data {{forwarding}} {{has drawn}} much {{attention in the}} research community of multihop wireless net-working, with most research conducted for stationary wireless networks. One {{of the reasons why}} opportunistic data forwarding has not been widely utilized in mobile ad hoc networks (MANETs) is the lack of an efficient lightweight proactive routing scheme with strong <b>source</b> <b>routing</b> capability. In this paper, we pro-pose a lightweight proactive <b>source</b> <b>routing</b> (PSR) protocol. PSR can maintain more network topology information than distance vector (DV) <b>routing</b> to facilitate <b>source</b> <b>routing,</b> although it has much smaller overhead than traditional DV-based protocols [e. g., destination-sequenced DV (DSDV) ], link state (LS) -based routing [e. g., optimized link state routing (OLSR) ], and reactive <b>source</b> <b>routing</b> [e. g., dynamic <b>source</b> <b>routing</b> (DSR) ]. Our tests using com-puter simulation in Network Simulator 2 (ns- 2) indicate that the overhead in PSR is {{only a fraction of the}} overhead of these baseline protocols, and PSR yields similar or better data transportation performance than these baseline protocols. Index Terms—Differential update, mobile ad hoc networks (MANETs), opportunistic data forwarding, proactive routing, <b>routing</b> overhead control, <b>source</b> <b>routing,</b> tree-based routing. I...|$|R
5000|$|DSRFLOW, the Flow-State {{extensions}} to Dynamic <b>Source</b> <b>Routing</b> (DSR), are {{a set of}} extensions {{that provide}} all {{of the benefits of}} <b>source</b> <b>routing,</b> without most of the per-packet overhead that is associated with <b>source</b> <b>routing.</b> It works by allowing most packets to be sent without a source route header, thus substantially reducing overhead. Indeed, one of the disadvantages of DSR was that the longer the source route of the packet was, the bigger the packet header became. The technique used is called implicit <b>source</b> <b>routing.</b> Flow state extensions to DSR were first described in [...] "Implicit Source Routes for On-Demand Ad Hoc Network Routing" [...] by Yih-Chun Hu and David B. Johnson (2001).|$|R
40|$|The {{interconnection}} between IEEE 802. 5 and IEEE 802. 3 LANs {{is carried}} out at layer 2 of OSI model or precisely at Medium Access Control level. Since these two LANs have many different characteristics, and are incompatible so that interoperability becomes a problem during their interconnection. IEEE 802. 5 LANs use a strategy which is called <b>Source</b> <b>Routing</b> for their interconnection whereas IEEE 802. 3 LANs use different strategy which is called Transparent Bridging. To overcome the problem of internetworking of these two different LANs, IEEE proses a new standard for routing strategy which is called <b>Source</b> <b>Routing</b> Transparent (SRT). This thesis studies the problems arising from <b>Source</b> <b>Routing</b> and Transparent bridging interconnections and discuss how SRT address the problems of <b>Source</b> <b>Routing</b> and Transparent Bridging. A mathematical analysis is done to analyze the performance of <b>Source</b> <b>Routing</b> and Transparent Bridging. SIMSCRIPT simulation programs are developed to conform with the mathematical analysis. The results of these two approaches agree with each other. Broadly speaking, the performance of <b>Source</b> <b>Routing</b> is deterministic whereas Transparent Bridging is random due to collision of frames at high utilization...|$|R
40|$|Opportunistic data {{forwarding}} {{has drawn}} much {{attention in the}} research community of multihop wireless networking, with most research conducted for stationary wireless networks. One {{of the reasons why}} opportunistic data forwarding has not been widely utilized in mobile ad hoc networks (MANETs) is the lack of an efficient lightweight secure routing scheme with strong <b>source</b> <b>routing</b> capability. In this paper, a lightweight secure <b>source</b> <b>routing</b> (SSR) protocol is proposed which is used to bypass insecure nodes and make sure transmission takes place only through secure nodes to the destination. SSR can maintain more network topology information than distance vector (DV) <b>routing</b> to facilitate <b>source</b> <b>routing,</b> although it has much smaller overhead than traditional DV-based protocols [e. g., destination-sequenced DV (DSDV) ], link state (LS) -based routing [e. g., optimized link state routing (OLSR) ], and reactive <b>source</b> <b>routing</b> [e. g., dynamic <b>source</b> <b>routing</b> (DSR) ]. Computer simulation in Network Simulator 2 (ns- 2) ensures security of transmission with less overhead in PSR protocols...|$|R
50|$|The name loose <b>source</b> <b>routing</b> {{comes from}} the fact that only part of the path is set in advance. This is in {{contrast}} with strict <b>source</b> <b>routing,</b> in which every step of the route is decided in advance where the packet is sent.|$|R
50|$|Dynamic <b>Source</b> <b>Routing</b> (DSR) is a routing {{protocol}} for wireless mesh networks. It {{is similar to}} AODV in that it forms a route on-demand when a transmitting node requests one. However, it uses <b>source</b> <b>routing</b> instead of relying on the routing table at each intermediate device.|$|R
40|$|We {{describe}} the adaptive <b>source</b> <b>routing</b> (ASR) method {{which is a}} first attempt to combine adaptive <b>routing</b> and <b>source</b> <b>routing</b> methods. In ASR, the adaptivity of each packet is determined at the source processor. Every packet can be routed in a fully adaptive or partially adaptive or non–adaptive manner, all within the same network at the same time. We evaluate and compare performance of the proposed adaptive <b>source</b> <b>routing</b> networks and oblivious routing networks by simulations. We also describe a route generation algorithm that determines maximally adaptive routes in multistage networks. ...|$|R
40|$|Network on Chip is a {{scalable}} {{and flexible}} communication infrastructure {{for the design}} of core based System on Chip. Communication performance of a NoC depends heavily on the routing algorithm. Deterministic and adaptive distributed routing algorithms have been advocated in all the current NoC architectural proposals. In this thesis we make a case for the use of <b>source</b> <b>routing</b> for NoCs, especially for regular topologies like mesh. The advantages of <b>source</b> <b>routing</b> include in-order packet delivery; faster and simpler router design; and possibility of mixing non-minimal paths in a mainly minimal routing. We propose a method to compute paths for various communications {{in such a way that}} traffic congestion is avoided while ensuring deadlock free routing. We also propose an efficient scheme to encode the paths. We developed a tool in Matlab that computes paths for <b>source</b> <b>routing</b> for both general and application specific communications. Depending upon the type of traffic, this tool computes paths for <b>source</b> <b>routing</b> by selecting best routing algorithm out of many routing algorithms. The tool uses a constructive path improvement algorithm to compute paths that give more uniform link load distribution. It also generates different types of traffics. We also developed a simulator capable of simulating <b>source</b> <b>routing</b> for mesh topology NoC. The experiments and simulations which we performed were successful and the results show that the advantages of <b>source</b> <b>routing</b> especially lower packet latency more than compensate its disadvantages. The results also demonstrate that <b>source</b> <b>routing</b> can be a good routing candidate for practical core based SoCs design using network on chip communication infrastructure...|$|R
5000|$|Audio manager: {{management}} of audio <b>sources</b> <b>routing</b> and mixing ...|$|R
30|$|The {{two methods}} for routing packets in WirelessHART {{networks}} are graph <b>routing</b> and <b>source</b> <b>routing.</b> Graph routing requires the network manager to pre-configure the routing table for each potential destination. For redundancy, in a properly configured network, all nodes {{have at least}} two paths to destination nodes. When using graphs, nodes only obtain the information about their next-hop node not the global information. In comparison, <b>source</b> <b>routing</b> requires information on network topology, because packets may go to an arbitrary destination without an explicit configuration of intermediate nodes. Graph routing is ideal for both upstream and downstream communications, whereas <b>source</b> <b>routing</b> is only intended for network diagnostics.|$|R
40|$|Abstract—Reducing packet latency is an {{important}} require-ment in embedded networks. <b>Source</b> <b>routing</b> {{can be used to}} reduce processing delay at intermediate nodes and thereby reduce the overall packet latency. However <b>source</b> <b>routing</b> is not scalable which makes it unsuitable for larger networks. The addition of the source route to every packet reduces the system goodput (application level throughput). Further, source routes ignore dynamic network conditions which might lead to routing failures. In this paper, we propose strategies to counter these problems. We propose a topology encoding scheme that reduces the overhead and makes <b>source</b> <b>routing</b> scalable. We propose a lazy correction scheme that makes it take cognizance of dynamic network conditions. Through simulations on reasonably large sized network with realistic models for traffic and failure, we show that <b>source</b> <b>routing</b> is indeed usable in practical scenarios. I...|$|R
40|$|In this paper, we {{describe}} a computer simulation {{study of the}} sensitivity of Dynamic <b>Source</b> <b>Routing</b> (DSR) protocol performance to wireless channel at microwave carrier frequencies greater than 2 GHz. Performance simulation results show that at microwave carrier frequencies greater than 2 GHz, the break point distance effect {{the performance of the}} Dynamic <b>Source</b> <b>Routing</b> Protocol in Mobile Wireless Ad Hoc Network (MANET). Whilst at microwave carrier frequencies less than 2 GHz, the break point distance has no effect on the delay and BER of the Dynamic <b>Source</b> <b>Routing</b> Protocol (DSR) as compared to the free space propagation loss model...|$|R
50|$|The <b>Source</b> <b>routing</b> used by cjdns has {{advantages}} for performance and extensibility. Nodes can use experimental routing algorithms with existing meshes, and new releases of cjdns {{can change the}} default routing algorithm without creating protocol incompatibilities. The major security problem of <b>source</b> <b>routing,</b> IP address spoofing, is prevented by the end-to-end nature of cjdns encryption.|$|R
5000|$|Quagga, a free open <b>source</b> <b>routing</b> {{software}} suite based on GNU Zebra ...|$|R
50|$|Many {{high-performance}} interconnects including Myrinet, Quadrics, IEEE 1355, and SpaceWire support <b>source</b> <b>routing.</b>|$|R
50|$|The {{implicit}} <b>source</b> <b>routing</b> {{mechanism is}} now {{included in the}} DSR Internet Draft.|$|R
40|$|Abstract To support {{communication}} among hundreds of cores on a chip, on-chip communication must be well organized. In the embedded systems using such a chip, the communication patterns can be profiled and routing can be well planned off-line. <b>Source</b> <b>routing,</b> with many advantages over distributed routing, {{will be very}} suitable in such contexts. However, <b>source</b> <b>routing</b> has one serious drawback of overhead for storing the path information in header of every packet. This disadvantage becomes worse as {{the size of the}} network grows. In this thesis we propose a technique, called Junction Based Routing (JBR), to remove this limitation. In the proposed technique, path information for only a few hops is stored in the packet header. With this information, either the packet reaches the destination, or reaches a junction from where the path information for on-ward path is picked up. There are many interesting issues related to this approach. Two important issues related to JBR, namely, number and position of junctions and path computation for efficient deadlock free routing are discussed and solved in this thesis work. Increase in path length by using the minimum number of junctions, link load distribution while computing paths, path encoding for JBR and packet format in JBR are also discussed. A few tools have been developed in MATLAB to analyze the various aspects of JBR. A simulator has been also developed to evaluate the performance of JBR with simple <b>source</b> <b>routing.</b> Outline of the architecture for a junction is also proposed. The results of simulation-based experiments show that the performance of JBR is similar to <b>source</b> <b>routing.</b> JBR is compared with <b>source</b> <b>routing</b> and the simulationbased results show that latency does not increase so much using junctions. Throughput also does not level off significantly. Header flit in JBR can carry payload data and this improves the performance of JBR in terms of throughput and latency compared to <b>source</b> <b>routing</b> which needs to store large path information. We observe improvement in throughput as compared to basic <b>source</b> <b>routing</b> when payload is very small. Key Words System on Chip (SoC) Core-Based Design On Chip Communication Network on Chip (NoC) Packet Switched Network <b>Routing</b> Algorithms <b>Source</b> <b>Routing</b> Junction-Based Routing Specification and Description Language (SDL...|$|R
40|$|Abstract- We {{present the}} source-tree {{adaptive}} routing (STAR) protocol, which we show through simulation experiments {{to be far}} more efficient than the Dynamic <b>Source</b> <b>Routing</b> (DSR) protocol, which {{has been shown to be}} one of the best performing on-demand routing protocols. A router in STAR communicates to its neighbors the parameters of its <b>source</b> <b>routing</b> tree, which consists of each link that the router needs to reach every destination. To conserve transmission bandwidth and energy, a router transmits changes to its <b>source</b> <b>routing</b> tree only when the router detects new destinations, the possibility of looping, or the possibility of node failures or network partitions. I...|$|R
40|$|Mobile Ad-hoc Networks (MANET) are {{consisting}} of nodes that have limited battery power so the energy efficiency {{is one of}} the primary metrics of interest. Energy efficient routing is a major issue in MANET. This paper proposed an Energy efficient power aware multipath dynamic <b>source</b> <b>routing</b> protocol by modifying {{one of the most popular}} routing protocols that is Dynamic <b>Source</b> <b>Routing</b> (DSR) protocol which is not at all concerned about power consumption. The proposed Dynamic <b>source</b> routing-Power Aware <b>routing</b> DSR-PSR uses the basic concept of traditional DSR and implements energy efficient routing through which it not only enhances the life time of the network but also increases the overall performance of the networks. General Terms Energy Efficient algorithm for Dynamic <b>source</b> <b>routing</b> protocol...|$|R
40|$|In this paper, {{we propose}} an {{efficient}} <b>source</b> <b>routing</b> algorithm for unicast flows, which addresses the scalability problem {{associated with the}} basic <b>source</b> <b>routing</b> technique. Simulation {{results indicate that the}} proposed algorithm indeed helps in reducing the message overhead considerably, {{and at the same time}} it gives comparable performance in terms of resource utilization across a wide range of workloads...|$|R
40|$|This paper {{describes}} {{the architecture of}} Switch 2 switch chip, the recently developed third generation switching element which future IBM RS/ 6000 SP systems may be based on. Switch 2 oers signicant enhancements over the existing SP switch chips by incorporating advances in both VLSI technology and interconnection network research. One of the major new features of Switch 2 is the incorporation of adaptive routing support into it. We describe the adaptive <b>source</b> <b>routing</b> architecture of the Switch 2 chip which is a unique feature of this chip. The performance of the adaptive <b>source</b> <b>routing</b> and oblivious routing {{for a wide range}} of system characteristics and trac patterns is evaluated. It is shown that adaptive <b>source</b> <b>routing</b> outperforms or performs comparably with oblivious routing. We propose two novel algorithms for generating adaptive routes specications required for enabling the usage of adaptive <b>source</b> <b>routing.</b> The comparison between the cost of these two algorithms an...|$|R
30|$|In this section, we {{will apply}} the {{multipath}} collection algorithm based on <b>source</b> <b>routing</b> and AOMDV.|$|R
50|$|When using <b>source</b> <b>routing</b> with Myrinet, {{the sender}} of the packet prepends the {{complete}} route, one byte for every crossbar, to each packet header.Each crossbar examines the first routing byte of the packet.When using <b>source</b> <b>routing,</b> that byte indicates a particular port of that crossbar; when that port becomes available, the router discards that routing byte and sends {{the rest of}} the packet out that port.|$|R
40|$|Abstract—Opportunistic data {{forwarding}} (ODF) {{has drawn}} much attention in wireless networking research in recent years. The effectiveness of ODF in wireless networks is heavily {{depended on the}} choice of proper routing protocols which can provide effective <b>source</b> <b>routing</b> services. In this paper, we propose a new routing protocol named PSR for ODF in mobile ad-hoc networks. PSR is featured by proactive <b>source</b> <b>routing,</b> loop-free, and extremely small routing overhead. Compared to existing routing protocols, {{there is no need}} to timestamp routing updates in PSR and the update messages are harmoniously integrated into the tree structure, so that the overhead can be significantly reduced. Index Terms—Mobile ad hoc networks (MANETs), proactive <b>source</b> <b>routing</b> (PSR), opportunistic data forwarding (ODF). I...|$|R
40|$|In this paper, {{we compare}} the Dynamic <b>Source</b> <b>Routing</b> (DSR) {{protocol}} and our Energy Aware Dynamic <b>Source</b> <b>Routing</b> protocol (EADSR). The {{implementation of the}} routing protocols is carried out using the Click modular router infrastructure on laptops with wireless ethernet cards running Linux. We demonstrate the working of both ad hoc routing protocols through our experiments and highlight the energy efficient behavior of EADSR as compared to DSR...|$|R
