111|165|Public
5|$|From 2010 to September 2011, Juniper made six {{acquisitions}} and invested in eight companies. Often Juniper acquired early-stage startups, developing their technology, than {{selling it to}} pre-existing Juniper clients. Juniper acquired two digital video companies, Ankeena Networks and Blackwave Inc., as well as wireless LAN software company Trapeze Networks. In 2012, Juniper acquired Mykonos Software, which develops security software intended to deceive hackers already within the network perimeter. and a developer of <b>software-defined</b> <b>network</b> controllers, Contrail Systems. In 2014 Juniper acquired the software-defined networking (SDN) company WANDL.|$|E
50|$|In September 2016, {{the company}} {{released}} SD-LAN, a <b>software-defined</b> <b>network</b> that functions on local area networks.|$|E
50|$|Using <b>software-defined</b> <b>network</b> {{technology}} {{acquired from}} a German company called Ocedo it acquired in January 2016, Riverbed announced the SteelConnect product in April 2016.|$|E
30|$|At {{the end of}} this section, we {{introduce}} a recent work on stepping-stone detection in <b>software-defined</b> <b>networks</b> (SDN).|$|R
50|$|Juniper: In 2013, Lumeta {{announced}} a Technology Development Partnership regarding Juniper Networks Contrail, a standards-based and highly scalable network virtualization solution for <b>software-defined</b> <b>networks</b> (SDN). IPsonar ESI enables continuous cyber situational awareness for cloud and virtualized network environments.|$|R
5000|$|Smart Cells are {{currently}} in {{the research and development}} stage but support <b>software-defined</b> <b>networks</b> which are proliferating the current mobile network structure, led by AT&T's adoption. According to John Donovan (AT&T), [...] "This is the way we will build our network.".|$|R
50|$|Aryaka is a SD-WAN {{company that}} {{provides}} <b>software-defined</b> <b>network</b> connectivity and application delivery to globally distributed enterprises. Aryaka is headquartered in Milpitas, California with additional offices located in Plano, Texas, Bangalore, India, Beijing, China, and Singapore.|$|E
50|$|Tata Communications {{uses its}} network to deliver network {{services}} and <b>software-defined</b> <b>network</b> platforms, such as Ethernet, SD-WAN, Content delivery network (CDN), Internet, Multiprotocol Label Switching (MPLS) and Private Line. It {{has more than}} 400 Points of Presence (POP) globally with data centre and colocation in 44 sites.|$|E
5000|$|In computing, [...] (network statistics) is a {{command-line}} {{network utility}} tool that displays network connections for the Transmission Control Protocol (both incoming and outgoing), routing tables, {{and a number}} of network interface (network interface controller or <b>software-defined</b> <b>network</b> interface) and network protocol statistics. It is available on Unix-like operating systems including macOS, Linux, Solaris, and BSD, and is available on Windows NT-based operating systems including Windows XP, Windows Vista, Windows 7, Windows 8 and Windows 10.|$|E
30|$|And, if the <b>software-defined</b> <b>networks</b> are programmable, why not {{to develop}} a {{programming}} language for them? This is {{the objective of the}} Frenetic language [71]. Rexford recently presented a discussion on programming languages for SDN [72]. Other recent projects include SDN compilers [73] and debuggers [74].|$|R
5000|$|The rise of virtualized {{networks}} functions (NFV) and <b>software-defined</b> <b>networks</b> (SDN) {{create a}} new, much more dynamic {{context in which}} service providers must execute many more service and network design decisions than with traditional (physical) networks. As such, the greater potential for speed and agility {{points to the need}} for automated decision-making.|$|R
40|$|The study {{considers}} {{the issues of}} using the <b>software-defined</b> <b>networks,</b> {{the current state of}} the research trends in this area and the most significant projects. The simulation of a high-performance computer network for increase in the performance of the university computing cluster due to the optimization of topology and network traffic between the computational nodes is describe...|$|R
50|$|Today, {{the company}} has its own fab in Sunnyvale, with {{component}} packaging occurring in Allentown, Pennsylvania, plus the former Transmode facility in Stockholm. For many of its products, Infinera designs and manufactures in-house the photonic integrated circuits (PICs), the ASIC chips, and the hardware and software systems, including operating and management systems and <b>software-defined</b> <b>network</b> (SDN) software to extend network virtualization into the optical layer. The company refers to its combined component development, product development and system manufacturing as vertically integrated.|$|E
50|$|From 2010 to September 2011, Juniper made six {{acquisitions}} and invested in eight companies. Often Juniper acquired early-stage startups, developing their technology, than {{selling it to}} pre-existing Juniper clients. Juniper acquired two digital video companies, Ankeena Networks and Blackwave Inc., as well as wireless LAN software company Trapeze Networks. In 2012, Juniper acquired Mykonos Software, which develops security software intended to deceive hackers already within the network perimeter. and a developer of <b>software-defined</b> <b>network</b> controllers, Contrail Systems. In 2014 Juniper acquired the software-defined networking (SDN) company WANDL.|$|E
40|$|This diploma work {{describes}} the <b>software-defined</b> <b>network</b> focusing on optical networks. Subsequently designed their own software network that is {{implemented in the}} environment OMNeT ++. This work deals with SDN (<b>software-defined</b> <b>network),</b> and impact on current communications environment {{in the world of}} telecom-munications services...|$|E
40|$|Our {{previous}} experience building systems for middlebox chain composition and scaling in <b>software-defined</b> <b>networks</b> {{has revealed that}} existing mechanisms of flow annotation commonly do not survive middlebox-traversals, or suffer from extreme identifier domain limitations resulting in excessive flow table size. In this paper, we analyze the structural artifacts resulting in these challenges, and offer a framework for describing the behavior of middleboxes based on actions taken on traversing packets. We then present a novel mechanism for flow annotation that features an identifier domain significantly larger than existing techniques, that is transparent to hosts traversed, and that conserves flow-table resources by requiring {{only a small number}} of match rules and actions in most switches. We evaluate said technique, showing that it requires less per-switch state than conventional techniques. We then describe extensions allowing implementation of this architecture within a broader class of systems. Finally, we close with architectural suggestions for enabling straightforward integration of middleboxes within <b>software-defined</b> <b>networks...</b>|$|R
40|$|<b>Software-defined</b> <b>networks</b> {{decouple}} {{the control}} plane {{from the data}} plane, enabling researchers to evaluate protocols and network configurations through the centralized point of control, the controller. They provide easy management and automation, scalability, and flexibility in the traditional computer network. In spite of these advantages, <b>software-defined</b> <b>networks</b> fall prey to various denial-of-service attacks specific to network protocols and applications despite their simplicity. There {{is a need to}} implement intelligence in the controller as a countermeasure for not only the various types of denial-of-service attacks but also the increasing sophistication involved in them. In this paper, an intelligent threat-aware response system is proposed for defending against any attack by using reinforcement learning. Reinforcement learning can acquire intelligence for detection and reactive actions through experience with various attacks. This experience is obtained from interactions with the computer network through the controller. With the combination of reinforcement learning and the software-defined networking controller, the goal of the autonomous threat response system can be achieved...|$|R
30|$|Junaid Qadir is an Assistant Professor at the School of Electrical Engineering and Computer Sciences (SEECS), National University of Sciences and Technology (NUST), Pakistan. He is {{also the}} Director of the Cognet Lab at SEECS. He {{completed}} his BE in Electrical Engineering from UET, Lahore, Pakistan and his PhD from University of New South Wales, Australia in 2008. His research interests include cognitive radio networks, wireless <b>networks,</b> and <b>software-defined</b> <b>networks.</b>|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedSoftware-defined networks are revolutionizing networking by providing unprecedented visibility into {{and control over}} data communication networks. The focus of this work {{is to develop a}} method to extract network features, develop a closed-loop control framework for a <b>software-defined</b> <b>network,</b> and build a test bed to validate the proposed scheme. The method developed to extract the network features is called the dual-basis analysis, which is based on the eigendecomposition of a weighted graph that accounts for the network topology and traffic load. A <b>software-defined</b> <b>network</b> closed-loop control scheme is developed; the scheme is modeled after a closed-loop control system that includes an observer and a controller. A particle filter and phantom node are used to estimate link data rates and identify the onset of congestion. Based on the outputs of the observer, the controller is able to balance traffic throughout the network to minimize congestion. A <b>software-defined</b> <b>network</b> test bed is developed to evaluate the proposed dual-basis representation and the closed-loop control scheme. The test bed is a real-world implementation of a <b>software-defined</b> <b>network</b> that consists of 13 switches and one controller. The test bed ensures that the proposed schemes are suitable even when applied in a hardware or software implementation. Lieutenant Commander, United States Nav...|$|E
30|$|Rapid {{prototyping}} of 3 GPP compliant and non-compliant use cases, and {{new concepts}} towards 5 G, from Machine-to-Machine/Internet of Things (M 2 M/IoT) and <b>Software-Defined</b> <b>Network</b> (SDN) to Cloud-RAN (C-RAN) and massive Multiple Input Multiple Output (MIMO).|$|E
40|$|We present our <b>Software-defined</b> <b>network</b> Mobile Offloading aR-chitecturE (SMORE). SMORE realizes traffic {{offloading}} {{in mobile}} networks without requiring any {{changes to the}} functionality of ex-isting mobile network nodes. At the same time, it is fully aware of mobile network functionality, including mobility. Categories and Subject Descriptors C. 2. 1 [Network Architecture and Design]: Wireless communicatio...|$|E
40|$|In <b>software-defined</b> <b>networks</b> (SDN), the {{separation}} of the control and data-plane moves the concurrency control from the data-plane to a separate, now logically centralized controller program. As a result, despite its intention to simplify programming, {{the separation}} forces the programmer to deal with a spectrum of concurrent events (e. g. execution of controller programs, in-flight packets), a task that is notoriously challenging and error-prone. It is not even clear wha...|$|R
30|$|Ramachandran Ramjee: <b>Software-defined</b> <b>networks</b> {{represent}} {{a fundamental shift}} from how networks are built and managed today. It is built upon three key changes: i) the forwarding and control functions, that are typically integrated within a router, are separated; ii) the proprietary interface between the control and forwarding functions is replaced by an open and standardized interface; and iii) the control functions that were previously distributed across all the routers in a network are logically centralized.|$|R
30|$|Nadeem Ahmed {{received}} the BE {{degree from the}} University of Engineering and Technology, Lahore, Pakistan and the MS and PhD degrees in computer sciences from University of New South Wales (UNSW), Sydney, Australia in 2000 and 2007, respectively. He is currently an Assistant Professor at the School of Electrical Engineering and Computer Sciences (SEECS), National University of Sciences and Technology (NUST), Pakistan. His research interests include wireless sensor <b>networks,</b> <b>software-defined</b> <b>networks</b> and mobile ad-hoc networks.|$|R
40|$|A multidomain and multitechnology {{optical network}} {{orchestration}} is demonstrated {{in an international}} testbed located in Japan, the U. K., and Spain. The application-based network operations architecture is proposed as a carrier <b>software-defined</b> <b>network</b> solution for provisioning end-to-end optical transport services through a multidomain multitechnology network scenario, consisting of a 46 – 108 Gb/s variable-capacity OpenFlow-capable optical packet switching network and a programmable, flexi-grid elastic optical path network...|$|E
40|$|We present AutoSlice, a {{virtualization}} layer that automates {{the deployment}} {{and operation of}} <b>software-defined</b> <b>network</b> (SDN) slices on top of shared network infrastructures. Auto-Slice enables substrate providers to resell their SDN to mul-tiple tenants while minimizing operator intervention. At the same time, tenants are given the means to lease pro-grammable network slices enabling the deployment of ar-bitrary services based on SDN principles. We outline the control plane architecture of AutoSlice and discuss the most challenging aspects of the forwarding plane design with em-phasis on scalability...|$|E
40|$|International audienceIt {{is widely}} {{accepted}} {{that the network}} {{of the future will}} require a greater degree of service awareness and optimal use of network resources. This article presents an architectural design for an open <b>software-defined</b> <b>network</b> infrastructure that enables the composition of fast and guaranteed services in an efficient manner and the execution of these services in an adaptive way, taking into account better shared network resources provided by network virtualization. Validation results are provided with special emphasis on service deployment scalability over virtualized network infrastructures...|$|E
40|$|International audienceDespite a {{long history}} of {{research}} into advanced optical functionalities, they have seen little use in practical networks, chiefly because they seldom fit in with existing network paradigms, especially under nonideal conditions. <b>Software-defined</b> <b>networks,</b> on the other hand, aim at expressing complex network architectures in a simpler way. We seek to determine if such an approach can help design networks that fully use the potential of optical functionalities and, if so, to quantify their benefit...|$|R
40|$|Abstract: This {{position}} paper identifies the increasing {{role of the}} controller in radios and radio networks. The paper defines wireless <b>software-defined</b> <b>networks.</b> A new cognitive radio ontology is proposed that is a hierarchical abstract description of the communication/networking scenario, RF devices, policies, and tasks. Radio protocols can also be described in a similar way. The ontology provides awareness and supports reasoning by the controller and applies to any RF device. Directions for future work are also briefly discussed...|$|R
40|$|Presence of a logically {{centralized}} controller in <b>software-defined</b> <b>networks</b> enables {{smart and}} fine-grained management of network traffic. Generally, traffic management includes measurement, analysis {{and control of}} traffic {{in order to improve}} resource utilization. This is done by inspecting corresponding performance requirements using metrics such as packet delay, jitter, loss rate and bandwidth utilization from global network view. There has been many works regarding traffic management of <b>software-defined</b> <b>networks</b> and how it could help to efficiently allocate resources. However, the vast majority of these solutions are bounded to indirect information retrieved within the border of ingress and egress switches. This means that the three stage loop of measurement, analysis and control is performed on switches in between this border while the traffic flowing in network originates from applications on end hosts. In this work, we present a framework for incorporating network applications into the task of traffic management using the concept of software-defined networking. We demonstrate how this could help applications to receive desired level of quality of service by implementing a prototype of an API for flow bandwidth reservation using OpenFlow and OVSDB protocols...|$|R
40|$|Flexible PON are future {{paradigm}} {{in parallel with}} flexible and elastic optical networks are under research for core networks. In {{the same way as}} those backbone optical networks can be significantly improved by following <b>software-defined</b> <b>network</b> (SDN) techniques, it is described how SDN PONs can be implemented by highly spectral efficient digital modulation formats. A main challenge is the implementation by cost effective devices. We will show the progress in alternatives implementations and adequacy of diverse modulation formats to cost effective bandwidth limited optical sources and receivers. Postprint (published version...|$|E
40|$|Vehicular network {{architectures}} {{are being}} reviewed and re-designed to meet requirements for increasing data rates and flexibility driven {{in part by}} the adoption of Connected and Automated Vehicles (CAV) strategies. A progressive move from traditional bus based networks, such as CAN, to Ethernet-based network architectures is being considered across the automotive industry. In this paper we advocate for an in-vehicle <b>Software-Defined</b> <b>Network</b> architecture and discuss benefits that such a shift in the architectural paradigm will bring by strengthening cyber-security defences and enabling a fail-operational capability through network programmability and provably correct networks...|$|E
40|$|The aim of {{this letter}} is to propose an {{analytical}} model to study the performance of <b>Software-Defined</b> <b>Network</b> (SDN) switches. Here, SDN switch performance {{is defined as the}} time that an SDN switch needs to process packet without the interaction of controller. We exploit the capabilities of queueing theory based M/Geo/ 1 model to analyze the key factors, flowtable size, packet arrival rate, number of rules, and position of rules. The analytical model is validated using extensive simulations. Our study reveals that these factors have significant influence on the performance of an SDN switch...|$|E
40|$|<b>Software-defined</b> <b>networks</b> (SDN) are a novel {{paradigm}} of networking which became an enabler technology for many modern {{applications such as}} network virtualization, policy-based access control and many others. Software can provide flexibility and fast-paced innovations in the networking; however, it has a complex nature. In this connection there is an increasing necessity of means for assuring its correctness and security. Abstract models for SDN can tackle these challenges. This paper addresses to confidentiality and some integrity properties of SDNs. These are critical properties for multi-tenant SDN environments, since the network management software must ensure that no confidential data of one tenant are leaked to other tenants in spite of using the same physical infrastructure. We define a notion of end-to-end security in context of <b>software-defined</b> <b>networks</b> and propose a semantic model where the reasoning is possible about confidentiality, and we can check that confidential information flows do not interfere with non-confidential ones. We show that the model can be extended in order to reason about networks with secure and insecure links which can arise, for example, in wireless environments. The article is published in the authors’ wording. </p...|$|R
50|$|Frenetic is a domain-specific {{language}} for programming <b>software-defined</b> <b>networks</b> (SDNs). This domain-specific programming language allows network operators, rather than manually configuring each connected network device, to program the network as a whole. Frenetic {{is designed to}} solve major OpenFlow/NOX programming problems. In particular, Frenetic introduces a set of purely functional abstractions that enable modular program development, defines high-level, programmer-centric packet-processing operators, and eliminates many of the difficulties of the two-tier programming model by introducing a see-every-packet programming paradigm. Hence Frenetic is a functional reactive programming language operating at a packet level of abstraction.|$|R
40|$|Asilomar 2014 <b>Software-defined</b> <b>networks</b> (SDN) are an {{emerging}} technology that offers to simplify networking devices by centralizing the network layer functions and allowing adaptively programmable traffic flows. We propose using spectral graph theory methods {{to identify and}} locate congestion in a network. The analysis of the balanced traffic case yields an efficient solution for congestion identification. The unbalanced case demonstrates a distinct drop in connectivity {{that can be used}} to determine the onset of congestion. The eigenvectors of the Laplacian matrix are used to locate the congestion and achieve effective graph partitioning...|$|R
