0|9286|Public
40|$|AbstractWe {{develop a}} method for {{clustering}} all types of belief functions, in particular non-consonant belief functions. Such clustering is done when the belief functions concern multiple events, and all belief functions are mixed up. Clustering is performed by decomposing all belief <b>functions</b> into <b>simple</b> <b>support</b> and inverse <b>simple</b> <b>support</b> <b>functions</b> that are clustered based on their pairwise generalized weights of conflict, constrained by weights of attraction assigned {{to keep track of}} all decompositions. The generalized conflict c∈(-∞,∞) and generalized weight of conflict J-∈(-∞,∞) are derived in the combination of <b>simple</b> <b>support</b> and inverse <b>simple</b> <b>support</b> <b>functions...</b>|$|R
40|$|In {{this paper}} we develop {{a method for}} {{clustering}} all types of belief functions, in particular non-consonant belief functions. Such clustering is done when the belief functions concern multiple events, and all belief functions are mixed up. Clustering is performed by decomposing all belief <b>functions</b> into <b>simple</b> <b>support</b> and inverse <b>simple</b> <b>support</b> <b>functions</b> that are clustered based on their pairwise generalized weights of conflict, constrained by weights of attraction assigned {{to keep track of}} all decompositions. The generalized conflict c ∈ (−∞, ∞) and generalized weight of conflict J − ∈ (−∞, ∞) are derived in the combination of <b>simple</b> <b>support</b> and inverse <b>simple</b> <b>support</b> <b>functions...</b>|$|R
40|$|International audienceWe {{extend the}} notion of belief {{function}} to the case where the underlying structure is no more the Boolean lattice of subsets of some universal set, but any lattice, which we will endow with a minimal set of properties according to our needs. We show that all classical constructions and definitions (e. g., mass allocation, commonality function, plausibility functions, necessity measures with nested focal elements, possibility distributions, Dempster rule of combination, decomposition w. r. t. <b>simple</b> <b>support</b> <b>functions,</b> etc.) remain valid in this general setting. Moreover, our proof of decomposition of belief <b>functions</b> into <b>simple</b> <b>support</b> <b>functions</b> is much <b>simpler</b> and general than the original one by Shafer...|$|R
40|$|In many {{applications}} it {{is required to}} have a curvature-dependent surface sampling, based on a local shape analysis. In this work we show how this {{can be achieved by}} using the <b>support</b> <b>function</b> (SF) representation of a surface. This representation, a classical tool in Convex Geometry, has been recently considered in CAD problems for computing surface offsets and for analyzing curvatures. Starting from the observation that triangular B´ezier spline surfaces have quite <b>simple</b> <b>support</b> <b>functions,</b> we approximate any given free-form surface by a quadratic triangular B´ezier spline surface. Then the corresponding approximate SF representation can be efficiently exploited to produce a curvature dependent sampling of the approximated surface...|$|R
40|$|Abstract. In {{this paper}} we define and derive an {{internal}} conflict of a belief function We decompose the belief function in question into {{a set of}} generalized <b>simple</b> <b>support</b> <b>functions</b> (GSSFs). Removing the single GSSF supporting the empty set we obtain {{the base of the}} belief function as the remaining GSSFs. Combining all GSSFs of the base set, we obtain a base belief function by definition. We define the conflict in Dempster’s rule of the combination of the base set as the internal conflict of the belief function. Previously the conflict of Dempster’s rule {{has been used as a}} distance measure only between consonant belief functions on a conceptual level modeling the disagreement between two sources. Using the internal conflict of a belief function we are able to extend this also to non-consonant belief functions. ...|$|R
40|$|Existing {{cognitive}} agent programming languages {{that are}} based on the BDI model employ logical representation and reasoning for implementing the beliefs of agents. In these programming languages, the beliefs are assumed to be certain, i. e. an implemented agent can believe a proposition or not. These programming languages fail to capture the underlying uncertainty of the agent’s beliefs which is essential for many real world agent applications. We introduce Dempster-Shafer theory as a convenient method to model uncertainty in agent’s beliefs. We show that, using <b>simple</b> <b>support</b> <b>functions</b> as a representation for the agent’s beliefs, the computational complexity of Dempster’s Rule of Combination can be controlled. In particular, the certainty value of a proposition can be deduced from the beliefs of agents, without having to calculate the combination of Dempster-Shafer mass functions...|$|R
40|$|Rule-based {{expert systems}} {{must deal with}} {{uncertain}} data, subjective expert opinions, and inaccurate decision rules. Computer scientists and psychologists have proposed and implemented a number of belief languages widely used in applied systems, and their normative validity is clearly an important question, both on practical as well on theoretical grounds. Several well-know belief languages are reviewed, and both previous work and new insights into their Bayesian interpretations are presented. In particular, the authors focus on three alternative belief-update models the certainty factors calculus, Dempster-Shafer <b>simple</b> <b>support</b> <b>functions,</b> and the descriptive contrast/inertia model. Important "dialectsâ of these languages are shown to be isomorphic {{to each other and}} to a special case of Bayesian inference. Parts of this analysis were carried out by other authors; these results were extended and consolidated using an analytic technique designed to study the kinship of belief languages in general. ...|$|R
40|$|We often trust {{embedded}} systems with mission-critical functions, and even our own lives. But the designers of such systems (and especially their managers) are often domain experts {{who have not}} been formally trained in software development. While many {{embedded systems}} work well, in my design reviews I frequently see problems ranging from the subtle to the catastrophic. I have identified commonly occurring technical, process, and quality assurance issues based on my experience performing more than 135 industry design reviews. Common problems include a lack of embedded-specific software engineering skills, software process gaps, and a failure to appreciate that more than just product-level testing is required to create high quality software. Most of these problems cannot simply be fixed by adopting a tool, but rather require a change of culture and perspective in engineering organizations. All too often, the developers and their management simply don’t realize they have gotten in over their heads as their product’s software has escalated from performing a <b>simple</b> <b>supporting</b> <b>function</b> to providing make-or-break product functionality...|$|R
40|$|Abstract: It {{is quite}} common in real world {{situations}} to form beliefs under Dempster-Shafer (DS) theory on various variables from a single source. This is true, in particular, in auditing. Also, the judgment about these beliefs is easily made in terms of <b>simple</b> <b>support</b> <b>functions</b> on individual variables. However, for propagating beliefs in a network of variables, one needs to convert these beliefs on individual variables to beliefs on the joint space of the variables pertaining to the single source of evidence. Although there are many possible solutions to the above problem that will yield beliefs on the joint space with the desired marginal beliefs, there is no method that will guarantee that the beliefs are derived from the same source, fully dependent evidence. In this article, we describe such a procedure based on a maximal order decomposition algorithm. The procedure is computationally efficient and is supported by objective chi-square and entropy criteria. While such assignments are not unique, alternative procedures that have been suggested, such as linear programming, are more computationally intensive and result in similar m-value determinations. It {{should be noted that}} our maximal order decomposition (i. e., minimum entropy) approach provides m-values on the joint space for fully dependent items of evidence...|$|R
40|$|Inappropriate use of Dempster's rule of {{combination}} has {{led some}} authors to reject the Dempster-Shafer model, arguing that it leads to supposedly unacceptable conclusions when defaults are involved. A most classic example is about the penguin Tweety. This paper will successively present: {{the origin of the}} miss-management of the Tweety example; two types of default; the correct solution for both types based on the transferable belief model (our interpretation of the Dempster-Shafer model (Shafer 1976, Smets 1988)); Except when explicitly stated, all belief functions used in this paper are <b>simple</b> <b>support</b> <b>functions,</b> i. e. belief functions for which only one proposition (the focus) of the frame of discernment receives a positive basic belief mass with the remaining mass being given to the tautology. Each belief function will be described by its focus and the weight of the focus (e. g. m(A) =. 9). Computation of the basic belief masses are always performed by vacuously extending each belief function to the product space built from all variables involved, combining them on that space by Dempster's rule of combination, and projecting the result to the space corresponding to each individual variable. Comment: Appears in Proceedings of the Sixth Conference on Uncertainty in Artificial Intelligence (UAI 1990...|$|R
40|$|Biosensors are of {{increasing}} {{interest for the}} detection of bacterial pathogens in many applications such as human, animal and plant health, as well as food and water safety. Membranes and membrane-like structures have been integral part of several pathogen detection platforms. Such structures may serve as <b>simple</b> mechanical <b>support,</b> <b>function</b> {{as a part of the}} transduction mechanism, may be used to filter out or concentrate pathogens, and may be engineered to specifically house active proteins. This review focuses on membrane materials, their associated biosensing applications, chemical linking procedures, and transduction mechanisms. The sensitivity of membrane biosensors is discussed, and the state of the field is evaluated and summarized...|$|R
40|$|Many {{parallel}} algorithms {{have been}} proposed for find ing the correct match es between feature points in random dot stereograms. Some algorithms have used local support funct ions and have achieved globally good solut ions by using relaxation in a parallel network. Recently, Prazdny 1 has shown that iterat ion is unnecessary if a much larger <b>support</b> <b>function</b> is used, and that this <b>support</b> <b>function</b> can be desiqned to work for stereograms containing transp arent surfaces. We describe a <b>simple</b> glob al <b>support</b> <b>function</b> that can be eff iciently implemented by relaxation in a network with only local connectivity. This funct ion, which is the solut ion to the heat diffusion equat ion, does not {{work as well as}} Prazdny 's. By using the difference of two heat equations, we can improve the performance 'and get results almost identical to Prazdny's. at...|$|R
5000|$|Python <b>supports</b> <b>simple</b> {{anonymous}} <b>functions</b> {{through the}} lambda form. The executable {{body of the}} lambda must be an expression and can't be a statement, which is a restriction that limits its utility. The value returned by the lambda {{is the value of}} the contained expression. Lambda forms can be used anywhere ordinary functions can. However these restrictions make it a very limited version of a normal function. Here is an example: ...|$|R
40|$|A unified {{framework}} for evidential reasoning is proposed. In this framework, uncertainties {{are represented by}} intervals and modeled by belief functions. The procedure for belief conjunction is proposed. The belief combination and belief propagation are shown to be special cases of belief conjunction. By properly representing evidence in the common framework, belief combination is shown to be the belief conjunction procedure plus the normalization process. When evidence are independent, the belief combination procedure is equivalent to Dempster 2 ̆ 7 s rule of combination. The result of the belief propagation procedure is shown to be an interpolation between total ignorance and the uncertainty associated with the rule. The belief propagation procedure is shown to be associative but not commutative. The associativity of belief propagation implies the existence of chaining syllogism. ^ The evidential framework is extended to handle dependent evidence. An ad-hoc interpolative procedure for belief conjunction and belief combination of dependent evidence with degree of dependency ρ is proposed. Three types of structural dependencies are discussed. (1) All nodes in the inference network are OR nodes. (2) All nodes are AND nodes. (3) Mixture of AND/OR nodes. ^ A modification to Dempster 2 ̆ 7 s rule is proposed to ovecome the counter-intuitive results due to the normalization process. A new interpretation for the rules in the framework is proposed. It is shown that this interpretation yields tighter intervals for belief propagation procedure while maintaining the interpolative property. This interpretation is extended to fuzzy sets and approximate reasoning. It is shown that the proposed belief propagation procedure is a further generalization of Zadeh 2 ̆ 7 s generalized modus ponens. ^ Some aspects of the complexity issue in the belief function approach are discussed. It is shown that, when the hypotheses space is hierarchically structured, then any basic probability assignment function whose focal elements are nodes in the hierarchy is a separable belief function. Furthermore, this separable belief function can be decomposed into <b>simple</b> <b>support</b> <b>functions</b> in polynomial time. ...|$|R
40|$|This thesis {{researches}} practice-motivated {{organization of}} digital audio {{in the context}} of sound-based music, including modeling, structuring, characterization, and visualization. It is based on two main keystones: first, the perceptual orientation of those techniques, and second, the focus on textural sound material. I propose a model for the compact representation of textural sound, incorporating psy-choacoustically informed timbral and micro-temporal aspects. A <b>simple</b> distance <b>function</b> <b>supports</b> the application of algorithms for search and retrieval, and clustering and classifi-cation. This technique is demonstrated {{in the context of}} an artistic audiovisual installation. Utilizing this model, I explore structure discovery in digital audio, covering segmen-tation into slices of coherent content and semi-automatic identification of representative sound materials. These techniques are useful for quickly surveying audio data, or for preprocessing musical material. The method is evaluated against examples of music an-notation for two well-known works of electroacoustic music. A central topic of the thesis is the inquiry into perceptually meaningful description...|$|R
40|$|Abstract. We {{study the}} support and {{essential}} <b>support</b> <b>functions</b> of a norm-closed bimodule of a nest algebra. An allowable <b>support</b> <b>function</b> pair deter-mines a maximal bimodule. There is also a natural candidate for the minimal bimodule for a given <b>support</b> <b>function</b> pair. We determine precisely when this candidate is the minimal element. In the other cases, this module is still the intersection of all bimodules with a given <b>support</b> <b>function</b> pair, {{but it is not}} in this class itself...|$|R
40|$|The main aim of {{this thesis}} is to extend {{the concept of the}} <b>support</b> <b>function</b> from bounded {{non-empty}} convex sets. The idea is to find a suitable codomain Dd+/-, replacing the codomain R of Minkowski 2 ̆ 7 s <b>support</b> <b>functions,</b> so that convex subsets of Rd are determined uniquely by their D d+/ [...] valued <b>support</b> <b>functions</b> defined on Rd. Conditions must also be found, characterizing the <b>support</b> <b>functions</b> among all the Dd +/ [...] valued functions on Rd...|$|R
5000|$|In mathematics, the <b>support</b> <b>function</b> hA of a {{non-empty}} closed convex set A in {{describes the}} (signed) distances of supporting hyperplanes of A from the origin. The <b>support</b> <b>function</b> is a convex function on [...]Any non-empty closed convex set A is uniquely determined by hA. Furthermore, the <b>support</b> <b>function,</b> {{as a function}} of the set A is compatible with many natural geometric operations, like scaling, translation, rotation and Minkowski addition. Due to these properties, the <b>support</b> <b>function</b> is one of the most central basic concepts in convex geometry.|$|R
40|$|Abstract. Shafer [1] defined weights of {{evidence}} {{and the weight of}} internal conflict for separable <b>support</b> <b>functions.</b> He also formulated a conjecture, the weight-ofconflict conjecture, which implies that these definitions can be extended in a natural way to all <b>support</b> <b>functions.</b> In this paper I show that the extension to <b>support</b> <b>functions</b> can be carried out whether or not the weight-of-conflict conjecture is true. ...|$|R
40|$|We {{analyze the}} class of {{surfaces}} which are equipped with rational <b>support</b> <b>functions.</b> Any rational <b>support</b> <b>function</b> can be decomposed into a symmetric (even) and an antisymmetric (odd) part. We analyze certain geometric properties of surfaces with odd and even rational <b>support</b> <b>functions.</b> In particular it is shown that odd rational <b>support</b> <b>functions</b> correspond to those rational surfaces which can be equipped with a linear field of normal vectors, which were discussed by Sampoli et al. (2006). As shown recently, this class of surfaces includes non–developable quadratic triangular Bézier surface patches (Lávička and Bastl, 2007; Peternell and Odehnal, 2007) ...|$|R
50|$|Many authors {{restrict}} the <b>support</b> <b>function</b> to the Euclidean unit sphere and {{consider it as}} a function on Sn-1. The homogeneity property shows that this restriction determines the <b>support</b> <b>function</b> on , as defined above.|$|R
40|$|The <b>support</b> <b>function</b> of a free-form-surface {{is closely}} related to the {{implicit}} equation of the dual surface, and the process of computing both the dual surface and the <b>support</b> <b>function</b> can be seen as dual implicitization. The <b>support</b> <b>function</b> can be used to parameterize a surface by its inverse Gauss map. This map makes it relatively simple to study isophotes (which are simply images of spherical circles) and offset surfaces (which are obtained by adding the offsetting distance to the <b>support</b> <b>function).</b> We present several classes of surfaces which admit a particularly simple computation of the dual surfaces and of the <b>support</b> <b>function.</b> These include quadratic polynomial surfaces, ruled surfaces with direction vectors of low degree and polynomial translational surfaces of bidegree (3, 2). In addition, we use a quasi-interpolation scheme for bivariate quadratic splines over criss-cross triangulations in order to formulate a method for approximating the <b>support</b> <b>function.</b> The inverse Gauss maps of the bivariate quadratic spline surfaces are computed and used for approximate isophote computation. The approximation order of the isophote approximation is shown to be 2...|$|R
30|$|Very recently, Kim and Lee [15] {{introduce}} the nonsmooth multiobjective programming problems involving locally Lipschitz <b>functions</b> and <b>support</b> <b>functions.</b> They introduced Karush-Kuhn-Tucker optimality conditions with <b>support</b> <b>functions</b> and established duality theorems for (weak) Pareto-optimal solutions.|$|R
40|$|We {{introduce}} numerical optimization of multi-site <b>support</b> <b>functions</b> in the linear-scaling DFT code CONQUEST. Multi-site <b>support</b> <b>functions,</b> {{which are}} linear combinations of pseudo-atomic orbitals on a target atom and those neighbours within a cutoff, have been recently proposed {{to reduce the}} number of <b>support</b> <b>functions</b> to the minimal basis while keeping the accuracy of a large basis [J. Chem. Theory Comput., 2014, 10, 4813]. The coefficients were determined by using the local filter diagonalization (LFD) method [Phys. Rev. B, 2009, 80, 205104]. We analyse the effect of numerical optimization of the coefficients produced by the LFD method. Tests on crystalline silicon, a benzene molecule and hydrated DNA systems show that the optimization improves the accuracy of the multi-site <b>support</b> <b>functions</b> with small cutoffs. It is also confirmed that the optimization guarantees the variational energy minimizations with multi-site <b>support</b> <b>functions.</b> Comment: 25 pages, 3 figures, submitted to Phys. Chem. Chem. Phy...|$|R
5000|$|The elastic {{deflection}} (at the midpoint C) of a beam, loaded at its center, <b>supported</b> by two <b>simple</b> <b>supports</b> is given by: ...|$|R
5000|$|Instead {{of solving}} for the Kohn-Sham eigenstates as normal DFT codes do, CONQUEST solves {{for the one}} {{particle}} density matrix, [...] To make the problem computationally tractable, the density matrix is written in separable form:,where [...] is a <b>support</b> <b>function</b> centred on atom i (with <b>support</b> <b>functions</b> on the same atom notated by [...] ) and [...] is the density matrix in {{the basis of the}} <b>support</b> <b>functions.</b> [...] The ground state is found as a series of nested loops: ...|$|R
5000|$|It can {{be shown}} that the {{convolution}} of a compactly <b>supported</b> <b>function</b> and a distribution is a smooth function. If the distribution T has compact support as well, then f∗T is a compactly <b>supported</b> <b>function,</b> and the Titchmarsh convolution theorem [...] implies that ...|$|R
30|$|Kim and Bae [10] {{formulated}} nondifferentiable multiobjective {{programs with}} the <b>support</b> <b>functions.</b> Also, Bae et al. [11] established duality theorems for nondifferentiable multiobjective programming problems under generalized convexity assumptions. Also, Kim and Lee [12] introduced the nonsmooth multiobjective programming problems involving locally Lipschitz <b>functions</b> and <b>support</b> <b>functions.</b> They introduced Karush-Kuhn-Tucker type optimality conditions and established duality theorems for (weak) Pareto-optimal solutions. Recently, Bae and Kim [10] established optimality conditions and duality theorems for a nondifferentiable multiobjective programming problem with <b>support</b> <b>functions.</b>|$|R
5000|$|Fixed (and {{potentially}} also cleared) samples can be {{glued to}} a <b>simple</b> <b>support</b> or holder and {{can stay in}} their fixing solution during imaging.|$|R
5000|$|The elastic {{deflection}} (at the midpoint C) on a beam <b>supported</b> by two <b>simple</b> <b>supports,</b> under a uniform load (as pictured) is given by: ...|$|R
5000|$|The maximum elastic {{deflection}} on a beam <b>supported</b> by two <b>simple</b> <b>supports,</b> loaded {{at a distance}} [...] from the closest support, is given by: ...|$|R
2500|$|It can {{be shown}} that the {{convolution}} of a compactly <b>supported</b> <b>function</b> and a distribution is a smooth function. [...] If the distribution T has compact support as well, then f∗T is a compactly <b>supported</b> <b>function,</b> and the Titchmarsh convolution theorem [...] implies that ...|$|R
40|$|AbstractIt is {{proved that}} for a convex {{reflecting}} scatterer the <b>support</b> <b>function</b> is uniquely determined by the scattering amplitude (in particular, by the backscattering amplitude). The <b>support</b> <b>function</b> determines the position, orientation and {{the shape of the}} scatterer uniquely. Stability of the solution is discussed...|$|R
40|$|The {{integration}} and checkout activities of Spacelab payloads consist {{of two major}} sets of tasks: <b>support</b> <b>functions,</b> and test and operations. The <b>support</b> <b>functions</b> are definitized and the optimized approach for the accomplishment of these functions are delineated. Comparable data are presented for test and operations activities...|$|R
40|$|The {{interactions}} and <b>support</b> <b>functions</b> required between the crop Yield Model Development (YMD) Project and Soil Moisture (SM) Project are defined. The requirements for YMD support of SM and vice-versa are outlined. Specific tasks {{in support of}} these interfaces are defined for development of <b>support</b> <b>functions...</b>|$|R
30|$|<b>Supporting</b> <b>function</b> {{is applied}} on unit center line.|$|R
