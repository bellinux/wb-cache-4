24|2697|Public
50|$|Computer Scientist (1550 job series) {{positions}} {{involve the}} application of, or research into, computer science methods and techniques to store, manipulate, transform or present information {{by means of}} computer systems. This involves the development, test, and evaluation of automated systems, programs, hardware and <b>software</b> <b>interfacing</b> techniques, and adapting advanced methods and techniques in computer science to solve computer processing requirements. Related Degrees: Computer Science http://www.opm.gov/qualifications/SEC-IV/B/GS1500/1550.HTM Requires a minimum GPA of 2.75, based on the bachelor's degree.|$|E
50|$|Prior to the {{corporate}} takeover by TCS, BaNCS was developed at the Headquarters of Financial Network Services PTY. at the Systems Development office under the base version Office in 70 Rosehill Street, Redfern, Sydney, New South Wales, Australia.Versions 1 through to 7.4 were developed under FNS. Satellite functionality was integrated into the Base Software in subversions from customer sites via the Redfern Projects Office, and managed by the Base Manager into release candidates and separate administration integrated enhancements into documentation and user guides.Two Major branches were developed off the elements from version 2 through to version 4 of the core based initially on AT&T NCR 9800 series Mainframe architecture - creating a UNIX branch and an NT/Windows Server Branch. COBOL Sources were inter-changeable but <b>software</b> <b>interfacing</b> with the OS, such as transaction queues, differed to handle the various implementations written in C and linked into the Microfocus COBOL run time system linked object. scripting also varied across branches to handle operations and non-functional requirements.Major versions featured multicurrency (with spot positions) and multi lingual. To cater for this various front ends were created such as BTM (Branch Terminal Manager), Branch 2000, BEAM handled transactions from Tellers.Major version 6 included three database back ends: Oracle, Informix and DB2.UNIX Was implemented in practice on HP-UX, IBM AIX and AT&T NCR System V UNIX variants. ksh or Korn Shell was the primary script language.Version 7.5 onwards of The BaNCS system was developed by Tata Consultancy Services business unit TCS Financial Solutions.It was developed in COBOL.|$|E
40|$|Ad hoc <b>software</b> <b>interfacing</b> {{occurs when}} one must {{programmatically}} move data from software system A to software system B where A and B were {{never intended to}} interoperate. Ad hoc <b>software</b> <b>interfacing</b> is a common way to construct new, larger software systems from other software systems, by using them as large-grained components. Ad hoc <b>software</b> <b>interfacing,</b> also known as “glue coding”, “low level software interfacing”, etc., has historically been relegated to less skilled programmers who are incapable of developing elegant and maintainable solutions. Ad hoc <b>software</b> <b>interfacing</b> needs a precise framework in which to specify problems and generate solutions. This paper describes a framework based {{on the principles of}} domain-specific language techniques. We demonstrate how many of the features needed for ad hoc <b>software</b> <b>interfacing</b> are available in commercial enterprise application integration servers. 1...|$|E
40|$|Mostly {{technological}} innovation depends on user interface design {{to enhance the}} technical complexity of products that match the end user requirements. The acceptance key of any technological product is user experience that how the user understands the end product. In design process a systematic approach is required to optimize user interface design to ensure optimal performance and usability testing. The main objective {{of this study is}} to identify the challenges and issues related to mobile phone <b>software</b> <b>interface</b> design in context of elderly people. The result of this study will support to mobile phone <b>software</b> <b>interface</b> designers and developers. During the investigation authors are trying to discover the usability problems faced by the elderly people using the current mobile phone <b>software</b> <b>interface.</b> The questionnaire technique was selected to collect the requirements from elderly about the mobile phone <b>software</b> <b>interface.</b> The finding of questionnaires was used to develop design guidelines for low fidelity prototype of mobile phone <b>software</b> <b>interface.</b> Moreover, usability testing was conducting to validate the design of low fidelity prototype. This thesis presents how we design mobile phone <b>software</b> <b>interface</b> for elderly with declining eyesight. Our system enables elderly declining eyesight to use their mobile phone by selecting different display modes...|$|R
50|$|Not be {{confused}} with the FireMonkey <b>software</b> <b>interface.</b>|$|R
5000|$|... #Subtitle level 3: <b>Software</b> <b>interfaces</b> in {{object-oriented}} languages ...|$|R
40|$|Automated Patrol Telescope (APT) This was {{originally}} {{a basis for}} my thesis. I now {{play an active role}} in the ongoing design and development of the APT software. Including tasks such as Linux system administration, CVS-Ant integration, Java development, and <b>software</b> <b>interfacing</b> to several hardware systems. For more information please see: ■ Michael Ashley's APT pag...|$|E
40|$|A microcornputer based {{operating}} system for programming and data acquisition from a two a dimensional target optical multichannel analyzer used for high-speed UV/visible spectroscopy is described. The hardware and <b>software</b> <b>interfacing</b> requirements {{for such a}} system to provide dedicated real time data acquisition is considered. It is found that a relatively simple parallel interface to an inexpensive microcomputer can be properly configured to perform adequately for high-speed image processing...|$|E
40|$|The new {{generation}} of MALDI TOF/TOF instruments {{can be used to}} generate informative identification and relative quantification data using iTRAQ chemistries. This presentation introduces a novel automated iTRAQ relative quantification software package for the AXIMA-TOF 2 MALDI TOF/TOF mass spectrometer. The package uses and extends onwards from existing LC-MALDI <b>software.</b> <b>Interfacing</b> of mass spectral data, relative quantification data, and Mascot search results in an interactive, visual correlation providing a highly practical end-user package...|$|E
40|$|Abstract. This paper firstly {{introduces}} the basic information of CAN bus {{and the general}} method of CAN testing and points out that application layer protocol is hard to test. Secondly, this paper adapts the method of capturing, analyzing, constructing and sending CAN bus data packet to analyze certain oil system <b>software</b> <b>interface</b> protocol. Then, this paper proves this method can be usde to test {{the accuracy of the}} <b>software</b> <b>interface</b> and conduct the further <b>software</b> <b>interface</b> testing. At last,this paper points out the application suggest of this method...|$|R
40|$|A {{comparison}} of hardware and <b>software</b> <b>interfaces</b> shows some differences between them; these differences {{may explain why}} {{it is harder to}} develop modular software than modular hardware. A mathematical model of a <b>software</b> <b>interface</b> interconnection topology is developed to provide {{a better understanding of the}} mechanisms involved in modularization. 1...|$|R
50|$|Its {{standardized}} part {{is defined as}} a <b>software</b> <b>interface</b> specification.|$|R
40|$|Interpretation, analysis, and {{development}} of algorithms have provided the necessary computational programming tools for soil data processing, data handling and analysis. Algorithms {{that have been developed}} thus far, are adequate and have been proven successful for several preliminary and fundamental applications such as <b>software</b> <b>interfacing</b> capabilities, probability distributions, grey level print plotting, contour plotting, isometric data displays, joint probability distributions, boundary mapping, channel registration and ground scene classification. A description of an Earth Resources Flight Data Processor, (ERFDP), which handles and processes earth resources data under a users control is provided...|$|E
40|$|The {{development}} of a new operational system for the Space Station will minimize the time normally spent on performing on-orbit checkout, servicing, and maintenance of an extravehicular activity system of the Space Station. This system, the Checkout, Servicing, and Maintenance System (COSM), is composed of interactive control <b>software</b> <b>interfacing</b> with software simulations of hardware components. The major elements covered in detail include the controller, the EMU simulator and the regenerative life support system. The operational requirements and interactions of the individual elements as well as the protocols are also discussed...|$|E
40|$|Abstract—The paper {{presents}} a novel idea to control computer mouse cursor movement with human eyes. In this paper, a working {{of the product}} {{has been described as}} to how it helps the special people share their knowledge with the world. Number of traditional techniques such as Head and Eye Movement Tracking Systems etc. exist for cursor control by making use of image processing in which light is the primary source. Electro-oculography (EOG) is a new technology to sense eye signals with which the mouse cursor can be controlled. The signals captured using sensors, are first amplified, then noise is removed and then digitized, before being transferred to PC for <b>software</b> <b>interfacing...</b>|$|E
50|$|The <b>software</b> <b>interface</b> is {{available}} in more than 30 languages.|$|R
5000|$|Scheduling OSID {{defines a}} <b>software</b> <b>interface</b> {{abstraction}} for calendaring protocols ...|$|R
5000|$|Promotes open {{digital library}} standards, <b>software,</b> <b>interfaces,</b> and best {{practices}} ...|$|R
40|$|International Telemetering Conference Proceedings / October 22 - 25, 1984 / Riviera Hotel, Las Vegas, NevadaDesigning and {{constructing}} a real time telemetry system for unique applications can involve considerable time to evaluate, choose, acquire, and interface the necessary elements. The {{use of a}} highly versatile single chassis telemetry acquisition system can reduce or obviate the need for external pre- or post-processors {{as well as the}} potentially difficult hardware and <b>software</b> <b>interfacing.</b> It also results in an easily upgradable and generally modifiable system from the development phase, through delivery, and on site by both the designer and user. The basis of the system described here is a parallel/serial multiprocessor whose architecture is programmable...|$|E
40|$|Communication {{between various}} {{broadcast}} equipment {{plays a major}} role in the daily operation of a typical broadcast facility. For example, editing equipment must interface with tape machines, production switchers must interface with font generators and video effect equipment, and satellite ground controllers must interface with satellite dishes and receivers. Communication between these devices may be a simple hardware handshake configuration or a more elaborate software based communications via serial or parallel interfacing. This thesis concerns itself with the <b>software</b> <b>interfacing</b> needed to allow various dissimilar types of equipment to communicate, and therefore, interface with each other. The use of Simple Network Management Protocol (SNMP) in a non-typical manner for the purpose of hardware interfacing is the basis for this work...|$|E
40|$|Abstract—In today’s {{global and}} {{competitive}} market, manufacturing companies {{are working hard}} towards improving their production system performance. Most companies develop production systems that can help in cost reduction. Manufacturing systems consist of different elements including production methods, machines, processes, control and information systems. Human issues {{are an important part}} of manufacturing systems, yet most companies do not pay sufficient attention to them. In this paper, a workforce planning (WP) model is presented. A non-linear programming model is developed in order to minimize the hiring, firing, training and overtime costs. The purpose is to determine the number of workers for each worker type, the number of workers trained, and the number of overtime hours. Moreover, a decision support system (DSS) based on the proposed model is introduced using the Excel-Lingo <b>software</b> <b>interfacing</b> feature. This model will help to improve the interaction between the workers, managers and the technical systems in manufacturing...|$|E
5000|$|Scheduling OSID {{provides}} a <b>software</b> <b>interface</b> abstraction for using calendaring protocols ...|$|R
50|$|It also {{refers to}} the <b>software</b> <b>interface</b> needed to {{implement}} such plugins.|$|R
5000|$|ISO/IEC JTC 1/SC 22, Programming languages, {{their environments}} and system <b>software</b> <b>interfaces</b> ...|$|R
40|$|This paper {{discussed}} on {{the development}} of data logger system for data transferring using Visual Basic (VB) and MAX 232 connection protocols. The microcontroller of PIC 16 F 877 A is used as a main control unit (MCU) for sensors integration which MPLAB is used to write the program and assembly language. The Pic Based Data Logger will be able to log data such as inputs from a mixture of analogue and digital signals up to 4800 bits per second and it has RAM with capacity of 256 byte. The main idea for <b>software</b> <b>interfacing</b> is to store the data to eeprom and the data could be transferred to user computer. Thus desired output in term of graph or other plotting method can be generated for further analysis. Result shows the development techniques for user interfacing system for PIC based datalogger. The main circuit which consists of sensor datalogger for temperature was successfully developed and it can be interfaced with personal computer via serial communicatio...|$|E
40|$|The {{purpose of}} this {{research}} is to develop support system for mapping and calculating advertising tax, study case at Kabupaten LAHAT’s government. The advertisement tax formula is developed by entering selling value as well as the value of strategic location of advertising object. To achieve the objective of the research, the Waterfall model according to Pressman, development system tool in the form of Data Flow Diagram (DFD) and interface design using Case Tools Easy Case Software is applied. Additionally, The MapInfo software has been used during the process of mapping designed. On the other hand, Visual basic was also used as the <b>software</b> <b>interfacing.</b> This research has been produced a system which is able to simplify the procedure to obtain the installing advertising permit and to calculate advertisement tax as well as to add the location node where the advertisement will be installed. In addition, this system is also able to provide the reports more quickly and accurately which is met the user requiremen...|$|E
40|$|This thesis {{outlines}} {{the design of}} a real-time digital signal processing technique for pitch detection and analysis via spectral analysis. A sound?s musical pitch can be determined from its fundamental frequency, and a note that is said to be ?out of tune? will have a fundamental frequency that deviates from the ?in-tune? frequency by a number of Hertz. This technique determines the real-time fundamental frequency of an inputted audio sample and determines its pitch relative to standard ?in-tune? frequencies. The design was first simulated in the MATLAB software environment and tested with controlled pitches before it was examined in the hardware environment to analyze unknown audio inputs in real time. The design was implemented to test feasibility with the Texas Instruments TMS 320 DM 6437 board (DaVinci Video Processor series) and the Texas Instruments TMS 320 C 6713 Digital Signal Processing Starter Kit using MATLAB/Simulink for <b>software</b> <b>interfacing.</b> This design is unique because of its flexibility and adaptation in a graphical user interface, which allows for rapid prototyping and ease of use...|$|E
5000|$|Pseudo {{terminal}} for the <b>software</b> <b>interface</b> {{that provides}} access to virtual terminals ...|$|R
40|$|We {{recently}} developed an audio {{driver in the}} FreeBSD operating system. In this work, we decided to consider compatibility with existing <b>software</b> <b>interfaces</b> only as a secondary issue, to be implemented {{at a later time}} and only for those applications which could not be adapted to the new <b>software</b> <b>interface.</b> This {{turned out to be a}} significant advantage, since it let us design the driver (and particularly, its <b>software</b> <b>interface)</b> looking at the real needs of applications, rather than duplicating existing, old interfaces, and having applications adapt (in many cases suboptimally) to what the driver could offer. The main results of our work is the definition of a <b>software</b> <b>interface</b> for audio devices which is well suited to multimedia applications. The new interface is small, simple but powerful, and allowed several simplifications, and significant performance enhancements, in the applications. In this paper we motivate our design choices, illustrate our interface, and discuss implementati [...] ...|$|R
40|$|The <b>software</b> <b>interface</b> - whether graphical, command-oriented, menu-driven, or in {{the form}} of {{subroutine}} calls - shapes the user`s perception of what software can do. It also establishes upper bounds on software usability. Numerical <b>software</b> <b>interfaces</b> typically are based on the designer`s understanding of how the software should be used. That is a poor foundation for usability, since the features that are ``instinctively right`` from the developer`s perspective are often the very ones that technical programmers find most objectionable or most difficult to learn. This paper discusses how numerical <b>software</b> <b>interfaces</b> can be improved by involving users more actively in design, a process known as user-centered design (UCD). While UCD requires extra organization and effort, it results in much higher levels of usability and can actually reduce software costs. This is true not just for graphical user interfaces, but for all <b>software</b> <b>interfaces.</b> Examples show how UCD improved the usability of a subroutine library, a command language, and an invocation interface...|$|R
40|$|The paper {{presents}} {{the way in}} which there it was put into practice the active control process optimisation, in case of waterwheel pump metallic cases active surface precision work. There are presented not only the issues, but also the experimental results about the manufactured probe’s dimensional control. Regarding the touching issues achievement on the optimisation, the paper insists about some different aspects: The first one refers to the gauge implementation for the active control insurance, having the possibility of the aided by PC dimensional measuring. There is described {{the way in which}} it proceeded in order to obtain the highest dimensional precision as soon as possible. The second part of the paper presents who there were obtained the experimental data about the aided by PC dimensional control, but especially some aspects on the data processing by the point of view of statistics. Key words: active control, statistics, precision, <b>software</b> <b>interfacing</b> 1. WHY THE ACTIVE CONTROL OPTIMISATION? It is known that nowadays a difficult paradox must be solved: How to reduce the energeti...|$|E
40|$|Abstract — Although {{naturally}} {{belonging to}} the user process, hardware parts of codesigned reconfigurable applications execute outside of the operating system (OS) process: they have neither unified memory abstraction with software nor system services provided by the OS. This imposes limitations on hardware and <b>software</b> <b>interfacing,</b> narrows available programming paradigms, and affects application portability. Advanced programming concepts, such as multithreading, usually demand additional activities on the programmer side, to perform memory transfers and enforce memory consistency. In this paper, we introduce a system layer (an OS extension relying on a system hardware extension) that provides: (1) unified virtual memory, (2) platform-agnostic interfacing, and (3) multithreaded execution, for hardware accelerators running within the same OS process with user software. The system layer releases software programmer and hardware designer from interfacing burdens and, still, achieves significant speedups over software with only limited overheads. Virtualmemory-enabled hardware accelerators benefit from all abstractions and services already available to software. To prove our concept in practice and demonstrate the ease of programming, we execute image processing and cryptography applications on reconfigurable systems-on-chip running GNU/Linux that supports virtual memory for multithreaded hardware accelerators. I...|$|E
40|$|With an {{expected}} lifetime of 20 years and {{an expected}} cost of $ 500, the Cal Poly Sustainable Power for Electrical Resources (SuPER) project needed a strong central design. This thesis {{looks at the}} work completed by students over the previous 5 years, {{with an eye on}} the future, to create the phase 2 design. Part of this new structure focuses on a distributed communication bus for monitoring system health and status. Instead of complex and costly computer or FPGA systems, the new system will run solely with microcontrollers. This reduces costs and will hopefully still be used within 5, 10, and 20 years as the number of embedded devices continues to grow globally. The new system design was created using many systems engineering tools and benchmarks, including: requirements breakdown, hardware interfacing, <b>software</b> <b>interfacing,</b> safety, reliability, maintainability, and cost. Major components have been broken down into subsystems with well-defined requirements for implementation. These smaller projects can be completed by future team members as senior projects, independent work, or even Master’s theses. Upon test and integration, these subsystems will come together into a field-ready model to help bring power to the two billion people on Earth lacking it...|$|E
40|$|Abstract [...] The {{usability}} {{evaluation of}} the <b>software</b> <b>interfaces</b> {{is one of the}} prominent concepts in Human Computer Interaction (HCI). In order to increase the usability, the design of <b>software</b> <b>interfaces</b> becomes an important task for HCI experts. This paper describes a new HCI based software development approach called the Usability Evaluation based Model (UEM). The UEM consists of five processes that help Software Engineers work with HCI experts from the beginning until the deployment of the software. However, this model not only bridges the gap between the SE and HCI experts, but it also links the AI experts to make the development process more intelligent. One of the processes in the UEM is the Cognitive Analysis of the <b>Software</b> <b>Interfaces</b> (CASI). CASI is an expert system that helps designers and software developers to evaluate software prototypes in an intelligent way based on user perception and evaluation rules. This paper also presents a case study {{on the development of the}} university online classroom booking system. The system was built using the UEM. The results mentioned in this paper show that with the help of the UEM, more usability problems in the <b>software</b> <b>interfaces</b> can be detected. Hence, enhancing the usability of the <b>software</b> <b>interfaces</b> by an automated UEM is feasible...|$|R
40|$|In {{most of the}} situations, {{usability}} {{evaluations of}} <b>software</b> <b>interfaces</b> are done by usability experts. Using such professionals needs a certain dimension in business. So, {{in a lot of}} small and medium scaled company's, software developers are compelled to learn to manage usability factors. This is not much simpler than training usability engineers on how to create a software application. As a remedy, an expert system CASI for software developers has been designed. In this paper, the expert system of Cognitive Analysis of <b>Software</b> <b>Interfaces</b> (CASI) is outlined to integrate cognitive modelling concepts and is considered as a crucial process for the development of interactive <b>software</b> <b>interfaces.</b> The recommended expert system is entirely dependent on the complete analysis of the user actions and specifications that display the psychological strategy of particular users. Moreover, this system helps designers and software developers to evaluate software prototypes in an intelligent way based on user perception and evaluation views. The paper presents a case study on the development of a rehabilitation database for a person with physical limitations. The results mentioned in this paper show that {{with the help of the}} expert system CASI more usability problems in the <b>software</b> <b>interfaces</b> can be detected. Hence, enhancing the usability of <b>software</b> <b>interfaces</b> by an automated CASI system is feasible...|$|R
50|$|A {{modular design}} {{allowing}} applications and <b>software</b> <b>interfaces</b> {{to be created}} and maintained independently from each other.|$|R
