1979|10000|Public
25|$|The use of {{concurrent}} processes that communicate by message-passing {{has its roots}} in operating <b>system</b> <b>architectures</b> studied in the 1960s. The first widespread distributed systems were local-area networks such as Ethernet, which was invented in the 1970s.|$|E
25|$|Most of the {{machines}} {{in the early days}} of MS-DOS had differing <b>system</b> <b>architectures</b> and there was a certain degree of incompatibility, and subsequently vendor lock-in. Users who began using MS-DOS with their machines were compelled to continue using the version customized for their hardware, or face trying to get all of their proprietary hardware and software to work with the new system.|$|E
500|$|Preliminary {{work on the}} PC version began during initial {{development}} with the PlayStation 3 and Xbox 360, but gave way {{to focus on the}} console releases before returning later to the PC. Because the team had planned a PC version from early on, they made technical decisions in advance to facilitate later development, like support for 64-bit computing and DirectX 11. The art team authored their source art at high resolutions even though they needed to be compressed on the PlayStation 3 and Xbox 360, with the foresight that PC versions would display these assets uncompressed. These early decisions aided the PlayStation 4 and Xbox One versions' development as well, due to their similar <b>system</b> <b>architectures</b> to the PC. Their similarities helped the team [...] "ramp up" [...] to the PC version, where they could push the visuals and technology further than before. The PC development team consisted of members of the original team and PC specialists from Rockstar's other studios who had brought Grand Theft Auto IV, Max Payne 3 and L.A. Noire to the platform. The PC's recommended specifications are based on the game running a native 1080p resolution at 60 frames per second (fps); the team suggested 60 fps as the optimal performance benchmark. The PC build supports 4K resolution and uncapped framerates as well. The team opted to give players the choice to configure the game according to their individual system specifications. Players may configure LOD draw distances, anisotropic filtering, textures, lighting, particle effects, reflections and so on. A population density slider effects the density of street-walking pedestrians and cars on the roads.|$|E
40|$|The PC <b>System</b> <b>Architecture</b> Series {{of books}} from MindShare, {{one of the}} leading {{technical}} training companies in the hardware industry, includes the following titles: ISA <b>System</b> <b>Architecture,</b> EISA <b>System</b> <b>Architecture,</b> 486 <b>System</b> <b>Architecture,</b> Pentium Processor <b>System</b> <b>Architecture,</b> Plug&Play <b>System</b> <b>Architecture,</b> Power PC <b>System</b> <b>Architecture,</b> PCI <b>System</b> <b>Architecture,</b> PCMCIA SystemArchitecture. Each of them is a powerful reference book for one particular type of chip or hardware, with the characteristic that there is no duplication of common information in each book...|$|R
40|$|International audienceMany of {{the most}} {{fundamental}} decision about a product are taken during the <b>system</b> <b>architecture</b> design process. However how <b>system</b> <b>architecture</b> is designed in practice is not well understood. This paper draws on several research studies related to <b>system</b> <b>architecture</b> design to develop a categorization of <b>system</b> <b>architecture</b> design processes to support the adaptation design methodologies and tools to specific situations. The paper reviews different definitions of <b>system</b> <b>architecture</b> and comments on the relevance of the different perspectives taken in the literature on <b>system</b> <b>architecture</b> to different types of <b>system</b> <b>architecture.</b> The research highlights the need for further empirical research on <b>system</b> <b>architecture</b> design processes as well as on tools to support the engineers creating the <b>system</b> <b>architecture...</b>|$|R
50|$|The Server Base <b>System</b> <b>Architecture</b> (SBSA) is a {{hardware}} <b>system</b> <b>architecture</b> for servers based on 64-bit ARM processors.|$|R
2500|$|Several <b>system</b> <b>architectures</b> were {{designed}} c. 1980 that implemented Byzantine fault tolerance. [...] These include: Draper's FTMP, ...|$|E
2500|$|PXE was {{conceived}} considering several <b>system</b> <b>architectures.</b> The version 2.1 of the specification defined architecture identifiers for six system types, including IA-64 and DEC Alpha. However, PXE v2.1 only completely covered IA-32. Despite this {{apparent lack of}} completeness Intel has recently decided to widely support PXE within the new UEFI specification extending the PXE functionality to all EFI/UEFI environments.|$|E
2500|$|A {{channel command}} word (CCW) is an {{instruction}} to a specialized I/O channel processor which is, in fact, a finite state machine. It {{is used to}} initiate an I/O operation, such as [...] "read", [...] "write" [...] or [...] "sense", on a channel-attached device. On <b>system</b> <b>architectures</b> which implement channel I/O, typically all devices are connected by channels, and so all I/O {{requires the use of}} CCWs.|$|E
40|$|The PERFoRM project, an {{innovation}} action promoted under {{the scope of}} the EU Horizon 2020 program, advocates the use of an Industrie 4. 0 compliant <b>system</b> <b>architecture</b> for the seamless reconfiguration of robots and machinery. The <b>system</b> <b>architecture</b> re-uses the innovative results from previous successful R&D projects on distributed control systems domain, such as SOCRADES, IMCAESOP, GRACE and IDEAS. This paper, after describing the main pillars of the PERFoRM <b>system</b> <b>architecture,</b> focuses in mapping the <b>system</b> <b>architecture</b> into four industrial use cases aiming to validate the <b>system</b> <b>architecture</b> design before its deployment in the real environments...|$|R
25|$|A <b>system</b> <b>architecture</b> or <b>systems</b> <b>architecture</b> is the {{conceptual}} model {{that defines the}} structure, behavior, and more views of a system.|$|R
2500|$|One can {{contrast}} a <b>system</b> <b>architecture</b> with <b>system</b> <b>architecture</b> engineering (SAE) - {{the method}} and discipline for effectively implementing {{the architecture of}} a system: ...|$|R
50|$|Example Logical <b>System</b> <b>Architectures</b> {{from various}} industries...|$|E
5000|$|... #Article: Method Framework for Engineering <b>System</b> <b>Architectures</b> ...|$|E
5000|$|Distributed <b>system</b> <b>architectures</b> for {{timeliness}} and dependability QoS ...|$|E
50|$|In July 1997, the Treasury issued {{additional}} guidance to complement Treasury Information <b>System</b> <b>Architecture</b> Framework (TISAF). This guidance, which was finalized in September 1997, provides “how to” processes for developing an information <b>systems</b> <b>architecture</b> {{in accordance with}} TISAF. In 1989 US congress granted $200,000 for the department-wide implementation of the Treasury Information <b>System</b> <b>Architecture</b> Framework.|$|R
40|$|Abstract. According the {{division}} of the city of urban circle with corresponding city level and functional structure, logistics <b>system</b> <b>architecture</b> of regional center city is studied. Firstly the necessity is analyzed. Secondly it analyzes positioning principle of logistics <b>system</b> <b>architecture</b> of regional logistics center city. Finally the characteristics and the corresponding logistics <b>system</b> <b>architecture</b> are studied and the corresponding conclusion is made...|$|R
40|$|AbstractA {{fundamental}} architecture {{element in}} transforming a traditional business environment and its {{business information system}} into an innovative automated and lean business platform {{is the role of}} the information system's building vision; that should be crafted in an applicable framework. This framework should include easy to integrate patterns. The proposed just-in-time framework can change the information <b>system's</b> <b>architecture</b> and its implementation outcomes. The atomic information <b>system</b> <b>architecture's</b> role and applied the patterns are of crucial importance for the implementation phase of the complex business transformation projects; where these patterns can be adapted in a just-in-time manner, using atomic building blocks 1, 2, 26. There is also a need to govern (or control) the atomic information <b>system</b> <b>architecture's</b> patterns for business transformation projects; unfortunately an adaptable atomic information <b>system</b> <b>architecture</b> pattern for such projects is inexistent. An atomic information <b>system</b> <b>architecture</b> pattern can be also used in the enterprise's production activities which comes after the finalization of the implementation phase of business transformation project (business transformation project), to control and govern the resultant business system. The atomic information <b>system</b> <b>architecture's</b> pattern main component is the atomic building block that manages the implementation of autonomous business service transactions. In this article the author presents a set of atomic information <b>system</b> <b>architecture</b> recommendations in the form of reusable patterns to promote an optimal information <b>system's</b> <b>architecture...</b>|$|R
5000|$|Formulating and {{investigating}} new operational {{concepts and}} <b>system</b> <b>architectures</b> ...|$|E
5000|$|... #Subtitle level 3: Method Framework for Engineering <b>System</b> <b>Architectures</b> (MFESA) ...|$|E
50|$|For <b>system</b> <b>architectures</b> {{in which}} port I/O is a {{distinct}} address space from the memory address space, an IOMMU is not used when the CPU communicates with devices via I/O ports. In <b>system</b> <b>architectures</b> in which port I/O and memory are mapped into a suitable address space, an IOMMU can translate port I/O accesses.|$|E
50|$|A <b>system</b> <b>architecture</b> or <b>systems</b> <b>architecture</b> is the {{conceptual}} model {{that defines the}} structure, behavior, and more views of a <b>system.</b> An <b>architecture</b> description is a formal description and representation of a system, organized {{in a way that}} supports reasoning about the structures and behaviors of the system.|$|R
40|$|The Viable <b>System</b> <b>Architecture</b> {{is applied}} to the problem of {{analyzing}} and extending an existing software <b>system.</b> This software <b>architecture</b> approach is based on Stafford Beer's Viable System Model. The Groove collaboration system is chosen to illustrate how this software architectural methodology can be used to extend an existing system with adaptive features. The Groove <b>system</b> <b>architecture</b> is mapped into the Viable <b>System</b> <b>Architecture</b> representation. An adaptive user interface feature is evolved using fuzzy control techniques...|$|R
40|$|<b>System</b> <b>architecture</b> {{is defined}} as the {{description}} of a complex system in terms of its functional requirements, physical elements and their interrelationships. Designing a complex <b>system</b> <b>architecture</b> can be a difficult task involving multi-faceted trade-off decisions. The <b>system</b> <b>architecture</b> designs often have many project-specific goals involving mix of quantitative and qualitative criteria and a large design trade space. Several tools and methods have been developed to support the <b>system</b> <b>architecture</b> design process in the last few decades. However, many conventional problem solving techniques face difficulties in dealing with complex system design problems having many goals. In this research work, an interactive multi-criteria design optimization framework is proposed for solving many-objective <b>system</b> <b>architecture</b> design problems and generating a well distributed set of Pareto optimal solutions for these problems. <b>System</b> <b>architecture</b> design using multi-criteria optimization is demonstrated using a real-world application of an aero engine health management (EHM) system. A design process is presented for the optimal deployment of the EHM system functional operations over physical architecture subsystems. The EHM <b>system</b> <b>architecture</b> design problem is formulated as a multi-criteria optimization problem. The proposed methodology successfully generates a well distributed family of Pareto optimal architecture solutions for the EHM system, which provides valuable insights into the design trade-offs. Uncertainty analysis is implemented using an efficient polynomial chaos approach and robust architecture solutions are obtained for the EHM <b>system</b> <b>architecture</b> design. Performance assessment through evaluation of benchmark test metrics demonstrates the superior performance of the proposed methodology...|$|R
5000|$|Two design philosophies explore {{different}} ideas for <b>system</b> <b>architectures</b> and user interfaces.|$|E
5000|$|Metamodel {{defining}} the foundational abstract supertypes of method components for engineering <b>system</b> <b>architectures</b> including architectural: ...|$|E
50|$|Several <b>system</b> <b>architectures</b> were {{designed}} c. 1980 that implemented Byzantine fault tolerance. These include: Draper's FTMP,Honeywell's MMFCS,and SRI's SIFT.|$|E
40|$|This paper {{describes}} {{an approach to}} defining the information <b>systems</b> <b>architecture</b> of the national logistics city (NLC) concept for Melbourne. Drawing from other major examples in the world, the NLC is a unifying concept and {{provides an opportunity for}} sustained economic growth. A major enabler of this concept is the information <b>systems</b> <b>architecture,</b> which is based on the Australian Government Architecture (AGA) and includes the business <b>systems</b> <b>architecture.</b> ...|$|R
50|$|A <b>system</b> <b>architecture</b> can {{comprise}} <b>system</b> {{components that}} will work together to implement the overall system. There have been efforts to formalize languages to describe <b>system</b> <b>architecture,</b> collectively these are called architecture description languages (ADLs).|$|R
40|$|Abstract—Proposed {{compression}} <b>system</b> <b>architecture</b> {{based on}} Lempel-Ziv algorithm with sliding window history buffer, this architecture may be realized on FPGA, and can provide input data streams from multiple sources and context switching. Base requirements to impression system and compression <b>system</b> <b>architecture</b> were proposed. Compression <b>system</b> <b>architecture</b> should provide quick reconstruction possibility for building another system with other technical characteristics and architecture features (like reconfigurable <b>system</b> <b>architecture</b> features) on given architecture base. Digital signal processing may comprise lined or non-lined procedures. Non-lined signal processing is strictly associated with no lined structure sympathy then can apply in this period, regularity, and patio-temporal fields. Keywords—Digital signal processing; FPGA; RAM; dual-port RAM; token; litera...|$|R
5000|$|Firesmith is {{the primary}} {{developer}} of the Method Framework for Engineering <b>System</b> <b>Architectures</b> (MFESA). This framework consists of the following: ...|$|E
50|$|The system {{engineering}} community uses an architecture description {{language as a}} language and/or a conceptual model to describe and represent <b>system</b> <b>architectures.</b>|$|E
50|$|Since 1997, the Ground <b>System</b> <b>Architectures</b> Workshop (GSAW) {{has served}} as the premier forum for {{spacecraft}} ground system experts from around the world.|$|E
50|$|Performance {{engineering}} {{working practices}} {{are applied to}} the Requirements phase, and to the Business <b>Architecture,</b> Information <b>System</b> <b>Architecture,</b> and Technology architecture phases. Within Information <b>System</b> <b>Architecture,</b> it is applied to both the Data Architecture and Application Architecture.|$|R
5000|$|Operational Assurance: <b>System</b> <b>Architecture,</b> <b>System</b> Integrity, Covert Channel Analysis, Trusted Facility Management and Trusted Recovery ...|$|R
25|$|AMD is a {{founding}} member of the HSA Foundation which aims to ease the use of a Heterogeneous <b>System</b> <b>Architecture.</b> A Heterogeneous <b>System</b> <b>Architecture</b> is intended to use both central processing units and graphics processors to complete computational tasks.|$|R
