209|117|Public
25|$|Objects in object {{oriented}} languages are usually accessed by a reference whose static target type (or manifest type) {{is equal to}} either the object's run-time type (its latent type) or a <b>supertype</b> thereof. This is conformant with the Liskov substitution principle, which states that all operations performed on an instance of a given type can also be performed on an instance of a subtype. This concept {{is also known as}} subsumption. In some languages subtypes may also possess covariant or contravariant return types and argument types respectively.|$|E
25|$|For example, it {{was useful}} {{to examine the}} {{functional}} relationship between TAP peptide transport and HLA class I antigen presentation. TAP is a transmembrane protein responsible for the transport of antigenic peptides into the endoplasmic reticulum, where MHC them class I molecules can bind them and presented to T cells. As TAP does not bind all peptides equally, TAP-binding affinity could influence {{the ability of a}} particular peptide {{to gain access to the}} MHC class I pathway. Artificial neural network (ANN), a computer model was used to study peptide binding to human TAP and its relationship with MHC class I binding. The affinity of HLA-binding peptides for TAP was found to differ according to the HLA <b>supertype</b> concerned using this method. This research could have important implications for the design of peptide based immuno-therapeutic drugs and vaccines. It shows the power of the modeling approach to understand complex immune interactions.|$|E
50|$|One {{kind of way}} {{to achieve}} such support, called width subtyping, adds more fields to the record. More formally, every (named) field {{appearing}} in the width <b>supertype</b> {{will appear in the}} width subtype. Thus, any operation feasible on the <b>supertype</b> will be supported by the subtype.|$|E
40|$|We {{present a}} way of {{defining}} the subtype relation that ensures that subtype objects preserve behavioral properties of their <b>supertypes.</b> The subtype relation {{is based on the}} specifications of the sub- and <b>supertypes.</b> Our approach handles mutable types and allows subtypes to have more methods than their <b>supertypes.</b> Dealing with mutable types and subtypes that extend their <b>supertypes</b> has surprising consequences on how to specify and reason about objects. In our approach, we discard the standard data type induction rule, we prohibit the use of an analogous "history" rule, and we make up for both losses by adding explicit predicates [...] invariants and constraints [...] to our type specifications. We also discuss the ramifications of our approach of subtyping the design of type families...|$|R
40|$|We {{present a}} model for {{predicting}} HLA class I restricted CTL epitopes. In contrast to almost all other work in this area, we train a single model on epitopes from all HLA alleles and <b>supertypes,</b> yet retain {{the ability to make}} epitope predictions for specific HLA alleles. We are therefore able to leverage data across all HLA alleles and/or their <b>supertypes,</b> automatically learning what information should be shared and also how to combine allelespecific, supertype-specific, and global information in a principled way. We show that this leveraging can improve prediction of epitopes having HLA alleles with known <b>supertypes,</b> and dramatically increases our ability to predict epitopes having alleles which do not fall into any of the known <b>supertypes.</b> Our model, which is based on logistic regression, is simple to implement and understand, is solved by finding a single global maximum, and is more accurate (to our knowledge) than any other model...|$|R
5000|$|Names, some pejorative, {{of other}} sub- or <b>supertypes</b> or close {{relatives}} of peddlers include: ...|$|R
50|$|Invariants of the <b>supertype</b> must be {{preserved}} in a subtype.|$|E
50|$|Languages not {{object-oriented}} {{usually have}} no universal <b>supertype,</b> or subtype polymorphism support.|$|E
50|$|The second method, called depth subtyping, {{replaces the}} various fields with their subtypes. That is, {{the fields of}} the subtype are subtypes of the fields of the <b>supertype.</b> Since any {{operation}} supported for a field in the <b>supertype</b> is supported for its subtype, any operation feasible on the record <b>supertype</b> {{is supported by the}} record subtype. Depth subtyping only makes sense for immutable records: for example, you can assign 1.5 to the 'x' field of a real point (a record with two real fields), but you can't do the same to the 'x' field of an integer point (which, however, is a deep subtype of the real point type) because 1.5 is not an integer (see Variance).|$|E
40|$|Abstract. We {{present a}} model for {{predicting}} HLA class I restricted CTL epitopes. In contrast to almost all other work in this area, we train a single model on epitopes from all HLA alleles and <b>supertypes,</b> yet retain {{the ability to make}} epitope predictions for specific HLA alleles. We are therefore able to leverage data across all HLA alleles and/or their <b>supertypes,</b> automatically learning what information should be shared and also how to combine allele-specific, supertype-specific, and global information in a principled way. We show that this leveraging can improve prediction of epitopes having HLA alleles with known <b>supertypes,</b> and dramatically increases our ability to predict epitopes having alleles which do not fall into any of the known <b>supertypes.</b> Our model, which is based on logistic regression, is simple to implement and understand, is solved by finding a single global maximum, and is more accurate (to our knowledge) than any other model. ...|$|R
5000|$|Metamodel {{defining}} the foundational abstract <b>supertypes</b> of method components for engineering system architectures including architectural: ...|$|R
5000|$|... : Combines {{specification}} {{cases and}} can also declare that a method is inheriting specifications from its <b>supertypes.</b>|$|R
5000|$|... for a {{subsumption}} relation: a hyponym (subtype, subclass) has a type-of (is-a) {{relationship with}} its hypernym (<b>supertype,</b> superclass); ...|$|E
5000|$|Several {{mechanics}} {{were introduced}} in the Ice Age block. The most notable of these was permanents of the [...] "Snow" [...] <b>supertype.</b> Ice Age introduced basic snow-covered lands, and cards that had effects based on Snow permanents. [...] Coldsnap followed that with creatures, artifacts and enchantments of the Snow <b>supertype.</b> Other mechanics introduced included cumulative upkeep and cantrips. Ice Age {{was also the first}} set to print single-colored legends.|$|E
5000|$|Cyclic {{hierarchy}} [...] when a <b>supertype</b> in {{a hierarchy}} depends {{on any of}} its subtypes. Also known as [...] "inheritance/reference cycles".|$|E
40|$|The work {{described}} in this paper {{is based on a}} November 1994 A CM TOPLAS paper, "A Behavioral Notion of Subtyping, by the same authors. This paper's version has been submitted to the volume Formal Methods For Distributed Processing: An Object-Oriented Approach, edited by Howard Bowman and John Derrick. We present a way of defining the subtype relation that ensures that subtype objects preserve behavioral properties of their <b>supertypes.</b> The subtype relation is based on the specifications of the sub- and <b>supertypes.</b> Our approach handles mutable types and allows subtypes to have more methods than their <b>supertypes.</b> Dealing with mutable types and subtypes that extend their <b>supertypes</b> has surprising consequences on how to specify and reason about objects. In our approach, we discard the standard data type induction rule, we prohibit the use of an analogous "history " rule, and we make up for both losses by adding explicit predicates—invariants and constraints-to our type specifications. We also discuss the ramifications of our approach of subtyping the design of type families...|$|R
40|$|This paper {{presents}} a careful {{analysis of the}} problem of reasoning about object-oriented programs. A solution to this problem allows new types to be added to a program without respecifying or reverifying unchanged modules [...] - if the new types are subtypes of existing types. The key idea is that subtype relationships must satisfy certain semantic constraints based on the types 2 ̆ 7 specified behavior. Thus subtyping {{is not the same as}} inheritance of implementations (subclassing). Subtyping aids specification and verification of object-oriented programs by allowing <b>supertypes</b> to stand for their subtypes. This reduces the problem of reasoning about both <b>supertypes</b> and their subtypes to the problems of reasoning about just the <b>supertypes</b> and proving that the subtype relationships satisfy the required constraints...|$|R
40|$|There {{are limited}} data {{regarding}} {{the influence of}} human leukocyte antigen (HLA) polymorphisms on reduced bone mineral density (BMD). We investigated the relationship between HLA <b>supertypes</b> and BMD in HIV-infected adults changing their existing treatment to tenofovir-emtricitabine (TDF-FTC) or abacavir-lamivudine (ABC- 3 TC) in the STEAL study. Lumbar spine and right hip BMD were measured by Dual-energy X-ray absorptiometry (DXA). HLA genotypes at the 2 -digit level were classified into class I and II <b>supertypes.</b> Student's t-tests were {{used to test the}} association between HLA <b>supertypes</b> and changes in hip and spine BMD over 96 weeks for the whole cohort and stratified by randomised groups. The relationship between HLA <b>supertypes</b> and BMD was also assessed in the subgroup of participants that were naïve to both ABC and TDF at study entry. Class II <b>supertypes</b> were mainly associated with hip BMD change. Overall, compared to participants not carrying HLA-DQ 3, participants expressing DQ 3 had less bone loss over 96 weeks at both the hip and spine (hip: 0. 003 vs. - 0. 006 g/cm 2, 95 %CI 0. 002 to 0. 017, p =  0. 016; spine: 0. 006 vs. - 0. 006 g/cm 2, 95 %CI 0. 001 to 0. 023, p =  0. 041). In participants that were naïve to both ABC and TDF at baseline and randomised to TDF-FTC, DQ 3 was significantly associated with less bone loss compared with those not carrying DQ 3 (hip: 0. 001 vs. - 0. 032 g/cm 2; diff 0. 033; 95 %CI 0. 017 to 0. 049; p< 0. 001; spine: 0. 007 vs. - 0. 023 g/cm 2; diff 0. 035; 95 %CI 0. 014 to 0. 056; p =  0. 001). In this cohort of HIV-infected adults, there was an association between bone status and HLA <b>supertypes,</b> particularly HLA-DQ 3. Clinicaltrials. gov NCT 00192634...|$|R
5000|$|... #Caption: Example of subtypes: where bird is the <b>supertype</b> and {{all others}} are subtypes as denoted by the arrow in UML {{notation}} ...|$|E
5000|$|Explicit {{attributes}} {{which got}} re-declared as derived in a subtype are encoded as [...] "*" [...] {{in the position}} of the <b>supertype</b> attribute.|$|E
50|$|The UTI is a Core Foundation string, {{which uses}} a reverse-DNS string. Some common and {{standard}} types use a domain called public (e.g. public.png for a Portable Network Graphics image), while other domains {{can be used for}} third-party types (e.g. com.adobe.pdf for Portable Document Format). UTIs can be defined within a hierarchical structure, known as a conformance hierarchy. Thus, public.png conforms to a <b>supertype</b> of public.image, which itself conforms to a <b>supertype</b> of public.data. A UTI can exist in multiple hierarchies, which provides great flexibility.|$|E
40|$|We {{recently}} reported {{that two of}} six HLA-DP <b>supertypes</b> (DP 1 - 4, 6, 8) were associated with susceptibility (DP 2) and resistance (DP 1) to childhood acute lymphoblastic leukaemia (ALL). To determine whether DP <b>supertypes</b> are associated with childhood ALL prognosis, we compared treatment outcomes in a cohort (n = 798) of DPB 1 -typed ALL cases in the UK Medical Research Council UKALL XI trial. No differences in clinical characteristics and outcome between DPB 1 -typed and untyped (n = 1292) cases suggest no selection bias. Event-free survival (EFS) rates in patients with DP 1 and DP 3 <b>supertypes</b> were significantly worse than in patients with DP 2, DP 4, DP 6 and DP 8 [10 -year EFS: 55 %; 95 % confidence interval (CI) = 49 - 61 %; compared with 64 % (61 - 68 %), P = 0. 006]. Ten-year EFS in DP 1 /DP 3 heterozygous patients [30 % (2 - 58 %) ] was significantly worse than in patients with DP 1, DP 3 or neither allele [56 % (50 - 62 %); P = 0. 02]. Lack of evidence that DP 1 or DP 3 are associated with known prognostic factors leads us to suggest that these two <b>supertypes</b> exert an independent effect on prognosis. This may involve abrogation of DP 1 / 3 -restricted T-cell control of residual disease due to selective effects of chemotherapy. Further studies of HLA <b>supertypes</b> in relation to outcome in recent childhood ALL trials may resolve this question...|$|R
40|$|We {{recently}} described {{human leukocyte antigen}} (HLA) A 2, A 3 and B 7 <b>supertypes,</b> {{characterized by}} largely overlapping peptide-binding specificities and represented in {{a high percentage of}} different populations. Here, we identified 17 Plasmodium falciparum peptides capable of binding these <b>supertypes</b> and assessed antigenicity in both vaccinated and naturally exposed populations. Positive cytotoxic T lymphocyte recall and cytokine (interferon-γ and tumor necrosis factor α) responses were detected for all peptides; all were recognized in the context of more than one HLA class I molecule; and at least 12 of the 17 were recognized in the context of all HLA alleles studied. These data validate the concept of HLA <b>supertypes</b> at the biological level, show that highly degenerate peptides are almost always recognized as epitopes, and demonstrate the feasibility of developing a universally effective vaccine by focusing on a limited number of peptide specificities...|$|R
40|$|Prediction of peptide binding {{to major}} {{histocompatibility}} complex (MHC) molecules is a basis for anticipating T-cell epitopes, as well as epitope discovery-driven vaccine development. In the human, MHC molecules are known as human leukocyte antigens (HLAs) and are extremely polymorphic. HLA polymorphism {{is the basis of}} differential peptide binding, until now limiting the practical use of current epitope-prediction tools for vaccine development. Here, we describe a web server, PEPVAC (Promiscuous EPitope-based VACcine), optimized for the formulation of multi-epitope vaccines with broad population coverage. This optimization is accomplished through the prediction of peptides that bind to several HLA molecules with similar peptide-binding specificity (<b>supertypes).</b> Specifically, we offer the possibility of identifying promiscuous peptide binders to five distinct HLA class I <b>supertypes</b> (A 2, A 3, B 7, A 24 and B 15). We estimated the phenotypic population frequency of these <b>supertypes</b> to be 95 %, regardless of ethnicity. Targeting these <b>supertypes</b> for promiscuous peptide-binding predictions results in a limited number of potential epitopes without compromising the population coverage required for practical vaccine design considerations. PEPVAC can also identify conserved MHC ligands, as well as those with a C-terminus resulting from proteasomal cleavage. The combination of these features with the prediction of promiscuous HLA class I ligands further limits the number of potential epitopes. The PEPVAC server is hosted by the Dana-Farber Cancer Institute at the site [URL]...|$|R
5000|$|No new {{exceptions}} {{should be}} thrown by {{methods of the}} subtype, except where those exceptions are themselves subtypes of exceptions thrown by the methods of the <b>supertype.</b>|$|E
5000|$|History {{constraint}} (the [...] "history rule"). Objects {{are regarded}} as being modifiable only through their methods (encapsulation). Because subtypes may introduce methods that are not present in the <b>supertype,</b> the introduction of these methods may allow state changes in the subtype that are not permissible in the <b>supertype.</b> The history constraint prohibits this. It was the novel element introduced by Liskov and Wing. A violation of this constraint can be exemplified by defining a mutable point as a subtype of an immutable point. This {{is a violation of}} the history constraint, because {{in the history of the}} immutable point, the state is always the same after creation, so it cannot include the history of a mutable point in general. Fields added to the subtype may however be safely modified because they are not observable through the <b>supertype</b> methods. Thus, one can derive a circle with fixed center but mutable radius from immutable point without violating LSP.|$|E
5000|$|Number: The number {{data type}} is a <b>supertype</b> of both, integer and real. Most {{implementations}} take uses a double type {{to represent a}} real_type, even if the actual value is an integer.|$|E
40|$|Background: There {{are limited}} data {{regarding}} {{the influence of}} human leukocyte antigen (HLA) polymorphisms on reduced bone mineral density (BMD). We investigated the relationship between HLA <b>supertypes</b> and BMD in HIV-infected adults changing their existing treatment to tenofovir-emtricitabine (TDF-FTC) or abacavir-lamivudine (ABC- 3 TC) in the STEAL study. Methods: Lumbar spine and right hip BMD were measured by Dual-energy X-ray absorptiometry (DXA). HLA genotypes at the 2 -digit level were classified into class I and II <b>supertypes.</b> Student’s t-tests were {{used to test the}} association between HLA <b>supertypes</b> and changes in hip and spine BMD over 96 weeks for the whole cohort and stratified by randomised groups. The relationship between HLA <b>supertypes</b> and BMD was also assessed in the subgroup of participants that were naı̈ve to both ABC and TDF at study entry. Results: Class II <b>supertypes</b> were mainly associated with hip BMD change. Overall, compared to participants not carrying HLA-DQ 3, participants expressing DQ 3 had less bone loss over 96 weeks at both the hip and spine (hip: 0. 003 vs. 20. 006 g/ cm 2, 95 %CI 0. 002 to 0. 017, p = 0. 016; spine: 0. 006 vs. 20. 006 g/cm 2, 95 %CI 0. 001 to 0. 023, p = 0. 041). In participants that were naı̈ve to both ABC and TDF at baseline and randomised to TDF-FTC, DQ 3 was significantly associated with less bone loss compared with those not carrying DQ 3 (hip: 0. 001 vs. 20. 032 g/cm 2; diff 0. 033; 95 %CI 0. 017 to 0. 049; p, 0. 001; spine: 0. 007 vs. 20. 023 g/cm 2; diff 0. 035; 95 %CI 0. 014 to 0. 056; p = 0. 001) ...|$|R
5000|$|Finally, the {{object-oriented}} {{notion of}} type inheritance {{is available in}} a few solutions. The different card types in NoteCards are arranged into an inheritance hierarchy, so that new types can be created as extensions of old. Aquanet extends this to multiple inheritance among types; the [...] "slots" [...] that an object contains are those of its type, plus those of all <b>supertypes.</b> SPRINT and Tinderbox also use a frame-based approach, and allow default values for attributes to be inherited from <b>supertypes.</b> This way, an item need not define values for all its attributes explicitly: unless overridden, an item's slot will have the shared, default value for all items of that type.|$|R
5000|$|Conformance class 2, {{which is}} not used in practice, always enforces the {{external}} mapping. In theory this would allow better AP interoperability, since a postprocessor may {{know how to handle}} some <b>supertypes,</b> but may not know the specified subtypes.|$|R
50|$|The {{top type}} in the type theory of mathematics, logic, and {{computer}} science, commonly abbreviated as top or by the down tack symbol (⊤), is the universal type, sometimes called the universal <b>supertype</b> as all other types in any given type system are subtypes of top. In most cases it is the type which contains every possible object in the type system of interest. It is {{in contrast with the}} bottom type, or the universal subtype, which every other type is <b>supertype</b> of and in most cases it is the type that contains no members at all.|$|E
5000|$|Broken {{hierarchy}} when a <b>supertype</b> and its subtype conceptually do {{not share}} an “IS-A” relationship resulting in broken substitutability. Also known as [...] "inappropriate use of inheritance" [...] and [...] "misapplying IS A".|$|E
50|$|Some systems {{also support}} subtyping of labeled {{disjoint}} union types (such as algebraic data types). The rule for width subtyping is reversed: every tag {{appearing in the}} width subtype must appear in the width <b>supertype.</b>|$|E
40|$|Method {{overloading}} {{is a form}} of statically resolved multi-methods {{which may}} be used to express specialization in a type hierarchy[GSWF 97]. The design of the overloading rule in Sather is constrained by the presence of multiple-subtyping, and the ability to add <b>supertyping</b> edges to the type graph after-the-fact [SO 96]. We describe the design of overloading rules which permit method specialization while allowing separate type-checking i. e. existing code cannot be broken by after-thefact addition of <b>supertyping</b> edges. Method overloading is used in singly dispatched object-oriented languages to achieve a form of statically resolved, type-safe multi-methods. Overloading permits interfaces and to support more than one method of the same name but with declared arguments of different types- calls to th...|$|R
40|$|Identification of {{peptides}} {{that can}} bind to major histocompatibility complex (MHC) molecules is important for anticipation of T-cell epitopes and {{for the design of}} epitope-based vaccines. Population coverage of epitope vaccines is, however, compromised by the extreme polymorphism of MHC molecules, which is in fact the basis for their differential peptide binding. Therefore, grouping of MHC molecules into <b>supertypes</b> according to peptide-binding specificity is relevant for optimizing the composition of epitope-based vaccines. Despite the fact that the peptide-binding specificity of MHC molecules is linked to their specific amino acid sequences, it is unclear how amino sequence differences correlate with peptide-binding specificities. In this chapter, we detail a method for defining MHC <b>supertypes</b> based on the analysis and subsequent clustering of their peptide-binding repertoires...|$|R
40|$|The {{development}} of epitope-based vaccines crucially {{relies on the}} ability to classify Human Leukocyte Antigen (HLA) molecules into sets that have similar peptide binding specificities, termed <b>supertypes.</b> In their seminal work, Sette and Sidney [21] defined 9 HLA class I super-types, and claimed that these provide an almost perfect coverage of the entire repertoire of HLA class I molecules. HLA alleles are highly polymorphic and polygenic and therefore experimentally classifying each of these molecules to <b>supertypes</b> is at present an impossible task. Recently, a number of computational methods have been proposed for this task. These methods are based on defining protein similarity measures, derived from analysis of bin-ding peptides or from analysis of the proteins themselves [13, 7]. In this paper we define both peptide derived and protein derived similarity measures, which are based on learning distance functi-ons. The peptide driven measure is defined using a peptide-peptide distance function, which is learnt using information about known bin-ding and non-binding peptides [28]. The protein similarity measure is defined using a protein-protein distance function, which is learnt using information about alleles previously classified into <b>supertypes</b> by [21]. We compare the classification obtained by these two compli-mentary methods to previously suggested classification methods. In general, our results are in excellent agreement with the classifications suggested by Sette and Sidney [21] and with those reported in [13]. There are two important advantages of our proposed distance-based approach. First, it makes use of two different and important immunological sources of information – HLA alleles and peptides that are known to bind or not bind to these alleles. Second, since each of our distance measures is trained using a different source of informa-tion, their combination can provide a more confident classification of alleles into <b>supertypes.</b> ...|$|R
