71|519|Public
50|$|The TTED (Trash and Turtle Excluder Device) is {{a recent}} {{refinement}} of the TED, which, as well as turtles, can additionally free other forms of bycatch. The TTED reduces <b>sorting</b> <b>time</b> and risks of injury due to sharks and rays being caught, improves the quality of shrimps, which {{are less likely to}} be crushed in the bottom of the trawl, and may also lead to a reduction in the amount of fuel consumed by the boats.|$|E
50|$|Each Ethernet frame must be {{processed}} {{as it passes}} through the network. Processing {{the contents of a}} single large frame is preferable to processing the same content broken up into smaller frames, as this makes better use of available CPU time by reducing interrupts. This also minimizes the overhead byte count and reduces the number of frames needing to {{be processed}}. This is analogous to physically mailing a packet of papers instead of several single envelopes with one sheet each, saving envelopes and cutting <b>sorting</b> <b>time.</b>|$|E
50|$|Bead sort, {{also called}} gravity sort, {{is a natural}} sorting algorithm, {{developed}} by Joshua J. Arulanandham, Cristian S. Calude and Michael J. Dinneen in 2002, and published in The Bulletin of the European Association for Theoretical Computer Science. Both digital and analog hardware implementations of bead sort can achieve a <b>sorting</b> <b>time</b> of O(n); however, the implementation of this algorithm tends to be significantly slower in software and can only be used to sort lists of positive integers. Also, {{it would seem that}} even in the best case, the algorithm requires O(n2) space.|$|E
30|$|If t_ 1, t_ 2 are {{terms of}} <b>sort</b> <b>TIME,</b> then t_ 1 < t_ 2 is a TTL-atom.|$|R
40|$|A memory-adaptive sort {{is able to}} {{dynamically}} {{change the}} amount of memory used during sorting. The method described in this paper adjusts memory usage according to input size and memory requirements of other sorts running in a database system. It saves memory space for small <b>sorts,</b> reduces <b>sort</b> <b>time</b> for large <b>sorts,</b> and balances memory usage among concurrent sorts. Overall system performance is improved when several sorts are running concurrently. 1 Introduction <b>Sorting</b> is a <b>time</b> consuming and frequently used operation in database systems. It is used not only for producing sorted output, but also in many sort-based algorithms for query processing, such as merge-join, grouping, and duplicate elimination[2]. Sorting is both memory intensive and CPU intensive. The amount of available memory may affect <b>sort</b> <b>time</b> dramatically. In a database system the free memory space available to the system changes continuously. A large sort may experience fluctuations of available memory space during th [...] ...|$|R
5000|$|In 1921, he {{was sent}} to the Pontificium Collegium Internationale Angelicum, the future Pontifical University of Saint Thomas Aquinas, Angelicum in Rome. With his {{dissertation}} De scientia beata Christi he obtained a Doctorate in Sacred Theology summa cum laude. On returning to the United States, was assigned for a <b>sort</b> <b>time</b> to his previous parish in Brooklyn. and ...|$|R
5000|$|The Postman's sort is {{a variant}} of bucket sort that takes {{advantage}} of a hierarchical structure of elements, typically described {{by a set of}} attributes. This is the algorithm used by letter-sorting machines in post offices: mail is sorted first between domestic and international; then by state, province or territory; then by destination post office; then by routes, etc. Since keys are not compared against each other, <b>sorting</b> <b>time</b> is O(cn), where c depends {{on the size of the}} key and number of buckets. This is similar to a radix sort that works [...] "top down," [...] or [...] "most significant digit first." ...|$|E
50|$|In tuning {{performance}} of MapReduce, {{the complexity of}} mapping, shuffle, sorting (grouping by the key), and reducing {{has to be taken}} into account. The amount of data produced by the mappers is a key parameter that shifts the bulk of the computation cost between mapping and reducing. Reducing includes sorting (grouping of the keys) which has nonlinear complexity. Hence, small partition sizes reduce <b>sorting</b> <b>time,</b> but there is a trade-off because having a large number of reducers may be impractical. The influence of split unit size is marginal (unless chosen particularly badly, say <1MB). The gains from some mappers reading load from local disks, on average, is minor.|$|E
40|$|Over the years, {{computer}} scientists have conducted researches on linear and binary search algorithms, {{and concluded that}} binary search algorithm is faster than linear search algorithm. Although {{it was a good}} observation yet, the <b>sorting</b> <b>time</b> before the application of binary search appeared not to have been considered. This paper critically tries to conduct experiments on the execution time of linear search, binary search without inclusion of <b>sorting</b> <b>time,</b> and binary search with the inclusion the <b>sorting</b> <b>time...</b>|$|E
25|$|On 11 November 2010, a Kinect Sports Facebook app was {{released}} which <b>sorts</b> <b>times</b> {{set in the}} Xbox 360 game into online leagues. Co-developed by Rare and web agency Nzime, the Facebook app uses an Xbox LIVE gamertag to compare results with friends and other players in Kinect Sports, join or create leagues and watch video performances uploaded from the game.|$|R
50|$|Most of Guimard's novels {{deal about}} the role of {{randomness}} in life (mainly L'Ironie du <b>sort),</b> <b>time,</b> man's understanding of hidden and ironic structures in which he is trapped. His latest work (Le Mauvais temps) describes a major transformation of a character who finally understands in dramatic circumstances the price of life and the importance of personal choice, changing his desperate life for the best.|$|R
5000|$|For large data linear or {{quadratic}} factors {{cannot be}} ignored, but for small data an asymptotically inefficient algorithm {{may be more}} efficient. This is particularly used in hybrid algorithms, like Timsort, which use an asymptotically efficient algorithm (here merge <b>sort,</b> with <b>time</b> complexity [...] ), but switch to an asymptotically inefficient algorithm (here insertion <b>sort,</b> with <b>time</b> complexity [...] ) for small data, as the simpler algorithm is faster on small data.|$|R
40|$|Efficient sorting {{is vital}} for overall {{performance}} of the underlying application. This paper presents Butterfly Network Sort (BNS) for sorting large data sets. A minimal version of the algorithm Min-Max Butterfly is also shown for searching minimum and maximum values in data. Both algorithms are implemented on GPUs using OpenCL exploiting data parallelism model. Results obtained on different GPU architectures show better performance of butterfly sorting in terms of <b>sorting</b> <b>time</b> and rate. The comparison of butterfly sorting with other algorithms:bitonic, odd-even and rank sort show significant speedup improvements against all on Nvidia Quadro- 6000 GPU with relatively better <b>sorting</b> <b>time</b> and rat...|$|E
30|$|By {{cutting off}} the {{solutions}} dominated by mTTPT or mTLH before non-dominated <b>sorting,</b> <b>time</b> complexity can be decreased greatly. The methods {{to find out the}} solutions dominated by mTTPT and mTLH are described in Theorems 5 and 6 respectively.|$|E
40|$|The {{problem which}} this study {{addresses}} is {{the effects of}} cognitive style and variations in the free sort procedures on the sorting outcome of <b>sorting</b> <b>time</b> and number and quality of manifest partitions. This experiment was designed {{to look at the}} effects of the cognitive styles of field dependence, category width and equivalence range, initially-presented homogeneous, heterogeneous or completely randomized stimuli, an explicit sorting cue and resorting versus no resorting on total <b>sorting</b> <b>time,</b> and the number and quality of manifest categorization. Based on {{a review of the literature}} and results of a pilot study, a conceptual model of sorting was generated to predict the results. Subjects for the study were 12 th grade, male students drawn from tvo schools within the same district of white middle class communities. On the basis of this research it would seem that some cognitive styles and variations in sorting procedure d...|$|E
5000|$|Worst case: MapKey places {{all items}} into one subarray, {{resulting}} in a standard insertion <b>sort,</b> and <b>time</b> of [...]|$|R
50|$|These {{standard}} notations {{have been}} adopted by many countries as a national standard, e.g., BS EN 28601 in the UK and similarly in other EU countries, ANSI INCITS 30-1997 (R2008), and FIPS PUB 4-2 in the United States (FIPS PUB 4-2 withdrawn in United States 2008-09-02). They are, in particular, increasingly widely used in computer applications, since the most to least significant digit order provides a simple method to order and <b>sort</b> <b>time</b> readings.|$|R
3000|$|... [...]) of sub-set q using non-dominated <b>sorting.</b> The <b>time</b> {{complexity}} is O([...] 2 ([...] N/Q)^ 2) {{and space}} complexity is O([...] N/Q).|$|R
40|$|Abstract. In {{a general}} {{sequential}} model of computation, no restrictions {{are placed on}} theway in which the computation may proceed, except that parallel operations are not allowed. We show that in such an unrestricted environment TIME. SPACE fl(N 2 /logN) in order to sort N integers, each in the range [,N]. Key words, time-space tradeoffs, conputational complexity, <b>sorting,</b> <b>time</b> lower bounds, space lower bound...|$|E
40|$|Sorting of soft-bottom macrobenthos {{entangled}} with Posidonia oceanica fibers is {{time-consuming and}} tedious {{because of the}} weak color contrast. This paper describes a staining-destaining technique that produces good contrast between soft-bottom macrobenthos and Posidonia oceanica fibers. The method has been tested on Corsican samples in oligotrophic areas characterized by small-size soft-bottom macrofauna. Our technique saves <b>sorting</b> <b>time</b> (- 24 %) and is simple to implement...|$|E
40|$|A self-organising {{feature map}} sorts n real numbers in O(n) time {{apparently}} violating the O(n log n) bound. Detailed analysis {{shows that the}} net {{takes advantage of the}} uniform distribution of the numbers and, in this case, sorting in O(n) is possible. There are, however, an exponentially small fraction of pathological distributions producing O(n^ 2) <b>sorting</b> <b>time.</b> It is interesting to observe that standard learning produced a smart sorting algorithm...|$|E
40|$|Table of Contents: Changes to Minitex Statewide Database Licensing; ELM Usage; Combined Name & Mission: Cooperative Purchasing & Electronic Resources Services (CPERS); Minitex Overnight Staff and <b>Sort</b> <b>Time</b> Study - Results and Analysis; Minitex New Website Design; MLAC Staff Prepares for MnLINK Migration; Alternatives for Items Held at Minneapolis's Public Central Library; On My Mind, by Bill DeJohn, News From Minitex CPERS, News From the Minitex Region; University of MN's Walter Library Begins "New Chapter"; Honors for Minitex Region Library Staff...|$|R
40|$|The {{education}} of GIS has a <b>sort</b> <b>time</b> in Hungary especially in agriculture. The spreading of GIS applications demands for training experts abroad and in Hungary too. Recognising the international trend {{we made some}} effort for creating basic facilities, than we made a proposal for establishing educational GIS laboratories. The accepted proposal gives good opportunity for doing larger steps in GIS education. We have already established laboratories, purchased powerful hardware and software products and introduced different kind of courses and training materials...|$|R
5000|$|... geo-temporal sorting and event clustering. Many {{software}} will <b>sort</b> by <b>time</b> or place; experimental software {{has been used}} to predict special events such as birthdays based on geo-temporal clustering.|$|R
40|$|We {{present a}} {{hardware}} oriented priority queue algorithm requiring n 2 comparators and swappers {{to maintain an}} n item queue. It supports two operations, insert and extract minimum (or alternatively, extract maximum), both of which operate in a single cycle. Thus, <b>sorting</b> <b>time</b> is O(n). Records with identical keys are always extracted in FIFO order of insertion. A formal proof of correctness of these sorting and FIFO characteristics is presented. ...|$|E
30|$|The JFE-SSD can {{be easily}} {{installed}} by substituting the conventional codend in a standard shrimp trawl without any alteration in the trawl design. The device reduces bycatch of juveniles of commercially important finfishes, shrimps, crabs and small sized fishes of low commercial value, which will be beneficial for sustainability of resources. The study implies that the device has the potential advantage of retaining larger fishes of higher market value. The in situ sorting effect and separation of shrimps from other resources {{have the potential to}} reduce the <b>sorting</b> <b>time</b> and increase useful fishing time.|$|E
40|$|In {{order to}} improve the {{interference}} immunity of the detector, a new CFAR detector (ACGCA-CFAR) based on automatic censoring cell averaging (ACCA) and cell averaging (CA) is presented in this paper. It takes the greatest value of ACCA and CA local estimation as the noise power estimation. Under swerling II assumption, the analytic expressions of  in homogeneous background are derived. In contrast to other detectors, the ACGCA-CFAR detector has higher detection performance both in homogeneous and nonhomogeneous backgrounds, while the sample <b>sorting</b> <b>time</b> of ACGCA is only quarter that of OS and ACCA.    </p...|$|E
6000|$|... "To be sure not," [...] said Charley gaily; [...] "it {{would be}} absurd to be always making solemn speeches, {{and things of}} that <b>sort,</b> every <b>time</b> one has a little accident." ...|$|R
5000|$|At 01:46:40 UTC on Sunday, 9 September 2001, the Unix billennium (Unix time number 1,000,000,000) was celebrated. The name [...] "billennium" [...] is a {{portmanteau}} of [...] "billion" [...] and [...] "millennium". [...] Some {{programs which}} stored timestamps using a text representation encountered sorting errors, as {{in a text}} <b>sort</b> <b>times</b> after the turnover, starting with a [...] "1" [...] digit, erroneously <b>sorted</b> before earlier <b>times</b> starting with a [...] "9" [...] digit. Affected programs included the popular Usenet reader KNode and e-mail client KMail, part of the KDE desktop environment. Such bugs were generally cosmetic in nature and quickly fixed once problems became apparent. The problem also affected many 'Filtrix' document-format filters provided with Linux versions of WordPerfect; a patch {{was created by the}} user community to solve this problem, since Corel no longer sold or supported that version of the program.|$|R
5000|$|... "I {{learned how}} to change the big {{water-cooled}} tubes in the transmitter that took up two complete floors {{of a very large}} building. Very fun," [...] he said. After a stint in the U.S. Army Signal Corps during World War II, Schafer returned to WANE(AM) in Fort Wayne where he worked on the air, sold commercial time and fixed the equipment. [...] "I became a combo operator of <b>sorts.</b> <b>Times</b> were tight and stations couldn't afford an engineer and announcer. I was an engineer sitting between two turntables and with a microphone in front of me," [...] he said.|$|R
40|$|Sorting   of   soft-­bottom   macrobenthos   {{entangled}}   with   Posidonia   oceanica fibers is {{time-consuming and}} tedious {{because of the}} weak of colour contrast.   This   paper   describes   a   staining-­destaining   technique   that   produces   good   contrast   between   soft-­bottom   macrobenthos  and  Posidonia  oceanica fibers. The method has been tested on Corsican samples in oligotrophic areas characterized by small-size soft-bottom macrofauna. Our technique saves <b>sorting</b> <b>time</b> (- 24 %) and is simple to implement. Peer reviewe...|$|E
40|$|We {{present a}} fast {{comparison}} based parallel sorting algorithm {{that can handle}} arbitrary key types. Data movement is the major portion of <b>sorting</b> <b>time</b> for most algorithms in the literature. Our algorithm is parameterized {{so that it can}} be tuned to control data movement time, especially for large data sets. Parallel histograms are used to partition the key set exactly. The algorithm is architecture independent, and has been implemented in the CHARM portable parallel programming system, allowing it to be efficiently run on virtually any MIMD computer. Performance results for sorting different data sets are presented...|$|E
40|$|After {{the years}} of {{research}} done by scientists, {{it is found that}} binary search is more efficient than the linear search. Earlier, the <b>sorting</b> <b>time</b> of linear search before the application of binary search appeared not to have been considered. In Linear search algorithm searching begins with searching every element of the list till the required record is found and if the list is quite huge, then this approach is not optimal. The drawbacks of sequential search can be eliminated by using Binary search algorithm. This paper analyzes both the algorithms at some extent for the applicability and execution efficiency...|$|E
6000|$|The turnip-hoer {{had already}} begun shaking his head. [...] "Why, save the man, what wisdom's in him that 'a should come to Weydon for a job of that <b>sort</b> this <b>time</b> o' year?" ...|$|R
50|$|If {{the player}} {{runs out of}} fuel or gets totally damaged, the mission becomes an {{immediate}} failure. In this manner, the fuel acts as a <b>sort</b> of <b>time</b> limit that is realistically indicated in-game.|$|R
50|$|The aml {{data set}} <b>sorted</b> by {{survival}} <b>time</b> {{is shown in}} the box.|$|R
