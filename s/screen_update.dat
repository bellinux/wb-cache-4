20|145|Public
500|$|The Game Gear version {{received}} positive reviews, {{with some}} {{comparing it to}} the Mega Drive version. A reviewer from [...] describes its music as reminiscent of the Mega Drive soundtrack, and lauded the animation, saying its speed is [...] "incredible". Mean Machines Sega reviewer described the Game Gear version as [...] "every bit as playable as the Mega Drive classic", but criticised the <b>screen</b> <b>update,</b> saying it [...] "makes things a bit muddy". [...] reviewer praised the originality of the circuits, but described the sound as average. A reviewer from [...] thought that multiplayer is better with two units linked than with two players sharing one.|$|E
50|$|A {{top-level}} interface. Documents may {{be opened}} and saved through this interface. Some <b>screen</b> <b>update</b> control is achieved here as well. Undo/redo grouping is implemented here. Arbitrary text ranges (ITextRange) and a text range for currently selected text (ITextSelection) are provided, {{which are used}} to modify or review the document.|$|E
50|$|The DECmates were {{acceptable}} for word-processing, {{but due to}} various hardware quirks, were somewhat incompatible with many existing PDP-8 programs, largely eliminating one potential advantage of the DECmate series over the IBM PC systems. The I/O interfaces worked slightly differently, which meant that most existing user and system programs could not detect Control-C and exit reliably. Every program, both user and system, had to be patched to fix this anomaly. Additionally, the CPU and <b>screen</b> <b>update</b> speeds were noticeably slower than the older PDP-8 systems.|$|E
25|$|Navigation <b>screen</b> <b>updated</b> from 4:3 {{to larger}} 16:9 widescreen.|$|R
50|$|The National Comprehensive Cancer Network (NCCN) {{included}} multitarget sDNA test {{in their}} NCCN Guidelines Version 2.2016 Colorectal Cancer <b>Screening,</b> <b>updated</b> October 20, 2016.|$|R
50|$|Version 5 {{included}} many bug fixes, {{as well as}} some new visual features and a customizable setup file. Some of the notable features included a modified logon <b>screen,</b> <b>updated</b> visual styles an improved transformation process.|$|R
50|$|Another {{advantage}} of text mode {{is that it}} has relatively low bandwidth requirements in remote terminal use. Thus, a text mode remote terminal can necessarily update the screen much faster than a graphics mode remote terminal linked to the same amount of bandwidth (and in turn will seem more responsive), since the remote server may only need to transmit a few dozen bytes for each <b>screen</b> <b>update</b> in text mode, as opposed to complex raster graphics remote procedure calls that may require the transmission and rendering of entire bitmaps.|$|E
50|$|Present accepts any X pixmap as {{the source}} for a <b>screen</b> <b>update.</b> Since pixmaps are {{standard}} X objects, Present can be used not only by DRI3 clients performing direct rendering, but also by any X client rendering on a pixmap by any means. For example, most existing non-GL based GTK+ and Qt applications used to do double buffered pixmap rendering using XRender. The Present extension {{can also be used}} by these applications to achieve efficient and non-tearing screen updates. This is the reason why Present was developed as a separate standalone extension instead of being part of DRI3.|$|E
5000|$|Web-based SSH servers that utilize {{server-side}} {{terminal emulation}} typically {{keep track of}} the terminal screen and state in memory and convert it to HTML either when a <b>screen</b> <b>update</b> occurs or when the client expressly requests an update. The advantage of this method is that the state of the terminal remains persistent even if the user connects to their existing session(s) from a different web browser. It also enables the server to act upon terminal output even if the user is disconnected. [...] The disadvantage of this method is that it uses up more CPU and memory on the server.|$|E
50|$|Among notable {{enhancements}} are file transfers, {{support for}} Windows DFMirage mirror driver to detect <b>screen</b> <b>updates</b> (saves CPU time {{and increases the}} performance of TightVNC), ability to zoom the picture and automatic SSH tunneling on Unix.|$|R
50|$|Unlike {{the similar}} Xnest, Xephyr {{supports}} modern X extensions (even if host server doesn't) such as composite, damage, randr, etc. It uses SHM images and shadow framebuffer updates to provide good performance. It {{also has a}} visual debugging mode for observing <b>screen</b> <b>updates.</b>|$|R
50|$|The {{program was}} written in Turbo Pascal, using the Turbo Vision GUI. This base was a good match for the PCs of that time. Turbo Vision in its early incarnations used the 80×25 {{character}} text mode, meaning very speedy <b>screen</b> <b>updates,</b> even on slow PCs.|$|R
5000|$|The Game Gear version {{received}} positive reviews, {{with some}} {{comparing it to}} the Mega Drive version. A reviewer from Consoles + describes its music as reminiscent of the Mega Drive soundtrack, and lauded the animation, saying its speed is [...] "incredible". Mean Machines Sega reviewer described the Game Gear version as [...] "every bit as playable as the Mega Drive classic", but criticised the <b>screen</b> <b>update,</b> saying it [...] "makes things a bit muddy". Player One reviewer praised the originality of the circuits, but described the sound as average. A reviewer from Mega Fun thought that multiplayer is better with two units linked than with two players sharing one.|$|E
50|$|The VIC chip had {{readable}} scan-line counters {{but could}} not generate interrupts based on the scan position (as the VIC-II chip could). However, the two VIA timer chips could be tricked into generating interrupts at specific screen locations, by setting up the timers after a position had been established by repetitive reading of the scan-line counter, and letting them run {{the exact number of}} cycles that pass by during one full <b>screen</b> <b>update.</b> Thus it was possible, but difficult, to e.g. mix graphics with text above or below it, or to have two different background and border colors, or to use more than 200 characters for the pseudo-high-resolution mode. The VIC chip could also process a light pen signal (a light pen input was provided on the DE-9 joystick connector) but few of those ever appeared on the market.|$|E
50|$|Each episode {{ends with}} a series of black screens (white in season 13), upon which text discusse the addicts and their {{progress}} since the intervention (including a sobriety date, if known), followed by its website link that invites viewers to find out more information on addiction and recovery. The white screens are updated with new information each time the show is re-aired on A&E, and some video updates are made available on the show's website. Occasionally, an update documents an outreach to the addict from fans. The update for siblings Brooks and Ian's follow-up episode that re-aired in early 2008 indicated that Brooks had met and married a fan in 2007. At the end of the original episode featuring alcoholic banker and bar brawler Jacob, he stated that he was planning to enroll in college for the upcoming semester; the black <b>screen</b> <b>update</b> for his episode that re-aired in early 2008 indicated that a fan had contacted the producers after the show's airing and offered to pay for Jacob's college tuition.|$|E
50|$|All mouse {{movements}} and keyboard signals are {{transferred from the}} local computer directly to the remote computer over the network (via LAN or Internet), relaying the graphical <b>screen</b> <b>updates</b> back in the other direction. Radmin Server uses the mirror driver (also known as video hook driver) to read the remote screen bypassing video display controller. Mirror driver allows to read only changing parts of the screen. The new DirectScreenTransfer technology was implemented in {{the latest version of}} Radmin. Developers of the software claim that the adaptation of the new video driver allows Radmin to dramatically increase the rate of <b>screen</b> <b>updates</b> with a minimum utilization of CPU. Security features may be added such as user prompt and limitations on what a user can do. Multiple user accounts can be created all with different privileges.|$|R
5000|$|DRI3 {{provides}} no mechanism {{to show the}} rendered buffers on the screen, but relies on another extension, the Present extension, to do so. Present is so named because its main task is to [...] "present" [...] buffers on the screen, meaning that it handles the update of the framebuffer using {{the contents of the}} rendered buffers delivered by client applications. <b>Screen</b> <b>updates</b> have to be done at the proper time, normally during the VBLANK interval in order to avoid display artifacts such as tearing. Present also handles the synchronization of <b>screen</b> <b>updates</b> to the VBLANK interval. It also keeps the X client informed about the instant each buffer is really shown on the screen using events, so the client can synchronize its rendering process with the current screen refresh rate.|$|R
50|$|In computing, Virtual Network Computing (VNC) is a {{graphical}} desktop sharing {{system that}} uses the Remote Frame Buffer protocol (RFB) to remotely control another computer. It transmits the keyboard and mouse events from one computer to another, relaying the graphical <b>screen</b> <b>updates</b> back in the other direction, over a network.|$|R
40|$|Abstract — Server-based {{computing}} (SBC) {{is becoming}} a popular approach to deliver computational services across the network due to its reduced administrative costs and better resource utilization. In SBC, all application processing is done on servers while only screen updates are sent to clients. While many SBC encoding techniques have been explored for transmitting these screen updates efficiently, existing <b>screen</b> <b>update</b> approaches do not effectively support multimedia applications. To address this problem, we propose optimal linear interpolation (OLI), a new pixelbased SBC <b>screen</b> <b>update</b> coding algorithm. With OLI, the server selects and transmits only {{a small sample of}} pixels to represent a <b>screen</b> <b>update.</b> The client recovers the complete <b>screen</b> <b>update</b> from these samples using piecewise linear interpolation to achieve the best visual quality. OLI can be used to provide lossless or lossy compression to adaptively trade-off between network bandwidth and processing time requirements. We further propose and evaluate 2 -D lossless linear interpolation (2 DLI), which is based on OLI but additionally provides lower encoding complexity for lossless compression. Our experimental results show that when compared with other compression methods, 2 DLI provides good data compression ratio with modest computational overhead, for both servers and clients. I...|$|E
40|$|We propose an {{approach}} to remote display systems in which the client predicts the <b>screen</b> <b>update</b> events that the server will send and applies them to the screen immediately, thus eliminating the network round-trip time and making the system much more responsive in a wide-area environment. Incorrectly predicted events are undone when the actual events arrive from the server. The predictability of the events is core to the feasibility of this approach. Surprisingly, even a very naive predictor is able to correctly predict the next event 25 - 45 % of the time. This suggests the prospects for speculative remote display are quite good...|$|E
40|$|At the NASA Glenn Research Center (GRC), Existing Programmable Logic Controller (PLC) I/O was {{replaced}} with Distributed Control System (DCS) I/O, while keeping the existing PLC sequence Logic. The reason for integration of the PLC logic and DCS I/O, along with {{the evaluation of the}} resulting system {{is the subject of this}} paper. The pros and cons of the old system and new upgrade are described, including operator workstation <b>screen</b> <b>update</b> times. Detail of the physical layout and the communication between the PLC, the DCS I/O and the operator workstations are illustrated. The complex characteristics of a central process control system and the plan to remove the PLC processors in future upgrades is also discussed...|$|E
50|$|Chrome Remote Desktop is {{a remote}} desktop {{software}} tool developed by Google {{that allows a}} user to remotely control another computer using a Chromoting protocol developed by Google. It transmits the keyboard and mouse events from one computer to another, relaying the graphical <b>screen</b> <b>updates</b> back in the other direction, over a network.|$|R
50|$|Over its life, the {{software}} {{has evolved from}} a DOS to a Microsoft Windows environment. It included graphics that simulate a TRACON air traffic controller's situation. At periodic <b>screen</b> <b>updates,</b> aircraft icons move slowly across the controller's sector. The player sees an aircraft icon with its identifier (AA34) and the aircraft's altitude or flight level (110).|$|R
5000|$|Starring Sherlock Holmes: A Century of the Master Detective on <b>Screen</b> (2001, <b>updated</b> 2007) ...|$|R
40|$|Virtual Network Computing (VNC) is a {{graphical}} desktop sharing {{system to}} remotely control another computer. It {{makes use of}} Remote Frame Buffer protocol which is a simple protocol for remote access to Graphical User Interface. VNC allows users to access graphical displays quickly and easily. This paper proposes a new architecture for remote control of android mobile devices which allows sharing of displays between android mobile phone and PCs. This process {{must be carried out}} within Wi-Fi range irrespective of various platforms like Windows, Mac or Linux. The image of the desktop should be compressed before transmission. A modified region algorithm is used to reduce the encoding time of screen image and increase the <b>screen</b> <b>update</b> rate. A number of video encoders are integrated into a prototype system. ...|$|E
40|$|This paper {{presents}} a cognitive model that simulates reliance on automation using a line-tracing task similar to driving where an operator has to track a moving {{line with a}} circle by pressing keys on a keyboard (manual control) or rely on automation (auto control). An operator can switch between auto and manual control during the task. The success probabilities of each control mode were systematically varied. An ACT-R model to perform this task was constructed by representing reliance on the automation as production. The model performs this task through productions that manage the perceptual/motor modules. The utility values of these productions are updated based on the rewards in every <b>screen</b> <b>update.</b> We also introduce a meta-level monitoring the internal state of the model. A preliminary run of this model simulated the overall trends of the behavioral data, suggesting some validity of the assumptions made in our model. Keywords: Automation; ACT-R; Trust...|$|E
40|$|Redisplay after {{a change}} to {{an object in}} a {{traditional}} structured graphics environment only affects the modified object and any objects that intersect it on the screen. For user interface components such as Xt widgets, redisplay may involve recomputing the layout of other user interface objects. Fresco unifies structured graphics and user interface components under a common base abstraction, which provides a simple, powerful model but complicates the redisplay problem. As part of the Fresco implementation, we have implemented a general redisplay algorithm that recomputes layout when necessary but minimizes the cost of performing transformations when updating a structured graphics hierarchy. Our implementation can also run redisplay as a separate thread, allowing independent application threads to trigger <b>screen</b> <b>update.</b> Introduction Fresco is a user interface system that has three distinguishing features with respect to Xt and many other systems. First, the Fresco specification uses a [...] ...|$|E
50|$|In 2010, the Denis Theatre Foundation {{broke down}} the project into two phases. This first phase {{includes}} opening one <b>screen,</b> <b>updating</b> or replacing basic systems, and installing an elevator. The {{second phase of}} renovation includes opening two more screens, restoring the stage, and adding meeting rooms. For the first phase to be complete, an estimated $2.5 million will be needed.|$|R
50|$|The use of vector {{graphics}} combined with program code allows Flash files to be smaller—and thus allows streams to use less bandwidth—than the corresponding bitmaps or video clips. For content {{in a single}} format (such as just text, video, or audio), other alternatives may provide better performance and consume less CPU power than the corresponding Flash movie, for example when using transparency or making large <b>screen</b> <b>updates</b> such as photographic or text fades.|$|R
50|$|The 2008 renovations {{include the}} {{expansion}} of the seating capacity of the stadium from 68,252 to 92,100, mostly through the complete encircling of the second deck, new media and VIP facilities, a new scoreboard and video <b>screen,</b> <b>updated</b> restrooms and concession areas, lighting, utility and sound upgrades and the replacement of all the stadium's seats. A new record for attendance was set when 96,009 fans attended the 2009 Oklahoma vs. Texas football game.|$|R
40|$|We propose an {{approach}} to remote display systems in which the client predicts the <b>screen</b> <b>update</b> events that the server will send and applies them to the screen immediately, thus eliminating the network round-trip time and making the system more responsive in a wide-area or high loss environment. Incorrectly predicted events are undone when the actual events arrive from the server. The approach requires no server or protocol changes, and thus can work with existing systems. Since it is core to the feasibility of such a speculative remote display system, we study the predictability {{of the events that}} occur under typical workloads in two extant systems, Windows Remote Desktop and VNC. We find that simple, statelimited Markov models are often able to correctly predict the next event. Based on these results, we design, implement, and evaluate a speculative remote display extension to the VNC client. In our implementation, the end user can trade off between the responsiveness of the display and the level of temporarily displayed incorrect predictions. We evaluate VNC/SRD with two user studies. We conclude by describing design alternatives...|$|E
40|$|Through {{the use of}} {{software}} VNC, acronym for virtual network computing, makes it possible tointeract with a computer from any computer or mobile device on the Internet. VNC software provides crossplatformsupport allowing remote control between different types of computers. To use VNC you must have anetwork TCP/IP connection, a VNC server and a VNC viewer to connect to the computer running the VNCserver. The open source version of VNC has been freely available since 1998, and more than 20 millioncopies of the software have been downloaded. The existing RFB protocol is extended straightforwardly tointegrate video codecs. Next, the overall system architecture is modified from serial operation to parallel. Finally, we propose a modified region coding to further reduce the encoding time of screen images. Theproposed methods are implemented into our prototype mobile VNC system, and practical performances arewidely evaluated. We report that JPEG is the most suitable for mobile VNC {{in terms of both}} complexity andcompression ratio. In addition, the proposed modified region coding can decrease encoding time andconsequently increase <b>screen</b> <b>update</b> rate...|$|E
40|$|Reporter cell biosensors utilize {{reporter}} {{cells that}} produce a measureable signal {{with respect to}} changes in the chemical or physical environment. Pseudomonas aeruginosa produces the electroactive blue-green compound pyocyanin that is ideal as a reporter compound because it is detectable electrochemically, spectroscopically, and visually. The FAD dependant monooxygenase PhzS affects the final step in pyocyanin biosynthesis. To construct a reporter cell, a deletion mutant of phzS was generated in P. aeruginosa PAO 1, and this strain was complemented by plasmid pDOH 54 which contains IPTG inducible Ptrc promoter upstream of phzS. A low cost (3 ̆c 3) sterilizable electrochemical cell with carbon paste working and auxiliary electrodes and Ag/AgCl quasi-reference electrode was developed for electrochemical monitoring of the reporter cells. Using this electrochemical cell, pyocyanin standards were quantified in the concentration range 571 nM- 38. 1 μM (R 23 ̆e 0. 99) with cyclic voltammetry at 0. 5 V/s, and square wave voltammetry at 400 Hz was used to detect pyocyanin down to 114 nM. Electrochemical monitoring of live cells revealed that reporter strain P. aeruginosa (delta) phzS pDOH 54 had eightfold higher electrochemical activity than the P. aeruginosa (delta) phzS strain, indicating that electrochemical activity of the reporter cells is primarily affected by PhzS mediated pyocyanin production. P. aeruginosa (delta) phzS pDOH 54 cells exposed to 0. 0 - 75. μM IPTG did not show significantly different electrochemical activity (p 3 ̆e 0. 05) over a 19. 3 hour monitoring period which implicates non-selective low level induction of phzS of the Ptrc promoter in MOPS buffered glucose medium. To enable reporter cell biosensors to operate remotely, a biosensor network was constructed using the Rabbit 4200 embedded, Ethernet-enabled microprocessor coupled to a PMT and arsenic responsive reporter Pseudomonas fluorescens arsR::lux strain 18 HR. Arsenic was detected remotely in real time at concentrations of 1 ppm and 10 ppm in less than 60 minutes after exposure. Also, web services technology was integrated into biosensor and humidity control instrumentation for remote web browser monitoring. Web pages using client-side AJAX controls were found to use less than 2 kb per <b>screen</b> <b>update</b> compared to greater than 20 kb per <b>screen</b> <b>update</b> for an equivalent server-side solution based on ASP. NET web forms controls. This research demonstrates the feasibility of distributing reporter cell biosensors in a networked array format with detection over the Internet. Future work will modify the regulation of phzS for development of a reporter cell biosensor that utilizes the pyocyanin biosynthetic pathway of P. aeruginosa. ...|$|E
50|$|Periodically {{throughout}} the afternoon, producers {{keep track of}} and update viewers {{on the status of}} fantasy football statistics, and/or other statistical superlatives. The channel's priority, however, is to show every touchdown scored in every game {{throughout the}} afternoon. During the entire day, RedZone features a ticker {{at the bottom of the}} <b>screen,</b> <b>updating</b> scores and stats throughout the league. The ticker is situated in such a way that it is superimposed over the respective tickers of CBS and FOX.|$|R
5000|$|In January-March 1925 the {{magazine}} was published under the title [...] "Screen Film Gazeta", in 1929-1930 - [...] "Cinema and Life", in 1931-1939 - [...] "Proletarian Cinema", in 1991-1997 - [...] "Screen". Prior to 1992, the journal was the organ of the Union of Cinematographers of the USSR State Committee for Cinematography and the USSR. The journal published articles on domestic and foreign movie <b>screen</b> <b>updates,</b> articles on cinema history, criticism, creative portraits of actors and cinematography workers.|$|R
50|$|Zone 66 is a {{top down}} {{shooting}} video game released in 1993 for DOS as shareware. The game was created by a North American Demo Scene group called Renaissance, and was published by Epic MegaGames (now Epic). The group developed a 386 protected-mode (PMODE) extender to enable the game to play on a 386 processor clocked at 16 MHz with full <b>screen</b> <b>updates.</b> This required the PC to be rebooted before and after play, so the game could bypass MS-DOS and boot into its own environment, much like PC booter games of the 1980s.|$|R
