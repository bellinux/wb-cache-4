314|234|Public
25|$|Both the PPE and SPE are RISC {{architectures}} with a fixed-width 32-bit instruction format. The PPE {{contains a}} 64-bit {{general purpose register}} set (GPR), a 64-bit floating point register set (FPR), and a 128-bit Altivec register set. The SPE contains 128-bit registers only. These {{can be used for}} <b>scalar</b> <b>data</b> types ranging from 8-bits to 64-bits in size or for SIMD computations on a variety of integer and floating point formats. System memory addresses for both the PPE and SPE are expressed as 64-bit values for a theoretic address range of 264 bytes (16 exabytes or 16,777,216 terabytes). In practice, not all of these bits are implemented in hardware. Local store addresses internal to the SPU (Synergistic Processor Unit) processor are expressed as a 32-bit word. In documentation relating to Cell a word is always taken to mean 32 bits, a doubleword means 64 bits, and a quadword means 128 bits.|$|E
50|$|The {{simplest}} <b>scalar</b> <b>data</b> types, such as integer and floating-point numbers, {{are nearly}} always first-class.|$|E
5000|$|Register files {{sometimes}} {{also have}} hierarchy: The Cray-1 (circa 1976) had eight address [...] "A" [...] and eight <b>scalar</b> <b>data</b> [...] "S" [...] registers that were generally usable. There {{was also a}} set of 64 address [...] "B" [...] and 64 <b>scalar</b> <b>data</b> [...] "T" [...] registers that took longer to access, but were faster than main memory. The [...] "B" [...] and [...] "T" [...] registers were provided because the Cray-1 {{did not have a}} data cache. (The Cray-1 did, however, have an instruction cache.) ...|$|E
3000|$|In {{contrast}} to the selection of magnetic vector and <b>scalar</b> field <b>data</b> (Kp < 2 ^ 0, |dRC/dt| < 2  nT/h, a condition that in 2014 – 2015 was fulfilled for 39 [...]...|$|R
3000|$|... {{and because}} we use <b>scalar</b> (intensity) <b>data</b> rather than vector data. Note that for the single-day results {{presented}} in the ‘Results and discussion’ section, the time-independent version of (2) and (6) {{was used for the}} field modelling.|$|R
40|$|<b>Scalar</b> aeromagnetic <b>data</b> {{obtained}} {{during the}} U. S. Naval Oceanographic Office (NOO) -Vector Magnetic Survey of the conterminous United States were upward continued by equivalent point source inversion and compared with POGO satellite magnetic anomaly and preliminary <b>scalar</b> MAGSAT <b>data.</b> Initial comparisons {{indicate that the}} upward continued NOO data is dominated by long wavelength (approximately equal to 1000 to 3000 km) anomalies which are not present in the satellite anomaly data. Thus, the comparison of the data sets is poor. Several possible sources for these differences {{are present in the}} data analysis chain. However, upon removal of these long wavelengths from the upward continued NOO data, a close comparison observed between the anomalies verifies that satellite magnetic anomaly data do portray the crustal component within a range of wavelengths from roughly 1000 km down to the resolution limit of the observations...|$|R
50|$|OpenCRG handles any {{arbitrary}} <b>scalar</b> <b>data</b> {{versus a}} reference grid. These are typically elevation data or friction coefficients. By this, different applications like tire- or vibration simulations {{take advantage of}} the open surface descriptions format OpenCRG.|$|E
5000|$|... n (n-based indexing): The base {{index of}} an array can be freely chosen. Usually {{programming}} languages allowing n-based indexing also allow negative index values and other <b>scalar</b> <b>data</b> types like enumerations, or characters {{may be used}} as an array index.|$|E
5000|$|YAML, {{is similar}} to JSON and {{includes}} features that make it more powerful for serialization, more [...] "human friendly," [...] and potentially more compact. These features include a notion of tagging data types, support for non-hierarchical data structures, the option to structure data with indentation, and multiple forms of <b>scalar</b> <b>data</b> quoting.|$|E
40|$|This paper {{presents}} some novel interface {{techniques for}} the visualization of <b>scalar</b> field <b>data</b> in virtual reality (VR) environments. In particular, {{we discuss the}} direct manipulation of isosurfaces and cutting planes and give general guidelines for design of user interfaces and algorithms for scientific visualization in virtual environments. This work was motivated {{by the need to}} visualize <b>scalar</b> field <b>data</b> from computational fluid dynamics (CFD) calculations interactively in the Virtual Wind Tunnel at NASA Ames, but the techniques are applicable to other problem areas, including medical imaging and geological and mathematical visualization. KEYWORDS: scientific visualization, virtual reality, direct-manipulation interfaces, scalar fields, isosurfaces, cutting planes INTRODUCTION Data sets in scientific visualization often take the form of 2 D and 3 D scalar fields. For example, height data on a 2 D topographic map, temperatures in the fluid flow over a wing, and the density information [...] ...|$|R
30|$|A model {{study of}} the PEJ’s using Magsat <b>scalar</b> {{magnetic}} satellite <b>data</b> and a current model consisting {{of a series of}} line currents perpendicular to the satellite track was presented by Olsen (1996) and later applied to CHAMP satellite data by Ritter et al. (2003) and Ritter et al. (2004). The use of <b>scalar</b> magnetic satellite <b>data</b> is a simplification compared to using the full vector data, resulting in similar results to a ground magnetic chain. The line current method has been applied to multi-satellite data by Olsen et al. (2002) and Moretto et al. (2002).|$|R
40|$|ABSTRACT: Intermolecular ion pairs (salt bridges) {{are crucial}} for protein−DNA association. For two protein−DNA complexes, we {{demonstrate}} that the ion pairs of protein side-chain NH 3 + and DNA phosphate groups undergo dynamic transitions between distinct states in which the charged moieties are either in direct contact or separated by water. While the crystal structures of the complexes show only the solvent-separated ion pair (SIP) state for some interfacial lysine side chains, our NMR hydrogen-bond <b>scalar</b> coupling <b>data</b> clearly indicate {{the presence of the}} contact ion pair (CIP) state for the same residues. The 0. 6 -μs molecular dynamics (MD) simulations confirm dynamic transitions between the CIP and SIP states. This behavior is consistent with our NMR order parameters and <b>scalar</b> coupling <b>data</b> for the lysine side chains. Using the MD trajectories, we also analyze the free energies of the CIP−SIP equilibria. This work illustrates the dynamic nature of short-range electrostatic interactions in DNA recognition by proteins...|$|R
50|$|Scalar {{functions}} {{return a}} single data value (not a table) with RETURNS clause. Scalar functions can use all <b>scalar</b> <b>data</b> types, with exception of timestamp and user-defined data types. Inline table-valued functions return the result set {{of a single}} SELECT statement. Multistatement table-valued functions return a table, which was built with many TRANSACT-SQL statements.|$|E
50|$|Like {{other similar}} {{languages}} such as APL and MATLAB, R supports matrix arithmetic. R's data structures include vectors, matrices, arrays, data frames (similar to tables in a relational database) and lists. R's extensible object system includes objects for (among others): regression models, time-series and geo-spatial coordinates. The <b>scalar</b> <b>data</b> type {{was never a}} data structure of R. Instead, a scalar is represented as a vector with length one.|$|E
50|$|SQR {{has four}} <b>scalar</b> <b>data</b> types. The first three are numeric (variables begin with “#”), {{character}} string (variables begin with “$”), and date (variables begin with “$”, same as with character string variables.). Date variables must be declared, to {{be distinguished from}} character string variables. There is the option to declare numeric variables to specify them more precisely (integer, floating point, etc.). The last data type is a database column (variables begin with “&”). The values of database columns are set only by a SQL “select” statement; no other command can change their values.|$|E
40|$|A {{preliminary}} regional scale {{magnetic anomaly}} map {{derived from the}} Magsat data over the continental U. S. shows reasonably good correlations {{when compared with the}} corresponding aeromagnetic map. This conclusion is based upon the analysis of the fine attitude <b>scalar</b> Magsat <b>data</b> of about a two-month duration starting November 2, 1979 and the analysis of the Project Magnet U. S. aeromagnetic data in the same region...|$|R
5000|$|In mathematics, Digital Morse {{theory is}} a digital {{adaptation}} of continuum Morse theory for <b>scalar</b> volume <b>data.</b> This {{is not about}} the Samuel Morse's [...] "Morse Code" [...] of long and short clicks or tones, written as dots ("dit") and dashes("dah") used in manual electric telegraphy. The term was first promulgated by DB Karron {{based on the work of}} JL Cox and DB Karron ...|$|R
3000|$|In addition, the Swarm scalar and vector Level- 1 b {{data are}} sub-sampled every 10 s, which {{corresponds}} to an along-track spacing of about 75 km. We separate the <b>scalar</b> and vector <b>data</b> into mid-latitudes (magnetic latitudes between − 52 ° and 52 °) and high latitudes (magnetic latitudes larger than 52 ° in absolute value). Vector data at polar latitudes are not considered. All <b>scalar</b> and vector <b>data</b> at mid-latitudes are {{taken in the}} 23 : 00 – 6 : 00 local time window, {{in order to minimize}} the contributions from the ionospheric S [...]...|$|R
50|$|The Cray T90 series (code-named Triton during development) was {{the last}} of a line of vector {{processing}} supercomputers manufactured by Cray Research, Inc, superseding the Cray C90 series. The first machines were shipped in 1995, and featured a 2.2 ns (450 MHz) clock cycle and two-wide vector pipes, for a peak speed of 1.8 gigaflops per processor; the high clock speed arises from the CPUs being built using ECL logic. As with the Cray J90, each CPU contained a <b>scalar</b> <b>data</b> cache, in addition to the instruction buffering/caching which has always been in Cray architectures.|$|E
50|$|One compute unit {{combines}} 64 shader processors with 4 TMUs. The compute unit {{is separate}} from, but feed into, the Render output units (ROPs). Each Compute Unit {{consists of a}} CU Scheduler, a Branch & Message Unit, 4 SIMD Vector Units (each 16-lane wide), 4 64KiB VGPR files, 1 scalar unit, a 4 KiB GPR file, a local data share of 64 KiB, 4 Texture Filter Units, 16 Texture Fetch Load/Store Units and a 16 KiB L1 Cache. Four Compute units are wired to share an Instruction Cache 16 KiB in size and a <b>scalar</b> <b>data</b> cache 32KiB in size. These are backed by the L2 cache. A SIMD-VU operates on 16 elements at a time (per cycle), while a SU can operate on one a time (one/cycle). In addition the SU handles some other operations like branching.|$|E
5000|$|Other data types. Member {{properties}} are equivalent to attributes {{in the data}} warehouse sense. They can be retrieved by name in a query through an axis PROPERTIES clause of a query. The <b>scalar</b> <b>data</b> value of a member property for some member can be accessed in an expression through MDX, either by naming the property (for example, [...] ) or by using a special access function (for example, [...] ). In limited contexts, MDX allows other data types as well - for example Array can be used inside the [...] function to specify an array that is not processed by MDX but passed to a user-defined function in an ActiveX library. Objects of other data types are represented as scalar strings indicating the object names, such as measure group name in Microsoft's [...] function or KPI name in for example Microsoft's [...] or [...] functions.|$|E
3000|$|... 3 Oersted and CHAMP {{data are}} {{associated}} with lower residuals towards the geomagnetic equator. This trend is less obvious with Swarm data, which present on average lower residuals for both <b>scalar</b> and vector <b>data.</b>|$|R
40|$|Abstract—We {{present a}} {{framework}} for segmenting and storing filament networks from <b>scalar</b> volume <b>data.</b> Filament networks are encountered more and more commonly in biomedical imaging due to advances in high-throughput microscopy. These data sets are characterized by a complex volumetric network of thin filaments embedded in a scalar volume field. High-throughput microscopy volumes are also difficult to manage since they can require several terabytes of storage, even though the total volume of the embedded structure is much smaller. Filaments in microscopy data sets are difficult to segment because their diameter is often near the sampling resolution of the microscope, yet these networks can span large regions of the data set. We describe a novel method to trace filaments through <b>scalar</b> volume <b>data</b> sets that is robust to both noisy and under-sampled data. We use graphics hardware to accelerate the tracing algorithm, making it more useful for large data sets. After the initial network is traced, we use an efficient encoding scheme to store volumetric data pertaining to the network. Index Terms—microscopy, vessel, neuron, segmentation, tracking. ...|$|R
30|$|Three vector {{components}} of the magnetic field were taken for quasi-dipole (QD) latitudes equatorward of ± 55 °, while <b>scalar</b> field (intensity) <b>data</b> only were used for higher QD latitudes or when attitude data were not available.|$|R
50|$|Both the PPE and SPE are RISC {{architectures}} with a fixed-width 32-bit instruction format. The PPE {{contains a}} 64-bit {{general purpose register}} set (GPR), a 64-bit floating point register set (FPR), and a 128-bit Altivec register set. The SPE contains 128-bit registers only. These {{can be used for}} <b>scalar</b> <b>data</b> types ranging from 8-bits to 64-bits in size or for SIMD computations on a variety of integer and floating point formats. System memory addresses for both the PPE and SPE are expressed as 64-bit values for a theoretic address range of 264 bytes (16 exabytes or 16,777,216 terabytes). In practice, not all of these bits are implemented in hardware. Local store addresses internal to the SPU (Synergistic Processor Unit) processor are expressed as a 32-bit word. In documentation relating to Cell a word is always taken to mean 32 bits, a doubleword means 64 bits, and a quadword means 128 bits.|$|E
5000|$|An {{advantage}} that's reappearing post-2000 is {{safety or}} security. Mainstream IT has largely moved to languages with type and/or memory safety for most applications. The software those depend on, from OS to virtual machines, leverage native code with no protection. Many vulnerabilities {{have been found}} in such code. One solution is to use a processor custom built to execute a safe high level language or at least understand types. Protections at the processor word level make attackers' job difficult compared to low level machines that see no distinction between <b>scalar</b> <b>data,</b> arrays, pointers, or code. Academics are also developing languages with similar properties that might integrate with high level processors in the future. An example of both of these trends is the SAFE project. Compare language-based systems, where the software (especially operating system) is based around a safe, high-level language, though the hardware need not be: the [...] "trusted base" [...] may still be in a lower level language.|$|E
50|$|To {{construct}} a contour boxplot, data ordering {{is the first}} step. In functional data analysis, each observation is a real function, therefore data ordering {{is different from the}} classical boxplot where <b>scalar</b> <b>data</b> are simply ordered from the smallest sample value to the largest. More generally, data depth, gives a center-outward ordering of data points, and thereby provides a mechanism for constructing rank statistics of various kinds of multidimensional data. For instance, functional data examples can be ordered using the method of band depth or a modified band depth. In contour data analysis, each observation is a feature-set (a subset of the domain), and therefore not a function. Thus, the notion of band depth and modified band depth is further extended to accommodate features that can be expressed as sets but not necessarily as functions. Contour band depth allows for ordering feature-set data from the center outwards and, thus, introduces a measure to define functional quantiles and the centrality or outlyingness of an observation. Having the ranks of feature-set data, the contour boxplot is a natural extension of the classical boxplot which in special cases reduces back to the traditional functional boxplot.|$|E
40|$|A {{piecewise}} rational cubic spline [5] {{has been}} used to visualize the positive data in its natural form. The spline representation is interpolatory and applicable to the <b>scalar</b> valued <b>data.</b> The shape parameters in the description of a rational cubic have been constrained {{in such a way that}} they preserve the shape of the positive data in the view of positive curve. As far as visual smoothness is concerned, the curve scheme under discussion is C¹...|$|R
40|$|This paper {{introduces}} {{an interactive}} classification technique for volume data, called ISpace, which uses Independent Component Analysis (ICA) and a multidimensional histogram {{of the volume}} data in a transformed space. Essentially, classification in the volume domain becomes equivalent to interactive clipping in the ICA space, which as demonstrated using several examples is more intuitive and direct for the user to classify data. The result is an opacity transfer function defined for rendering multivariate <b>scalar</b> volume <b>data...</b>|$|R
40|$|The Magsat scalar {{magnetometer}} {{is derived}} from optical pumping magnetometers flown on the orbiting geophysical observatories. The basic sensor, a cross-coupled arrangement of absorption cells, photodiodes, and amplifiers, oscillates at the Larmor frequency of atomic moments precessing about the ambient field direction. The Larmor frequency output is accumulated digitally and stored for transfer to the spacecraft telemetry stream. In orbit the instrument has met its principal objective of calibrating the vector magnetometer and providing <b>scalar</b> field <b>data...</b>|$|R
5000|$|The new API {{features}} shader tracing and HLSL compiler enhancements, {{support for}} minimum precision HLSL <b>scalar</b> <b>data</b> types, [...] UAVs (Unordered Access Views) at every pipeline stage, target-independent rasterization (TIR), option to map SRVs of dynamic buffers with NO_OVERWRITE, shader processing of video resources, option to use logical operations in a render target, option to bind a subrange of a constant buffer to a shader and retrieve it, option to create larger constant buffers than a shader can access, option to discard resources and resource views, option to change subresources with new copy options, option {{to force the}} sample count to create a rasterizer state, option to clear {{all or part of}} a resource view, option to use Direct3D in Session 0 processes, option to specify user clip planes in HLSL on feature level 9 and higher, support for shadow buffer on feature level 9, support for video playback, extended support for shared Texture2D resources, and on-the-fly swapping between Direct3D 10 and 11 contexts and feature levels. Direct3D 11.1 includes new feature level 11_1, which brings minor updates to the shader language, such as larger constant buffers and optional double-precision instructions, as well as improved blending modes and mandatory support for 16-bit colour formats to improve the performance of entry-level GPUs such as Intel HD Graphics. WARP has been updated to support feature level 11_1.|$|E
50|$|One of the {{problems}} facing real-time ocean observatories {{is the ability to}} provide a fast and accurate assessment of the data quality. Ocean Networks Canada {{is in the process of}} implementing real-time quality control on incoming data. For <b>scalar</b> <b>data,</b> the aim is to meet the guidelines of the Quality Assurance of Real Time Oceanographic Data (QARTOD) group. QARTOD is a US organization tasked with identifying issues involved with incoming real-time data from the U.S Integrated Ocean Observing System (IOOS). A large portion of their agenda is to create guidelines for how the quality of real-time data is to be determined and reported to the scientific community. Real-time data quality testing at Ocean Networks Canada includes tests designed to catch instrument failures and major spikes or data dropouts before the data is made available to the user. Real-time quality tests include meeting instrument manufacturer’s standards and overall observatory/site ranges determined from previous data. Due to the positioning of some instrument platforms in highly productive areas, we have also designed dual-sensor tests e.g. for some conductivity sensors. The quality control testing is split into 3 separate categories. The first category is in real-time and tests the data before the data are parsed into the database. The second category is delayed-mode testing where archived data are subject to testing after a certain period of time. The third category is manual quality control by an Ocean Networks Canada data expert.|$|E
30|$|The entries of W {{imply that}} <b>scalar</b> <b>data</b> {{located at the}} {{geographical}} equator are given a weight of 1, whereas <b>scalar</b> <b>data</b> located near the poles have a weight close to 0.5. Similar weights are applied to vector data in perfect agreement with <b>scalar</b> <b>data</b> (those which have dF= 0), while vector data with dF≠ 0 are down-weighted according to formula (1) above.|$|E
40|$|In {{this paper}} {{we show that}} the {{analysis}} of the dynamics in localized regions, i. e., sub-systems can be used to characterize the chaotic dynamics and the synchronization ability of the spatiotemporal systems. Using noisy <b>scalar</b> time-series <b>data</b> for driving along with simultaneous self-adaptation of the control parameter representative control goals like suppressing spatiotemporal chaos and synchronization of spatiotemporally chaotic dynamics have been discussed. Comment: File in Latex, Figures may be obtained on request at the following address - ravi@ems. ncl. res. i...|$|R
40|$|We apply Bayesian {{inference}} {{to analyze}} three-bond scalar coupling constants in an objective and consistent way. The Karplus curve and a Gaussian error law {{are used to}} model scalar coupling measurements. By applying Bayesamp;lsquo; theorem, we obtain a probability distribution for all unknowns, i. e., the torsion angles, the Karplus parameters, and the standard deviation of the Gaussian. We infer all these unknowns from <b>scalar</b> coupling <b>data</b> using Markov chain Monte Carlo sampling and analytically derive a probability distribution that only involves the torsion angles...|$|R
40|$|Figure 1 : Traced and {{segmented}} microvasculature of {{the mouse}} spinal cord. The entire network has been traced and displayed (orange) {{as well as several}} sub-networks (green and purple) represented as cliques within the network. We present a framework for segmenting and storing filament net-works from <b>scalar</b> volume <b>data.</b> Filament structures are commonly found in data generated using high-throughput microscopy. These data sets can be several gigabytes in size because they are either spa-tially large or have a high number of scalar channels. Filaments in microscopy data sets are difficult to segment because their diameter is often near the sampling resolution of the microscope, yet single filaments can span large data sets. We describe a novel method to trace filaments through <b>scalar</b> volume <b>data</b> sets that is robust to both noisy and under-sampled data. We use a GPU-based scheme to ac-celerate the tracing algorithm, making it more useful for large data sets. After the initial structure is traced, we can use this informa-tion to create a bounding volume around the network and encode the volumetric data associated with it. Taken together, this frame-work provides a convenient method for accessing network structure and connectivity while providing compressed access to the original volumetric data associated with the network...|$|R
