1970|10000|Public
5|$|It {{is common}} in {{mathematics}} to regard the Lorentz group to be, foremost, the Möbius group {{to which it is}} isomorphic. The group may be represented in terms of a <b>set</b> <b>of</b> <b>functions</b> defined on the Riemann sphere. These are the Riemann P-functions, which are expressible as hypergeometric functions.|$|E
25|$|Every {{member of}} a uniformly equicontinuous <b>set</b> <b>of</b> <b>functions</b> is uniformly continuous.|$|E
25|$|In a conceptually similar vein, {{a set of}} Littlewood polynomials can be {{arrived at}} by such {{iterated}} applications of a <b>set</b> <b>of</b> <b>functions.</b>|$|E
5000|$|... #Subtitle level 3: Cardinality <b>of</b> <b>sets</b> <b>of</b> <b>functions</b> <b>of</b> a real {{variable}} ...|$|R
40|$|Given,, let be the <b>set</b> <b>of</b> all entire <b>functions,</b> with, {{for which}} there exists some {{constant}} such that. It is shown that the zero <b>set</b> <b>of</b> a <b>function</b> <b>of</b> satisfies and that the union <b>of</b> the zero <b>sets</b> <b>of</b> two <b>functions</b> <b>of</b> {{is not necessarily the}} zero <b>set</b> <b>of</b> a <b>function</b> <b>of.</b> Some uniqueness results of Carlson's type are also obtained. </p...|$|R
5000|$|... def2-QZVPPD - Valence quadruple-zeta {{with two}} <b>sets</b> <b>of</b> {{polarization}} <b>functions</b> and a <b>set</b> <b>of</b> diffuse <b>functions</b> ...|$|R
25|$|The spherical {{harmonic}} functions form {{a complete}} orthonormal <b>set</b> <b>of</b> <b>functions</b> {{in the sense}} of Fourier series. It should be noted that workers in the fields of geodesy, geomagnetism and spectral analysis use a different phase and normalization factor than given here (see spherical harmonics).|$|E
25|$|As with {{directly}} recursive functions, a wrapper function may be useful, {{with the}} mutually recursive functions defined as nested functions within its scope {{if this is}} supported. This is particularly useful for sharing state across a <b>set</b> <b>of</b> <b>functions</b> without having to pass parameters between them.|$|E
25|$|In pure mathematics, {{differential}} equations are studied from several different perspectives, mostly concerned with their solutions — the <b>set</b> <b>of</b> <b>functions</b> that satisfy the equation. Only the simplest {{differential equations}} are solvable by explicit formulas; however, some properties of solutions {{of a given}} differential equation may be determined without finding their exact form.|$|E
50|$|The {{definitions}} can {{be generalized}} to <b>functions</b> and even <b>sets</b> <b>of</b> <b>functions.</b>|$|R
40|$|Abstract. This paper {{concerns}} the abstraction <b>of</b> <b>sets</b> <b>of</b> <b>functions</b> {{for use in}} abstract interpretation. The paper gives an overview of existing methods, which are illustrated with applications to shape analysis, and formalizes a new family of relational abstract domains that allows <b>sets</b> <b>of</b> <b>functions</b> to be abstracted more precisely than with known approaches, while being still machine-representable. ...|$|R
50|$|The {{notion of}} lower bound for (<b>sets</b> <b>of)</b> <b>functions</b> is defined analogously, with ≤ {{replacing}} ≥.|$|R
25|$|Vygotsky (1978) further {{claimed that}} {{instruction}} is good {{only when it}} proceeds ahead of development. Then it awakens and rouses to life an entire <b>set</b> <b>of</b> <b>functions</b> in the stage of maturing, which lie in the zone of proximal development. It is in this way that instruction plays an extremely important role in development.|$|E
25|$|Network {{performance}} management: a <b>set</b> <b>of</b> <b>functions</b> that {{evaluate and}} report {{the effectiveness of}} the network or network element, and the behavior of telecommunications equipment. It also includes a set of subfunctions, such as gathering statistical information, maintaining and examining historical logs, determining system performance under natural and artificial conditions, and altering system modes of operation.|$|E
25|$|The Berkeley sockets API {{defines a}} <b>set</b> <b>of</b> <b>functions</b> to convert 16-bit and 32-bit {{integers}} {{to and from}} network byte order: the htons (host-to-network-short) and htonl (host-to-network-long) functions convert 16-bit and 32-bit values respectively from machine (host) to network order; the ntohs and ntohl functions convert from network to host order. These functions may be a no-op on a big-endian system.|$|E
2500|$|A {{signature}} consists <b>of</b> a <b>set</b> <b>of</b> <b>function</b> symbols Sfunc, a <b>set</b> <b>of</b> relation symbols Srel, and {{a function}} [...] representing the arity <b>of</b> <b>function</b> and relation symbols. (A nullary function symbol {{is called a}} constant symbol.) In the context of first-order logic, a signature is sometimes called a language. It is called countable if the <b>set</b> <b>of</b> <b>function</b> and relation symbols in it is countable, and in general the cardinality of a signature is the cardinality <b>of</b> the <b>set</b> <b>of</b> all the symbols it contains.|$|R
5000|$|Conversely, a rewrite {{ordering}} {{that contains}} the subterm relation is necessarily well-founded, when the <b>set</b> <b>of</b> <b>function</b> symbols is finite.|$|R
40|$|Ekin, Foldes, Hammer, and Hellerstein {{showed that}} a <b>set</b> <b>of</b> Boolean <b>functions</b> is characterizable by a (possibly infinite) <b>set</b> <b>of</b> Boolean {{equations}} iff it is closed under permutation of variables, addition of dummy variables, and identification of variables. Subsequently, Pippenger introduced constraint characterizations, which generalize previous characterizations of clones. He {{showed that a}} <b>set</b> <b>of</b> finite <b>functions</b> can be characterized by a <b>set</b> <b>of</b> constraints iff it is characterizable by Boolean equations. He also developed a Galois theory for <b>sets</b> <b>of</b> finite <b>functions</b> characterizable by constraints. In this paper we generalize Pippenger's results by considering <b>sets</b> <b>of</b> finite <b>functions,</b> such as the unate functions, that are closed under permutation of variables and addition of dummy variables but not necessarily under identification of variables. We introduce {{the notion of a}} generalized constraint, and consider the question <b>of</b> which <b>sets</b> <b>of</b> <b>functions</b> can be characterized by [...] ...|$|R
25|$|The {{research}} {{field was}} {{of particular interest}} for the Tartu–Moscow Semiotic School (USSR). Linguists and semioticians by the Tartu School viewed culture as a hierarchical semiotic system consisting of <b>set</b> <b>of</b> <b>functions</b> correlated to it, and linguistic codes that are used by social groups to maintain coherence. These codes are viewed as superstructures based on natural language, and here the ability of humans to symbolize is central.|$|E
25|$|The Customer Care Framework {{provided}} a core <b>set</b> <b>of</b> <b>functions</b> for customer support avenues including voice call via call center agents and Internet portals. The framework used other Microsoft server products including the BizTalk Server, and SharePoint. CCF required {{the use of}} Microsoft SQL Server and Microsoft IIS for the server side, which it uses to provide a base core set of web services.|$|E
25|$|Let M be {{a smooth}} {{manifold}} and let x {{be a point}} in M. Let I'x be the ideal of all functions in C∞(M) vanishing at x, and let I'x2 be the <b>set</b> <b>of</b> <b>functions</b> of the form , where f'i, g'i ∈ I'x. Then I'x and I'x2 are real vector spaces and the cotangent space {{is defined as the}} quotient space T'x*M = I'x / I'x2.|$|E
40|$|AbstractWe {{consider}} the problem <b>of</b> characterizing <b>sets</b> <b>of</b> Boolean <b>functions.</b> Extending results <b>of</b> Ekin et al. and Pippenger, {{we show that}} a <b>set</b> <b>of</b> Boolean (or finite) functions can be characterized by a <b>set</b> <b>of</b> objects called ‘generalized constraints’ iff the set is closed under the operations of permutation of variables and addition of dummy variables. We show a relationship between <b>sets</b> <b>of</b> Boolean <b>functions</b> that are characterizable by a finite <b>set</b> <b>of</b> generalized constraints and <b>sets</b> <b>of</b> Boolean <b>functions</b> that have constant-size certificates of non-membership. We then explore whether certain particular <b>sets</b> <b>of</b> Boolean <b>functions</b> have constant-size certificates of non-membership; most notably, we show that the well-known <b>set</b> <b>of</b> Boolean threshold <b>functions</b> does not have constant-size certificates of non-membership. Finally, we extend results of Pippenger to develop a Galois theory for <b>sets</b> <b>of</b> Boolean <b>functions</b> closed under the operations of permutation of variables and addition of dummy variables...|$|R
50|$|Because the {{argument}} values may be URI addresses themselves, a tree-structured <b>set</b> <b>of</b> <b>function</b> calls can be encoded {{in a single}} URI.|$|R
40|$|Asymptotic <b>sets</b> <b>of</b> <b>functions</b> in a polydisk {{domain of}} {{arbitrary}} connectivity are studied. We construct an example <b>of</b> such <b>function,</b> having preassigned asymptotic set. This result generalizes well-known examples, obtained by M. Heins and W. Gross for entire functions. Moreover, {{it is found}} out that not all results on asymptotic <b>sets</b> <b>of</b> <b>functions</b> in C can be extended to functions in C^n. In particular, this fact is connected with the failure of Bagemihl's theorem on ambiguous points for functions in R^n, n≥ 3...|$|R
25|$|Very-large-scale {{integration}} (VLSI) is {{the process}} of creating an integrated circuit (IC) by combining thousands of transistors into a single chip. VLSI began in the 1970s when complex semiconductor and communication technologies were being developed. The microprocessor is a VLSI device. Before the introduction of VLSI technology most ICs had a limited <b>set</b> <b>of</b> <b>functions</b> they could perform. An electronic circuit might consist of a CPU, ROM, RAM and other glue logic. VLSI allows IC makers to add all of these circuits into one chip.|$|E
25|$|A {{concrete}} category, when defined {{without reference}} to the notion of a category, consists of a class of objects, each equipped with an underlying set; and for any two objects A and B a <b>set</b> <b>of</b> <b>functions,</b> called morphisms, from the underlying set of A to the underlying set of B. Furthermore, for every object A, the identity function on the underlying set of A must be a morphism from A to A, and the composition of a morphism from A to B followed by a morphism from B to C must be a morphism from A to C.|$|E
25|$|Therefore, the 2003 law {{establishes}} {{coordination and}} cooperation of public health authorities {{as a means to}} ensure citizens the right to health protection, with the common goal of ensuring equity, quality and social participation National Health System. The law defines a core <b>set</b> <b>of</b> <b>functions</b> common to all of the autonomous health services. Without interfering with the diversity of forms of organization, management and services inherent in a decentralized system, it attempts to establish certain basic, common safeguards throughout the country. This law attempts to establish collaboration of public health authorities with respect to benefits provided, pharmacy, health professionals, research, health information systems, and the overall quality of the health system.|$|E
40|$|A {{new type}} <b>of</b> cluster <b>sets,</b> called S-cluster <b>sets,</b> <b>of</b> <b>functions</b> and multifunctions between topological spaces is introduced, thereby {{providing}} {{a new technique}} for studying S-closed spaces. The deliberation includes an explicit expression <b>of</b> S-cluster <b>set</b> <b>of</b> a <b>function.</b> As an application, characterizations of Hausdorff and S-closed topological spaces are achieved via such cluster sets...|$|R
3000|$|Next, {{in order}} to {{demonstrate}} the application of our main results obtained in Section  3, we choose two different <b>sets</b> <b>of</b> <b>functions</b> [...]...|$|R
5000|$|The {{cardinality}} <b>of</b> the <b>set</b> <b>of</b> real-valued <b>functions</b> <b>of</b> a real variable, , is [...] This {{is easily}} verified by cardinal arithmetic:.Furthermore, if [...] {{is a set}} such that , then the cardinality <b>of</b> the <b>set</b> [...] is also , since [...]However, the <b>set</b> <b>of</b> continuous <b>functions</b> [...] has a strictly smaller cardinality, [...] To see this, note that a continuous function is completely determined by its value on a dense subset of its domain. [...] Thus, the cardinality <b>of</b> the <b>set</b> <b>of</b> continuous real-valued <b>functions</b> on the reals is no greater than the cardinality <b>of</b> the <b>set</b> <b>of</b> real-valued <b>functions</b> <b>of</b> a rational variable:.On the other hand, since {{there is a clear}} bijection between [...] and the <b>set</b> <b>of</b> constant <b>functions</b> , [...] must also hold. Hence, [...]|$|R
25|$|The API {{is defined}} as a <b>set</b> <b>of</b> <b>functions</b> which may be called by the client program, {{alongside}} a set of named integer constants (for example, the constant GL_TEXTURE_2D, which corresponds to the decimal number 3553). Although the function definitions are superficially {{similar to those of the}} programming language C, they are language-independent. As such, OpenGL has many language bindings, some of the most noteworthy being the JavaScript binding WebGL (API, based on OpenGL ES 2.0, for 3D rendering from within a web browser); the C bindings WGL, GLX and CGL; the C binding provided by iOS; and the Java and C bindings provided by Android.|$|E
25|$|In {{the case}} of ODBC, the drivers {{encapsulate}} many functions that {{can be broken down}} into several broad categories. One <b>set</b> <b>of</b> <b>functions</b> is primarily concerned with finding, connecting to and disconnecting from the DBMS that driver talks to. A second set is used to send SQL commands from the ODBC system to the DBMS, converting or interpreting any commands that are not supported internally. For instance, a DBMS that does not support cursors can emulate this functionality in the driver. Finally, another set of commands, mostly used internally, is used to convert data from the DBMS's internal formats to a set of standardized ODBC formats, which are based on the C language formats.|$|E
25|$|Glucokinase (GK) is a {{hexokinase}} isozyme, related homologously to {{at least}} three other hexokinases. All of the hexokinases can mediate phosphorylation of glucose to glucose-6-phosphate (G6P), which is the first step of both glycogen synthesis and glycolysis. However, glucokinase is coded by a separate gene and its distinctive kinetic properties allow it to serve a different <b>set</b> <b>of</b> <b>functions.</b> Glucokinase has a lower affinity for glucose than the other hexokinases do, and its activity is localized to a few cell types, leaving the other three hexokinases as more important preparers of glucose for glycolysis and glycogen synthesis for most tissues and organs. Because of this reduced affinity, the activity of glucokinase, under usual physiological conditions, varies substantially according to the concentration of glucose.|$|E
40|$|Abstract. A {{new type}} <b>of</b> cluster <b>sets,</b> called S-cluster <b>sets,</b> <b>of</b> <b>functions</b> and multifunc-tions between topological spaces is introduced, thereby {{providing}} {{a new technique}} for studying S-closed spaces. The deliberation includes an explicit expression <b>of</b> S-cluster <b>set</b> <b>of</b> a <b>function.</b> As an application, characterizations of Hausdorff and S-closed topological spaces are achieved via such cluster sets...|$|R
5000|$|This {{approach}} leads {{naturally to}} refining {{the notion of}} continuity by restricting the <b>set</b> <b>of</b> admissible control <b>functions.</b> For a given <b>set</b> <b>of</b> control <b>functions</b> [...] a function is [...] continuous if it is C continuous for some [...] For example the Lipschitz and Hölder continuous <b>functions</b> <b>of</b> exponent &alpha; below are defined by the <b>set</b> <b>of</b> control <b>functions</b> ...|$|R
5000|$|In {{computational}} complexity theory, {{the complexity}} class NP-equivalent is the <b>set</b> <b>of</b> <b>function</b> {{problems that are}} both NP-easy and NP-hard. [...] NP-equivalent is the analogue <b>of</b> NP-complete for <b>function</b> problems.|$|R
