54|10000|Public
25|$|Electronic {{switching}} systems gradually evolved in stages from electromechanical hybrids with <b>stored</b> <b>program</b> <b>control</b> to the fully digital systems. Early systems used reed relay-switched metallic paths under digital control. Equipment testing, phone numbers reassignments, circuit lockouts and similar tasks were accomplished by data entry on a terminal.|$|E
25|$|Bell System {{installations}} typically had alarm bells, gongs, or chimes {{to announce}} alarms {{calling attention to}} a failed switch element. A trouble reporting card system was connected to switch common control elements. These trouble reporting systems punctured cardboard cards with a code that logged {{the nature of a}} failure. Reed relay technology in <b>stored</b> <b>program</b> <b>control</b> exchange finally quieted the environment.|$|E
50|$|The flying-spot {{store was}} an optical digital memory used in early <b>stored</b> <b>program</b> <b>control</b> {{components}} of electronic switching systems.|$|E
50|$|The {{features}} of toll-free services have evolved as telephone networks {{have moved from}} electro-mechanical call switching to fully computerized <b>stored</b> <b>program</b> <b>controlled</b> networks.|$|R
50|$|Both {{programs}} and {{data can be}} stored to magnetic tape. Data can be <b>stored</b> under <b>program</b> <b>control.</b> <b>Programs</b> can be password protected from both listing and execution.|$|R
50|$|This {{feature is}} also {{frequently}} called (and abbreviated) as visual message waiting indicator (VMWI). A VMWI, {{as defined in}} Telcordia GR-1401-CORE, is a <b>stored</b> <b>program</b> <b>controlled</b> switching (SPCS) system feature that activates and deactivates a visual indicator on customer-premises equipment (CPE) to notify the customer that new messages are waiting. VMWI differs from existing features that use other message indicators, such as audible stuttered dial tone, in that it activates a visual indicator on the CPE. The visual indicator may {{be as simple as}} lighting or flashing a light-emitting diode (LED), or as advanced as displaying a special message on a liquid-crystal display (LCD).|$|R
50|$|An {{immediate}} {{consequence of}} <b>stored</b> <b>program</b> <b>control</b> is automation of exchange functions and {{introduction of a}} variety of new telephony features to subscribers.|$|E
50|$|During the 1970s, {{common control}} exchanges became <b>stored</b> <b>program</b> <b>control</b> exchanges, using in the 1980s common-channel {{signaling}} {{in which the}} channels that are used for signaling are not used for message traffic.|$|E
50|$|<b>Stored</b> <b>program</b> <b>control</b> exchanges finally {{solved the}} problem, by setting a bit mask in the {{scanning}} program {{and running a}} low priority periodic checking program against the wetlist. Depending on software version, a wetlisted line may also be in PLO or lockout state.|$|E
40|$|The {{introduction}} {{of computers and}} software engineering in telephone switching systems has dictated the need for powerful design aids for such complex systems. Among these design aids simulators - real-time environment simulators and flat-level simulators - have been found particularly useful in <b>stored</b> <b>program</b> <b>controlled</b> switching systems design and evaluation. However, both types of simulators suffer from certain disadvantages. An alternative methodology to the simulation of <b>stored</b> <b>program</b> <b>controlled</b> switching systems is proposed in this research. The methodology {{is based on the}} development of a process-based multilevel hierarchically structured software simulator. This methodology eliminates the disadvantages of environment and flat-level simulators. It enables the modelling of the system in a 1 to 1 transformation process retaining the sub-systems interfaces and, hence, making it easier to see the resemblance between the model and modelled system and to incorporate design modifications and/or additions in the simulator. This methodology has been applied in building a simulation package for the System X family of exchanges. The Processor Utility Sub-system used to control the exchanges is first simulated, verified and validated. The application sub-systems models are then added one level higher_, resulting in an open-ended simulator having sub-systems models at different levels of detail and capable of simulating any member of the System X family of exchanges. The viability of the methodology is demonstrated by conducting experiments to tune the real-time operating system and by simulating a particular exchange - The Digital Main Network Switching Centre - in order to determine its performance characteristics. The General Electric Company Ltd, GEC Hirst Research Cent, Wemble...|$|R
50|$|According to Telcordia GR-283-CORE, the Simplified Message Desk Interface (SMDI) is {{an analog}} {{interface}} between the local <b>stored</b> <b>program</b> <b>controlled</b> switching system (SPCS) and a message storage and retrieval (MSR) system. Calls are {{distributed to the}} call answering points with normal call processing or using multiline hunt group (MLHG) features. One or more MLHGs {{may be associated with}} the same set of SMDI data links. An identification scheme is assigned in the SPCS to identify each MLHG uniquely and each line in the MLHG, for which call information (e.g., calling number) is provided over the SMDI data link. This identification information is provided to the MSR system, with the call information, to help the MSR system correlate the call information with a call terminating on a particular line.|$|R
50|$|The {{control unit}} of the CPU {{contains}} circuitry that uses electrical signals to direct the entire computer system to carry out <b>stored</b> <b>program</b> instructions. The <b>control</b> unit does not execute program instructions; rather, it directs {{other parts of the}} system to do so. The control unit communicates with both the ALU and memory.|$|R
50|$|The {{principle}} {{feature of}} <b>stored</b> <b>program</b> <b>control</b> is one or multiple digital processing units (stored-program computers) that execute {{a set of}} computer instructions (program) stored {{in the memory of}} the system by which telephone connections are established, maintained, and terminated in associated electronic circuitry.|$|E
50|$|Electronic {{switching}} systems gradually evolved in stages from electromechanical hybrids with <b>stored</b> <b>program</b> <b>control</b> to the fully digital systems. Early systems used reed relay-switched metallic paths under digital control. Equipment testing, phone numbers reassignments, circuit lockouts and similar tasks were accomplished by data entry on a terminal.|$|E
5000|$|ESC, {{an early}} electronic, wired logic, reed-switch with a matrix {{similar to the}} AE EAX. The ESC, was not however <b>Stored</b> <b>Program</b> <b>Control</b> and had {{more in common with}} {{crossbar}} switching than other SPC electronic switching systems. It was however notable for its quick dialtone speed. (ESC-1, ESC-2, ESC-3 and ESC-4) ...|$|E
40|$|The size, {{complexity}} and long 1 ife-time of telecommunications software, e. g. the <b>programs</b> for <b>store</b> <b>program</b> <b>control</b> (SPC) telephone exchanges, {{call for an}} increased software pro-ductivi ty and maintainability other than an improved qua 1 ity. The availability of programming support environments based on stan-dardized specification and programming languages greatly improves the software development pro-cess. Artificial Intelligence techniques are very promising aiming at further improvements and can provide a short-term payoff especially within an evolutionary approach leading up to an hybrid programming environment, i. e. a software environment made of both conventional and intelligent tools. The paper describes an intelligent tool, dubbed SCAT, based on ideas exploited by various automatic programming systems, like CHI, Programmer’s Apprentice and DEDALUS. SCAT is strictly related to the tele-communications domain, thus it differs from other systems in the domain specifity. SCAT partly automatizes the most crucial phase in the software development process, i. e. the tran-sition from project’s detailed specification to the actual software implementation. SCAT has been tested in a few experimental software deve-lopments and in an actual application,i. e. the message hand 1 ing system (MHS) to be made available in the Italian public packet switching network (ITAPAC). 1...|$|R
40|$|With {{the help}} of a Dundee University Scholarship award, he then pursued a PhD program at the same university, {{receiving}} the PhD degree in control and computers in 1978. He then joined L. M Ericsson in Sweden to work on the newly introduced SPC (<b>stored</b> <b>program</b> <b>controlled)</b> digital telephone exchanges. After two years with the company in both Sweden and Saudi Arabia, he joined the faculty in Kuwait University, where he is currently a lecturer in electronics and microcomputer systems. Dr. EI-Imam’s present research interests include the develop-ment of microcomputer-based systems for digital signal proces-sing of chemical and medical signals and the application of optimal and adaptive control techniques to improve the effec-tiveness of control of certain economic models. His leisure inter-ests include swimming, long-distance jogging, and music. An analog computer has been used to simulate a high-gain adaptive control method for regulating the speed of an internal combustion engine. A nonlinear element (an on-off relay) main-tains the high gain in the forward loop that is necessary to produce a one-to-one relationship between input and output. Such high gain leads to limit-cycle behaviour in the model. A high-frequency dither at the relay input acts as a stabilizing signal to deal with this problem...|$|R
40|$|International Telemetering Conference Proceedings / October 30 -November 02, 1989 / Town & Country Hotel & Convention Center, San Diego, CaliforniaVersatility is the keyword {{in modern}} {{airborne}} telemetry systems. Only {{a system with}} an inherent ability to be changed can be cost effective {{in an environment where}} requirements change as often and as rapidly as in todays missile and aircraft test instrumentation. This paper will describe a totally wireless, modular, PCM telemetry system. Using <b>stored</b> <b>program</b> format <b>control</b> (user programmable) and implemented with low power programmable logic devices, this new system can be altered with minimal effort and cost. Functional modules can be added or changed as program requirements evolve. Elastomeric connectors are used to achieve high density, wireless, high reliability interconnection between modules. This connection technique allows easy access to individual modules for repair or replacement without damaging substrates or components...|$|R
50|$|<b>Stored</b> <b>program</b> <b>control</b> (SPC) was a {{telecommunications}} technology used for telephone exchanges {{controlled by a}} computer program stored {{in the memory of}} the switching system. SPC was the enabling technology of electronic switching systems (ESS) developed in the Bell System in the 1950s and could be considered the third generation of switching technology.|$|E
50|$|<b>Stored</b> <b>program</b> <b>control</b> exchanges in the 1970s had {{teleprinter}} {{channels for}} entering and verifying translation information, which allowed centralizing these functions. In the 1980s, the resulting conglomeration of Teletype machines were {{replaced with a}} more organized system called MARCH which could more easily be coordinated with COSMOS, TIRKS and other operations support systems.|$|E
50|$|Second {{generation}} exchanges such as Strowger, panel, rotary, and crossbar switches {{were constructed}} purely from electromechanical switching components with analog control electronics, {{and had no}} computer software control. <b>Stored</b> <b>program</b> <b>control</b> was invented by Bell Labs scientist Erna Schneider Hoover in 1954 who reasoned that computer software could control the connection of telephone calls.|$|E
5000|$|Seeber had {{carefully}} designed the SSEC to treat instructions as data, {{so they could}} be modified and <b>stored</b> under <b>program</b> <b>control.</b> IBM filed a patent based on the SSEC on January 19, 1949, which was later upheld as supporting the machine's <b>stored</b> <b>program</b> ability.Each instruction could take input from any source (electronic or mechanical registers or tape readers) store the result in any destination (electronic or mechanical registers, tape or card punch or printer), and gave the address of the next instruction, which could also be any source. This made it powerful in theory.However, in practice instructions were stored usually on paper tape, resulting in an overall rate of only about 50 instructions per second. The serial nature of the paper tape memory made programming the SSEC more like the World War II era calculators. For example, [...] "loops" [...] were usually literal loops of paper tape glued together. For each new program, tapes and card decks were literally [...] "loaded" [...] on the readers, and a plugboard changed in the printer to modify output formatting.For these reasons, the SSEC is usually classified as the last of the [...] "programmable calculator" [...] machines instead of the first stored-program computer.|$|R
40|$|An {{information}} processing apparatus includes a processor {{that is capable of}} switching a performance level to one of a plurality of performance levels with different power consumption, and a storage unit that <b>stores</b> a <b>program</b> for <b>controlling</b> the performance level of the processor. The processor executing the program detects the periodicity of load variation of the {{information processing}} apparatus, and changes, according to the periodicity of the load variation, a determination interval for determining whether to switch the performance level of the processor. Fujitsu LimitedThe Georgia Tech Research Corporatio...|$|R
40|$|A Doctoral Thesis. Submitted in partial {{fulfillment}} of the requirements for the award of Doctor of Philosophy of Loughborough University. Since 1976 the author has worked with L. M. Ericsson Ab of Stockholm, Sweden, providing ergonomics advice relating {{to the design of}} operator positions for <b>stored</b> <b>program</b> <b>controlled</b> telephone exchanges manufactured by this company. The research was I performed in three phases: a literature review, preliminary experiments to evaluate alternative equipment designs and finally a series of trials of the prototype under simulated call conditions. The basis of the new operator position is tie provision of a computer terminal, consisting of a datascreen or video display unit (vdu) and keyboard at each operator desk. These terminals enable the operator to enter call details into memory stores from which they can be 'read' by the computer, displayed at any operator position or routed to the charging system. By eliminating many repetitious and error prone number entries, by abolishing pager handling tasks completely and by automating certain call handling operations a more efficient and effective service can be provided to subscribers. The literature review report, produced on completion of Phase I, summarised the ergonomics research relating to datascreens, keyboards, dialogues, workstations and environmental factors. As a result of the review the author was able to produce detailed ergonomics recommendations for many parts of the system. Phase II consisted of a programme of experiments to provide the data required to resolve design conflicts remaining at the conclusion of Phase I. In successive stages a panel of experts reduced the potential number of datascreen designs to practicable numbers for controlled experiments. These datascreens, filters and screen treatments were systematically compared in experiments and a suitable design was selected. In Phase III an experiment was conducted to evaluate the entire operator position under simulated call handling conditions. In addition to collecting objective measures of call handling speed and accuracy, the experiments also enabled visual fatigue to be assessed and call handling equipment and procedures to be judged by experienced operators under' reasonably realistic conditions...|$|R
50|$|Some later {{switching}} systems used digit registers which doubled the allowable pulse rate to 20 pulses per second, and the inter-digital pause {{could be reduced}} as the switch selection {{did not have to}} be completed during the pause. These included some Crossbar systems, the later version (7A2) of the Rotary system, and the earlier 1970s <b>stored</b> <b>program</b> <b>control</b> exchanges.|$|E
5000|$|... 1XB {{inspired}} the later 5XB switch which intensified the trend towards greater efficiency and complexity. 5XB installations seldom replaced 1XB but were operated {{side by side}} with them, or in towns too small to be economical for the 1XB. Most 1XB switches were replaced in the 1970s by the 1ESS switch generation with <b>stored</b> <b>program</b> <b>control.</b>|$|E
50|$|Also taking {{advantage}} of the superior versatility of 5XB, Centrex was invented as a service package. Later <b>stored</b> <b>program</b> <b>control</b> exchanges allowed more extensive service features. Autovon originally used a four-wire version of 5XB, with a more complex marker to implement its nonhierarchical polygrid routing system, and trunk circuits with additional logic and data storage built in to implement preemption.|$|E
40|$|Circuitry limits {{storage in}} the memory of a <b>stored</b> <b>program</b> general purpose digital {{computer}} by permitting storage or writing to certain, specified areas of memory. The limit register used in the computer is easily set under <b>program</b> <b>control,</b> and the memory block size and position is readily changed to suit each specific program...|$|R
50|$|A {{computer}} with a Von Neumann architecture <b>stores</b> <b>program</b> data and instruction data in the same memory; a {{computer with}} a Harvard architecture has separate memories for <b>storing</b> <b>program</b> and data. Both are stored-program designs.|$|R
40|$|Powered {{prostheses}} {{have come}} a long way in the last twenty five years. A good way to track this activity is simply to review the proceedings of the Myo-Electric Controls (MEC) conferences that have been held during that time. Some of the highlights are listed here especially those that led to further developments. Two-electrode threshold control, three-state control, quick-slow control, cookie crusher voluntary open control, proportional control, shifting of control to a second device, control using a force servo, the positional servo control, simultaneous control of two or more devices, circuits with plugs or switches to select an optimal control scheme for a particular user, the interfacing of a computer to let the prosthetist tune the control system to the user, the use of a computer to <b>store</b> complex <b>control</b> <b>programs</b> that can be downloaded to the control system to test their suitability for the user, voice activated control, the use of RF to isolate the setup computer from the prosthesis, and much more...|$|R
50|$|Bell System {{installations}} typically had alarm bells, gongs, or chimes {{to announce}} alarms {{calling attention to}} a failed switch element. A trouble reporting card system was connected to switch common control elements. These trouble reporting systems punctured cardboard cards with a code that logged {{the nature of a}} failure. Reed relay technology in <b>stored</b> <b>program</b> <b>control</b> exchange finally quieted the environment.|$|E
50|$|The {{generations of}} {{telephone}} switches {{before the advent}} of electronic switching in the 1950s used purely electro-mechanical relay systems and analog voice paths. These early machines typically utilized the step-by-step technique. The first generation of electronic switching systems in the 1960s were not entirely digital in nature, but used reed relay-operated metallic paths or crossbar switches operated by <b>stored</b> <b>program</b> <b>control</b> (SPC) systems.|$|E
50|$|Under {{the reform}} and opening policy {{since the late}} 1970s, Fuzhou has {{developed}} rapidly. In 1982, Fuzhou became the first city in China where the <b>stored</b> <b>program</b> <b>control</b> was introduced, which marked a milestone {{in the history of}} telecommunications in China. In 1984, Fuzhou was chosen {{as one of the first}} branches of Open Coastal Cities by the Central Government.|$|E
5000|$|EDSAC - world’s first {{practical}} <b>stored</b> <b>program</b> {{electronic computer}} (1949-1958) ...|$|R
5000|$|Random access <b>stored</b> <b>program</b> machine:Reference model: {{base on the}} RAMrefModel.|$|R
5000|$|The world's first <b>stored</b> <b>program</b> digital {{computer}} (the Small-Scale Experimental Machine) ...|$|R
