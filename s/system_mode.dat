308|3178|Public
5|$|The {{autopilot}} {{system used}} at the time had four basic control modes: HEADING, VOR/LOC, ILS, and INS. The HEADING mode maintained a constant magnetic course selected by the pilot. The VOR/LOC mode maintained the plane on a specific course, transmitted from a VOR (VHF omnidirectional range, a type of short-range radio signal transmitted from ground beacons) or Localizer (LOC) beacon selected by the pilot. The ILS (instrument landing <b>system)</b> <b>mode</b> caused the plane to track both vertical and lateral course beacons, {{which led to a}} specific runway selected by the pilot. The INS (inertial navigation <b>system)</b> <b>mode</b> maintained the plane on lateral course lines between selected flight plan waypoints programmed into the INS computer.|$|E
25|$|<b>System</b> <b>mode</b> (ARMv4 and above): The only {{privileged mode}} {{that is not}} entered by an exception. It can only be entered by {{executing}} an instruction that explicitly writes to the mode bits of the Current Program Status Register (CPSR).|$|E
25|$|R13 and R14 are banked {{across all}} privileged CPU modes except <b>system</b> <b>mode.</b> That is, each mode {{that can be}} entered because of an {{exception}} has its own R13 and R14. These registers generally contain the stack pointer and the return address from function calls, respectively.|$|E
5000|$|... #Subtitle level 4: Heat and Power <b>Mode</b> <b>System</b> (demonstration <b>mode)</b> ...|$|R
50|$|The latest {{transponder}} <b>systems</b> (<b>mode</b> S) {{can also}} provide position information, possibly derived from GNSS, allowing for even more precise positioning of targets.|$|R
40|$|In the {{presented}} work, {{the detection}} of anomalous energy consumption in hybrid industrial production systems is investigated. A model-based approach with a timed hybrid automaton as overall system model is employed for anomaly detection. The approach {{is based on the}} assumption of several <b>system</b> <b>modes,</b> i. e. phases with continuous system behavior. Transitions between the modes are attributed to discrete control events such as on/off signals. The underlying discrete event system which comprises both <b>system</b> <b>modes</b> and transitions is modeled as finite state machine. The focus of this paper is set on the modeling of the energy consumption in the particular <b>system</b> <b>modes.</b> Sequences of stochastic state space models are employed for this purpose. Model learning and anomaly detection for this approach are considered. The proposed approach is further evaluated in a small model factory. The experimental results show significant improvements compared to existing approaches to anomaly detection in hybrid industrial systems...|$|R
25|$|The basic <b>system</b> <b>mode</b> is for rocket detection, since {{a rocket}} launch gives a bright flare. In basic operation, RLS has {{electro-optical}} systems on three towers, separated by 2 to 3 kilometers, to give omnidirectional coverage. The tower equipment {{connects to the}} control stations using a wireless network.|$|E
5000|$|A more {{automatic}} and general vectorized interrupt <b>system,</b> <b>mode</b> 2, primarily intended for Zilog's line of counter/timers, DMA and communications controllers, {{as well as}} a fixed vector interrupt <b>system,</b> <b>mode</b> 1, for simple systems with minimal hardware (with mode 0 being the 8080-compatible mode).|$|E
50|$|The {{high-capacity}} Sony Vaio VPCF11S1E battery included has {{running time}} of 4-6 hours or longer (also this will depending on different operation <b>system</b> <b>mode</b> and different notebook computer model),and charging time will need 4-5 hours (also this will depending on different operation <b>system</b> <b>mode</b> and notebook computer model).|$|E
40|$|Abstract—Component based {{software}} development (CBD) re-duces development {{time and effort}} by allowing systems to be built from pre-developed reusable components. A classical approach to reduce embedded systems design and run-time complexity is to partition the behavior into a set of major <b>system</b> <b>modes.</b> In supporting <b>system</b> <b>modes</b> in CBD, a key issue is seamless composition of multi-mode components into systems. In addressing this issue, we have developed a mode switch logic and algorithm for component-based multi-mode systems. In this paper we introduce timing analysis for our composable mode switch. Index Terms—component-based, mode switch, timing analysis I...|$|R
40|$|Given {{the control}} system {{specifications}} for a system of interconnected rigid and flexible bodies, methods now exist for determining the <b>system</b> <b>modes</b> that do not interact 'strongly' with the controller. Once these important <b>system</b> <b>modes</b> are known, there still remains the problem of determining the modes of individual bodies that should be retained, since, in the final analysis, it is the modal information at the component level that must be fed into any multibody simulation code. Systematic identification of these component modes is achieved through a two-phase matrix diagonalization process starting with judiciously chosen submatrices of the system modal matrix...|$|R
40|$|The {{concept of}} {{ubiquitous}} and scalable system is {{applied in the}} IST WINNER II [1] project to deliver optimum performance for different deployment scenarios, from local area to wide area wireless networks. The integration in a unique radio system of a cellular and local area type networks supposes a great advantage for the final user and for the operator, compared with the current situation, with disconnected systems, usually with different subscriptions, radio interfaces and terminals. To be a ubiquitous wireless system, the IST project WINNER II has defined three <b>system</b> <b>modes.</b> This contribution describes a proposal for scalable and hybrid radio resource management to efficiently integrate the different WINNER <b>system</b> <b>modes...</b>|$|R
50|$|All CLSs {{except for}} the USER CLS execute in <b>system</b> <b>mode</b> in problem state.|$|E
5000|$|Segment 5: private {{virtual memory}} (system segment, only {{available}} to <b>system</b> <b>mode</b> (unprotected) programs) ...|$|E
5000|$|Segments 56-59: private {{virtual memory}} (system segments, only {{available}} to <b>system</b> <b>mode</b> (unprotected) programs) ...|$|E
40|$|Composed of {{alternately}} issued volumes with subtitles: Fundamentals, Applications, Equipment, and <b>Systems.</b> <b>Mode</b> of access: Internet. Product directory section continued by: ASHRAE {{product specification}} file. Split into: ASHRAE handbook. Fundamentals; ASHRAE handbook. Applications; ASHRAE handbook. Equipment; and ASHRAE handbook. Systems...|$|R
40|$|In {{the present}} work, fault {{detection}} in industrial automation processes is investigated. A fault detection method for observable process variables is extended for application cases, where {{the observations of}} process variables are noisy. The principle of this method consists in building a probability distribution model and evaluating the likelihood of observations under that model. The probability distribution model {{is based on a}} hybrid automaton which takes into account several <b>system</b> <b>modes,</b> i. e. phases with continuous system behaviour. Transitions between the modes are attributed to discrete control events such as on/off signals. The discrete event system composed of <b>system</b> <b>modes</b> and transitions is modeled as finite state machine. Continuous process behaviour in the particular <b>system</b> <b>modes</b> is modeled with stochastic state space models, which incorporate neural networks. Fault detection is accomplished by evaluation of the underlying probability distribution model with a particle filter. In doing so both the hybrid system model and a linear observation model for noisy observations are taken into account. Experimental results show superior fault detection performance compared to the baseline method for observable process variables. The runtime of the proposed fault detection method has been significantly reduced by parallel implementation on a GPU...|$|R
40|$|Analytic {{function}} theory {{applications to}} analysis of single-sideband angle modulated systems. Prepared at Langley Research Center. "September 1969. "Cover title. Includes bibliographical references (p. 47 - 48). Analytic function theory applications to analysis of single-sideband angle modulated <b>systems.</b> <b>Mode</b> of access: Internet...|$|R
5000|$|The {{interfaces}} used by user {{programs are}} the cleanest of all. User programs may never refer directly to any system control block (neither for reference nor change), because the virtual memory segment(s) that contain system control blocks (the system segments) {{are removed from}} a job's virtual address space when a user mode program is running. The subroutine interfaces available to user programs are also used by most {{other parts of the}} system (<b>system</b> <b>mode</b> programs, CLSs, ...) even through components running in <b>system</b> <b>mode</b> do have access to the [...] "system" [...] virtual memory segment(s). Transitions from user mode to <b>system</b> <b>mode</b> and back are managed by a special protected set of subroutine interfaces known as [...] "the gate" [...] (initially developed at Wayne State University).|$|E
5000|$|Networking - There {{are three}} {{networking}} modes. In Managed Mode Eucalyptus manages a local network of instances, including security groups and IP addresses. In <b>System</b> <b>Mode,</b> Eucalyptus assigns a MAC address and attaches the instance's network interface {{to the physical}} network through the Node Controller's bridge. <b>System</b> <b>Mode</b> does not offer elastic IP addresses, security groups, or VM isolation. In Static Mode, Eucalyptus assigns IP addresses to instances. Static Mode does not offer elastic IPs, security groups, or VM isolation.|$|E
5000|$|Privileged {{instructions}} : Those that trap if {{the processor}} is in user mode {{and do not}} trap {{if it is in}} <b>system</b> <b>mode</b> (supervisor mode).|$|E
50|$|When system {{behavior}} varies {{considerably in}} normal operation, multiple control laws {{may have to}} be devised. Each distinct control law addresses a specific <b>system</b> behavior <b>mode.</b> An example is a computer hard disk drive. Separate robust control <b>system</b> <b>modes</b> are designed in order to address the rapid magnetic head traversal operation, known as the seek, a transitional settle operation as the magnetic head approaches its destination, and a track following mode during which the disk drive performs its data access operation.|$|R
40|$|First edition: London, 1866 - 79. Includes bibliographical {{references}} and indexes. I. General diseases and {{diseases of the}} nervous system. [...] II. Diseases of the respiratory and circulatory system. [...] III. Diseases of the digestive, blood-glandular, urinary, reproductive, and cutaneous <b>systems.</b> <b>Mode</b> of access: Internet...|$|R
40|$|AbstractAn {{experimental}} {{test apparatus}} and method are presented for testing multiple configurations of solar-assisted heat pump systems. The {{purpose of the}} apparatus is to validate computer models, refine control strategies, test system reliability, and measure the performance of water-to-water heat pumps. The apparatus’ components, mathematical models, and data acquisition system are described in detail. The test procedures for characterizing equipment and performing <b>system</b> operating <b>mode</b> validations are documented. Validation results for <b>system</b> <b>modes</b> of operation are included, which demonstrate strong agreement between model and experimental performance...|$|R
50|$|An {{example of}} Type 6 is SVC 107, MODESET, which obtains no locks, but {{is able to}} change <b>system</b> <b>mode</b> and system key, in {{accordance}} with passed parameters.|$|E
5000|$|... {{allowing}} jobs {{to enter}} and leave user and <b>system</b> <b>mode,</b> where user mode programs {{do not have access}} to some virtual memory segments and the full range of SVCs, ...|$|E
5000|$|Automated Programmers: Designed for {{manufacturing}} large-scale electronics. It uses an {{industrial personal computer}} (with control card inside), servo system and vision <b>system</b> <b>mode</b> for chip placement, programming, and packaging programmable devices automatically.|$|E
40|$|Multi-body {{dynamics}} programs require {{characterization of}} each body. The Galileo spacecraft <b>system</b> <b>modes</b> to be retained were determined using available criteria, modal influence coefficients, and bode. The descent to component level was achieved via a two-phase diagonalization process starting with submatrices of truncated augmented system modal matrix...|$|R
40|$|Prepared by ATC/Electronics Technology-Crew Systems, Boeing Commercial Airplane Company, Seattle, Wash., under {{contract}} no. DOT/FA 73 WA- 3233 -MOD 2. Includes bibliographical references. v. 1. Collation {{and analysis of}} aircraft system data. [...] v. 2. Human factors guidlines for aircraft alerting <b>systems.</b> <b>Mode</b> of access: Internet...|$|R
40|$|Analyzing {{increased}} fares {{and reduced}} service strategies for {{large and small}} systems. "February, 1984. "Performing organization: Transportation Training and Research Center, Polytechnic Institute of New York. Cover title. Final report. Analyzing increased fares and reduced service strategies for large and small <b>systems.</b> <b>Mode</b> of access: Internet...|$|R
50|$|Some CLIs, such {{as those}} in network routers, have a {{hierarchy}} of modes, with a different set of commands supported in each mode. The set of commands are grouped by association with security, system, interface, etc. In these systems the user might traverse through a series of sub-modes. For example, if the CLI had two modes called interface and system, the user might use the command interface to enter the interface mode. At this point, commands from the <b>system</b> <b>mode</b> may not be accessible and the user exits the interface mode and enters the <b>system</b> <b>mode.</b>|$|E
5000|$|... #Caption: The {{power-on}} screen displays <b>system</b> <b>mode,</b> calculation mode, {{angle unit}} and rounding. These could {{be changed by}} pressing the MODE button, or SHIFT then MODE buttons, as shown on the writing below the screen.|$|E
5000|$|<b>System</b> <b>mode</b> (ARMv4 and above): The only {{privileged mode}} {{that is not}} entered by an exception. It can only be entered by {{executing}} an instruction that explicitly writes to the mode bits of the CPSR.|$|E
40|$|Bibliography: p. 261 - 262. v. 1. Methods for {{describing}} the situations of instrument engineering. [...] v. 2. Methods for associating mathematical solutions with common forms. [...] v. 3. Applications {{of the instrument}} engineering method. pt. 1. Measurement systems. pt. 2. Control <b>systems.</b> <b>Mode</b> of access: Internet...|$|R
40|$|Electrothermal instabilities {{effects on}} Brayton and Rankine cycle {{magnetohydrodynamic}} space power generation systems. Prepared at Lewis Research Center. "October 1969. "Cover title. Includes bibliographical references (p. 15 - 16). Electrothermal instabilities effects on Brayton and Rankine cycle magnetohydrodynamic space power generation <b>systems.</b> <b>Mode</b> of access: Internet...|$|R
50|$|In addition, the <b>System</b> Management <b>Mode</b> (SMM) (the same mode {{introduced}} with i386SL) {{was included}} with this processor. The <b>system</b> management <b>mode</b> {{makes it possible}} to shut down the processor without losing data. To achieve this, the processor state is saved in an area of static RAM (SMRAM).|$|R
