194|176|Public
25|$|Cron {{is driven}} by a crontab (cron table) file, a {{configuration}} file that specifies shell commands to run periodically on a given schedule. The crontab files are stored where the lists of jobs and other instructions to the cron daemon are kept. Users can have their own individual crontab files and often there is a system-wide crontab file (usually in /etc or a <b>subdirectory</b> of /etc) that only system administrators can edit.|$|E
25|$|Revision {{numbers are}} {{difficult}} to remember in any version-control system. For this reason, most systems offer symbolic tags as user-friendly references to them. Subversion does not have such a feature and what its documentation recommends to use instead is very different in nature. Instead of implementing tags as references to points in history, Subversion recommends making snapshot copies into a well-known <b>subdirectory</b> ("tags/") {{in the space of}} the repository tree. Only a few predefined references are available: HEAD, BASE, PREV and COMMITTED.|$|E
25|$|It is {{slightly}} more costly {{to examine the}} change history of one file than the whole project. To obtain a history of changes affecting a given file, Git must walk the global history and then determine whether each change modified that file. This method of examining history does, however, let Git produce with equal efficiency a single history showing the changes to an arbitrary set of files. For example, a <b>subdirectory</b> of the source tree plus an associated global header file is a very common case.|$|E
5000|$|Within each main {{directory}} {{a number of}} <b>subdirectories</b> can exist. Commonly used <b>subdirectories</b> include: ...|$|R
50|$|Describes how the <b>subdirectories</b> are implemented.|$|R
50|$|Like MS-DOS 1.25, {{the first}} version of MSX-DOS did not have <b>subdirectories,</b> but in 1988 it evolved to version 2, {{offering}} facilities such as <b>subdirectories,</b> memory management and environment strings. Later versions of MSX computers (MSX-2) added an internal real-time clock, which MSX-DOS could use for time stamping files.|$|R
25|$|A {{significant}} change from previous versions of IIS {{is that all}} web server configuration information is stored solely in XML configuration files, instead of in the metabase. The server has a global configuration file that provides defaults, and each virtual web's document root (and any <b>subdirectory</b> thereof) may contain a web.config containing settings that augment or override the defaults. Changes to these files take effect immediately. This marks {{a significant departure from}} previous versions whereby web interfaces, or machine administrator access, was required to change simple settings such as default document, active modules, and security/authentication.|$|E
25|$|A {{directory}} {{table is}} a special type of file that represents a directory (also known as a folder). Since 86-DOS 0.42, each file or (since MS-DOS 1.40 and PCDOS 2.0) <b>subdirectory</b> stored within it is represented by a 32-byte entry in the table. Each entry records the name, extension, attributes (archive, directory, hidden, read-only, system and volume), {{the address of the}} first cluster of the file/directory's data, the size of the file/directory, and the date and (since PCDOS 1.1) also the time of last modification. Earlier versions of 86-DOS used 16-byte directory entries only, supporting no files larger than 16 MB and no time of last modification.|$|E
25|$|The FAT {{file system}} {{itself does not}} impose any limits on the depth of a <b>subdirectory</b> tree {{for as long as}} there are free {{clusters}} available to allocate the subdirectories, however, the internal Current Directory Structure (CDS) under MS-DOS/PCDOS limits the absolute path of a directory to 66 characters (including the drive letter, but excluding the NUL byte delimiter), thereby limiting the maximum supported depth of subdirectories to 32, whatever occurs earlier. Concurrent DOS, MultiuserDOS and DRDOS3.31 to 6.0 (up to including the 1992-11 updates) do not store absolute paths to working directories internally and therefore do not show this limitation. The same applies to Atari GEMDOS, but the Atari Desktop does not support more than 8 sub-directory levels. Most applications aware of this extension support paths up to at least 127bytes. FlexOS, 4680OS and 4690OS support a length of up to 127bytes as well, allowing depths down to 60 levels. PalmDOS, DRDOS6.0 (since BDOS7.1) and higher, NovellDOS, and OpenDOS sport a MS-DOS-compatible CDS and therefore have the same length limits as MS-DOS/PCDOS.|$|E
5000|$|Recursive {{selection}} - loads {{files in}} directory and in <b>subdirectories.</b>|$|R
5000|$|... {{allows a}} user to remove files and <b>subdirectories</b> from the directory.|$|R
5000|$|... âˆž (infinity) - Each {{directory}}, {{whether the}} topmost directory {{or any of}} its <b>subdirectories,</b> according to the file system's rules, may contain any number of files or <b>subdirectories.</b> Practical limits to this number are caused by other factors, such as space available on storage media and how well the computer's operating system is maintained.|$|R
2500|$|The 7z {{file format}} {{specification}} is distributed with the program's source code, in the [...] "doc" [...] <b>subdirectory.</b>|$|E
2500|$|Unix also popularized the {{hierarchical}} file system with arbitrarily nested subdirectories, originally introduced by Multics. Other common operating {{systems of the}} era had ways to divide a storage device into multiple directories or sections, {{but they had a}} fixed number of levels, often only one level. Several major proprietary operating systems eventually added recursive <b>subdirectory</b> capabilities also patterned after Multics. DEC's RSX-11M's [...] "group, user" [...] hierarchy evolved into VMS directories, CP/M's volumes evolved into MS-DOS 2.0+ subdirectories, and HP's MPE group.account hierarchy and IBM's SSP and OS/400 library systems were folded into broader POSIX file systems.|$|E
2500|$|On 17 December 2014, an exploit {{was found}} {{affecting}} the Windows and Mac {{versions of the}} Git client. An attacker could perform arbitrary code execution on a target computer with Git installed by creating a malicious Git tree (directory) named [...]git (a directory in Git repositories that stores all the data of the repository) in a different case (such as [...]GIT or [...]Git, needed because Git doesn't allow the all-lowercase version of [...]git to be created manually) with malicious files in the [...]git/hooks <b>subdirectory</b> (a folder with executable files that Git runs) on a repository that the attacker made or on a repository that the attacker can modify. If a Windows or Mac user pulls (downloads) {{a version of the}} repository with the malicious directory, then switches to that directory, the [...]git directory will be overwritten (due to the case-insensitive trait of the Windows and Mac filesystems) and the malicious executable files in [...]git/hooks may be run, which results in the attacker's commands being executed. An attacker could also modify the [...]git/config configuration file, which allows the attacker to create malicious Git aliases (aliases for Git commands or external commands) or modify extant aliases to execute malicious commands when run. The vulnerability was patched in version 2.2.1 of Git, released on 17 December 2014, and announced on the next day.|$|E
5000|$|... {{allows a}} user to add new files or <b>subdirectories</b> to the directory.|$|R
5000|$|Historically, {{and even}} on some modern {{embedded}} systems, the file systems either had no support for directories at all or only had a [...] "flat" [...] directory structure, meaning <b>subdirectories</b> were not supported; {{there were only a}} group of top-level directories each containing files. In modern systems, a directory can contain a mix of files and <b>subdirectories.</b>|$|R
5000|$|A Maildir {{directory}} (often named [...] ) {{usually has}} three <b>subdirectories</b> named , , and [...]|$|R
50|$|DIR1 is a <b>sub{{directory}}</b> of {{the master}} file directory (MFD), or root directory, and DIR2 is a <b>subdirectory</b> of DIR1. A disks MFD is identified by 000000.|$|E
5000|$|Later {{versions}} of Exec supported subdirectories. The naming syntax {{continued to use}} angle brackets. For example, a file in a second-level <b>subdirectory</b> on drive 2 might be named [...] Unlike MS-DOS and Unix, no explicit [...] "make directory" [...] command was needed. When a program tried to create a file within a <b>subdirectory,</b> that <b>subdirectory</b> would be automatically created (if it didn't already exist).|$|E
5000|$|To {{create a}} <b>subdirectory</b> over WebDav davix-mkdir davs://example.com/folder1/folder2/folder4 ...|$|E
5000|$|Archives can be {{organized}} as logical groups of files from directories and <b>subdirectories</b> ...|$|R
5000|$|Copy a directory, {{including}} all its files and <b>subdirectories,</b> to another directory: cp -R /home/nick/clients /home/nick/customersThis copies the directory clients, {{including all}} its files, <b>subdirectories,</b> and the files in those <b>subdirectories,</b> to the directory customers/clients. Some Unix systems behave differently in this mode, {{depending on the}} termination of directory paths. Using [...] on a GNU system it behaves as expected; however, on a BSD system, it copies all {{the contents of the}} [...] "clients" [...] directory, instead of the directory clients itself. The same happens in both GNU and BSD systems if the path of the source directory ends in [...] or [...]. (with or without trailing slash).|$|R
5000|$|...R recursively lists <b>subdirectories.</b> The command ls -R / would {{therefore}} list all files.|$|R
5000|$|Backup filters (by extension, <b>subdirectory,</b> regular expression, size, date, status, usage) ...|$|E
5000|$|A DZI has two parts: a DZI file (with {{either a}} [...]dzi or [...]xml extension) and a <b>subdirectory</b> of image files. Each folder {{in the image}} <b>subdirectory</b> is labeled with its level of resolution. Higher numbers {{correspond}} to a higher resolution level; inside each folder are the image tiles corresponding to that level of resolution.|$|E
5000|$|For example, {{the files}} on a Nikon D40 are {{arranged}} {{according to the}} above specification. Thus, a card formatted by the camera will have a volume named [...] "NIKOND40", with a <b>subdirectory</b> named [...] "DCIM". This directory contains a <b>subdirectory</b> named by default [...] "100NCD40", in which images are stored. Images are named [...] "DSC_xxxx", where xxxx represents the file's sequential number.|$|E
5000|$|... #Caption: Version 7 Unix {{filesystem}} layout: <b>subdirectories</b> of [...] "/" [...] and [...] "/usr" ...|$|R
5000|$|... /Mount/ - {{mounting}} point for additional local or remote filesystems. Common <b>subdirectories</b> are [...] and [...]|$|R
5000|$|Directory entries, {{both in the}} Root Directory Region and in <b>subdirectories,</b> are of the {{following}} format: ...|$|R
5000|$|... partial checkout/clone: Ability {{to check}} out or clone only a {{specified}} <b>subdirectory</b> from a repository.|$|E
5000|$|Customization {{is done by}} editing {{configuration}} {{files in}} the [...]fluxbox <b>subdirectory</b> in the user's home directory: ...|$|E
50|$|The code {{created by}} the school {{participants}} is made accessible in the GF darcs repository, <b>subdirectory</b> contrib/summerschool.|$|E
5000|$|It {{supported}} a flat file system; {{there were no}} <b>subdirectories.</b> File name format was like this: ...|$|R
50|$|Subvolumes can {{be created}} at any place within the file system hierarchy, and {{they can also be}} nested. Nested subvolumes appear as <b>subdirectories</b> within their parent subvolumes, {{similarly}} to the way top-level subvolume presents its subvolumes as <b>subdirectories.</b> Deleting a subvolume is not possible until all subvolumes below it in the nesting hierarchy are deleted first; as a result, top-level subvolumes cannot be deleted.|$|R
5000|$|Removal of the {{physical}} [...] "." [...] and [...] ".." [...] directory entries that appear in <b>subdirectories</b> ...|$|R
