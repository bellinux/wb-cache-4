25|144|Public
25|$|Also in November 2015, a {{researcher}} discovered that customers with diagnostic program Dell Foundation Services could be digitally tracked using the unique <b>service</b> <b>tag</b> number assigned {{to them by}} the program, even if a customer enabled private browsing and deleted their browser cookies.|$|E
25|$|Maintenance inspection: All {{types of}} {{extinguishers}} should be inspected {{at least once}} a year. The extinguisher is checked that it has the correct volume and pressure of extinguishing agent, that it is within the required hydrotest and internal maintenance intervals, that it is in good condition, and that all external parts are still serviceable. Dry chemical and dry powder types may also be hit on the bottom with a rubber mallet to make sure the powder is free-flowing. After inspection, the tech will attach a new tamper seal and yearly <b>service</b> <b>tag</b> around the pin.|$|E
5000|$|The near-clone Inspirons for the D800 and D810 {{were the}} Inspiron 8500 and 8600; the D820 and D830 share {{hardware}} with Precision models M65 and M4300 respectively. There are even known cases of [...] "mixed-mode" [...] {{samples of the}} latter, where the Dell-recorded type according to the <b>service</b> <b>tag</b> and markings differs from the BIOS-reported type with an identical <b>service</b> <b>tag.</b>|$|E
50|$|During {{initialization}} or upon driver load request, the kernel transverses {{that tree}} looking for <b>services</b> <b>tagged</b> as kernel <b>services.</b>|$|R
40|$|The {{quality of}} the current <b>tagging</b> <b>services</b> can be greatly {{improved}} if the service is able to cluster tags by their meaning. Tag clouds clustered by higher level topics enable the users to explore their tag space, which is especially needed when tag clouds become large. We demonstrate TagCluster- a tool for automated tag clustering that harnesses knowledge from Wikipedia about semantic relatedness between tags and names of categories to achieve smart clustering. Our approach shows much better quality of clusters compared to the existing techniques that rely on tag cooccurrence analysis in the <b>tagging</b> <b>service.</b> * <b>Tagging</b> <b>services</b> that assign relevant keywords to documents or objects have become quite popular {{in the past few}} years. Currently tagging is an essential part o...|$|R
40|$|Abstract. This paper {{describes}} an ontology-based service discovery front-end interface for GloServ. GloServ is a service discovery engine, {{which is an}} ontology-based distributed service discovery system that allows sophisticated querying of services. The working implementation of the front-end interface demonstrates how GloServ {{can be used for}} different types of web service discovery. The front-end generates a search form from the service class ontology. It also allows multiple services to be queried for in a single search by generating cascaded forms for combined service queries. It then converts the input to a GloServ query and displays the results to the user in a coherent manner. The use cases that are demonstrated with this implementation are service discovery for location-based <b>services,</b> <b>tagged</b> <b>services</b> and collaborative search with other users...|$|R
5000|$|The outer tag {{is the one}} closer/closest to the Ethernet header; {{its name}} is S-TAG (<b>Service</b> <b>tag,</b> ethertype 0x88a8).|$|E
5000|$|Dell uses a 5- or 7-digit base 36 number (<b>Service</b> <b>Tag)</b> as {{a compact}} version of their Express Service Codes.|$|E
50|$|Also in November 2015, a {{researcher}} discovered that customers with diagnostic program Dell Foundation Services could be digitally tracked using the unique <b>service</b> <b>tag</b> number assigned {{to them by}} the program, even if a customer enabled private browsing and deleted their browser cookies.|$|E
50|$|The Ichud HaKehillos has {{founded a}} sister group called TAG (Technology Awareness Group). It {{provides}} various services to its target market, including installing and configuring Web filtering and monitoring software on computers, smartphones and other devices. TAG {{is a nonprofit}} organization staffed by volunteers, {{and there is no}} charge for these <b>services.</b> <b>TAG</b> has offices in the US, Canada, Europe, Australia and elsewhere; TAG also provides certain services worldwide using remote desktop software. In total, TAG fields about 1000 phone calls from around the world every day.|$|R
40|$|Web service, discovery, matchmaking, {{collaborative}} tagging, evaluation One of the {{key requirements}} {{for the success of}} Service Oriented Architecture is discoverability of Web services. Unfortunately, application of authoritatively defined taxonomies cannot cope with the volume of services published on the Web. Collaborative tagging claims to address this problem, but is impeded by the lack of structure to describe Web service functions and interfaces. In this paper we introduce structured collaborative tagging to improve Web service descriptions. Performance of the proposed technique obtained during the Cross-Evaluation track of the Semantic Service Selection 2009 contest is reported. Obtained results show that the proposed approach can be successfully used in both Web <b>service</b> <b>tagging</b> and querying. ...|$|R
40|$|Abstract. Many {{studies have}} been {{conducted}} concerning ontology generation from the tags of social <b>tagging</b> <b>services</b> and some <b>tagging</b> <b>services</b> target academic literature. We think that it is unsuitable to search for technical information using the generated ontology from these tags, because they are often taken directly from the contents. In order to obtain contextual information on the papers, we focused on the notes taken when users listen to a presentation. We implemented and applied a system where the participants can input two kinds of memos on Web pages for presentations at conferences. As a result of this operation, we obtained words related to the content of the papers and to the background knowledge and research details. ...|$|R
50|$|The set of <b>service</b> <b>tag</b> {{management}} routines {{is currently}} an undocumented API, {{although it is}} used by some Windows utilities like netstat to display the TCP connections associated with each service. Some third party tools like ScTagQuery also make use of this API.|$|E
50|$|Starting with Windows Vista, the {{internal}} identification of services inside shared processes (svchost included) {{is achieved by}} so-called service tags. The <b>service</b> <b>tag</b> for each thread is stored in the SubProcessTag of its thread environment block (TEB). The tag is propagated across all threads that a main service thread subsequently starts, except for threads created indirectly by Windows thread-pool APIs.|$|E
50|$|With the IEEE {{standard}} 802.1ad, double-tagging can {{be useful}} for Internet service providers, allowing them to use VLANs internally while mixing traffic from clients that are already VLAN-tagged. The outer (next to source MAC and representing ISP VLAN) S-TAG (<b>service</b> <b>tag)</b> comes first, followed by the inner C-TAG (customer tag). In such cases, 802.1ad specifies a TPID of 0x88a8 for service-provider outer S-TAG.|$|E
40|$|Abstract—With {{the growth}} {{in the past few years}} of social <b>tagging</b> <b>services</b> like Delicious and CiteULike, there is growing {{interest}} in modeling and mining these social systems for deriving implicit social collective intelligence. In this paper, we propose and explore two probabilistic generative models of the social annotation (or tagging) process with an emphasis on user participation. These models leverage the inherent social communities implicit in these <b>tagging</b> <b>services.</b> We compare the proposed models to two prominent probabilistic topic models (Latent Dirichlet Allocation and Pachinko Allocation) via an experimental study of the popular Delicious <b>tagging</b> <b>service.</b> We find that the proposed community-based annotation models identify more coherent implicit structures than the alternatives and are better suited to handle unseen social annotation data. I...|$|R
40|$|Abstract: With {{the rapid}} {{development}} in Web 2. 0 application <b>services,</b> <b>tags</b> {{are used as}} useful metadata in social collaborative annotation systems. In this paper, we propose a collaborative approach for expanding tag neighbours and investigate {{the use of a}} spectral clustering algorithm to deal with issues of ambiguity and redundancy of tags. The algorithm could effectively filter out noisy tag neighbours, and thus obtain more appropriate recommendations for users. Experiments have been conducted on two real world datasets: “MovieLens ” and “M-Eco system”, to compare our proposed approach with the traditional collaborative filtering approaches and naive tag neighbours expansion approaches in terms of precision. The results showed the effectiveness and superiority of our proposed method against the traditional approaches, which demonstrate that our approach could considerably improve the performance of recommendation...|$|R
40|$|Abstract: We {{examine the}} {{potential}} impact of Web 2. 0 approaches to e-Science and Grid computing. We provide an analysis of Web Service and Grid computing core concepts, which we then map to corresponding concepts in Web 2. 0 systems. As we show, Web 2. 0, taken collectively, must be viewed as a comprehensive distributed computing approach. We then examine social bookmarking and tagging as an exemplary Web 2. 0 <b>service.</b> <b>Tagged</b> bookmarks can be used to build up keyword-based profiles {{that can be used in}} collaborator matchmaking services. To be professionally useful to researchers and faculty, these tools need to provide interfaces to scholarly articles for bookmarking. This introduces another level of Web 2. 0 service, the Semantic Research Grid, which we overview. We conclude with a discussion of the need for building hybrid Web Service/Web 2. 0 systems. I...|$|R
5000|$|Maintenance inspection: All {{types of}} {{extinguishers}} should be inspected {{at least once}} a year. The extinguisher is checked that it has the correct volume and pressure of extinguishing agent, that it is within the required hydrotest and internal maintenance intervals, that it is in good condition, and that all external parts are still serviceable. Dry chemical and dry powder types may also be hit on the bottom with a rubber mallet to make sure the powder is free-flowing. After inspection, the tech will attach a new tamper seal and yearly <b>service</b> <b>tag</b> around the pin.|$|E
50|$|This tank {{locomotive}} {{with its}} 1'D1' axle arrangement, together with its two sister engines LAG Nos. 87 and 88, {{is the last}} and most powerful branch line (Lokalbahn) locomotive {{to be built in}} Bavaria. Its power of 470 PSi enabled a top speed of 70 km/h in both directions. The EAG needed the new engines to relieve its two smaller locomotives, nos. EAG 5 and 6 (Bavarian GtL 4/4s) and to gradually take the aging and rickety EAG 3 and 4 out of <b>service.</b> <b>TAG</b> 7 proved itself so well, that a year later two more engines were built by the Lokalbahn AG (the aforementioned LAG Nos. 87 and 88).|$|E
50|$|The now {{ubiquitous}} Ethernet {{was initially}} {{defined as a}} Local Area Network (LAN) technology to interconnect the computers within a small organization in which these host computers were very close in proximity to each other. Over the years, Ethernet {{has become such a}} popular technology that it became the default Data Link Layer (OSI Layer 2) mechanism for data transport. This created a need for extending the Ethernet from a customer LAN bridging domain to service provider MAN, also known as the Provider bridging domain. For this, a 4 byte S-Tag or <b>Service</b> <b>Tag,</b> a type of Virtual LAN tag, was added to the header of the Ethernet frame in IEEE 802.1ad standard. In the service provider domain, switching was based on S-Tag and destination MAC address, and C-tag was used to create virtual LAN within the customer domain. This technology is also known as QinQ or Q-tunneling.|$|E
40|$|This {{document}} defines application <b>service</b> <b>tags</b> {{that allow}} <b>service</b> location without relying on rigid domain naming conventions, and DNS procedures for discovering servers that provide IEEE 802. 21 -defined Mobility Services. Such Mobility Services {{are used to}} assist a Mobile Node (MN) supporting IEEE 802. 21, in handover preparation (network discovery) and handover decision (network selection). The services addressed by this document are the Media Independent Handover Services defined in IEEE 802. 21. Status of This Memo This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (c) 2009 IETF Trust and the persons identified as th...|$|R
40|$|E-learning {{resources}} are developed by people having very different agendas {{and they need}} common meta-information framework to enable finding them across organizations. This paper focuses on collaboration among servers containing E-learning resources in different educational institutions for providing sharing and reusing of E-learning materials. Research problem is how to investigate collaborating servers, called <b>tagging</b> <b>services,</b> as a self-evolving infrastructure, which would allow sharing and reusing the Elearning materials in different user communities. The goal of the paper is to model a cluster of <b>tagging</b> <b>services,</b> storing E-learning materials or knowledge items such as bookmarks or index-cards and promote sharing and reusing of them. This paper considers a case when each service is situated separately – in different educational institutions, so each service is used by certain user community. E-learning materials put in system are marked with appropriate tags. Tags are taken from either an open or a closed vocabulary. In order to improve user experience and consistency, the <b>tagging</b> <b>service</b> offers a user a list of suggested tags, and to improve quality of suggestions, it also broadcasts request to other similar <b>tagging</b> <b>services.</b> The research idea is to use an algorithm based on self-learning SVM (Support Vector Machine) and graph theory for <b>tagging</b> <b>service</b> collaboration. Users should retain freedom to classify E-learning materials as they see fit, but they may benefit of being nudged in the right direction, e. g. given prompts about possible annotations and warned about mistakes or misspellings. Model has been tested short range in real environment...|$|R
5000|$|The page <b>tagging</b> <b>service</b> {{manages the}} process of {{assigning}} cookies to visitors; with log file analysis, the server has to be configured to do this.|$|R
5000|$|In New York, the New York City Human Rights Law {{administered}} by the New York City Commission on Human Rights (CCHR) provides further parallel protection with regard to violations in this regard by landlords and management of co-ops and condominiums, despite a building's policy of no-pets at all or no-pets in certain locations. Furthermore, the City of New York states that: [...] "All service dogs in New York City must have a valid dog license issued by the City's Department of Health. You may also request ... a tag that identifies your dog as a service dog. The tag is optional and businesses open to the public, including restaurants, must allow access to a service dog {{whether or not the}} dog is wearing a <b>service</b> <b>tag.</b> You must meet certain requirements to obtain the tag. Businesses may not demand any proof of disability or certification of the animal to allow a person to access the business with their service animal." ...|$|E
30|$|The {{compensation}} mechanism favors channel access for lagging flows. When a flow is denied, service due to channel error, its <b>service</b> <b>tag</b> retains. When its channel becomes error-free, a lagging flow {{has a low}} <b>service</b> <b>tag</b> and captures the channel. The {{compensation mechanism}} makes the lagging flow catch up its lag, but it may starve out, leading flows in the short term.|$|E
3000|$|IWFQ [24] {{algorithm}} uses WFQ for its error-free service. Each arriving packet is tagged as in weighted fair queueing, and the <b>service</b> <b>tag</b> for a flow {{is set to}} {{the finish}} tag of its head-of-line (HOL) packet. Among the flows that can be transmitted (i.e., channel is good and flow is backlogged), a HOL packet of the flow with least <b>service</b> <b>tag</b> will be picked and transmitted. For lagging flows with dirty channel, if the aggregated length of packets with finish tags less than the virtual time is greater than a constant bound (B [...]...|$|E
50|$|In late 2006, Yahoo! {{introduced}} an improved Yahoo! Bookmarks <b>service,</b> with a <b>tagging</b> facility, and encouraged My Web users to transfer their bookmarks to this service.|$|R
40|$|International audienceWith the {{increasing}} interest toward service-oriented architectures, {{the number of}} existing Web services is dramatically growing. Therefore, finding a particular service among this huge number of services is becoming a time-consuming task. User tags or keywords {{have proven to be}} a useful technique to smooth browsing experience in large document collections. Some service search engines, like Seekda, already propose this kind of facility. <b>Service</b> <b>tagging,</b> which is a fairly tedious and error prone task, is done manually by the providers and the users of the services. In this paper we propose an approach that automatically extracts <b>tags</b> from Web <b>service</b> descriptions. It identifies a set of relevant tags extracted from a service description and leaves only to the users the task of assigning tags not present in this description. The proposed approach is validated on a corpus of 146 services extracted from Seekda...|$|R
40|$|Locating IEEE 802. 21 Mobility Services Using DNS This {{document}} defines application <b>service</b> <b>tags</b> {{that allow}} <b>service</b> location without relying on rigid domain naming conventions, and DNS procedures for discovering servers that provide IEEE 802. 21 -defined Mobility Services. Such Mobility Services {{are used to}} assist a Mobile Node (MN) supporting IEEE 802. 21, in handover preparation (network discovery) and handover decision (network selection). The services addressed by this document are the Media Independent Handover Services defined in IEEE 802. 21. Status of This Memo This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (c) 2009 IETF Trust and the persons identified as th...|$|R
30|$|CIF-Q [29] uses start-time fair {{queueing}} (SFQ) [21] as the error-free system. SFQ tags the start-time of packet as <b>service</b> <b>tag</b> {{and makes}} the HOL packet with the smallest transmit first.|$|E
30|$|The mean queue {{delay of}} CSCPS is 0.262 s. There is a 99 % {{difference}} between the instantaneous and mean queue delays within 0.01 s which is the highest percentage among three algorithms. This shows that CSCPS controls the queue delay in a tiny region without a dramatic variation since CSCPS takes the channel condition into account of the compensation scheme. If the flow suffers from errors or a leading flow is selected to forward its packets, the lagging flow with maximum <b>service</b> <b>tag</b> is compensated first. If there are no backlogged lagging flows in the system, the system serves the flow with minimum <b>service</b> <b>tag.</b> In other words, leading flows can release their resource to lagging flows quickly if lagging flows exist. Therefore, flows preserving error-free channel have a constant rate to forward their packets to achieve steady queue delay and jitter.|$|E
40|$|The primary {{function}} of this utility is {{to retrieve the}} Dell <b>Service</b> <b>Tag</b> (serial number) of a host or remote computer on the network and calculate its Express Service Code for purposes of Dell support. However, {{it can also be}} used for validation of <b>Service</b> <b>Tag</b> and/or Express Service Code of Dell computers and Dell printers. This utility also provide a link to Dell 2 ̆ 7 s support website where you can view warranty status, download drivers and software, browse compatible parts and upgrades, and other support options. The secondary function is to quickly and easily view your host computer 2 ̆ 7 s basic system information from one location. Features: open source and free simple and easy to use lightweight and portable tiny in size great tool for tech support without leaving your desk you can find - make and model of a remote computer and who is logged into i...|$|E
40|$|Abstract. The importancy of Web {{services}} {{comes from}} the fact that they are an important means to realize SOA applications. Their increas-ing popularity caused the emergence of a fairly huge number of services. Therefore, finding a particular service among this large service space can be a hard task. User tags have proven to be a useful technique to smooth browsing experience in large document collections. Some service search engines proposes the facility of <b>service</b> <b>tagging.</b> It is usually done manu-ally by the providers and the users of the services, which can be a fairly tedious and error prone task. In this paper we propose an approach for <b>tagging</b> Web <b>services</b> automatically. It adapts techniques from text min-ing and machine learning to extract tags from WSDL descriptions. Then it enriches these tags by extracting relevant synonyms using WordNet. We validated our approach on a corpus of 146 services extracted from Seekda...|$|R
40|$|<b>Tags,</b> web <b>services,</b> text mining, machine learning. With the {{increasing}} interest toward service-oriented architectures, {{the number of}} existing Web services is dramatically growing. Therefore, finding a particular service among this huge number of services is becoming a time-consuming task. User tags or keywords {{have proven to be}} a useful technique to smooth browsing experience in large document collections. Some service search engines, like Seekda, already propose this kind of facility. <b>Service</b> <b>tagging,</b> which is a fairly tedious and error prone task, is done manually by the providers and the users of the services. In this paper we propose an approach that automatically extracts <b>tags</b> from Web <b>service</b> descriptions. It identifies a set of relevant tags extracted from a service description and leaves only to the users the task of assigning tags not present in this description. The proposed approach is validated on a corpus of 146 services extracted from Seekda. ...|$|R
40|$|With the {{emergence}} of modularized component based electronic services, such as Web <b>Services</b> and semantically <b>tagged</b> <b>services,</b> Individual Service Provisioning, wherein any user can be a service provider, can become a reality. We argue {{that there are three}} basic requirements for such an architecture: a personal service platform for using services, tools for creating services, and a network for sharing services, and we present our motivation, design, and implementation of these parts. With our enabling architecture we hope to demonstrate a feasible prototype system that stimulates {{the emergence}} of more specialized services for all users...|$|R
