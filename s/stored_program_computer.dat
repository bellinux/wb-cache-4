37|10000|Public
500|$|Even though Bartik {{played an}} {{integral}} part in developing ENIAC, her work at University of Pennsylvania and on the ENIAC was completely hidden until it was documented in the film [...] Bartik and the four other original programmers later became {{part of a group}} including John Von Neumann and Dick Clippinger, charged with converting the ENIAC into a <b>stored</b> <b>program</b> <b>computer.</b> After the end of the war, Bartik went on to work with the ENIAC designers John Eckert and John Mauchly, and helped them develop the BINAC and UNIVAC I computers. BINAC was the first computer to use magnetic tape instead of punch cards to store data and the first computer to utilize the twin unit concept, and Bartik programmed a guidance system to run on it for Northrop Aircraft. She was responsible for designing the UNIVAC's logic circuits. Recalling her time working with Eckert and Mauchly on these projects, she described their close group of computer engineers as a [...] "technical Camelot." ...|$|E
2500|$|In October 1947, the {{directors}} of J. Lyons & Company, a British catering company famous for its teashops but with strong interests in new office management techniques, decided {{to take an active}} role in promoting the commercial development of computers. The LEO I computer became operational in April 1951 [...] and ran the world's first regular routine office computer job. On 17 November 1951, the J. Lyons company began weekly operation of a bakery valuations job on the LEO (Lyons Electronic Office). This was the first business [...] to go live on a <b>stored</b> <b>program</b> <b>computer.</b>|$|E
2500|$|Eckert {{believed}} that the widely adopted term [...] "von Neumann architecture" [...] should properly {{be known as the}} [...] "Eckert architecture", since the stored-program concept central to the von Neumann architecture had already been developed at the Moore School by the time von Neumann arrived on the scene in 1944-1945. Eckert's contention that von Neumann improperly took credit for devising the <b>stored</b> <b>program</b> <b>computer</b> architecture was supported by Jean Bartik, one of the original ENIAC programmers. Many others in the field, however, believe that the concept of a stored program predates both of these men, going as far back as Charles Babbage and others.|$|E
5000|$|... #Caption: [...] Card from a Fortran program: Z(1) = Y + W(1). The {{punched card}} carried over from tabulating {{machines}} to <b>stored</b> <b>program</b> <b>computers</b> before {{being replaced by}} terminal input and magnetic storage.|$|R
5000|$|EDSAC - world’s first {{practical}} <b>stored</b> <b>program</b> electronic <b>computer</b> (1949-1958) ...|$|R
5000|$|The world's first <b>stored</b> <b>program</b> digital <b>computer</b> (the Small-Scale Experimental Machine) ...|$|R
5000|$|Based on this demand, Hurd advised {{new company}} {{president}} Tom Watson, Jr. {{to build the}} first IBM commercial <b>stored</b> <b>program</b> <b>computer,</b> first called the Defense Calculator. It was marketed as the IBM 701 in 1952.There were 18 model 701 machines built (in addition to the Engineering development machine).|$|E
50|$|In October 1946, {{work began}} under Maurice Wilkes on EDSAC (Electronic Delay Storage Automatic Calculator), which {{subsequently}} became the world’s first fully operational and practical <b>stored</b> <b>program</b> <b>computer</b> when it ran its first program on 6 May 1949. It inspired the world’s first business computer, LEO. It {{was replaced by}} EDSAC 2, the first microcoded and bitsliced computer, in 1958.|$|E
50|$|In 1946, {{he joined}} the Electronic Computer Project at the Institute for Advanced Study (IAS) in Princeton, New Jersey under the {{leadership}} of John von Neumann. The project built a parallel <b>stored</b> <b>program</b> <b>computer</b> called the IAS machine that was the prototype for a number of machines such as the MANIAC I, ORACLE, and ILLIAC series. Pomerene designed and implemented the adder portion of the arithmetic unit.|$|E
40|$|Full custom VLSI is {{presented}} as a viable technology for addressing the need for the computing capabilities required for the real-time health monitoring of spacecraft systems. This technology presents solutions that cannot be realized with <b>stored</b> <b>program</b> <b>computers</b> or semicustom VLSI; also, it is not dependent on current IC processes. It is argued that, while design time is longer, full custom VLSI produces the fastest and densest VLSI solution and that high density normally also yields low manufacturing costs...|$|R
5000|$|The {{result was}} Engineering Research Associates (ERA), a {{contract}} engineering company that {{worked on a}} number of seemingly unrelated projects in the early 1950s. One of these {{was one of the first}} commercial <b>stored</b> <b>program</b> <b>computers,</b> the 36-bit ERA 1103. The machine was built for the Navy, which intended to use it in their non-secret code-breaking centers. In the early 1950s a minor political debate broke out in Congress about the Navy essentially [...] "owning" [...] ERA, and the ensuing debates and legal wrangling left the company drained of both capital and spirit. In 1952, Parker sold ERA to Remington Rand.|$|R
50|$|Conway Berners-Lee (born 10 September 1921) is an English {{mathematician}} {{and computer}} scientist {{who worked as}} a member of the team that developed the Ferranti Mark 1, the world's first commercial <b>stored</b> <b>program</b> electronic <b>computer.</b> He was born in Birmingham in 1921 and is the father of Sir Tim Berners-Lee, the inventor of the World Wide Web.|$|R
5000|$|CSIRAC ( [...] ; Council for Scientific and Industrial Research Automatic Computer), {{originally}} {{known as}} CSIR Mk 1, was Australias first digital computer, {{and the fifth}} <b>stored</b> <b>program</b> <b>computer</b> in the world. It is the oldest surviving first-generation electronic computer(The Zuse Z4 at the Deutsches Museum is older, but was electro-mechanical, not electronic), {{and was one of}} the first in the world to play digital music.|$|E
5000|$|One of the inspirations for ENIAC was the {{mechanical}} analog Bush differential analyzer. It influenced both the architecture and programming method chosen. However, although ENIAC as originally configured, {{could have been}} programmed as a DDA (the [...] "numerical integrator" [...] in Electronic Numerical Integrator And Computer), {{there is no evidence}} that it ever actually was. The theory of DDAs was not developed until 1949, one year after ENIAC had been reconfigured as a <b>stored</b> <b>program</b> <b>computer.</b>|$|E
50|$|The University of Manchester {{has been}} home to many supercomputers, {{starting}} from the 1948 Manchester Baby - the world's first <b>stored</b> <b>program</b> <b>computer.</b> Others have included CDC7600 (1972, and a second in 1977), a CDC Cyber 205, VP1200, VPX and 240/10. The CSAR service (see below) supercomputers included a 576 PE Cray T3E-1200E (1998, upgraded to 816PE in 2000), and SGI Origin 3000 (2001) and Altix (2003) systems. More recently some large clusters (e.g., the 200 processor Dell EM64T cluster) have been installed.|$|E
40|$|Part 9 : Reconstruction StoriesInternational audienceEDSAC (The Electronic Delay Storage Automatic Calculator) was the world’s first {{practical}} <b>stored</b> <b>program</b> electronic <b>computer.</b> The {{goal of the}} EDSAC Replica Project is {{to build}} a functional replica of the University of Cambridge EDSAC Computer as it was in 1949, and for the replica to be a working demonstration at the UK National Museum of Computing...|$|R
50|$|In 1947 {{he went to}} Cambridge University {{to become}} Maurice Vincent Wilkes' first {{research}} assistant {{as part of the}} team working to build EDSAC. This was the world's first practical <b>stored</b> <b>program</b> electronic <b>computer,</b> and the world's first computer in regular operation from 1949. He used EDSAC to carry out the first ever structural engineering calculations on a computer as part of his PhD.|$|R
40|$|Data Types and Algebraic Semantics The {{history of}} {{programming}} languages, {{and to a}} large extent of software engineering as a whole, {{can be seen as a}} succession of ever more powerful abstraction mechanisms. The first <b>stored</b> <b>program</b> <b>computers</b> were <b>programmed</b> in binary, which soon gave way to assembly languages that allowed symbolic codes for operations and addresses. fortran began the spread of "high level" programming languages, though at the time it was strongly opposed by many assembly programmers; important features that developed later include blocks, recursive procedures, flexible types, classes, inheritance, modules, and genericity. Without going into the philosophical problems raised by abstraction (which in view of the discussion of realism in Section 4 may be considerable), it seems clear that the mathematics used to describe programming concepts should in general get more abstract as the programming concepts get more abstract. Nevertheless, there has been great resistance to u [...] ...|$|R
50|$|As an {{employee}} of IBM, Eckert directed {{one of the first}} industrial research laboratories in the country. In 1945 he hired Herb Grosch and Llewellyn Thomas as the next two IBM research scientists, who both made significant contributions. When Cuthbert Hurd became the next PhD to be hired by IBM in 1949, he was offered a position with Eckert, but instead founded the Applied Science Department, and later directed the development of IBM's first commercial <b>stored</b> <b>program</b> <b>computer</b> (the IBM 701) based on the demand demonstrated by applications such as those of Eckert.|$|E
5000|$|Colossus {{was not a}} <b>stored</b> <b>program</b> <b>computer.</b> The {{input data}} for the five {{parallel}} processors was read from the looped message paper tape and the electronic pattern generators for the chi, psi and motor wheels. The programs for the processors were set and held on the switches and jack panel connections. Each processor could evaluate a Boolean function and count and display {{the number of times}} it yielded the specified value of [...] "false" [...] (0) or [...] "true" [...] (1) for each pass of the message tape.|$|E
50|$|CALDIC was {{designed}} to be constructed at a low cost and simple to operate. It was a serial decimal machine with an 8 in, 10,000-word magnetic drum memory. (As CALDIC's decimal words were 10 digits each, the magnetic memory could store about 400,000 bits.) It contained 1,300 vacuum tubes, 1,000 crystal diodes, 100 magnetic elements (for the recording heads), and 12 relays (in the power supply). It was capable of speeds of 50 iterations per second. CALDIC was a <b>stored</b> <b>program</b> <b>computer</b> with a six-digit instruction format (two digits for the opcode and four digits for the memory address).|$|E
5000|$|Maxwell Herman Alexander [...] "Max" [...] Newman, FRS (7 February 1897 - 22 February 1984) was a British {{mathematician}} and codebreaker. His work in World War II led to {{the construction}} of Colossus, the world's first operational, programmable electronic computer, and he established the Royal Society Computing Machine Laboratory at the University of Manchester which produced the world's first working, modern <b>stored</b> <b>program</b> electronic <b>computer</b> in 1948, the Manchester Small-Scale Experimental Machine.|$|R
25|$|ENIAC {{could be}} {{programmed}} to perform complex sequences of operations, including loops, branches, and subroutines. However, instead of the <b>stored</b> <b>program</b> <b>computers</b> that exist today, ENIAC was just a large collection of arithmetic machines, which had programs hard coded into the machines with function tables that each contained 1200 ten way switches. The task of taking a problem and mapping it onto the machine was complex, and usually took weeks. Due {{to the complexity of}} mapping programs onto the machine, programs were only changed after huge numbers of tests of the current program. After the program was figured out on paper, the process of getting the program into ENIAC by manipulating its switches and cables could take days. This was followed by a period of verification and debugging, aided by the ability to execute the program step by step. A programming tutorial for the modulo function using an ENIAC simulator gives an impression of what a program on the ENIAC looked like.|$|R
40|$|Forty years ago, {{the very}} first programmers were {{wondering}} {{how to make the}} best use of <b>stored</b> <b>program</b> <b>computers.</b> By twenty years ago, that handful of programmers had grown into a software industry so large that it faced a major crisis. Today, another twenty years on, we are beginning to see how that crisis helped to move the industry from an organised craft into a profession. We still have a software crisis, though it is no longer the old one and no longer even considered a crisis. It seems likely that we will always have a crisis, a situation where our propensity for producing programs outstrips our understanding of new programming concepts. What the last twenty years have accomplished in a quiet way {{is the subject of this}} talk and I would like to show you how, and how far, theory, experiment and practice have worked together, often unintentionally, to achieve performance in software engineering...|$|R
50|$|Many early {{electronic}} {{computers were}} based on the First Draft of a Report on the EDVAC report published in 1945. In {{what became known as the}} Von Neumann architecture, a central control unit and arithmetic logic unit (ALU, which he called the central arithmetic part) were combined with computer memory and input and output functions to form a <b>stored</b> <b>program</b> <b>computer.</b> The Report presented a general organization and theoretical model of the computer, however, not the implementation of that model.Soon designs integrated the control unit and ALU into what became known as the central processing unit (CPU).|$|E
5000|$|In October 1947, the {{directors}} of J. Lyons & Company, a British catering company famous for its teashops but with strong interests in new office management techniques, decided {{to take an active}} role in promoting the commercial development of computers. The LEO I computer became operational in April 1951 [...] and ran the world's first regular routine office computer job. On 17 November 1951, the J. Lyons company began weekly operation of a bakery valuations job on the LEO (Lyons Electronic Office). This was the first business [...] to go live on a <b>stored</b> <b>program</b> <b>computer.</b>|$|E
5000|$|The first {{computers}} also {{arrived in}} 1957, the WITCH (Wolverhampton Instrument for Teaching Computing from Harwell). The annual report for 1956-57 records: [...] "Following a visit {{of a member}} of staff to Harwell, the college in competition with eight other colleges was offered the gift of an Electronic Digital Computer." [...] A number of local firms donated sums of money {{to cover the cost of}} maintenance and operation. The WITCH is now considered to be the [...] "oldest original functioning electronic <b>stored</b> <b>program</b> <b>computer</b> in the world" [...] and from September 2009 began restoration at The National Museum of Computing, Bletchley Park.|$|E
40|$|The {{processor}} accelerators {{are effective}} {{because they are}} working not (completely) on principles of <b>stored</b> <b>program</b> <b>computers.</b> They use some kind of parallelism, and it is rather hard to program them effectively: a parallel architecture by means of (and thinking in) sequential programming. The recently introduced EMPA architecture uses {{a new kind of}} parallelism, which offers the potential of reaching higher degree of parallelism, and also provides extra possibilities and challenges. It not only provides synchronization and inherent parallelization, but also takes over some duties typically offered by the OS, and even opens the till now closed machine instructions for the end-user. A toolchain for EMPA architecture with Y 86 cores has been prepared, including an assembler and a cycle-accurate simulator. The assembler is equipped with some meta-instructions, which allow to use all advanced possibilities of the EMPA architecture, {{and at the same time}} provide a (nearly) conventional-style programming. The cycle accurate simulator is able to execute the EMPA-aware object code, and is a good tool for developing algorithms for EMPAComment: 13 pages. 7 figures, 2 tables, 5 program listing...|$|R
50|$|The central ideas {{incorporated}} in Rameyev's {{invention of the}} electronic <b>computer</b> included: <b>storing</b> <b>programs</b> in <b>computer</b> memory, using binary code, utilizing external devices, and deploying electronic circuits and semiconductor diodes. The first publication about similar technology outside of the USSR appeared in 1949-1950. Rameyev also suggested that intermediate computation data be automatically printed on punched tape and sent into the computer's arithmetic device for subsequent processing, meaning that the processing of commands would be performed in the computer’s arithmetic device; this is usually {{referred to as the}} Von Neumann architecture.|$|R
5000|$|The [...] "RAM" [...] part of {{the real}} RAM model name stands for [...] "random access machine". This {{is a model of}} {{computing}} that resembles a simplified version of a standard computer architecture. It consists of a <b>stored</b> <b>program,</b> a <b>computer</b> memory unit consisting of an array of cells, and a central processing unit with a bounded number of registers. Each memory cell or register can store a real number. Under the control of the program, the real RAM can transfer real numbers between memory and registers, and perform arithmetic operations on the values stored in the registers.|$|R
5000|$|Eckert {{believed}} that the widely adopted term [...] "von Neumann architecture" [...] should properly {{be known as the}} [...] "Eckert Architecture," [...] since the stored-program concept central to the von Neumann architecture had already been developed at the Moore School by the time von Neumann arrived on the scene in 1944-1945. Eckert's contention that von Neumann improperly took credit for devising the <b>stored</b> <b>program</b> <b>computer</b> architecture was supported by Jean Bartik, one of the original ENIAC programmers. [...] Many others in the field, however, believe that the concept of a stored program predates both of these men, going as far back as Charles Babbage and others.|$|E
50|$|The Computer Laboratory {{built and}} {{operated}} the world’s first fully operational practical <b>stored</b> <b>program</b> <b>computer</b> (EDSAC, 1949) and offered the world’s first postgraduate taught course {{in computer science}} in 1953. It currently offers a 3-year undergraduate course and a 1-year masters course (with an optional natural language processing theme). Recent {{research has focused on}} virtualization, security, usability, formal verification, formal semantics of programming languages, computer architecture, natural language processing, wireless networking, biometric identification, routing, positioning systems and sustainability (“Computing {{for the future of the}} planet”). Members of the Computer Laboratory have been involved in the creation of many successful UK IT companies such as Acorn, ARM, nCipher and XenSource.|$|E
50|$|Since his {{laboratory}} {{had its own}} funding, he was immediately able to start work on a small practical machine, the Electronic Delay Storage Automatic Calculator (EDSAC), once back at Cambridge. He decided that his mandate was not to invent a better computer, but simply to make one available to the university. Therefore, his approach was relentlessly practical. He used only proven methods for constructing {{each part of the}} computer. The resulting computer was slower and smaller than other planned contemporary computers. However, {{his laboratory}}'s computer was the first practical <b>stored</b> <b>program</b> <b>computer</b> to be completed, and operated successfully from May 1949, well over a year before the much larger and more complex EDVAC. In 1950, along with David Wheeler, Wilkes used EDSAC to solve a differential equation relating to gene frequencies in a paper by Ronald Fisher. This represents the first use of a computer for a problem in the field of biology.|$|E
50|$|ENIAC {{could be}} {{programmed}} to perform complex sequences of operations, including loops, branches, and subroutines. However, instead of the <b>stored</b> <b>program</b> <b>computers</b> that exist today, ENIAC was just a large collection of arithmetic machines, which had programs hard coded into the machines with function tables that each contained 1200 ten way switches. The task of taking a problem and mapping it onto the machine was complex, and usually took weeks. Due {{to the complexity of}} mapping programs onto the machine, programs were only changed after huge numbers of tests of the current program. After the program was figured out on paper, the process of getting the program into ENIAC by manipulating its switches and cables could take days. This was followed by a period of verification and debugging, aided by the ability to execute the program step by step. A programming tutorial for the modulo function using an ENIAC simulator gives an impression of what a program on the ENIAC looked like.ENIAC's six primary programmers, Kay McNulty, Betty Jennings, Betty Snyder, Marlyn Wescoff, Fran Bilas and Ruth Lichterman, not only determined how to input ENIAC programs, but also developed an understanding of ENIAC's inner workings. The programmers debugged problems by crawling inside the massive structure to find bad joints and bad tubes.|$|R
5000|$|... phage (2000) excavates {{the unique}} digital {{artifacts}} of an individual's hard drive including internet downloads, web sites visited, images and emails <b>stored.</b> The <b>computer</b> <b>program</b> {{acts as a}} synthetic organism, filtering through all available material and displaying the results as a floating-3D world of data. video ...|$|R
40|$|The recent {{demonstration}} of an all-optical, <b>stored</b> <b>program,</b> digital <b>computer</b> by our group focused {{on high speed}} optoelectronic design. It {{was made possible by}} a new digital design method known as time-of-flight design. A rudimentary, but general purpose, proof of principle computer was built, which is all-optical in the sense that all signals connecting logic gates and all memory are optical in nature. LiNbO 3 directional couplers, electro-optic switches, are used to perform logic operations In addition to demonstrating <b>stored</b> <b>program</b> operation in an optoelectronic digital computer, the system demonstrated the feasibility of the new design method, which does not use any flip flops or other bistable devices for synchronization or memory. This potentially allows system clock rates of the same order as device bandwidth. This paper describes how the time-of-flight design method was motivated by the special properties of optoelectronic digital design. The basic principles of the method we [...] ...|$|R
