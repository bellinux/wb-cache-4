75|680|Public
50|$|Éfendiev F.F. (Fuad Efendi) {{provided}} <b>symmetric</b> <b>algorithm</b> generating {{basis of}} invariants of n-ary forms of degree r.|$|E
5000|$|The <b>symmetric</b> <b>algorithm</b> for {{computing}} {{the values}} of [...] less than [...] is very similar. It instead proceeds along [...] in the opposite direction, from the top right to the bottom left: ...|$|E
5000|$|... {{asymmetric}} encryption is too slow for many purposes, and all secret key algorithms {{require that the}} key is securely distributed. By using an asymmetric algorithm to encrypt the secret key for another, faster, <b>symmetric</b> <b>algorithm,</b> it's possible to improve overall performance considerably. This is the process used by PGP and GPG.|$|E
40|$|AbstractWith growing {{awareness}} and concerns regards to Cloud Computing and Information Security, there is {{growing awareness}} and usage of Security Algorithms into data systems and processes. This paper presents a brief overview and comparison of Cryptographic algorithms, {{with an emphasis on}} <b>Symmetric</b> <b>algorithms</b> which should be used for Cloud based applications and services that require data and link encryption. In this paper we review <b>Symmetric</b> and Asymmetric <b>algorithms</b> with emphasis on <b>Symmetric</b> <b>Algorithms</b> for security consideration on which one should be used for Cloud based applications and services that require data and link encryption...|$|R
50|$|Examples {{of popular}} <b>symmetric</b> <b>algorithms</b> include Twofish, Serpent, AES (Rijndael), Blowfish, CAST5, Kuznyechik, RC4, 3DES, Skipjack, Safer+/++ (Bluetooth), and IDEA.|$|R
40|$|Numerous {{examinations}} of the weaknesses with Authentication of Key Agreement protocol (AKA) of Universal Mobile Telecommunications System (UMTS) {{have been presented}} by various researchers. It is plausible {{to suggest that the}} majority of the proposed solutions of authentication protocols in the reported investigative works are formulated based on asymmetric algorithms which consume more computational overhead than <b>symmetric</b> <b>algorithms.</b> There is no evidence that the <b>symmetric</b> <b>algorithms</b> could lead to the existing weaknesses. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|R
50|$|As each {{of these}} is of a {{different}} level of cryptographic complexity, it is usual to have different key sizes for {{the same level of}} security, depending upon the algorithm used. For example, the security available with a 1024-bit key using asymmetric RSA is considered approximately equal in security to an 80-bit key in a <b>symmetric</b> <b>algorithm.</b>|$|E
50|$|If an {{algorithm}} {{takes the}} same time to compress a data archive as it does to decompress it, it is considered symmetrical. Note that compression and decompression, even for a <b>symmetric</b> <b>algorithm,</b> may not be perfectly symmetric in practice, depending on the devices the data is being copied to and from, and other factors such as latency and the fragmentation on the device.|$|E
50|$|The {{effectiveness}} of public key cryptosystems {{depends on the}} intractability (computational and theoretical) of certain mathematical problems such as integer factorization. These problems are time consuming to solve, but usually faster than trying all possible keys by brute force. Thus, asymmetric algorithm keys must be longer for equivalent resistance to attack than <b>symmetric</b> <b>algorithm</b> keys. As of 2002, an asymmetric key length of 1024 bits was generally considered by cryptology experts to be the minimum necessary for the RSA encryption algorithm.|$|E
50|$|A{{symmetric}} keys {{differ from}} symmetric keys {{in that the}} algorithms use separate keys for encryption and decryption while a <b>symmetric</b> key’s <b>algorithm</b> uses a single key for both processes. Because multiple keys are used with an asymmetric algorithm, the process takes longer to produce than a <b>symmetric</b> key <b>algorithm</b> would. However, the benefits lay {{in the fact that}} an asymmetric algorithm is much more secure than a <b>symmetric</b> key <b>algorithm</b> is.|$|R
50|$|<b>Symmetric</b> <b>algorithms</b> are {{typically}} used for media streaming protocols, as either the server taking {{too long to}} compress the data, or the client taking too long to decompress, would lead to delays in the viewing of the data.|$|R
40|$|This paper {{presents}} alternative security methods {{based on}} DNA. From the available alternative security methods, <b>symmetric</b> DNA <b>algorithms</b> were developed and implemented. The first <b>symmetric</b> DNA <b>algorithm</b> was {{implemented in the}} Java language, while the second DNA algorithm was implemented in BioJava and MatLab. Comparisons have been made between the performances of different standard symmetrical algorithms and the DNA proposed algorithms. As a new step to enhance the security, an asymmetric key generation inside a DNA security algorithm is presented. The asymmetric key generation algorithm starts from a password phrase. The asymmetric DNA algorithm proposes a mechanism which makes use of more encryption technologies. Therefore, it is more reliable and {{more powerful than the}} OTP DNA <b>symmetric</b> <b>algorithms...</b>|$|R
50|$|Monkey's Audio's {{advantages}} are better compression rates compared to FLAC and WavPack, {{as well as}} multithreading/multicore support. Monkey's Audio main drawbacks are {{the fact that it}} employs a <b>symmetric</b> <b>algorithm,</b> meaning the decoding takes comparable resources to encoding, which makes it unsuitable for all but the fastest portable players (via Rockbox firmware), and that it has limited support on software platforms other than Windows; on other platforms only decoding is officially supported by third-party programs. Although the original source code is freely available, the license is not considered to be an open source one. A GPL version of the decoder has been independently written for Rockbox and then included in ffmpeg.|$|E
50|$|The {{public key}} {{algorithms}} known thus far are relatively computationally costly compared with most symmetric key algorithms of apparently equivalent security. The difference {{factor is the}} use of typically quite large keys. This has important implications for their practical use. Most are used in hybrid cryptosystems for reasons of efficiency - in such a cryptosystem, a shared secret key ("session key") is generated by one party, and this much briefer session key is then encrypted by each recipient's public key. Each recipient then uses his own private key to decrypt the session key. Once all parties have obtained the session key, they can use a much faster <b>symmetric</b> <b>algorithm</b> to encrypt and decrypt messages. In many of these schemes, the session key is unique to each message exchange, being pseudo-randomly chosen for each message.|$|E
5000|$|IBM's Lucifer cipher was {{selected}} in 1974 {{as the base}} for {{what would become the}} Data Encryption Standard. Lucifer's key length was reduced from 128-bits to 56 bits, which the NSA and NIST argued was sufficient. The NSA has major computing resources and a large budget; some cryptographers including Whitfield Diffie and Martin Hellman complained that this made the cipher so weak that NSA computers would be able to break a DES key in a day through brute force parallel computing. The NSA disputed this, claiming brute forcing DES would take them something like 91 years. [...] However, by the late 90s, it became clear that DES could be cracked in a few days' time-frame with custom-built hardware such as could be purchased by a large corporation or government. The book Cracking DES (O'Reilly and Associates) tells of the successful attempt in 1998 to break 56-bit DES by a brute force attack mounted by a cyber civil rights group with limited resources; see EFF DES cracker. Even before that demonstration, 56 bits was considered insufficient length for <b>symmetric</b> <b>algorithm</b> keys. In 2002, Distributed.net and its volunteers broke a 64-bit RC5 key after several years effort, using about seventy thousand (mostly home) computers.|$|E
3000|$|The {{symmetric}} {{approach is}} {{most commonly used}} cryptosystem, as the system is easy to implement and more importantly it has very fast encryption speed [4]. <b>Symmetric</b> <b>algorithms,</b> such as, DES, Triple DES, and Rijndael [4], provide efficient and powerful cryptographic solutions, especially for encrypting bulk data. Let [...]...|$|R
40|$|Over {{the last}} decades owing to the {{incredible}} boost in the electronics industry and wireless technology, {{there has been an}} extraordinary outburst in the extent of digital data transmitted via the internet by means of handheld chic devices. The hefty amount of transmitted data requires data to be safe and sound in addition to transmission speed should be swift. In this document we have prepared qualitatively cryptanalysis of our proposed technique ’EMDS’ and evaluated against it with further preferred <b>symmetric</b> <b>algorithms.</b> We have analyzed the diverse variety of <b>symmetric</b> <b>algorithms</b> by following the tangible approach and examined dissimilar parameters implicated. This document endows with estimation of ten of the majority of frequent algorithms. A contrast has been carried out connecting those algorithms and EMDS based on diverse parameters...|$|R
50|$|The {{resources}} {{required for}} a brute-force attack grow exponentially with increasing key size, not linearly. Although U.S. export regulations historically restricted key lengths to 56-bit symmetric keys (e.g. Data Encryption Standard), these restrictions {{are no longer in}} place, so modern <b>symmetric</b> <b>algorithms</b> typically use computationally stronger 128- to 256-bit keys.|$|R
50|$|Asymmetric {{algorithms}} rely {{for their}} effectiveness on {{a class of}} problems in mathematics called one-way functions, which require relatively little computational power to execute, but vast amounts of power to reverse, if reversal is possible at all. A classic example of a one-way function is multiplication of very large prime numbers. It's fairly quick to multiply two large primes, but very difficult to find the factors of the product of two large primes. Because of the mathematics of one-way functions, most possible keys are bad choices as cryptographic keys; {{only a small fraction}} of the possible keys of a given length are suitable, and so asymmetric algorithms require very long keys to reach the same level of security provided by relatively shorter symmetric keys. The need to both generate the key pairs, and perform the encryption/decryption operations make asymmetric algorithms computationally expensive, compared to most symmetric algorithms. Since symmetric algorithms can often use any sequence of (random, or at least unpredictable) bits as a key, a disposable session key can be quickly generated for short-term use. Consequently, it is common practice to use a long asymmetric key to exchange a disposable, much shorter (but just as strong) symmetric key. The slower asymmetric algorithm securely sends a symmetric session key, and the faster <b>symmetric</b> <b>algorithm</b> takes over for the remainder of the message.|$|E
40|$|This Paper {{presents}} the proposal for implementation of SMS 4 cryptographic algorithm. Its main {{purpose is to}} increase the performance, and to improve use flexibility of the State’s commercial cipher <b>symmetric</b> <b>algorithm</b> SMS 4, SOC design method for embedded soft core based on Xilinx Company’s MicroBlaze is developed to design key extension and encryption/decryption operation of SMS 4 algorithm into IP hardcore by means of hardware and connect SMS 4 hardcore to PLB or OPB by interface module...|$|E
40|$|In this work, we {{introduce}} a <b>symmetric</b> <b>algorithm</b> {{obtained by the}} recurrence relation a_{n}^{k}=a_{n- 1 }^{k}+a_{n}^{k- 1 }. We {{point out that this}} algorithm can be apply to hyperharmonic-, ordinary and incomplete Fibonacci- and Lucas numbers. An explicit formulae for hyperharmonic numbers, general generating functions of the Fibonacci- and Lucas numbers are obtained. Besides we define "hyperfibonacci numbers", "hyperlucas numbers". Using these new concepts, some relations between ordinary and incomplete Fibonacci- and Lucas numbers are investigated. Comment: 16 page...|$|E
50|$|Because <b>symmetric</b> key <b>algorithms</b> {{are nearly}} always much less {{computationally}} intensive than asymmetric ones, {{it is common}} to exchange a key using a key-exchange algorithm, then transmit data using that key and a <b>symmetric</b> key <b>algorithm.</b> PGP and the SSL/TLS family of schemes use this procedure, and are thus called hybrid cryptosystems.|$|R
3000|$|... that {{constitutes}} the error ẽ_a,k=e_a,k+v_k=u^T_kw̃_k- 1 +v_k. We refer to these algorithms {{in the following}} as asymmetric in contrast to <b>symmetric</b> <b>algorithms,</b> such as LMS or RLS. Equivalently speaking, it remained unclear for those adaptive filters of general asymmetric structure whether worst-case sequences exist that could cause divergence {{no matter what the}} step-size (μ [...]...|$|R
40|$|Abstract —  Network {{security}} {{is one of}} the significant aspects of information security. Network {{security is}} involved in various business organizations, enterprises, and other types of institutions and it has become a pivotal function in building and maintaining today's modern high-growth networks. Cryptography is a technology used to provide of information security by encoding the data. It provides a high secured data transmission by encrypting the data that cannot be accessed by a third party. This paper encompasses the basics of network security and types of <b>symmetric</b> <b>algorithms</b> and new approach for <b>symmetric</b> encryption <b>algorithm</b> for encryption and decryption of data and the merits of the new proposed algorithm...|$|R
40|$|In the past, Cryptography {{was used}} in keeping {{military}} information, diplomatic correspondence secure and in protection of national security. Nowadays, the range of cryptography applications have been expanded {{a lot in the}} modern area after the development of communication means; cryptography is essentially required to ensure that data are protected against penetrations. This is used to ensure that the contents of a message are confidentially transmitted and would not be altered. In this paper, we have implemented a cryptosystem (encrypting/decryption) for text data using both Data Encryption Standard (DES) and Rivest-Shamir-Adleman (RSA) cryptosystem. The asymmetric algorithm was used for the key encryption and decryption process because it provides a means to deliver keys on a secure channel, while the data to be sent will be encrypted and decrypted using the <b>symmetric</b> <b>algorithm.</b> This system was designed to accomplish a number of security features such as authentication, confidentiality, integrity, and non-repudiation. Also the combination of the speed and strength of the <b>symmetric</b> <b>algorithm</b> with the robustness and key management capability of the asymmetric algorithm, thereby producing an enhanced encryption algorithm and we employed text data as our experimental data...|$|E
40|$|A <b>symmetric</b> <b>algorithm</b> for {{detecting}} {{the termination of}} a distributed computation is presented. The algorithm does not require global information concerning the system and does not assume any communication features barring finite delays {{in the delivery of}} messages. It permits dynamic creation and destruction of processes participating in the computation. It provides for destruction of a process by external processes, such as the OS kernel. It also provides for external processes spontaneously joining an ongoing computation. Proofs of safety and liveness are provided...|$|E
40|$|Abstract — This Paper {{presents}} the proposal for implementation of SMS 4 cryptographic algorithm. Its main {{purpose is to}} increase the performance, and to improve use flexibility of the State’s commercial cipher <b>symmetric</b> <b>algorithm</b> SMS 4, SOC design method for embedded soft core based on Xilinx Company’s MicroBlaze is developed to design key extension and encryption/decryption operation of SMS 4 algorithm into IP hardcore by means of hardware and connect SMS 4 hardcore to PLB or OPB by interface module. Keywords- VHDL,FPGA,MICROBLAZE 1...|$|E
2500|$|Support for and default use of AES-256 <b>symmetric</b> {{encryption}} <b>algorithm</b> for all EFS-encrypted files ...|$|R
5000|$|... <b>symmetric</b> key <b>algorithms</b> (Private-key cryptography), {{where the}} same key {{is used for}} {{encryption}} and decryption, and ...|$|R
5000|$|According to NSA [...] "A {{sufficiently}} large quantum computer, if built, {{would be}} capable of undermining all widely-deployed public key algorithms used for key establishment and digital signatures. ... It is generally accepted that quantum computing techniques are much less effective against <b>symmetric</b> <b>algorithms</b> than against current widely used public key algorithms. While public key cryptography requires changes in the fundamental design to protect against a potential future quantum computer, <b>symmetric</b> key <b>algorithms</b> are believed to be secure provided a sufficiently large key size is used. ... In the longer term, NSA looks to NIST to identify a broadly accepted, standardized suite of commercial public key algorithms that are not vulnerable to quantum attacks.|$|R
40|$|Abstract- The {{encryption}} machine {{takes the}} key Value and the input file (XML file) and generate the encrypted text using <b>Symmetric</b> <b>algorithm</b> (Caesar cipher and Vigenere cipher). The decryption Machine takes the encrypted file and key Value {{to generate the}} original XML file. It also checks whether the input (key value) is valid and block the user if invalid input is provided (key value). These algorithms are compared with respect to different granularity levels of XML files with various file sizes, time obtained for encryption and decryption...|$|E
40|$|This paper {{presents}} a novel <b>symmetric</b> <b>algorithm</b> {{in the area}} of DNA cryptography. Secure Data Transfer is an important factor for data transmission. The transmission of information can be of local or of global scope. But it is mandatory to secure information from unauthorized access. Security is very important factor encryption. This method proposes a secured symmetric key generation process which generates initial cipher and this initial cipher is then converted into final cipher using random key generated DNA sequences, so as to make it complicated...|$|E
40|$|Given a {{distributed}} system of n balls and n bins, how evenly can we distribute the balls to the bins, minimizing communication? The fastest non-adaptive and <b>symmetric</b> <b>algorithm</b> achieving a constant maximum bin load requires Θ(loglogn) rounds, and any such algorithm running for r∈O(1) rounds incurs a bin load of Ω((logn/loglogn) 1 /r). In this work, we explore the fundamental {{limits of the}} general problem. We present a simple adaptive <b>symmetric</b> <b>algorithm</b> that achieves a bin load of 2 in log∗n+O(1) communication rounds using O(n) messages in total. Our main result, however, is a matching lower bound of (1 −o(1)) log∗n on the time complexity of symmetric algorithms that guarantee small bin loads. The essential preconditions of the proof are (i) a limit of O(n) on {{the total number of}} messages sent by the algorithm and (ii) anonymity of bins, i. e., the port numberings of balls need not be globally consistent. In order to show that our technique yields indeed tight bounds, we provide for each assumption an algorithm violating it, in turn achieving a constant maximum bin load in constant time. German Research Foundation (DFG, reference number Le 3107 / 1 - 1) Society of Swiss Friends of the Weizmann Institute of ScienceSwiss National Fun...|$|E
5000|$|Symmetric data {{encryption}} key: These {{keys are}} used with <b>symmetric</b> key <b>algorithms</b> to apply confidentiality protection to information.|$|R
40|$|The {{rapid growth}} of Internet usage has {{resulted}} in an increasing demand for storing files on an online system {{as opposed to the}} traditional way of storing them on the local hard drive. Since the online system is exposed to public access, more requirements are imposed on the storage system, such as secure access to files and secure storing of files. A control for both these problems can be cryptography. Common <b>symmetric</b> <b>algorithms</b> are DES, Triple-DES and AES, and one popular asymmetric algorithm is RSA. Benchmarks show that <b>symmetric</b> <b>algorithms</b> outperform asymmetric algorithms in both encryption and decryption. AES is the fastest, using any key size, among the tested algorithms. Cryptanalysis in academic papers conclude that the only algorithm among those examined in this paper that is considered to be insecure is DES, due to usage of short keys. This thesis proposes an online storage system fully implemented in. NET 3. 5, featuring storage of files as well as additional file-type dependent functionality. PDF documents can be split, merged and previewed using this system, and it can be extende...|$|R
40|$|This diploma thesis {{deals with}} the {{cryptanalysis}} of <b>symmetric</b> encryption <b>algorithms.</b> The aim of this thesis is to show {{different point of view}} on this issues. The dissimilar way, compared to the recent methods, lies {{in the use of the}} power of evolutionary principles which are in the cryptanalytic system applied with help of genetic programming. In the theoretical part the cryptography, cryptanalysis of <b>symmetric</b> encryption <b>algorithms</b> and genetic programming are described. On the ground of the obtained information a project of cryptanalytic system which uses evolutionary principles is represented. Practical part deals with implementation of <b>symmetric</b> encrypting <b>algorithm,</b> linear cryptanalysis and simulation instrument of genetic programming. The end of the thesis represents experiments together with projected cryptanalytic system which uses genetic programming and evaluates reached results...|$|R
