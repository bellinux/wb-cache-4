1193|737|Public
5|$|The industry's {{collective}} {{response to}} the crisis was the Core Infrastructure Initiative, a multimillion-dollar project announced by the Linux Foundation on April 24, 2014 to provide funds to critical elements of the global information infrastructure. Founding backers include Amazon, Dell, Facebook, Fujitsu, Google, IBM, Intel, Microsoft, NetApp, Rackspace, VMware and The Linux Foundation. The initiative intends to allow lead developers to work full-time on their projects and to pay for security audits, hardware and <b>software</b> <b>infrastructure,</b> travel, and other expenses. OpenSSL is a candidate {{to become the first}} recipient of the initiative's funding.|$|E
25|$|Open-source <b>software</b> <b>infrastructure</b> such as libSBML and JSBML allows {{developers}} to support all Levels of SBML their software {{with a minimum}} amount of effort.|$|E
25|$|In July 2010 Spurs {{announced}} a two-year shirt sponsorship contract with <b>software</b> <b>infrastructure</b> company Autonomy. It {{was said to}} be worth £20million. A month later they unveiled a deal with leading specialist bank and asset management firm Investec as shirt sponsor for the Champions League and domestic cup competitions for the next two years. The deal was worth £5million.|$|E
5000|$|A Survey of <b>Software</b> <b>Infrastructures</b> and Frameworks for Ubiquitous Computing ...|$|R
40|$|Progress {{in systems}} biology is seriously {{hindered}} by slow production of suitable <b>software</b> <b>infrastructures.</b> Biologists need infrastructure that easily connects {{to work that}} is done in other laboratories, for which standardization is helpful. However, the infrastructure must also accommodate the specifics of their biological system, but appropriate mechanisms to support variation are currently lacking. We argue that a minimal computer language, and a software tool called a generator, {{can be used to}} quickly produce customized <b>software</b> <b>infrastructures</b> that ‘systems biologists really want to have'. ...|$|R
50|$|Neopost dedicates between 4 and 5% of {{its revenue}} to {{research}} and development every year.More than 300 people, who come from various cultures and fields of expertise, work on future generations of systems, <b>software,</b> <b>infrastructures</b> and networks linked to mail management.|$|R
25|$|Late in {{the year}} 1999 through early 2000, with funding from the Japan Science and Technology Corporation (JST), Hiroaki Kitano and John C. Doyle {{assembled}} a small team of researchers to work on developing better <b>software</b> <b>infrastructure</b> for computational modeling in systems biology. Hamid Bolouri {{was the leader of}} the development team, which consisted of Andrew Finney, Herbert Sauro, and Michael Hucka. Bolouri identified the need for a framework to enable interoperability and sharing between the different simulation software systems for biology in existence during the late 1990s, and he organized an informal workshop in December 1999 at the California Institute of Technology to discuss the matter. In attendance at that workshop were the groups responsible for the development of DBSolve, E-Cell, Gepasi, Jarnac, StochSim and The Virtual Cell. Separately, earlier in 1999, some members of these groups also had discussed the creation of a portable file format for metabolic network models in the BioThermoKinetics (BTK) group. The same groups who attended the first Caltech workshop met again on April 28–29, 2000, at the first of a newly created meeting series called Workshop on Software Platforms for Systems Biology. It became clear during the second workshop that a common model representation format was needed to enable the exchange of models between software tools as part of any functioning interoperability framework, and the workshop attendees decided the format should be encoded in XML.|$|E
2500|$|It was {{designed}} with a bias toward system programming and embedded, resource-constrained and large systems, with performance, efficiency and flexibility of use as its design highlights. C++ {{has also been}} found useful in many other contexts, with key strengths being <b>software</b> <b>infrastructure</b> and resource-constrained applications, including desktop applications, servers (e.g. e-commerce, web search or SQL servers), and performance-critical applications (e.g. telephone switches or space probes). [...] C++ is a compiled language, with implementations of it available on many platforms. [...] Many vendors provide C++ compilers, including the Free Software Foundation, Microsoft, Intel, and IBM.|$|E
2500|$|A [...] "false positive" [...] or [...] "false alarm" [...] is when {{antivirus}} software identifies a non-malicious file as malware. [...] When this happens, {{it can cause}} serious problems. For example, if an antivirus program is configured to immediately delete or quarantine infected files, as is common on Microsoft Windows antivirus applications, a false positive in an essential file can render the Windows operating system or some applications unusable. Recovering from such damage to critical <b>software</b> <b>infrastructure</b> incurs technical support costs and businesses can be forced to close whilst remedial action is undertaken. For example, in May 2007 a faulty virus signature issued by Symantec mistakenly removed essential operating system files, leaving thousands of PCs unable to boot.|$|E
40|$|Recently, {{driven by}} a huge {{increase}} in dataset size, we’ve witnessed the development of various scalable <b>software</b> <b>infrastructures</b> for massive data processing. Several data-parallel programming models have been proposed to solve domain-specific applications. For example, MapReduce is best at handling group-by-aggregation applications. 1 Hadoo...|$|R
40|$|Operations of today’s large {{corporations}} are usually supported by complex <b>software</b> <b>infrastructures</b> that involve {{hundreds or thousands}} of software systems. Companies frequently need to redesign their <b>software</b> <b>infrastructures</b> in response to changes in the marketplace. This paper describes Enterprise Navigator, a system that allows architects to visualize system interconnections of selected products and services by making database queries on the web. Moreover, analysis tools are provided for the architects to examine dominating information flows, perform clustering analysis to find substructures, and study the structural evolution of particular business processes or functions. The system has been used extensively on AT&T’s System Profile Database (SPDB). A case study is included in this paper to show how an architect can use Enterprise Navigator to perform various visualization and analysis tasks...|$|R
50|$|Currently, Nintendo Network Services handles all Nintendo Network operations, {{including}} {{programming and}} server maintenance inside Nintendo's in-house projects through its Nintendo Network Business & Development division and throughout various other external online <b>software</b> <b>infrastructures.</b> Lastly, {{the company also}} cooperates in developing third party online infrastructures compatible with Nintendo consoles and Nintendo Network.|$|R
5000|$|<b>Software</b> <b>infrastructure,</b> performance, scalability, and {{availability}} ...|$|E
5000|$|JBoss Enterprise Application Platform - the <b>software</b> <b>infrastructure</b> ...|$|E
5000|$|Software architecture: HIVE <b>software</b> <b>infrastructure</b> {{consists}} of layers incrementally providing more functionality.|$|E
50|$|From {{the human}} and social perspectives, metacomputing is {{especially}} focused on: human-computer software, cognitive interrelations/interfaces, the possibilities {{of the development of}} intelligent computer grids for the cooperation of human organizations, and on ubiquitous computing technologies. In particular, it relates to the development of <b>software</b> <b>infrastructures</b> for the computational modeling and simulation of cognitive architectures for various decision support systems.|$|R
40|$|We {{summarize}} {{trends in}} communication paradigms for networked systems, mention wellestablished {{as well as}} innovative <b>software</b> <b>infrastructures</b> for distributed systems (such as COM+, CORBA,. NET and Jini), and give an overview of application domains such as grid computing, peerto -peer computing, and mobile agents. We then discuss issues in spontaneous networking, and we explain the vision of Ubiquitous Computing and its intriguing prospects...|$|R
40|$|Abstract. This {{article is}} {{concerned}} with the development of <b>software</b> <b>infrastructures</b> for context-aware computing. To clarify the diversity of approaches in this area, we propose a synthesis {{of the state of the}} art using a reference framework derived from sound software engineering design principles. We then present our own contribution, the Contextor Infrastructure. We describe its conceptual computational model and provide implementation details. ...|$|R
5000|$|JBoss Enterprise Web Platform - the <b>software</b> <b>infrastructure,</b> {{supported}} {{to run the}} BRMS components only ...|$|E
5000|$|Better {{scalability}} {{for large}} hardware configurations (through a distributed <b>software</b> <b>infrastructure</b> and a two-stage forwarding architecture) ...|$|E
5000|$|Provide the mechanical, {{electrical}} and <b>software</b> <b>infrastructure</b> needed {{to accelerate the}} use of microAnalytical sensors within the process industries.|$|E
40|$|Application {{designers}} should explicitly design interaction {{systems that}} support application-level interactions. Designers {{can do this}} using middleware-centered and protocol-centered development approaches. In recent years, <b>software</b> <b>infrastructures</b> such as middleware platforms have dominated distributed applications development. Typical design methods based on the reuse of these infrastructures partition an application into parts and interconnect them through constructs provided directly by the infrastructure. However, because application interaction requirements vary, a gap often exists between the interactions that <b>software</b> <b>infrastructures</b> provide and those required for interconnecting application parts. This argues for explicitly designing interactions between application parts. Seminal work in systems and protocol design have acknowledged the importance of explicitly designing such interaction mechanisms in distributed systems. 1 More recent software architecture efforts 2 have identified the connector construct, which {{emphasizes the importance of}} describing and analyzing the interaction aspects of software components. In this article, we discuss the explicit design of interaction mechanisms for developing distributed applications. When interactions between system parts require an explicit design, the concept of a...|$|R
40|$|A lot of <b>software</b> <b>infrastructures</b> for {{distributed}} device ensembles {{with quite}} different approaches {{have been developed}} in the past. This article describes the need of a reference architecture for real ad-hoc cooperation of distributed device ensembles which must support self-organization of its components. Self-organization means that {{the independence of the}} ensembles' components is ensured, that the ensemble is dynamically extensible by new components and that real distributed implementation is possible...|$|R
40|$|The first {{topic is}} an {{exploration}} of the use of neural network techniques to improve the effectiveness of retrieval in software repositories. The second topic relates to a series of experiments conducted to evaluate the feasibility of using adaptive neural networks as a means of deriving (or more specifically, learning) measures on software. Taken together, these two efforts illuminate a very promising mechanism supporting <b>software</b> <b>infrastructures</b> - one based upon a flexible and responsive technology...|$|R
50|$|MILLE means Modèle d'Infrastructure Logiciel Libre en Éducation (Free <b>Software</b> <b>Infrastructure</b> Model for Education) and is {{targeted}} at educational institutions.|$|E
50|$|RiverSoft won Best <b>Software</b> <b>Infrastructure</b> Product and Best Presentation at the Gartner's Winter 2001 Enterprise Vision Conference in Phoenix, Arizona.|$|E
5000|$|JBoss Enterprise Application Platform or JBoss Enterprise SOA Platform - the <b>software</b> <b>infrastructure,</b> {{supported}} {{to run the}} BRMS components only ...|$|E
40|$|<b>Software</b> <b>infrastructures</b> and {{applications}} {{more and more}} must deal with data available {{in a variety of}} different storage engines, accessible through a multitude of protocols and interfaces; and it is common that the size of the data involved requires streaming-based processing. This article shows how XQuery can leverage the XML Data Model to abstract the data physical details and to offer optimized processing allowing the development of highly scalable and performant data integration solutions. ...|$|R
40|$|Abstract. We {{present a}} system of cueing {{informal}} interactions using the combination of Bluetooth hardware addresses to identify people and a database of user profiles. We outline the synergies between the mobile and social <b>software</b> <b>infrastructures,</b> and present a novel architecture for instigating face-to-face interaction designed to meet varying levels of privacy requirements. Finally we present {{a discussion of the}} lessons learned from a six-month user study involving over one hundred subjects. ...|$|R
40|$|In {{this article}} we report our {{experience}} on building a contextual application with two different middlewares: the Context Toolkit from Georgia Tech and the Coordination Language Facility (CLF) from XRCE. In our email notifier sample application people receive audible or visual notifications about selected incoming emails at their current locations, e. g. in a colleague's room. Although rather straightforward, this application provides {{a good starting point}} for discussing requirements on <b>software</b> <b>infrastructures</b> for contextual computing...|$|R
50|$|Virtustream is a {{provider}} of cloud computing management <b>software,</b> <b>infrastructure</b> as a service ("IaaS") and managed services to enterprises, governments and service providers.|$|E
5000|$|Ohio Supercomputer Center (OSC). OSC is a {{provider}} of training, network design, modeling and simulation capabilities, <b>software</b> <b>infrastructure,</b> and research and consulting services ...|$|E
50|$|Open-source <b>software</b> <b>infrastructure</b> such as libSBML and JSBML allows {{developers}} to support all Levels of SBML their software {{with a minimum}} amount of effort.|$|E
40|$|We {{propose a}} {{structuring}} model, called recursive restartability, aimed at controlling {{the amount of}} endto -end unavailability and improving the measurability of <b>software</b> <b>infrastructures</b> with high availability requirements. Recursive restartability exploits the benefits of restarts at various levels within complex software systems and relies on an execution infrastructure to monitor, cure, and rejuvenate software components. We show how system architects can measure and reason about the availability of their systems, as long as these are recursively restartable...|$|R
40|$|In {{this paper}} we propose a {{framework}} for interaction within multi display environments. Each component of the framework is detailed, with comparisons to existing research in ubiquitous computing <b>software</b> <b>infrastructures.</b> We identify a key component of our framework: the interaction manager, which is designed to allow users to interact within multi display environments with multiple devices exhibiting multiple modalities. This is substantiated with a mock up of a scenario in which we foresee this research being used...|$|R
40|$|The use of {{passwords}} {{is a major}} {{point of}} vulnerability in computer security, as passwords are often easy to guess by automated programs running dictionary attacks. Passwords remain {{the most widely used}} authentication method despite their well-known security weaknesses. User authentication is clearly a practical problem. From the perspective of a service provider this problem needs to be solved within real-world constraints such as the available hardware and <b>software</b> <b>infrastructures.</b> From a user's perspective user-friendliness is a key requirement. In this pape...|$|R
