8|5484|Public
50|$|This {{dictionary}} {{is useful}} to students who are studying Malay literature as they provide suitable <b>synonyms</b> <b>and</b> <b>abbreviations.</b>|$|E
40|$|In this paper, we {{describe}} {{a model of}} conceptual indexation adapted to the RDFS structured resources. The process of the structured IR (Information Research) in XML corpus, based on the balancing of a document terms improves the IR. However, silence in the resources return remains a concern. Operating a weak ontology described by RDFS can improve the percentage of relevant return of documents. The use of semantic relationship between pairs of synonymous modeled concept by graphs enables {{to take into account}} the meanings of the terms in a RDFS corpus. This model allows us to consider some types of structural information by exploiting the semantic properties, particularly the <b>synonyms</b> <b>and</b> <b>abbreviations.</b> What considerably improves the performance of the SIR (Systems of Information Research). Experiments on a collection of documents were used to evaluate our model...|$|E
40|$|Auto-completion {{is one of}} {{the most}} {{prominent}} features of modern information systems. The existing solutions of auto-completion provide the suggestions based on the beginning of the currently input character sequence (i. e. prefix). However, in many real applications, one entity often has synonyms or abbreviations. For example, "DBMS" is an abbreviation of "Database Management Systems". In this paper, we study a novel type of auto-completion by using <b>synonyms</b> <b>and</b> <b>abbreviations.</b> We propose three trie-based algorithms to solve the top-k auto-completion with synonyms; each one with different space and time complexity trade-offs. Experiments on large-scale datasets show that it is possible to support effective and efficient synonym-based retrieval of completions of a million strings with thousands of synonyms rules at about a microsecond per-completion, while taking small space overhead (i. e. 160 - 200 bytes per string). The source code of our experiments can be download at: [URL]. Comment: 15 page...|$|E
40|$|Information {{contained}} in the free text of health records is useful for the immediate care of patients {{as well as for}} medical knowledge creation. Advances in clinical language processing have made it possible to automatically extract this information, but most research has, until recently, been conducted on clinical text written in English. In this thesis, however, information extraction from Swedish clinical corpora is explored, particularly focusing on the extraction of clinical findings. Unlike most previous studies, Clinical Finding was divided into the two more granular sub-categories Finding (symptom/result of a medical examination) and Disorder (condition with an underlying pathological process). For detecting clinical findings mentioned in Swedish health record text, a machine learning model, trained on a corpus of manually annotated text, achieved results in line with the obtained inter-annotator agreement figures. The machine learning approach clearly outperformed an approach based on vocabulary mapping, showing that Swedish medical vocabularies are not extensive enough for the purpose of high-quality information extraction from clinical text. A rule and cue vocabulary-based approach was, however, successful for negation and uncertainty classification of detected clinical findings. Methods for facilitating expansion of medical vocabulary resources are particularly important for Swedish and other languages with less extensive vocabulary resources. The possibility of using distributional semantics, in the form of Random indexing, for semi-automatic vocabulary expansion of medical vocabularies was, therefore, evaluated. Distributional semantics does not require that terms or abbreviations are explicitly defined in the text, and it is, thereby, a method suitable for clinical corpora. Random indexing was shown useful for extending vocabularies with medical terms, as well as for extracting medical <b>synonyms</b> <b>and</b> <b>abbreviation</b> dictionaries...|$|R
5000|$|... 3. <b>Synonyms</b> <b>and</b> multi-language capabilitiesGellish makes a {{distinction}} between concepts and the various terms that are used as names (<b>synonyms,</b> <b>abbreviations</b> <b>and</b> translations) to refer to those concepts in different contexts and languages. Every concept is identified by a unique identifier that is natural-language-independent and can have many different terms in different languages to denote the concept. This enables automatic translation between different natural language versions of Gellish. In OWL the various terms in different languages <b>and</b> the <b>synonyms</b> are in principle different concepts {{that need to be}} declared to be the same by explicit equivalence relations. On one hand the OWL approach is simpler, but it makes expressions ambiguous and makes data integration and automated translation significantly more complicated.|$|R
40|$|Robert ” and “Bob ” {{refer to}} the same first name but are {{textually}} far apart. Traditional string similarity functions do not allow a flexible way to account for such <b>synonyms,</b> <b>abbreviations</b> <b>and</b> aliases. Recently, string transformations have been proposed as a mechanism to make matching robust to such variations. However, in many domains, identifying an appropriate set of transformations is challenging as the space of possible transformations is large. In this paper, we investigate the problem of leveraging examples of matching strings to learn string transformations. We formulate an optimization problem where we are required to learn a concise set of transformations that explain most of the differences. We propose a greedy approximation algorithm for this NP-hard problem. Our experiments over real-life data illustrate the benefits of our approach. 1...|$|R
40|$|One common {{framework}} for data integration in practice is federated search. Here an agent queries disjoint sources simultaneously, and then clusters the returned {{records in the}} absence of unique keys. However, formulating the correct queries to the sources can be challenging because of the possible query value variations. For instance, some sources may contain a first name as “John ” while other sources use the name “Jonathan ” for the same person. If the underlying sources do not support sophisticated matching then a single query of “John ” will miss many records from the “Jonathan” sources. This paper presents an approach to formulating queries for federated search that leverages automatically discovered transformations such as <b>synonyms</b> <b>and</b> <b>abbreviations</b> to create the set of possible queries for the given sources. Our preliminary results demonstrate that indeed, transformations mined from a subset of sources will apply to a new, distinct source, thereby allowing query expansions based on the discovered transformations. Figure 1 : sources An example of federated search across thre...|$|E
40|$|In {{the context}} of Internet of Things, being able to search for {{connected}} devices on the internet based on their semantic allows discovering required devices based on specific application requirements. However the current semantic discovery approaches still depend on specific set of vocabularies used by device developers to describe devices. This paper presents a cycle of design, implementation and evaluation {{of a system that}} can be used to discover connected devices described by different terminologies. The device descriptions are homogenized using a best effort approach based on searching <b>synonyms</b> <b>and</b> <b>abbreviations</b> in online dictionaries, as well as using existing controlled vocabularies with terms and synonyms that can be used interchangeably within specific application domain. This information is stored in a local ontology that is extended dynamically with metadata and terminology when new devices are connected. Subjective evaluations with users showed their satisfaction regarding the usability of the system. Tested users also considered that the structure of the ontology is simple to understand and able to cover the description of several different devices...|$|E
40|$|Objective Intra-abdominal {{hypertension}} (IAH) and abdominal {{compartment syndrome}} (ACS) are complications {{that may occur}} in severely burned patients. Evidenced based medicine for these patients is in its early development. The {{aim of this study}} was to provide an overview of literature regarding IAH and ACS in severely burned patients. Methods A systematic search was performed in Cochrane Central Register of Controlled Trials, PubMed, Embase, Web of Science and CINAHL on October 1, 2012. These databases were searched on 'burn', 'intra-abdominal hypertension', 'abdominal compartment syndrome', <b>synonyms</b> <b>and</b> <b>abbreviations.</b> Studies reporting original data on mortality, abdominal decompression or abdominal pressure related complications were included. Results Fifty publications met the criteria, reporting 1616 patients. The prevalence of ACS and IAH in severely burned patients is 4. 1 - 16. 6 % and 64. 7 - 74. 5 %, respectively. The mean mortality rate for ACS in burn patients is 74. 8 %. The use of plasma and hypertonic lactated resuscitation may prevent IAH or ACS. Despite colloids decrease resuscitation volume needs, no benefit in preventing IAH was proven. Escharotomy, peritoneal catheter drainage, and decompression laparotomy are effective intra-abdominal pressure (IAP) diminishing treatments in burn patients. Markers for IAP-related organ damage might be superior to IAP measurement itself. Conclusion ACS and IAH are frequently seen devastating complications in already severely injured burn patients. Prevention is challenging but can be achieved by improving fluid resuscitation strategies. Surgical decompression measures are effective and often unavoidable. Timing is essential since decompression should prevent progression to ACS rather than limit its effects. Prognosis of ACS remains poor, but options for care improvement are available in literature...|$|E
40|$|Querying complex graph {{databases}} such {{as knowledge}} graphs is a challenging task for non-professional users. Due to their complex schemas and variational information descriptions, {{it becomes very}} hard for users to formulate a query that can be properly processed by the existing systems. We argue that for a user-friendly graph query engine, it must support various kinds of transformations such as <b>synonym,</b> <b>abbreviation,</b> <b>and</b> ontology. Furthermore, the derived query results must be ranked in a principled manner. In this paper, we introduce a novel framework enabling schemaless and structureless graph querying (SLQ), where a user need not describe queries precisely as required by most databases. The query engine is built {{on a set of}} transformation functions that automatically map keywords and linkages from a query to their matches in a graph. It automatically learns an effective ranking model, without assuming manually labeled training examples, and can efficiently return top ranked matches using graph sketch and belief propagation. The architecture of SLQ is elastic for “plug-in” new transformation functions and query logs. Our experimental results show that this new graph querying paradig...|$|R
40|$|The German {{language}} {{and in particular}} biomedical terms exhibit a rich and productive morphology. Beyond inflection and comparison forms frequently spelling variants, German - Greek/Latin <b>synonyms</b> <b>and</b> nominal compounds exist. For the English language, the SPECIALIST LEXICON, part of the UMLS project, covers {{a broad range of}} biomedical terms. In this paper we describe the database model and the functionality of the GERMAN SPECIALIST LEXICON, an ongoing project to develop a lexical resource for German-language medical terminology. Similar to the SPECIALIST LEXICON it is accompanied by tools for the recognition and generation of lexical variants, as well as by databases linking synonymous words, spelling variants, phrases <b>and</b> <b>abbreviations...</b>|$|R
40|$|To {{ensure a}} more reader-friendly document, the U. S. Department of Energy (DOE) limited {{the use of}} {{acronyms}} <b>and</b> <b>abbreviations</b> in this Supplement. Acronyms <b>and</b> <b>abbreviations</b> are defined {{the first time they}} are used in each chapter. Acronyms <b>and</b> <b>abbreviations</b> used in tables and figures because of space limitations are listed in footnotes to the tables and figures. CF...|$|R
40|$|Code {{search is}} an {{integral}} part of software development and program comprehension. The difficulty of code search lies in the inability to guess the exact words used in the code. Therefore, it is crucial for keyword-based code search to expand queries with semantically related words, e. g., <b>synonyms</b> <b>and</b> <b>abbreviations,</b> to increase the search effectiveness. However, it is limited to rely on resources such as English dictionaries and WordNet to obtain semantically related words in software, because many words that are semantically related in software are not semantically related in English. On the other hand, many words that are semantically related in English are not semantically related in software. This thesis proposes a simple and general technique to automatically infer semantically re- lated words (referred to as rPairs) in software by leveraging the context of words in comments and code. In addition, we propose a ranking algorithm on the rPair results and study cross-project rPairs on two sets of software with similar functionality, i. e., media browsers and operating sys- tems. We achieve a reasonable accuracy in nine large and popular code bases written in C and Java. Our further evaluation against the state of art shows that our technique can achieve a higher precision and recall. In addition, the proposed ranking algorithm improves the rPair extraction accuracy by bringing correct rPairs to the top of the list. Our cross-project study successfully discovers overlapping rPairs among projects of similar functionality and finds that cross-project rPairs are more likely to be correct than project-specific rPairs. Since the cross-project rPairs are highly likely to be general for software of the same type, the discovered overlapping rPairs can benefit other projects of the same type that have not been anaylyzed. 1 yea...|$|E
40|$|Background: Terminologies {{that account}} for {{variation}} in language use by linking <b>synonyms</b> <b>and</b> <b>abbreviations</b> to their corresponding concept are important enablers of high-quality information extraction from medical texts. Due {{to the use of}} specialized sub-languages in the medical domain, manual construction of semantic resources that accurately reflect language use is both costly and challenging, often resulting in low coverage. Although models of distributional semantics applied to large corpora provide a potential means of supporting development of such resources, their ability to isolate synonymy from other semantic relations is limited. Their application in the clinical domain has also only recently begun to be explored. Combining distributional models and applying them to different types of corpora may lead to enhanced performance on the tasks of automatically extracting synonyms and abbreviation-expansion pairs. Results: A combination of two distributional models – Random Indexing and Random Permutation – employed in conjunction with a single corpus outperforms using either of the models in isolation. Furthermore, combining semantic spaces induced from different types of corpora – a corpus of clinical text and a corpus of medical journal articles – further improves results, outperforming a combination of semantic spaces induced from a single source, as well as a single semantic space induced from the conjoint corpus. A combination strategy that simply sums the cosine similarity scores of candidate terms is generally the most profitable out of the ones explored. Finally, applying simple post-processing filtering rules yields substantial performance gains on the tasks of extracting abbreviation-expansion pairs, but not synonyms. The best results, measured as recall in a list of ten candidate terms, for the three tasks are: 0. 39 for abbreviations to long forms, 0. 33 for long forms to abbreviations, and 0. 47 for synonyms. Conclusions: This study demonstrates that ensembles of semantic spaces can yield improved performance on the tasks of automatically extracting synonyms and abbreviation-expansion pairs. This notion, which merits further exploration, allows different distributional models – with different model parameters – and different types of corpora to be combined, potentially allowing enhanced performance to be obtained {{on a wide range of}} natural language processing tasks...|$|E
40|$|Symbols <b>and</b> <b>abbreviations</b> {{are commonplace}} in {{mathematics}} text. In this article {{the use of}} mathematical symbols <b>and</b> <b>abbreviations</b> is discussed with reference to examples from recent NAPLAN tests. The article draws the reader’s attention to the large variety of symbols <b>and</b> <b>abbreviations</b> used, with particular focus on primary years. Thereafter, the difficulties which learners may experience because of this unique and complex part of the mathematics register are discussed. Knowledge of the complexities which symbols <b>and</b> <b>abbreviations</b> introduce into mathematics can enable a teacher to pre-empt misunderstandings and aid learners {{in this area of}} mathematics...|$|R
5000|$|Acronyms {{and other}} abbreviations: Provides {{guidelines}} on consistent use of acronyms <b>and</b> <b>abbreviations,</b> including how <b>and</b> when {{to use them}} to avoid confusion. It also contains a list of acronyms <b>and</b> <b>abbreviations.</b>|$|R
40|$|The use {{of symbols}} <b>and</b> <b>abbreviations</b> adds {{uniqueness}} <b>and</b> complexity to the mathematical language register. In this article, the reader’s attention {{is drawn to}} the multitude of symbols <b>and</b> <b>abbreviations</b> which are used in mathematics. The conventions which underpin {{the use of the}} symbols <b>and</b> <b>abbreviations</b> <b>and</b> the linguistic difficulties which learners of mathematics may encounter due to the inclusion of the symbolic language are discussed. 2010 NAPLAN numeracy tests are used to illustrate examples of the complexities of the symbolic language of mathematics...|$|R
5000|$|... #Caption: Symbols <b>and</b> <b>abbreviations</b> {{for light}} {{characteristics}} ...|$|R
5000|$|Initialisations (acronyms <b>and</b> <b>abbreviations</b> {{composed}} of initials) ...|$|R
5000|$|<b>Synonyms</b> <b>and</b> {{homonyms}} - Whether {{the language}} includes and supports {{the use of}} <b>synonyms</b> <b>and</b> homonyms in the expressions.|$|R
5000|$|They are monographies about {{language}} conventional aspects (capital letters <b>and</b> <b>abbreviations)</b> <b>and</b> questions of style (writing and translating criteria and non-sexist language).|$|R
5000|$|Sculling Boat <b>Abbreviations</b> <b>and</b> Names:Rowing Boat <b>Abbreviations</b> <b>and</b> Names: ...|$|R
5000|$|Only {{generally}} accepted medical terminology <b>and</b> <b>abbreviations</b> are allowed ...|$|R
5000|$|... #Subtitle level 2: Nomenclature <b>and</b> <b>abbreviations</b> in {{electrical}} distribution ...|$|R
5000|$|... #Subtitle level 2: Symbol <b>and</b> <b>abbreviations</b> for {{kilowatt}} hour ...|$|R
5000|$|... #Subtitle level 3: Initialisations (acronyms <b>and</b> <b>abbreviations</b> {{composed}} of initials) ...|$|R
5000|$|... #Subtitle level 4: Base values <b>and</b> <b>abbreviations</b> {{of common}} {{elements}} ...|$|R
5000|$|The {{following}} table summarizes symbols <b>and</b> <b>abbreviations</b> used in cytogenetics: ...|$|R
5000|$|Abbreviation {{recognition}} - {{identify the}} long-form <b>and</b> <b>abbreviation</b> of biological terms ...|$|R
5000|$|Terminology, {{definitions}} <b>and</b> <b>abbreviations</b> {{to clarify}} the meanings of the specification ...|$|R
5000|$|... a {{guide to}} the symbols <b>and</b> <b>abbreviations</b> on {{maritime}} charts (1D) ...|$|R
5000|$|This {{is a list}} of the {{acronyms}} <b>and</b> <b>abbreviations</b> used in avionics ...|$|R
5|$|Conversions of {{distance}} <b>and</b> <b>abbreviations</b> {{for the owners}} are given after the table.|$|R
2500|$|The modern planets {{with their}} symbols <b>and</b> <b>abbreviations</b> {{recommended}} by the IAU are: ...|$|R
50|$|Conversions of {{distance}} <b>and</b> <b>abbreviations</b> {{for the owners}} are given after the table.|$|R
40|$|List of Tables [...] . x List of Appendices [...] . x Acronyms <b>and</b> <b>Abbreviations</b> [...] . x...|$|R
