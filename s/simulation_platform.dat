2189|647|Public
2500|$|An {{open-source}} <b>simulation</b> <b>platform</b> {{for creating}} dynamic mechanical models built from combinations of rigid and deformable bodies, joints, constraints, and various force actuators. [...] It is specialized for creating biomechanical models of human anatomical structures, {{with the intention}} to study their function and eventually assist {{in the design and}} planning of medical treatment.|$|E
5000|$|... #Subtitle level 2: <b>Simulation</b> <b>platform</b> and {{graphical}} {{user interface}} ...|$|E
5000|$|GT-SUITE - Multi-Physics <b>Simulation</b> <b>Platform</b> for Powertrain and Vehicle Systems ...|$|E
30|$|By {{considering}} these suggested provenance services, {{we expect}} that <b>simulation</b> <b>platforms</b> can further improve the performance and elevate user convenience.|$|R
40|$|Abstract. According to the {{functional}} requirements of mechanical auto parts road <b>simulation</b> vibration test <b>platform,</b> mechanical auto parts road <b>simulation</b> vibration test <b>platform</b> structure is studied and designed, and a vibration <b>simulation</b> test <b>platform</b> entity is developed which can simulate auto parts vibration test {{on the actual}} road. The vibration <b>simulation</b> test <b>platform</b> design features is verified by experiments...|$|R
40|$|Model reuse is a {{key issue}} to be {{resolved}} in parallel and distributed simulation at present. However, component models built by different domain experts usually have diversiform interfaces, couple tightly, and bind with <b>simulation</b> <b>platforms</b> closely. As a result, they are difficult to be reused across different <b>simulation</b> <b>platforms</b> and applications. To address the problem, this paper first proposed a reusable component model framework. Based on this framework, then our reusable model development approach is elaborated, which contains two phases: (1) domain experts create simulation computational modules observing three principles to achieve their independence; (2) model developer encapsulates these simulation computational modules with six standard service interfaces to improve their reusability. The case study of a radar model indicates that the model developed using our approach has good reusability and {{it is easy to}} be used in different <b>simulation</b> <b>platforms</b> and applications...|$|R
5000|$|... 2012: VEOS®, PC-based <b>simulation</b> <b>platform</b> {{for early}} {{validation}} of ECU software ...|$|E
50|$|PlatBox Simulator is a multi-agent based <b>simulation</b> <b>platform</b> {{developed}} by PlatBox Project.|$|E
5000|$|Flight Simulator X - Latest FS release, {{which was}} TS2's <b>simulation</b> <b>platform</b> base.|$|E
30|$|Numerous cyber-physical <b>simulation</b> <b>platforms</b> are {{proposed}} in current literature, with different focus {{and levels of}} complexity [11, 16]. The diversity of <b>simulation</b> <b>platforms</b> {{is due to the}} specific focus of studies, which affect the establishment of the platforms. Furthermore, while real-time power system simulators can be purchased and installed from manufacturers, current cyber-physical simulators are usually a combination of different software and hardware components. These components are connected to enable specific studies in different areas of power system research, e.g. transmission, distribution, microgrids, etc.|$|R
30|$|As done {{in these}} works, <b>simulation</b> <b>platforms</b> can improve their {{performance}} by reusing existing simulation results or allocate in advance necessary computing resources through provenance data analysis.|$|R
50|$|Ixia's {{test and}} <b>simulation</b> <b>platforms</b> {{are used by}} network {{equipment}} manufacturers, service providers, enterprises, and government agencies to design and validate {{a wide range of}} wired, Wi-Fi and 3G/4G networking equipment and networks.|$|R
5000|$|SimScale - web-based <b>simulation</b> <b>platform</b> {{supporting}} computational fluid dynamics, solid mechanics, and thermodynamics ...|$|E
5000|$|GAMA GAMA is an agent-based, {{spatially}} explicit, {{modeling and}} <b>simulation</b> <b>platform.</b> (Open Source Software) ...|$|E
50|$|The <b>simulation</b> <b>platform,</b> SimSpark {{is capable}} of {{extension}} via custom perceptors, {{but this is not}} allowed in competitions.|$|E
40|$|Copyright © 2014 Feng Zhu et al. This is an {{open access}} article {{distributed}} under theCreative CommonsAttribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. Model reuse is a key issue to be resolved in parallel and distributed simulation at present. However, component models built by different domain experts usually have diversiform interfaces, couple tightly, and bind with <b>simulation</b> <b>platforms</b> closely. As a result, they are difficult to be reused across different <b>simulation</b> <b>platforms</b> and applications. To address the problem, this paper first proposed a reusable component model framework. Based on this framework, then our reusable model development approach is elaborated, which contains two phases: (1) domain experts create simulation computational modules observing three principles to achieve their independence; (2) model developer encapsulates these simulation computational modules with six standard service interfaces to improve their reusability. The case study of a radar model indicates that the model developed using our approach has good reusability and {{it is easy to}} be used in different <b>simulation</b> <b>platforms</b> and applications. 1...|$|R
30|$|Like these works, <b>simulation</b> <b>platforms</b> can {{increase}} users’ convenience by considering (i) predicting the execution time of long-running simulations and (ii) coping proactively with simulations that require huge computing resources through the useful utilization of provenance data.|$|R
40|$|In {{order to}} train and test the {{functionality}} of the CBTC signal system, this paper designs <b>simulation</b> <b>platform’s</b> architecture and function module based on the CBTC principle firstly. Then, it detailed-ly discusses the main content and key algorithms about train module and trackside module. Fi-nally, it builds CBTC <b>simulation</b> test <b>platform,</b> used for training of rail transit signal related specia-lized student and detecting the main function of actual CBTC system based on Shanghai Metro Lin...|$|R
5000|$|The SHIWA project {{developed}} and deployed the SHIWA <b>Simulation</b> <b>Platform</b> (SSP) to enable infrastructure and workflow interoperability at two levels: ...|$|E
5000|$|Boxed Economy <b>Simulation</b> <b>Platform</b> for Agent-Based Economic and Social Modeling. T. Iba, Y. Takefuji, Computational Analysis of Social and Organizational Systems 2002, Pittsburgh, USA, June 2002.|$|E
5000|$|In 2001 ALDEC added {{hardware}} to its product line: HES (Hardware Embedded <b>Simulation)</b> <b>Platform</b> that allows hardware acceleration of HDL simulation and incremental prototyping of hardware.|$|E
30|$|For better user service, <b>simulation</b> <b>platforms</b> can utilize {{data mining}} {{techniques}} {{used in this}} rich body of the existing literature, {{in order to find}} event patterns that frequently occur in simulations, detect abnormal simulations, or understand general characteristics of simulations.|$|R
40|$|Abstract-Virtual {{evaluation}} of complex {{command and control}} concepts demands the use of heterogeneous simulation environments. Development challenges include how to integrate multiple <b>simulation</b> <b>platforms</b> with varying semantics and how to integrate simulation models and the complex interactions between them. While existing simulation frameworks may provide many of the required services needed to coordinate among multiple <b>simulation</b> <b>platforms,</b> they lack an overarching integration approach that connects and relates the semantics of heterogeneous domain models and their interactions. This paper outlines some of the challenges encountered in developing a command and control simulation environment and discusses our use of the GME meta-modeling tool-suite to create a model-based integration approach that allows for rapid synthesis of complex HLA-based simulation environments. I...|$|R
50|$|Dymola {{supports}} import {{and export}} {{according to the}} Functional Mockup Interface (FMI). With appropriate options the exportedcode can be generated for export without any run-time license, or as source code. The exported Functional Mockup Unitscan then be used on several <b>simulation</b> <b>platforms.</b>|$|R
50|$|An Active Queue Management and Denial-of-Service (AQM&DoS) <b>Simulation</b> <b>Platform</b> is {{established}} {{based on the}} NS-2 simulation code of the RRED algorithm. The AQM&DoS <b>Simulation</b> <b>Platform</b> can simulate a variety of DoS attacks (Distributed DoS, Spoofing DoS, Low-rate DoS, etc.) and Active Queue Management (AQM) algorithms (RED, RRED, SFB, etc.). It automatically calculates and records the average throughput of normal TCP flows before and after DoS attacks to facilitate {{the analysis of the}} impact of DoS attacks on normal TCP flows and AQM algorithms. More details.|$|E
50|$|The {{simulation}} {{code of the}} RRED {{algorithm is}} published as an active queue management and denial-of-service attack (AQM&DoS) <b>simulation</b> <b>platform.</b> The AQM&DoS <b>Simulation</b> <b>Platform</b> is able to simulate a variety of DoS attacks (Distributed DoS, Spoofing DoS, Low-rate DoS, etc.) and active queue management (AQM) algorithms (RED, RRED, SFB, etc.). It automatically calculates and records the average throughput of normal TCP flows before and after DoS attacks to facilitate {{the analysis of the}} impact of DoS attacks on normal TCP flows and AQM algorithms.|$|E
5000|$|For example, a HIL <b>simulation</b> <b>platform</b> for the {{development}} of automotive anti-lock braking systems may have mathematical representations for each of the following subsystems in the plant simulation: ...|$|E
40|$|Abstract. In {{the pursuit}} of pushing active {{character}} control into games, we have deployed a generalized physics-based locomotion control scheme to multiple <b>simulation</b> <b>platforms,</b> including ODE, PhysX, Bullet, and Vortex. We first overview the main characteristics of these physics engines. Then we illustrate the major steps of integrating active character controllers with physics SDKs, together with necessary implementation details. We also evaluate and compare {{the performance of the}} locomotion control on different <b>simulation</b> <b>platforms.</b> Note that our work only represents an initial attempt at doing such evaluation, and additional refine-ment of the methodology and results can still be expected. We release our code online to encourage more follow-up works, as well as more interactions between the research community and the game development community...|$|R
40|$|A {{methodology}} for evaluating and comparing control strategies for {{wastewater treatment plants}} was developed. The basic setup of the benchmark is described and the dynamic input data for performing the simulations are outlined. Initial results using different <b>simulation</b> <b>platforms</b> (Fortran code, Matlab/Simulink and GPS-X) are presented...|$|R
30|$|Using VisualSim, a {{model of}} the system can be {{constructed}} in few days. All of the system design aspects can be addressed using validated parametric library components. All of the building blocks, <b>simulation</b> <b>platforms,</b> analysis, and debugging required to construct a system are provided in a single framework.|$|R
50|$|The London Transport Museum used BVE Trainsim 4 {{to provide}} a <b>simulation</b> <b>platform,</b> within a mock {{underground}} rolling stock of the London Underground 1996 Stock, before later porting to openBVE in 2010.|$|E
50|$|The Simcyp {{population-based}} ADME simulator is a modelling and <b>simulation</b> <b>platform</b> used by {{the pharmaceutical}} industry in drug discovery and development. The Simulator models drug absorption, distribution, metabolism and elimination using routinely generated in vitro data.|$|E
5000|$|Boxed Economy <b>Simulation</b> <b>Platform</b> and Foundation Model. T. Iba, Y. Takabe, Y. Chubachi, Y. Takefuji, Workshop of Emergent Complexity of Artificial Markets, 4th International Conference on Computational Intelligence and Multimedia Applications, pp. 34-38, Kanagawa, October 2001.|$|E
40|$|On the {{completion}} of project, we propose novel recovery mechanisms which recovers limited-resource wireless sensor networks quickly from an malicious attack. The research outcomes include re-clustering algorithms, reprogramming techniques and authentications protocols developed and tested on both hardware and <b>simulation</b> <b>platforms.</b> The work is also well compared with other researchers...|$|R
40|$|Unable to find {{published}} {{material on}} how to model processes with multiple interacting flows on <b>simulation</b> <b>platforms</b> that use flow-chart like modeling paradigms, we applied Object Oriented Analysis concepts to such a platform. To do so, we identified all of the objects in the model. We then used the platform’s queue objects to represent each state of each object, so as to systematize the modeling and {{make it possible to}} observe at each moment the number of each type of object in each state. We also modeled inter-object messaging and simulation events via calls to logic procedures, and modeled responses to the messaging and events via the logic in those procedures. The result is a model that was more readily understood, verified and validated, and a modeling approach that can facilitate development of pseudo-object based simulation models on non-object based <b>simulation</b> <b>platforms.</b> ...|$|R
30|$|Although {{a variety}} of cloud <b>simulation</b> <b>platforms</b> exist (e.g., [13 – 16]), CReST has a unique feature set (see [5] for a {{detailed}} comparison) that enables simulation at multiple abstraction levels: from physical hardware, energy usage and thermal flows within a DC; to networked infrastructure and the virtualisation layer of application services supporting dynamic user demand.|$|R
