132|316|Public
25|$|The Current Program <b>Status</b> <b>Register</b> (CPSR) has the {{following}} 32bits.|$|E
25|$|The CPU recognizes seven {{interrupt}} levels. Levels 1 through 5 {{are strictly}} prioritized. That is, a higher-numbered interrupt can always interrupt a lower-numbered interrupt. In the <b>status</b> <b>register,</b> a privileged instruction {{allows one to}} set the current minimum interrupt level, blocking lower or equal priority interrupts. For example, if the interrupt level in the <b>status</b> <b>register</b> is set to 3, higher levels from 4 to 7 can cause an exception. Level 7 is a level triggered Non-maskable interrupt (NMI). Level 1 can be interrupted by any higher level. Level 0 means no interrupt. The level is stored in the <b>status</b> <b>register,</b> and is visible to user-level programs.|$|E
25|$|Plus: {{access to}} the <b>status</b> <b>register,</b> and, in later models, other special registers.|$|E
50|$|Control and <b>status</b> <b>registers</b> exist, but user-mode {{programs}} can access only those used for performance-measurement.|$|R
25|$|There were {{a number}} of 8-bit control <b>registers</b> and 32-bit <b>status</b> <b>registers</b> to control various device timing parameters.|$|R
5000|$|<b>Status</b> <b>registers</b> hold truth values {{often used}} to {{determine}} whether some instruction {{should or should not}} be executed.|$|R
25|$|System mode (ARMv4 and above): The only {{privileged mode}} {{that is not}} entered by an exception. It can only be entered by {{executing}} an instruction that explicitly writes to the mode bits of the Current Program <b>Status</b> <b>Register</b> (CPSR).|$|E
25|$|The CPU, {{and later}} the whole family, {{implements}} two levels of privilege. User mode gives access to everything except privileged instructions such as interrupt level controls. Supervisor privilege gives access to everything. An interrupt always becomes supervisory. The supervisor bit is stored in the <b>status</b> <b>register,</b> and is visible to user programs.|$|E
25|$|Comparison {{is often}} {{implemented}} with a dummy subtraction, where the flags in the computer's <b>status</b> <b>register</b> are checked, {{but the main}} result is ignored. The zero flag indicates if two values compared equal. If the exclusive-or of the sign and overflow flags is 1, the subtraction result was less than zero, otherwise the result was zero or greater. These checks are often implemented in computers in conditional branch instructions.|$|E
3000|$|The pixel {{locations}} {{are also used}} to determine address locations within the 3 -bit pixel <b>status</b> <b>registers.</b> When read, the values are [...]...|$|R
5000|$|December 22, 1992: {{the school}} {{obtained}} college <b>status</b> <b>registered</b> with the Securities and Exchange Commission and began offering Bachelor of Science in Computer Engineering.|$|R
5000|$|Special {{register}}s: counter register (CTR), link register (LR), {{time base}} (TBU, TBL), alternate time base (ATBU, ATBL), accumulator (ACC), <b>status</b> <b>registers</b> (XER, FPSCR, VSCR, SPEFSCR).|$|R
25|$|The {{instruction}} {{set for the}} floating point coprocessor also had several instructions added to it. An IEEE 754-compliant floating-point square root instruction was added. It supported both single- and double-precision operands. A set of instructions that converted single- and double-precision floating-point numbers to 32-bit words were added. These complemented the existing conversion instructions by allowing the IEEE rounding mode to be specified by the instruction instead of the Floating Point Control and <b>Status</b> <b>Register.</b>|$|E
25|$|The Alpha {{does not}} have {{condition}} codes for integer instructions to remove a potential bottleneck at the condition <b>status</b> <b>register.</b> Instructions resulting in an overflow, such as adding two numbers whose result does not fit in 64 bits, write the 32 or 64 least significant bits to the destination register. The carry is generated by performing an unsigned compare on the result with either operand {{to see if the}} result is smaller than either operand. If the test was true, the value one is written to the least significant bit of the destination register to indicate the condition.|$|E
25|$|MIPS IV added several {{features}} to improve instruction-level parallelism. To alleviate the bottleneck {{caused by a}} single condition bit, seven condition code bits {{were added to the}} floating-point control and <b>status</b> <b>register,</b> bringing the total to eight. FP comparison and branch instructions were redefined so they could specify which condition bit was written or read (respectively); and the delay slot in between an FP branch that read the condition bit written to by a prior FP comparison was removed. Support for partial predication was added in the form of conditional move instructions for both GPRs and FPRs; and an implementation could choose between having precise or imprecise exceptions for IEEE 754 traps.|$|E
50|$|Anything that is {{read and}} written can be renamed. While the {{general-purpose}} and floating-point registers are discussed the most, flag and <b>status</b> <b>registers</b> or even individual status bits are commonly renamed as well.|$|R
5000|$|A PHY {{management}} interface, MDIO, used to {{read and}} write the control and <b>status</b> <b>registers</b> of the PHY in order to configure each PHY before operation, and to monitor link status during operation.|$|R
50|$|This link entitles {{members as}} joint owners to all {{designated}} lands and traditional <b>status</b> <b>registered</b> specifically for individual clans under `I Taukei Lands Trust Board' and `Native Lands Commission' or `Valenivolavola Ni Kawa Bula'.|$|R
2500|$|When the [...] key is pressed, a [...] "message" [...] (signal) {{from the}} flag or <b>status</b> <b>register</b> tells the {{permanent}} or non-volatile memory that the operation {{to be done}} is [...] "addition"; ...|$|E
2500|$|Branch: Bcc (where the [...] "cc" [...] {{specified}} one of 16 {{tests of}} the condition codes in the status register: equal, greater than, less-than, carry, and most combinations and logical inversions, available from the <b>status</b> <b>register).</b>|$|E
2500|$|The 68000 comparison, arithmetic, {{and logic}} {{operations}} set bit flags in a <b>status</b> <b>register</b> {{to record their}} results for use by later conditional jumps. The bit flags are [...] "zero" [...] (Z), [...] "carry" [...] (C), [...] "overflow" [...] (V), [...] "extend" [...] (X), and [...] "negative" [...] (N). The [...] "extend" [...] (X) flag deserves special mention, because it is separate from the carry flag. This permits the extra bit from arithmetic, logic, and shift operations {{to be separated from}} the carry for flow-of-control and linkage.|$|E
50|$|The SystemRDL language, {{supported}} by the SPIRIT Consortium, was specifically designed to describe and implement {{a wide variety of}} control <b>status</b> <b>registers.</b> Using SystemRDL, developers can automatically generate and synchronize register views for specification, hardware design, software development, verification, and documentation.|$|R
50|$|The State Archives {{recently}} started a vast long-term project: the digitization of its archives.For this purpose, all State Archives repositories were equipped with digital reading rooms.Since August 2009, the digitized church <b>registers</b> and civil <b>status</b> <b>registers</b> {{from the whole}} country have been progressively put {{at the disposal of}} the public via the 19 reading rooms of the State Archives.As of January 2013, some 24,000 church registers and a steadily increasing number of civil <b>status</b> <b>registers</b> are also available free of charge on the website of the State Archives.Other types of documents can also be consulted on the website of the State Archives: proceedings of the Council of Ministers (1918-1979), the statistical yearbook of Belgium (and of Belgian Congo) from 1870, over 20,000 seal moulds, etc.|$|R
50|$|The patent {{describes}} a method where a data transfer counter triggers a threshold logic that generates an early indication or interrupt signal before the transfer is completed. The adapter also writes timing information into <b>status</b> <b>registers</b> such that a device driver can optimize for any latency.|$|R
5000|$|... status {{reporting}} such {{as whether}} a certain event {{has occurred in the}} hardware unit, for example a modem <b>status</b> <b>register</b> or a line <b>status</b> <b>register.</b>|$|E
50|$|The <b>status</b> <b>register</b> {{contains}} 4 arithmetic status bits, {{a global}} interrupt enable, and 4 bits that disable various clocks to enter low-power mode. When handling an interrupt, the processor saves the <b>status</b> <b>register</b> on the stack and clears the low-power bits. If the interrupt handler does not modify the saved <b>status</b> <b>register,</b> {{returning from the}} interrupt will then resume the original low-power mode.|$|E
50|$|The <b>status</b> <b>register</b> {{is pushed}} onto the stack.|$|E
40|$|In this papel: we {{consider}} a hardware scheme for sup-porting barrier synchronization on scalable systems with a. ?D mesh network. Our design {{takes into account}} ofthepro-gram execution path in such systems __from programming interfaces down to routers. The hardware router design will De based on the MPI- 1 standard. A distributed algorithm IS proposed to construct a collective synchronization tree (CS tree) from the nodes participating in the barrier: Based upon the CS tree, the <b>status</b> <b>registers</b> in the routers are set up and synchronization messages are transmitted along the paths set by the <b>status</b> <b>registers.</b> Performance evaluations show that our proposed method has better performance for barrier synchronization and is less sensitive to variations in group size and startup delay than previous approaches. Ayoweve< our scheme has the extra overhead of building th...|$|R
40|$|The {{thesis is}} that there is no {{difference}} in poli-tical preference of city or suburban residents without a concomitant difference in social status. The Presidential electoral returns for 1972 and 1976 were correlated with socioeconomic information from the 1970 census of population for Des Moines, Polk County, Iowa. The statistical analysis was done by computer. The findings support the thesis [...] In addition, the findings indicate that lower socioeconomic <b>status</b> <b>registered</b> voters reside in the east side of Des Moines and the con-tiguous suburban townships and tend to vote Democrat; that the higher socioeconomic <b>status</b> <b>registered</b> voters reside in the west side of Des Moines and the contiguous suburban townships, and tend to vote Republican; that lower and higher socioeconomic status voters tend to participate proportionately in the actual voting process, once they are registered; and that SUburban residents tend to be in a higher socioeconomic status than city residents. CENTRAL CITY-SUBURBAN POLITICAL PREFERENCE...|$|R
30|$|Patients and methods: In a prospectively {{collected}} database including consecutive patients admitted between 2007 and 2015 for AECOPD in our ICU. Long-term {{status of}} patients following the first ICU admission (surviving or deceased) has been verified by consulting the civil <b>status</b> <b>registers.</b> Anemia was defined according to WHO criteria—Hb <  13  g dl in males + Hb <  12  g dl in females. Long-term survival {{was assessed by}} Kaplan–Meier curve.|$|R
50|$|The <b>status</b> <b>register</b> is a {{hardware}} register that contains {{information about the}} state of the processor. Individual bits are implicitly or explicitly read and/or written by the machine code instructions executing on the processor. The <b>status</b> <b>register</b> lets an instruction take action contingent on the outcome of a previous instruction.|$|E
50|$|The {{interrupt}} disable flag {{is set in}} the <b>status</b> <b>register.</b>|$|E
5000|$|... 64-bit {{processor}} <b>status</b> <b>register</b> (PSW), {{which includes}} a 24-bit Instruction Address ...|$|E
50|$|The {{standard}} defined two interface levels; {{the physical}} level {{that deals with}} electrical signals, connectors, mechanical and thermal conditions and the logical level that describes the address space, data transfer protocols, cache coherence mechanisms, synchronization primitives, control and <b>status</b> <b>registers,</b> and initialization and error recovery facilities. This structure allows new developments in physical interface technology to be easily adapted without any redesign on the logical level.|$|R
2500|$|If {{an address}} is not claimed by any device, the {{transaction}} initiator's address phase will time out causing the initiator to abort the operation. [...] In case of reads, it is customary to supply all-ones for the read data value (0xFFFFFFFF) in this case. PCI devices therefore generally {{attempt to avoid}} using the all-ones value in important <b>status</b> <b>registers,</b> so that such an error can be easily detected by software.|$|R
2500|$|On {{the sixth}} cycle, {{if there has}} been no response, the {{initiator}} may abort the transaction by deasserting FRAME#. [...] This is known as master abort termination and it is customary for PCI bus bridges to return all-ones data (0xFFFFFFFF) in this case. [...] PCI devices therefore are generally designed to avoid using the all-ones value in important <b>status</b> <b>registers,</b> so that such an error can be easily detected by software.|$|R
