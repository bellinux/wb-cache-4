10|1502|Public
2500|$|... 167 [...] - Interface <b>Standard,</b> <b>Message</b> <b>Format</b> for SHF SATCOM Link Control ...|$|E
50|$|CTS and CQS receive {{trade and}} quote information, {{respectively}} from NYSE, AMEX, {{and the other}} regional market centers using a <b>standard</b> <b>message</b> <b>format.</b> Each system validates its respective message format, verifies the information against its databases (e.g., valid symbol, etc.), consolidates the information with the other market centers' information, and disseminates {{the information to the}} data recipients in its respective common <b>standard</b> <b>message</b> <b>format</b> via the IP Multicast network. Included in every trade and quote message is a timestamp which represents the time that the message is disseminated.|$|E
50|$|The {{communication}} between the MPPs and the banks takes place using ISO 8583 message format, which is the <b>standard</b> <b>message</b> <b>format</b> for all financial messages in India. In order to test the compliance and conformance to the standards set and the message formats, a certification lab is being set up at IIT Madras.|$|E
50|$|A SAML binding is {{a mapping}} of a SAML {{protocol}} <b>message</b> onto <b>standard</b> <b>messaging</b> <b>formats</b> and/or communications protocols. For example, the SAML SOAP binding specifies how a SAML message is encapsulated in a SOAP envelope, which itself {{is bound to}} an HTTP message.|$|R
5000|$|Spacewire is {{very similar}} to DS-DE-02, except it uses a microminiature 9-pin [...] "D" [...] {{connector}} (lower-weight), and low voltage differential signaling. It also defines some higher-level <b>standard</b> <b>message</b> <b>formats,</b> routing methods, and connector and wire materials that work reliably in vacuum and severe vibration.|$|R
50|$|The <b>standard</b> Internet <b>Message</b> <b>Format</b> for eMail states: CR and LF MUST only occur {{together}} as CRLF; they MUST NOT appear independently in the body.|$|R
50|$|The {{concept of}} the <b>standard</b> <b>message</b> <b>format</b> {{originated}} in the wired telegraph services. Each telegraph company likely had its own format, but soon after radio telegraph services began, some elements of the message exchange format were codified in international conventions (such as the International Radiotelegraph Convention, Washington, 1927), and these were then often duplicated in domestic radio communications regulations (such as the FCC in the U.S.) and in military procedure documentation.|$|E
50|$|The {{concept of}} the <b>standard</b> <b>message</b> <b>format</b> {{originated}} in the wired telegraph services. Each telegraph company likely had its own format, but soon after radio telegraph services began, some elements of the message exchange format were codified in international conventions (such as Articles 9, 22, 26, 29, 30, and Appendix 1 of the International Radiotelegraph Convention, Washington, 1927), and these were then often duplicated in domestic radio communications regulations (such as the FCC in the U.S.) and in military procedure documentation.|$|E
50|$|XML Information Set {{was chosen}} as the <b>standard</b> <b>message</b> <b>format</b> because of its {{widespread}} use by major corporations and open source development efforts. Typically, XML Information Set is serialized as XML. A wide variety of freely available tools significantly eases the transition to a SOAP-based implementation. The somewhat lengthy syntax of XML can be both a benefit and a drawback. While it promotes readability for humans, facilitates error detection, and avoids interoperability problems such as byte-order (endianness), it can slow processing speed and can be cumbersome. For example, CORBA, GIOP, ICE, and DCOM use much shorter, binary message formats. On the other hand, hardware appliances are available to accelerate processing of XML messages. Binary XML is also being explored as a means for streamlining the throughput requirements of XML.XML messages by their self-documenting nature usually have more 'overhead' (headers, footers, nested tags, delimiters) than actual data in contrast to earlier protocols where the overhead was usually a relatively small percentage of the overall message.|$|E
5000|$|Developing <b>standard</b> <b>message</b> {{and file}} <b>formats</b> (XML or flat-file) ...|$|R
40|$|Emergency {{management}} is by its nature, {{and in some}} jurisdictions by its definition, an activity that requires a concerted effort {{by a number of}} governmental and non-governmental agencies. There is a growing appreciation that collaboration between these parties is best served through the use of interoperable <b>standards</b> for <b>message</b> <b>formats</b> for purposes such as alerting and resource exchange. However, {{it is also important to}} realize that, although much advantage can be drawn from standardizing certain aspects of communication, such as the structure of messages, different agencies will use different vocabularies. In this paper we discuss how ontologies can be used with <b>standard</b> <b>messaging</b> <b>formats</b> for resource <b>messaging</b> to enable intelligent decision support mechanisms in the presence of differing vocabularies across organizational boundaries. We also present a survey of the opportunities for using ontologies in emergency management, and the issues that must be addressed...|$|R
50|$|It {{is made up}} of <b>standard</b> <b>Message</b> Text <b>Formats</b> (MTF) for man-readable and machine-processable information, a {{core set}} of common warfighting symbols, and data link {{standards}} called Tactical Data Links (TDLs).|$|R
40|$|AbstractFor {{working out}} the problem of {{waveform}} portability on the FPGA, this paper firstly comes up with the structural of platform abstraction layer on the FPGA, and then improves the <b>standard</b> <b>message</b> <b>format</b> of modem hardware abstraction layer. Lastly, this paper discusses the connection model which influences the resource consumption and the working efficiency about the platform abstraction layer, and compares the many-to-one connection model with the one-to-one connection model, draws a conclusion that oneto- one connection model is more suitable. Platform abstraction layer on the FPGA totally solves the problem of waveform portability, covering great significant in cutting down the cost of software defined radio system exploitation and improving the reconfigurability of the software defined radio system...|$|E
40|$|RedAlert is a {{complete}} application monitoring system which consists of a stateful server daemon and extensible Perl client API. Almost any IP-protocol service {{is a candidate for}} RedAlert monitoring: the clients determine what error condition they have discovered, convert that information into a <b>standard</b> <b>message</b> <b>format,</b> and transmit the Alert to the server. RedAlert therefore will easily plug in to existing script-based monitoring environments, providing greatly increased functionality for a minimal investment in configuration time. This functionality includes volume tracking, interval sampling, threshold-based notifications, and reporting mechanisms which include pager, electronic mail, and SNMP traps. We have chosen to focus on email monitoring, specifically postmaster bounce mail, for the scope of this paper. Bounce mail is both ubiquitous and complicated, making it ideal for RedAlert monitoring. View from 25, 000 Feet RedAlert is an extensible, easy-to-use client/ server framework written in object-oriented Perl. I...|$|E
40|$|One of {{the main}} goals of Distributed Artificial Intelligence is to devise methods to join a {{community}} of Computational Agents into a Multi-Agent System, where these agents can cooperate to reach common goals. Cooperation in a Cognitive Agent community is usually supported by an Agent Communication Language (ACL) which allows the agents to exchange knowledge and information through a computer network. In this paper, we propose Parla, a high level agent communication language to cognitive multi-agent systems. This language {{is based on a}} <b>standard</b> <b>message</b> <b>format,</b> that contains the necessary information for the message integrity, network security and groupware services to be implemented. These services can either be performed by the lower layers of the system or be included in the high level agent communication support. This message format has a specific slot to store the cooperation language expressions. These expressions consist of a primitive name and an argument, which should be a va [...] ...|$|E
5000|$|The AMQP {{specification}} {{is defined}} in several layers: (i) a type system, (ii) a symmetric, asynchronous protocol for the transfer of messages from one process to another, (iii) a <b>standard,</b> extensible <b>message</b> <b>format</b> and (iv) a set of standardised but extensible 'messaging capabilities.' ...|$|R
5000|$|SWIFT {{has become}} the {{industry}} standard for syntax in financial <b>messages.</b> <b>Messages</b> <b>formatted</b> to SWIFT <b>standards</b> can be read by, and processed by, many well-known financial processing systems, {{whether or not the}} message traveled over the SWIFT network. SWIFT cooperates with international organizations for defining <b>standards</b> for <b>message</b> <b>format</b> and content. SWIFT is also Registration authority (RA) for the following ISO standards: ...|$|R
5000|$|CIPS is {{expected}} to use the SWIFT industry standard for syntax in financial <b>messages.</b> <b>Messages</b> <b>formatted</b> to SWIFT <b>standards</b> can be read by, and processed by, many well-known financial processing systems, {{whether or not the}} message traveled over the SWIFT network. SWIFT cooperates with international organizations for defining <b>standards</b> for <b>message</b> <b>format</b> and content. CIPS would conceivably also subscribe to Registration authority (RA) for the following ISO standards: ...|$|R
40|$|Among the {{prerequisites}} for rapid development of early warning public health surveillance systems are <b>standards</b> for <b>message</b> <b>formats</b> and code sets. Researchers and practitioners of public-health surveillance (PHS) have been building on standards used in clinical information systems. We discuss {{standards in the}} context of our experience building the Real-Time Outbreak and Disease Surveillance System (RODS), an early warning system for PHS that we have developed over the last three years...|$|R
40|$|The Goddard Mission Services Evolution Center, or GMSEC, {{was started}} in 2001 {{to create a new}} {{standard}} approach for managing GSFC missions. Standardized approaches in the past involved selecting and then integrating the most appropriate set of functional tools. Assumptions were made that "one size fits all" and that tool changes would not be necessary for many years. GMSEC took a very different approach and has proven to be very successful. The core of the GMSEC architecture consists of a publish/subscribe message bus, standardized <b>message</b> <b>formats,</b> and an Applications Programming Interface (API). The API supports multiple operating systems, programming languages and messaging middleware products. We use a GMSEC-developed free middleware for low-cost development. A high capacity, robust middleware is used for operations and a messaging system with a very small memory footprint is used for on-board flight software. Software components can use the <b>standard</b> <b>message</b> <b>formats</b> or develop adapters to convert from their native formats to the GMSEC formats. We do not want vendors to modify their core products. Over 50 software components are now available for use with the GMSEC architecture. Most available commercial telemetry and command systems, including the GMV hifly Satellite Control System, have been adapted to run in the GMSEC labs...|$|R
50|$|To promote interoperability, the CDC has {{encouraged}} the adoption {{in public health}} data exchange of several <b>standard</b> vocabularies and <b>messaging</b> <b>formats</b> from the health care world. The most prominent of these are: the Health Level 7 (HL7) standards for health care messaging; the LOINC system for encoding laboratory test and result information; and the Systematized Nomenclature of Medicine (SNOMED) vocabulary of health care concepts.|$|R
40|$|Applications {{that use}} {{directory}} services or relational databases {{operate in a}} client–server model, where a client requests information from a server, and the server returns {{a response to the}} client. These client–server applications typically have a specific message protocol that is unique to that application. Systems with multiple client–server applications require that there are separate client programs that individually communicate with their respective server programs. A need exists to access information from heterogeneous systems in a <b>standard</b> <b>message</b> request–response <b>format.</b> A generic eXtensible Markup Language (XML) model was developed to obtain data from diverse measurement systems. The objective {{of this paper is to}} describe the XML model that abstracts the differences in the underlying heterogeneous client–server <b>message</b> <b>formats</b> and provides a common XML message interface. The XML messages are parsed through a common XML gateway that decides to which application server to forward the messages. The generic XML messages are translated to the correct application server format before being sent to the application server...|$|R
40|$|Applications {{that use}} {{directory}} services or relational databases operate in client-server mode where a client requests {{information from a}} server, and the server returns {{a response to the}} client. Communication between each client-server application is achieved by using separate custom built front-ends with non-portable data formats. A need exists to access information from different heterogeneous client-server systems in a <b>standard</b> <b>message</b> request-response <b>format.</b> This research proposes a generic XML document that presents a common request-response interface to the client from which they can access network protocol or database information. The XML component is easily adaptable to accessing any new client-server type protocol or database data that may be added to a server. The approach in determining the XML elements is, firstly review each systems command and data structure separately, and then determine if there are any commonalities within each protocol that would allow for a common representation of both the data and command structure. For the purposes of this project, three different data sources that are typically used in an Internet application were analysed, namely: [...] a TCP based server program; [...] a relational type database; and [...] a directory service. The solution was implemented using Linux as the operating system, Java as the programming language, MySQL as the relational database, openLDAP as the directory server and a proprietary TCP based server application. Initially the complete system was developed for the proprietary TCP-based application. The other systems were added with minimum additional work. The result of the implementation was that it is relatively easy to add new protocols (for e. g. LDAP) on an as needed basis with minimal changes required on the server side. A client will receive XML responses that the client can either adapt (typically using a separate style-sheet) to their specific needs or use the existing front-ends if they are suitable. After the design was implemented and tested, the performance of XML and non-XML messages was evaluated. As expected the increased verbosity of XML results in a larger footprint that requires more processing time and resources. This means that any implementation using XML has to carefully weight the benefits of flexibility, extensibility and <b>standard</b> <b>message</b> <b>formats</b> against reduced performance. After evaluating XML type messages in an Internet type environment that involved human-computer interaction, it was concluded that the slower response times is not that significant to negate the benefits of a common message interface provided by using XML. Dissertation (M Eng (Computer Engineering)) [...] University of Pretoria, 2006. Electrical, Electronic and Computer Engineeringunrestricte...|$|R
50|$|S/MIME (Secure/Multipurpose Internet Mail Extensions) is a {{standard}} for public key encryption and signing of MIME data. S/MIME is on an IETF standards track and defined {{in a number of}} documents, most importantly RFCs 3369, 3370, 3850 and 3851. It was originally developed by RSA Data Security Inc. and the original specification used the IETF MIME specification with the de facto industry <b>standard</b> PKCS#7 secure <b>message</b> <b>format.</b> Change control to S/MIME has since been vested in the IETF and the specification is now layered on Cryptographic Message Syntax, an IETF specification that is identical in most respects with PKCS #7. S/MIME functionality is built into the majority of modern email software and interoperates between them.|$|R
40|$|OpenPGP is an Internet {{standard}} for securely sending messages over insecure networks like the Internet. It provides end-to-end encryption by combining asymmetric and symmetric cryptography. Trust in any networkcomponent except the sender’s and receiver’s computer is not needed. Furthermore, it guarantees for {{the integrity of}} messages using digital signatures. OpenPGP also provides a system for verification of the identity of partici pants of an communication using a trust model called the Web of Trust. In this thesis we give {{an overview of the}} principles of OpenPGP and its underlying Internet <b>standard,</b> the OpenPGP <b>Message</b> <b>Format.</b> Additionally, we explain in which ways OpenPGP implementations are used, its functionalities and inner workings. Furthermore, we show an example on the basis of our implementation of the OpenPGP standard in Java using the IAIK-JCE cryptographic library. We also discuss considerations regarding security and usability...|$|R
40|$|Air {{traffic control}} (ATC) radar {{has been the}} main sensor for the {{detection}} and monitoring of commercial aircrafts for air traffic management. Typical modern ATC radar consists of a primary radar and secondary radar. The primary radar locates aircrafts based on the time-delay between the transmit pulses and the returns off the aircrafts. Since only location is provided, the secondary radar receives identification and flight parameters based on mode A, C or S by interrogating the transponder on board incoming aircrafts. Extensive use of radar is limited by high acquisition, installation and maintenance cost. Also, the coverage is limited by blockage due to obstacles such as buildings and mountains. Automatic Dependent Surveillance-Broadcast (ADS-B) system is the next generation locating system to complement existing ATC radar system. The proposed project looks into the design of an optimum receiver to decode both ADS-B and mode S secondary radar signal. The project will consist of three parts namely; modulator, demodulator and performance verification. To ensure compatible to the industrial <b>standards,</b> the <b>message</b> <b>format</b> and its verification process {{will be based on}} the ICAO (International Civil Aviation Organizations) standards. A non-coherent detection structure (based on energy detection) will be adopted at the receiver to improve performance at low signal-to-noise ratio (SNR) condition...|$|R
2500|$|J2178-1 – Defines <b>standards</b> {{for network}} <b>message</b> header <b>formats</b> and {{physical}} address assignments ...|$|R
5000|$|Only {{a subset}} of the {{possible}} messages is actually required by the GEM <b>standard.</b> Some SECS-II <b>message</b> transactions may be initiated by only the host. Other SECS-II message transactions may be initiated only by an equipment. A few message transactions may be initiated by either the host or equipment. In order for a SECS-II message to be valid, it must be used by the correct party and have the correct <b>message</b> <b>format</b> (the SECS-II <b>message</b> structure defined by E5). The host and equipment can agree to support custom messages to implement custom features whose format is not defined in SEMI E5, but this is highly discouraged when <b>standard</b> <b>message</b> are sufficient.|$|R
50|$|Transaction Workflow Innovation Standards Team (Twist) is a not-for-profit {{industry}} standards group. It {{does not}} charge anything for involvement. The main goal of Twist {{is to create}} non-proprietary XML <b>message</b> <b>standards</b> for the financial services industry. To this end it provides a <b>message</b> <b>format</b> validation service.|$|R
50|$|The Emergency Data Exchange Language (EDXL) is a {{suite of}} XML-based <b>messaging</b> <b>standards</b> that {{facilitate}} emergency information sharing between government entities and {{the full range of}} emergency-related organizations. EDXL standardizes <b>messaging</b> <b>formats</b> for communications between these parties. EDXL was developed as a royalty-free standard by the OASIS International Open Standards Consortium.|$|R
50|$|Globalize {{provides}} number formatting and parsing, {{date and}} time formatting and parsing, currency <b>formatting,</b> unit <b>formatting,</b> <b>message</b> <b>formatting</b> (ICU <b>message</b> <b>format</b> pattern), and plural support.|$|R
50|$|UCore 3.0 also {{defines a}} <b>message</b> <b>format</b> for Situational Awareness (SA) messages, which report upon {{the time and}} {{location}} of entities and events, often {{with a focus on}} mapping or recording location history. An instance of this SA <b>message</b> <b>format</b> will contain components which reuse the RDCs; however, a COI can still construct message payloads with the RDCs without making use of the SA <b>message</b> <b>format.</b>|$|R
40|$|This paper {{outlines}} a {{new model}} of computer message systems based on a useroriented rather than a communications perspective. Most network users spend their time working with various types of 'composite documents' such as mail messages, news, reports, or entries in directories of names. They perform operations that are aided by a logically centralized but physically distributed world-wide information storage and retrieval system. Their concerns should be with creating, filing, submitting, searching, and retrieving documents, not with routing or transmission matters. Computer networks are rapidly proliferating. Their number and size are increasing, and interconnection is commonplace. High vol~ime applications like mail and news transmission are well established in offices, large corporations, and governmentally supported internets. Computer conferencing and directory assistance services are continuing to evoive. <b>Standards</b> for <b>message</b> <b>formats,</b> transmission protocols, and name/address directories have been recommended by DARPA, NBS, and CCI'IT. Research in document modeling, distributing databases, and retrieving text objects is being adapted to improve the functionality of computer message systems. Advanced techniques for text analysis, automatic indexing, query construction, description of comprehensive interest profiles, and retrospective or current awareness retrieval can simplify and improve the effectiveness of user agent software. Initial experimentation has shown the value of recognizing the structure of composite documents. Current work with the CSNET name server database, and with a collection of messages extracted from AIList digests distributed over the DARPA Internet, indicates that the proposed model accomodates mail, news, and directory assistance. Other work with book passage retrieval suggests that large files can be processed too. It is hoped that integration of these services, along with conferencing and database handling, will occur, as a new network for the Virginia Center for Innovative Technology is proposed and eventually implemented...|$|R
40|$|The {{objective}} of the thesis {{is to develop a}} Unified platform for Banking Services. Compared to The traditional banking services, the originality of this thesis is to make banking transactions easier and to enable interfacing of delivery channels such as phone banking or Internet banking and to enhance its usefulness and increase its security. The platform created acts as a gateway and message handler to allow any customer to access services by passing transactions to the core banking application. The unified platform will act as a middleware between the core banking application and delivery channels that are used to deliver services to the customer. The unified platform is capable of receiving various <b>message</b> <b>formats.</b> The <b>message</b> <b>standard</b> set by the international organization is the most common used format. We adopted this format used in other protocols to communicate with delivery channels to provide electronic banking services. The unified platform adopts IFX (International Financial eXchange) as the <b>message</b> <b>standard</b> that is used to communicate with the core banking system. So the main role of the unified platform is to act as an interface to transform various other external <b>messages</b> <b>formats</b> to IFX. For our practical implementation example, we used plain text format and ISO٨٥٨٣ as illustrations of external <b>message</b> <b>format.</b> IFX is adopted in financial applications as a standard format that is based on XML (eXtensible Markup Language), finally a brief description of <b>messages</b> <b>standards</b> and XML features and benefits is presented, followed by the security and the methods that used to increase the service channels security...|$|R
50|$|Protocols are sets {{of rules}} that {{describe}} <b>message</b> <b>formats</b> and how <b>messages</b> are exchanged (i.e., the protocol state-machine). Accordingly, the problem of protocol reverse-engineering can be partitioned into two subproblems; <b>message</b> <b>format</b> and state-machine reverse-engineering.|$|R
40|$|Abstract—Extracting the {{protocol}} <b>message</b> <b>format</b> specifications of unknown applications from network traces {{is important for}} a variety of applications such as application protocol parsing, vulnerability discovery, and system integration. In this paper, we propose ProDecoder, a network trace based protocol <b>message</b> <b>format</b> inference system that exploits the semantics of protocol messages without the executable code of application protocols. ProDecoder is based on the key insight that the n-grams of protocol traces exhibit highly skewed frequency distribution that can be leveraged for accurate protocol <b>message</b> <b>format</b> inference. In ProDecoder, we first discover the latent relationship among n-grams by first grouping protocol messages with the same semantics and then inferring <b>message</b> <b>formats</b> by keyword based clustering and cluster sequence alignment. We implemented and evaluated ProDecoder to infer <b>message</b> <b>format</b> specifications of SMB (a binary protocol) and SMTP (a textual protocol). Our experimental results show that ProDecoder accurately parses and infers SMB protocol with 100 % precision and recall. For SMTP, ProDecoder achieves approximately 95 % precision and recall...|$|R
