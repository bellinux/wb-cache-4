1072|1975|Public
5|$|Despite {{the public}} {{focus on the}} various {{physical}} issues with the boats, the major problem with the submarines was {{the development of the}} Rockwell combat system. The problems had started during the funded study, when Singer Librascope and Thomson CSF, who were partnering with Rockwell to develop the combat system, refused to release their intellectual property or their <b>software</b> <b>code</b> for Rockwell to sell. It was proposed that Computer Sciences of Australia, a division of Computer Sciences Corporation and a minor partner in the consortium, take over the role of writing the software for the combat system, although this meant that Singer Librascope, which had prior experience in creating submarine combat systems, was reduced to a minor role in the project. Other major problems with the system, to which most of the later difficulties were attributed, were that the original concept was beyond the technology of the day, and that the system architecture required by the RAN was both overly ambitious and flawed. This was compounded by the rate of advancement in computer technology: equipment had to be designed from scratch and custom manufactured {{at the start of the}} project, but by the time these were installed, they were obsolete compared to commercially available hardware and software.|$|E
25|$|Eddie Tipton, {{the former}} {{security}} {{director of the}} US Multi-State Lottery Association, installed <b>software</b> <b>code</b> to the Hot Lotto random number generator {{that allowed him to}} predict winning numbers on specific days of the year.|$|E
25|$|Schools are {{refocusing}} education curricula around STEM {{sciences and}} emerging technologies {{to meet the}} skills requirements of Industry 4.0. Schools in the UK are introducing <b>software</b> <b>code</b> building right from elementary school (Scratch being the most popular learning tool used to introduce children to software programming). Universities are generalizing the Fab lab concept where continuous project-work in mechatronics amalgamates software coding, electronics and telecommunications with materials and manufacturing technologies.|$|E
5000|$|Dr. Dobbs Jolt Awards: CodeRush - Jolt Award Finalist in the <b>Software</b> <b>Coding</b> Category.|$|R
5000|$|Computers Forums {{dealing with}} computers, {{operating}} systems, <b>software,</b> <b>coding,</b> PC gaming, and vintage computers ...|$|R
50|$|Note: These {{benchmark}} {{results are}} not comparable with other CPU/SoCs architecture due to the <b>software</b> <b>codes</b> optimization.|$|R
25|$|Control of an {{automated}} teller machine (ATM) {{is an example of}} an interactive process in which a computer will perform a logic derived response to a user selection based on information retrieved from a networked database. The ATM process has similarities with other online transaction processes. The different logical responses are called scenarios. Such processes are typically designed with the aid of use cases and flowcharts, which guide the writing of the <b>software</b> <b>code.</b>|$|E
25|$|When the Australian Orion upgrade {{project was}} being {{developed}} in 1996 {{there was not}} an 'off the shelf' package of upgrades that met the requirements specified by the RAAF. As a result, {{it was decided to}} tailor the upgrade to Australian specifications, which included integrating different systems. The systems integration task proved to be much more difficult than was expected, and L3 Communications and its suppliers were required to write over two million lines of <b>software</b> <b>code.</b>|$|E
25|$|The THAAD {{missile defense}} concept was {{proposed}} in 1987, with a formal {{request for proposals}} submitted to industry in 1991. In September 1992, the US Army selected Martin Marietta (now Lockheed Martin) as prime contractor for THAAD development. Prior to development of a physical prototype, the Aero-Optical Effect (AOE) <b>software</b> <b>code</b> was developed to validate the intended operational profile of Lockheed's proposed design. The first THAAD flight test occurred in April 1995, with all flight tests in the Demonstration-Validation (DEM-VAL) program phase occurring at White Sands Missile Range. The first six intercept attempts missed the target (Flights4–9). The first successful intercepts were conducted on 10 June 1999, and 2 August 1999, against Hera missiles.|$|E
50|$|Many weblog {{software}} packages mark reader-submitted links this way by default (often with no option to disable it, except for {{modification of the}} <b>software's</b> <b>code).</b>|$|R
5000|$|These stations, in {{addition}} to the DGSE headquarters on boulevard Mortier in Paris, intercept electronic communications, decipher using <b>software</b> <b>coded</b> communications of diplomatic, military or industrial origin.|$|R
5000|$|Adams is {{credited}} with the idea and <b>software</b> <b>coding</b> to use double brackets [...] in Wikipedia to replace the use of CamelCase on the early versions of wikis.|$|R
25|$|In April 2014, the Government Accountability Office (GAO) {{found that}} the KC-46 program was {{projected}} to underrun its projected cost estimate of $51.7 billion by $300 million. The program acquisition unit cost per jet will also be $287 million, $1.8 million less than estimated. The GAO noted that delays in training air crew and maintainers could cause testing to slip 6–12 months, but also stated that the program had not missed any major milestones and {{that the development of}} about 15.8 million lines of <b>software</b> <b>code</b> was progressing as planned. In May 2014, the Air Force estimated the cost of the development program, including the first four aircraft, could rise from $4.4–4.9 billion to $5.85 billion.|$|E
25|$|Users access Virtual Cell as a {{distributed}} application over the Internet. The web-based Java interface {{allows users to}} build complex models in biologically relevant terms: compartment dimensions and shape, molecular characteristics, and interaction parameters. VCell converts the biological description into an equivalent mathematical system of differential equations. Users can switch back-and-forth between the schematic biological view and the mathematical view in the common graphical interface. Indeed, if users desire, they can manipulate the mathematical description directly, bypassing the schematic view. VCell allows users a choice of numerical solvers to translate the mathematical description into <b>software</b> <b>code</b> which is executed to perform the simulations. The results can be displayed on-line, or they can be downloaded to the user's computer {{in a wide variety}} of export formats. The Virtual Cell license allows free access to all members of the scientific community.|$|E
500|$|... 1980s {{software}} crackers added custom introductory credits sequences (intros) {{to programs}} whose copy protection they had removed. Increasing computing power allowed for more complex intros, and the demoscene formed when focus {{shifted to the}} intros instead of the cracks. The goal became to create the best 3-D demos in real-time with {{the least amount of}} <b>software</b> <b>code.</b> Disk storage was too slow for this; graphics had to be calculated on the fly and without a pre-existing game engine.|$|E
50|$|Programming Research Limited (PRQA) {{supplies}} a code {{quality management}} solution for embedded software {{which includes the}} static program analysis tools QA·C and QA·C++. It created the High Integrity C++ <b>software</b> <b>coding</b> standard.|$|R
50|$|A {{software}} architect is {{a software}} expert who makes high-level design choices and dictates technical standards, including <b>software</b> <b>coding</b> standards, tools, and platforms. The leading expert {{is referred to}} as the chief architect.|$|R
40|$|Poster at Open Repositories 2014, Helsinki, Finland, June 9 - 13, 2014 Posters, Demos and Developer "How-To's"QUT’s <b>Software</b> and <b>Code</b> Finder is a {{searchable}} registry of <b>code</b> and <b>software</b> {{which has}} been created {{as a result of}} QUT research activities. The registry is designed to aid the discovery and visibility of QUT research outputs and encourage sharing and re-use of <b>code</b> and <b>software</b> throughout research communities, both nationally and internationally. <b>Software</b> and <b>code</b> as research outputs can be registered and shared openly with other researchers via a link in <b>Software</b> and <b>Code</b> Finder (from GitHub, SourceForge or Google Code, etc) or by mediation via the researcher. Records describing <b>software</b> and <b>code</b> are connected to information on researchers, research groups, publications and related projects. Links to the <b>software</b> or <b>code</b> location are provided alongside licencing and re-use information. Records in <b>Software</b> and <b>Code</b> Finder are linked to related records in the University’s data registry (QUT Research Data Finder) and related publications in the institutional repository (QUT ePrints). This poster describes the rationale for having a metadata registry for <b>software</b> and <b>code,</b> the linkage between the registry and other internal and external repositories and the issues which arose during the development stage. Callan, Paula Anne (Queensland University of Technology, Australia) Broadley, Philippa (Queensland University of Technology, Australia...|$|R
500|$|At 13, he {{enrolled}} in the Lakeside School, a private preparatory school. [...] When {{he was in the}} eighth grade, the Mothers' Club at the school used proceeds from Lakeside School's rummage sale to buy a Teletype Model 33 ASR terminal and a block of computer time on a General Electric (GE) computer for the school's students. [...] Gates took an interest in programming the GE system in BASIC, and was excused from math classes to pursue his interest. He wrote his first computer program on this machine: an implementation of tic-tac-toe that allowed users to play games against the computer. Gates was fascinated by the machine and how it would always execute <b>software</b> <b>code</b> perfectly. When he reflected back on that moment, he said, [...] "There was just something neat about the machine." [...] After the Mothers Club donation was exhausted, he and other students sought time on systems including DEC PDP minicomputers. One of these systems was a PDP-10 belonging to Computer Center Corporation (CCC), which banned four Lakeside students Gates, Paul Allen, Ric Weiland, and Kent Evans for the summer after it caught them exploiting bugs in the operating system to obtain free computer time.|$|E
500|$|In 1992, Japanese {{animation}} studio Gainax was in {{a collaboration}} with Game Arts, the makers of the Lunar role-playing games, to produce an action video game. Gainax's video game product line tended to target a niche crowd who generally preferred dating simulations and anime-based adventure games. Alisia Dragoon is a departure from this tradition. The animation studio handled the artistic end of the production, writing the story and creating the artwork {{that would be used}} for the design of the game's environments and characters. Several of its founders had worked on Hayao Miyazaki's animated films, and the influences of Miyazaki's 1984 science fiction animated film Nausicaä of the Valley of the Wind were evident in certain levels of the game. Similarly, due to the predominance of mixing science fiction with fantasy themes in the Japanese animation circles at that time, Alisia Dragoon featured high-tech spaceships and robots alongside mythical zombies and dragons. The composition of the soundtrack was delegated to Mecano Associates, who had produced the music for other works from Game Arts, such as the action games [...] and Silpheed. Game Arts, however, did most of the work in producing Alisia Dragoon, adapting the artwork into environments and creatures that can be rendered by the console hardware, and writing them as lines of <b>software</b> <b>code.</b>|$|E
2500|$|On July 5, 2015 {{the company}} {{suffered}} a major data breach of customer data, <b>software</b> <b>code,</b> internal documents and emails. - See: § 2015 data breach ...|$|E
5000|$|Bathe {{has made}} {{fundamental}} {{contributions in the}} finite element analysis of structures, heat transfer, field problems, CFD, and fluid-structure interactions. These contributions are widely used in commercial <b>software</b> <b>codes.</b> Specifically, the following contributions for reliable, accurate and efficient finite element analyses are widely employed: ...|$|R
30|$|Programmable smart contract. As {{mentioned}} before, {{the smart}} contract in the Blockchain {{refer to a}} set of <b>software</b> <b>codes</b> that specify responsibilities of each contract participant and the execution conditions of the contract. Therefore, Blockchain provides a platform to program smart contracts based different application logics.|$|R
30|$|Tasks {{including}} system design, performance testing, ground calibration, and onboard <b>software</b> <b>coding</b> for the MGF {{instrument for}} Arase were completed with excellent results. MGF {{has been under}} normal scientific operation since March 2017. We have used data acquired in-orbit for precise sensor alignment and offset calibration.|$|R
2500|$|In diff's early years, common uses {{included}} comparing {{changes in}} the source of <b>software</b> <b>code</b> and markup for technical documents, verifying program debugging output, comparing filesystem listings and analyzing computer assembly code. [...] The output targeted for ed was motivated to provide compression for a sequence of modifications made to a file. [...] The Source Code Control System (SCCS) {{and its ability to}} archive revisions emerged in the late 1970s as a consequence of storing edit scripts from diff.|$|E
2500|$|In 1998, McGeady was {{a witness}} for the US Department of Justice in the U.S. vs. Microsoft anti-trust case, where he testified about Microsoft's {{attempts}} to control Intel's software efforts {{as well as their}} behavior toward Netscape and Sun's Javasoft. He was the only executive from the PC industry to testify for the government. [...] McGeady testified that Microsoft opposed Intel's 1995 work on a new technology called Native Signal Processing, which would have used instructions from Intel's chips, rather than <b>software</b> <b>code</b> from Microsoft, to run multimedia and communications programs more quickly.|$|E
2500|$|While BMC's most {{significant}} asset {{is perhaps a}} workforce of skilled software engineers, the firm owns considerable intellectual property {{in the form of}} <b>software</b> <b>code.</b> It elaborated how it protects this property in an SEC filing (2002): [...] "We distribute our products in object code form and rely upon contract, trade secret, copyright and patent laws to protect our intellectual property. The license agreements under which customers use our products restrict the customer's use to its own operations and prohibit disclosure to third persons. We now distribute certain of our products on a shrink-wrap basis, and the enforceability of such restrictions in a shrink-wrap license is unproven in certain jurisdictions. Also, notwithstanding those restrictions, it is possible for other persons to obtain copies of our products in object code form. We believe that obtaining such copies would have limited value without access to the product's source code, which we keep highly confidential. In addition, we employ protective measures such as CPU dependent passwords, expiring passwords and time-based trials." ...|$|E
5000|$|The {{following}} considerations {{apply to}} the <b>software</b> construction <b>coding</b> activity: ...|$|R
50|$|Starting in {{the late}} 1980s the FDA {{increased}} its involvement in reviewing the development of medical device software. The precipitant for change was a radiation therapy device (Therac-25) that overdosed patients because of <b>software</b> <b>coding</b> errors. FDA is now focused on regulatory oversight on medical device software development process and system-level testing.|$|R
5000|$|List {{of genetic}} {{engineering}} software: <b>software</b> to <b>code</b> the genetic modifications ...|$|R
2500|$|The Blab-off was a wired {{remote control}} created in 1952 that turned a TV's sound {{on or off}} so that viewers could avoid hearing commercials. In the 1980s Steve Wozniak of Apple started a company named CL 9. The purpose of this company {{was to create a}} remote control that could operate {{multiple}} electronic devices. The CORE unit (Controller Of Remote Equipment) was introduced in the fall of 1987. The advantage to this remote controller was that it could [...] "learn" [...] remote signals from different devices. It had the ability to perform specific or multiple functions at various times with its built-in clock. It was the first remote control that could be linked to a computer and loaded with updated <b>software</b> <b>code</b> as needed. The CORE unit never made a huge impact on the market. It was much too cumbersome for the average user to program, but it received rave reviews from those who could. These obstacles eventually led to the demise of CL 9, but two of its employees continued the business under the name Celadon. This {{was one of the first}} computer-controlled learning remote controls on the market.|$|E
5000|$|The pForth <b>software</b> <b>code</b> is {{dedicated}} to the public domain, and any third party may reproduce, distribute and modify the pForth <b>software</b> <b>code</b> or any derivative works thereof without any compensation or license. The pForth <b>software</b> <b>code</b> is provided on an [...] "as is" [...] basis without any warranty of any kind, including, without limitation, the implied warranties of merchantability and fitness for a particular purpose and their equivalents under the laws of any jurisdiction.|$|E
5000|$|This {{poses the}} {{question}} of who should be exposed to the complexity. For example, should a software developer add complexity to the <b>software</b> <b>code</b> to make the interaction simpler for the user or should the user deal with a complex interface so that the <b>software</b> <b>code</b> can be simple? ...|$|E
5000|$|LiveType {{originated}} from a product called [...] "India Titler Pro," [...] by the Oregon-based company Prismo Graphics, founded by Tom Langmacher and Mary Massey (now Mary Wolf). Prismo Graphics hired Dave Howell of Pablo Media {{to write the}} <b>software's</b> <b>code.</b> Prismo Graphics, {{as well as the}} software, was acquired by Apple in June 2002.|$|R
5000|$|... #Subtitle level 2: Ban on {{government}} mandates to access <b>software</b> source <b>code</b> ...|$|R
50|$|High Integrity C++ (HIC++ or {{formerly}} HICPP) is a <b>software</b> <b>coding</b> {{standard for}} the C++ programming language developed by Programming Research Limited. The latest revision, version 4.0, was released in October 2013 and documents 155 rules that restrict the use of ISO C++ language to improve software maintenance and reliability in high reliability or safety critical applications.|$|R
