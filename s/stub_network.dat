21|35|Public
5000|$|A person, or workgroup, who is {{connected}} to an , by only one router, is a <b>stub</b> <b>network</b> {{with respect to the}} ISP. This <b>stub</b> <b>network</b> is part of the ISP's , discussed below.|$|E
50|$|In ingress filtering, packets {{coming into}} the network are {{filtered}} if the network sending it should not send packets from the originating IP address(es). If the end host is a <b>stub</b> <b>network</b> or host, the router needs to filter all IP packets that have, as the source IP, private addresses (RFC 1918), bogon addresses or addresses {{that do not have}} the same network address as the interface.|$|E
50|$|A <b>stub</b> <b>network,</b> or pocket network, is a {{somewhat}} casual term describing a computer network, {{or part of}} an internetwork, with no knowledge of other networks, that will typically send much or all of its non-local traffic out via a single path, with the network aware only of a default route to non-local destinations. As a practical analogy, think of an island which {{is connected to the}} rest of the world through a bridge and no other path is available either through air or sea. Continuing this analogy, the island might have more than one physical bridge to the mainland, but the set of bridges still represents only one logical path.|$|E
40|$|Abstract. In recent years, {{commercial}} “Multihoming Route Control” {{devices are}} used by multihomed <b>stub</b> <b>networks</b> to optimize the routing of their Internet traffic. Previous {{studies have shown that}} “Multihoming Route Control ” can improve the Internet communication performance of the multihomed <b>stub</b> <b>networks</b> significantly. In this work, we study “Multihoming Route Control ” among a group of multihomed <b>stub</b> <b>networks</b> that may belong to an organization and exchange large amount of data regularly. Simulations show that greedy “Multihoming Routing Control ” schemes could lead to oscillations. We propose a useroptimal routing based “Multihoming Routing Control ” scheme that improves routing performance without causing oscillations. The proposed scheme is simpler to implement than optimal routing based approaches. We show through simulations that the proposed scheme achieves performance close to optimal routing and works well in various network conditions. ...|$|R
5000|$|For each {{interface}} {{on which}} no default route (also called the gateway of last resort) has been elected, [...] refers to these subnets as <b>stub</b> <b>networks.</b>|$|R
40|$|Abstract — Multihoming {{is used by}} <b>stub</b> <b>networks</b> {{to improve}} the {{reliability}} of their Internet connectivity. In recent years, commercial “intelligent route control ” devices are used by multihomed <b>stub</b> <b>networks</b> to optimize the routing of their Internet traffic. In this work, we first conduct measurement of qualities of alternate paths through multihoming. In the remaining part, we study the route control of traffic {{among a group of}} multihomed <b>stub</b> <b>networks</b> which may belong to an organization and exchange data regularly. This type of route control is special because the access links of such networks may not be over-provisioned and are shared by traffic controlled by multiple route control devices. Such shared bottlenecks may affect the effectiveness of uncoordinated “intelligent route control”. We propose a global optimization based approach to coordinate the route control among such a group of networks. Our approach can avoid oscillations which may be caused by uncoordinated route control. Simulation results show that our approach has advantages over equal-splitting based static load-balancing...|$|R
40|$|In the Internet, {{with many}} {{competing}} networks each trying to optimise its own bandwidth, a <b>stub</b> <b>network</b> has limited knowledge about user demands, available network resources and routing policies of other networks. This uncertainty makes {{the task of}} interdomain traffic engineering for a <b>stub</b> <b>network</b> very challenging. The basic aim of a <b>stub</b> <b>network</b> connected to multiple ISPs (multihomed) is to load balance its traffic among its various edge links. Our goal in this work is to distribute the incoming traffic of a multihomed <b>stub</b> <b>network</b> among its various edge links. The focus is on networks that primarily download traffic from the Internet. Regulating the incoming trafc is difficult since it will require to inuence the behaviour of the remote destinations. We performed a systematic analysis of our problem and showed that even a restricted instance {{of the problem is}} NP-complete. We proposed simple, low-cost route control techniques to load balance traffic by reallocating the routes of outgoing traffic. The techniques were validated using synthetic as well as actual data collected under numerous traffic load conditions. Results show that we can achieve significant improvement in load balancing with minimum traffic re-assignments. Moreover, the proposed techniques neither require any third party assistance nor changes to existing protocols and network setup. This makes our schemes easily deployable in real networks. ...|$|E
40|$|Multihoming load {{balancing}} improves network performance by leveraging the traffic among the access links in a multi-homed network. Currently, no effective {{load balancing}} system {{is available to}} handle the inbound traffic in a BGP multi-homed <b>stub</b> <b>network,</b> where the traffic volume is unknown to the network and {{the route of the}} traffic is hard to control. In this paper, we propose ILBO, an inbound traffic load balancing mechanism to effectively balance the inbound traffic in a BGP multi-homed <b>stub</b> <b>network.</b> ILBO predicts and schedules the inbound traffic based on outbound traffic. It also provides an inbound traffic control scheme that can guarantee the successful execution of the traffic scheduling. ...|$|E
40|$|We {{present the}} S 4 R {{supplemental}} routing system {{to address the}} constraints BGP places on ISPs and <b>stub</b> <b>network</b> alike. Technical soundness and economic viability are equal first class design requirements for S 4 R. In S 4 R, ISPs announce links connecting {{different parts of the}} Internet. ISPs can selfishly price their links to attract maximal amount of traffic. Stub networks can selfishly select paths that best meet their requirements at the lowest cost. We design a variety of practical algorithms for ISP and <b>stub</b> <b>network</b> response that strike a balance between accommodating selfishness of all participants and ensuring efficient and stable operation overall. We employ large scale simulations over realistic scenarios to show that S 4 R operates at a close-to-optimal state and that it encourages broad participation from stubs and ISPs...|$|E
40|$|In this dissertation, {{we study}} methods for {{improving}} the routing performance of computer communication networks in dynamic environments. The dynamic environments we considered in this work include both network topology changes and traffic demand changes. In the first part, We propose a novel fast rerouting scheme for link state routing protocols. Link state routing protocols are widely used by today??????s ISPs on their backbone networks. The global update based rerouting of link state protocols usually takes seconds to complete which affects real time applications like Voice over IP. In our scheme, usually, only routers directly connected to failed links are involved in rerouting. For other cases, {{only a small number}} of neighboring routers are also involved. Since our scheme calculates rerouting paths in advance, rerouting can be done faster than previous reactive approaches. The computation complexity of our scheme is less than previous proactive approaches. In the second part, we study Multihoming Route Control (MRC) that is a technology used by multihomed <b>stub</b> <b>networks</b> recently. By selecting ISPs with better quality, MRC can improve routing performance of <b>stub</b> <b>networks</b> significantly. We first study the stability issue of distributed MRC and propose two methods to avoid possible oscillations of traditional MRC. The first MRC method is based on ??????optimal routing??????. The idea is to let the <b>stub</b> <b>networks</b> belonging to a same organization coordinate their MRC and thus avoid oscillations. The second method is based on ??????user-optimal routing??????. The idea is to allow MRC devices to use multiple paths for traffic to one destination network and switch traffic between paths smoothly when path quality or the traffic matrix changes. A third MRC method we propose is for MRC of traffic consisting of TCP flows of different sizes on paths with bottlenecks of limited capacity. Based on analysis of quality characteristics of bottleneck links, we propose a greedy MRC approach that works in small timescales. Simulation results show that the proposed MRC method can greatly improve routing performance for the MRC sites as well as the overall routing performance of all sites in the network...|$|R
40|$|In {{this paper}} we propose a self-addressing {{framework}} for mobile ad hoc networks (MANETs) based on the degenerated use of network address translation (NAT) where each node builds its private “address map”. In contrast to previous proposals, MANET nodes do not need to coordinate in order to generate unique (IP) addresses. This solves an important autoconfiguration problem for MANETs and fits well in cross-layering strategies for <b>stub</b> <b>networks.</b> We discuss the architectural impact of this approach in the bigger context of IP names, addresses and routability. Keywords...|$|R
40|$|Today’s Internet’s routing paths are inefficient {{with respect}} tobothconnectivityandthemarketforinterconnection. The formermanifestsitselfvianeedlesslylongpaths,de-peering, etc. Thelatter arisesbecauseofaprimitivemarketstructure {{that results in}} {{unfulfilled}} demand and unused capacity. Today’snetworksmakepairwise,myopicinterconnectiondecisions based on business considerations that may not mirror considerations of the edge networks (or end systems) that wouldbenefitfromtheexistenceofaparticularinterconnection. Thesebilateralcontractsarealso complexanddifficult to enforce. This paper proposes MINT, a market structure and routing protocol suite that facilitates the sale and purchase of end-to-endInternetpaths. We presentMINT’sstructure,explainhowitimprovesconnectivityandmarketefficiency,explore the typesofconnectivitythat mightbe exchanged(vs. today’s “best effort ” connectivity), and argue that MINT’s deployment is beneficial to both <b>stub</b> <b>networks</b> and transit providers. Wediscussresearchchallenges,includingthedesign both of the protocol that maintains information about connectivity and of the market clearing algorithms. Our preliminary evaluation shows that such a market quickly reachesequilibriumandexhibitspricestability. 1...|$|R
40|$|Abstract—By {{analyzing}} application protocols and traffic, we {{find that}} the most striking distinguish between BitTorrent (BT) -like peer-to-peer (P 2 P) applications ’ traffic and traditional as well as other P 2 P (such as Skype) applications ’ traffic of a single user may be the dissimilarity in the distribution of remote hosts involved. Therefore, we propose a method based on Discreteness of Remote Hosts (RHD) to identify BT-like traffic. In this method, traffic for each user host in a <b>stub</b> <b>network</b> need be monitored at the border of the <b>stub</b> <b>network</b> and classified into flows. At intervals concurrent TCP and UDP flows for a single host should be grouped respectively by what <b>stub</b> <b>network</b> the remote host of each flow belongs to, and then calculate instant RHDs for TCP and UDP flows respectively. For any user host, if the sum of two average RHDs {{for a period of time}} exceeds specific threshold, then we can deduce that the host has used BTlike P 2 P application. The method proposed here is a simple traffic characteristic-based traffic classification method. It is more suitable for identifying protean BT-like P 2 P application than usual content-based methods such as those based on port numbers or application signatures. Experiments results reveal that our method can effectively recognize BT-like traffic and may be particularly appropriate for use to restrict BT-like traffic during working hours if needed. Keywords-traffic identification; traffic characteristics; P 2 P; concurrent flows; discreteness of remote hosts I...|$|E
40|$|Multi-homing is {{a common}} {{practice}} among many (especially large) customer (or stub) networks. Although the purpose of multi-homing is primarily for enhanced reliability, it has also increasingly been used for load balancing and latency reduction. In this paper, we {{address the problem of}} how to perform scalable route selection in a multi-homed <b>stub</b> <b>network</b> to optimize network latency to various destinations as measured by round-trip-time (RTT). A straightforward method is to simply perform RTT measurements (e. g., using ping) to each destination via each provider and select the one with the minimum RTT as the “best ” next-hop to the destination. Is there a more scalable alternative? To answer this question, we carry out a measurementbased study to analyze the differences of RTTs in using two different providers in a multi-homed <b>stub</b> <b>network</b> to reach a large number of randomly selected destinations. Our study reveals that because of the AS hierarchy, for a large fraction of the network prefixes, the two AS paths through two providers merge in the core of the Internet. Furthermore, the router at which the two router level paths merge is actually in the AS at which the AS level paths merge. This phenomenon causes the RTT difference between the two paths through the two providers to be determined by the non-shared portion of the paths. Our study reveals that most of the two router level paths through the two upstream providers merge at the AS at which the two AS level paths merge. Based on this finding, we devise a scalable route (next-hop provider) selection algorithm using BGP information in a multi-homed <b>stub</b> <b>network.</b> We also present a preliminary evaluation...|$|E
40|$|AbstractFast flux {{networks}} {{represent a}} special type of botnets {{that are used}} to provide highly available web services to a backend server, which usually hosts malicious content. Detection of fast flux networks continues to be a challenging issue because of the similar behavior between these networks and other legitimate infrastructures, such as CDNs and server farms. This paper proposes Fast Flux Watch (FF-Watch), a mechanism for online detection of fast flux agents. FF-Watch is envisioned to exist as a software agent at leaf routers that connect stub networks to the Internet. The core mechanism of FF-Watch is based on the inherent feature of fast flux networks: flux agents within stub networks take the role of relaying client requests to point-of-sale websites of spam campaigns. The main idea of FF-Watch is to correlate incoming TCP connection requests to flux agents within a <b>stub</b> <b>network</b> with outgoing TCP connection requests from the same agents to the point-of-sale website. Theoretical and traffic trace driven analysis shows that the proposed mechanism can be utilized to efficiently detect fast flux agents within a <b>stub</b> <b>network...</b>|$|E
40|$|This paper {{presents}} {{a simple and}} robust mechanism called SYN-dog to sniff SYN flooding sources. We install SYN-dog as a software agent at leaf routers that connect <b>stub</b> <b>networks</b> to the Internet. The statelessness and low computation overhead of SYN-dog make itself immune to any flooding attacks. The core mechanism of SYN-dog {{is based on the}} protocol behavior of TCP SYN [...] -SYN/ACK pairs, and is an instance of the Sequential Change Detection [1]. To make SYN-dog insensitive to site and access pattern, a non-parametric Cumulative Sum (CUSUM) method [4] is applied, thus making SYNdog much more generally applicable and its deployment much easier. Due to its proximity to the flooding sources, SYN-dog can trace the flooding sources without resorting to expensive IP traceback...|$|R
50|$|Static routing {{is a form}} of routing {{that occurs}} when a router uses a manually-configured routing entry, rather than {{information}} from a dynamic routing traffic. In many cases, static routes are manually configured by a network administrator by adding in entries into a routing table, though this may not always be the case. Unlike dynamic routing, static routes are fixed and do not change if the network is changed or reconfigured. Static routing and dynamic routing are not mutually exclusive. Both dynamic routing and static routing are usually used on a router to maximise routing efficiency and to provide backups in the event that dynamic routing information fails to be exchanged. Static routing can also be used in <b>stub</b> <b>networks,</b> or to provide a gateway of last resort.|$|R
40|$|Real-time {{communications}} services over the Internet {{need a new}} architecture to meet their required quality. From a viewpoint of quality of service provisioning architecture, the Internet can mainly be divided into three types of subnetworks: domain networks, access <b>networks,</b> and <b>stub</b> <b>networks.</b> In this article we focus on issues arising in the former two networks for end-to-end QoS provisioning. First, the access networks are of rather low-speed links, so delay is still of major concern. We examine the statistical delay bound through numerical results derived from our analysis. Schemes to reduce delay are proposed, and their performance is evaluated. Next, domain networks {{are likely to be}} of very high-speed links, which can accommodate a huge number of voice flows of low bit rates. Thus, effective flow management will be of major concern because per-flow management is a very costly proposition. Therefore, we pay attention to a flow aggregation scheme, and evaluate its performance by analyzing its blocking probabilit...|$|R
40|$|In this paper, {{we take a}} {{fresh look}} at stub-site {{multihoming}} within the paradigms of an identifier/locator split architecture. More specifically, we investigate the possibility of enabling multi-homed <b>stub</b> <b>network</b> sites to improve the performance of their end-to-end TCP flows by leveraging the path diversity of the underlying network. We design a host-network co-operative mechanism for end-to-end flow path switching based on reliable transport layer protocol “hints ” indicating probable path problems. Our evaluations of actual Internet routing data strongly suggest significant degree of path diversity across path switches available to multihomed stub networks, even within the restricted precincts of inter-domain policy routing. Additionally, we also address the problems of global routing scalability and inbound traffic engineering control as pertaining to stub-site multihoming...|$|E
40|$|Multihoming {{technology}} {{can be traced back}} to the 1980 s or even earlier, but it seldom drew much attention from the research community. Recently, with the explosive deployment of multihoming on the Internet, researchers have started to investigate the issues that were raised by multi-homing networks. This article draws an overall picture of multihoming technology, presents current research on multi-homing networks, and discusses the issues that must be studied in the future. Astub network refers to a network that conveys traffic only to or from its local hosts. Stub networks never carry traffic for which they are neither the source nor the destination. Traditionally, most stub networks have only one connection to the Internet [1]. If this connection fails, the <b>stub</b> <b>network</b> becomes disconnected, and users of the network suffer long delays. To achieve reliability and redundancy, some companie...|$|E
40|$|We {{present a}} system for {{defending}} against Distributed Denial of Service (DDoS) attacks. DDoS attacks are treated as a congestioncontrol problem, where the main issue is identifying the subset of traffic, which we call an aggregate, responsible for the congestion. Functionality is added to routers that helps relieve congestion caused by aggregates that do not obey TCP-like congestion control. Such aggregates are identified, usually at an access router or <b>stub</b> <b>network,</b> and preferentially dropped. Also, requests to preferentially drop the identified aggregates are back-propagated toward {{the sources of the}} traffic, in order to enhance service to well-behaved flows that may be sharing links with the bad traffic. We have implemented this approach under FreeBSD, and we have shown promising results for how such a system could be incorporated in core routers. 1 Introduction Distributed Denial of Service (DDoS) attacks are becoming an increasingly frequent disturbance of the global Internet. T [...] ...|$|E
40|$|We analyze 3 million TCP {{connections}} {{that occurred during}} 15 wide-area traffic traces. The traces were gathered at five "stub" networks and two internetwork gateways, providing a diverse look at wide-area traffic. We derive analytic models describing the random variables associated with telnet, nntp, smtp, and ftp connections. To assess these models we present a quantitative methodology for comparing their effectiveness with that of empirical models such as Tcplib [DJ 91]. Our methodology also allows us to determine which random variables show significant variation from site to site, over time, or between <b>stub</b> <b>networks</b> and internetwork gateways. Overall {{we find that the}} analytic models provide good descriptions, and generally model the various distributions as well as empirical models. 1 Introduction In the last few years a number of papers have appeared giving statistical summaries of wide-area traffic on a per-protocol basis [C 89, H 90, CW 91, WLC 92, DHS 93], an important first step to [...] ...|$|R
40|$|DoS {{attacks have}} least impact when mitigated {{close to the}} attacks' source. This is more {{important}} for Distributed DoS (DDoS) attacks since they are difficult to road Hudson, NH zipmitigate at the victim without affecting service to legitimate flows. This is a challenging task since DDoS attack traffic may have relatively low flow rates and attack packets are indistinguishable from legitimate packets. Current source-end detection schemes such as MULTOPS and D-WARD are centralized and hence, are not easily deployable in multi-gateway <b>stub</b> <b>networks</b> with asymmetric traffic. We present a scalable, distributed DDoS detection system that can be deployed in single- as well as multi-homed <b>stub</b> <b>networks</b> to detect DDoS attacks using TCP packets. The detection system can detect attacks with very low flow rates and in multi-gateway networks, even with significant asymmetric TCP flows. We evaluate the performance of our detection system using extensive packet level simulations under different attack scenarios. Our results show that with relatively less node state and processing, in networks with symmetric flows, our system can accurately detect attack flows that are one-third the intensity of an average flow in the network. In the case of multi-gateway networks, the detection system can detect all attacks for all rates of asymmetry when the attack rate is {{at least five times}} the average flow rate in the network. We extend the system to detect attacks aimed at multiple hosts in a subnet instead of a single host. Subnet attacks seem more diffused for detection schemes designed to detect host attacks. Hence, it is harder for these schemes to detect these attacks. Our subnet attack detection scheme can detect attacks that target hosts in large subnets (/ 21) and in the presence of non-attack traffic to other hosts in the subnet. Our packet level simulations show that, in single gateway networks, our scheme can detect attacks with an aggregate flow intensity equal to an average flow in the network in less than a minute. Using these simulations, we also show that our scheme detects attacks in networks with up to four gateways and when up to 50 % of the flows are asymmetric...|$|R
40|$|Abstract — Recent {{measurements}} {{show that}} BGP peering links can fail {{as frequently as}} intradomain links and usually for short periods of time. We propose a new fast-reroute technique where routers are prepared to react quickly to interdomain link failures. For each of its interdomain links, a router precomputes a protection tunnel, i. e. an IP tunnel to an alternate nexthop which can reach the same destinations as via the protected link. We propose a BGP-based auto-discovery technique that allows each router to learn the candidate protection tunnels for its links. Each router selects the best protection tunnels for its links and when it detects an interdomain link failure, it immediately encapsulates the packets to send them through the protection tunnel. Our solution is applicable for the links between large transit ISPs and also for the links between multi-homed <b>stub</b> <b>networks</b> and their providers. Furthermore, we show that transient forwarding loops (and thus the corresponding packet losses) can be avoided during the routing convergence that follows the deactivation of a protection tunnel in BGP/MPLS VPNs and in IP networks using encapsulation. I...|$|R
40|$|In this paper, we {{characterize}} wide-area network {{applications that}} use the TCP transport protocol. We also describe {{a new way to}} model the wide-area traffic generated by a <b>stub</b> <b>network.</b> We believe the traffic model presented here will be useful in studying congestion control, routing algorithms, and other resource management schemes for existing and future networks. Our model is based on trace analysis of TCP/IP widearea internetwork traffic. We collected the TCP/IP packet headers of USC, UCB, and Bellcore networks at the point they connect with their respective regional access networks. We then wrote a handful of programs to analyze the traces. Our model characterizes individual TCP conversations by the distributions of: number of bytes transferred, duration, number of packets transferred, packet size, and packet interarrival time. Our trace analysis shows that both interactive and bulk transfer traffic from all sites reflect a large number of short conversations. Similarly, it shows [...] ...|$|E
40|$|Many past {{systems have}} {{explored}} how to eliminate redundant transfers from network links and improve network efficiency. Several {{of these systems}} operate at the application layer, while the more recent systems operate on individual packets. A common aspect of these systems is that they apply to localized settings, e. g. at <b>stub</b> <b>network</b> access links. In this paper, we explore the benefits of deploying packet-level redundant content elimination as a universal primitive on all Internet routers. Such a universal deployment would immediately reduce link loads everywhere. However, we argue that far more significant network-wide benefits can be derived by redesigning network routing protocols to leverage the universal deployment. We develop ?redundancy-aware? intra- and inter-domain routing algorithms and show that they enable better traffic engineering, reduce link usage costs, and enhance ISPs? responsiveness to traffic variations. In particular, employing redundancy elimination approaches across redundancy-aware routes can lower intra and inter-domain link loads by 10 - 50 %. We also address key challenges that may hinder implementation of redundancy elimination on fast routers. Our current software router implementation can run at OC 48 speeds...|$|E
40|$|JSPS 163 rd Committee on Internet Technology / 第 40 回インターネット技術第 163 委員会研究会 -ITRC meet 40 -We {{consider}} fine-grained {{traffic control}} on the ingress router in a tree-structured <b>stub</b> <b>network</b> site based on the source and/or destination IP address and/or port of each packet. We have evaluated packet forwarding rate according {{to the number of}} rules in iptables hashlimit. It is one solution for fairly use of network bandwidth to limit traffic forward rate with fine-grained condition in the ingress router. On a conventional hardware router, it is difficult to set up individual rules for a number of hosts in the network because of the resource restriction of the router. On the other hand, it is possible to set up as many rules as the memory resource allows on a software router, but {{it is not easy to}} maintain traffic forwarding rate. We aim to realize fair use of network bandwidth by setting up rate limit rules for all host in the network site at the ingress router with using software router. あらましネットワーク上の経路であるルータで細かい条件で帯域制御を行うことは, 公平な帯域の利用を実現する手段の一つである. 従来のハードウェア実装のネットワーク機器では, ネットワーク内のサーバに個別にルールを設定することが, リソース上の制約からホストの数が増えるにつれて難しくなる. 一方でソフトウェア実装のものでは, リソースを大量に搭載できるため, ホストごとに個別にルールを設定することが可能であるが, ルールの行数が膨大になると, 高速に処理することが難しくなる. 本研究では, ソフトウェアルータを用いて, ネットワークの入口のルータにネットワーク内の全てのサーバに対する帯域制限を行うことで, トラフィック量の多い通信の元でもサービスの公平な利用を実現することを目指し､ 既存のソフトウェア処理で帯域制御を行えるiptables hashlimitのルール数に対するパケット転送性能の評価を行った...|$|E
40|$|An {{increasing}} number of ASes have been connecting to the Internet through the BGP inter-domain routing protocol. With increasing stress {{on the scale of}} this system and increasing reliance on Internet connectivity, more participants demand additional functionality from interdomain routing that BGP cannot handle. For example, we believe that the recent trend towards multihomed <b>stub</b> <b>networks</b> exhibits a likely intent to achieve fault tolerant and load balanced connectivity to the Internet. However, BGP today offers route fail-over times as long as 15 minutes, and very limited control over incoming traffic across multiple wide area paths. More research literature and news media are calling for stemming malicious or erroneous routing announcements. We propose a policy control architecture, OPCA, that runs as an overlay network on top of BGP. OPCA allows an AS to make route change requests at other, remote ASes to achieve faster route fail-over and provide capabilities to control traffic entering the local AS. The proposed architecture and protocol will co-exist and interact with the existing routing infrastructure and will allow for a scalable rollout of the protocol...|$|R
40|$|We have {{designed}} an agent-based architecture for quantitative service provisioning in di�erentiated services capable networks. For each link-state routing domain {{in the network}} there is a topology-aware QoS agent �also known as a bandwidth broker � responsible for admission control. The architecture provides resource reservations for aggregated virtual leased lines between network domains. In this paper, we present performance measurements for resource provisioning in a prototype QoS agent. This includes an evaluation of two data structures for advance reservations and accompanying algorithms. We also compare the cost for on-demand route computations with pre-computation of routes. The objective in {{this paper is to}} evaluate the performance of end-to-end admission control within a single link-state routing domain. In a domain with 15 routers, 28 transition <b>networks</b> and 64 <b>stub</b> <b>networks,</b> our prototype performs approximately 25 000 end-to-end admission decisions per second. The results show that an ordinary PC can be used for running a QoS agent that performs path-sensitive admission control and maintains perlink resource reservations in a link-state routing domain. ...|$|R
40|$|We {{first show}} by {{measurements}} that BGP peering links fail {{as frequently as}} intradomain links and usually for short periods of time. We propose a new fast-reroute technique where routers are prepared to react quickly to interdomain link failures. For each of its interdomain links, each router precomputes a protection tunnel, i. e. an IP tunnel to an alternate nexthop which can reach the same destinations as via the protected link. We propose a BGP-based auto-discovery technique that allows each router to learn the candidate protection tunnels for its links. Each router selects the best protection tunnels for its links and when it detects an interdomain link failure, it immediately encapsulates the packets to send them through the protection tunnel. Our solution is applicable for the links between large transit ISPs and also for the links between multi-homed <b>stub</b> <b>networks</b> and their providers. Furthermore, we show that transient forwarding loops (and thus the corresponding packet losses) can be avoided during the routing convergence that follows the deactivation of a protection tunnel in BGP/MPLS VPNs and in IP networks using encapsulation...|$|R
40|$|Abstract—The BGP routing {{system is}} {{inflexible}} and suboptimal for both stub networks and ISPs. Stub networks {{are unable to}} obtain routes that meet their end-to-end requirements, and ISPs have limited flexibility in controlling their revenues and offering new services to a wide customer base. We present the S 4 R supplemental routing system to address these shortcomings. Technical soundness and economic viability are equal first class design requirements for S 4 R. In S 4 R, ISPs announce links connecting {{different parts of the}} Internet. ISPs can selfishly price their links to attract maximal amount of traffic. Stub networks can selfishly select paths that best meet their requirements at the lowest cost. We design a variety of practical algorithms for ISP and <b>stub</b> <b>network</b> response that strike a balance between accommodating the (selfish) objectives of all participants and ensuring efficient and stable operation overall. We employ large scale simulations of realistic scenarios to show that S 4 R operates at a close-to-optimal state and that it encourages broad participation from stubs and ISPs. We describe a prototype implementation using OpenFlow and show that it can support S 4 R effectively. I...|$|E
40|$|We {{propose a}} {{percolation}} based M 2 M networking architecture and its data transmission method. The proposed network architecture can be server-free and router-free, which {{allows us to}} operate routing efficiently with percolations based on six degrees of separation theory in small world network modeling. The data transmission {{can be divided into}} two phases: routing and data transmission phases. In the routing phase, probe packets will be transmitted and forwarded in the network thus multiple paths are selected and performed based on the constriction of the maximum hop number. In the second phase, the information will be encoded, say, with the fountain codes, and transmitted using the paths generated in the first phase. In such a way, an efficient routing and data transmission mechanism can be built, which allow us to construct a low-cost, flexible and ubiquitous network. Such a networking architecture and data transmission can be used in many M 2 M communications, such as the <b>stub</b> <b>network</b> of internet of things, and deep space networking, and so on. Comment: 15 pages, 7 figures. We propose a percolation based routing and data transmission method for the M 2 M network, which consists of routing phase and transmission phases. In the routing phase, probes packets are transmitted and flowed in the network, multiple paths are built to form a route. After that, the data file will be fountain encoded and the transmitte...|$|E
40|$|Statistical {{analysis}} of network intrusions {{has been an}} active topic for researches for many years. However, due to the complexity and security concerns associated with the Internet, this area of research remains challenging, from the monitored networks and methodology used to {{the focus of the}} analysis and presentation of the results. This paper aims to provide additional insight into this area by analysing a set of IDS alarms collected over a period of three months from the external interface of the edge router at the University of Plymouth. The motivation {{of this study is to}} quantitatively classify and understand the nature of current Internet threats, as observed at a medium <b>stub</b> <b>network,</b> leading to long-term {{analysis of}} trends and recurring patterns of attacks. In the study, fundamental features of intrusions activities are investigated through a number of characteristics, from the daily volume of intrusion attempts to the source/destination of the intrusion attempts as well as the specific attack type. The results of the study show high levels and wide variety of intrusion attempts. It also shows that the attacks reflect daily timescales and the on/off patterns exhibit recurrence of correlated behaviours. Furthermore, the Slammer worm appears to feature on the Internet long after its original release. Deeper investigation reveals that the sources of attacks spread uniformly, apart from a large proportion of intrusions generated by a small number of IP addresses located in China...|$|E
5000|$|Type 9 - a link-local [...] "opaque" [...] LSA (defined by RFC2370) in OSPFv2 and the Intra-Area-Prefix LSA in OSPFv3. It is the OSPFv3 LSA that {{contains}} prefixes for <b>stub</b> and transit <b>networks</b> in the link-state ID.|$|R
40|$|Current {{solutions}} to communication in mobile ad hoc networks (MANETs) {{are based on}} the use of IP addresses. These approaches identify the nodes involved in data transmission through the same type of address used in traditional wired networks. However, IP addresses do not carry the same meaning in MANETs as in wired networks, where routing protocols can reduce the routing effort {{based on the assumption that}} <b>stub</b> <b>networks</b> are physically static. In MANETs, where currently similar routing protocols are used to determine routes to individual nodes, IP addresses as a basis for routing decisions represent a poor choice, because nodes in these networks are assumed to be highly mobile. We argue that a structured Peer-to-Peer (P 2 P) protocol that is aware of the proximity between nodes represents a viable alternative to IP in MANETs. Our approach replaces IP ad- dresses in favour of a service-oriented structured P 2 P identifiers that exploits a node’s proximity-awareness in order to form physically-close clusters. In this paper, we describe the design of our routing protocol, called APSALAR, and discuss its features in comparison to existing approaches...|$|R
40|$|Abstract — Multihoming {{has been}} used by <b>stub</b> <b>networks</b> for several years as a form of redundancy, {{improving}} the availability of Internet access. More recently, Intelligent Route Control (IRC) products allow multihomed networks to dynamically switch parts of their egress or ingress traffic between ISPs, also improving cost and performance. IRC products assume that the set of upstream ISPs is given and fixed. Typically, however, a multihomed network has several ISP choices and the actual selection of ISPs can significantly affect cost, availability, and performance. In {{the first part of this}} work, we develop a methodology to select the best set of upstream ISPs, optimizing monetary cost and availability. Our results, based on measurements of actual Internet traffic and topology, show that the proposed algorithm selects the best possible set of ISPs in terms of resiliency to inter-AS single-link failures. The algorithm also performs well in the presence of double or triple link failures. In the second part of this work, we focus on the egress path selection problem. Specifically, we propose a stochastic search algorithm, based on simulated annealing, to allocate the network’s egress traffic between upstream ISPs. The objectives are to minimize cost, also ensuring that the selected paths to the major destinations of egress traffic are congestion-free. Simulation results show that the proposed algorithm performs very well in meeting the previous objectives, when congestion-free paths exist...|$|R
