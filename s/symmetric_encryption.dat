749|257|Public
25|$|PGP {{can be used}} to send {{messages}} confidentially. For this, PGP combines symmetric-key encryption and public-key encryption. The message is encrypted using a <b>symmetric</b> <b>encryption</b> algorithm, which requires a symmetric key. Each symmetric key is used only once and is also called a session key. The message and its session key are sent to the receiver. The session key must be sent to the receiver so they know how to decrypt the message, but to protect it during transmission it is encrypted with the receiver's public key. Only the private key belonging to the receiver can decrypt the session key.|$|E
25|$|The {{connection}} is private (or secure) because symmetric cryptography {{is used to}} encrypt the data transmitted. The keys for this <b>symmetric</b> <b>encryption</b> are generated uniquely for each connection and {{are based on a}} shared secret negotiated {{at the start of the}} session (see TLS handshake protocol). The server and client negotiate the details of which encryption algorithm and cryptographic keys to use before the first byte of data is transmitted (see Algorithm below). The negotiation of a shared secret is both secure (the negotiated secret is unavailable to eavesdroppers and cannot be obtained, even by an attacker who places themselves in the middle of the connection) and reliable (no attacker can modify the communications during the negotiation without being detected).|$|E
25|$|Previous {{modifications}} to the original protocols, like False Start (adopted and enabled by Google Chrome) or Snap Start, reportedly introduced limited TLS protocol downgrade attacks or allowed {{modifications to}} the cipher suite list sent by the client to the server. In doing so, an attacker might succeed in influencing the cipher suite selection {{in an attempt to}} downgrade the cipher suite negotiated to use either a weaker <b>symmetric</b> <b>encryption</b> algorithm or a weaker key exchange. A paper presented at an Association for Computing Machinery (ACM) conference on computer and communications security in 2012 demonstrated that the False Start extension was at risk: in certain circumstances it could allow an attacker to recover the encryption keys offline and to access the encrypted data.|$|E
5000|$|<b>Symmetric</b> data <b>encryption</b> key: These {{keys are}} used with {{symmetric}} key algorithms to apply confidentiality protection to information.|$|R
40|$|Recently, chaos has {{attracted}} much attention {{in the field of}} cryptography. To study the security with a known image of a <b>symmetric</b> image <b>encryption</b> scheme, the attack algorithm of equivalent key is given. We give the known image attacks under different other conditions to obtain the equivalent key. The concrete step and complexity of the attack algorithm is given. So the <b>symmetric</b> image <b>encryption</b> scheme based on 3 D chaotic cat maps is not secure...|$|R
40|$|Abstract- Encryption is {{a process}} of {{generating}} secrect text from the input text using a secret key and a encryption algorithm. Input text is refered to as plain text and the secret text generated is known as cipher text. Encryption algorithms are mainly divided into two categories which are <b>symmetric</b> key <b>encryption</b> algorithm and asymmetric key <b>encryption</b> algorithm. In <b>Symmetric</b> key <b>encryption</b> algorithm the same key is used by both sender and receiver but in asymmetric key algorithm sender and receiver both uses the different keys. In this paper, we present a technique based on <b>symmetric</b> key <b>encryption</b> algorithm which uses ASCII vales of input text to encrypt the data. Text data encryption techniques are very useful in data communication where one user want to send some secret messages to another users...|$|R
2500|$|Support for and default use of AES-256 <b>symmetric</b> <b>encryption</b> {{algorithm}} for all EFS-encrypted files ...|$|E
2500|$|Windows EFS {{supports}} {{a range of}} <b>symmetric</b> <b>encryption</b> algorithms, depending on the version of Windows in use when the files are encrypted: ...|$|E
2500|$|EFS {{works by}} {{encrypting}} a file with a bulk symmetric key, {{also known as}} the File Encryption Key, or FEK. It uses a <b>symmetric</b> <b>encryption</b> algorithm because it takes less time to encrypt and decrypt large amounts of data than if an asymmetric key cipher is used. [...] The <b>symmetric</b> <b>encryption</b> algorithm used will vary depending on the version and configuration of the operating system; see Algorithms used by Windows version below. [...] The FEK (the symmetric key that is used to encrypt the file) is then encrypted with a public key that is associated with the user who encrypted the file, and this encrypted FEK is stored in the $EFS alternate data stream of the encrypted file. To decrypt the file, the EFS component driver uses the private key that matches the EFS digital certificate (used to encrypt the file) to decrypt the symmetric key that is stored in the $EFS stream. The EFS component driver then uses the symmetric key to decrypt the file. Because the encryption & decryption operations are performed at a layer below NTFS, it is transparent to the user and all their applications.|$|E
40|$|Abstract—Recently, chaos has {{attracted}} much attention {{in the field of}} cryptography. To study the security with a known image of a <b>symmetric</b> image <b>encryption</b> scheme, the attack algorithm of equivalent key is given. We give the known image attacks under different other conditions to obtain the equivalent key. The concrete step and complexity of the attack algorithm is given. So the <b>symmetric</b> image <b>encryption</b> scheme based on 3 D chaotic cat maps is not secure. Index Terms—Cryptanalysis; Equivalent key attac...|$|R
40|$|Abstract. In these {{lecture notes}} we survey {{the state of}} the art in <b>symmetric</b> key <b>encryption,</b> in {{particular}} in the block ciphers and stream ciphers area. The area of <b>symmetric</b> key <b>encryption</b> has been very active in the last five years due to growing interest from academic and industry research, standardization efforts like AES, NESSIE and CRYPTREC, as well as due to ease of government control over export of cryptography. Keywords: Block ciphers, stream ciphers, cryptanalysis, design, AES, NESSIE, CRYPTREC, STORK, E-CRYPT...|$|R
30|$|As a {{ubiquitous}} {{phenomenon in}} nature, chaos {{is a kind}} of deterministic random-like process generated by nonlinear dynamical systems. Chaotic dynamical systems possess the following main characteristics: sensitivity to tiny changes in initial conditions, random-like behavior, ergodicity, unstable periodic orbits, desired diffusion and confusion properties, and one-way property. Due to these properties, chaotic systems have become a very good candidate for use in the field of cryptography. The existing related research progress includes chaos-based <b>symmetric</b> <b>encryptions</b> [1 – 7], security protocols [8, 9], asymmetric encryptions [10, 11], and hash functions [12 – 18].|$|R
2500|$|... "Cryptophon" [...] (or [...] "Cryptofon") was {{the name}} Floricic chose for his {{prototype}} of an ISDN telephone with integrated voice encryption. It {{was created in the}} winter term 1997–1998 as part of his diploma thesis, titled [...] "Realisierung einer Verschlüsselungstechnik für Daten im ISDN B-Kanal" [...] (German, meaning, [...] "Implementation of Cryptography for Data contained in the ISDN Bearer channel"), [...] at the Technische Fachhochschule Berlin. Floricic focused on making the Cryptophon cheap and easy to build for hobbyists. The phone encrypts telephone calls using the <b>symmetric</b> <b>encryption</b> algorithm IDEA. As IDEA is patented, the cipher was implemented on a replaceable daughter module which would have allowed the user to exchange IDEA for another (probably patent-unencumbered) algorithm. In addition, the system was about to be supplemented with a key exchange protocol based on the asymmetric algorithm RSA in order to achieve security against compromised remote stations.|$|E
2500|$|One {{of these}} techniques, known as secret sharing made short, {{combines}} Rabin's information dispersal algorithm (IDA) with Shamir's secret sharing. [...] Data is first encrypted with a randomly generated key, using a <b>symmetric</b> <b>encryption</b> algorithm. [...] Next this data is split into N pieces using Rabin's IDA. [...] This IDA is configured with a threshold, {{in a manner}} similar to secret sharing schemes, but unlike secret sharing schemes the size of the resulting data grows by a factor of (number of fragments / threshold). [...] For example, if the threshold were 10, and the number of IDA-produced fragments were 15, the total size of all the fragments would be (15/10) or 1.5 times the size of the original input. [...] In this case, this scheme is 10 times more efficient than if Shamir's scheme had been applied directly on the data. [...] The final step in secret sharing made short is to use Shamir secret sharing to produce shares of the randomly generated symmetric key (which is typically on the order of 16–32 bytes) and then give one share and one fragment to each shareholder.|$|E
2500|$|In 1996, thirty-nine {{countries}} {{signed the}} Wassenaar Arrangement, an arms control treaty {{that deals with}} the export of arms and [...] "dual-use" [...] technologies such as cryptography. The treaty stipulated {{that the use of}} cryptography with short key-lengths (56-bit for <b>symmetric</b> <b>encryption,</b> 512-bit for RSA) would no longer be export-controlled. Cryptography exports from the US became less strictly regulated as a consequence of a major relaxation in 2000; there are no longer very many restrictions on key sizes in US-exported mass-market software. Since this relaxation in US export restrictions, and because most personal computers connected to the Internet include US-sourced web browsers such as Firefox or Internet Explorer, almost every Internet user worldwide has potential access to quality cryptography via their browsers (e.g., via Transport Layer Security). The Mozilla Thunderbird and Microsoft Outlook E-mail client programs similarly can transmit and receive emails via TLS, and can send and receive email encrypted with S/MIME. Many Internet users don't realize that their basic application software contains such extensive cryptosystems. These browsers and email programs are so ubiquitous that even governments whose intent is to regulate civilian use of cryptography generally don't find it practical to do much to control distribution or use of cryptography of this quality, so even when such laws are in force, actual enforcement is often effectively impossible.|$|E
30|$|In recent years, the {{research}} of a <b>symmetric</b> searchable <b>encryption</b> mechanism mainly focuses on the performance improvement, security optimization, and function expansion of the scheme, and has achieved remarkable achievements.|$|R
30|$|In 2013, Kurosawa {{and others}} {{proposed}} an efficient and verifiable <b>symmetric</b> searchable <b>encryption</b> scheme. Record Y[*]=[*]PY 1,[*]Y 2,[*]⋯,[*]Yn {{is a set}} of files, C[*]=[*]c 1,[*]c 2,[*]⋯,[*]cm {{is a set of}} keywords, and Index[*]=[*]ei, j is a 0, 1 matrix of m[*]×[*]n to indicate whether the keyword is in file Yj. PRFKey[*]:[*] 0,[*] 1 l[*]×[*] 0,[*] 1 ∗ is a pseudo-random function where Key is the key. SKE[*]=[*](F,[*]J,[*]J− 1) is a set of <b>symmetric</b> key <b>encryption</b> scheme, where F is the key generation algorithm, J and J− 1 are encryption and decryption algorithm respectively. MAC_Key_m is the label generation algorithm for message authentication, Keym is the secret key.|$|R
30|$|From Kurosawa and Ohtaki in “secure search {{symmetric}} encryption”, financial cryptography {{and data}} security, a verifiable <b>symmetric</b> searchable <b>encryption</b> scheme (VSSE) is proposed to resist active attack. But {{we use it}} flexibly in the medical cloud, then we propose a fuzzy keyword <b>symmetric</b> searchable <b>encryption</b> scheme. The search index of medical data is constructed by inverted matrix to ensure that medical personnel and patients can search the encrypted medical data safely, in which the index of each medical data file has a corresponding keyword. The user or other medical staff can find the index of the required medical data file, that is, {{the location of the}} file.|$|R
50|$|All ZeroTier {{traffic is}} {{encrypted}} end-to-end using the Salsa20 stream cipher for <b>symmetric</b> <b>encryption</b> and the Poly1305 MAC algorithm for packet authentication. <b>Symmetric</b> <b>encryption</b> keys are generated via elliptic curve Diffie-Hellman key exchange. Private keys are never transmitted to ZeroTier servers {{or to any}} other third party.|$|E
5000|$|<b>Symmetric</b> <b>encryption</b> {{and message}} {{authentication}} [...] material construction ...|$|E
5000|$|This flaw {{does not}} {{preclude}} the algorithm's use as a mixed private-key/public-key algorithm, if the sender transmits [...] secretly, but this approach presents no advantage over the common approach of transmitting a <b>symmetric</b> <b>encryption</b> key using a public-key encryption scheme and then switching to <b>symmetric</b> <b>encryption,</b> which is faster than Cayley-Purser.|$|E
40|$|International audienceSearchable {{encryption}} is {{a promising}} primitive {{in the context}} of outsourced data storage and in particular cloud computing. Current constructions lack searching capabilities beyond exact search on keywords and are thus less efficient than plaintext algorithm that take into account the meaning and return results corresponding to semantically close keywords. We thus advocate for the need of semantic search over encrypted data. We study {{the state of the art}} in stemming algorithms and in searchable encryption and propose the first semantic <b>symmetric</b> searchable <b>encryption</b> constructions. This improvement over searchable encryption has similar security as the prior work of Curtmola et al. on <b>symmetric</b> searchable <b>encryption...</b>|$|R
5000|$|Proxy re-encryption schemes {{are similar}} to {{traditional}} <b>symmetric</b> or asymmetric <b>encryption</b> schemes, {{with the addition of}} two functions: ...|$|R
40|$|This study {{discusses}} {{specifically the}} encryption mechanism that maintains {{the integrity of}} the game data on online games. The {{purpose of this study is}} to implement <b>symmetric</b> key <b>encryption</b> and checksum for score calculation. There are two methods conducted in this study: analysis and design. The analysis method is performed in two ways: analysis of existing systems and analysis of literature study. System design method used is prototyping. The results obtained are implemented on online game competition ‘Expedisi Indosat’ through Facebook from 3 – 30 July 2011. The implementation of <b>symmetric</b> key <b>encryption</b> mechanism and the checksum is useful to maintain data integrity on games especially the results score when the game is running and when there is data transmission from the client to the server. </p...|$|R
5000|$|... program encrypts data using OTRK and a <b>symmetric</b> <b>encryption</b> method ...|$|E
5000|$|Support for and default use of AES-256 <b>symmetric</b> <b>encryption</b> {{algorithm}} for all EFS-encrypted files ...|$|E
5000|$|Brute-force attack: If {{the data}} is not {{adequately}} encrypted {{it is still possible}} to decrypt the information through brute force. Quantum computing will potentially speed up a brute force attack. However, quantum computing is less effective against <b>symmetric</b> <b>encryption</b> than public-key encryption. Assuming the use of <b>symmetric</b> <b>encryption,</b> the fastest possible attack is Grover's algorithm, which can be mitigated by using larger keys.|$|E
5000|$|The here {{described}} encryption {{scheme is}} based on a common hybrid version of the ElGamal encryption, where the secret key [...] is obtained by an asymmetric public key system and then the message is encrypted with a <b>symmetric</b> key <b>encryption</b> method Alice and Bob agreed to.|$|R
40|$|IEEE Beijing Section; Shanghai Jiaotong University; Beijing University of Posts and Telecommunications; North China Electric Power University; Xiamen UniversityIn a publish/subscribe (pub/sub) system, {{information}} (referred to as events) {{published by}} publishers and interests submitted by subscribers {{are sent to}} the network, which conducts matching between events and interests, and only delivers those events satisfying the interests. When the pub/sub infrastructure is untrusted, it is often desirable to keep both events and interests secret from the pub/sub network. In this paper, we formulate this goal as the private subscription problem. We then describe cryptographic schemes {{to solve this problem}} in some types of publish/subscribe systems. T he algorithms we present are efficient in that they are based on <b>symmetric</b> <b>encryptions</b> requiring O(n) cipher operations for a message of length n. © 2010 IEEE...|$|R
40|$|In this paper, we {{proposed}} a new encryption algorithm called KIST. This algorithm uses an asynchronous key sequence and a splay tree. It is very efficient in the usage of both space and time. Some elementary security tests have been done. Key words asynchronous key sequence, splay tree, <b>symmetric</b> key <b>encryption...</b>|$|R
5000|$|Alice {{uses the}} agreed upon <b>symmetric</b> <b>encryption</b> method with key [...] to decrypt , {{resulting}} in the original message [...]|$|E
50|$|As {{a general}} rule, modern <b>symmetric</b> <b>encryption</b> {{algorithms}} such as AES use key lengths of 128, 192 and 256 bits.|$|E
50|$|The Naor-Reingold {{function}} {{can be used}} as {{the basis}} of many cryptographic schemes including <b>symmetric</b> <b>encryption,</b> authentication and digital signatures.|$|E
40|$|Anonymous {{networks}} enable entities to send 	messages without disclosing their identities. Many 	anonymous networks {{had been}} proposed already, such as 	Mixnet, DC-net, Crowds, etc., however, {{they still have}} 	serious drawbacks. Namely, they require tremendous 	computation overheads to transmit messages over networks. 	That is because asymmetric key encryption algorithms are 	used. This paper proposes ESEBM (Enhanced <b>Symmetric</b> 	Key <b>Encryption</b> based Mixnet), a new mechanism for 	anonymous communication that removes drawbacks of 	existing anonymous networks while exploiting <b>symmetric</b> 	key <b>encryption</b> algorithms. According to experimentations, 	throughput of ESEBM is about 1 / 4. 4 of usual 	non-anonymous networks, and it achieves more than 36 	times higher throughput compared withMixnet. In addition, 	different from existing anonymous networks, ESEBM can 	handle reply messages without any additional mechanism, 	and it can protect itself from various threats, e. g. DOS 	attacks and message forgeries...|$|R
30|$|In {{order to}} resist this {{stronger}} adversary, this paper proposes a verifiable <b>symmetric</b> search <b>encryption</b> scheme, in which medical personnel or patients can verify the search {{behavior of the}} Vsse. The Vsse scheme consists of five algorithms (keygen, pre-process, Querygen, Search, verify), and the keygen algorithm is the key generation algorithm, no longer repeat.|$|R
30|$|Define 1 <b>Symmetric</b> {{searchable}} <b>encryption</b> five tuples: (1) Key[*]=[*]KeyGen(ξ), security parameters ξ, output randomly generated key Key, (2) (λ,[*]W)[*]=[*]Encrypt(Key,[*]Y), {{symmetric key}} Key and clear file set Y[*]=[*](Y 1, Y 2,[*]…. Yn ), Di[*]∈[*] 2 ∆, index λ and ciphertext file sets W[*]=[*](W 1,[*]W 2,[*]…Wn)λ[*]=[*]ϕ, (3) TC[*]=[*]Trapdoor(Key,[*]C), keywords C, traps TC, (4) Y(C)[*]=[*]Trapdoor(Key,[*]C), identifiers set, (5) Yi[*]=[*]Decrypt(Key,[*]Wi), clear text files Yi.|$|R
