3661|6827|Public
5|$|As of 2012, SAS is {{the largest}} privately owned {{software}} company in the world. It develops, supports and markets a suite of analytics software also called SAS (statistical analysis system), which captures, stores, modifies, analyzes and presents data. The SAS system and SAS programming language are used {{by most of the}} Fortune 500. The SAS software includes a Base SAS component that performs analytical functions and more than 200 other modules that add graphics, <b>spreadsheets</b> or other features. SAS Institute also sells the JMP suite of statistical analysis software, which consists of JMP, JMP Pro, JMP Clinical and JMP Genomics.|$|E
5|$|Paxata is {{a privately}} owned {{software}} company headquartered in Redwood City, California. It develops self-service data preparation software that gets data ready for data analytics software. Paxata's software {{is intended for}} business analysts, as opposed to technical staff. It is used to combine data from different sources, then check it for data quality issues, such as duplicates and outliers. Algorithms and machine learning automate certain aspects of data preparation and users work with the software through a user-interface similar to Excel <b>spreadsheets.</b>|$|E
5|$|Viralheat was {{a social}} media {{management}} tool with features for account management, monitoring, analytics and publishing. It tracks the number of mentions an individual or company receives on digital properties and analyzes factors such as influence, sentiment and language. The influence of a Twitter handle is measured based on followers, mentions, and retweets Sentiment is assessed as positive, negative or neutral. Viralheat's Human Intent tool labels social media participants as leads if it assesses that {{they are likely to}} consider purchasing a corresponding product. The software's analytics and monitoring can be filtered by location. Data from Viralheat can be exported into PDF files, Excel <b>spreadsheets</b> or onto a publicly available dashboard.|$|E
40|$|Empirical {{studies of}} <b>spreadsheet</b> {{programming}} have commonly shown high over all error rates but much less {{attention has been}} paid to reasons for these errors. One often mentioned cause for errors is the low conceptual level of <b>spreadsheet</b> systems. By changing the conceptual level of <b>spreadsheet</b> system, we wanted to study whether this will produce different type of errors compared to traditional <b>spreadsheet</b> systems. In this paper we present an empirical study comparing the traditional <b>spreadsheet</b> calculation paradigm with the structured <b>spreadsheet</b> calculation paradigm that utilizes goals, plans and <b>spreadsheet</b> data structures in computation. The results show that the error behavior of novice <b>spreadsheet</b> users is systematically different between paradigms. Introduction Traditional <b>spreadsheet</b> calculation systems provide a fast method to express data and to make calculations, provided that there is some natural way to lay all the data on one or more twodimensional sheets. <b>Spreadsheet</b> cal [...] ...|$|R
40|$|This paper {{provides}} guidance to an analyst who wants to extract insight from a <b>spreadsheet</b> model. It discusses the terminology of <b>spreadsheet</b> analytics, how to prepare a <b>spreadsheet</b> model for analysis, and a hierarchy of analytical techniques. These techniques include sensitivity analysis, tornado charts,and backsolving (or goal-seeking). This paper presents native-Excel approaches for automating these techniques, and discusses add-ins that are even more efficient. <b>Spreadsheet</b> optimization and <b>spreadsheet</b> Monte Carlo simulation are briefly discussed. The paper concludes by calling for empirical research, and describing desired features <b>spreadsheet</b> sensitivity analysis and <b>spreadsheet</b> optimization add-ins. Comment: 12 Pages, 8 Colour Figure...|$|R
40|$|<b>Spreadsheet</b> {{software}} {{is one of}} the most extensively used software packages in many organizations. However, the development and use of <b>spreadsheet</b> applications in organizations is ill understood. This research is a case study of investment in, criticality of, and control over <b>spreadsheet</b> applications in a medium-sized contract construction company in Singapore. Using a <b>spreadsheet</b> based questionaire, data were collected from 40 <b>spreadsheet</b> application developers and users on 402 <b>spreadsheet</b> applications. The results indicate that while the investment in <b>spreadsheet</b> applications is substantial, niether management nor individual employees appreciate the significance of this investment. Both the organization and individual employees are highly dependent upon many <b>spreadsheet</b> applications, and though general awareness of this dependence is high, little control is exercised at either the organizational or individual employee level...|$|R
25|$|In April 2007 The Sydney Morning Herald {{reported}} that it had received unpublished Government <b>spreadsheets</b> that showed 27.8% of the agreements had stripped away conditions that were intended to be protected by law. The <b>spreadsheets</b> {{were based on a}} sample of AWA agreements.|$|E
25|$|<b>Spreadsheets</b> (Google Sheets): Up to 2 million cells.|$|E
25|$|Most {{spreadsheet}} software {{also provides a}} built-in function for calculating the number of k-permutations of n, called PERMUT in many popular <b>spreadsheets.</b>|$|E
5000|$|Design-time <b>spreadsheet</b> schema wizard and <b>spreadsheet</b> format {{designer}} ...|$|R
5000|$|... 20/20 (<b>spreadsheet</b> software), {{an early}} {{multi-platform}} <b>spreadsheet</b> program.|$|R
40|$|We {{present a}} pragmatic method for {{management}} of risks that arise due to <b>spreadsheet</b> use in large organizations. We combine peer-review, tool-assisted evaluation and other pre-existing approaches {{into a single}} organization-wide approach that reduces <b>spreadsheet</b> risk without overly restricting <b>spreadsheet</b> use. The method {{was developed in the}} course of several <b>spreadsheet</b> evaluation assignments for a corporate customer. Our method addresses a number of issues pertinent to <b>spreadsheet</b> risks that were raised by the Sarbanes-Oxley act. Comment: 13 Pages, 1 Figure, 1 Table; Proc. European <b>Spreadsheet</b> Risks Int. Grp. (EuSpRIG) 2012, ISBN: 978 - 0 - 9569258 - 6 -...|$|R
25|$|The {{notation}} of mEn, {{known as}} E notation, {{is used in}} computer programming, <b>spreadsheets</b> and databases, but is not used in scientific papers.|$|E
25|$|Google Apps Script in Google <b>Spreadsheets</b> and Google Sites {{allows users}} to create custom formulas, {{automate}} repetitive tasks and also interact with other Google products such as Gmail.|$|E
25|$|Windows Search {{by default}} {{includes}} IFilters for common filetypes, including Word documents, Excel <b>spreadsheets,</b> PowerPoint presentations, HTML files, text files, MP3 and WMA music files, WMV, ASF and AVI video files and JPEG, BMP and PNG images.|$|E
5000|$|A <b>spreadsheet</b> {{or online}} <b>spreadsheet</b> (for example, Excel or Google Docs) ...|$|R
40|$|<b>Spreadsheet</b> {{models are}} used {{extensively}} in business {{as an important}} aid in decision support particularly in areas like financial analysis, budgeting and forecasting. If these models were compromised through quantitative and qualitative errors, the resulting decision making {{would be based on}} fallacious information with potentially disastrous outcomes. Consequently, it is imperative that accounting professionals receive adequate training in <b>spreadsheet</b> modelling, especially as past research has shown that these types of errors are common. This paper reports on a survey and <b>spreadsheet</b> exercise given to a group of second-year undergraduate accounting students at an Australian university, both before and after a semester course aimed specifically at teaching <b>spreadsheet</b> design principles and problem-solving techniques. The findings show that <b>spreadsheet</b> errors and, in particular, <b>spreadsheet</b> design errors are prolific even for a simple domain-free exercise. Results also show that the incidence of these errors (and again, particularly design errors) was reduced significantly after a semester of teaching <b>spreadsheet</b> design principles. The results support the contention that accounting educators should include a course in <b>spreadsheet</b> design principles and problem-solving techniques as part of an undergraduate accounting program. End user computing, <b>spreadsheet,</b> modelling, error, <b>spreadsheet</b> design,...|$|R
40|$|These {{tutorial}} notes {{present a}} methodology for <b>spreadsheet</b> engineering. First, we present data mining and database techniques to reason about <b>spreadsheet</b> data. These techniques {{are used to}} compute relationships between <b>spreadsheet</b> elements (cells/columns/rows). These relations are then used to infer a model defining the business logic of the <b>spreadsheet.</b> Such {{a model of a}} <b>spreadsheet</b> data is a visual domain specific language that we embed in a well-known <b>spreadsheet</b> system. The embedded model is the building block to define techniques for modeldriven <b>spreadsheet</b> development, where advanced techniques are used to guarantee the model-instance synchronization. In this model-driven environment, any user data update as to follow the the model-instance conformance relation, thus, guiding <b>spreadsheet</b> users to introduce correct data. Data refinement techniques are used to synchronize models and instances after users update/evolve the model. These notes brie y describe our model-driven <b>spreadsheet</b> environment, the MDSheet environment, that implements the presented methodology. To evaluate both proposed techniques and the MDSheet tool, we have conducted, in laboratory sessions, an empirical study with the summer school participants. The results of this study are presented in these notes...|$|R
25|$|Users {{can access}} all documents, <b>spreadsheets</b> and presentations, among other files, collectively through the Google Drive website. In June 2014, Google started rolling out {{dedicated}} website homepages for Docs, Sheets and Slides that contain only files created with each respective service.|$|E
25|$|Numbers also {{includes}} numerous stylistic improvements {{in an effort}} to improve the visual appearance of <b>spreadsheets.</b> At its introductory demonstration, Steve Jobs pitched a more usable interface and better control over the appearance and presentation of tables of data.|$|E
25|$|Except for <b>spreadsheets,</b> {{these tools}} are {{provided}} as standalone applications, suites of applications, components of Enterprise resource planning systems, application programming interfaces or as components of software targeted {{to a specific}} industry. The tools are sometimes packaged into data warehouse appliances.|$|E
40|$|We {{present a}} <b>spreadsheet</b> model {{for working with}} {{streaming}} data. Our prototype tool presents techniques to let the user stream data from web services and web input elements to a <b>spreadsheet</b> without preprogramming those sources into the tool. <b>Spreadsheet</b> cells record metadata about where and when the data came from, allowing the user to view and manipulate streaming data using temporal information. Starting and pausing a data stream in the <b>spreadsheet</b> can be controlled programmatically using values computed by <b>spreadsheet</b> cells, making the <b>spreadsheet</b> program highly dynamic and interactive. We demonstrate the range of our design {{with a series of}} examples highlighting its ability to create different kinds of applications that process real-time data from the web using simple <b>spreadsheet</b> formulas. Author Keywords Spreadsheets; streaming data; web services; end-user pro...|$|R
50|$|Grid {{views are}} {{sometimes}} referred to as <b>spreadsheet</b> widgets (or <b>spreadsheet</b> controls, with control being a common synonym for widget). This is due to grid views' visual and sometimes behavioral similarity to <b>spreadsheet</b> applications. However, though many grid views support editing of underlying data, they cannot be used for arbitrary calculations. <b>Spreadsheet</b> widgets occur frequently in scientific applications such as PSPP or SPSS.|$|R
5000|$|... wikiCalc, a wiki-based <b>spreadsheet</b> application, was {{launched}} in November 2005 by <b>spreadsheet</b> pioneer Dan Bricklin.|$|R
25|$|The Open Document Format for Office Applications (ODF), {{also known}} as OpenDocument, is an XML-based file format for <b>spreadsheets,</b> charts, presentations and word {{processing}} documents. It was developed {{with the aim of}} providing an open, XML-based file format specification for office applications.|$|E
25|$|Information worker {{software}} {{are designed}} for workers at the departmental level. Examples include time management, resource management, analytical, collaborative and documentation tools. Word processors, <b>spreadsheets,</b> email and blog clients, personal information system, and individual media editors may aid in multiple information worker tasks.|$|E
25|$|In {{order to}} view and edit documents, <b>spreadsheets</b> and presentations offline on a computer, users {{need to be}} using the Google Chrome web browser. A Chrome extension, Google Docs Offline, allows users to enable offline support for Docs, Sheets and Slides files on the Google Drive website.|$|E
5000|$|Plan {{electronic}} <b>spreadsheet,</b> {{similar to}} Multiplan (<b>spreadsheet</b> size up to 255 rows x 63 columns) ...|$|R
50|$|Models and {{frameworks}} for building visualizations include the data flow models popularized by {{systems such as}} AVS, IRIS Explorer, and VTK toolkit, and data state models in <b>spreadsheet</b> systems such as the <b>Spreadsheet</b> for Visualization and <b>Spreadsheet</b> for Images.|$|R
40|$|This unit {{is about}} {{developing}} <b>spreadsheet</b> {{skills to be}} able to manage, analyse and forecast data. This unit would be suitable for candidates wishing to be proficient in advanced <b>spreadsheet</b> features and techniques within a numeric working environment. There are three separate outcomes. On completion of the unit, the candidate should be able to: 1. Use a wide range of data management features in a <b>spreadsheet.</b> 2. Use <b>spreadsheet</b> analysis tools. 3. Forecast statistical data using a <b>spreadsheet</b> application. This package contains a zip file of student files (download to extract) ...|$|R
25|$|A {{memorandum}} {{on the use}} of open {{standards for}} creating and exchanging office documents was approved by Belgium's federal Council of Ministers on June 23, 2006. OpenDocument was proposed as the standard for exchanging office documents such as texts, <b>spreadsheets,</b> presentations within the federal civil service.|$|E
25|$|Wang {{did make}} one last {{play in this}} arena, {{producing}} a dedicated Intel-based word processor called the Wang Office Assistant. But {{by the time it}} appeared, the PC with its flexibility of combining word processors with other programs such as <b>spreadsheets</b> had rendered such a specific task machine largely unsellable.|$|E
25|$|Office Open XML (also informally {{known as}} OOXML or Microsoft Open XML (MOX)) is a zipped, XML-based file format {{developed}} by Microsoft for representing <b>spreadsheets,</b> charts, presentations and word processing documents. The format was initially standardized by Ecma (as ECMA-376), {{and by the}} ISO and IEC (as ISO/IEC 29500) in later versions.|$|E
40|$|The <b>spreadsheet</b> {{is one of}} {{the most}} {{commonly}} used personal computer applications. Many studies have shown that a very high percentage of <b>spreadsheet</b> models contain serious errors. The use of influence diagrams, which are a visual representation of the relationships among the variables in a problem, to plan the development of a <b>spreadsheet</b> model may reduce the likelihood of the <b>spreadsheet</b> model containing an error. This paper describes an experimental study that tests whether the use of influence diagrams improves <b>spreadsheet</b> modelling practice. The results of the study suggests that influence diagrams do help users to better understand problems, and as a result reduce the likelihood of omitting important variables from <b>spreadsheet</b> models...|$|R
40|$|<b>Spreadsheet</b> {{engineering}} methodologies are {{diverse and}} sometimes contradictory. It {{is difficult for}} <b>spreadsheet</b> developers to identify a <b>spreadsheet</b> engineering methodology that is appropriate for their class of <b>spreadsheet,</b> with its unique combination of goals, type of problem, and available time and resources. There {{is a lack of}} well-organized, proven methodologies with known costs and benefits for well-defined <b>spreadsheet</b> classes. It is difficult to compare and critically evaluate methodologies. We present a paradigm for organizing and interpreting <b>spreadsheet</b> engineering recommendations. It systematically addresses the myriad choices made when developing a <b>spreadsheet,</b> and explicitly considers resource constraints and other development parameters. This paradigm provides a framework for evaluation, comparison, and selection of methodologies, and a list of essential elements for developers or codifiers of new methodologies. This paradigm identifies gaps in our knowledge that merit further research. 1...|$|R
40|$|Numerous {{studies and}} {{reported}} cases have established {{the seriousness of}} the frequency and impact of user-generated <b>spreadsheet</b> errors. This thesis presents a structured methodology for <b>spreadsheet</b> model development, which enables improved integrity control of the models. The proposed methodology has the potential to ensure consistency in the development process and produce more comprehensible, reliable and maintainable models, which can reduce the occurrence of user-generated errors. An insight into the nature and properties of <b>spreadsheet</b> errors is essential {{for the development of a}} methodology for controlling the integrity of <b>spreadsheet</b> models. An important by-product of the research is the development of a comprehensive classification or taxonomy of the different types of user-generated <b>spreadsheet</b> errors based on a rational taxonomic scheme. Research on the phenomenon of <b>spreadsheet</b> errors has revealed the need to adopt a software engineering based methodology as a framework for <b>spreadsheet</b> development in practical situations. The proposed methodology represents a new approach to the provision of a structured, software engineering based discipline for the development of <b>spreadsheet</b> models. It is established in this thesis that software engineering principles can in fact be applied to the process of <b>spreadsheet</b> model building to help improve the quality of the models. The methodology uses Jackson structures to produce the logical design of the <b>spreadsheet</b> model. This is followed by a technique to derive the physical model, which is then implemented as a <b>spreadsheet.</b> The methodology’s potential for improving the quality of <b>spreadsheet</b> models is demonstrated. In order to evaluate the effectiveness of the proposed framework, the various features of the proposed structured methodology are tested on a range of <b>spreadsheet</b> models through a series of experiments. The results of the tests provide adequate evidence of the methodology’s potential to reduce the occurrence of user-generated errors and enhance the comprehensibility of the models...|$|R
