133|696|Public
5000|$|Although we {{can view}} {{interaction}} with physical <b>smart</b> <b>object</b> {{in the physical}} world as distinct from interaction with virtual smart objects in a virtual simulated world, these can be related. Poslad considers the progression of: how ...|$|E
5000|$|Noiseless CK {{can work}} as plug-in for Adobe Photoshop, Lightroom 4, 5 or later; Apple Aperture 3.2 or later, Photoshop Elements 10 -12 (App Store version is not {{supported}} due to Apple Sandboxing), Adobe Photoshop CS5, CS6 or CC(including <b>Smart</b> <b>Object</b> support).|$|E
50|$|A <b>smart</b> <b>object</b> is {{an object}} that enhances the {{interaction}} with not only people but also with other smart objects. It can not only refer to interaction with physical world objects but also to interaction with virtual (computing environment) objects. A smart physical object may be created either as an artifact or manufactured product or by embedding electronic tags such as RFID tags or sensors into non-smart physical objects. Smart virtual objects are created as software objects that are intrinsic when creating and operating a virtual or cyber world simulation or game. The concept of a <b>smart</b> <b>object</b> has several origins and uses, see History. There are also several overlapping terms, see also smart device, tangible object or tangible user interface and Thing as in the Internet of things.|$|E
40|$|In {{ubiquitous}} manufacturing (UM) environment, {{radio frequency}} identification (RFID) technology enables real-time traceability, visibility and interoperability in improving the performance of shop-floor planning, execution and control. This paper presents an innovative gateway technology. A gateway is physically composed of <b>smart</b> <b>objects</b> that are logically {{related to each other}} according to a shop-floor workflow configuration. Although <b>smart</b> <b>objects</b> are equipped with heterogeneous RFID devices, they are converted into standard web services using the concept of agents. The resulted agent-based <b>smart</b> <b>objects</b> (ASOs) are then centrally managed through a specially purposed <b>smart</b> <b>objects</b> Universal Description, Discovery and Integration registry (SO-UDDI) where facilities such as register, publish, find, bind and invoke are provided for ASOs. Through these facilities, <b>smart</b> <b>objects</b> can be deployed at a gateway in a 'Plug and Play' fashion. Real-time data are collected by <b>smart</b> <b>objects</b> from the shop floor and processed by the corresponding gateway for further application in enterprise information systems (EISs). The proposed framework is demonstrated through a smart forklift gateway around which <b>smart</b> <b>objects</b> are deployed. © 2010 Elsevier Ltd. link_to_subscribed_fulltex...|$|R
40|$|The {{increasing}} number of <b>smart</b> <b>objects</b> in our everyday life shapes how we interact beyond the desktop. In this workshop we discussed how the interaction with these <b>smart</b> <b>objects</b> should be designed from various perspectives. This year's workshop put a special focus on affective computing with <b>smart</b> <b>objects,</b> as reflected by the keynote talk...|$|R
40|$|This paper {{presents}} an innovative gateway technology. A gateway is physically composed of <b>smart</b> <b>objects</b> (SOs) that are logically {{related to each}} other according to a shop-floor workflow configuration. Although <b>smart</b> <b>objects</b> are equipped with heterogeneous RFID devices, they are converted into standard web services using the concept of agents. The resulted agent-based <b>smart</b> <b>objects</b> (ASOs) are then centrally managed through a specially purposed Universal Description, Discovery and Integration registry (soUDDI) where facilities such as register, publish, find, bind and invoke are provided for ASOs. Through these facilities, <b>smart</b> <b>objects</b> can be deployed at a gateway in a “plug and play” fashion. Real-time data are collected by <b>smart</b> <b>objects</b> from the shop floor and processed by the corresponding gateway for further application in enterprise information systems (EISs). The proposed framework is demonstrated through a smart forklift gateway around which <b>smart</b> <b>objects</b> are deployed. link_to_OA_fulltextThe 6 th International Conference On Digital Enterprise Technology (DET 2009), Hong Kong, 14 - 16 December. In Proceedings of DET' 09, 2010, v. 66, p. 1709 - 172...|$|R
50|$|The concept {{smart for}} a smart {{physical}} object simply {{means that it}} is active, digital, networked, can operate to some extent autonomously, is reconfigurable and has local control of the resources it needs such as energy, data storage, etc. Note, a <b>smart</b> <b>object</b> does not necessarily need to be intelligent as in exhibiting a strong essence of artificial intelligence—although it can be designed to also be intelligent.|$|E
50|$|To {{simulate}} more {{aspects of}} human activities in a crowd, more is needed than path and motion planning. Complex social interactions, <b>smart</b> <b>object</b> manipulation, and hybrid models are challenges in this area.Simulated crowd behavior is inspired by the flow of real-world crowds. Behavioral patterns, movement speeds and densities, and anomalies are analyzed across many environments and building types. Individuals are tracked and their movements are documented such that algorithms can be derived and implemented into crowd simulations.|$|E
5000|$|The <b>smart</b> <b>object</b> {{concept was}} {{introduced}} by Marcelo Kallman and Daniel Thalmann as an object that can describe its own possible interactions. The main focus here is to model interactions of smart virtual objects with virtual humans, agents, in virtual worlds. The opposite approach to smart objects is 'plain' objects that do not provide this information. The additional information provided by this concept enables far more general interaction schemes, and can greatly simplify the planner of an artificial intelligence agent. In contrast to smart virtual objects used in virtual worlds, Lev Manovich focuses on physical space filled with electronic and visual information. Here, [...] "smart objects" [...] are described as [...] "objects connected to the Net; objects that can sense their users and display smart behaviour".|$|E
40|$|This paper {{describes}} a preliminary study and experimental design of future small <b>smart</b> <b>objects.</b> Especially, reconfigur-able small <b>smart</b> <b>objects</b> in a solid wired grid are consid-ered. The most important property of future small <b>smart</b> <b>objects</b> {{will be their}} {{ability to communicate with}} each other and effectively co-operate. This can be done in many ways and one is described in this paper. A network of small <b>smart</b> <b>objects</b> is a network structure which enables objects to form a fabric like physical structure in which objects can com-municate. Actually, building small <b>smart</b> <b>objects</b> and the entire network is not possible using present technology be-cause of its physical size, but a technology independent structure and operation can be considered. The network structure is based on the idea that small <b>smart</b> <b>objects</b> are connected to each other and all objects supply data packets to each other in order to enable communication between all objects. Objects can also copy their configuration to adja-cent objects which helps to set up and maintain the net-work...|$|R
40|$|The use of Internet as {{a general}} purpose {{communication}} system is growing very fast in all sectors of activity. Multiple forms of equipments are now connected to Internet and have gained increased embedded intelligence. This evolution leads to new interactive services that are embedded on these <b>smart</b> <b>objects</b> while interoperating with existing enterprise information systems. The objective of an operation support system (OSS) is twofold: reducing operation costs by automated administration of <b>smart</b> <b>objects,</b> retrieving valuable operational and business information from <b>smart</b> <b>objects</b> to create new sources of revenue. The paper describes {{the design of a}} flexible and scalable operation support system for networked <b>smart</b> <b>objects</b> that meets these requirements. 1...|$|R
40|$|Considering the {{management}} problem for Internet of Things, existing IP-based network management protocols such as Simple Network Management Protocol (SNMP) and the Network Configuration (NETCONF) protocol may possibly be utilized to manage <b>smart</b> <b>objects</b> (the main components in Internet of Things). Based on {{the thinking of}} extension indicated by some network management standardizations, this paper tries to introduce Extenics into the study on management of <b>smart</b> <b>objects.</b> This paper proposes a simplified formalization for management of <b>smart</b> <b>objects</b> based on the extension model, and formalizes information, knowledge and policy related to Manager, Agent and Management Information Base (MIB) for management of <b>smart</b> <b>objects</b> by making use of basic-elements, composite-elements, extension transformations, dependent functions and extension sets. The case study of this paper shows that, the proposed formalized framework of Manager, Agent and MIB {{in the form of}} information-knowledge-policy for management of <b>smart</b> <b>objects</b> based on the extension model is feasible...|$|R
5000|$|Because of Photoshop's popularity, PSD {{files are}} widely used and {{supported}} to some extent by most competing software. The [...]PSD file format can be exported to and from Adobe's other apps like Adobe Illustrator, Adobe Premiere Pro, and After Effects, to make professional standard DVDs and provide non-linear editing and special effects services, such as backgrounds, textures, and so on, for television, film, and the Internet. Photoshop's primary strength is as a pixel-based image editor, unlike vector-based image editors. Photoshop also enables vector graphics editing through its Paths, Pen tools, Shape tools, Shape Layers, Type tools, Import command, and <b>Smart</b> <b>Object</b> functions. These tools and commands are convenient to combine pixel-based and vector-based images in one Photoshop document, because {{it may not be}} necessary to use more than one program. To create very complex vector graphics with numerous shapes and colors, it may be easier to use software that was created primarily for that purpose, such as Adobe Illustrator or CorelDRAW. Photoshop's non-destructive Smart Objects can also import complex vector shapes.|$|E
40|$|To {{achieve the}} <b>Smart</b> <b>Object</b> world, {{we need to}} create {{appropriate}} application layer protocols. We consider high extensibility and applicability for human-to-machine type communications as well as machine-to-machine are especially needed for the protocol design of the application layer protocol. Those characteristics are important to support new devices, applications and type of communications which will form the future <b>Smart</b> <b>Object</b> world as well as currently envisioned ones. In this paper, we show that SIP (Session Initiation Protocol) fulfills these requirements of the protocol design and it is suitable for the <b>Smart</b> <b>Object.</b> On the other hand, it is shown SIP lacks lightweightness, which {{is also one of}} the most important requirements for the <b>Smart</b> <b>Object.</b> To bring significant sustainability into the <b>Smart</b> <b>Object</b> world by using SIP, we propose “simplified SIP approach ” for improving SIP lightweightness and remark the future works in this approach. 1...|$|E
40|$|This paper {{presents}} a middleware platform, Prottoy {{for the development}} of <b>smart</b> <b>object</b> systems. A <b>smart</b> <b>object</b> has some specific characteristics e. g., augmentation variation, perceptual feedback provision, push-pull model, etc. In addition a <b>smart</b> <b>object</b> could be stand-alone, co-operative or associated with an external application. Generic pervasive middlewares have no clean support for accommodating all these characteristics of smart objects. Prottoy is designed by carefully observing the characteristics of smart objects and it has taken a core-cloud approach to represent them digitally. A smart object’s common functional features are combined together as a generic core and a collection of supplementary service profiles represents the cloud that can be plugged-in atop the core. Application developers are offered unified interfaces to interact bi-directionally (sense-actuate) with the underlying smart objects isolating access issues completely regardless of the smart objects ' types and properties. Prottoy's hybrid architecture allows a <b>smart</b> <b>object</b> to be stand-alone, co-operative or a part of an application. The benefit of our approach is twofold. Firstly, the core-cloud artefact framework provides a lucid representation of <b>smart</b> <b>object</b> that accommodates its specific features leading to a generic <b>smart</b> <b>object</b> model. Secondly, Prottoy allows rapid development of <b>smart</b> <b>object</b> systems by providing unified interfaces with high-level abstractions. In this paper, we discuss the background, technical details and the qualitative evaluation of Prottoy...|$|E
40|$|Abstract—A {{smart space}} is a {{physical}} space with heterogeneous <b>smart</b> <b>objects</b> that collaborate and share information to perform tasks desired by users. Interoperability among <b>smart</b> <b>objects</b> is the key challenge in smart spaces. In this paper, we discuss a semantic interoperability approach for smart spaces introduced by the SOFIA (<b>Smart</b> <b>Objects</b> for Intelligent Applications) project. A semantic interoperability architecture is introduced and implemented for a use case scenario deployment. This deployment consists of many heterogeneous <b>smart</b> <b>objects,</b> designed and manufactured by different companies and institutions, that exchange information through the interoperability architecture. The architecture, realized as a smart home pilot, is evaluated based on a performance analysis. The results indicate acceptable response times for a networked user interface...|$|R
40|$|When <b>smart</b> <b>objects</b> {{participate}} in context-aware applications, {{changes in their}} real-world environment can {{have a significant impact}} on underlying networking structures. This paper presents a communication platform for <b>smart</b> <b>objects</b> that takes an object's current realworld context into account and adapts networking structures accordingly...|$|R
5000|$|... virtual <b>smart</b> <b>objects</b> by {{modelling}} {{both physical}} world objects and modelling humans as objects and their subsequent interactions can form a predominantly <b>smart</b> virtual <b>object</b> environment.|$|R
40|$|In this video, we {{introduce}} a scenario with {{a prototype of}} camera-based context-aware <b>smart</b> <b>object</b> controller for a family in smart home. The <b>smart</b> <b>object</b> controller is a context-based user interface to exploit context of both user and environment. It uses context of user to personalize control interface. Environment context is used to discover services and used to check service conflict among users in smart home. It has a camera-based architecture that captures an image to recognize <b>smart</b> <b>object</b> and generates user interface. Through generated user interface, users can directly manipulate functions of various <b>smart</b> <b>object</b> and services as as universal controller. Furthermore it enhances handover of controllability between users to resolve service conflict in a multi-user scenario...|$|E
40|$|The {{majority}} of Smart Objects are constrained by {{some aspect of}} their performance (e. g. power, CPU, memory, etc.) and {{may not have the}} capability to directly connect to the Internet. A gateway (or proxy server) becomes a key requirement for interconnecting a local <b>Smart</b> <b>Object</b> subnet to the Internet. A <b>Smart</b> <b>Object</b> Gateway architecture allows for efficient service delivery between the <b>Smart</b> <b>Object</b> and an end point on the Internet such as an application server. This paper describes the key characteristics and benefits of this approach, leveraging the IETF low power and constrained node protocols, and the ETSI M 2 M model. Finally, an end-to-end <b>Smart</b> <b>Object</b> network implementation that interworks between different technologies and network domains is described...|$|E
40|$|Although the {{cost-effective}} {{integration of}} diverse <b>smart</b> <b>object</b> technologies like radio-frequency identification (RFID), real-time locating systems (RTLS), and {{wireless sensor networks}} (WSN) into existing enterprise infrastructures {{is very important for}} companies, integration aspects are ignored by researches frequently. Furthermore it could be observed, that existing commercial middleware products aiming at integration ignore the trend of consolidation between diverse <b>smart</b> <b>object</b> technologies by focusing on passive RFID only. This paper introduces the concept of an integration platform for diverse <b>smart</b> <b>object</b> technologies together with an abstract software architecture. The functionalities that such a platform should provide are derived from the requirements of real world applications and aim at drastically reduced integration costs...|$|E
40|$|Tabuenca, B. (2012, February). <b>Smart</b> <b>Objects</b> for Learning. Presentation at the Innovation workshop, Heerlen, The Netherlands: Open Universiteit in the Netherlands, CELSTEC (Mobile Media Lab). This {{presentation}} {{gives an}} overview on existing <b>Smart</b> <b>Objects</b> for learning augmenting daily physical spaces. Open Universiteit Nederland, Netherlands Laboratory for Lifelong Learnin...|$|R
40|$|The {{combination}} of the Internet and emerging technologies such as nearfield communications, real-time localization, and embedded sensors lets us transform everyday <b>objects</b> into <b>smart</b> <b>objects</b> that can understand and react to their environment. Such objects are building blocks for the Internet of Things and enable novel computing applications. As a step toward design and architectural principles for <b>smart</b> <b>objects,</b> the authors introduce a hierarchy of architectures with increasing levels of real-world awareness and interactivity. In particular, they describe activity-, policy-, and process-aware <b>smart</b> <b>objects</b> and demonstrate how the respective architectural abstractions support increasingly complex application...|$|R
30|$|The {{characteristics}} of smart factory networks are facilitated through {{concepts such as}} IoT and production-oriented CPSs, which involve <b>smart</b> <b>objects,</b> such as intelligent machinery and products. CPS integrate computing and communication capabilities in physical production processes to combine the cyber and physical world (Lee et al. 2015; Wang et al. 2016). <b>Smart</b> <b>objects</b> are connected over the Internet, or other network infrastructures, to form dynamic, intelligent, and self-controlling networks (Broy et al. 2012; Schuh et al. 2014). Within these networks, <b>smart</b> <b>objects</b> control and monitor the production process collaboratively through machine-to-machine communication and exchange information to optimize themselves and the production process (Brettel et al. 2014; Hessman 2013; Schuh et al. 2014; Yoon et al. 2012). Hence, <b>smart</b> <b>objects</b> represent elementary components of the collaborative production infrastructure (Zuehlke 2010; Yoon et al. 2012). Although <b>smart</b> <b>objects</b> control and optimize themselves autonomously on a workflow level, central IT systems are required for an overarching planning and coordination of decentralized <b>smart</b> <b>objects.</b> For example, central IT systems must provide parameters and framework conditions to define a possible course of action for the autonomous control and optimization of <b>smart</b> <b>objects</b> (Schuh et al. 2014). These IT systems are connected with other internal and external networks to facilitate information exchange and collaboration within the supply network. The necessary infrastructure is typically company specific and can be on-premise, cloud-based, or a hybrid form of both (Zuehlke 2010; Yoon et al. 2012; Karnouskos and Colombo 2011; Colombo et al. 2013; Shrouf et al. 2014; Haller et al. 2009).|$|R
40|$|Part 2 : Behaviour and CoordinationInternational audienceThe paper firstly {{reviews the}} {{relevant}} concepts on virtual enterprise operations {{as well as}} industrial maintenance processes. Then a virtual enterprise enabling platform is presented. The architecture of the platform and its main modules are briefly introduced. Within this platform, a <b>smart</b> <b>object</b> extension is highlighted. This <b>smart</b> <b>object</b> is used to collect data from remote equipment and pass it to the Virtual Enterprise Management Platform (VEMP) through a gateway. The data collected by the <b>smart</b> <b>object</b> will be aggregated and monitored, using the business intelligence tools of the platform, enabling the implementation of maintenance strategies, rising fault conditions that will trigger a repair business process. In the final part of the paper, it is discussed a business case for a SME with worldwide operations...|$|E
40|$|In <b>smart</b> <b>object</b> {{application}} {{a technology}} like Wireless sensor networks (WSN) {{can be the}} link between the activities in the business processes (real world or physical world) and the mirror of these activities in the information systems (information world). But to fulfill this role as a link between the two worlds, a WSN has to interact with other components of a <b>smart</b> <b>object</b> application. This paper describes seven functional requirements a software product has to fulfill...|$|E
40|$|The Future Internet {{of things}} {{will consist of}} smart objects that will form {{distributed}} and autonomous peripheral wireless networks near the user end. The distributed nature of <b>smart</b> <b>object</b> networks, also termed ad hoc networks, require novel cooperative effective and efficient protocols for dynamic environment. It is therefore very important to provide a unified flexible framework for Ad hoc <b>smart</b> <b>object</b> communication that will allow adaptive, hybrid routing {{in order to satisfy}} Ad hoc networking requirements as proposed by the Cognitive and Adaptive Module (CAM) in [15]. 1...|$|E
40|$|Abstract: An {{interesting}} {{new application}} domain for handheld devices may {{be represented by}} Ambient Intelligence (AmI), {{where they can be}} used as intermediaries between us and our surrounding environment. Thus, mobile devices, which always accompany us, will behave as electronic butlers who assist us in our daily tasks, by interacting with the <b>smart</b> <b>objects</b> (everyday objects augmented with computational services) in our whereabouts. In order to achieve such goal, this paper proposes an AmI-enabling framework providing two main functions: a) facilitate the development and deployment of <b>smart</b> <b>objects</b> and b) transform mobile devices into universal remote controllers of those <b>smart</b> <b>objects...</b>|$|R
30|$|Capability to {{interact}} with other <b>smart</b> <b>objects</b> and centralized information system.|$|R
40|$|In this {{position}} paper, we first describe several {{issues related to}} key provisioning for <b>smart</b> <b>objects</b> that require further investigations, highlight additional work that may be needed in IETF and then we discuss a Smart Grid use case where we are implementing provisioning of session keys using techniques such as Single Sign On (SSO). 1. Provisioning Authentication Credentials <b>Smart</b> <b>objects</b> may be manufactured and placed at their intended locations without pre-provisioning authentication credentials (e. g., symmetric or asymmetric keys and identities about key holders) specific to a particular service provider. While for today’s service provider-based model (e. g., SIM for cellular providers, Modem for ISPs), pre-provisioning of authentication credentials was not an issue, {{this is a problem}} for other emerging use cases where the <b>smart</b> <b>objects</b> may need to be placed before determining their service providers. Moreover, these objects are constrained in terms of memory, power, cost and location where they are placed. In another scenario, the <b>smart</b> <b>objects</b> may change their service providers in the same or a new location. In this use case, new authentication credentials need to be provisioned to <b>smart</b> <b>objects</b> fo...|$|R
40|$|Abstract A <b>smart</b> <b>object</b> system {{encompasses}} the synergy between computationally augmented everyday objects and external applications. This paper presents a software framework for building <b>smart</b> <b>object</b> systems following a declarative programming approach centered around custom written documents that glue the smart objects together. More specifically, {{in the proposed}} framework applications ’ requirements and smart objects ’ services are objectified through structured documents. A runtime infrastructure provides the spontaneous federation between smart objects and applications through structural type matching of these documents. There are three primary advantages of our approach- firstly, it allows developers to write applications in a generic way without prior knowledge of the smart objects {{that could be used}} by the applications. Secondly, <b>smart</b> <b>object</b> management (locating, accessing, etc.) issues are completely handled by the infrastructure thus application development becomes rapid and simple. Finally, the programming abstraction used in the framework allows extension of functionalities of smart objects and application...|$|E
40|$|International audienceIn {{every day}} life, {{thousands}} of objects are fabricated, thousands of objects enter and exit warehouses, thousands of objects {{are sold in}} supermarkets. For a good quality of service, these places have to supervise every object, anytime and anywhere, during {{the passage of the}} object through theirs environments. So, the necessity of a <b>smart</b> <b>object,</b> that possesses a unique identifier, contains information about itself, could take care of itself and that communicate with the environment in which it is, using specialized services, has arrived. In this article we demonstrate the concept of a <b>smart</b> <b>object,</b> created using RFID and UPnP technologies...|$|E
40|$|Abstract The {{notion of}} Ambient Intelligence was {{introduced}} to describe a scenario in which, literally, computing is everywhere. This {{should not be taken}} in the narrow-minded sense of a computer on every desk, but in the rather subtler one of computers becoming embedded in everyday objects and augmenting them with information processing capabilities. Part of this vision is already becoming a reality, as tagging everyday objects with sensors, actuators and building an instrumented environment are recent practices in industry and academia. In fact, the <b>smart</b> <b>object</b> domain has matured over the years. The combination of Internet and technologies like near field communications, real time localization, sensor networking etc. are bringing smart objects into commercial use. However, there are still many open issues {{that need to be addressed}} to bring smart objects out of the living lab prototypes. In this position paper after laying out our understanding of smart objects, we present three research challenges for the proliferation of smart objects that we believe will instigate stimulating discussions in the workshop. 1 <b>Smart</b> <b>Object</b> and <b>Smart</b> <b>Object</b> Systems The Oxford American Dictionary defines the terms Smart as “Having intelligence ” and Object as “A material thing that can be seen and touched”. However, in pervasive computing the term <b>Smart</b> <b>Object</b> has been used in several contexts. For example: low cost visual tagged objects have been used in augmented reality environment, RFID tagged objects have...|$|E
5000|$|Physical world <b>smart</b> <b>objects</b> can be {{described}} in terms of three properties: ...|$|R
40|$|The Internet of Things (IoT) {{refers to}} the Internet-like {{structure}} of billions of interconnected constrained devices, denoted as “smart objects”. <b>Smart</b> <b>objects</b> have limited capabilities, in terms of computational power and memory, and might be battery-powered devices, thus raising the need to adopt particularly energy efficient technologies. Among the most notable challenges that building interconnected <b>smart</b> <b>objects</b> brings about, there are standardization and interoperability. The use of IP has been foreseen as the standard for interoperability for <b>smart</b> <b>objects.</b> As billions of <b>smart</b> <b>objects</b> are expected to come to life and IPv 4 addresses have eventually reached depletion, IPv 6 {{has been identified as}} a candidate for smart-object communication. The deployment of the IoT raises many security issues coming from (i) the very nature of <b>smart</b> <b>objects,</b> e. g., the adoption of lightweight cryptographic algorithms, in terms of processing and memory requirements; and (ii) the use of standard protocols, e. g., the need to minimize the amount of data exchanged between nodes. This paper provides a detailed overview of the security challenges related to the deployment of <b>smart</b> <b>objects.</b> Security protocols at network, transport, and application layers are discussed, together with lightweight cryptographic algorithms proposed to be used instead of conventional and demanding ones, in terms of computational resources. Security aspects, such as key distribution and security bootstrapping, and application scenarios, such as secure data aggregation and service authorization, are also discussed...|$|R
5000|$|Representation: {{refers to}} a <b>smart</b> <b>object's</b> {{application}} and programming model—in particular, programming abstractions.|$|R
