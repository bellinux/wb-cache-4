1059|3531|Public
25|$|Transport Layer Security – Network <b>security</b> <b>protocol.</b>|$|E
25|$|According to the Department of State, the Basic Access Control (BAC) <b>security</b> <b>protocol</b> {{prevents}} {{access to}} that data unless the printed information within the passport is also known or can be guessed.|$|E
25|$|On 10 August 2006, {{the airport}} {{became the focus}} of changes in <b>security</b> <b>protocol,</b> {{following}} the revelation of a supposed al-Qaeda terrorist plot. New security rules were put in force immediately, causing additional restrictions in regards to carrying liquids onto flights. This caused longer queues and wait times at security. These included the prohibition of carry-on luggage (except essential items such as travel documents and medication) and all liquids – although this rule was later relaxed to allow the carrying on board of liquid medications and baby milk, if they were tasted first by passengers at the security checkpoint.|$|E
40|$|Secure {{electronic}} communication {{relies on the}} application of cryptography. However, even with perfect encryption, communication may be compromised without effective <b>security</b> <b>protocols</b> for key exchange, authentication, privacy, etc. We {{are beginning to see}} environments characterized by high volume encrypted traffic between large numbers of communicating principals, facilitated by heterogeneous infrastructure-based trusted services, e. g. Public Key Infrastructures. These vital services are dependent on <b>security</b> <b>protocols.</b> Unfortunately, <b>security</b> <b>protocols</b> are known to be highly susceptible to subtle errors. To date, we have relied on formal methods to tell us if our <b>security</b> <b>protocols</b> are effective. These methods do not provide complete or measurable <b>protocol</b> <b>security.</b> Moreover, <b>security</b> <b>protocols</b> are subject to the same implementation and administrative vulnerabilities as communication protocols. As a result, we are and will operate <b>security</b> <b>protocols</b> that have known and unkno [...] ...|$|R
40|$|Abstract. There {{are several}} <b>security</b> <b>protocols</b> {{that try to}} secure data {{traveling}} over the Internet. <b>Protocols</b> offer <b>security</b> on different layers and to different needs. One {{of the most important}} duties for <b>security</b> <b>protocols</b> is to ensure the secrecy of financial information traversing the Internet. Deploying <b>security</b> <b>protocols</b> has many effects depending on the viewpoint. In this paper two most utilized <b>security</b> <b>protocols,</b> Secure Electronic Transaction (SET) and Secure Sockets Layer (SSL) are reviewed...|$|R
40|$|SUMMARY <b>Security</b> <b>protocols</b> flaws {{represent}} {{a substantial portion}} of security exposures of data networks. In order to evaluate <b>security</b> <b>protocols</b> against any attack, formal methods are equipped with a number of techniques. Unfortunately, formal methods are applicable for static state only, and don’t guarantee detecting all possible flaws. Therefore, formal methods should be complemented with dynamic protection. Anomaly detection systems are very suitable for <b>security</b> <b>protocols</b> environments as dynamic activities protectors. This paper presents an intrusion detection system that uses a number of different anomaly detection techniques to detect attacks against <b>security</b> <b>protocols.</b> key words: intrusion detection, <b>security</b> <b>protocols,</b> anomaly detection, dynamic Bayesian network 1...|$|R
25|$|In Taipei, Thorton uncovers a plot by Omen Deng of the Chinese Secret Police {{to assassinate}} Ronald Sung and incite riots at a {{political}} rally to provoke conflict between China and the U.S. With aid from Triad leader Hong Shi, and/or G22, and Steven Heck—a psychotic man claiming {{to work for}} the CIA—Thorton counters an assassination attempt by Deng and obtains a disk containing the plot. When the disk is analyzed, a <b>security</b> <b>protocol</b> starts to erase data, forcing the player to choose to save files detailing either the assassination or the riot instigation. Eventually, Deng and Thorton duel on a building overlooking the podium, after which Thorton can either kill or spare Deng. If Deng is spared, it is revealed that both he and Thorton were tricked into thinking the other was the assassin, allowing the real assassin to shoot Sung. If the assassination data is saved, Thorton persuades Sung to wear body armor and survive, but hundreds are killed in the riots.|$|E
500|$|On 28 May 2011, {{immediately}} following the broadcast of [...] "The Almost People", the BBC released a prequel to [...] "A Good Man Goes to War". The prequel had Dorium talking to two Headless Monks. He gives them the brain of a Judoon, which contains a <b>security</b> <b>protocol</b> the monks need. Dorium tells them he knows what they are up to, as he has heard rumours around the area. He asks them, [...] "All this, to imprison one child? Oh, I know what you're up to, I hear everything in this place. I even hear rumours about whose child you've taken. Are you mad? You know the stories about the Doctor? The things that man has done? God help us if you make him angry!" ...|$|E
500|$|During the Tracy Island {{briefing}} scene, Alan Tracy's {{voice is}} audibly lower and deeper than in later episodes. Since voice actor Matt Zimmerman {{had yet to}} be added to the regular cast at the time of dialogue recording, Ray Barrett (who voiced John and the Hood) supplied the character's single line ("OK, father"). Despite his absence, Zimmerman is listed in the closing credits of [...] "Trapped in the Sky". A second continuity error occurs during the concluding scene. When Jeff initiates the [...] "Operation Cover-up" [...] <b>security</b> <b>protocol</b> to erase all sign of International Rescue's presence for purposes of the doctor's visit, the portraits on the wall change from photographs of the Tracy brothers in uniform to a different set in which civilian attire is worn; however, in a subsequent shot, the edge of a blue uniform is still visible.|$|E
5000|$|Undecidability of bounded <b>security</b> <b>protocols,</b> NA Durgin, PD Lincoln, JC Mitchell, A Scedrov, In Workshop on Formal Methods and <b>Security</b> <b>Protocols,</b> 1999, cited 291 ...|$|R
5000|$|Hardware accelerators for <b>security</b> <b>protocols</b> (<b>security</b> processors, network processors, etc.) ...|$|R
40|$|Most <b>security</b> <b>protocols</b> share {{a similar}} set of {{algorithms}} and functions and exhibit common sequences and {{patterns in the}} way they operate. These observations led us to propose a unified architecture for the implementation of <b>security</b> <b>protocols</b> {{in the form of a}} security toolbox system. Our design, based on the concepts of Component Based Software Engineering (CBSE), provides fast and flexible implementation and deployment of <b>security</b> <b>protocols...</b>|$|R
2500|$|RFC 3749: [...] "Transport Layer <b>Security</b> <b>Protocol</b> Compression Methods", {{specifies}} {{the framework}} for compression methods and the DEFLATE compression method.|$|E
2500|$|The Transport Layer <b>Security</b> <b>protocol</b> aims {{primarily}} to provide privacy and data integrity between two communicating computer applications. When secured by TLS, connections between a client (e.g., a web browser) and a server (e.g., wikipedia.org) {{have one or}} more of the following properties: ...|$|E
2500|$|On October 2, 2006, Representative Ray LaHood (R-IL) {{called for}} the page program to be {{temporarily}} suspended. He stated that [...] "this is a flawed program. The fact that a member of Congress is sending e-mails to a page and {{that he can get}} away with it [...] obviously there are problems." [...] Two more Representatives, Jon Porter (R-NV) and Kay Granger (R-TX) also supported LaHood's recommendation to suspend the page program until an outside team could evaluate its <b>security</b> <b>protocol.</b> Hastert announced on October 5, 2006 that he was launching an investigation to evaluate and make improvements to the page program.|$|E
40|$|During {{the last}} years, use of <b>security</b> <b>protocols</b> has {{increased}} significantly. Protection of the communications had been provided by <b>security</b> <b>protocols</b> and architectures, however some problems have appeared, revealing {{that the potential}} expansion of ICT can be limited if some interoperability problems are not solved. Our group have created and implemented a new methodology {{in order to reduce}} the interoperability problems of the implementations of <b>security</b> <b>protocols</b> and architectures. This methodology develops a completed conformance evaluation with the particular security standard and furthermore realizes a performance analysis of the more important parameters for the development of <b>security</b> <b>protocols...</b>|$|R
40|$|The {{subject of}} this thesis is to study {{available}} <b>security</b> <b>protocols</b> and tools for their verification. The first part is devoted to briefly describe the concepts related {{to the area of}} <b>security</b> <b>protocols</b> and verification logics. The second part directly lists various protocols, along with attacks and errors found in design. Next chapter describes the most important tools for automatic analysis of <b>security</b> <b>protocols</b> in more detail. The main part deals with verification of <b>security</b> <b>protocols</b> selected in the chosen tool called Scyther. In conclusion, examples of multiprotocol attacks along with a summary table are displayed...|$|R
40|$|Abstract—In {{this paper}} {{we face the}} problem of ver-ifying <b>security</b> <b>protocols</b> where {{temporal}} aspects ex-plicitly appear in the description. In previous work, we proposed Timed HLPSL, {{an extension of the}} speci-fication language HLPSL (originally developed in the Avispa Project), where quantitative temporal aspects of <b>security</b> <b>protocols</b> can be specified. In this work we present a model checking tool for the analysis of <b>security</b> <b>protocols</b> which employs THLPSL as a spec-ification language and UPPAAL as the model check-ing engine. To illustrate how our framework applies, we also provide a specification of the Wide Mouthed Frog protocol and show some experimental results on a number of <b>security</b> <b>protocols.</b> I...|$|R
2500|$|An Anonymizer such as I2P – The Anonymous Network or Tor can be {{used for}} {{accessing}} web services without them knowing one's IP address and without one's ISP knowing what the services are that one accesses. Additional software has been developed that may provide more secure and anonymous alternatives to other applications. [...] For example, Bitmessage {{can be used}} as an alternative for email and Cryptocat as an alternative for online chat. [...] On the other hand, in addition to End-to-End encryption software, there are web services such as Qlink which provide privacy through a novel <b>security</b> <b>protocol</b> which does not require installing any software.|$|E
2500|$|In January 2006, Archives New Zealand {{released}} to The Sunday Star-Times newspaper {{a box of}} David Lange's previously classified documents. They revealed New Zealand's ongoing involvement in Western alliance espionage, and a threat by the United States to spy on New Zealand {{if it did not}} back down from its ban on nuclear ships. Archives New Zealand chief executive [...] Dianne Macaskill said the paper did not have the authority to access or print the report, and wrote to the paper revoking permission to publish it. In response, the Sunday Star Times said the information had already been released into the public arena and hence could not be retracted. The release of the document prompted a high-level inquiry to investigate how the top-secret report ended up in Lange's personal papers, in breach of <b>security</b> <b>protocol.</b> A secret diplomatic cable released by Wikileaks in 2010 covers the accidental release of the document.|$|E
50|$|The swIPe IP <b>Security</b> <b>Protocol</b> (swIPe) is an {{experimental}} Internet Protocol (IP) <b>security</b> <b>protocol</b> that was specified in 1993. It operates at the Internet Layer of the Internet Protocol Suite.|$|E
40|$|In {{this paper}} we {{consider}} the problem of verifying time–sensitive <b>security</b> <b>protocols,</b> where temporal aspects explicitly appear in the description. In previous work, we proposed Timed HLPSL, {{an extension of the}} specification language HLPSL (originally developed in the Avispa Project), where quantitative temporal aspects of <b>security</b> <b>protocols</b> can be specified. In this work, a model checking tool, TPMC, for the analysis of <b>security</b> <b>protocols</b> is presented, which employs THLPSL as a specification language and UPPAAL as the model checking engine. To illustrate the tool, we provide a specification of the Wide Mouthed Frog protocol in THLPSL, and report some experimental results on a number of timed and untimed <b>security</b> <b>protocols...</b>|$|R
40|$|Abstract. <b>Security</b> <b>protocols</b> must be {{designed}} to ensure the integrity of electronic communications between participants. Although the design of secure communication protocols has improved {{over the years the}} tasks of building and validating these protocols remain inherently difficult. <b>Security</b> <b>protocols</b> may fail due to unintended use, malicious attacks, incorrect logic or incorrect transition from design to code. We present our research to investigate the use of UML 2 to model, verify and validate <b>security</b> <b>protocols...</b>|$|R
40|$|<b>Security</b> <b>protocols</b> aim {{to allow}} secure {{electronic}} communication despite the potential presence of eavesdroppers. Guaranteeing their correctness is vital in many applications. This report briefly surveys the many formal specification and verification techniques proposed for describing and analysing <b>security</b> <b>protocols...</b>|$|R
50|$|Transport Layer Security - Network <b>security</b> <b>protocol.</b>|$|E
5000|$|The {{protocol}} {{can be specified}} {{as follows}} in <b>security</b> <b>protocol</b> notation: ...|$|E
50|$|NSS {{originated}} from the libraries developed when Netscape invented the SSL <b>security</b> <b>protocol.</b>|$|E
40|$|Abstract — In {{this paper}} we {{consider}} the problem of verifying time–sensitive <b>security</b> <b>protocols,</b> where temporal aspects explicitly appear in the description. In previous work, we proposed Timed HLPSL, {{an extension of the}} specification language HLPSL (originally developed in the Avispa Project), where quantitative temporal aspects of <b>security</b> <b>protocols</b> can be specified. In this work, a model checking tool, TPMC, for the analysis of <b>security</b> <b>protocols</b> is presented, which employs THLPSL as a specification language and UPPAAL as the model checking engine. To illustrate the tool, we provide a specification of the Wide Mouthed Frog protocol in THLPSL, and report some experimental results on a number of timed and untimed <b>security</b> <b>protocols.</b> I...|$|R
40|$|Security is a {{major issue}} {{when it comes to}} {{electronic}} communications. The use of <b>security</b> <b>protocols</b> to provide <b>security</b> services is paramount. At the same time it is critical that the correctness of the employed protocols can be formally proven. However, the design of effective <b>security</b> <b>protocols</b> is complex and highly prone to error. This is highlighted by the large number of flaws found in <b>security</b> <b>protocols</b> subsequent to publication. This paper discusses the formal verification of <b>security</b> <b>protocols</b> using the a logic-based verification engine. As an example, the Kao Chow key distribution and authentication protocol is analysed. The performed verification reveals a freshness flaw in the protocol that allows an intruder to impersonate legitimate principals...|$|R
40|$|This {{research}} investigated {{methods to}} determine appropriate <b>security</b> <b>protocols</b> for specific wireless network applications. The specific problem being addressed {{was that there}} are tradeoffs between security, performance, and efficiency among current and proposed <b>security</b> <b>protocols.</b> Performance and efficiency issues are particularly important in wireless networks which tend to have constrained network capacity and connect to resource-limited nodes. Existing <b>security</b> <b>protocols</b> address problems such as authentication, availability, confidentiality, integrity, and non-repudiation. However, these protocols use resources and limit the efficient use of node resources. Thus, the overall objective {{of this research is}} to improve the efficiency of security mechanisms for wireless networks. A methodology was constructed to satisfy this objective and is an important contribution of this research. The methodology can be used to define the relevant operational parameters of different wireless network applications, classify wireless networks into distinct categories, incorporate appropriate <b>security</b> <b>protocols</b> to a category, and analyze the <b>security</b> <b>protocols</b> through metrics. Three groups of operational parameters wer...|$|R
50|$|Don't {{believe what}} Triton is telling you. I didn't write that <b>security</b> <b>protocol</b> notice.|$|E
5000|$|Trains {{intelligence}} community personnel to follow proper information <b>security</b> <b>protocol</b> with open source intelligence.|$|E
5000|$|The keys {{provided}} by PVS for security {{are long and}} random (a basic requirement in any <b>security</b> <b>protocol).</b>|$|E
40|$|We {{describe}} {{two state}} reduction techniques for finite-state models of <b>security</b> <b>protocols.</b> The techniques exploit certain protocol properties {{that we have}} identified as characteristic of <b>security</b> <b>protocols.</b> We prove the soundness of the techniques by demonstrating that any violation of protocol invariants is preserved in the reduced state graph. In addition, we describe an optimization method for evaluating parameterized rule conditions, which are common in our models of <b>security</b> <b>protocols.</b> All three techniques have been implemented in the Murphi verifier...|$|R
5000|$|Pre-configured HIPAA-compliant {{privacy and}} <b>security</b> <b>protocols</b> ...|$|R
40|$|<b>Security</b> <b>protocols</b> {{are used}} for {{establishing}} secure communication over insecure network. This document gives a brief introduction into description and formal specification {{in the area of}} <b>security</b> <b>protocols</b> design. It also includes description of the aplication library, its functions and methods how to use it...|$|R
