881|10|Public
5|$|Parallel {{computing}} {{is closely}} related to concurrent computing—they are frequently used together, and often conflated, though the two are distinct: it is possible to have parallelism without concurrency (such as bit-level parallelism), and concurrency without parallelism (such as multitasking by time-sharing on a <b>single-core</b> CPU). In parallel computing, a computational task is typically broken down in several, often many, very similar subtasks that can be processed independently and whose results are combined afterwards, upon completion. In contrast, in concurrent computing, the various processes often do not address related tasks; when they do, as is typical in distributed computing, the separate tasks may have a varied nature and often require some inter-process communication during execution.|$|E
25|$|The chips {{come in two}} sizes, with 6 MB and 3 MB L2 cache. The smaller {{version is}} {{commonly}} called Penryn-3M and Wolfdale-3M as well as Yorkfield-6M, respectively. The <b>single-core</b> version of Penryn, listed as Penryn-L here, is not a separate model like Merom-L but {{a version of the}} Penryn-3M model with only one active core.|$|E
25|$|The Mac Mini G4 used <b>single-core</b> 32-bit PowerPC {{processors}} with 512KB of on-chip L2 cache. The processor accessed memory {{through the}} front-side bus, which was clocked at 167MHz. The chips in these models of Mac Mini ran at either 1.25, 1.33, 1.42, or 1.5GHz. It {{also had an}} ATI Radeon 9200 graphics processor with 32MB of DDR SDRAM in the standard editions, which was upgraded to 64 MB VRAM in the high-end version of the final Mac Mini G4 in 2005.|$|E
40|$|<b>Single-cored</b> Ru@H-SiO 2 (H: hollow) {{core-shell}} nanoparticles (NPs) with around 4. 3 nm Ru cores {{and hollow}} SiO 2 shells were prepared successfully. In this synthetic process, we obtained multi-cored Ru@SiO 2 NPs initially, <b>single-cored</b> RuO 2 @H-SiO 2 NPs during treatment, and <b>single-cored</b> Ru@H-SiO 2 NPs in the end. The Ru@SiO 2 NPs were prepared by water-in-oil microemulsion method, {{and the size}} and core number of Ru@SiO 2 NPs can be controlled. <b>Single-cored</b> RuO 2 @H-SiO 2 NPs and Ru@H-SiO 2 NPs were successively obtained by calcination and reduction. The structure showed promising aggregate-resistant performance and potential application in catalysis. (C) 2016 Published by Elsevier B. V...|$|R
50|$|For all Opterons, {{the last}} two digits in the model number (the YY) {{indicate}} the clock frequency of a CPU, a higher number indicating a higher clock frequency. This speed indication is comparable to processors of the same generation {{if they have the}} same amount of cores, <b>single-cores</b> and dual-cores have different indications despite sometimes having the same clock frequency.|$|R
40|$|Worst-case {{execution}} time (WCET) analysis {{has reached a}} high level of precision in the analysis of sequential programs executing on <b>single-cores.</b> In this paper we extend a state-of-the-art WCET analysis technique to compute tight WCETs estimates of parallel applications running on multicores. The proposed technique is termed integrated because it considers jointly the sequential code regions running on the cores and the communications between them. This allows to capture the hardware effects across code regions assigned to the same core, which significantly improves analysis precision. We demonstrate that our analysis produces tighter {{execution time}} bounds than classical techniques which first determine the WCET of sequential code regions and then compute the global response time by integrating communication costs. Comparison is done on two embedded control applications, where the gain is of 21 % on average...|$|R
25|$|The console has custom {{components}} codeveloped by the Nintendo Research & Engineering Department {{and other}} manufacturers, all combined into a unified system on chip. The main processor (CPU) is a ARM11 MPCore-based dual-core processor manufactured at 45nm. One processor core {{is dedicated to}} games and applications, while the other core is exclusive to the operating system, enabling multitasking and background tasks. These tasks are handled seamlessly in the background during gameplay or while the system is in sleep mode. The system also contains a <b>single-core</b> ARM9 processor, enabling backward compatibility with Nintendo DS games. The graphics processor (GPU) is developed by Digital Media Professionals, and consists of a semi-custom PICA200 processor.|$|E
25|$|According to {{information}} provided in MediaTek's Q1 2014 financial results conference call, {{in terms of}} product mix, MediaTek's smartphone chipset shipments consisted of 5-10% <b>single-core,</b> 45-55% dual-core, 30-35% quad-core and 5-10% octa-core. Most octa-cores were sold in China, while the export market (chips sold directly to manufacturers {{in countries such as}} India) was dominated by dual-core. In terms of baseband technology (smartphones only), WCDMA was 50-55%, TD 25-30% and EDGE 10-15%. According to MediaTek's Q3 2014 conference call, dual-core shipments for entry-level devices continued to be important {{in the second half of}} 2014 with an increase in export shipments as MediaTek's competitiveness China was affected by the transition to 4G.|$|E
25|$|Among the b-bit numbers, {{the most}} {{difficult}} to factor in practice using existing algorithms are those that are products of two primes of similar size. For this reason, these are the integers used in cryptographic applications. The largest such semiprime yet factored was RSA-768, a 768-bit number with 232 decimal digits, on December 12, 2009. This factorization was a collaboration of several research institutions, spanning two years and taking the equivalent of almost 2000 years of computing on a <b>single-core</b> 2.2nbsp&GHz AMD Opteron. Like all recent factorization records, this factorization was completed with a highly optimized implementation of the general number field sieve run on hundreds of machines.|$|E
40|$|Increasingly complex {{consumer}} electronics applications call for embedded processors with higher performance. Multi-cores {{are capable of}} delivering the required perfor-mance. However, many of these embedded applications must meet some form of soft real-time constraints, and program be-havior on multi-cores is even harder to predict than on <b>single-cores.</b> In this article, we highlight the greater performance variability of irregular applications (non-regular control flow and/or data structures) across data sets when parallelized and run on a multi-core. We then show that a proper paral-lelization approach coupled with a lightweight run-time sys-tem can drastically reduce this performance variability with-out sacrificing their performance. This approach requires no complex program or architecture analysis or modeling. More-over, we show that parallel program performance becomes stable enough {{that it is possible}} to reasonably and accurately predict it by sampling a few training runs. 1...|$|R
40|$|International audienceWorst-case {{execution}} time (WCET) analysis {{has reached a}} high level of precision in the analysis of sequential programs executing on <b>single-cores.</b> In this paper we extend a state-of-the-art WCET analysis technique to compute tight WCETs estimates of parallel applications running on multicores. The proposed technique is termed integrated because it considers jointly the sequential code regions running on the cores and the communications between them. This allows to capture the hardware effects across code regions assigned to the same core, which significantly improves analysis precision. We demonstrate that our analysis produces tighter {{execution time}} bounds than classical techniques which first determine the WCET of sequential code regions and then compute the global response time by integrating communication costs. Comparison is done on two embedded control applications, where the gain is of 21 % on average...|$|R
40|$|This paper {{proposes a}} new way to tackle the problemof using the {{existing}} resources of multi-core processors withdifferent types of cores, like PowerPC, Intel, ARM, DSPs, FPGAareas, etc. Applications for these heterogeneous multi-cores aredifficult to write, as most programmers and programming toolstarget one platform only and in many cases <b>single-cores</b> only. The way to accomplish this is by creating a new layer, which islocated between the operating system and the underlyingheterogeneous hardware. In analogy to the middleware betweenapplications and the OS it is called “underware”. The underwarelayer itself consists of two sublayers: The lower “adapter layer”builds a uniform interface for any underlyingprocessor-core-configuration; above it lies the “schedulinglayer”, which automatically distributes applications to thecorresponding core or cores (if parallel execution is possible) oreven to several different idle cores if the application is available indifferent platform executables. Research on the approachdescribed in this paper is yet in an early stage; the correspondingproject “UNDERWARE” just started. Therefore no preliminaryresults can be given. However the concept is sound and it cantherefore be expected to get a first prototype soon...|$|R
2500|$|AMD {{has also}} {{introduced}} 64-bit processors into its embedded product line {{starting with the}} AMD Opteron processor. [...] Leveraging the high throughput enabled through HyperTransport and the Direct Connect Architecture these server class processors have been targeted at high-end telecom and storage applications. In 2007, AMD added the AMD Athlon, AMD Turion, and Mobile AMD Sempron processors to its embedded product line. Leveraging the same 64-bit instruction set and Direct Connect Architecture as the AMD Opteron but at lower power levels, these processors were well suited {{to a variety of}} traditional embedded applications. Throughout 2007 and into 2008, AMD has continued to add both <b>single-core</b> Mobile AMD Sempron and AMD Athlon processors and dual-core AMD Athlon X2 and AMD Turion processors to its embedded product line and now offers embedded 64-bit solutions starting with 8W TDP Mobile AMD Sempron and AMD Athlon processors for fan-less designs up to multi-processor systems leveraging multi-core AMD Opteron processors all supporting longer than standard availability.|$|E
2500|$|The Mk VII was {{different}} from earlier [...]303 bullet designs or spitzer projectiles in general. Although {{it appears to be}} a conventional spitzer-shape full metal jacket bullet, this appearance is deceptive: its designers made the front third of the interior of the Mk 7 bullets out of aluminium (from Canada) or tenite (cellulosic plastic), wood pulp or compressed paper, instead of lead and they were autoclaved to prevent wound infection. This lighter nose shifted the centre of gravity of the bullet towards the rear, making it tail heavy. Although the bullet was stable in flight due to the gyroscopic forces imposed on it by the rifling of the barrel, it behaved very differently upon hitting the target. As soon as the bullet hit the target and decelerated, its heavier lead base caused it to pitch violently and deform, thereby inflicting more severe gunshot wounds than a standard <b>single-core</b> spitzer design. In spite of this, the Mk VII bullet was legal due to the full metal jacket used according to the terms of the Hague Convention.|$|E
2500|$|The {{limits of}} {{specific}} approaches {{continue to be}} tested, as boundaries are reached through large scale experiments, e.g., in 2011 IBM ended its participation in the Blue Waters petaflops project at the University of Illinois. The Blue Waters architecture {{was based on the}} IBM POWER7 processor and intended to have 200,000 cores with a petabyte of [...] "globally addressable memory" [...] and 10 petabytes of disk space. The goal of a sustained petaflop led to design choices that optimized <b>single-core</b> performance, and hence a lower number of cores. The lower number of cores was then expected to help performance on programs that did not scale well to a large number of processors. The large globally addressable memory architecture aimed to solve memory address problems in an efficient manner, for the same type of programs. Blue Waters had been expected to run at sustained speeds of at least one petaflop, and relied on the specific water-cooling approach to manage heat. In the first four years of operation, the National Science Foundation spent about $200 million on the project. IBM released the Power 775 computing node derived from that project's technology soon thereafter, but effectively abandoned the Blue Waters approach.|$|E
40|$|Introduction Lake Malawi, {{located in}} the {{southern}} part of the East African Rift Valley, is one of the world’s largest, deepest (700 m) and oldest (> 7 Ma) lakes and is renowned for its biodiversity, especially its unique ecosystem including hundreds of species of fi sh and invertebrates found nowhere else on Earth. Geologists and paleolimnologists have sought for several decades to establish a high-resolution East African geologic and climatic history through scientific drilling of the East African Rift Valley lakes. The Lake Malawi Scientific Drilling Project reached this goal by acquiring more than 623 m of core at two sites—one highresolution site and one deep site extending back to 1. 5 Ma. A total of seven holes, including one hole in 600 m water depth that reached a subbottom depth of 380 m, were cored with an average recovery of 92 %. The high-resolution site was triplecoredand extends back ~ 80 ky. The deep site was double cored in the upper part that covers the past ~ 200 ky and then <b>single-cored</b> to its target depth of 380 m (Figs. 1 and 2) ...|$|R
40|$|Abstract — This paper {{proposes a}} new way to tackle the problem of using the {{existing}} resources of multi-core processors with different types of cores, like PowerPC, Intel, ARM, DSPs, FPGA areas, etc. Applications for these heterogeneous multi-cores are difficult to write, as most programmers and programming tools target one platform only and in many cases <b>single-cores</b> only. The way to accomplish this is by creating a new layer, which is located between the operating system and the underlying heterogeneous hardware. In analogy to the middleware between applications and the OS it is called “underware”. The underware layer itself consists of two sublayers: The lower “adapter layer” builds a uniform interface for any underlying processor-core-configuration; above it lies the “scheduling layer”, which automatically distributes applications to the corresponding core or cores (if parallel execution is possible) or even to several different idle cores if the application is available in different platform executables. Research on the approach described in this paper is yet in an early stage; the corresponding project “UNDERWARE ” just started. Therefore no preliminary results can be given. However the concept is sound and it can therefore be expected to get a first prototype soon. IndexTerms—Multi-core, heterogeneous, middleware, underware I...|$|R
40|$|Papers number 2 - 7 and {{appendix}} B and C of {{this thesis}} {{are not available}} in Munin: 2. Hagen, T-M. S., Johnsen, E. S., Stødle, D., Bjorndalen, J. M. and Anshus, O. : 'Liberating the Desktop', First International Conference on Advances in Computer-Human Interaction (2008), pp 89 - 94. Available at [URL] 3. Tor-Magne Stien Hagen, Oleg Jakobsen, Phuong Hoai Ha, and Otto J. Anshus: 'Comparing the Performance of Multiple <b>Single-Cores</b> versus a Single Multi-Core' (manuscript) 4. Tor-Magne Stien Hagen, Phuong Hoai Ha, and Otto J. Anshus: 'Experimental Fault-Tolerant Synchronization for Reliable Computation on Graphics Processors' (manuscript) 5. Tor-Magne Stien Hagen, Daniel Stødle and Otto J. Anshus: 'On-Demand High-Performance Visualization of Spatial Data on High-Resolution Tiled Display Walls', Proceedings of the International Conference on Imaging Theory and Applications and International Conference on Information Visualization Theory and Applications (2010), pages 112 - 119. Available at [URL] 6. Bård Fjukstad, Tor-Magne Stien Hagen, Daniel Stødle, Phuong Hoai Ha, John Markus Bjørndalen and Otto Anshus: 'Interactive Weather Simulation and Visualization on a Display Wall with Many-Core Compute Nodes', Para 2010 – State of the Art in Scientific and Parallel Computing. Available at [URL] 7. Tor-Magne Stien Hagen, Daniel Stødle, John Markus Bjørndalen, and Otto Anshus: 'A Step towards Making Local and Remote Desktop Applications Interoperable with High-Resolution Tiled Display Walls', Lecture Notes in Computer Science (2011), Volume 6723 / 2011, 194 - 207. Available at [URL] The vast volume of scientific data produced today requires tools that can enable scientists to explore large amounts of data to extract meaningful information. One such tool is interactive visualization. The amount of data that can be simultaneously visualized on a computer display {{is proportional to the}} display’s resolution. While computer systems in general have seen a remarkable increase in performance the last decades, display resolution has not evolved at the same rate. Increased resolution can be provided by tiling several displays in a grid. A system comprised of multiple displays tiled in such a grid is referred to as a display wall. Display walls provide orders of magnitude more resolution than typical desktop displays, and can provide insight into problems not possible to visualize on desktop displays. However, their distributed and parallel architecture creates several challenges for designing systems that can support interactive visualization. One challenge is compatibility issues with existing software designed for personal desktop computers. Another set of challenges include identifying characteristics of visualization systems that can: (i) Maintain synchronous state and display-output when executed over multiple display nodes; (ii) scale to multiple display nodes without being limited by shared interconnect bottlenecks; (iii) utilize additional computational resources such as desktop computers, clusters and supercomputers for workload distribution; and (iv) use data from local and remote compute- and data-resources with interactive performance. This dissertation presents Network Accessible Compute (NAC) resources and Network Accessible Display (NAD) resources for interactive visualization of data on displays ranging from laptops to high-resolution tiled display walls. A NAD is a display having functionality that enables usage over a network connection. A NAC is a computational resource that can produce content for network accessible displays. A system consisting of NACs and NADs is either push-based (NACs provide NADs with content) or pull-based (NADs request content from NACs). To attack the compatibility challenge, a push-based system was developed. The system enables several simultaneous users to mirror multiple regions from the desktop of their computers (NACs) onto nearby NADs (among others a 22 megapixel display wall) without requiring usage of separate DVI/VGA cables, permanent installation of third party software or opening firewall ports. The system has lower performance than that of a DVI/VGA cable approach, but increases flexibility such as the possibility to share network accessible displays from multiple computers. At a resolution of 800 by 600 pixels, the system can mirror dynamic content between a NAC and a NAD at 38. 6 frames per second (FPS). At 1600 x 1200 pixels, the refresh rate is 12. 85 FPS. The bottleneck of the system is frame buffer capturing and encoding/decoding of pixels. These two functional parts are executed in sequence, limiting the usage of additional CPU cores. By pipelining and executing these parts on separate CPU cores, higher frame rates can be expected and by a factor of two in the best case. To attack all presented challenges, a pull-based system, WallScope, was developed. WallScope enables interactive visualization of local and remote data sets on high-resolution tiled display walls. The WallScope architecture comprises a compute-side and a display-side. The compute-side comprises a set of static and dynamic NACs. Static NACs are considered permanent to the system once added. This type of NAC typically has strict underlying security and access policies. Examples of such NACs are clusters, grids and supercomputers. Dynamic NACs are compute resources that can register on-the-fly to become compute nodes in the system. Examples of this type of NAC are laptops and desktop computers. The display-side comprises of a set of NADs and a data set containing data customized for the particular application domain of the NADs. NADs are based on a sort-first rendering approach where a visualization client is executed on each display-node. The state of these visualization clients is provided by a separate state server, enabling central control of load and refresh-rate. Based on the state received from the state server, the visualization clients request content from the data set. The data set is live in that it translates these requests into compute messages and forwards them to available NACs. Results of the computations are returned to the NADs for the final rendering. The live data set is close to the NADs, both in terms of bandwidth and latency, to enable interactive visualization. WallScope can visualize the Earth, gigapixel images, and other data available through the live data set. When visualizing the Earth on a 28 -node display wall by combining the Blue Marble data set with the Landsat data set using a set of static NACs, the bottleneck of WallScope is the computation involved in combining the data sets. However, the time used to combine data sets on the NACs decreases by a factor of 23 when going from 1 to 26 compute nodes. The display-side can decode 414. 2 megapixels of images per second (19 frames per second) when visualizing the Earth. The decoding process is multi-threaded and higher frame rates are expected using multi-core CPUs. WallScope can rasterize a 350 -page PDF document into 550 megapixels of image-tiles and display these image-tiles on a 28 -node display wall in 74. 66 seconds (PNG) and 20. 66 seconds (JPG) using a single quad-core desktop computer as a dynamic NAC. This time is reduced to 4. 20 seconds (PNG) and 2. 40 seconds (JPG) using 28 quad-core NACs. This shows that the application output from personal desktop computers can be decoupled from the resolution of the local desktop and display for usage on high-resolution tiled display walls. It also shows that the performance can be increased by adding computational resources giving a resulting speedup of 17. 77 (PNG) and 8. 59 (JPG) using 28 compute nodes. Three principles are formulated based on the concepts and systems researched and developed: (i) Establishing the end-to-end principle through customization, is a principle stating that the setup and interaction between a display-side and a compute-side in a visualization context can be performed by customizing one or both sides; (ii) Personal Computer (PC) – Personal Compute Resource (PCR) duality states that a user’s computer is both a PC and a PCR, implying that desktop applications can be utilized locally using attached interaction devices and display(s), or remotely by other visualization systems for domain specific production of data based on a user’s personal desktop install; and (iii) domain specific best-effort synchronization stating that for distributed visualization systems running on tiled display walls, state handling can be performed using a best-effort synchronization approach, where visualization clients eventually will get the correct state after a given period of time. Compared to state-of-the-art systems presented in the literature, the contributions of this dissertation enable utilization of a broader range of compute resources from a display wall, {{while at the same time}} providing better control over where to provide functionality and where to distribute workload between compute-nodes and display-nodes in a visualization context...|$|R
2500|$|Zen {{is a new}} {{architecture}} for x86-64 based Ryzen series CPUs and APUs, {{introduced in}} 2017 by AMD and built {{from the ground up}} by a team led by Jim Keller, beginning with his arrival in 2012, and taping out before his departure in September 2015. One of AMD's primary goals with Zen was an IPC increase of at least 40%, however in February 2017 AMD announced that they had actually achieved a 52% increase. Processors made on the Zen architecture are built on the 14nm FinFET node and have a renewed focus on <b>single-core</b> performance and HSA compatibility. Previous processors from AMD were either built in the 32nm process ("Bulldozer" [...] and [...] "Piledriver" [...] CPUs) or the 28nm process ("Steamroller" [...] and [...] "Excavator" [...] APUs). Because of this, Zen is much more energy efficient. The Zen architecture is the first to encompass CPUs and APUs from AMD built for a single socket (Socket AM4). Also new for this architecture is the implementation of simultaneous multithreading (SMT) technology, something Intel has had for years on some of their processors with their proprietary Hyper-Threading implementation of SMT. This is a departure from the [...] "Clustered MultiThreading" [...] design introduced with the Bulldozer architecture. Zen also has support for DDR4 memory. AMD released the Zen-based high-end Ryzen 7 [...] "Summit Ridge" [...] series CPUs on March 2, 2017, mid-range Ryzen 5 series CPUs on April 11, 2017, and entry level Ryzen 3 series CPUs on July 27, 2017. AMD later released the Epyc line of Zen derived server processors for 1P and 2P systems. In October 2017, AMD released Zen based APUs as Ryzen Mobile, incorporating Vega graphics cores.|$|E
50|$|Pentium D, 2 <b>single-core</b> dies {{packaged}} in a multi-chip module.|$|E
5000|$|LG Optimus Net, with an {{improved}} 800 MHz <b>single-core</b> processor ...|$|E
50|$|Each socket {{may hold}} either a <b>single-core</b> PA-RISC {{processor}} (PA-8600 or PA-8700), or a dual-core PA-RISC processor (PA-8800 or PA-8900), a <b>single-core</b> Itanium 2 processor, two Itanium 2 processors (using the mx2 module), or one dual-core Itanium 2 processor. There are almost no architectural differences between PA-RISC and Itanium versions of Superdome.|$|E
50|$|Pentium Extreme Edition, 2 <b>single-core</b> dies {{packaged}} in a multi-chip module.|$|E
50|$|These GPU {{can be used}} {{in either}} <b>single-core</b> or {{multi-core}} configurations.|$|E
5000|$|... #Caption: The <b>single-core</b> 32 nm A5r3 S5L8947 {{introduced}} in March 2013.|$|E
5000|$|<b>Single-core</b> PVC-insulated cables in conduit (fixed {{internal}} wiring; {{less common}} in domestic installations) ...|$|E
5000|$|<b>Single-core</b> Athlon 64 and Athlon 64 FX : Newcastle, Venice, San Diego and Lima ...|$|E
50|$|The major {{differentiator}} is {{in processing}} power: While Galaxy Ace 2 has a dual-core 800 MHz CPU, then Galaxy Ace II x and Galaxy Trend contain a <b>single-core</b> 1 GHz ARM Cortex-A5 processor {{in conjunction with}} an enhanced Adreno 200 GPU. The <b>single-core</b> Snapdragon S1 MSM7227A ARMv7 SoC design is {{much closer to the}} one in Samsung Galaxy Mini 2.|$|E
50|$|The {{processing}} time obtained with a SSE <b>single-core</b> implementation of Lyra2 {{are illustrated in}} the figure besides.|$|E
5000|$|Two PowerPC 970FX <b>single-core</b> {{processors}} at 2.7 GHz or two PowerPC 970MP dual-core processors at 2.5 GHz ...|$|E
50|$|The Galaxy W uses a <b>single-core</b> 1.4 GHz Scorpion Qualcomm powered Snapdragon chip {{along with}} Adreno 205 for its GPU graphics.|$|E
5000|$|CPU: Xtensa dual-core (or <b>single-core)</b> 32-bit LX6 microprocessor, {{operating}} at 160 or 240 MHz and performing {{at up to}} 600 DMIPS ...|$|E
5000|$|The ILP wall; the {{increasing}} difficulty of finding enough parallelism {{in a single}} instruction stream to keep a high-performance <b>single-core</b> processor busy.|$|E
50|$|Independent {{benchmarks}} {{of representative}} communications systems by Berkeley Design (BDTI) {{indicate that the}} picoArray delivers significantly better performance-per-dollar than traditional <b>single-core</b> DSP devices.|$|E
50|$|The HTC Desire 200 is a low-end Android {{smartphone}} {{released by}} HTC in 2013. It uses a 3.5-inch display and <b>single-core</b> 1 GHz processor.|$|E
50|$|Z90S7 - Wyse’s highest {{performance}} <b>single-core</b> processor thin client running Windows Embedded Standard 7 operating system. Supports dual hi-def video and numerous I/O options.|$|E
