9|213|Public
40|$|Recent advancements in {{wireless}} communication technology and portable computing are opening up exciting {{possibilities for the}} future of mobile network applications. One obvious domain for such mobile network applications is in vehicle traffic scenarios, where vehicle-mounted mobile hosts, with {{wireless communication}} ability, form an ad hoc network. With the aim of improving transportation systems, through the reduction of road accidents, inter-vehicle coordination applications are being built upon these vehicle-based ad hoc networks. This dissertation is concerned with investigating the use of group communication to support inter-vehicle coordination applications in ad hoc networks. Specifically, one particular case study of inter-vehicle coordination is examined: the 4 Way Stop. A 4 Way Stop is a common road junction, with four approaching roads, of equal importance, meeting at a single point. The problem of a 4 Way Stop is in determining which vehicle should be allowed to cross the junction at any one time. This dissertation identifies the requirements on group communication to successfully support a 4 Way <b>Stop</b> <b>application.</b> Requirements for optional group communication application implementations: primary component implementation and partitionable membership implementation are both listed. Moving from the specific to the general, the examination of a 4 Way <b>Stop</b> <b>application</b> provides valuable insights into the general domain of inter-vehicle coordination...|$|E
40|$|Persistent object stores {{require a}} way to {{automatically}} upgrade persistent objects, to change their code and storage representation. Automatic upgrades are a challenge for such systems. Upgrades must be performed {{in a way that}} is e#- cient both in space and time, and that does not <b>stop</b> <b>application</b> access to the store. In addition, however, the approach must be modular: it must allow programmers to reason locally about the correctness of their upgrades similar to the way they would reason about regular code. This paper provides solutions to both problems. The pape...|$|E
40|$|In {{the modern}} {{geological}} mapping activities geomatics technologies can facilitate data collection during field survey and avoid practical {{problems related to}} the transposition of that data onto topographic maps. This paper describes an innovative tool (the Solid True Ortho-Photo; STOP) for the structured acquisition and recording of geological field survey data that is immediately available in a GIS framework. An experimental software graphical interface has been developed to manage the <b>STOP</b> <b>application</b> during the survey. The benefits of the STOP system were tested by producing a digital map of the Quaternary formations and landforms in a 3 -km 2 sector of the Rodoretto Valley, a minor tributary of the Germanasca Valley, northwestern Ital...|$|E
5000|$|That second order <b>stopped</b> further <b>applications</b> of the PIO card, and ...|$|R
40|$|The paper {{contains}} {{results of}} analytical and numerical {{investigation of the}} oscillations of 2 DOF {{system in which the}} amplitudes are limited by one- or two-sided stops. It is shown that the <b>application</b> of <b>stops</b> in absorber subsystem can get lower the amplitudes of basic external forced system approx to 50 %. The efficiency of <b>stops</b> <b>application</b> on self-excited system is very low...|$|R
50|$|The DIAL {{protocol}} has two components, DIAL Service Discovery and the DIAL REST Service. The DIAL Service Discovery {{enables a}} DIAL client device to discover DIAL servers on its local network segment and obtain {{access to the}} DIAL REST Service on those devices. The DIAL REST Service enables a DIAL client to query, launch and optionally <b>stop</b> <b>applications</b> on a DIAL Server device.|$|R
40|$|This paper {{describes}} a novel mechanism for upgrading objects in an object-oriented database. Unlike earlier systems, our mechanism is expressive, supporting a {{rich set of}} upgrades; it is efficient and does not <b>stop</b> <b>application</b> access to run an upgrade; it avoids making copies of the database; yet it provides good semantics. Expressive ecient upgrades can lead to problems for the code that upgrades objects. For example, the code might observe broken invariants or interfaces unknown {{at the time it}} was written. The paper shows how to use a variant of ownership types to avoid such problems and enable programmers to reason about the correctness of their upgrades. Our approach to correctness is novel, and is a significant contribution of this paper. This paper als...|$|E
40|$|Kaposi’s varicelliform {{eruption}} is {{a widespread}} viral infection frequently caused by herpes simplex virus types 1 and 2, and less frequently Coxsackie A- 16 and vaccinia virus superimposed on a pre-existing dermatosis. It {{is often associated with}} atopic dermatitis. The topical immunomodulator pimecrolimus have proven effective in managing atopic dermatitis. Reported adverse effects are infrequent; however, cutaneous infections are potential complications of its application. Kaposi’s varicelliform eruption is the most important problem in treating patients with atopic dermatitis with pimecrolimus. Even though the causative effect of this topical immunomodulator remains unclear, patients should be thought to recognise herpes simplex virus infection and <b>stop</b> <b>application</b> to prevent the spreading of the infection. Herein we report a child with atopic dermatitis who developed Kaposi’s varicelliform eruption during treatment with pimecrolimus because of its rare occurenc...|$|E
40|$|Abstract — Software Inspection is used {{to enhance}} {{software}} quality by detecting and removing software defects that mar software quality. Software design defects are design flaws which might not <b>stop</b> <b>application</b> from working but will hamper the process of extension and reuse of application. Software design defects manifest themselves {{in the form of}} AntiPatterns and Code Smells. In Software Inspection, we can detect Code Smells and Anti Patterns by using visualization or metrics based solution. But, currently there is no process that defines the steps to detect Code Smells and Anti Patterns by using Rule Based Checklist. In this paper, we propose Process-based Detection of Code Smells and Anti Patterns. We have defined Rule Set and Checklist for software design defects i. e. Code Smells and Anti Patterns and applied and validated the Rules set and Checklists on an industrial project...|$|E
50|$|The Application Manager in the Settings {{application}} {{can be used}} to Force <b>Stop</b> the <b>application.</b>|$|R
5|$|March: Oracle Corporation {{announces that}} it will <b>stop</b> {{developing}} <b>application</b> software, middleware, and Oracle Linux for the Itanium.|$|R
50|$|Though Sun has patched the Java {{vulnerability}} (in advisory #244988 (as of versions JDK and JRE 6 Update 11 (December 2, 2008), JDK and JRE 5.0 Update 17, and SDK and JRE 1.4.2_19)., {{because some}} users run installed versions of Java pre-dating the JRE patch, this issue {{needs to be}} addressed as an issue of browser security. Sun's patch does not, however, <b>stop</b> <b>applications</b> from taking ownership of user-supplied content.|$|R
40|$|Abstract Persistent object stores {{require a}} way to {{automatically}} upgrade persistent objects, to change their code and storage representation. Automatic upgrades are a challenge for such systems. Upgrades must be performed {{in a way that}} is efficient both in space and time, and that does not <b>stop</b> <b>application</b> access to the store. In addition, however, the approach must be modular: it must allow programmers to reason locally about the correctness of their upgrades similar to the way they would reason about regular code. This paper provides solutions to both problems. The paper first defines upgrade modularity conditions that any upgrade system must satisfy to support local reasoning about upgrades. The paper then describes a new approach for executing upgrades efficiently while satisfying the upgrade modularity conditions. The approach exploits object encapsulation properties in a novel way. The paper also describes a prototype implementation and shows that our upgrade system imposes only a small overhead on application performance...|$|E
40|$|Gas {{lubrication}} {{has found}} a place of particular importance where {{it is necessary to}} keep the environment free from contamination by conventional lubricants. Pivot less tilting pad gas bearing mainly used for high speed rotors where whirling is the main issue. Each pad of the journal bearing forms a subsystem with its own local parameters to sustain the load. Basically three pads are used and each pad acts separately on the journal for better load carrying capacity. So during frequent start and <b>stop</b> <b>application</b> pads are coming in contacts protecting the bearing house. This paper contains aeronamic analysis of pivot less tilting pad gas journal bearing. Reynolds’equation is solved by finite difference method and Newton-Raphson method. Static characteristics like pressure profile, load carrying capacity, frictional force,coefficient of friction are calculated, and method to find dynamic parameters of stiffness and damping of a pivotless tilting pad gas journal bearing is shown. The author believes that such detail analysis on tilting pad gas journal bearing at different condition will help researchers around the world. ...|$|E
40|$|Abstract This paper {{describes}} a novel mechanism for upgrading objects in an object-oriented database. Unlike earlier systems, our mechanism is expressive, supporting a {{rich set of}} upgrades; it is efficient and does not <b>stop</b> <b>application</b> access to run an upgrade; it avoids making copies of the database; yet it provides good semantics. Expressive efficient upgrades can lead to problems for the code that upgrades objects. For example, the code might observe broken invariants or interfaces unknown {{at the time it}} was written. The paper shows how to use a variant of ownership types to avoid such problems and enable programmers to reason about the correctness of their upgrades. Our approach to correctness is novel, and is a significant contribution of this paper. This paper also presents a new ownership type system. Previous ownership type systems only supported a weak encapsulation property. Enforcing object encapsulation, while supporting subtyping and paradigms like iterators, has been an open problem. Our type system provides a satisfactory solution to this open problem. The novel idea is that we handle inner classes specially [...] our type system allows objects of inner classes to have privileged access to the representations of the corresponding objects of the outer classes. This principled violation of encapsulation allows programmers to express paradigms like iterators, yet they can reason locally about program correctness...|$|E
40|$|A 80 -year-old priest {{developed}} itchy, erythematous, scaly and fissured area on {{the centre}} of his forehead, palmar aspect of right hand fingers and medial half of left palm. These were suspected to be contact dermatitis due to sandalwood paste he was using on these areas. Patch test with sandalwood paste was positive. All the lesions cleared in 10 days after <b>stopping</b> <b>application</b> of sandalwood paste and topical application of betamethasone valerate cream and recurred in 2 days when the application of paste was restarted...|$|R
50|$|On September 10, 2007, Ameriquest <b>stopped</b> {{accepting}} loan <b>applications.</b>|$|R
50|$|In August 2016, {{the company}} was barred from enrolling new {{students}} who use government loans; on the 30th of the same month, ITT Technical Institute <b>stopped</b> accepting <b>applications</b> for new enrollment.|$|R
30|$|The {{important}} parts of the trajectories (<b>stops)</b> are <b>application</b> dependent, and are not known a priori, therefore {{they have to be}} computed. Different methods have been proposed for computing {{important parts}} of trajectories [9 – 11].|$|R
50|$|AS-Interface {{provides}} {{a basis for}} Functional Safety in machinery safety/emergency <b>stop</b> <b>applications.</b> Safety devices communicating over AS-Interface follow all the normal AS-Interface data rules. The required level of data verification is provided by dynamic changes in the data. This technology is called Safety at Work and allows safety devices and standard, non-safe devices {{to be connected to}} the same network. Using appropriate safe input hardware (e.g. light curtains, e-stop buttons, and door interlock switches), AS-Interface can provide safety support up to SIL (Safety Integrity Level) 3 according to EN 62061, CAT 4 according to EN954-1 as well as Performance Level e (PL e) according to EN ISO 13849-1.|$|R
5000|$|In December 2006, {{given the}} [...] "brownstone-Brooklyn baby boom", Berkeley Carroll {{experienced}} an unprecedented overload of preschool applicants. This led {{the school to}} <b>stop</b> accepting <b>applications</b> early, much {{to the dismay of}} parents, as reported in New York magazine.|$|R
50|$|In 2008, Portobello West <b>stopped</b> using paper <b>applications,</b> {{transferring}} all application {{processes to}} a web-based system.|$|R
5000|$|... • Schindler {{introduces}} the 330A hydraulic elevator, capable of four (4) <b>stops</b> with hole-less <b>application</b> 1999 ...|$|R
5000|$|Vexler, A. and Dmitrienko, A. (1999). Approximations to {{expected}} <b>stopping</b> {{times with}} <b>applications</b> to sequential estimation. Sequential Analysis. 18, 165-187 ...|$|R
50|$|The last type {{of shared}} {{applications}} are multi-user 3D Java applications. Packaged as modules, these applications can contain {{any combination of}} artwork and code. An example is the audio recorder mentioned above. This small application includes code for capturing, storing, and playing back audio. It also includes artwork for the recorder, complete with reels that spin when the recorder is on and 3D buttons for Record, Play, and <b>Stop.</b> <b>Applications</b> can be as small as the audio recorder, {{as large as a}} whole world, or somewhere in between. For example, the 'Glasshouse world' from Green Phosphor includes dynamically generated, interactive 3D graphs created from data stored in external corporate data warehouses, databases, or spreadsheets. While collaborating, users can highlight rows, columns or cells, and they can drill down into the data by generating sub-graphs.|$|R
50|$|As of December 15, 2010, the CalPERS Board of Administration {{approved}} {{the suspension of}} the CalPERS Member Home Loan Program and <b>stopped</b> accepting new <b>applications.</b>|$|R
5000|$|In June 2010, the FCC <b>stopped</b> {{accepting}} new <b>applications</b> {{for digital}} LPTV stations while it considered the spectrum {{needs of the}} National Broadband Plan. [...] In a Notice of Proposed Rulemaking published in September 2010, the FCC suggested setting a shutoff date for all analog TV transmissions, including LPTV stations, in 2012. It also proposed moving all low-power stations on channels 52-69 to new frequencies, to free the 700 MHz band for other uses. [...] In April 2011, the NTIA {{announced that it would}} <b>stop</b> accepting <b>applications</b> for grants toward upgrading LPTV stations to digital transmission as of July 2, 2012. [...] The grant program was initially funded with $44 million; , over $30 million in grant funding remained available.|$|R
50|$|ESN and UIMID codes were {{exhausted}} by late 2008 {{at which point}} only reclaimed codes could be assigned to manufacturers including portions of blocks assigned to manufacturers but never used and portions used for technologies other than CDMA2000. The TIA <b>stopped</b> accepting <b>applications</b> for UIMID blocks on June 30, 2010. Only one assignment has been made since 2010.|$|R
50|$|The Engineering Credential Evaluation International (ECEI) was {{established}} in 1997 as the credential evaluation service of ABET. ECEI specialized {{in the evaluation of}} degrees in engineering, engineering technology, computer science, and surveying from outside the U.S. As of October 30, 2006, ECEI <b>stopped</b> accepting <b>applications</b> for credentials evaluation; a business decision made by the ABET board of directors.|$|R
50|$|The Jacob K. Javits Fellowship program {{formerly}} provided fellowships {{to students}} of superior academic ability—selected {{on the basis}} of demonstrated achievement, financial need, and exceptional promise—to undertake study at the doctoral and Master of Fine Arts level in selected fields of arts, humanities, and social sciences. The program <b>stopped</b> accepting <b>applications</b> as of fiscal year 2012.|$|R
40|$|We {{introduce}} {{and evaluate}} a middleware clustering technology capable of allocating resources to web applications through dynamic application instance placement. We define application instance placement {{as the problem}} of placing application instances on a given set of server machines to adjust the amount of resources available to applications in response to varying resource demands of application clusters. The objective is to maximize the amount of demand that may be satisfied using a configured placement. To limit the disturbance to the system caused by starting and <b>stopping</b> <b>application</b> instances, the placement algorithm attempts to minimize the number of placement changes. It also strives to keep resource utilization balanced across all server machines. Two types of resources are managed, one load-dependent and one load-independent. When putting the chosen placement in effect our controller schedules placement changes {{in a manner that}} limits the disruption to the system...|$|R
40|$|Liquid crystal polymer {{networks}} {{respond with}} an anisotropic deformation {{to a range}} of external stimuli. When doped with molecular photoswitches, these materials undergo complex shape modifications under illumination. As the deformations are reversed when irradiation <b>stops,</b> <b>applications</b> where the activated shape is required to have thermal stability have been precluded. Previous attempts to incorporate molecular switches into thermally stable photoisomers were unsuccessful at photogenerating macroscopic shapes that are retained over time. Herein, we show that to preserve photoactivated molecular deformation on the macroscopic scale, it is important not only to engineer the thermal stability of the photoswitch but also to adjust the cross-linking density in the polymer network and to optimize the molecular orientations in the material. Our strategy resulted in materials containing fluorinated azobenzenes that retain their photochemical shape for more than eight days, which constitutes the first demonstration of long-lived photomechanical deformation in liquid-crystal polymer networks...|$|R
40|$|The ever growing {{software}} complexity {{suggests that}} they will never be bugfree and therefore secure. Software compagnies regulary publish updates. But maybe {{because of lack of}} time or care or maybe because <b>stopping</b> <b>application</b> is annoying, such updates are rarely if ever deployed on users' machines. We propose an integrated tool allowing system administrators to deploy critical security updates on the fly on applications running remotly without end-user intervention. Our approach is based on an aspect weaving system, Arachne, that dynamicaly rewrites binary code. Hence updated applications are still running while they are updated. Our second tool Minerve integrates Arachne within the standart updating process: Minerve takes a patch produced by dif and eventually builds a dynamic patch that can later be woven to update the application on the fly. In addition, Minerve allows to consult patches translated in a dedicated language and hence eases auditing tasks...|$|R
5000|$|As of September 1, 2016, Google <b>stopped</b> {{accepting}} new <b>applications</b> to the Grantspro program, simply stating: [...] "The Ad Grants team is {{no longer}} accepting Grantspro applications." ...|$|R
5000|$|Asset and {{application}} management: install/remove, update, gather inventory, version check and the starting or <b>stopping</b> of mobile <b>applications,</b> such as virus protection, encryption and mobile email clients.|$|R
40|$|A Persistent Node is a {{redundant}} distributed {{mechanism for}} storing a key/value pair reliably in a geographically local network. In this paper, I develop {{a method of}} establishing Persistent Nodes in an amorphous matrix. I address issues of construction, usage, atomicity guarantees and reliability {{in the face of}} <b>stopping</b> failures. <b>Applications</b> include routing, congestion control, and data storage in gigascale networks...|$|R
