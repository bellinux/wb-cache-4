0|2681|Public
40|$|A <b>work</b> <b>product</b> is {{a general}} {{abstraction}} that represents something obtained from the software development process. A <b>work</b> <b>product</b> may have many <b>work</b> <b>product</b> kinds. For instance, {{we might want to}} have a seriesof <b>work</b> <b>product</b> kinds that keeps up a correspondence to the overall intent of <b>work</b> <b>products,</b> such as specification, plan, or model. There are three types of work products- Artifact, Outcome and Deliverable. An artifact is formal <b>work</b> <b>product</b> that is produced, modified, or used by a task, defines an area of responsibility and is subject to version control. Outcome primarily describes intangible <b>work</b> <b>products</b> that are a result or state. An Outcome {{can also be used to}} represent an informal <b>work</b> <b>product.</b> A deliverable is an output from a process that has a value, material or otherwise, to a customer or other stakeholder. In this paper we have investigated the software metrics to evaluate different <b>work</b> <b>products</b> in analysis & design. Tasks have input and output <b>work</b> <b>products.</b> Roles use <b>work</b> <b>products</b> to perform tasks, and produce otherwork products in the course of performing tasks. <b>Work</b> <b>products</b> are the responsibility of a single role, making responsibility easy to identify and understand, and promoting the idea that every piece of information produced in the process requires the appropriate set of skills. Even though one role may "own" the <b>work</b> <b>product,</b> other roles will use the <b>work</b> <b>product,</b> perhaps even updating it if the role has been given permission to do so. We have suggested some metrics pertaining to the input and output artifacts. The metrics that we developed are for analysis and design process, software architecture document artifact, and design model artifact. Also we investigated how to quantify the artifact checklist items and make a decision about the quality for different attributes of the process and artifacts, and finally deciding upon the overall quality...|$|R
50|$|<b>Work</b> <b>products</b> are {{required}} to demonstrate your proficiency working in the profession. These <b>work</b> <b>products</b> should reflect your knowledge and skill {{of the field and}} have been predominantly your work. Completion of {{at least two of the}} <b>work</b> <b>products</b> must have occurred in the past five years. The remaining <b>work</b> <b>products</b> must have been completed in the past 10 years.|$|R
50|$|If necessary, for context, {{annotate}} your <b>work</b> <b>product</b> {{or provide}} additional information to complement {{any of your}} <b>products.</b> Your <b>work</b> <b>product</b> submission should indicate your thought processes and methods you applied in performing the work. Be sure to attach the additional information to the appropriate <b>work</b> <b>product</b> and include the heading, “last name <b>Work</b> <b>Product</b> Title” and the “work product number” you listed in the application.|$|R
50|$|Generally, a {{baseline}} {{may be a}} single <b>work</b> <b>product,</b> or set of <b>work</b> <b>products</b> {{that can be used}} as a logical basis for comparison. A baseline may also be established as the basis for subsequent select activities when the <b>work</b> <b>products</b> meet certain criteria. Such activities may be attributed with formal approval.|$|R
50|$|When an EA {{description}} <b>work</b> <b>product</b> {{is shown}} within one cell of the TEAF Matrix, {{it means that}} the main vantage points for developing that <b>work</b> <b>product</b> correspond to that column (view) and row (perspective). However, information from other views (and sometimes other perspectives) is needed to produce a <b>work</b> <b>product.</b> Not all cells must be “filled-in” by producing an associated <b>work</b> <b>product.</b> Each bureau must define in its EA Roadmap its plans for producing and using an EA to match its needs.|$|R
5000|$|<b>Work</b> <b>products</b> (what) - A <b>work</b> <b>product</b> {{represents}} something {{resulting from}} a task, including all the documents and models produced while working through the process.|$|R
5000|$|In {{the process}} of {{performing}} configuration management, configuration items (or <b>work</b> <b>products)</b> may be assigned a baseline so as to establish them as having a certain status. In this sense, to baseline a <b>work</b> <b>product</b> may require certain change(s) to the <b>work</b> <b>product</b> to ensure it conforms to the characteristics associated with the baseline referenced. This varies upon context, {{but in many cases}} this requires that the <b>work</b> <b>product</b> is [...] "reset" [...] to an initial (possibly inherently approved) state from which work may proceed.|$|R
50|$|Guides team through <b>work</b> <b>product</b> {{during the}} {{technical}} peer review meeting. Reads or paraphrases <b>work</b> <b>product</b> indetail. Performs duties of an inspector {{in addition to}} reader’s role.|$|R
50|$|Typical Examples are:1. Customer {{communication}} (a process activity).2. Analysis (an action).3. Requirements gathering (a process task).4. Reviewing a <b>work</b> <b>product</b> (a process task).5. Design model (a <b>work</b> <b>product).</b>|$|R
50|$|The TEAF identifies, {{as shown}} in the figure, {{resources}} and <b>work</b> <b>products</b> that provide direction for EA development, <b>work</b> <b>products</b> constituting the EA description, and <b>work</b> <b>products</b> documenting how to accomplishment an EA implementation. The resources and <b>work</b> <b>products</b> for EA direction and accomplishment {{are not part of the}} EA description itself, but are developed and applied during the overall enterprise life cycle. The TEAF Matri, organizes the subdivisions of the EA description and demonstrates the relationships among them. The following sections describe the subdivisions of the EA and their relationships to the TEAF Matrix.|$|R
50|$|An {{inspection}} {{is one of}} {{the most}} common sorts of review practices found in software projects. The goal of the inspection is to identify defects. Commonly inspected <b>work</b> <b>products</b> include software requirements specifications and test plans. In an inspection, a <b>work</b> <b>product</b> is selected for review and a team is gathered for an inspection meeting to review the <b>work</b> <b>product.</b> A moderator is chosen to moderate the meeting. Each inspector prepares for the meeting by reading the <b>work</b> <b>product</b> and noting each defect. In an inspection, a defect is any part of the <b>work</b> <b>product</b> that will keep an inspector from approving it. For example, if the team is inspecting a software requirements specification, each defect will be text in the document which an inspector disagrees with.|$|R
40|$|Sections 1. 00 through 7. 00 of this {{presentation}} {{represent the}} <b>work</b> <b>product</b> of Trubin Sillcocks Edelman & Knapp under HUD contract H- 3860. Sections 8. 00 through 9. 20 represent the <b>work</b> <b>product</b> of Kenneth Leventhal & Company under HUD contract H- 3859. "Item 582 Chiefly tables. "Sections 1. 00 through 7. 00 of this presentation represent the <b>work</b> <b>product</b> of Trubin Sillcocks Edelman & Knapp under HUD contract H- 3860. Sections 8. 00 through 9. 20 represent the <b>work</b> <b>product</b> of Kenneth Leventhal & Company under HUD contract H- 3859. "Mode of access: Internet...|$|R
50|$|Microliths are {{produced}} from either a small blade (microblade) or a larger blade-like piece of flint by abrupt or truncated retouching, which leaves a very typical piece of waste, called a microburin. The microliths themselves are <b>sufficiently</b> <b>worked</b> {{so as to}} be distinguishable from workshop waste or accidents.|$|R
40|$|Software {{development}} {{means the}} development {{of a wide range of}} <b>work</b> <b>products</b> covering different views on a system. These views are generally represented using different notations. In this paper we propose a model for the static part of a software development process that enables an integrated foundation of <b>work</b> <b>products</b> on the basis of a system model, as well as a flexible foundation of notations on the basis of <b>work</b> <b>products.</b> We differentiate between models of notations, <b>work</b> <b>products,</b> and systems and show their relationships. An example covering a system model for object-based systems together with different <b>work</b> <b>product</b> types and their representations by alternative notations illustrates our approach. 1. Introduction Nowadays software development is far more than producing source code in a certain programming language. In order to meet the challenges of {{the development of}} complex applications, we specify a system from different viewpoints and on different levels of abstraction. T [...] ...|$|R
40|$|When an {{attorney}} furnishes documents containing <b>work</b> <b>product</b> to an expert witness, a potential conflict arises between the <b>work</b> <b>product</b> immunity of Rule 26 (b) (3) and the expert discovery provisions of Rule 269 b) (4). In this Article, Professors Henkel and Reed examine the approaches federal courts {{have taken to}} this conflict. They argue that any approach which either allows for the discovery of documents containing <b>work</b> <b>product</b> or allows for the discovery of document from which product has been expunged {{is contrary to the}} purposes of the federal rules. The authors then propose a solution to this conflict which protects both the <b>work</b> <b>product</b> immunity of Rule 26 (b) 93) and the expert discovery provisions of Rule 26 (b) (4) ...|$|R
40|$|I. Introduction II. A Short History of the Work Produce Doctrine III. Opinion <b>Work</b> <b>Product</b> [...] . A. Discovering Factual Information [...] . B. What Types of Information Constitute Opinion <b>Work</b> <b>Product</b> [...] . C. Is Opinion <b>Work</b> <b>Product</b> Discoverable? [...] . D. Approaches to Discoverability IV. A Unified Approach to Discoverability [...] . A. Current Litigational Realities [...] . 1. Narrowed Protection {{under the}} Federal Rules [...] . 2. Waiver and Related Concepts [...] . B. The Foundational Concepts [...] . C. The Unified Discovery Standard [...] . D. Procedural Considerations V. Conclusio...|$|R
5000|$|Evaluate <b>work</b> <b>products</b> {{and perform}} progress/performance reviews ...|$|R
5000|$|Lacking <b>work</b> <b>products</b> {{required}} for professional certification ...|$|R
5000|$|Developmental Baseline: {{state of}} <b>work</b> <b>products</b> amid {{development}} ...|$|R
5000|$|... #Caption: TEAF <b>Work</b> <b>Products</b> for EA Direction, Description, and Accomplishment.|$|R
5000|$|Allocated Baseline: {{state of}} <b>work</b> <b>products</b> after {{requirements}} are approved ...|$|R
5000|$|Author: The {{person who}} created the <b>work</b> <b>product</b> being inspected.|$|R
5000|$|SP 1.2 Establish Estimates of <b>Work</b> <b>Product</b> and Task Attributes ...|$|R
5000|$|... #Caption: Planned and {{published}} ISA62443 <b>work</b> <b>products</b> for IACS Security.|$|R
5000|$|The {{concept of}} {{essential}} vs. supporting <b>work</b> <b>products</b> {{has been introduced}} ...|$|R
5000|$|Overview meeting: The author {{describes}} {{the background of}} the <b>work</b> <b>product.</b>|$|R
5000|$|Preparation: Each {{inspector}} {{examines the}} <b>work</b> <b>product</b> to identify possible defects.|$|R
5000|$|... {{architecture}} description (abbreviation 'AD'): <b>work</b> <b>product</b> used {{to express}} an architecture ...|$|R
5000|$|Inspector: The {{person that}} {{examines}} the <b>work</b> <b>product</b> to identify possible defects.|$|R
5000|$|<b>Work</b> <b>products</b> {{including}} architectures {{and architectural}} representations such as models and documents ...|$|R
5000|$|Work units {{including}} activities, tasks, {{and techniques}} for producing the <b>work</b> <b>products</b> ...|$|R
40|$|The Department of Health and Human Services {{recognized}} {{potential benefits}} of telecommuting and formed a telecommuting committee in February 2001 to examine the feasibility of offering this alternative work option to DHHS employees. The objective {{of this research was}} to study the <b>work</b> <b>product</b> of telecommuting and explore any differences in the <b>work</b> <b>product</b> of telecommuting versus non-telecommuting...|$|R
50|$|Sample <b>work</b> <b>products</b> may include, for example, {{relevant}} {{segments of}} technical reports, design papers, analysis reports, evaluation reports, patent applications, or articles authored by you in ergonomics/human factors/user experience publications. Work examples {{that are part}} of independent work, such as a Master’s thesis or Doctoral dissertation are acceptable. Varied <b>work</b> <b>products</b> are encouraged to demonstrate your proficiency.|$|R
50|$|TEAF is {{intended}} to emphasize the broader scope of the architecture framework, which includes both business and technical vantage points within an enterprise-wide perspective. The TEAF includes descriptions of a common suite of <b>work</b> <b>products</b> for documenting and modeling EAs. These <b>work</b> <b>products</b> align with FEAF models and with Department of Defense Architecture Framework (DoDAF) products.|$|R
40|$|Information systems {{portfolio}} management assumes that software will evolve to maintain alignment with operational needs, {{a goal that}} must be met through effective ongoing maintenance. Thus, a primary goal of software maintainers {{is to ensure that}} production code is updated without the introduction of defects. However, there is a dearth of research that examines the <b>work</b> <b>product</b> defects that occur as these applications evolve. The goal {{of this study is to}} characterize software evolution lifecycle <b>work</b> <b>product</b> defects and factors that may increase or reduce their occurrence. The study takes place within a global consulting organization conducting ongoing software maintenance for a Fortune 100 telecommunications firm by a project team assessed at Capability Maturity Model Integration (CMMI) Level 3. This study reports on 991 <b>work</b> <b>product</b> reviews conducted across the evolution activities of the ISO/IEC 12207 Software Development Life Cycle Processes. After controlling for team and expertise differences, the study’s major finding is that corrective evolution projects inject a greater number of <b>work</b> <b>product</b> defects than enhancive evolution projects. This result does not arise from the schedule compression often associated with corrective evolution. Rather, it is concluded that the increase in <b>work</b> <b>product</b> defects is associated with the increased complexity of analysisstage problem diagnosis found in corrective evolution projects. The analysis is augmented by additional covariates including the number of <b>work</b> <b>product</b> reviewers, preparation time of reviewers, and size of the project...|$|R
5000|$|Including both {{functional}} and non-functional <b>work</b> <b>products</b> better demonstrates value {{delivered to the}} user.|$|R
