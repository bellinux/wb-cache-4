419|567|Public
50|$|Each account has to use {{separate}} directory; {{otherwise the}} <b>synchronization</b> <b>process</b> may suffer from unexpected behavior or even data loss.|$|E
50|$|The <b>synchronization</b> <b>process</b> {{ensures that}} {{cyclical}} and simultaneous synchronization of all connected devices occurs independently of topology {{and of the}} number of devices in Sercos networks.|$|E
50|$|Each {{of these}} steps is very critical. In case of {{large amounts of}} data, the <b>synchronization</b> <b>process</b> needs to be {{carefully}} planned and executed to avoid any negative impact on performance.|$|E
40|$|Keywords：workflow, graph recduction, RTWD net. Abstract. In this paper, {{we propose}} {{a set of}} {{reduction}} rules of graphical representation in a workflow process model called RTWD net. The concept of <b>synchronization</b> <b>processes</b> is introduced for reducing net structure, and an algorithm of abstracting <b>synchronization</b> <b>processes</b> is presented. We can clarify the main structure of RTWD net model through reduction rules and abstracting its <b>synchronization</b> <b>processes.</b> Finally, the feasibility of the method is illustrated by a case study...|$|R
50|$|In {{computer}} science, synchronization {{refers to}} one of two distinct but related concepts: <b>synchronization</b> of <b>processes,</b> and <b>synchronization</b> of data. <b>Process</b> <b>synchronization</b> refers to the idea that multiple processes are to join up or handshake at a certain point, in order to reach an agreement or commit to a certain sequence of action. Data synchronization refers to the idea of keeping multiple copies of a dataset in coherence with one another, or to maintain data integrity. <b>Process</b> <b>synchronization</b> primitives are commonly used to implement data synchronization.|$|R
30|$|Proof: This is {{directly}} obtained by considering Equation (2). Replacing the hop-distance on that equation by two values, i 1 and i 2, where i 1 [*]>[*]i 2, the estimated error is bigger for node i 1 than for node i 2. Therefore, node i 1 demands more <b>synchronization</b> <b>processes.</b>|$|R
50|$|OpenSync is able {{to merge}} {{different}} attribute changes of same object since last synchronization between different group members. This reduces significantly manual conflict resolutions and user attention to actual <b>synchronization</b> <b>process.</b>|$|E
5000|$|The {{number of}} test cases per input data set is: [...] nC1 + nC1 + … + nC1 = 2n -1 Where n = {{total number of}} <b>synchronization,</b> <b>process</b> {{creation}} and communication calls.|$|E
50|$|There {{are five}} {{conditions}} {{that must be}} met before the <b>synchronization</b> <b>process</b> takes place. The source (generator or sub-network) must have equal line voltage, frequency, phase sequence, phase angle, and waveform {{to that of the}} system to which it is being synchronized.|$|E
50|$|Events allow <b>synchronization</b> between <b>processes</b> {{and must}} be defined during initialization.|$|R
40|$|<b>Synchronization</b> <b>processes</b> in 2 D lattice of coupled Rossler {{oscillators}} are studied. It {{has been}} detected that during formation of local synchronized clusters energy redistribution between the potential and kinetic components occurs. The detected effect {{is seen as}} a mechanism of experimentally observed heat emission effect at the premelting stage of crystalline substances. I...|$|R
40|$|The random matrix {{theory is}} used to bridge the network {{structures}} and the dynamical processes defined on them. We propose a possible dynamical mechanism for the enhancement effect of network structures on <b>synchronization</b> <b>processes,</b> based upon which a dynamic-based index of the synchronizability is introduced in the present paper. Comment: 4 pages, 2 figure...|$|R
5000|$|... "Berlin Time" [...] was the {{authoritative}} time used {{along the entire}} telegraph line; with a time-synchronizing message coming from Berlin every three days at the latest. A Schwarzwald Clock with a chime hung in each station as the official station clock. The <b>synchronization</b> <b>process</b> would be announced an hour in advance with a signal which prompted the station agents to continuously observe the neighboring station {{in the direction of}} Berlin. The signal had to then be sent to the next station without delay. Once the signal reached Koblenz, it was relayed back to Berlin as confirmation. In good weather conditions, the entire process from Berlin to Koblenz and back took less than two minutes. With such a <b>synchronization</b> <b>process,</b> the time difference amounted to less than one minute.|$|E
5000|$|During the 1950s, Keep {{provided}} the <b>synchronization</b> <b>process</b> that allowed Ross Bagdasarian, Sr. to combine his speed-doubled voice technique with full orchestration on [...] "Witch Doctor" [...] and {{the series of}} Chipmunks recordings. For the latter, Keep received Grammy Awards in 1959 and 1960. Keep's Liberty Studios was the first commercial recording studio to employ solid state mixing equipment, retaining its claim as [...] "the world's only transistorized recording studio" [...] into 1960.|$|E
50|$|The Silly Symphonies was an {{innovative}} animated film series, in which pre-recorded film scores were {{making use of}} well-known classical works and the animation sequences were choreographed to match the music. Stalling helped Disney streamline and update the sound process used in creating early animated sound films, following the long and laborious <b>synchronization</b> <b>process</b> used in Steamboat Willie. The close synchronization of music and on-screen movement pioneered by the Disney short films became known as Mickey Mousing.|$|E
30|$|This {{behavior}} {{is relevant to}} obtain a good network performance, since the closest nodes to their sink act as routing intermediate nodes to reach it, thus supporting more data message forwarding than the farthest nodes. Therefore, the number of <b>synchronization</b> <b>processes</b> on the closest nodes is reduced, leaving the available active durations for data message transmissions.|$|R
40|$|We give denotational {{semantics}} {{to a wide}} range of parallel programming languages based on the idea of Milner’s CCS [Mil 80 a], that processes communicate by events of mutual <b>synchronization.</b> <b>Processes</b> are denoted by labeled event structures. Event structures represent concurrency rather directly, as in net theory [Bra 80]. The semantics does not simulate concurrency by non-deterministic interleaving...|$|R
40|$|In {{computer}} programs with multiple processes (or threads), process communication is of high importance. One {{of the main}} classes of inter-process communication (IPC) mechanisms are <b>process</b> <b>synchronization</b> mechanisms, for example semaphores, conditional variables, rendezvous. <b>Process</b> <b>synchronization</b> mechanisms differ {{from each other in}} several respects: operation logic, existence of process blocking etc. Therefore, before choosing a <b>process</b> <b>synchronization</b> mechanism, in each separate case it is important to realize its properties and distinctive features. In many modern programming languages and software frameworks, there exist some built-in <b>process</b> <b>synchronization</b> mechanisms; therefore, a selected programming language or framework to some extent affects the use of synchronization mechanisms (as well as other IPC mechanisms). An analysis of classes of <b>process</b> <b>synchronization</b> mechanisms is one of the tasks of this paper. The second task is to analyze support of <b>process</b> <b>synchronization</b> mechanisms in different modern programming languages (Ada, C#, Java, C++ etc.) ...|$|R
50|$|In an E1 channel, {{communication}} {{consists of}} sending consecutive frames from the transmitter to the receiver. The receiver must receive an indication showing {{when the first}} interval of each frame begins, so that, since it knows to which channel the information in each time slot corresponds, it can demultiplex correctly. This way, the bytes received in each slot are assigned to the correct channel. A <b>synchronization</b> <b>process</b> is then established, and it is known as frame alignment.|$|E
5000|$|Local Settings: Functionally {{similar to}} [...] "Application Data", and {{contains}} a second subfolder of that name. It also contains the temporary files generated by Windows programs themselves, {{and as a}} result of Internet Explorer's online activities. For standalone computers the two folders are functionally similar, but on networks employing Roaming profiles, the [...] "Local Settings" [...] folder is not included in the profile <b>synchronization</b> <b>process.</b> Thus, data in the [...] "Local Settings" [...] folder will not be copied between computers when the user roams.|$|E
50|$|Generators can be {{electrically}} connected together {{through the process}} of synchronization. Synchronization involves matching voltage, frequency and phase before connecting the generator to the system. Failure to synchronize before connection could cause a high short circuit current or wear and tear on the generator or its switchgear. The <b>synchronization</b> <b>process</b> can be done automatically by an auto-synchronizer module, or manually by the instructed operator. The auto-synchronizer will read the voltage, frequency and phase parameters from the generator and busbar voltages, while regulating the speed through the engine governor or ECM (Engine Control Module).|$|E
40|$|International audienceWe motivate and {{propose a}} new way of {{thinking}} about failure detectors which allows us to define what it means to solve a distributed task wait-free using a failure detector. In our model, the system is composed of computation processes that obtain inputs and are supposed to produce outputs and <b>synchronization</b> <b>processes</b> that are subject to failures and can query a failure detector. Under the condition that correct (never failing) <b>synchronization</b> <b>processes</b> take sufficiently many steps, they provide the computation processes with enough advice to solve the given task wait-free: every computation process outputs in a finite number of its own steps, regardless of the behavior of other computation processes. Every task can thus be characterized by the weakest failure detector that allows for solving it, and we show that every such failure detector captures a form of set agreement. We then obtain a complete classification of tasks, including ones that evaded comprehensible characterization so far, such as renaming or weak symmetry breaking...|$|R
40|$|Behavioral {{adaptation}} {{depends on}} the recognition of response errors and processing of this error-information. Error processing is a specific cognitive function crucial for behavioral adaptation. Neurophysiologically, these processes are reflected by an event-related potential (ERP), the error negativity (Ne/ERN). Even though <b>synchronization</b> <b>processes</b> are important in information processing, its role and neurobiological foundation in behavioral adaptation are not understood. The brain-derived neurotrophic factor (BDNF) strongly modulates the establishment of neural connectivity that determines neural network dynamics and synchronization properties. Therefore altered <b>synchronization</b> <b>processes</b> may constitute a mechanism via which BDNF affects processes of error-induced behavioral adaptation. We investigate how variants of the BDNF gene regulate EEG-synchronization processes underlying error processing. Subjects (n � 65) were genotyped for the functional BDNF Val 66 Met polymorphism (rs 6265). We show that Val/Val genotype is associated with strongererror-specificphase-locking,comparedwithMetallelecarriers. Posterrorbehavioraladaptationseemstobestronglydependent on these phase-locking processes and efficacy of EEG-phase-locking-behavioral coupling was genotype dependent. After correct responses, neurophysiological processes were not modulated by the polymorphism, underlining that BDNF becomes especially necessar...|$|R
3000|$|... of a {{user device}} {{may be in}} the range of [LS_thr; Assoc_thr) in some {{superframe}} periods. Thus, to reduce the necessity of performing association and <b>synchronization</b> <b>processes</b> with the same neighboring transmitter, before starting these two processes, if a user device is already associated with the selected neighboring transmitter, it will skip these processes and return to receive data from its current transmitter in the next superframe.|$|R
50|$|Like many early sound films, Railroadin was {{recorded}} using a sound-on-disc <b>synchronization</b> <b>process</b> - the soundtracks {{for the film}} were held on separate phonographic records, which would be played by a projectionist in synch with the film. The sound discs for the film went missing at MGM in the 1940s, and only the film negative survived. When MGM sold Roach the catalog of Our Gang films made at the Roach studio, it therefore acquired only the picture element of Railroadin; as such, the short was never included {{in any of the}} Little Rascals theatrical reissue or television distribution packages.|$|E
50|$|Outline also syncs data over iCloud, {{easy way}} to store notes, keep them {{synchronized}} and access anytime across multiple devices. <b>Synchronization</b> <b>process</b> is strong, reliable and provides an error-free data transfer. All the data can be backed up to iCloud or hard drive (for Mac version). Alternatively, Outline notes may be synchronized with Microsoft OneDrive (Microsoft's online storage service for OneNote software) and Microsoft SharePoint (versions 2010 and 2013 only). Files are stored in single notebook files, which does not retain versioning information and deleted notes. Only incremental updates are sent to the server during synchronization, reducing transfer time and bandwidth usage.|$|E
5000|$|The DSL {{transceiver}} then {{attempts to}} synchronize with the DSLAM. Data {{can only come}} into the computer when the DSLAM and the modem are synchronized. The <b>synchronization</b> <b>process</b> is relatively quick (in the range of seconds) but is very complex, involving extensive tests that allow {{both sides of the}} connection to optimize the performance according to the characteristics of the line in use. External, or standalone modem units have an indicator labeled [...] "CD", [...] "DSL", or [...] "LINK", which can be used to tell if the modem is synchronized. During synchronization the light flashes; when synchronized, the light stays lit, usually green.|$|E
40|$|<b>Synchronization</b> <b>processes</b> may {{severely}} impair brain function, for instance, in Parkinson's disease, essential tremoror epilepsies. We present {{three different}} effectively desynchronizing stimulation techniques {{which have been}} developed with methods from nonlinear dynamics and statistical physics. These techniques exploit either stochastic phase resetting principles or complex delayed feedback mechanisms. We explain how these methods work {{and how they can}} be applied to therapeutic brain stimulation...|$|R
40|$|Abstract: The {{contribution}} {{deals with}} the task of client’s time <b>synchronization</b> on <b>process</b> monitoring and control in network environment. It specifies the principal activities and components of server part of application, describes synchronization in local network in Windows environment and <b>synchronization</b> on <b>process</b> monitoring with internet utilization. It cites examples of client’s synchronization implementation together with survey of the selected timeservers. Key words: time synchronization,www, monitoring, client, time server...|$|R
40|$|<b>Synchronization</b> <b>processes</b> {{bring about}} {{dynamical}} order and lead tospontaneous development of structural organization in complex systemsof various origins, from chemical oscillators and biological cells tohuman societies and the brain. This book provides a review and adetailed theoretical analysis of synchronization phenomena in complexsystems with different architectures, composed of elements withperiodic or chaotic individual dynamics. Special {{attention is paid}} tostatistical concepts, such as nonequilibrium phase transitions, orderparameters and dynamical glasses...|$|R
5000|$|The Cavalry Leaders Course (CLC) is a fifteen-day {{reconnaissance}} {{and security}} operations focused course {{offered by the}} United States Army Armor School. [...] This mastery level course in reconnaissance and security operations emphasizes planning and decision making at the Squadron to Troop level through the Rapid Decision Making and <b>Synchronization</b> <b>Process</b> (RDSP), Troop Leading Procedures, and tactics for mid-level to {{senior members of the}} United States Army and United States Marine Corps. To successfully complete the course, students must pass three competitive practical exercises requiring a demonstrated ability to plan, prepare and conduct simulated reconnaissance and security operations at the Squadron and Troop level.|$|E
5000|$|The Report {{described}} the approach in detail: “The Ambassador and DCM place {{a high priority}} on teamwork among the agencies and sections of the mission. Their emphasis is not just on coordination, but on working together to achieve clearly laid out goals. The primary vehicle for this priority is the Ambassador’s <b>synchronization</b> <b>process,</b> which is an innovative approach to strategic planning and execution that draws on his recent experience working with the U.S. military.” The report {{went on to say}} that [...] "the Ambassador's experience, both in the region and as a political advisor to U.S. Special Operations Command, contributes to the embassy's close and productive coordination with the military." ...|$|E
5000|$|Emoze is {{a mobile}} devices push service {{application}} {{in which you}} may choose your phone, your operator and your network. This mobile solution {{is based on a}} patented <b>synchronization</b> <b>process</b> (Publication number US 2007/0208803 A1 [...] ) that enables synchronized, push email {{on a wide variety of}} mobile devices via any mobile network operator. This enables mobile users to send and receive data from multiple email accounts while keeping their personal information (contacts and calendar) synchronized. It enables the user to manage multiple accounts (ISP, GMAIL, YAHOO end others). Emoze supports almost every data enabled mobile phone and is not limited to smartphones. Using this solution mobile users may view HTML formatted emails and may download and view attachments, pictures, music, documents depending on their device capabilities and/or have access to contact lists from social networks as Facebook, MySpace, Bebo, Orkut and others.|$|E
40|$|We motivate and {{propose a}} new way of {{thinking}} about failure detectors which allows us to define, quite surprisingly, what it means to solve a distributed task wait-freeusing a failure detector. In our model, the system is composed of computation processes that obtain inputs and are supposed to output in a finite number of steps and <b>synchronization</b> <b>processes</b> that are subject to failures and can query a failure detector. We assume that, under the condition that correct <b>synchronization</b> <b>processes</b> take sufficiently many steps, they provide the computation processes with enough advice to solve the given task wait-free: every computation process outputs in a finite number of its own steps, regardless of the behavior of other computation processes. Every task can thus be characterized by the weakest failure detector that allows for solving it, and we show that every such failure detector captures a form of set agreement. We then obtain a complete classification of tasks, including ones that evaded comprehensible characterization so far, such as renaming or weak symmetry breaking...|$|R
40|$|We study <b>synchronization</b> <b>processes</b> in {{networks}} of slightly non identical chaotic systems, {{for which a}} complete invariant synchronization manifold does not rigorously exist. We show and quantify how a slightly dispersed distribution in parameters can be properly modelled by a noise term affecting {{the stability of the}} synchronous invariant solution emerging for identical systems when the parameter is set at the mean value of the original distribution. Comment: 4 pages, 5 figure...|$|R
40|$|The paper {{presents}} {{an overview of}} microgrid control techniques at the power converter level. Principles explanation and a basic comparison of main control structures and converter operation modes is carried out, focusing on: phase and frequency locked loops, droop control algorithms, converter reference current calculation, grid filter topologies and respective damping strategies, current controller schemes, harmonic elimination techniques, as well as <b>synchronization</b> <b>processes</b> needed to reconnect an islanded microgrid to an upstream one...|$|R
