9|10|Public
40|$|Let (A,θ) {{be a free}} {{partially}} commutative monoid. We give here {{a necessary}} and sufficient condition on a <b>subalphabet</b> B⊂ A such that the right factor of a bisection (A,θ) =(B,θ_B). T be also partially commutative free. This extends strictly the (classical) elimination theory on partial commutations and allows to construct new factorizations of (A,θ) and associated bases of L_K(A,θ) ...|$|E
40|$|Given a {{rewriting}} system G (its alphabet, {{the set of}} productions and the axiom) one can define the language of G by (i) taking out of all stings generated by G only those which are over a distinguished <b>subalphabet</b> of G, or (ii) translating the set of all strings generated by G by a fixed homomorphism. The 2 ̆ 2 trade-offs 2 ̆ 2 between these two mechanisms for defining languages are discussed for both, 2 ̆ 2 parallel 2 ̆ 2 {{rewriting system}}s from developmental systems hierarchy and 2 ̆ 2 sequential 2 ̆ 2 rewriting systems from the Chomsky hierarchy...|$|E
40|$|AbstractWe prove decidability {{results for}} {{recurrent}} words in T 0 L schemes and systems, thereby settling some recently posed open problems. However, {{the problems are}} shown to be Pspace-hard. These investigations are motivated by some questions from Markov DT 0 L systems. As the main tool for proving these results we introduce the notion of simultaneous growth, which is interesting in its own right. We prove that, for an ET 0 L language L over an alphabet Σ and a given <b>subalphabet</b> Δ, it is decidable whether for every positive integer n there is a word w in L such that in w the number of occurrences of every letter in Δ is at least n...|$|E
40|$|One {{dimensional}} cellular automata {{are analyzed}} via their generalized permutivity. Invariant <b>subalphabets</b> provide a systematic way of identifying periodic and aperiodic tilings {{as well as}} stationary distributions invariant under the cellular automaton iteration. In the case of several invariant <b>subalphabets</b> a hierarchy of interaction phenomena arise. In particular the interaction of <b>subalphabets</b> can generate random walks {{as well as their}} degenerate forms. A comprehensive scheme emerges that unifies the analysis of topological defects in cellular automata. The probabilistic details of the random walks involved are treated in the companion paper [4]. Introduction Cellular automata are spatially and temporally discrete models of interacting dynamics. The interactions are local yet can be made to mimic a wide variety of different physical phenomena. The theoretical motivation to the study of these systems is based on their close relation to lattice spin models in classical statistical mec [...] ...|$|R
40|$|This Provisional PDF {{corresponds}} to the article as it appeared upon acceptance. The fully-formatted PDF version will become available shortly after the date of publication, from the URL listed below. Protein subcellular localization prediction for Gram-negative bacteria using amino acid <b>subalphabets</b> and a combination of multiple support vector machines BMC Bioinformatics 2005, 6 : 174 doi: 10. 1186 / 1471 - 2105 - 6 - 17...|$|R
40|$|International audienceThe aim of {{behavioural}} {{identification of}} Discrete Event Systems is to build, from {{a sequence of}} observed inputs/outputs events, a model that exhibits both the direct relations between inputs and outputs events (i. e. the reactive or observable behaviour of the system) and the internal state evolutions (i. e. the unobservable behaviour). Once the observable behaviour has been modelled by an Interpreted Petri net, the method proposed in this paper aims at discovering the unobservable part from a firing sequence of previously discovered observable transitions. The principle is to project the firing sequence on <b>subalphabets</b> to discover specific patterns that are characteristic of dependancy relationships between the transitions. These relationships can be translated into Petri net structure fragments that will be assembled to form the final model. A parametric algorithm is proposed to conduct the discovery, {{the choice of the}} minimal degree of places as a parameter being motivated by the reduction of the search space and the fitness of the final model...|$|R
40|$|Sampling (evenly) {{the suffixes}} from the suffix array {{is an old}} idea trading the pattern search time for reduced index space. A few years ago Claude et al. showed an {{alphabet}} sampling scheme allowing for more efficient pattern searches compared to the sparse suffix array, for long enough patterns. A drawback of their approach is the requirement that sought patterns need to contain at least one character from the chosen <b>subalphabet.</b> In this work we propose an alternative suffix sampling approach with only a minimum pattern length as a requirement, which seems more convenient in practice. Experiments show that our algorithm achieves competitive time-space tradeoffs on most standard benchmark data. Comment: One new SamSAMi variant; extended experimental result...|$|E
40|$|In {{this paper}} we {{consider}} {{words in a}} finite totally ordered alphabet which, restricted to a two consecutive letters <b>subalphabet,</b> are either Yamanouchi or dual Yamanouchi. We introduce coordinates or indexing sets of words and we {{show that there is}} a monoid isomorphism between words and classes of sequences of finite sets in N. Considering words in a two consecutive letters <b>subalphabet,</b> we define maps acting on pairs of indexing sets which, by fixing a longest self-dual Yamanouchi subword, transform a Yamanouchi into a dual Yamanouchi word, and reciprocally. The pairs of indexing sets of Yamanouchi and dual Yamanouchi words are, respectively, comparable under an ordering and its dual in the power-set of { 1, [...] .,n}. This family of transformations is induced by the witnesses of the comparable pairs. When minimal and maximal witnesses are considered, we recover those operators which satisfy the conditions of the symmetric group, defined by A. Lascoux and M. P. Schutzenberger. Starting with given indexing sets of a Yamanouchi word, in a three-letters alphabet, we generate, under the action of these transformations, a set of indexing sets which gives rise to an action of the symmetric group S_ 3. This group action of S_ 3 is equivalent to an explicit decomposition of the given indexing sets of a Yamanouchi word in a three-letters alphabet. For transformations induced by minimal and maximal witnesses, we use this decomposition to define, recursively, an action of the symmetric group S_ 3, for t greater or equal to 3, on a set generated by indexing sets of all Yamanouchi words in a t-letters alphabet. This group action coincides with the one described by A. Lascoux and M. P. Schutzenberger, when restricted to the words under consideration. The action of the symmetric group S_ 3, on words or Young tableaux, has a natural matrix translation afforded by the obvious permutation action on a sequence of matrices over a local principal ideal domain with maximal ideal (p). Moreover, such a permutation action gives rise, directly, to the mentioned decomposition of the indexing sets of a Yamanouchi word in a three-letters alphabet. This is the content of a subsequent paper...|$|E
40|$|Divided {{differences}} are operators acting on functions of several variables. We describe this {{action on the}} basis of modified powers (that is x k is replaced by (x Γ a 0) (x Γ a 1) ::(x Γ anΓ 1)). Special cases are of interest when a i = q i or a i = i. 1 Preliminaries We first recall some properties of complete symmetric functions and divided differences. Complete Functions of Alphabets Let us fix the notations for alphabets. Let A = fa 1; a 2; :::g be an infinite totally ordered alphabet, A n denoting the finite <b>subalphabet</b> fa 1; a 2; ::; a n g. Let v = [v 1; v 2; :::] be an infinite vector of N 1. Then v fi A denotes the alphabet fa 1; ::; a 1; a 2; ::; a 2; :::; a i; ::; a i; :::g, each a i occurring v i times. More generally one could take v 2 R 1, v 1 a 1 + v 2 a 2 + ::: + v i a i + ::: to be another notation for v fi A. Let p n be the vector [p; ::; p; 0; ::; 0; :::], with n occurrences of p. In particular, A n = 1 n fi A. We s [...] ...|$|E
40|$|Hack’s theorem [7] {{shows that}} every live and bounded free choice net {{is covered by}} S-components [5, 2]. If the net is labelled, with a {{distribution}} of the alphabet into pos-sibly overlapping <b>subalphabets</b> for components, the question arose whether the net can be decomposed into a product of automata, with several possible definitions of product and of equivalence [1, 13, 11, 4]. Zielonka showed [15] {{that there is a}} live and 1 -bounded net which is not direct product representable. We give a straightforward example of a live and 1 -bounded labelled free choice net which is not direct product representable, we do not know of any earlier such example. We give two sufficient condi-tions for 1 -bounded labelled free choice nets to be direct product representable. In the other direction, we give two sufficient con-ditions on products of automata using which we can construct la-belled free choice nets. In [14] expressions corresponding to such products has been recently given...|$|R
40|$|We {{reintroduce}} the Klein Bottle (KB) logophysics at {{the foundations}} of the unification of quantum geometry, cell biology, embryology and evolution, to extend it to the genetic code and allosteric recognition. We find that the genetic code has three possible fractal topologies: two different families of KBs embedded in HyperKBs, or still a 2 -torus, depending which pair of three <b>subalphabets</b> for the genetic “letters ” is chosen; this does not require the double helix. We complete the genetic codification of embryological differentiation introduced in an accompanying article. We discuss the Hadamard-KB representation of this codification and discuss its robustness and that of embryological development with respect to environmental noise. We discuss this KB codification of the 64 codons with its isomorphic representation in terms of the Dirac Algebra (DA) of Quantum Mechanics, in the Nilpotent Universal Computational Rewrite System (NUCRS), a self-referential syntax that generates much of mathematics and the fundamental symmetries of physics. We show that the double helix can be obtained from the duplication of the K...|$|R
40|$|We {{introduce}} {{and study}} problems of distributed observation with bounded or unbounded memory. We {{are given a}} system modeled as a finite-word language L over some finite alphabet Σ and <b>subalphabets</b> Σ 1, [...] ., Σn of Σ modeling n distinct observation points. We want to build (when there exist) n observers which collect projections of a behavior in L onto Σ 1, [...] ., Σn, then send them to a central decision point. The latter must determine whether the original behavior was in a given K ⊆ L. In the unbounded-memory case, observers record the entire sequence they observe. In the bounded-memory case, {{they are required to}} be finitestate automata. We show that, when L is trace-closed with respect to the usual dependence relation induced by Σ 1, [...] ., Σn, unbounded-memory observability is equivalent to K being centrally observable and trace-closed, thus decidable. When L is not trace-closed, the problem is undecidable, even if K and L are regular. We also show that boundedmemory observability is equivalent to unbounded-memory observability (thus decidable) when L is trace-closed and Σi are pairwise disjoint. Otherwise, the problem remains open. In the decidable cases, observers and decision function can be automatically synthesized. ...|$|R
40|$|We explore whether LearnLib, a {{state-of-the-art}} automata learning tool, {{is able to}} learn {{a model of the}} Engine Status Manager (ESM), a piece of control software that is used in many printers and copiers of Océ. Finding counterexamples for incorrect hypotheses for the ESM turns out to be challenging due to the large number of inputs. A first contribution of this paper consists of two novel heuristics for test selection, implemented on top of LearnLib, that allowed us to learn an almost complete model of the ESM. The first heuristic is based on the intuition that for many systems it is possible to reach the majority of the states using {{only a small number of}} different inputs. The idea is to divide the input alphabet into a number of subalphabets, and to divide the test phase into subphases for each <b>subalphabet.</b> The second heuristic is a randomized variant of the W-method of Chow and Vasilevskii. To the best of our knowledge, this is the first paper in which active automata learning is applied to industrial embedded control software. Using our new test selection heuristics, we succeeded to learn a model of the ESM with 3. 326 states. More than 263 million test queries were not enough to find a counterexample for this model. We also constructed another model directly from the ESM software with 3. 410 states, indicating that we succeeded to learn 97, 5 % of the model using automata learning. Our work provides a challenging benchmark for the automata learning and model-based testing communities...|$|E
40|$|Multi-process {{networks}} {{figure in}} many engineering {{applications such as}} communication networks, transportation networks, manufacturing and logistic systems, and computer hardware and software. Parameterized discrete event systems provide a convenient means of modeling such networks {{when the number of}} subprocesses is arbitrary, unknown or time-varying. Unfortunately, some key properties of these networks, such as nonblocking and deadlock-freedom, are undecidable. Moreover, mathematical tools supporting analysis of these networks are limited. This thesis introduces a novel mathematical notion, weak invariant simulation and proposes an efficient method to check whether a finite-state generator weakly invariantly simulates another finite-state generator with respect to a specific <b>subalphabet.</b> This new simulation relation is first used to define a tractable subclass of parameterized ring networks of isomorphic subprocesses in which deadlock-freedom is decidable. Within this framework, a procedure is given to determine the reachable deadlocked states of the network. The effectiveness of the procedure is demonstrated by the deadlock analysis of a version of the dining philosophers problem. To generalize the results on ring networks, we consider a network consisting of several linear parameterized sections but exhibiting a branching topology. To model these networks we introduce Generalized Parameterized Discrete Event Systems (GPDES). The difficulty in analysis of a GPDES is {{the fact that some of}} the subprocesses interact with several parameterized sections of the network. Hence the analysis proposed in this thesis involves careful study of interaction among different branches of the network. Here again, we use `weak invariant simulation' to limit the behavior of subprocesses of the network. Then we investigate interactions among different components of the network, using a dependency graph. The dependency graph is a directed graph developed to characterize reachable partial deadlocks caused by generalized circular waits in the proposed GPDES. Our results implicitly characterize reachable generalized circular waits as a language accepted by a finite automaton. Our framework allows for modeling and analysis of new parameterized problems. We investigated deadlock in a large-scale factory as an illustrative example...|$|E
40|$|The {{modeling}} of most large and complex systems, such as embedded, cyber-physical, or distributed systems, necessarily involves many designers. The multiple stakeholders carry their own {{perspectives of the}} system under development {{in order to meet}} a variety of objectives, and hence they derive their own models for the same system. This practice is known as multiview modeling, where the distinct models of a system are called views. Inevitably, the separate views are related, and possible overlaps may give rise to inconsistencies. Checking for multiview consistency is key to multi-view modeling approaches, especially when a global model for the system is absent, and can only be synthesized from the views. The present thesis provides an overview of the representative related work in multi-view modeling, and contributes to the formal study of multi-view modeling and the multi-view consistency problem for views and systems described as sets of behaviors. In particular, two distinct settings are investigated, namely, infinitary languages, and discrete systems. In the former research, a system and its views are described by mixed automata, which accept both finite and infinite words, and the corresponding infinitary languages. The views are obtained from the system by projections of an alphabet of events (system domain) onto a <b>subalphabet</b> (view domain), while inverse projections are used in the other direction. A systematic study is provided for mixed automata, and their languages are proved to be closed under union, intersection, complementation, projection, and inverse projection. In the sequel, these results are used in order to solve the multi-view consistency problem in the infinitary language setting. The second research introduces the notion of periodic sampling abstraction functions, and investigates the multi-view consistency problem for symbolic discrete systems with respect to these functions. Apart from periodic samplings, inverse periodic samplings are also introduced, and the closure of discrete systems under these operations is investigated. Then, three variations of the multi-view consistency problem are considered, and their relations are discussed. Moreover, an algorithm is provided for detecting view inconsistencies. The algorithm is sound but it may fail to detect all inconsistencies, as it relies on a state-based reachability, and inconsistencies may also involve the transition structure of the system...|$|E
40|$|Traces {{and their}} {{extension}} called combined traces (comtraces) are two formal models {{used in the}} analysis and verification of concurrent systems. Both models are based on concepts originating {{in the theory of}} formal languages, and they are able to capture the notions of causality and simultaneity of atomic actions which take place during the process of a system's operation. The aim of this paper is a transfer to the domain of comtraces and developing of some fundamental notions, which proved to be successful in the theory of traces. In particular, we introduce and then apply the notion of indivisible steps, the lexicographical canonical form of comtraces, as well as the representation of a comtrace utilising its linear projections to binary action <b>subalphabets.</b> We also provide two algorithms related to the new notions. Using them, one can solve, in an efficient way, the problem of step sequence equivalence in the context of comtraces. One may view our results as a first step towards the development of infinite combined traces, as well as recognisable languages of combined traces. Comment: Short variant of this paper, with no proofs, appeared in Proceedings of CONCUR 2012 conferenc...|$|R
40|$|Abstract Background Predicting the {{subcellular}} localization {{of proteins}} {{is important for}} determining the function of proteins. Previous works focused on predicting protein localization in Gram-negative bacteria obtained good results. However, these methods had relatively low accuracies for the localization of extracellular proteins. This paper studies {{ways to improve the}} accuracy for predicting extracellular localization in Gram-negative bacteria. Results We have developed a system for predicting the subcellular localization of proteins for Gram-negative bacteria based on amino acid <b>subalphabets</b> and a combination of multiple support vector machines. The recall of the extracellular site and overall recall of our predictor reach 86. 0 % and 89. 8 %, respectively, in 5 -fold cross-validation. To the best of our knowledge, these are the most accurate results for predicting subcellular localization in Gram-negative bacteria. Conclusion Clustering 20 amino acids into a few groups by the proposed greedy algorithm provides a new way to extract features from protein sequences to cover more adjacent amino acids and hence reduce the dimensionality of the input vector of protein features. It was observed that a good amino acid grouping leads to an increase in prediction performance. Furthermore, a proper choice of a subset of complementary support vector machines constructed by different features of proteins maximizes the prediction accuracy. </p...|$|R
40|$|International audienceLet T=ABC be an {{alphabet}} that is partitioned {{into three}} <b>subalphabets.</b> The mixing {{product of a}} word g over AB and of a word d over AC is the set of words w over T such that its projection onto AB gives g and its projection onto AC gives d. Let R be a regular language over T such that xbcy is in R {{if and only if}} xcby is in R for any two letters b in B and c in C. In other words, R is commutative over B and C. Is this property “structural” in the sense that R can then be obtained as a mixing product of a regular language over AB and of a regular language over AC? This question has a rather easy answer, but there are many cases where the answer is negative. A more interesting question is whether R can be represented as a finite union of mixed products of regular languages. For the moment, we do not have an answer to this question. However, we prove that it is decidable whether, for a given k, the language R is a union of at most k mixed products of regular languages...|$|R
40|$|Let T = A ∪ B ∪ C be an {{alphabet}} that is partitioned {{into three}} <b>subalphabets.</b> The mixing {{product of a}} word g over A ∪ B and of a word d over A ∪ C is the set of words w over T such that its projection onto A ∪ B gives g and its projection onto A ∪ C gives d. Let R be a regular language over T such that xbcy is in R {{if and only if}} xcby is in R for any two letters b in B and c in C. In other words, R is commutative over B and C. Is this property “structural” in the sense that R can then be obtained as a mixing product of a regular language over A ∪ B and of a regular language over A ∪ C? This question has a rather easy answer, but there are many cases where the answer is negative. A more interesting question is whether R can be represented as a finite union of mixed products of regular languages. For the moment, we do not have an answer to this question. However, we prove that it is decidable whether, for a given k, the language R is a union of at most k mixed products of regular languages. Résumé Soit T = A ∪ B ∪ C un alphabet partitionné en trois sous-alphabets. Le mélange d’un mot g sur A ∪ B et d’un mot d sur A ∪ C est l’ensemble des mots w sur T dont la projection sur A ∪ B donne le mot g et sur A ∪ C donne le mot d. ∗ Corresponding author...|$|R

