3|123|Public
40|$|This paper {{deals with}} the {{representation}} of document models used {{in the field of}} document recognition. A novel formalism called generalized n-gram is presented, which is shown to be accurate for the recognition task and well adapted to automatic learning by examples. The paper addresses also the thorny problem of integrating models for document analysis with existing standards used for document manipulation and production. 1 Introduction The benefits of using high level descriptions to handle structured documents has been widely recognized by the scientific community dealing with electronic document production. The <b>SGML</b> <b>language</b> providing the DTD mechanism [11] has become increasingly important during the last five years. The document analysis and recognition community has been dealing with structure recognition for several years too [4, 7, 1]. In this context, the use of general knowledge, often referred to as document models, describing the document class to be processed is essent [...] ...|$|E
40|$|The Standard Generalized Markup Language (SGML) {{is used to}} {{represent}} documents in an application-independent manner. In a recent paper, Nordin et al. analyze concisely which properties of the <b>SGML</b> <b>language</b> are hindering its more widespread use and acceptance. In particular, they identify a number of features in the SGML standard that {{make it difficult to}} apply commonly used implementation tools and techniques to build an SGML parser. One feature, however, or rather one combination of two features, escapes their notice. Unambiguity and the & operator were both intended to make SGML document grammars easier to read by humans. It is questionable, though, whether this goal is really achieved. At least, the combination of unambiguity and the & operator raises unforeseen problems in validating the grammars and in parsing the documents by machines. I am describing these problems here in detail. On the basis of this analysis, the standards committees that are currently revising the standard ca [...] ...|$|E
40|$|The TEI (Text Encoding Initiative) {{standard}} was relatively recently developed and adopted widely by libraries and information services. Shortly, {{it became an}} international encoding standard for full text sources. TEI’s first three editions (TEI P 1 - 3), released between 1990 and 1999, were compatible with <b>SGML</b> <b>language.</b> It’s 4 th edition come up, with main characteristic the XML compatibility. Finally, {{in the beginning of}} 2005 the most recent edition, TEI P 5, was released. A whole skeptical area in TEI, it concerns the 4 th edition (P 4) and it deals with the conversion of TEI documents from SGML P 3 edition to XML P 4. This kind of migration is essential. There will be no direct passage from P 3 to P 5. TEI does not intend to offer such a possibility, consequently, the process of migration from edition P 3 to P 4, will be continued for many years. That leads us to the fact, that the 4 th edition of TEI, will continue to be used. In this paper we will examine the process of migration from TEI P 3 documents to P 4 and the upcoming questions...|$|E
5000|$|Information {{processing}} - Text {{and office}} systems - Standard Generalized Markup <b>Language</b> (<b>SGML)</b> ...|$|R
5000|$|<b>SGML</b> markup <b>languages</b> whose {{concrete}} syntax enables the SHORTTAG VALUE feature, {{do not require}} attribute values containing only alphanumeric characters to be enclosed within quotation marks—either double [...] (LIT) or single [...] (LITA)—so that the previous markup example could be written: ...|$|R
50|$|A {{document}} type definition (DTD) {{is a set}} of markup declarations that define a {{document type}} for an SGML-family markup <b>language</b> (<b>SGML,</b> XML, HTML).|$|R
50|$|The {{standard}} {{generalized markup}} <b>language</b> (<b>SGML)</b> {{was based upon}} IBM Generalized Markup Language (GML). GML was a set of macros on top of IBM Script.|$|R
50|$|The Standard Generalized Markup <b>Language</b> (<b>SGML)</b> is a {{descendant}} of GML. While DCF does not directly handle SGML, there is an SGML translator available as a separate product.|$|R
50|$|Charles F. Goldfarb {{is known}} as the father of Standard Generalized Markup <b>Language</b> (<b>SGML)</b> and {{grandfather}} of HTML and the World Wide Web. He co-invented the concept of markup languages.|$|R
50|$|Parsed Character Data (PCDATA) is a data {{definition}} that originated in Standard Generalized Markup <b>Language</b> (<b>SGML),</b> {{and is used}} also in Extensible Markup Language (XML) Document Type Definition (DTD) to designate mixed content XML elements.|$|R
25|$|In {{the early}} 1980s, {{the idea that}} markup should {{be focused on the}} {{structural}} aspects of a document and leave the visual presentation of that structure to the interpreter {{led to the creation of}} <b>SGML.</b> The <b>language</b> was developed by a committee chaired by Goldfarb. It incorporated ideas from many different sources, including Tunnicliffe's project, GenCode. Sharon Adler, Anders Berglund, and James A. Marke were also key members of the SGML committee.|$|R
50|$|Steven J DeRose (born 1960) is a {{computer}} scientist noted for his contributions to Computational Linguistics and to key standards related to document processing, mostly around ISO's Standard Generalized Markup <b>Language</b> (<b>SGML)</b> and W3C's Extensible Markup Language (XML).|$|R
50|$|The term CDATA, meaning {{character}} data, is {{used for}} distinct, but related, purposes in the markup <b>languages</b> <b>SGML</b> and XML. The term indicates that a certain portion of the document is general character data, rather than non-character data or character data with a more specific, limited structure.|$|R
50|$|The Standard Generalized Markup <b>Language</b> (<b>SGML),</b> an ISO-standard {{technology}} for defining generalized markup languages for documents, is descended from GML. The Extensible Markup Language (XML) was initially a streamlined and simplified development of SGML, but has outgrown its parent {{in terms of}} worldwide acceptance and support.|$|R
40|$|Designing and {{implementing}} modeling frontends for domains in which text is predominant (it may be informal, semi-formal or formal) {{can and should}} benefit from using the evolving standard mark-up <b>languages</b> (<b>SGML</b> and XML), since standardization of interfaces, transmission and storage protocols {{as well as many}} valuable tools "come for free". But the [...] ...|$|R
25|$|While HTML, {{prior to}} HTML5, {{was defined as}} an {{application}} of Standard Generalized Markup <b>Language</b> (<b>SGML),</b> a flexible markup language framework, XHTML is an application of XML, a more restrictive subset of SGML. XHTML documents are well-formed and may therefore be parsed using standard XML parsers, unlike HTML, which requires a lenient HTML-specific parser.|$|R
2500|$|In <b>SGML</b> and derived <b>languages</b> such as HTML and XML, a slash is used {{in closing}} tags. For example, in HTML, <b> begins a section of bold text and </b> closes it. In XHTML, slashes are also {{necessary}} for [...] "self-closing" [...] elements such as the newline command [...] where HTML has simply [...]|$|R
50|$|While HTML, {{prior to}} HTML5, {{was defined as}} an {{application}} of Standard Generalized Markup <b>Language</b> (<b>SGML),</b> a flexible markup language framework, XHTML is an application of XML, a more restrictive subset of SGML. XHTML documents are well-formed and may therefore be parsed using standard XML parsers, unlike HTML, which requires a lenient HTML-specific parser.|$|R
40|$|Abstract We reexamine the {{relationship}} between the two most popular methods for transforming a regular expression into a finite-state machine: the Glushkov and Thompson constructions. These methods have received more attention recently because of the Standard Generalized Markup <b>Language</b> (<b>SGML)</b> and a revival of interest in symbolic toolkits for regular and context-free expressions, grammars, and machines. We establish that...|$|R
40|$|In this report, {{we present}} a {{language}} for producing virtual documents, where dynamic information objects can be retrieved from various sources, transformed, and included along with static information in <b>SGML</b> documents. The <b>language</b> uses a tree-like structure for the representation of information objects, and allows querying without a complete knowledge of the structure or the types of information...|$|R
40|$|We {{present a}} {{powerful}} document transformation language called TranSID, which is targeted at structured (<b>SGML)</b> documents. The <b>language</b> {{is based on}} a powerful model where the entire input document tree may be referenced during the transformation process. The evaluation is performed in a bottom-up manner. A language evaluator has been implemented which runs in Unix environments. CR Categories and Subject Descriptors: I. 7. 2 [Text processing]: Document Preparation. J. 7 [Computers in other systems]: Publishing. General Terms: Design Keywords: structured document transformations, <b>SGML,</b> tree transformation <b>languages</b> Contents 1 Introduction 1 2 Overall control and data model 2 3 Semi-formal semantics 3 4 Transformation rules 4 5 TranSID operators 6 6 An example transformation 9 7 Implementation 12 8 Conclusion and future work 13 References 13 i 1 Introduction In the world of document preparation, text transformation is an everyday issue. Documents need to be produced and presented in dioe [...] ...|$|R
5000|$|OASIS {{was founded}} {{under the name}} [...] "SGML Open" [...] in 1993. It began as a trade {{association}} of SGML tool vendors to cooperatively promote {{the adoption of the}} Standard Generalized Markup <b>Language</b> (<b>SGML)</b> through mainly educational activities, though some amount of technical activity was also pursued including an update of the CALS Table Model specification and specifications for fragment interchange and entity management.|$|R
40|$|The network-centric {{computing}} {{model has}} gained wide acceptance {{in the information}} technology. Driven by {{the popularity of the}} TCP/IP networking protocols generally and by the proliferation of various HTTP protocol-based services in particular, the distributed computing in a networked environment has become in the focus of interest in many application areas. Currently the Web platform is widely used for data access and visualization also in spatial applications. The new computing model creates challenges and opportunities that call for applied research on how to best adapt the generic Web technologies, currently being developed by the World Wide Web Consortium (W 3 C), to the needs of geographic information systems. In this paper we discuss a few of these technologies, adapted to the problem domain of Web-based geospatial applications. One of the most significant developments is the activity of the W 3 C centred around the Extensible Markup Language (XML) specification. The work on XML started around 1996, with a goal to develop a simplified Web-adapted version of the widely accepted Standard Generalized Markup <b>Language</b> (<b>SGML),</b> a <b>language</b> defining a markup syntax for structured text documents. The XML specification became an official W 3 C Recommendation in February 1998 (OGC, 1998). XML is regarded as the next-generation encoding language for the Web, designed to support text document processing an...|$|R
40|$|The Standard Generalized Markup <b>Language</b> (<b>SGML),</b> is an ISO Standard that {{specifies}} {{a language}} for document representation. This paper gives a short introduction to SGML and describes the Amsterdam SGML Parser {{and the problems}} we encountered in implementing the Standard. These problems include interpretation of the Standard in the places where it is ambiguous and the technical problems in parsing SGML documents. KEY WORDS SGML Structured documents Document preparation Parser generator...|$|R
40|$|The Defense Nuclear Agency (DNA) has {{acquired}} terabytes of valuable data which {{need to be}} archived and effectively distributed to the entire nuclear weapons effects community and others [...] . This paper describes the DARE (Data Archival and Retrieval Enhancement) metadata model and explains how it {{is used as a}} source for generating HyperText Markup Language (HTML) or Standard Generalized Markup <b>Language</b> (<b>SGML)</b> documents for access through web browsers such as Netscape...|$|R
40|$|The record structure, content {{designation}} {{and data}} content {{that make up}} a MAchine-Readable Cataloging (MARC) record are described. Distinguishing characteristics of the MARC record structure are identified and content designations are defined. The use of MARC as both an American national standard (ANSI Z 39. 2) and an international standard (ISO 2709) is noted. The relational between MARC and the Standardized General Markup <b>Language</b> (<b>SGML)</b> is explored and areas of overlap are identified...|$|R
50|$|The FPI is {{undoubtedly}} the least well-understood {{part of the}} document type declaration, an integral component of valid HTML, XML and Standard Generalized Markup <b>Language</b> (<b>SGML)</b> documents. The Formal Public Identifier's effect upon its host document is unusual in that it can depend not only upon its own syntactical correctness and the behaviour of the program parsing it, but also upon the ISO-registration status of the organisation responsible for schema referenced by the FPI.|$|R
5000|$|The {{extensible}} {{markup language}} (XML) has become a popular format for data representation in recent years. Although XML data {{can be stored in}} normal file systems, it is commonly held in relational databases to take advantage of their [...] "robust implementation verified by years of both theoretical and practical effort". As an evolution of the Standard Generalized Markup <b>Language</b> (<b>SGML),</b> XML's text-based structure offers the advantage of being both machine and human-readable.|$|R
40|$|An object-based {{methodology}} for knowledge representation and its Standard Generalized Markup <b>Language</b> (<b>SGML)</b> implementation is presented. The methodology includes class, perspective domain, and event constructs for representing knowledge within an object paradigm. The perspective construct allows for representation of knowledge from multiple and varying viewpoints. The event construct allows actual use of knowledge to be represented. The SGML {{implementation of the}} methodology facilitates usability, structured, yet flexible knowledge design, and sharing and reuse of knowledge class libraries...|$|R
40|$|With {{standard}} database {{approaches to}} document storage the document-file objects either are left intact, or one general document structure is assumed. In the first case, full database functionality is not achieved. With {{regard to the}} second case we claim that different document types are to be treated differently. [...] The Standard Generalized Markup <b>Language</b> (<b>SGML)</b> is a means to identify logical document components. The generic document structure is defined {{by a set of}} production rules, a socalled document-type definition (DTD) ...|$|R
40|$|This study {{proposes a}} viewer for visual {{reconstruction}} and retrieval of form documents. The {{structure of the}} form document and the filled-in data are stored in a Standard Generalised Markup <b>Language</b> (<b>SGML)</b> instance. Document Style Semantics and Specification Language (DSSSL) instance holds style properties of the data. Filled-in data is kept in a relational database. The viewer uses SGML and DSSSL instances as input and visually reconstructs a form document image by retrieving the corresponding filled-in data from database. 1...|$|R
50|$|HAL Software Systems was HAL's {{software}} division. Their {{first product}} was a Distributed Computing Environment (DCE) management tool. Later products, introduced in March 1994, included the Olias Browser, Olias Build Tools, Olias Remote Information Broker, and Olias Filter Development Kit. These products were for browsing and managing Standard Generalized Markup <b>Language</b> (<b>SGML)</b> and World Wide Web documents and relational databases. In mid-1996, Fujitsu had HAL Computer Systems spin off HAL Software Systems as Chisholm Technologies, Inc., a company financed by Fujitsu that developed Intranet administration tools.|$|R
40|$|We {{study the}} problem of {{automatic}} generation of a document type definition (DTD) {{for a set of}} Standard Generalized Markup <b>Language</b> (<b>SGML)</b> documents. We present various situations where we have tagged documents but no DTD, and discuss the requirements various applications may have with respect to the generation process. We also present an automatic DTD generation tool that can be adjusted for several tasks necessary in the applications. The method is also demonstrated with some experimental cases. KEY WORDS SGML Document type definitions Generatio...|$|R
5000|$|Style sheets {{have existed}} {{in one form}} or another since the {{beginnings}} of Standard Generalized Markup <b>Language</b> (<b>SGML)</b> in the 1980s, and CSS was developed to provide style sheets for the web. One requirement for a web style sheet language was for style sheets to come from different sources on the web. Therefore, existing style sheet languages like DSSSL and FOSI were not suitable. CSS, on the other hand, let a document's style be influenced by multiple style sheets by way of [...] "cascading" [...] styles.|$|R
40|$|Structured {{reporting}} systems use standardized data elements and predetermined data-entry formats to record observations. This article describes {{a system for}} structured data entry and reporting that generates reports encoded in the Standard Generalized Markup <b>Language</b> (<b>SGML),</b> an open, internationally accepted standard for document interchange. The structured report is self-documenting: it includes a definition of its allowable data fields and values encoded as a reportspecific SGML document type definition (DTD). By linking its reporting concepts with those of external vocabularies such as the UMLS Metathesaurus, this system can create open, universally comprehensible structured reports. Keywords...|$|R
50|$|SGML generalizes and {{supports}} {{a wide range}} of markup languages as found in the mid 1980s. These ranged from terse Wiki-like syntaxes to RTF-like bracketed languages to HTML-like matching-tag <b>languages.</b> <b>SGML</b> did this by a relatively simple default reference concrete syntax augmented with a large number of optional features that could be enabled in the SGML Declaration. Not every SGML parser can necessarily process every SGML document. Because each processor's System Declaration can be compared to the document's SGML Declaration it is always possible to know whether a document is supported by a particular processor.|$|R
