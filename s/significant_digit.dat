234|506|Public
25|$|The {{new order}} {{began with the}} Bengal regiments, {{followed}} by the Punjab Frontier Force, then the regiments of Madras, the Hyderabad Contingent, and Bombay. Wherever possible a <b>significant</b> <b>digit</b> was retained in the new number. Thus the 1st Sikh Infantry became the 51st Sikhs, the 1st Madras Pioneers became the 61st Pioneers, and the 1st Bombay Grenadiers became the 101st Grenadiers.|$|E
25|$|The {{resolution}} of a multimeter is often {{specified in the}} number of decimal digits resolved and displayed. If the most <b>significant</b> <b>digit</b> cannot take all values from 0 to 9 it is generally, and confusingly, termed a fractional digit. For example, a multimeter which can read up to 19999 (plus an embedded decimal point) is said to read 4½ digits.|$|E
25|$|Big-endianness may be {{demonstrated}} by writing a decimal number, say one hundred twenty-three, on {{paper in the}} usual positional notation understood by a numerate reader: 123. The digits are written starting from the left and to the right, with the most <b>significant</b> <b>digit,</b> 1, written first. This {{is analogous to the}} lowest address of memory being used first. This {{is an example of a}} big-endian convention taken from daily life.|$|E
5000|$|The {{computation}} of [...]45 seconds involved extracting {{a square}} root, a mathematical operation that required rounding off to some number of <b>significant</b> <b>digits,</b> {{in this case}} two <b>significant</b> <b>digits.</b>|$|R
40|$|In {{this paper}} we compare the daily {{distribution}} of first <b>significant</b> <b>digits</b> of S&P 500 ’s stock prices and returns against the Benford’s law. In particular, {{the analysis is}} performed on 3067 days for 361 out of the 500 stocks. We obtain that the overall distribution of first <b>significant</b> <b>digits</b> roughly follows the Benford’s law, confirming previous claims of the literature, and obtain {{that the majority of}} the daily distribution of return first <b>significant</b> <b>digits</b> follow Benford’s law...|$|R
40|$|A random {{variable}} X is digit-regular (respectively, significant-digit-regular) if {{the probability that}} every block of k given consecutive <b>digits</b> (<b>significant</b> <b>digits)</b> appears in the b-adic expansion of X approaches b &supk; as the block moves to the right, for all integers b > 1 and k ? 1. Necessary and sufficient conditions are established, in terms of convergence of Fourier coefficients, {{and in terms of}} convergence in distribution modulo 1, for a {{random variable}} to be digit-regular (significant-digit regular), and basic relationships between digit-regularity and various classical classes of probability measures and normal numbers are given. These results provide a theoretical basis for analyses of roundoff errors in numerical algorithms which use floating-point arithmetic, and for detection of fraud in numerical data via using goodness-of-fit of the least <b>significant</b> <b>digits</b> to uniform, complementing recent tests for leading <b>significant</b> <b>digits</b> based on Benford's law. normal numbers, <b>significant</b> <b>digits,</b> Benford's law, digit-regular random variable, significant-digit-regular random variable, law of least <b>significant</b> <b>digits,</b> floating-point numbers, nonleading digits, trailing digits...|$|R
25|$|It is {{customary}} {{in scientific}} measurements to record all the definitely known digits from the measurements, and to estimate {{at least one}} additional digit {{if there is any}} information at all available to enable the observer to make an estimate. The resulting number contains more information than it would without that extra digit(s), and it (or they) may be considered a <b>significant</b> <b>digit</b> because it conveys some information leading to greater precision in measurements and in aggregations of measurements (adding them or multiplying them together).|$|E
25|$|We {{can assume}} that as we write text left to right, we are {{increasing}} the 'address' on paper, as a processor would write bytes with increasing memory addresses − as in the adjacent table. On paper, the hex value 0a0b0c0d (written 168496141 in usual decimal notation) is big-endian style since we write the most <b>significant</b> <b>digit</b> first and the rest follow in decreasing significance. Mapping this number as a binary value to a sequence of 4 bytes in memory in big-endian style also writes the bytes {{from left to right}} in decreasing significance: 0Ah at +0, 0Bh at +1, 0Ch at +2, 0Dh at +3.|$|E
25|$|The 80-bit {{floating}} point format has a range (including subnormals) from approximately 3.65104951 to 1.18104932. Although log10(264)≅19.266, this format is usually described as giving approximately eighteen significant digits of precision. The use of decimal {{when talking about}} binary is unfortunate because most decimal fractions are recurring sequences in binary just as 2/3 is in decimal. Thus, a value such as 10.15 is represented in binary as equivalent to 10.1499996185 etc. in decimal for REAL*4 but 10.15000000000000035527etc. in REAL*8: interconversion will involve approximation except for those few decimal fractions that represent an exact binary value, such as 0.625. For REAL*10, the decimal string is 10.1499999999999999996530553etc. The last 9 digit is the eighteenth fractional digit and thus the twentieth <b>significant</b> <b>digit</b> of the string. Bounds on conversion between decimal and binary for the 80-bit format can be given as follows: if a decimal string with at most 18 significant digits is correctly rounded to an 80-bit IEEE 754 binary {{floating point}} value (as on input) then converted {{back to the same}} number of significant decimal digits (as for output), then the final string will exactly match the original; while, conversely, if an 80-bit IEEE 754 binary floating point value is correctly converted and (nearest) rounded to a decimal string with at least 21 significant decimal digits then converted back to binary format it will exactly match the original. These approximations are particularly troublesome when specifying the best value for constants in formulae to high precision, as might be calculated via arbitrary precision arithmetic.|$|E
5000|$|Using the {{standard}} quadratic formula and maintaining sixteen significant figures at each step, {{the standard}} quadratic formula yieldsNote how cancellation {{has resulted in}} [...] being computed to only eight <b>significant</b> <b>digits</b> of accuracy.The variant formula presented here, however, yields the following:Note the retention of all <b>significant</b> <b>digits</b> for [...]|$|R
40|$|Pebbles (calculos in Latin) are the "bits" {{used in the}} Ancients' four {{function}} calculator / computer. The Ancient Computer's {{normal mode}} {{is to work with}} numbers in what we would call exponential notation. Decimal numbers can have up to 10 <b>significant</b> <b>digits</b> in the coefficient (a fraction < 1 with no leading zeros) and up to 4 <b>significant</b> <b>digits</b> in the exponent (a radix shift). Duodecimal and sexagesimal numbers can have up to 5 <b>significant</b> <b>digits</b> in the coefficient and up to 2 <b>significant</b> <b>digits</b> in the exponent. Coefficients and exponents can be either positive or negative. Built-in error checking is included since an addend can be entered and checked before accumulation. The Ancient Computer is time tested; it or its predecessors have been in use since before 2000 BC. Comment: 41 page...|$|R
5000|$|Example in wikibooks: Cancellation of <b>significant</b> <b>digits</b> in {{numerical}} computations ...|$|R
500|$|... 7 + 9 = 16, and the digit 1 is the carry. An {{alternate}} strategy starts adding {{from the}} most <b>significant</b> <b>digit</b> on the left; this route makes carrying a little clumsier, but it is faster at getting a rough estimate of the sum. There are many alternative methods.|$|E
500|$|... {{according}} to some chosen radix; then, {{the part of the}} key used for the th pass of the algorithm is the th digit in the positional notation for the full key, starting from the least <b>significant</b> <b>digit</b> and progressing to the most significant. For this algorithm to work correctly, the sorting algorithm used in each pass over the data must be stable: items with equal digits should not change positions with each other. For greatest efficiency, the radix should be chosen to be near the number of data items, [...] Additionally, using a power of two near [...] as the radix allows the keys for each pass to be computed quickly using only fast binary shift and mask operations. With these choices, [...] and with pigeonhole sort or counting sort as the base algorithm, the radix sorting algorithm can sort [...] data items having keys in the range from [...] to [...] in time [...]|$|E
2500|$|Benford's law, {{also called}} the first-digit law, is an {{observation}} about the frequency distribution of leading digits in many real-life sets of numerical data. The law states that in many naturally occurring collections of numbers, the leading <b>significant</b> <b>digit</b> {{is likely to be}} small. For example, in sets that obey the law, the number [...] appears as the most <b>significant</b> <b>digit</b> about 30% of the time, while [...] appears as the most <b>significant</b> <b>digit</b> less than 5% of the time. By contrast, if the digits were distributed uniformly, they would each occur about 11.1% of the time. Benford's law also makes predictions about the distribution of second digits, third digits, digit combinations, and so on.|$|E
5000|$|<b>Significant</b> <b>digits</b> {{are lost}} (ANSI Rexx, not in TRL second edition) ...|$|R
50|$|Unlike the Year 2000 problem, where <b>significant</b> <b>digits</b> were {{omitted from}} the stored values of years, fixing the Year 10,000 problem does not require {{updating}} old records (assuming they are already Y2K-compliant), since all four <b>significant</b> <b>digits</b> are present. It only requires that record storage in decimal be able to store five or more digits.|$|R
2500|$|An inch {{is defined}} as exactly 25.4mm. Quoting a value of 25.400mm shows that the value is correct to the nearest micrometer. An {{approximated}} value with only two <b>significant</b> <b>digits</b> would be [...] instead. As there is no limit {{to the number of}} <b>significant</b> <b>digits,</b> the length of an inch could, if required, be written as (say) [...] instead.|$|R
2500|$|Decimal {{counting}} {{uses the}} ten symbols 0 through 9. [...] Counting {{begins with the}} incremental substitution of the least <b>significant</b> <b>digit</b> (rightmost digit) which is often called the first digit. When the available symbols for this position are exhausted, the least <b>significant</b> <b>digit</b> is reset to 0, and the next digit of higher significance (one position to the left) is incremented (overflow), and incremental substitution of the low-order digit resumes. This method of reset and overflow is repeated for each digit of significance. Counting progresses as follows: ...|$|E
2500|$|Both {{these methods}} {{break up the}} {{subtraction}} {{as a process of}} one digit subtractions by place value. Starting with a least <b>significant</b> <b>digit,</b> a subtraction of subtrahend: ...|$|E
2500|$|... where FSD is the First <b>Significant</b> <b>Digit</b> and [...] is {{the sample}} size. Morrow has {{determined}} the critical values for both these statistics, which are shown below: ...|$|E
50|$|This gives from 15 to 17 <b>significant</b> decimal <b>digits</b> precision. If a decimal string with at most 15 <b>significant</b> <b>digits</b> is {{converted}} to IEEE 754 double-precision representation, and then converted back to a decimal string with {{the same number of}} digits, the final result should match the original string. If an IEEE 754 double-precision number {{is converted}} to a decimal string with at least 17 <b>significant</b> <b>digits,</b> and then converted back to double-precision representation, the final result must match the original number.|$|R
2500|$|Applicable {{parameters}} for J2000.0 rounded to seven <b>significant</b> <b>digits</b> (excluding leading 1) are: ...|$|R
5000|$|An inch {{is defined}} as exactly 25.4 mm. Quoting a value of 25.400 mm shows that the value is correct to the nearest micrometer. An {{approximated}} value with only two <b>significant</b> <b>digits</b> would be [...] instead. As there is no limit {{to the number of}} <b>significant</b> <b>digits,</b> the length of an inch could, if required, be written as (say) [...] instead.|$|R
2500|$|Radix sort is an {{algorithm}} that sorts numbers by processing individual digits. n numbers {{consisting of}} k digits each are sorted in O(n · k) time. [...] Radix sort can process digits of each number either {{starting from the}} least <b>significant</b> <b>digit</b> (LSD) or starting from the most <b>significant</b> <b>digit</b> (MSD). [...] The LSD algorithm first sorts the list by the least <b>significant</b> <b>digit</b> while preserving their relative order using a stable sort. Then it sorts them by the next digit, and so on from the least significant to the most significant, ending up with a sorted list. While the LSD radix sort {{requires the use of}} a stable sort, the MSD radix sort algorithm does not (unless stable sorting is desired). [...] In-place MSD radix sort is not stable. [...] It is common for the counting sort algorithm to be used internally by the radix sort. [...] A hybrid sorting approach, such as using insertion sort for small bins improves performance of radix sort significantly.|$|E
2500|$|A signed (meaning {{negative}} or non-negative) digit string {{of a given}} length in a given base (or radix). This digit string {{is referred to as}} the significand, mantissa, or coefficient. The length of the significand determines the precision to which numbers can be represented. [...] The radix point position is assumed always to be somewhere within the significand—often just after or just before the most <b>significant</b> <b>digit,</b> or to the right of the rightmost (least <b>significant)</b> <b>digit.</b> [...] This article generally follows the convention that the radix point is set just after the most significant (leftmost) digit.|$|E
2500|$|Morrow {{has also}} shown that for any random {{variable}} X (with a continuous pdf) divided by its standard deviation (σ), a value A can be found such that the probability {{of the distribution of}} the first <b>significant</b> <b>digit</b> of the random variable (...) A will differ from Benford's Law by less than ε > 0. The value of A depends on the value of ε and the distribution of the random variable.|$|E
40|$|Let {{the random}} {{variable}} X be uniformly distributed on [0, 1], [alpha] {{be a positive}} number, [alpha][not equal to] 1, and b be a positive integer, b> 1. We derive the joint distribution of Y 1,Y 2, [...] .,Yk, the first k <b>significant</b> <b>digits</b> in the radix expansion in base b of Y=X 1 /[alpha]. We show that, as k [...] >[infinity], Yk converges in distribution to the uniform distribution on the set { 0, 1, [...] .,b- 1 }. We also prove that if Y is a random variable taking values in [0, 1] whose cumulative distribution function is continuous and convex (respectively, concave) then the <b>significant</b> <b>digits</b> Y 1,Y 2, [...] . are stochastically increasing (respectively, decreasing). In particular, if Y=X 1 /[alpha] where X is uniformly distributed on [0, 1] then the <b>significant</b> <b>digits</b> Y 1,Y 2, [...] . are stochastically increasing (respectively, decreasing) if [alpha] 1). Beta distribution Power transformation Random number generation <b>Significant</b> <b>digits</b> Stochastic ordering Uniform distribution...|$|R
5000|$|It is {{an irrational}} {{algebraic}} number. The first sixty <b>significant</b> <b>digits</b> of its decimal expansion are: ...|$|R
2500|$|Numerical {{stability}} {{is affected by}} the number of the <b>significant</b> <b>digits</b> the machine keeps on, if we use a machine that keeps only the four most <b>significant</b> decimal <b>digits,</b> a good example on loss of significance is given by these two equivalent functions ...|$|R
2500|$|To convert numbers between bases, {{one can use}} {{the general}} {{conversion}} algorithm (see the relevant section under positional notation). Alternatively, one can use digit-conversion tables. The ones provided below {{can be used to}} convert any duodecimal number between 0.01 and ƐƐƐ,ƐƐƐ.ƐƐ to decimal, or any decimal number between 0.01 and 999,999.99 to duodecimal. To use them, the given number must first be decomposed into a sum of numbers with only one <b>significant</b> <b>digit</b> each. For example: ...|$|E
2500|$|It can be {{required}} that the most <b>significant</b> <b>digit</b> of the significand of a non-zero number be non-zero (except when the corresponding exponent would be smaller than the minimum one). This process is called normalization. For binary formats (which uses only the digits [...] and [...] ) this non-zero digit is necessarily [...] Therefore, it {{does not need to}} be represented in memory; allowing the format to have one more bit of precision. This rule is variously called the leading bit convention, the implicit bit convention, or the hidden bit convention.|$|E
2500|$|By convention, if {{the most}} <b>significant</b> <b>digit</b> {{can be either}} 0 or 1, it is termed a half-digit; if it can take higher values without {{reaching}} 9 (often 3 or 5), it may be called three-quarters of a digit. A 5½ digit multimeter would display one [...] "half digit" [...] that could only display 0 or 1, followed by five digits taking all values from 0 to 9. Such a meter could show positive or negative values from 0 to 199,999. A 3¾ digit meter can display a quantity from 0 to 3,999 or 5,999, depending on the manufacturer.|$|E
50|$|In base 10 one can {{notice that}} the {{hexagonal}} numbers' rightmost (least <b>significant)</b> <b>digits</b> follow the pattern 1-7-9-7-1.|$|R
5000|$|Real numbers, using decimal {{floating}} point. These store up to 14 <b>significant</b> <b>digits</b> {{depending on}} the calculator model.|$|R
40|$|International audienceIf I_n is the {{approximation}} of a definite integral ∫_a^bf(x) dx with step b-a/ 2 ^n using the trapezoidal rule (respectively Simpson's rule), if C_a,b denotes {{the number of}} <b>significant</b> <b>digits</b> common to a and b, we show, in this paper, that C_I_n,I_n+ 1 = C_I_ n,I+_ 10 (4 / 3) +O(1 / 4 ^n) (respectively C_I_n,I_n+ 1 = C_I_ n,I+_ 10 (16 / 15) +O(1 / 16 ^n)). According to the previous theorems, using the CADNA library which allows on computers to estimate the round-off error effect on any computed result, we can compute dynamically the optimal value of n to approximate I and we are sure that the exact <b>significant</b> <b>digits</b> of I_n are {{in common with the}} <b>significant</b> <b>digits</b> of I...|$|R
