10000|10000|Public
5|$|Due to the {{complexity}} of proteins' conformation or configuration space (the set of possible shapes a protein can take), and limits in computing power, all-atom molecular dynamics <b>simulations</b> have been severely limited in the timescales which they can study. While most proteins typically fold in the order of milliseconds, before 2010 <b>simulations</b> could only reach nanosecond to microsecond timescales. General-purpose supercomputers have been used to simulate protein folding, but such systems are intrinsically costly and typically shared among many research groups. Further, because the computations in kinetic models occur serially, strong scaling of traditional molecular <b>simulations</b> to these architectures is exceptionally difficult. Moreover, as protein folding is a stochastic process and can statistically vary over time, it is challenging computationally to use long <b>simulations</b> for comprehensive views of the folding process.|$|E
5|$|Folding@home {{is one of}} the world's fastest {{computing}} systems, with a {{speed of}} approximately 70 petaFLOPS. This performance from its large-scale computing network has allowed researchers to run computationally costly atomic-level <b>simulations</b> of protein folding thousands of times longer than formerly achieved. Since its launch on October1, 2000, the Pande Lab has produced 139 scientific research papers {{as a direct result of}} Folding@home. Results from the project's <b>simulations</b> agree well with experiments.|$|E
5|$|Giant impacts {{are thought}} to have been common in the early Solar System. Computer <b>simulations</b> of a giant impact have {{produced}} results that are consistent with the mass of the lunar core and the present angular momentum of the Earth–Moon system. These <b>simulations</b> also show that most of the Moon derived from the impactor, rather than the proto-Earth. More recent <b>simulations</b> suggest a larger fraction of the Moon derived from the original Earth mass. Studies of meteorites originating from inner Solar System bodies such as Mars and Vesta show that they have very different oxygen and tungsten isotopic compositions as compared to Earth, whereas Earth and the Moon have nearly identical isotopic compositions. The isotopic equalization of the Earth-Moon system might be explained by the post-impact mixing of the vaporized material that formed the two, although this is debated.|$|E
40|$|Abstract:- This paper {{examines}} {{issues in}} <b>simulation</b> of communication systems and their application for such systems. Application of <b>simulation</b> to voice, data, integrated networks, and wireless networks are discussed. It explores which <b>simulation</b> {{is best to}} be used for various communication systems. Monte Carlo <b>simulation,</b> deterministic and stochastic <b>simulation,</b> discrete-event and continuous <b>simulation,</b> and rare event <b>simulation</b> are discussed. The replication and batch-means methods used to determine the <b>simulation</b> run time are discussed. Key-Words:- <b>simulation</b> methods, <b>simulation</b> run-time, stochastic <b>simulation,</b> warm-up period...|$|R
40|$|In this paper, {{we propose}} an {{incremental}} <b>simulation</b> method in event-driven HDL <b>simulation</b> {{to reduce the}} <b>simulation</b> execution time. In general, the <b>simulation</b> is repeated {{with a series of}} design changes. Incremental <b>simulation</b> is an efficient <b>simulation</b> method that shortens the <b>simulation</b> execution time for the following <b>simulation</b> by using the result of previous <b>simulation.</b> We have observed the effectivenes...|$|R
5000|$|The SSH Certified Healthcare <b>Simulation</b> Operations Specialist (CHSOS) {{program was}} {{established}} to provide “an inclusive “umbrella” term that embodies many different roles within healthcare <b>simulation</b> operations, including <b>simulation</b> technician, <b>simulation</b> technology specialist, <b>simulation</b> specialist, <b>simulation</b> coordinator, <b>simulation</b> AV specialist, etc.” ...|$|R
5|$|Numerical <b>simulations</b> of the {{migration}} of the giant planets show {{that the number of}} objects captured in the Oort cloud is reduced if Planet Nine was in its predicted orbit at that time. This reduction of objects captured in the Oort cloud also occurred in <b>simulations</b> with the giant planets on their current orbits.|$|E
5|$|Vigilant Eagle 2012 was {{a command}} post {{exercise}} (CPX) held in 2012 that, {{for the first}} time, did not include live-flying aircraft, instead using computer <b>simulations.</b>|$|E
25|$|<b>Simulations</b> can {{be based}} on either {{integration}} of differential equations without use of random numbers (deterministic <b>simulations)</b> or {{be based on}} random events (stochastic <b>simulations).</b>|$|E
5000|$|The <b>Simulation</b> entity {{contains}} all {{information about the}} <b>simulation</b> settings and the steps taken during <b>simulation,</b> e.g., the particular type of <b>simulation</b> and the algorithm used for {{the execution of the}} <b>simulation.</b> The <b>simulation</b> algorithm is specified with a Kinetic <b>Simulation</b> Algorithm Ontology term.|$|R
40|$|In recent years, <b>simulation</b> {{modelling}} {{of software}} processes have has promoted {{as a tool}} to understand, study, control, and manage software development processes. Claims have been made that <b>simulation</b> models are useful and effective at gaining insight into software development processes. However, little has been said about the process of developing <b>simulation</b> models for software engineering problems. <b>Simulation</b> modelling is a young discipline in software engineering. Consequently, many number software process <b>simulation</b> modellers are thought to be novices. The <b>simulation</b> modelling process is believed to have had an effect on the quality of a <b>simulation</b> study. Although there is a body of knowledge available in the general <b>simulation</b> literature to guide and educate novices, the software process <b>simulation</b> modelling literature lacks information for novice software process <b>simulation</b> modellers to understand and adopt a <b>simulation</b> modelling process. This thesis aims to develop a <b>simulation</b> modelling process for novice software process <b>simulation</b> modellers. This thesis reports how the development and evaluation of a <b>simulation</b> modelling process for novice software process <b>simulation</b> modellers. The rapid <b>simulation</b> modelling process (RSMP) is based on an empirical study of the contexts and practices of expert <b>simulation</b> modellers in SPSM and Operational Research (OR). The RSMP is intended to be independent of a particular <b>simulation</b> technique (i. e. system dynamics or discrete event <b>simulation)</b> and guides novice software process <b>simulation</b> modellers through a set of steps that should be undertaken during a <b>simulation</b> study; the RSMP emphasises heavy client contact and provides guidelines for model documentation. The RSMP has been evaluated through controlled experiments with novice software process <b>simulation</b> modellers using system dynamics (SD) modelling. In the future, it will be further evaluated with software process <b>simulation</b> modellers using discrete event <b>simulation.</b> The RSMP has also been evaluated with a panel of expert software process <b>simulation</b> modellers. The main contribution of this study lies in providing novice software process <b>simulation</b> modellers with a <b>simulation</b> modelling process, which embodies real world <b>simulation</b> practice and is intended to be independent of a particular <b>simulation</b> technique...|$|R
40|$|This paper {{focuses on}} a spreadsheet-based {{approach}} to teaching <b>simulation.</b> The objective is to introduce spreadsheets as a powerful <b>simulation</b> tool for educational purposes. The spreadsheet <b>simulation</b> facilitates the familiarisation with basic <b>simulation</b> concepts apart from <b>simulation</b> software. The paper deals with basic types of <b>simulation</b> models suitable for spreadsheets. The static stochastic or Monte Carlo <b>simulation</b> models are introduced through a sample model for lead-time demand distribution evaluation. The two main types of dynamic <b>simulation</b> spreadsheets models are overviewed as well. The discrete-event system <b>simulation</b> basic concepts are introduced by simulating a two-server system with a single queue. A population dynamics <b>simulation</b> model presents the System Dynamics concepts. The basic <b>simulation</b> model types that are available on spreadsheets {{make it possible to}} study <b>simulation</b> concepts, methodology, and techniques as well as to use spreadsheets for on-hand <b>simulation</b> in business games, case studies, engineering, etc. The overviewed experiences in using spreadsheets for teaching <b>simulation</b> result in indication of spreadsheets as an alternative <b>simulation</b> software...|$|R
25|$|<b>Simulations</b> can {{be chosen}} to either resolve {{variations}} of concentrations over space (spatial <b>simulations)</b> or assume concentrations constant across compartments (compartmental <b>simulations).</b>|$|E
25|$|In other <b>simulations,</b> visual {{components}} of the procedure are reproduced by computer graphics techniques, while touch-based components are reproduced by haptic feedback devices combined with physical simulation routines computed {{in response to the}} user's actions. Medical <b>simulations</b> of this sort will often use 3D CT or MRI scans of patient data to enhance realism. Some medical <b>simulations</b> are developed to be widely distributed (such as web-enabled <b>simulations</b> and procedural <b>simulations</b> that can be viewed via standard web browsers) and can be interacted with using standard computer interfaces, such as the keyboard and mouse.|$|E
25|$|Before the Monte Carlo {{method was}} developed, <b>simulations</b> tested a {{previously}} understood deterministic problem and statistical sampling {{was used to}} estimate uncertainties in the <b>simulations.</b> Monte Carlo <b>simulations</b> invert this approach, solving deterministic problems using a probabilistic analog (see Simulated annealing).|$|E
40|$|The {{application}} of an object-oriented (OO) approach including the OO modeling concept and the OO programming mechanisms {{to develop an}} activity object-oriented (AOO) <b>simulation</b> strategy for modeling construction operations is introduced. After discussing <b>simulation</b> strategies generally used for construction <b>simulation</b> and analyzing the problems related to the <b>simulation</b> strategies, the AOO <b>simulation</b> strategy that guides modeling or controls <b>simulation</b> experiments for construction <b>simulation</b> is introduced. The AOO <b>simulation</b> strategy considers activities to be objects {{and is able to}} overcome some pitfalls that result from other general <b>simulation</b> strategies. In addition, the AOO graphical modeling interface associated with the AOO <b>simulation</b> strategy is described. Finally, comparisons of the graphical model or the <b>simulation</b> results of the AOO <b>simulation</b> system with other <b>simulation</b> tools are illustrated. Department of Building and Real Estat...|$|R
40|$|Abstract. The <b>simulation</b> {{results and}} the {{analysis}} of 3 d body movement is still a difficult and hot issue. Although domestic and international counterparts is in a human body movement <b>simulation</b> has some results but they really difficult to meet demand, because height {{of the complexity of}} the calculation, or the need to put heavy parameters. Study the hot topic of object-oriented <b>simulation</b> system <b>simulation</b> method, qualitative <b>simulation,</b> distributed interactive <b>simulation,</b> virtual <b>simulation,</b> the multimedia <b>simulation,</b> <b>simulation</b> based on virtual reality...|$|R
40|$|A good {{methodology}} for <b>simulation</b> experimentation {{can result in}} high efficiency in carrying out <b>simulation</b> experiments. To fully support a user {{to carry out a}} <b>simulation</b> experiment, a supportive and user friendly <b>simulation</b> experimentation environment is desirable. The program generator which generates the executable programs from a model expressed in a high-level <b>simulation</b> programming language is another important issue in <b>simulation</b> experimentation. This thesis presents a new {{methodology for}} <b>simulation</b> experimentation based on the model specification language Gest. A <b>simulation</b> experimentation environment which supports a user to carry out the <b>simulation</b> experiment based on the model written in Gest is implemented. A program generator which analyzes the model and generates an executable <b>simulation</b> program with <b>simulation</b> tables for the <b>simulation</b> experimentation environment is also discussed...|$|R
25|$|<b>Simulations</b> and experiments: {{iterations}} between large-scale <b>simulations</b> of neocortical microcircuits and {{experiments in}} order to verify the computational model and explore predictions.|$|E
25|$|Car {{companies}} {{can improve the}} crash safety of their vehicles by using computer <b>simulations</b> of car crashes. Such <b>simulations</b> essentially consist of solving partial differential equations numerically.|$|E
25|$|Matrix {{inversion}} plays {{a significant}} role in computer graphics, particularly in 3D graphics rendering and 3D <b>simulations.</b> Examples include screen-to-world ray casting, world-to-subspace-to-world object transformations, and physical <b>simulations.</b>|$|E
40|$|Discrete event <b>simulation</b> {{modelling}} framework, grab {{and glue}} <b>simulation</b> <b>Simulation</b> modelling {{is a powerful}} tool for problem understanding and problem solving. Constructing <b>simulation</b> models following the classical <b>simulation</b> modelling framework has disadvantage of being time consuming, hence making it expensive. Users can sometimes be reluctant to use <b>simulation</b> due to these reasons or implement <b>simulation</b> results. This paper proposes a new <b>simulation</b> approach that tackles the problem of time. For this purpose, this paper will start by reviewing a number of existing <b>simulation</b> modelling frameworks. From this analysis, we attempt to develop a <b>simulation</b> framework that deals with the question of time. The proposed <b>simulation</b> framework is supposed to enhance <b>simulation</b> results and reduce disadvantages related to cost and time...|$|R
40|$|Community of <b>Simulation</b> task (CoST) is a <b>simulation</b> {{architecture}} {{based on}} a service-oriented architecture to achieve seamless integration and interoperability of command information system. It servitize the <b>simulation</b> resources through combination the <b>simulation</b> service and completes CoST by management and coordinated <b>simulation</b> resources. Firstly, this article introduced in the CoST involves <b>simulation</b> service, <b>simulation</b> resources, CoST, CoST members as well as <b>simulation</b> service system concept and CoST's principle. Secondly, the article describes CoST's architecture and key technologies of <b>simulation</b> task to solve problem. Finally, combining tasks of joint training <b>simulation</b> control system with hierarchical structure describes CoST’s application in detail...|$|R
40|$|This {{viewgraph}} presentation {{reviews the}} use of <b>simulation</b> and modeling {{in preparation for the}} planned exploration initiatives. The Exploration Systems Mission Directorate (EMSD) Integrated Modeling and <b>Simulation</b> (IM&S) team strategy encompasses a wide spectrum of <b>simulation</b> and modeling policies and technologies. One prominent technology is distributed <b>simulation.</b> The DIstributed <b>Simulation</b> (DIS),a collaborative <b>simulation</b> project with international participation (US and Japan) is reviewed as an example of distributed <b>simulation</b> development. The Distributed Space Exploration <b>Simulation</b> (DSES) is another example of distributed <b>simulation</b> that is describe...|$|R
25|$|Computer <b>simulations</b> {{allow their}} users to take models which before were too complex to run, {{and give them}} answers. <b>Simulations</b> {{have proven to be}} some of the best {{insights}} into both play performance and team predictability.|$|E
25|$|Molecular {{dynamics}} (MD) <b>simulations</b> {{are useful}} for simulating the motions of atoms and molecules according to physical laws. MD <b>simulations</b> are often applied to lipids to study atom-scale properties that {{may be difficult to}} observe otherwise. Force field parameters vary based on atom and molecule types. MD <b>simulations</b> may observe interactions between targeted lipids, proteins, hydrocarbons, water, hydrophilic/hydrophobic regions, ions, solvents, and other components that are present near the exterior and interior of a biomembrane.|$|E
25|$|<b>Simulations</b> in {{education}} are somewhat like training <b>simulations.</b> They focus on specific tasks. The term 'microworld' {{is used to}} refer to educational <b>simulations</b> which model some abstract concept rather than simulating a realistic object or environment, or in some cases model a real world environment in a simplistic way so as to help a learner develop an understanding of the key concepts. Normally, a user can create some sort of construction within the microworld that will behave in a way consistent with the concepts being modeled. Seymour Papert {{was one of the first}} to advocate the value of microworlds, and the Logo programming environment developed by Papert is one of the most famous microworlds. As another example, the Global Challenge Award online STEM learning web site uses microworld <b>simulations</b> to teach science concepts related to global warming and the future of energy. Other projects for <b>simulations</b> {{in education}}s are Open Source Physics, NetSim etc.|$|E
40|$|Numerical <b>simulation</b> is an {{economical}} {{and effective}} method {{in the field}} of marine engineering. The dynamics of mooring cables has been analysed by a numerical <b>simulation</b> code that was created on a basis of a new element frame. This paper aims at verifying the accuracy of the numerical <b>simulation</b> code through comparisons with both the real experiments and a commercial <b>simulation</b> code. The real experiments are carried out with a catenary chain mooring in a water tank. The experimental results match the <b>simulation</b> results by the numerical <b>simulation</b> code well. Additionally, a virtual <b>simulation</b> of a large size chain mooring in ocean is carried out by both the numerical <b>simulation</b> code and a commercial <b>simulation</b> code. The <b>simulation</b> results by the numerical <b>simulation</b> code match those by the commercial <b>simulation</b> code well. Thus, the accuracy of the numerical <b>simulation</b> code for underwater chain mooring is verified by both the real experiments and commercial <b>simulation</b> code...|$|R
40|$|Spreadsheet <b>simulation</b> ” {{refers to}} the use of a {{spreadsheet}} as a platform for representing <b>simulation</b> models and performing <b>simulation</b> experiments. This tutorial explains the reasons for using this platform for <b>simulation,</b> discusses why this is frequently an efficient way to build <b>simulation</b> models and execute them, describes how to setup a spreadsheet <b>simulation,</b> and finally examines some limitations on the use of spreadsheets for <b>simulation.</b> ...|$|R
40|$|The paper gives a basic {{overview}} of <b>simulation</b> optimization {{as a significant}} <b>simulation</b> technology. The computing requirements of <b>simulation</b> optimization cause that the practical usage of <b>simulation</b> optimization without software support is impossible. Therefore, the paper demonstrates typical software approach to <b>simulation</b> optimization and additionally presents the most important algorithms used in <b>simulation</b> optimization. The authors explain basic steps of implementing <b>simulation</b> optimization and present their own procedure. The {{advantages and disadvantages of}} <b>simulation</b> optimization are emphasized {{at the end of this}} paper...|$|R
25|$|Markov {{chains are}} used in lattice QCD <b>simulations.</b>|$|E
25|$|The {{coefficients}} ci {{were determined}} empirically for a 1 M KCl solution, using MD <b>simulations</b> to benchmark the ion radial distribution functions against Equilibrium Monte Carlo <b>simulations.</b> The effect of hydration shells {{was found to}} be important in <b>simulations</b> at higher salt concentrations where the conductance of many ion channels, porin among them, is observed to saturate as the salt concentration in the electrolyte baths is further increased. Earlier <b>simulations</b> that did not include a model of hydration shells did not reproduce the conductance saturation behavior. This suggests an additional repulsive potential acting to prevent ion crowding, and hence limiting the concentration of ions and current density in the confined space of the pore even at high bath salt concentration. When the repulsive potential was included moderate channel conductance was observed.|$|E
25|$|Computer <b>simulations</b> of {{infectious}} disease spread have been used.|$|E
40|$|A <b>simulation</b> {{conceptual}} {{model is a}} <b>simulation</b> developers way of translating modeling requirements (i. e., {{what is to be}} represented by the <b>simulation</b> or its modification) into a detailed design framework (i. e., how it is to be done), from which the software, hardware, networks (in the case of distributed <b>simulation),</b> and systems/equipment that will make up the <b>simulation</b> can be built or modified. A {{conceptual model}} is the collection of information which describes a <b>simulation</b> developers concept about the <b>simulation</b> and its pieces. That information consists of assumptions, algorithms, characteristics, relationships, and data. Taken together, these describe how the <b>simulation</b> developer understands what is to be represented by the <b>simulation</b> (entities, actions, tasks, processes, interactions, etc.) and how that representation will satisfy the requirements to which the <b>simulation</b> responds. Thus the conceptual model is the basis for judgment about <b>simulation</b> fidelity and validity for any condition that is not specifically tested. The more perspicuous and precise the conceptual model, {{the more likely it is}} that the <b>simulation</b> development will both fully satisfy requirements and allow demonstration that the requirements are satisfied (i. e., validation). Methods used in <b>simulation</b> conceptual model development have significant implications for <b>simulation</b> management and for assessment of <b>simulation</b> uncertainty. This paper suggests how to develop and document a <b>simulation</b> conceptual model so that the <b>simulation</b> fidelity and validity can be most effectively determined. These ideas for conceptual model development apply to all <b>simulation</b> varieties. The paper relates these ideas to uncertainty assessments as they relate to <b>simulation</b> fidelity and validity. The paper also explores implications for <b>simulation</b> management from conceptual model development methods, especially relative to reuse of <b>simulation</b> components...|$|R
40|$|Abstract. Computer <b>simulation</b> {{technology}} is a very complicated professional technology, data acquisition system using data acquisition card generally is expensive and difficult to exactly match with the actual demand. Sound card as the data acquisition card has the advantages of low cost, easy development and system flexibility. Is studied based {{on the model of}} activity of <b>simulation</b> technology, the concept of modern <b>simulation</b> methodology of system modeling method, <b>simulation</b> modeling method and <b>simulation</b> experiment, the <b>simulation</b> modeling of the commonly used algorithms and relevant issues, the <b>simulation</b> credibility concept and research content. In recent years, with the rapid development of information processing technology, <b>simulation</b> {{technology is}} rapid development. According to the author's research experience, this article attempts to from the meanings of the <b>simulation,</b> and discussed the modern reliability method, the modeling method, the <b>simulation</b> algorithm, <b>simulation</b> research and so on, to reasonably and effectively in the <b>simulation</b> operation <b>simulation</b> do some exploring new methods and new technologies...|$|R
40|$|<b>Simulation</b> {{is one of}} {{the most}} {{important}} tools to analyse, design, and operate complex processes and systems. <b>Simulation</b> allows us to make a 'trial and error' in order to understand a system and describe a problem. Therefore, it is of great interest to use <b>simulation</b> easily and practically. The advent of parallel processors and languages help <b>simulation</b> studies. A recent <b>simulation</b> trend is distributed <b>simulation</b> which may be called discrete- event <b>simulation,</b> because distributed <b>simulation</b> has a great potential for the speed-up. This thesis will survey discrete-event <b>simulation</b> and examine one particular algorithm. It will first survey <b>simulation</b> in general and secondly, distributed <b>simulation.</b> Distributed <b>simulation</b> has broadly two mechanisms: conservative and optimistic. The treatment of time in these mechanisms is different, we will look into both mechanisms. Finally, we will examine the conservative mechanism on a network of transputers using Occam. We will conclude with the result of the experiments and the perspective of distributed <b>simulation...</b>|$|R
