18|268|Public
2500|$|The various {{branches}} of lognbsp&z cannot be glued {{to give a}} single function [...] because two branches may give different values {{at a point where}} both are defined. Compare, for example, the principal branch Log(z) on [...] with imaginary part θ in (−π,π) and the branch L(z) on [...] whose imaginary part θ lies in (0,2π). These agree on the upper half plane, but not on the lower half plane. So it makes sense to glue the domains of these branches only along the copies of the upper half plane. The resulting glued domain is connected, but it has two copies of the lower half plane. Those two copies can be visualized as two levels of a parking garage, and one can get from the Log level of the lower half plane up to the L level of the lower half plane by going 360° counterclockwise around 0, first crossing the positive real axis (of the Log level) into the <b>shared</b> <b>copy</b> of the upper half plane and then crossing the negative real axis (of the L level) into the L level of the lower half plane.|$|E
50|$|As it was {{previously}} mentioned, dependencies or conflicts between different threads during execution stops parallelization, and these conflicts appear {{when we have}} read/write conflicting variables. One technique to remove this conflict is Privatization. As the name suggests, the basic principle involves making (Private) copies for each thread to operate on, rather than the <b>shared</b> <b>copy</b> that causes the conflict. Hence, changing the type of the variable from Read/Write conflicting to Read/Write Non conflicting.|$|E
50|$|In multi-programming or in a {{multi-user}} environment, {{many users}} may execute the same program, written {{so that its}} code and data are in separate pages. To minimize use of RAM, all users share a single copy of the program. Each process's page table is set up so that the pages that address code point to the single <b>shared</b> <b>copy,</b> while the pages that address data point to different physical pages for each process.|$|E
50|$|With {{the rise}} of the {{printing}} press and the relative ease of circulating and purchasing individual (rather than <b>shared)</b> <b>copies</b> of texts, the prevalence of socially shared annotations declined and text annotation became a more private activity consisting of a reader interacting with a text. Annotations made on <b>shared</b> <b>copies</b> of texts (such as library books) are sometimes seen as devaluing the text, or as an act of defacement. Thus, print technologies support the circulation of annotations primarily as formal scholarly commentary or textual footnotes or endnotes rather than marginal, handwritten comments made by private readers, though handwritten comments or annotations were common in collaborative writing or editing.|$|R
25|$|The Wall Street Journal {{reports that}} Facebook <b>shared</b> <b>copies</b> of ads and account {{information}} related to the Russian ad purchases on its platform with Robert Mueller that go beyond what it shared with Congress last week. Facebook's unusual compliance {{was in response to}} Search Warrants issued by Mueller's Federal Grand Jury.|$|R
50|$|The {{right to}} access {{information}} places two obligations on governments and public bodies. First, the duty to make public key information on the activities implemented by public bodies; second, the obligation to respond to people's requests of accessing documents, either by making available the original documents or by <b>sharing</b> <b>copies</b> of documents and information held.|$|R
5000|$|A {{reduction}} operator can help break down a task into various partial tasks by calculating partial results {{which can be}} used to obtain a final result. It allows certain serial operations to be performed in parallel, thereby reducing the number of steps required for certain operations. A {{reduction operator}} breaks a serial task into various partial tasks and stores the result into a private copy of the variable. These private copies are then merged into a <b>shared</b> <b>copy</b> at the end.|$|E
5000|$|The various {{branches}} of log z cannot be glued {{to give a}} single function [...] because two branches may give different values {{at a point where}} both are defined. Compare, for example, the principal branch Log(z) on [...] with imaginary part θ in (−π,π) and the branch L(z) on [...] whose imaginary part θ lies in (0,2π). These agree on the upper half plane, but not on the lower half plane. So it makes sense to glue the domains of these branches only along the copies of the upper half plane. The resulting glued domain is connected, but it has two copies of the lower half plane. Those two copies can be visualized as two levels of a parking garage, and one can get from the Log level of the lower half plane up to the L level of the lower half plane by going 360° counterclockwise around 0, first crossing the positive real axis (of the Log level) into the <b>shared</b> <b>copy</b> of the upper half plane and then crossing the negative real axis (of the L level) into the L level of the lower half plane.|$|E
40|$|Die opmeting van Pretoria, en kanonne vir militêre gebruik asook in privaat besit, word bespreek. Korrespondensie word vervolgens hanteer. The {{surveying}} of Pretoria, and cannons {{for military}} service {{as well as those}} in private use, are discussed. Correspondence is subsequently <b>shared.</b> <b>Copy</b> of an electronic newsletter sent by Rosa Swanepoel, July 2004, to an interest group on the history of Pretoria. It includes photos of cannons...|$|E
50|$|When a {{processor}} writes on a shared cache block, all the <b>shared</b> <b>copies</b> {{of the other}} caches are updated through bus snooping. This method broadcasts a write data to all caches throughout a bus. It incurs larger bus traffic than write-invalidate protocol. That is why this method is uncommon. Dragon and firefly protocols belong to this category.|$|R
5000|$|Sharer Node: One or many node {{which are}} <b>sharing</b> a <b>copy</b> of the cache block.|$|R
50|$|The {{music played}} was {{a blend of}} styles loosely defined as techno and various genres of 'computer music' (e.g., high energy disco without vocals, acid-house, electro, industrial-gothic, various styles of house and electronic/rock hybrids). It arrived on tape {{cassettes}} by fanatic traveller collectors and DJs and was <b>shared</b> (<b>copied)</b> tape-to-tape among Goa DJs, which was an underground scene not driven by labels or music industry.|$|R
40|$|The {{intent of}} this report is to provide useful {{information}} to municipal governments, private institutions and community coalitions who are formulating responses to the many problems caused by home parties involving underage drinking. Using this Publication This is public information and {{is meant to be}} <b>shared.</b> <b>Copy</b> and distribute this Policy Briefing as appropriate. For additional copies please visit www. venturacountylimits. org For more information, contact...|$|E
40|$|Die begrafnis van Pres. Paul Kruger op 16 Desember 1904 word {{in detail}} bespreek, en drie foto's word ingesluit. Terugvoer oor die watervoorsiening aan die forte word gegee. Pres. Paul Kruger's funeral on 16 December 1904 is {{discussed}} in detail, and three photos are included. Feedback on the water supply to the fortresses is <b>shared.</b> <b>Copy</b> of an electronic newsletter sent by Rosa Swanepoel, August 2003, to an interest group {{on the history of}} Pretoria. It includes three photos of the funeral of Pres. Paul Kruger...|$|E
40|$|Motivation: Existing {{methods for}} {{estimating}} copy number variations in array comparative genomic hybridization (aCGH) data {{are limited to}} estimations of the gain/loss of chromosome regions for single sample analysis. We propose the linear-median method for estimating <b>shared</b> <b>copy</b> numbers in DNA sequences across multiple samples, demonstrate its operating characteristics through simulations and applications to real cancer data, and compare it to two existing methods. Results: Our proposed linear-median method {{has the power to}} estimate common changes that appear at isolated single probe positions or very short regions. Such changes are hard to detect by current methods. This new method shows a higher rate of true positives and a lower rate of false positives. The linear-median method is non-parametric and hence is more robust in estimating copy number. Additionally the linear-median method is easily computable for practical aCGH data sets compared to other copy number estimation methods...|$|E
50|$|When a {{processor}} writes on a shared cache block, all the <b>shared</b> <b>copies</b> {{in the other}} caches are invalidated through bus snooping. This method ensures that only {{a copy of a}} data can be exclusively read and written by {{a processor}}. All the other copies in other caches are invalidated. This is the most commonly used snooping protocol. MSI, MESI, MOSI, MOESI, and MESIF protocols belong to this category.|$|R
50|$|Natural {{selection}} normally {{favors a}} gene if it increases reproduction, because the offspring <b>share</b> <b>copies</b> of that gene. However, a gene {{can also be}} favored if it aids other relatives, who also <b>share</b> <b>copies.</b> Therefore, by helping a close relative reproduce, an individual is still passing on its own genes to the next generation, albeit indirectly. Hamilton pointed out that kin selection could occur via two mechanisms: (a) kin discrimination, when cooperation is preferentially directed toward relatives, and (b) limited dispersal (population viscosity), which keeps relatives in spatial proximity to one another, allowing cooperation to be directed indiscriminately toward all neighbors (who tend to be relatives). In microbial systems, these two mechanisms are equally important. For example, most microbial populations often begin from {{a small number of}} colonizers. Because most microbes reproduce asexually, close genetic relatives will surround cells as the population grows. These clonal populations often result in an extremely high density, especially in terrestrial systems. Therefore, the probability that a cells altruistic behavior will benefit a close relative is extremely high.|$|R
40|$|In a {{multiprocessor}} system, process migration guarantees {{load balance}} between processors but causes passive sharing, since private data blocks {{of a process}} can become resident in multiple caches and generate useless coherence-related overhead. We proposed a selective invalidation strategy to eliminate these passive <b>shared</b> <b>copies.</b> The results of trace-driven simulation prove that our strategy can result successful {{in a number of}} situations such as the typical case of a general-purpose workstation. 1...|$|R
40|$|Execution {{performance}} of a parallel process in general-purpose NUMA systems is greatly affected by how resources are allocated to it through its lifetime. Concurrently running multiple parallel processes will exhaust physical memory. We propose two resource management mechanisms. One is a scheduling policy that reflects resource consumption states. A process is scheduled to clusters where it has physical pages. The other is a memory-replacement strategy based on page classification under distributed shared memory system. <b>Shared</b> <b>copy</b> pages of currently not running processes are first victimized. The performances of the two mechanisms are evaluated by a probabilistic simulation. It allows to simulate a variety of process sets and finite resources are manipulated with concrete management methods. The results show the superiority of our resource management mechanisms. O@ J 8 MW;] J,; 6 %a%b%j 4 D 6 -$GJBNs%W%m%;% 9 $N 8 zN(E*$J<B 9 T$rK 8 $ 2 $k$ 3 $H$J$/%^%k%A%f!<% 6 !?%^%k%A% 8 %g%V 4 D 6 - $r 9 =C[$ 9 $k$K$O!"%a% [...] ...|$|E
40|$|P 2 P {{networks}} are typically used for sharing content files containing audio, images, data etc. Our project is on similar lines. We {{have tried to}} establish a P 2 P network using sockets. A node [peer] acts as client {{as well as a}} server. A participating node has to be on the network. The participating node then exports the metadata of the shared files to all the peers on the network. The peers can now view the details of these files in order to choose a file that he wishes to access. Information like filesize, category, and path name are provided to the peer. Then the peer selects a particular file that can be viewed on import. Taking into consideration the tradeoff between bandwidth utilization and memory requirements we have designed our system {{in such a way that}} the user has the option to maintain or delete the <b>shared</b> <b>copy</b> of a particular viewed file. A history table, which logs all the information pertaining to the retrieved files, is also maintained. This table holds the name of the file owner, date on which the file was accessed, retrieval time and the path name...|$|E
40|$|Array-based {{comparative}} genomic hybridization (aCGH) is a high-resolution high-throughput {{technique for}} studying the genetic basis of cancer. The resulting data consists of log fluorescence ratios {{as a function of}} the genomic DNA location and provides a cytogenetic representation of the relative DNA copy number variation. Analysis of such data typically involves estimation of the underlying copy number state at each location and segmenting regions of DNA with similar copy number states. Most current methods proceed by modeling a single sample/array at a time, and thus fail to borrow strength across multiple samples to infer shared regions of copy number aberrations. We propose a hierarchical Bayesian random segmentation approach for modeling aCGH data that utilizes information across arrays from a common population to yield segments of <b>shared</b> <b>copy</b> number changes. These changes characterize the underlying population and allow us to compare different population aCGH profiles to assess which regions of the genome have differential alterations. Our method, referred to as BDSAcgh (Bayesian Detection of Shared Aberrations in aCGH), is based on a unified Bayesian hierarchical model that allows us to obtain probabilities of alteration states as well as probabilities of differential alteration that correspond t...|$|E
40|$|This paper {{presents}} a unification procedure which eliminates the redundant copying of structures {{by using a}} lay incremental copying approach to achieve structure <b>sharing.</b> <b>Copying</b> of structures accounts for {{a considerable amount of}} the total processing time. Several methods have been proposed to minimize the amount of necessaxy copying. Lazy Incremental Copying (LIC) is presented as a new solution to the copying problem. It synthesizes ideas of lazy copying with the notion of chronological dereferencing for achieving a high amount of structure sharing...|$|R
50|$|The Modified and Exclusive {{states are}} always precise: i.e. they match the true cache line {{ownership}} {{situation in the}} system. The Shared state may be imprecise: if another cache discards a Shared line, this cache may become the sole owner of that cache line, {{but it will not}} be promoted to Exclusive state. Other caches do not broadcast notices when they discard cache lines, and this cache could not use such notifications without maintaining a count of the number of <b>shared</b> <b>copies.</b>|$|R
50|$|On 5 June 2017, Microsoft {{announced}} {{its plans to}} revamps Skype to copy Snapchat, allowing users to <b>share</b> temporary <b>copies</b> of their photos and video files.|$|R
40|$|This paper {{analyzes}} La Nación's {{reporting of}} the assassination of Archduke Franz-Ferdinand in the week following the event. Analysis identifies the narrative components to these assassination stories, including geographical imaginaries and the places and networks of news production. Particular {{attention is paid to}} the mediatized ritual of mourning and succession that takes place in the capital cities with which La Nación's Buenos Aires readers are networked. Analysis is facilitated by some comparison with the coverage of the same event in The Los Angeles Times and The New Zealand Herald (Auckland). La Nación <b>shared</b> <b>copy</b> and sources with these and other newspapers, and printed similar stories about the assassination, but it cultivated its own local readership and its own ideas of citizenship in the wider world. Each editor imprinted his readers as moral citizens of the world, authorizing them to participate in the events as mourners, activists and compassionate observers, but also preconditioning the ways they can imagine assassination and the interactions of the diplomatic world. Analysis reveals expected roles in international affairs for citizens of world cities, which are conveyed as moral lessons and tales, wrapped in imagined communities stretching across the globe, but actualized locally. ' (author's abstract...|$|E
40|$|Since 2014, World Food Programme (WFP), CGIAR Research Program Climate Change Agriculture and Food Security (CCAFS), Tanzania Meteorological Agency (TMA) and University of Reading (UoR) {{have been}} hosting trainings of {{extension}} workers—or, intermediaries—and sharing climate information services. An intensive five-day training on Participatory Integrated Climate Services for Agriculture (PICSA) approach was held September 7 - 11, 2015 in Dodoma, Tanzania to equip Dodoma district intermediaries {{with the capacity}} to provide farmers with locally relevant climate, crop and livelihood information. About 42 intermediaries from the Prime Minsters’ Regional Administrative Office, local government, and Tanzania Red Cross Society were trained {{on a number of}} areas from PICSA field manual and other topics, such as integrating participatory decision-making tools under different weather conditions and seasonal and short-term climate forecast. Through the training, all intermediaries were able to make interpretation and opt for best option based on local seasonal forecast. For effective implementation of PICSA Process at local levels, training participants formulated work plans and <b>shared</b> <b>copy</b> with facilitators and district supervisors for close follow-up. All trained intermediaries also received a special assessment form to distribute to farmers to complete {{at the end of the}} season. A one-day farmer training workshop immediately followed, offering the freshly trained intermediaries an opportunity to learn by doing...|$|E
40|$|Memory deduplication, a {{well-known}} technique {{to reduce the}} memory footprint across virtual machines, is now also a default-on feature inside the Windows 8. 1 and Windows 10 operating systems. Deduplication maps multiple identical copies of a physical page onto a single <b>shared</b> <b>copy</b> with copy-on-write semantics. As a result, a write to such a shared page triggers a page fault and is thus measurably slower than a write to a normal page. Prior work has shown that an attacker able to craft pages on the target system can use this timing difference as a simple single-bit side channel to discover that certain pages exist in the system. In this paper, we demonstrate that the deduplication side channel is much more powerful than previously assumed, potentially providing an attacker with a weird machine to read arbitrary data in the system. We first show that an attacker controlling the alignment and reuse of data in memory is able to perform byte-by-byte disclosure of sensitive data (such as randomized 64 bit pointers). Next, even without control over data alignment or reuse, we show that an attacker can still disclose high-entropy randomized pointers using a birthday attack. To show these primitives are practical, we present an end-to-end JavaScript-based attack against the new Microsoft Edge browser, in absence of software bugs and with all defenses turned on. Our attack combines our deduplication-based primitives with a reliable Rowhammer exploit to gain arbitrary memory read and write access in the browser. We conclude by extending our JavaScript-based attack to cross-process system-wide exploitation (using the popular nginx web server as an example) and discussing mitigation strategies...|$|E
40|$|In many cooperatively {{breeding}} birdsand mammals, individuals help con-specifics {{to produce}} offspring {{rather than have}} young themselves. An individual can increase its genetic representation in future generations by helping close rela-tives who <b>share</b> <b>copies</b> of its genes identi-cal by descent. The role of kin selection (the selection process that enhances the fitness of close relatives through increased survival and/or increased reproductive success) is regarded as highly important {{for the evolution of}} helper systems; helpers gain most via indirect fitness by providing aid to their closest genetic rela-tives 1. Therefore, the ability to recogniz...|$|R
5000|$|In the {{shareware}} model, {{users are}} encouraged to make and <b>share</b> <b>copies</b> of a software product, which helps distribute it. Payment may be left entirely up to the goodwill of the customer (donationware), or be optional with an occasional reminder (nagware), or the software may be designed to stop working after a trial period unless the user pays a license fee (trialware or demoware), or be crippled so that key features don't work. Or {{it may be a}} free feature-limited [...] "lite" [...] version (freemium), with a more advanced version available for a fee.|$|R
40|$|Step 2 : Choice of licence (see {{the back}} of this form for more information) Please tick this box if you wish, or are {{required}} to have your article published under the Creative Commons Attribution-NonCommercial-Share Alike 3. 0 Unported License. This means that you and others are free to <b>share</b> (<b>copy,</b> distribute and transmit the contribution) and to Remix (adapt the contribution) under the following conditions: 1. You and others must attribute the contribution in the manner specified on {{the back of}} this form 2. You and others may not use the contribution for commercial purposes 3. If you alter, transform or build upon this contribution, you may distribute the resulting work only under the same or similar licence to this one Please tick this box if you wish to have your Article published under the Creative Commons Attribution- NonCommercial-No Derivative Works 3. 0 Unported License. This means that you and others are free to <b>share</b> (<b>copy,</b> distribute and transmit the contribution) under the following conditions: 1. You and others must attribute the contribution in the manner specified on {{the back of this}} form 2. You and others may not use the contribution for commercial purposes 3. You may not alter, transform or build upon this contribution For any reuse or distribution, you must make it clear to others the license terms of this contribution...|$|R
40|$|Abstract—High {{availability}} systems typically rely on redundant {{components and}} functionality to achieve fault detection, isolation and fail over. In the future, increases {{in error rates}} will make high availability important even in the commodity and volume market. Systems will be built out of chip multiprocessors (CMPs) with multiple identical components that can be configured to provide redundancy for high availability. However, the 100 % overhead of making all components redundant {{is going to be}} unacceptable for the commodity market, especially when all applications might not require high availability. In particular, duplicating the entire memory like the current high availability systems (e. g. NonStop and Stratus) do is particularly problematic given the fact that system costs are going to be dominated by the cost of memory. In this paper, we propose a novel technique called a duplication cache to reduce the overhead of memory duplication in CMPbased high availability systems. A duplication cache is a reserved area of main memory that holds copies of pages belonging to the current write working set (set of actively modified pages) of running processes. All other pages are marked as read-only and are kept only as a single, <b>shared</b> <b>copy.</b> The size of the duplication cache can be configured dynamically at runtime and allows system designers to trade off the cost of memory duplication with minor performance overhead. We extensively analyze the effectiveness of our duplication cache technique and show that for a range of benchmarks memory duplication can be reduced by 60 - 90 % with performance degradation ranging from 1 - 12 %. On average, a duplication cache can reduce memory duplication by 60 % for a performance overhead of 4 % and by 90 % for a performance overhead of 5 %. Keywords-component; high availability, memory duplication, duplication cache, low cost availability, selective replication...|$|E
40|$|The {{molecular}} genetic alterations {{underlying the}} development and diversity of salivary gland carcinomas are largely unknown. To characterize these events, comparative genomic hybridization analysis was performed, using a single-nucleotide polymorphism microarray platform, of 60 fresh-frozen specimens that represent the main salivary carcinoma types: mucoepidermoid carcinoma (MEC), adenoid cystic carcinoma (ACC), and salivary duct carcinoma (SDC). The results were correlated with the clinicopathologic features and translocation statuses to characterize the genetic alterations. The most commonly <b>shared</b> <b>copy</b> number abnormalities (CNAs) in all types were losses at chromosomes 6 q 23 - 26 and the 9 p 21 region. Subtype-specific CNAs included a loss at 12 q 11 - 12 in ACC and a gain at 17 q 11 - 12 in SDC. Focal copy number losses included 1 p 36. 33 -p 36 - 22 in ACC, 9 p 13. 2 in MEC, and 3 p 12. 3 -q 11 - 2, 6 q 21 - 22. 1, 12 q 14. 1, and 12 q 15 in SDC. Tumor-specific amplicons were identified at 11 q 23. 3 (PVRL 1) in ACC, 11 q 13. 3 (NUMA 1) in MEC, and 6 p 21. 1 (CCND 3), 9 p 13. 2 (PAX 5), 12 q 15 (CNOT 2 /RAB 3 IP), 12 q 21. 1 (GLIPR 1 L 1), and 17 q 12 (ERBB 2 /CCL 4) in SDC. A comparative CNA analysis of fusion-positive and fusion-negative ACCs and MECs revealed relatively lower CNAs in fusion-positive tumors than in fusion-negative tumors in both tumor types. An association between CNAs and high grade and advanced stage was observed in MECs only. These findings support the pathogenetic segregation of these entities and define novel chromosomal sites for future identification of biomarkers and therapeutic targets...|$|E
40|$|As {{the virtual}} world grows more complex, finding a {{standard}} way for storing data becomes increasingly important. Ideally, each data item would {{be brought into the}} computer system only once. References for data items need to be cryptographically verifiable, so the data can maintain its identity while being passed around. This way there will be only one copy of the users family photo album, while the user can use multiple tools to show or manipulate the album. Copies of users data could be stored on some of his family members computer, some of his computers, but also at some online services which he uses. When all actors operate over one replicated copy of the data, the system automatically avoids a single point of failure. Thus the data will not disappear with one computer breaking, or one service provider going out of business. One <b>shared</b> <b>copy</b> also makes it possible to delete a piece of data from all systems at once, on users request. In our research we tried to find a model that would make data manageable to users, and make it possible to have the same data stored at various locations. We studied three systems, Persona, Freenet, and GNUnet, that suggest different models for protecting user data. The main application areas of the systems studied include securing online social networks, providing anonymous web, and preventing censorship in file-sharing. Each of the systems studied store user data on machines belonging to third parties. The systems differ in measures they take to protect their users from data loss, forged information, censorship, and being monitored. All of the systems use cryptography to secure names used for the content, and to protect the data from outsiders. Based on the gained knowledge, we built a prototype platform called Peerscape, which stores user data in a synchronized, protected database. Data items themselves are protected with cryptography against forgery, but not encrypted as the focus has been disseminating the data directly among family and friends instead of letting third parties store the information. We turned the synchronizing database into peer-to-peer web by revealing its contents through an integrated http server. The REST-like http API supports development of applications in javascript. To evaluate the platform s suitability for application development we wrote some simple applications, including a public chat room, bittorrent site, and a flower growing game. During our early tests we {{came to the conclusion that}} using the platform for simple applications works well. As web standards develop further, writing applications for the platform should become easier. Any system this complex will have its problems, and we are not expecting our platform to replace the existing web, but are fairly impressed with the results and consider our work important from the perspective of managing user data...|$|E
40|$|Color Me Safe is a {{coloring}} book {{designed for}} children ages four to seven. Throughout the book, the Safe Family takes simple steps to prevent injuries, such as installing smoke alarms and using child safety seats. Children can have fun coloring the pictures and reading about the Safe Family. Color Me Safe can help parents talk with their children about safety at home and on the go! Teachers can integrate the story and messages into Pre-K and early grade school curricula and <b>share</b> <b>copies</b> with parents and children at health and safety events. CS 214978 -ACDC-INFO Pub ID 220831 [...] 220831 -...|$|R
40|$|The {{original}} publication {{is available}} on LINK at [URL] This work, including photographs and other illustrations, unless the contrary is indicated, is subject to an Attributions–Non-Commercial–ShareAlike 3. 0 Creative Commons License, {{the full text of}} which can be consulted at [URL] You are free to <b>share,</b> <b>copy,</b> distribute and transmit the work provided that the author is credited and reuse of the material is restricted to non-commercial purposes only and that if you alter, transform, or build upon this work, you may distribute the resulting work only under the same or similar license to this on...|$|R
50|$|Owned: This cache is one {{of several}} with a valid copy of the cache line, but has the {{exclusive}} right to make changes to it. It must broadcast those changes to all other caches sharing the line. The introduction of owned state allows dirty sharing of data, i.e., a modified cache block can be moved around various caches without updating main memory. The cache line may be changed to the Modified state after invalidating all <b>shared</b> <b>copies,</b> or changed to the Shared state by writing the modifications back to main memory. Owned cache lines must respond to a snoop request with data.|$|R
