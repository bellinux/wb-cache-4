332|221|Public
25|$|Many web browsers {{can apply}} an XSLT <b>stylesheet</b> to XML data that {{transforms}} the data into an XHTML document, thereby providing template functionality in the browser itself.|$|E
25|$|Version 23, {{released}} in August 2013, followed {{the lead of}} its competitors by blocking iframe, <b>stylesheet,</b> and script resources served from non-HTTPS servers embedded on HTTPS pages by default. Additionally, JavaScript could also no longer be disabled through Firefox's preferences, and JavaScript was automatically re-enabled for users who upgraded to 23 or higher with it disabled. The change was made due to its use across the majority of websites, the potential repercussions on non-experienced users who are unaware of its impact, along with the availability of extensions such as NoScript, which can disable JavaScript in a more controlled fashion. The following release added the ability to disable JavaScript through the developer tools for testing purposes.|$|E
2500|$|XSL (Extensible <b>Stylesheet</b> Language) is {{a family}} of {{languages}} used to transform and render XML documents, split into three parts: ...|$|E
5000|$|Apply XSLT <b>stylesheets</b> to XML {{documents}} (including EXSLT support, {{and passing}} parameters to <b>stylesheets)</b> ...|$|R
50|$|The DocBook XSL <b>stylesheets</b> are {{a set of}} XSLT <b>stylesheets</b> for the XML-based DocBook language.|$|R
5000|$|The EpiDoc Example <b>Stylesheets</b> (XSLT), {{available}} from the SourceForge file repository. These <b>stylesheets</b> are also used to deliver the online Guidelines.|$|R
2500|$|After 3 June 2004, administrators could {{edit the}} style of the {{interface}} by changing the CSS in the monobook <b>stylesheet</b> at [...]|$|E
50|$|In computing, the {{two primary}} <b>stylesheet</b> {{languages}} are Cascading Style Sheets (CSS) and the Extensible <b>Stylesheet</b> Language (XSL). While {{they are both}} called <b>stylesheet</b> languages, they have very different purposes and ways of going about their tasks.|$|E
50|$|Recently the DSTC website, {{which was}} officially hosting the xs3p <b>stylesheet,</b> has become unavailable. A {{download}} of the xs3p <b>stylesheet</b> {{is available from}} the FiForms XML Definitions project.|$|E
40|$|This {{presentation}} presents MultiGuise, a Web application {{which allows}} any of several XML documents to be displayed using any of several <b>stylesheets.</b> Both {{the documents and}} the <b>stylesheets</b> are bookmarked in Connotea, from where MultiGuise retrieves them using a special tag. This approach means that anyone can add documents and <b>stylesheets,</b> simply by bookmarking them in Connotea. |$|R
40|$|It is {{sometimes}} necessary to convert mathematical documents {{into a number}} of dierent forms. This may be achieved by applying XSLT <b>stylesheets</b> (speci c to the form required) to the document. We describe how meta <b>stylesheets</b> may be used to automatically generate the <b>stylesheets</b> which will be applied to the mathematical documents to generate the multiple forms required. The resources required by the meta <b>stylesheets</b> are extended OpenMath Content Dictionaries. We discuss how the presentational information may be stored in the Content Dictionaries for various dierent notational styles...|$|R
5000|$|... base colorsallow you {{to create}} colours {{to which you}} can attach <b>stylesheets</b> (just like you can attach <b>stylesheets</b> to pages). You can also set a display order for all your <b>stylesheets</b> {{so that they can}} {{override}} styles. Together, the changes mean you can add a theme with as many custom colours as you want. Using the parent/child theme structure that already exists in 1.x you can restrict or allow certain usergroups to use these colours and, as they inherit the main <b>stylesheets,</b> they’re very easy to manage. So, there is no longer the need to install a dozen different themes just for a different colour header. Tom Moore, MyBB lead developer ...|$|R
5000|$|Though it does handle {{processing}} instructions, {{it has no}} {{facilities for}} handling XSLT <b>stylesheet</b> declarations. That is, it does not apply an XSLT declared in a <b>stylesheet</b> processing instruction to the XML file when parsing it.|$|E
50|$|A User {{interface}} <b>stylesheet</b> {{language is}} a <b>stylesheet</b> language which {{is meant to be}} applied to graphical computer user interfaces. They primarily act as subsidiary languages to style UI elements which are either programmed or marked-up (as in XML-based markup languages).|$|E
5000|$|Extensible <b>Stylesheet</b> Language Transformations (XSLT): application/xslt+xml ...|$|E
5000|$|DocBook {{files are}} used to prepare output files {{in a wide variety}} of formats. Nearly always, this is {{accomplished}} using DocBook XSL <b>stylesheets.</b> These are XSLT <b>stylesheets</b> that transform DocBook documents into a number of formats (HTML, XSL-FO for later conversion into PDF, etc.). These <b>stylesheets</b> can be sophisticated enough to generate tables of contents, glossaries, and indexes. They can oversee the selection of particular designated portions of a master document to produce different versions of the same document (such as a [...] "tutorial" [...] or a [...] "quick-reference guide", where each of these consist of a subset of the material). Users can write their own customized <b>stylesheets</b> or even a full-fledged program to process the DocBook into an appropriate output format as their needs dictate.|$|R
5000|$|Creation of presentations (XML/XSLT {{converter}} including <b>stylesheets)</b> ...|$|R
5000|$|Performing content post-processing, such as {{applying}} XSLT <b>stylesheets</b> ...|$|R
5000|$|... #Subtitle level 3: Example XSLT <b>stylesheet</b> using logic {{elements}} ...|$|E
5000|$|This XSLT <b>stylesheet</b> {{provides}} templates {{to transform}} the XML document: ...|$|E
5000|$|... methods on {{the factory}} class to create a Templates object, {{representing}} the compiled form of a <b>stylesheet.</b> This is a thread-safe object {{that can be used}} repeatedly, in series or in parallel, to apply the same <b>stylesheet</b> to multiple source documents (or to the same source document with different parameters) (TransformerFactory.newTemplates(javax.xml.transform.Source), also , [...] ) ...|$|E
5000|$|Recommendations for <b>stylesheets,</b> {{especially}} CSS, {{from the}} W3C.|$|R
5000|$|This {{technique}} is only necessary when using inline scripts and <b>stylesheets,</b> and is language-specific. CSS <b>stylesheets,</b> for example, only support the second style of commenting-out (/* .../), but CSS also has less {{need for the}} < and & characters than JavaScript and so less need for explicit CDATA markers.|$|R
50|$|The ways {{to apply}} <b>stylesheets</b> (CSS) to the document.|$|R
5000|$|... {{a method}} on the Templates object {{to create a}} Transformer, {{representing}} the executable form of a <b>stylesheet</b> (...) [...] This cannot be shared across threads, though it is serially reusable. The Transformer provides methods to set <b>stylesheet</b> parameters and serialization options (for example, whether output should be indented), and a method to actually run the transformation. (...) ...|$|E
5000|$|In {{order for}} a web browser to be able {{automatically}} to apply an XSL transformation to an XML document on display, an XML <b>stylesheet</b> processing instruction can be inserted into XML. So, for example, if the <b>stylesheet</b> in Example 2 above were available as [...] "example2.xsl", the following instruction could {{be added to the}} original incoming XML: ...|$|E
5000|$|StyleVision — {{multipurpose}} visual XSLT <b>stylesheet</b> design, multi-channel publishing, {{and report}} building tool ...|$|E
50|$|Foundation is modular and {{consists}} essentially of {{a series}} of Sass <b>stylesheets</b> that implement the various components of the toolkit. Component <b>stylesheets</b> can be included via Sass or by customizing the initial Foundation download. Developers can adapt the Foundation file itself, selecting the components they wish to use in their project.|$|R
5000|$|JATS Preview <b>Stylesheets</b> (canonical XSLT conversion), see {{classical}} (2013) conversor.|$|R
5000|$|Recommendations for <b>stylesheets,</b> {{especially}} Cascading Style Sheets (CSS), from W3C.|$|R
5000|$|Extensible <b>Stylesheet</b> Language - {{a family}} of {{languages}} of which XSLT is a member ...|$|E
5000|$|... #Caption: Diagram of {{the basic}} {{elements}} and process flow of Extensible <b>Stylesheet</b> Language Transformations.|$|E
50|$|Xalan: An XSLT <b>stylesheet</b> {{processor}} for Java and C++ which implements the XPath query language.|$|E
5000|$|... from JATS to PDF: some JATS Preview <b>Stylesheets,</b> XSLT + XSL-FO conversion.|$|R
5000|$|User <b>stylesheets</b> {{to change}} the style of webpages and Firefox's user interface.|$|R
50|$|Bootstrap is modular and {{consists}} {{of a series of}} Less <b>stylesheets</b> that implement the various components of the toolkit. These <b>stylesheets</b> are generally compiled into a bundle and included in web pages, but individual components can be included or removed. Bootstrap provides a number of configuration variables that control things such as color and padding of various components.|$|R
