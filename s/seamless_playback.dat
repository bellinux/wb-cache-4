12|9|Public
2500|$|Decoding, on {{the other}} hand, is {{carefully}} defined in the standard. Most decoders are [...] "bitstream compliant", {{which means that the}} decompressed output that they produce from a given MP3 file will be the same, within a specified degree of rounding tolerance, as the output specified mathematically in the ISO/IEC high standard document (ISO/IEC 11172-3). Therefore, comparison of decoders is usually based on how computationally efficient they are (i.e., how much memory or CPU time they use in the decoding process). Over time this concern has become less of an issue as CPU speeds transitioned from MHz to GHz. Encoder/decoder overall delay is not defined, which means there is no official provision for gapless playback. However, some encoders such as LAME can attach additional metadata that will allow players that can handle it to deliver <b>seamless</b> <b>playback.</b>|$|E
50|$|Sofdec is a {{streamed}} video format supporting up to 24bit color {{which includes}} multistreaming and <b>seamless</b> <b>playback</b> with a frame rate {{of up to}} 60 frames per second. It is essentially a repackaging of MPEG-1/MPEG-2 video with CRI's proprietary ADX codec for audio playback. It {{is now known as}} CRI Sofdec.|$|E
5000|$|The {{advantage}} {{of this is that}} <b>seamless</b> <b>playback</b> without any interruptions is almost guaranteed, even on slower, older machines, and even under heavy multi-tasking with demanding programs, which may read or write continuously to and from the drives of the computer, since the file resides entirely in RAM and can hence always be accessed by the program without delay.|$|E
50|$|Gescom {{wanted to}} make use of the {{seamless}} shuffle play unique to the MD format and created this sequence of 88 short tracks to be played in any order at random. Most CD players cannot do <b>seamless</b> random <b>playback</b> because there is always a slight delay between tracks. People listening to digital versions will get the full MD experience as most music players now have gapless playback even in shuffle mode.|$|R
50|$|Support for {{third-party}} {{audio cards}} was vendor-dependent, until {{the creation and}} adoption of AHI as a de facto standard. AHI offers improved functionality, such as <b>seamless</b> audio <b>playback</b> from a user-selected audio device, standardized functionality for audio recording and efficient software mixing routines for combining multiple sound channels, thus overcoming the four-channel hardware limit of the original Amiga chipset. AHI can be installed separately on AmigaOS v2.0 and later.|$|R
50|$|AHI offers {{improved}} functionality {{not available}} through the AmigaOS audio device driver, such as <b>seamless</b> audio <b>playback</b> from a user selected audio device (in applications which supported AHI), standardized functionality for audio recording and efficient software mixing routines for combining multiple sound channels thus overcoming the four channel hardware limit of the original Amiga chipset. It also incorporated a unique mode that produced 14-bit playback using the Amiga chipset by combining two 8-bit channels set at different volumes. The first official release of AHI was in 1996. AHI became a widely supported standard for audio hardware and audio software on Amiga systems and was officially included in later operating system releases.|$|R
5000|$|Decoding, on {{the other}} hand, is {{carefully}} defined in the standard. Most decoders are [...] "bitstream compliant", {{which means that the}} decompressed output that they produce from a given MP3 file will be the same, within a specified degree of rounding tolerance, as the output specified mathematically in the ISO/IEC high standard document (ISO/IEC 11172-3). Therefore, comparison of decoders is usually based on how computationally efficient they are (i.e., how much memory or CPU time they use in the decoding process). Over time this concern has become less of an issue as CPU speeds transitioned from MHz to GHz. Encoder/decoder overall delay is not defined, which means there is no official provision for gapless playback. However, some encoders such as LAME can attach additional metadata that will allow players that can handle it to deliver <b>seamless</b> <b>playback.</b>|$|E
5000|$|Recording {{was done}} using a cutting lathe and acetate discs. Programs were {{normally}} recorded at 33 rpm on 16 inch discs, the standard format used for such [...] "electrical transcriptions" [...] {{from the early}} 1930s through the 1950s. Sometimes, the groove was cut starting at {{the inside of the}} disc and running to the outside. This was useful when the program to be recorded was longer than 15 minutes so required more than one disc side. By recording the first side outside in, the second inside out, and so on, the sound quality at the disc change-over points would match and result in a more <b>seamless</b> <b>playback.</b> An inside start also had the advantage that the thread of material cut from the disc's surface, which had to be kept out of the path of the cutting stylus, was naturally thrown {{toward the center of the}} disc so was automatically out of the way. When cutting an outside start disc, a brush could be used to keep it out of the way by sweeping it toward the middle of the disc. Well-equipped recording lathes used the vacuum from a water aspirator to pick it up as it was cut and deposit it in a water-filled bottle. In addition to convenience, this served a safety purpose, as the cellulose nitrate thread was highly flammable and a loose accumulation of it combusted violently if ignited.|$|E
40|$|Traditionally, videos {{are played}} in a linear manner, which does not give the viewer many options to control their viewing experience. However, in {{contrast}} to regular video this paper presents the design and implementation of a proof-of-concept solution that supports interactive video streaming. The idea with interactive video streaming is that the viewer can personalize their experience by deciding which path a story should follow at certain branch points. The challenge {{is to give the}} user this experience while simultaneously keeping the <b>seamless</b> <b>playback</b> experience they usually have when streaming video in a traditional way. By doing careful prefetching of the alternative videos in conjunction with utilizing the concept of HTTP-based adaptive streaming, <b>seamless</b> <b>playback</b> of interactive branched video can be implemented with the  dynamic adaptive streaming over a HTTP (DASH) framework. We compare our proof-of-concept implementation with a previous implementation from a different framework. The two players are tested against each other in a handful test aimed at exploring some of the aspects specific to interactive video. More specifically, we investigate the likelihood of experience "stalls", events that cause <b>seamless</b> <b>playback</b> to be interrupted, when changing the network conditions as well as when we change the nature of the so called "branch events" themselves. We find that there are distinguishable differences between the two implementations, specifically that DASH implementation has a more optimistic adaptation logic causing it to have more stalls and a higher playback rate in general. ...|$|E
40|$|The {{emergence}} of mobile devices in multimedia home entertainment demands new application scenarios like ubiquitous multimedia access. However today’s home entertainment appliances are usually {{based on a}} closed hardware and software design and do not provide the extensibility and flexibility needed. In this paper, we present a middleware that allows to control and connect distributed and mobile multimedia devices with different underlying technology. Based on this middleware we demonstrate an extensible application framework for a multimedia home entertainment center. This framework provides session hand off for <b>seamless</b> multimedia <b>playback</b> in heterogeneous environments where users with mobile devices can transparently exploit the capabilities of nearby stationary systems...|$|R
40|$|In {{standard}} Mobile IPv 6 networks multi-media streaming {{suffer from}} packet disruptions and packet loss resulting from high handover latency {{as well as}} available bandwidth fluctuation. To decrease high handover latency, Fast Handover for MIPv 6 can be adopted where the client stores quickly sufficient amount of stream in advance. However, under the both conventional protocols which based host mobility, handover latency may take up to several seconds, {{it is extremely difficult}} to maintain <b>seamless</b> media <b>playback.</b> For network-based mobility management, the Internet Engineering Task Force (IETF) is standardizing Proxy Mobile IPv 6 (PMIPv 6). In this paper, we propose an optimal fast handover scheme using Optimal Proxy Binding Update and Snoop mechanism in network based proxy Mobile IPv 6 networks, and we then evaluate it against IETF’s convention protocols in terms of deployment, proceeding latency. Key words...|$|R
5000|$|As with offline media {{stored on}} local HDDs or other media or devices, AIMP is {{also able to}} cache up to 60 seconds of {{internet}} radio streams into RAM, which ensures <b>seamless</b> internet radio <b>playback</b> even when the internet connection is slowing down suddenly due to other downloads running {{at the same time}} or if sudden heavy use by neighbours or flatmates occurs while you are listening to the web radio. One drawback of this function is that channel switching is slowed down as the buffer is first filled up to at least 25% before the playback starts (i.e. with 60 seconds of cache selected, the music will take up to 15 seconds to start playing).|$|R
40|$|Interactive {{branched}} {{video that}} {{allows users to}} select their own paths through the video, provides creative content designers with great personalization opportunities; however, such video also introduces significant new challenges for the system developer. For example, without careful prefetching and buffer management, {{the use of multiple}} alternative playback paths can easily result in playback interruptions. In this paper, we present a full implementation of an interactive branched video player using HTTP-based Adaptive Streaming (HAS) that provides <b>seamless</b> <b>playback</b> even when the users defer their branch path choices to the last possible moment. Our design includes optimized prefetching policies that we derive under a simple optimization framework, effective buffer management of prefetched data, and the use of parallel TCP connections to achieve efficient buffer workahead. Through performance evaluation under a wide range of scenarios, we show that our optimized policies can effectively prefetch data of carefully selected qualities along multiple alternative paths such as to ensure <b>seamless</b> <b>playback,</b> offering users a pleasant viewing experience without playback interruptions...|$|E
40|$|In {{this paper}} we {{introduce}} {{the design and}} implementation of <b>seamless</b> <b>playback</b> for video/audio in the Ambulant Player. The Ambulant Open SMIL Player is an open-source media player that supports SMIL 3. 0. A typical SMIL multimedia presentation consists {{of a set of}} declarative references to video/audio clips, which are relative to each other in terms of temporal and spatial relationships. Unfortunately, the declarative nature of SMIL often imposes performance delays, as individual items are fetched and presented. In this paper, we discuss the design and implemention of a caching and prefetching scheme that avoids service interruption and eliminate switch delay among these clips. A collection of videos is thereby rendered as if they were continuously rendered from one media container on one media source. Experiments are carried out to validate that our techniques can significantly lower the start delay of media rendering and therefore realize the <b>seamless</b> <b>playback</b> of SMIL multimedia presentations. © 2006 IEEE...|$|E
40|$|Video {{streaming}} {{over the}} Internet has gained tremendous popularity over {{recent years and}} currently constitutes the majority of Internet traffic. The on-demand delivery of high quality video streaming has been enabled {{by a combination of}} consistent improvements in residential download speeds, HTTP-based Adaptive Streaming (HAS), extensive content caching, and the use of Content Distribution Networks (CDNs). However, as large-scale on-demand streaming is gaining popularity, several important questions and challenges remain unanswered, including determining how the infrastructure can best be leveraged to provide users with the best possible playback experience. In addition, it is important to develop new techniques and protocols that facilitate the next generation of streaming applications. Innovative services such as interactive branched streaming are gaining popularity and are expected to be the next big thing in on-demand entertainment. The major contributions of this thesis are in the area of efficient content delivery of video streams using HAS. To address the two challenges above, the work utilizes a combination of different methods and tools, ranging from real-world measurements, characterization of system performance, proof-of-concept implementations, protocol optimization, and evaluation under realistic environments. First, through careful experiments, we evaluate the performance impact and interaction of HAS clients with proxy caches. Having studied the typical interactions between HAS clients and caches, we then design and evaluate content-aware policies to be used by the proxy caches, which parse the client requests and prefetch the chunks that {{are most likely to be}} requested next. In addition, we also design cooperative policies in which clients and proxies share information about the playback session. Our evaluations reveal that, in general, the bottleneck location and network conditions play central roles in which policy choices are most advantageous, and the location of the bottlenecks significantly impact the relative performance differences between policy classes. We also show that careful design and policy selection is important when trying to enhance HAS performance using proxy assistance. Second, this thesis proposes, models, designs, and evaluates novel streaming applications such as interactive branched videos. In such videos, users can influence the content that is being shown to them. We design and evaluate careful prefetching policies that provides <b>seamless</b> <b>playback</b> even when the users defer their path choices to the last possible moment. We derive optimized prefetching policies using an optimization framework, design and implement effective buffer management techniques for <b>seamless</b> <b>playback</b> at branch points, and use parallel TCP connections to achieve efficient buffer workahead. Through performance evaluations, we show that our policies can effectively prefetch data of carefully adapted qualities along multiple alternative paths so to ensure <b>seamless</b> <b>playback,</b> offering users a pleasant viewing experience without playback interruptions. The series title Linköping Studies in Science and Technology Licentiate Thesis is incorrect. The correct series title is Linköping Studies in Science and Technology Thesis. </p...|$|E
40|$|This paper {{presents}} the design, implementation, and validation {{of a novel}} system that supports streaming and playout of personalized, multi-path, nonlinear video. In contrast to regular video, in which the file content is played sequentially, our design allows multiple nonlinear video sequences of the underlying (linear) video to be stitched together and played in any personalized order, and clients can be provided multiple path choices. The design combines the ideas of HTTP-based adaptive streaming (HAS) and multi-path nonlinear video. Personalization of the content is achieved {{with the use of}} a customized metafile, which is downloaded separately from the underlying media and the manifest file that defines the HAS structure. An extension to the user interface allows path choices to be presented to and made by the user. Novel buffer management and prefetching policies are used to ensure <b>seamless</b> uninterrupted <b>playback</b> regardless of client path choices, even under scenarios in which clients defer their choices until the last possible moment. Our solution allows creative home users to easily create their own multi-path nonlinear video, opening the door to an endless possibility of new opportunities and media forms. Categories andSubjectDescriptor...|$|R
40|$|Part 4 : Network Applications and ToolsInternational audienceWe {{developed}} a collaborative video download application, which allows several users {{to form a}} local group via peer-to-peer (P 2 P) links and collaboratively help one user in the group to download a high quality video. Cellular interface and P 2 P interface are simultaneously utilised in the application to guarantee quality of experience (QoE) when the cellular connection is disrupted. The application is based on Wi-Fi Direct technology and it exploits the service discovery function of the Wi-Fi Direct framework. Apart from the implementation itself, we also model collaborative video streaming over the cellular network under periodic cellular disconnections (e. g., the commuters experience poor Internet services when trains travel through tunnels). Our purpose is to exploit the gains of the collaborative download between users {{in the context of}} periodic disconnections and limited cellular downlink rate. We simulate several scenarios to find the requirements of the application that guarantee <b>seamless</b> and undisrupted <b>playback...</b>|$|R
40|$|Advancements in {{broadband}} wireless networks and video compression tech- nologies {{have led to}} a tremendous increase in the demand for wireless multimedia services over recent years. Popular wireless transmission techniques enabling en- hanced throughput include orthogonal frequency division multiplexing (OFDM) while the recent video coding standard, namely the H. 264 / AYC, enables up to twice the compression efficiency to be attained relative to previous video com- pression techniques. Regardless of these developments, the highly dynamic and unpredictable nature of wireless channels, along with the requirements for main- taining the quality of service (Q 08) and <b>seamless</b> video <b>playback</b> for all users, impose severe constraints on the design of wireless multimedia systems. A video coding technique that has been developed for such environments is the scalable video coding (8 YC), which allows parts of the encoded bitstream to be discarded in response to a drop in the channel quality. However, state-of-the-art resource allocation techniques for SYC transmission over the wireless medium suffer from high computational complexity. Low-complexity, sub-optimal alternatives, on the other hand, are not always adequate. Given the sparse nature of spectrum resources, and the paradigm shift in spectrum access with the advent of cognitive radio systems, it is evident that sub-optimal algorithms having large optimality gaps are not desired. In fact, such approaches would be in contradiction to the definition of spectrum efficient, cognitive radio systems. In this thesis, resource allocation schemes for the transmission of H. 264 SYC over wireless networks are investigated. In particular, OFDM systems are consid- ered, including OFDM-based cognitive radio networks. Cross-layer optimisation techniques for fine grain scalable (FGS) video sequences are analysed. Although the problem is initially non-convex and has non-polynomial-time (NP) complex- ity, low complexity techniques are derived that lead to solutions very close to the optimal. Resource allocation schemes for coarse grain scalable (CGS) and medium grain scalable (MGS) sequences over OFDM-based cognitive systems are also investigated. As opposed to FGS, CGS/MGS do not allow an encoded bitstream to be truncated at random bit location. Consequently, new methods are derived that focus on this particular type of video coding. The presence of multiple antennas at the cognitive transmitter and their effect on the aggregate visual quality of all secondary users are also discussed. Furthermore, a joint call admission control (CAC) and resource allocation for the transmission of CGS and MGS video sequences over orthogonal frequency division multiple access (OFDMA) are analysed. This scheme considers the sce- narios where the available channel resources are not enough to support the video data of all users. Finally, rate-adaptation techniques for scalable video transmission over wire- less networks are presented. Rate-adaptation refers to the methods by which the encoding parameters of the video coding are adapted in response to the chan- nel conditions. Interestingly, it is shown that under a given channel condition, increasing the granularity of a scalable sequence lead to diminishing returns in terms of the rate achieved. Moreover, the transmission of scalable sequences over cognitive radio networks where perfect channel knowledge is not available is investigated. The effect of the granularity of the bitstream on the interference observed by incumbent users is also presented. It is shown that the probability of exceeding the interference threshold can be significantly reduced by proper specification of the video encoding parameters. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|R
40|$|Abstract. Streaming media {{applications}} {{under the}} mobile IP networks suffer from playback disruptions resulting from handoff blackout period {{as well as}} fluctuation in the available bandwidth. To overcome possible shortage of buffer, pre-buffering techniques can be adopted where the client stores sufficient part of the stream in advance. However, under the mobile IP handoff situation that may take up to several seconds, {{it is extremely difficult}} to sustain <b>seamless</b> <b>playback.</b> Inaccurate and conservative choice on the required buffering margin can waste limited latency budget, resulting in overall quality degradation. Thus, in this paper, we introduce a scheme that helps estimate the required pre-buffering size more accurately by considering both handoff duration and transient packet losses. Experiments and network simulation results show that the proposed scheme can provide an appropriate guidelines on buffer parameters and thus facilitate seamless streaming over the mobile IP network. ...|$|E
40|$|This paper {{considers}} {{the problem of}} providing users playing one streaming video the option of instantaneous and <b>seamless</b> <b>playback</b> of alternative videos. Recommendation systems can easily provide a list of alternative videos, {{but there is little}} research on how to best eliminate the startup time for these alternative videos. The problem is motivated by services that want to retain increasingly impatient users, who frequently watch the beginning of multiple videos, before viewing a video to the end. We present the design, implementation, and evaluation of an HTTP-based Adaptive Streaming (HAS) solution that provides careful prefetching and buffer management. We also present the design and evaluation of three fundamental policy classes that provide different tradeoffs between how aggressively new alternative videos are prefetched versus the importance of ensuring high playback quality. We show that our solution allows us to reduce the startup times of alternative videos by an order of magnitude and effectively adapt the quality such as to ensure the highest possible playback quality of the video being viewed. By improving the channel utilization we also address the discrimination problem that HAS clients often suffer from, allowing us to in some cases simultaneously improve the playback quality of the video being viewed and provide the value-added service of allowing instantaneous playback of the prefetched alternative videos...|$|E
40|$|In {{contrast}} to traditional video, multi-view video streaming allows viewers to interactively switch among multiple perspectives provided by different cameras. One approach to achieve such a service is to encode the video {{from all of}} the cameras into a single stream, but this has the disadvantage that only a portion of the received video data will be used, namely that required for the selected view at each point in time. In this paper, we introduce the concept of a multi-video stream bundle that consists of multiple parallel video streams that are synchronized in time, each providing the video from a different camera capturing the same event or movie. For delivery we leverage the adaptive features and time-based chunking of HTTP-based adaptive streaming, but now employing adaptation in both content and rate. Users are able to change their viewpoint on-demand and the client player adapts the rate at which data are retrieved from each stream based on the users current view, the probabilities of switching to other views, and the users current bandwidth conditions. A crucial component of such a system is the prefetching policy. For this we present an optimization model as well as a simpler heuristic that can balance the playback quality and the probability of playback interruptions. After analytically and numerically characterizing the optimal solution, we present a prototype implementation and sample results. Our prefetching and buffer management solution is shown to provide close to <b>seamless</b> <b>playback</b> switching when there is sufficient bandwidth to prefetch the parallel streams. Funding Agencies|Swedish Research Council (VR); Center for Industrial Information Technology (CENIIT); Natural Sciences and Engineering Research Council of Canada</p...|$|E

