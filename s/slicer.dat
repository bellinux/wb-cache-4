772|10000|Public
5|$|While a {{high school}} student working {{part-time}} at an Arby's restaurant, Emanuel severely cut his right middle finger on a meat <b>slicer,</b> which was later infected from swimming in Lake Michigan. His finger was partially amputated due to the severity of the infection.|$|E
25|$|Sliced {{bread is}} {{a loaf of}} bread which has been pre-sliced and {{packaged}} for commercial convenience. The automatic commercial bread <b>slicer</b> was invented in 1927 by Otto Frederick Rohwedder. His machine both sliced and wrapped {{a loaf of bread}}. In 1928, the bread <b>slicer</b> was improved by Gustav Papendick, a baker from St. Louis, Missouri.|$|E
25|$|Curly fries – {{characterized}} by their spring-like shape, cut from whole potatoes using a specialized spiral <b>slicer.</b>|$|E
40|$|Many {{approaches}} to <b>slicing</b> rely upon the `fact' {{that the union}} of two static <b>slices</b> is a valid <b>slice.</b> It is known that static <b>slices</b> constructed using program dependence graph algorithms are valid <b>slices</b> [19]. However, {{this is not true}} for other forms of <b>slicing.</b> For example, it has been established that the union of two dynamic <b>slices</b> is not necessarily a valid dynamic <b>slice</b> [8]. In this paper this result is extended to show that the union of two static <b>slices</b> is not necessarily a valid <b>slice,</b> based on Weiser's definition of a (static) <b>slice.</b> We also analyse the properties that make the union of different forms of <b>slices</b> a valid <b>slice...</b>|$|R
50|$|This type of {{algorithm}} is included as tool in baseline profile the H.264/MPEG-4 AVC encoder with I <b>Slices,</b> P <b>Slices,</b> Context Adaptative Variable Length Coding (CAVLC), grouping of <b>slices</b> (<b>Slice</b> Group), arbitrary <b>slice</b> order (ASO) and Redundancy <b>slices.</b>|$|R
30|$|All these {{functionalities}} {{are assigned}} to links of <b>slices.</b> The <b>slice</b> switch and the <b>slice</b> gateway transport data from a source link to a target link (the relationship is 1 to 1). The <b>slice</b> multiplexer and demultiplexer works on multiple links on one side (the Nto 1 or 1 toN relationship). It is not assumed here that source or target link(s) are from a single <b>slice</b> (the <b>slice</b> chaining concept is allowed described in [72], based on [73]). The <b>slice’s</b> switch can combine two <b>slice’s</b> links from the same layer in the common protocol stack. The <b>slice</b> gateway is slices’ switch that can combine two <b>slice’s</b> links from different layers or of different protocol stacks (or both). The <b>slice</b> multiplexer can merge multiple <b>slices</b> into a single <b>slice,</b> which could be later split up by a <b>slice</b> demultiplexer.|$|R
25|$|In postwar Aberdeen (1964) a {{large-scale}} (>400 cases) outbreak of typhoid occurred, caused by contaminated corned beef {{which had been}} imported from Argentina. The corned beef was placed in cans and because the cooling plant had failed, cold river water from the Plate estuary was used to cool the cans. One of the cans had a defect and the meat inside was contaminated. This meat was then sliced using a meat <b>slicer</b> in a shop in Aberdeen, {{and a lack of}} cleaning the machinery led to spreading the contamination to other meats cut in the <b>slicer.</b> These meats were then eaten by the people of Aberdeen who then became ill.|$|E
25|$|Falling Fence is a {{sculpture}} by Melbourne photographer John Gollings {{and his assistant}} Samantha <b>Slicer.</b> It was officially launched in 2001. It is made of cypress pine, and is intended {{to blend in with}} its surroundings over time.|$|E
25|$|The cutter entered {{service on}} 19 January 1872, was {{assigned}} to the New York station, with Revenue Captain George R. <b>Slicer,</b> in command. For the next two decades, Grant operated off the east coast from Block Island Sound to the mouth of the Delaware River.|$|E
40|$|A program <b>slice</b> {{extracts}} a semantically meaningful {{portion of}} a program, based upon a user{selected <b>slicing</b> criterion. As the study of program <b>slicing</b> has matured, {{a growing body of}} empirical data has been gathered on the size of <b>slices,</b> the performance of <b>slicing</b> tools, the applications of <b>slicing</b> and the bene cial psychological eects of <b>slices</b> on the programmers who use them. Thi...|$|R
40|$|This paper {{presents}} {{a system for}} amorphous program <b>slicing</b> which combines <b>slicing</b> and transformation to achieve thinner <b>slices</b> than are possible using conventional syntax-preserving <b>slicing.</b> The approach involves the validation of the transformation and <b>slicing</b> steps using the Coq proof assistant, thereby guaranteeing the correctness of the amorphous <b>slices</b> produced. The combined application of <b>slicing</b> and transformation is illustrated with a simple case study...|$|R
5000|$|Go {{supports}} Python-style syntax for <b>slicing</b> (except negative {{indices are}} not supported). Arrays and <b>slices</b> can be <b>sliced.</b> If {{you have a}} <b>slice</b> ...|$|R
25|$|At {{the deli}} counter, a patron recognizes Randy as the wrestler, though he denies it. The {{customer}} persists, which agitates Randy, who then cuts {{his hand on}} the deli's <b>slicer</b> and goes into a rampage in the store, hurling abuse at Wayne and the customers. Spurred by the fan's recognition of him and with nothing left, Randy decides to return to wrestling and reschedules the rematch with The Ayatollah. He reconciles with Cassidy, though she begs him not to wrestle because of his heart condition. However, Randy explains to her that he belongs in the ring with the fans who, unlike the rest of society, love him.|$|E
25|$|Surgical {{resection}} {{to remove}} the tumor while preserving enough remaining healthy liver to maintain normal physiologic function. Surgical removal results in favorable prognosis, but only 10-15% of patients are suitable for surgical resection. This is often because of extensive disease or poor underlying liver function. For example, resection in cirrhotic patients is associated with higher morbidity and mortality. Preoperative evaluation for resection must include imaging of the liver in order to estimate the amount of residual liver remaining after surgery; {{in order to preserve}} normal function, the residual liver volume should be more than 25% of the total size in a non-cirrhotic liver, and more than 40% of the total size for a cirrhotic liver. The overall recurrence rate after resection is 50-60%. The Singapore Liver Cancer Recurrence (<b>SLICER)</b> score can be used to estimate risk of recurrence after surgery.|$|E
25|$|Italian beef is {{made using}} cuts of beef from the sirloin rear or the top/bottom round wet-roasted in broth with garlic, oregano and spices until cooked throughout. The meat is roasted at medium heat (≤350°), which {{contributes}} to the sandwich’s famous ‘jus’ or gravy. This process can result {{in as much as}} a 45% reduction in yield. The beef is then cooled, sliced thin using a deli <b>slicer,</b> and then reintroduced to its reheated beef broth. The beef then sits in the broth, typically for hours. The inefficiency of this process, however, has started to concern many larger Italian beef producers and retailers. In response, some attempt to achieve higher yields by lowering the cooking temperature and placing the beef into food-grade polyester and nylon cook bags, which changes the outer appearance of the beef. Though this reduced time is sufficient for cooking the beef all the way through, it does not allow the jus to be harvested fully. Because traditional Italian beefs are dipped in the jus from their own roast, when this more efficient method is used, the sandwich’s potency is affected. Some companies even add MSG, phosphates and other additives in attempts to reach for higher yields.|$|E
50|$|For each <b>slice,</b> the <b>slice</b> {{length and}} the {{macroblock}} address (i.e. index {{with respect to}} the raster scan order) of the first macroblock (MB) of the <b>slice</b> are extracted by the <b>slice</b> parser (Figure 2). This information, together with the <b>slice</b> itself, is stored in memory (shown as DRAM). In addition, a list of pointers (Figure 2, a pointer for each <b>slice,</b> and each pointing to the memory location where a <b>slice</b> is stored), should be generated. The list of pointers, together with the address of the first macroblock of the <b>slice,</b> will be used to navigate through the out of order <b>slices.</b> The <b>slice</b> length will be used to transfer the <b>slice</b> data from the DRAM to the decoder’s internal memory.|$|R
30|$|Time-equivalent {{stratigraphy}} is {{the foundation}} for sedimentary analysis. Among the several <b>slicing</b> techniques commonly used at present, stratal <b>slicing</b> is closer to time-equivalent interfaces than time <b>slicing</b> and horizon <b>slicing.</b> However, even stratal <b>slicing</b> is prone to diachroneity.|$|R
40|$|Program <b>slicing</b> is {{a program}} {{decomposition}} technique that transforms a large program into a smaller one that contains only statements relevant to the computation of a selected function. Applications of program <b>slicing</b> {{can be found in}} software testing, debugging and maintenance where program <b>slicing</b> essentially reduces the amount of data that has to be analyzed in order to comprehend a program or parts of its functionality. In this thesis, two program <b>slicing</b> algorithms based on the notion of removable blocks are presented and they are (1) a general static program <b>slicing</b> algorithm and (2) criterion based hybrid program <b>slicing</b> algorithm. The thesis introduced new syntax tree representation using removable blocks and theorized a new navigation technique for the same. The new static <b>slicing</b> algorithm combined with the enhanced dynamic <b>slicing</b> algorithm is used to derive the criterion based hybrid <b>slicing</b> algorithm. The hybrid program <b>slicing</b> algorithm allows the user to define the range of accuracy between static and dynamic program <b>slicing.</b> These algorithms compute <b>slices</b> that are executable for structured and object-oriented programs. It uses the executable property of new static <b>slicing</b> to reduce the input source code to dynamic <b>slicing</b> to save the time and space. The introduced program <b>slicing</b> approaches are part of M[barbelow]ontreal O[barbelow]bject-O[barbelow]riented S[barbelow]licing E[barbelow]nvironment (MOOSE). MOOSE utilizes the information derived from the program <b>slicing</b> algorithms to enhance the functionality and usability of the framework. The preliminary tests with the basic hybrid program <b>slicing</b> algorithm indicate that hybrid program <b>slicing</b> can reduce the algorithmic time and space for the <b>slice</b> computation as compared to the dynamic program <b>slicing...</b>|$|R
500|$|A more {{accurate}} biography of Poe {{did not appear}} until John Henry Ingram's of 1875. Even so, historians continued to use Griswold's depiction {{as a model for}} their own biographies of Poe, including W. H. Davenport in 1880, Thomas R. <b>Slicer</b> in 1909, and Augustus Hopkins Strong in 1916. Many used Poe as a cautionary tale against alcohol and drugs. In 1941, Arthur Hobson Quinn presented evidence that Griswold had forged and re-written a number of Poe's letters that were included in his [...] "Memoir of the Author". By then, Griswold's depiction of Poe was entrenched {{in the mind of the}} public, not only in America but around the world, and this distorted image of Poe has become part of the Poe legend despite attempts to dispel it.|$|E
500|$|In 1969 the UK {{television}} channel ITV televised a Christmas special recorded by Thames Television; entitled [...] "Carry On Christmas", it was watched by over eight million viewers. [...] Subsequent Christmas specials {{were recorded in}} 1972 and 1973. [...] In 1975 a 13-episode television series was commissioned by ATV for ITV. Carry On Laughing ran for two seasons, with six half-hour episodes in season one and seven in season two. [...] The writer Penelope Gilliatt wrote: [...] "The usual charge to make against the Carry On films {{is to say that}} they could be so much better done. [...] This is true enough. [...] They look dreadful, they seem to be edited with a bacon <b>slicer,</b> the effects are perfunctory and the comic rhythm jerks along like a cat on a cold morning. [...] But if all these things were more elegant I don't really think the films would be more enjoyable: the badness is part of the funniness." ...|$|E
500|$|The series also {{regularly}} employs guest voices {{for various}} characters. For instance, in the episode [...] "It Came from the Nightosphere", Martin Olson—Olivia Olson's real-life father—appears as Marceline's father, Hunson Abadeer. Peter Stormare appears as Sir <b>Slicer</b> in the episode [...] "Blood Under the Skin". In the entry [...] "Storytelling", Sam Marin voiced the Teenaged Bear. Rapper Biz Markie guest starred as Snorlock in the installment [...] "Slow Love". Paul Reubens appeared as the Gnome Ruler in [...] "Power Animal". Stephen Root lent {{his voice to}} the Royal Tart Toter in the episode [...] "The Other Tarts". Thurop Van Orman voiced the Tree Witch in [...] "To Cut a Woman's Hair". Comedian Melinda Hill lends her voice to Doctor Princess in [...] "The Chamber of Frozen Blades". Henry Rollins and Laura Silverman appeared as Lady Rainicorn's parents in the episode [...] "Her Parents". [...] "The Silent King" [...] featured the voice of Michael J. Anderson, who portrayed Gummy, the Royal Goblin Chief of Staff. Finally, Miguel Ferrer appeared as Death in the episode [...] "Death in Bloom"; Ferrer would reprise {{his role in the}} fourth-season episode [...] "Sons of Mars". Jackie Buscarino voiced the titular character in the episode [...] "Susan Strong". In [...] "Belly of the Beast", Andy Samberg voiced the character Party Pat. Brian Baumgartner, Toby Huss, and Kate Micucci appeared as the three ghost friends of Marceline in [...] "Heat Signature". [...] "Mortal Recoil" [...] featured Isabella Acres as a young Princess Bubblegum. Acres would reprise her role in the third season episode [...] "Too Young".|$|E
40|$|When we try {{to debug}} a large program eectively, it is very {{important}} to separate a suspicious program portion from the overall source program. Pro-gram <b>slicing</b> is a promising technique to extract a program portion; however, it remains diÆcult issues. Static <b>slicing</b> sometimes produces a large portion of the source program, especially for a program with arrays and pointers. Dynamic <b>slicing</b> requires unacceptably huge run-time overhead. In this pa-per, we discuss intermediate semi-dynamic methods between static and dy-namic <b>slicing.</b> We propose two <b>slicing</b> methods named call-mark <b>slicing</b> and dependence-cache <b>slicing.</b> These algorithms have been implemented in our experimental <b>slicing</b> system, and execution data for several sample programs have been collected. The result shows that call-mark <b>slicing</b> reduces the <b>slice</b> size by about 10 { 20 % from the static <b>slice</b> size, with very little overhead increase. Also, dependence-cache <b>slice</b> reduces by about 30 { 90 %, even for programs using arrays, with aordable run-time overhead increase. These <b>slicing</b> methods will be important features for eective debugging environ-ments...|$|R
40|$|Abstract. We generalize {{the notion}} of <b>slice</b> {{introduced}} in our earlier paper [6]. A <b>slice</b> of a distributed computation {{with respect to a}} global predicate is the smallest computation that contains all consistent cuts of the original computation that satisfy the predicate. We prove that <b>slice</b> exists for all global predicates. We also establish that it is, in general, NP-complete to compute the <b>slice.</b> An optimal algorithm to compute <b>slices</b> for special cases of predicates is provided. Further, we present an efficient algorithm to graft two <b>slices,</b> that is, given two <b>slices,</b> either compute the smallest <b>slice</b> that contains all consistent cuts that are common to both <b>slices</b> or compute the smallest <b>slice</b> that contains all consistent cuts that belong to {{at least one of the}} <b>slices.</b> We give application of <b>slicing</b> in general and grafting in particular to global property evaluation of distributed programs. Finally, we show that the results pertaining to consistent global checkpoints [14, 18] can be derived as special cases of computation <b>slicing.</b> ...|$|R
40|$|Program <b>Slicing</b> is {{the process}} of {{deleting}} statements in a program that do not affect a given set of variables at a chosen point in the program. In this paper the first parallel <b>slicing</b> algorithm for static program <b>slicing</b> is introduced. It is shown how the control flow graph of the program to be <b>sliced</b> is converted into a network of concurrent processes, thereby producing a parallel version of Weiser's original static <b>slicing</b> algorithm. The parallel <b>slicing</b> algorithm is formally defined as the least solution (containing the <b>slicing</b> criterion) of a set of recursion equations, derived from the program's control flow graph and is proved correct with respect to Weiser's algorithm. The parallel <b>slicing</b> algorithm has a number of other interesting and potentially useful properties. For example, in addition to constructing a <b>slice,</b> it produces a set of equivalent <b>slicing</b> criteria for the <b>slice</b> it constructs. 1 Introduction A <b>slice</b> of a program p is constructed with respect to a <b>slicing</b> crite [...] ...|$|R
2500|$|Calf Crusher (WWE) Calf Killer (NJPW/TNA/W-1) (Calf <b>slicer)</b> – 2013–present ...|$|E
2500|$|Spam Spread – [...] "if you're a spreader, not a <b>slicer...</b> {{just like}} Spam Classic, {{but in a}} spreadable form" ...|$|E
2500|$|In February 1867, {{the crew}} of Kankakee {{suffered}} another misfortune {{when one of the}} ship's firemen was knocked down by a tender in Grand Street, Manhattan, reportedly suffering serious injuries. In April, Kankakee was utilized by the Commission on Life-Saving Apparatus to test a number of different designs for detaching and lowering lifeboats. [...] "The merits of a fog-horn" [...] were also tested. Captain <b>Slicer</b> of Kankakee was later thanked for his assistance to the Commission.|$|E
50|$|An {{example of}} how <b>slices</b> can be {{associated}} to different <b>slice</b> group is shown in Figure 3. When ASO and FMO are supported, the four <b>slices</b> of this example can be received by the decoder in a random order. Figure 2 shown the following order: <b>slice</b> #4, <b>slice</b> #2, <b>slice</b> #1, and <b>slice</b> #3. The same figure presents the AVC decoder blocks required to support ASO and FMO decoding.|$|R
30|$|The {{isolation}} {{problem can}} be considered over E 2 E approach (whole <b>slice</b> chain) or only over a single <b>slice</b> from <b>slice</b> chaining. Isolation in <b>slice</b> chaining should satisfy the rule that the isolation level of whole <b>slice</b> chain is not greater than the isolation level of any of <b>slices</b> inside the chain. The consequence of this rule is that network should first guarantee proper creation of <b>slices</b> inside each <b>slice</b> domain (RAN, CN, and other) and in next step an attempt to look after E 2 E slices’ isolation. The <b>slices</b> in each domain can be created independently, but simultaneous creation could cause additional problems with isolation. The E 2 E <b>slice</b> could use <b>slices</b> created earlier if the slices’ parameters are compatible (i.e., provided isolation level, throughput, availability).|$|R
50|$|In {{addition}} to the <b>slice</b> length and the macroblock address of the 1st macroblock (MB) of the <b>slice,</b> the <b>slice</b> parser (Figure 4) need to extract the <b>Slice</b> Group (SG) of each <b>slice.</b> These informations, together with the <b>slice</b> itself, are stored in DRAM. As in the ASO case, the list of pointers (Figure 4) should be generated.|$|R
2500|$|By September, Kankakee was homeported in Norfolk, Virginia. The {{following}} month, Kankakee {{arrived at}} Fort Monroe with the schooner Hannah Matilda under tow, which {{had lost her}} sails. On February 9, 1866, Kankakee spoke the ship Grey Eagle, laden with coffee from Rio Janeiro, and supplied her with provisions. On the 24th, Kankakee, now {{under the command of}} Captain George <b>Slicer,</b> was reportedly preparing to transfer to Philadelphia, while the revenue cutter Mocassin was set to take over Kankakees duties in Virginia waters.|$|E
2500|$|When {{the shot}} {{returns to the}} battle (it is {{interspersed}} with Susan and Lucy finding Aslan alive), the White Witch makes her move as she leads the second reserve wave. A phoenix is released from Peter's side, dodging enemy fire and airborne troops, Peter kills a Harpie that attempts to stop the phoenix by throwing a javelin into its heart before the phoenix can engage it. After Peter killed the harpy by throwing a lance at it, the phoenix self-combusts and spreads its fire across the field, temporarily blocking the advance of the second enemy wave in hopes of providing relief for the already outnumbered Narnian army, bogged down in combat with the massive first wave of the Witch's troops, burning any of the White Witch's soldiers that try to cross it. When the White Witch breaks this barrier using her wand, Peter, anticipating the numbers of the combined force of the Witch's troops, yells the command to [...] "fall back and draw them to the rocks", where his archers are stationed, hoping to pick {{of some of the}} enemy, thereby wearing down some of the enemy numbers. As they are riding back, many of the White Witch's soldiers are hit by a barrage of arrows shot by the Narnian archers. However, the Black Dwarves started shooting some of Aslan's retreating soldiers as well while Ginarrbrik shoots Peter's unicorn and wounds it. Peter is thrown from the creature. Oreius sees the situation and gallops to attack the approaching Witch with a black rhinoceros. An Ankle <b>Slicer</b> wounds the black rhinoceros after it knocked down some of the White Witch's soldiers, but Oreius fights and kills Otmin. Oreius goes after the Witch with his two handed sword, and jumps over her. She ducks and engages Oreius. Because of the sword's bulk, he is too slow to block a lunge from her wand and ends up petrified.|$|E
6000|$|... "Miss Colson is abundantly able to {{take care}} of herself," [...] said <b>Slicer,</b> and the other teachers, who had handed over their cause to their ablest advocate, chorused approval.|$|E
40|$|AbstractThis paper {{presents}} {{a theory of}} dynamic <b>slicing,</b> which reveals {{that the relationship between}} static and dynamic <b>slicing</b> is more subtle than previously thought. The definitions of dynamic <b>slicing</b> are formulated in terms of the projection theory of <b>slicing.</b> This shows that existing forms of dynamic <b>slicing</b> contain three orthogonal dimensions in their <b>slicing</b> criteria and allows for a lattice-theoretic study of the subsumption relationship between these dimensions and their relationship to static <b>slicing</b> formulations...|$|R
30|$|Multiplexing and {{demultiplexing}} do {{not require}} deep inspection on different layers of a <b>slice.</b> Data from different <b>slices</b> is marked; <b>slices</b> are grouped and sent through a common link. A switch and a gateway are more complicated according to <b>slices</b> analysis. In some cases, they would require accessing data sent through a <b>slice</b> to transfer {{it to the other}} <b>slice.</b> This means that such devices require special protection according to access to raw slices’ data as well as a proper assurance for interconnecting <b>slices,</b> including preventing wrong interconnection of <b>slices</b> and potential data leakage.|$|R
40|$|Abstract An Executable Concept <b>Slice</b> {{extracts}} from a programan executable subprogram that captures the semantics of a specified high-level concept from the program. Executableconcept <b>slicing</b> combines the executability of program <b>slicing,</b> with the expressive domain level criteria of concept as-signment. This paper presents results from {{an investigation of}} executable concept <b>slice</b> size to assess the effectiveness ofexecutable concept <b>slicing.</b> The {{results show that the}} coherence of concept-based <b>slicing</b> criteria allows them to pro-duce smaller executable concept <b>slices</b> than arbitrary criteria, providing evidence for the applicability of ExecutableConcept <b>Slicing...</b>|$|R
