6529|10000|Public
5|$|<b>Sliced</b> apples turn {{brown with}} {{exposure}} to air {{due to the}} conversion of natural phenolic substances into melanin upon exposure to oxygen. Different cultivars vary in their propensity to brown after slicing and the genetically engineered Arctic Apples do not brown. <b>Sliced</b> fruit can be treated with acidulated water to prevent this effect. <b>Sliced</b> apple consumption tripled in the US from 2004 to 2014 to 500 million apples annually due to its convenience.|$|E
5|$|In {{addition}} to prepared cassava chips from thinly <b>sliced</b> raw cassava root that is then immediately fried or deep-fried, chips may be prepared in a multi-stage process, {{starting with a}} dough made from cassava flour. The dough is steamed, thinly <b>sliced,</b> dried, and then fried in oil. This style of cassava flour chips is a popular food in India, Indonesia, Malaysia and the Philippines.|$|E
5|$|The Fool's Gold Loaf {{begins with}} a loaf of French white bread that is covered in two tablespoons of {{margarine}} and baked in the oven at 350F/180C until brown. One pound of <b>sliced</b> bacon is fried in oil until crispy and drained. The loaf is <b>sliced</b> lengthwise, hollowed out, and filled with peanut butter, grape jelly and bacon.|$|E
40|$|Many {{approaches}} to <b>slicing</b> rely upon the `fact' {{that the union}} of two static <b>slices</b> is a valid <b>slice.</b> It is known that static <b>slices</b> constructed using program dependence graph algorithms are valid <b>slices</b> [19]. However, {{this is not true}} for other forms of <b>slicing.</b> For example, it has been established that the union of two dynamic <b>slices</b> is not necessarily a valid dynamic <b>slice</b> [8]. In this paper this result is extended to show that the union of two static <b>slices</b> is not necessarily a valid <b>slice,</b> based on Weiser's definition of a (static) <b>slice.</b> We also analyse the properties that make the union of different forms of <b>slices</b> a valid <b>slice...</b>|$|R
50|$|This type of {{algorithm}} is included as tool in baseline profile the H.264/MPEG-4 AVC encoder with I <b>Slices,</b> P <b>Slices,</b> Context Adaptative Variable Length Coding (CAVLC), grouping of <b>slices</b> (<b>Slice</b> Group), arbitrary <b>slice</b> order (ASO) and Redundancy <b>slices.</b>|$|R
30|$|All these {{functionalities}} {{are assigned}} to links of <b>slices.</b> The <b>slice</b> switch and the <b>slice</b> gateway transport data from a source link to a target link (the relationship is 1 to 1). The <b>slice</b> multiplexer and demultiplexer works on multiple links on one side (the Nto 1 or 1 toN relationship). It is not assumed here that source or target link(s) are from a single <b>slice</b> (the <b>slice</b> chaining concept is allowed described in [72], based on [73]). The <b>slice’s</b> switch can combine two <b>slice’s</b> links from the same layer in the common protocol stack. The <b>slice</b> gateway is slices’ switch that can combine two <b>slice’s</b> links from different layers or of different protocol stacks (or both). The <b>slice</b> multiplexer can merge multiple <b>slices</b> into a single <b>slice,</b> which could be later split up by a <b>slice</b> demultiplexer.|$|R
5|$|Also in 1965, the {{brothers}} introduced new long ovens and kneading machines. That same year, they produced the country's first <b>sliced</b> bread and bread containing soy flour.|$|E
5|$|Lamb steaks {{come from}} a range of cuts and are a {{versatile}} ingredient {{that can be used in}} a range of dishes. It can be served warm or cold and is commonly found <b>sliced</b> into salads.|$|E
5|$|Onions are {{available}} in fresh, frozen, canned, caramelised, pickled, and chopped forms. The dehydrated product is available as kibbled, <b>sliced,</b> ring, minced, chopped, granulated, and powder forms.|$|E
40|$|Abstract: Y 172 fiber <b>slicer</b> (also says Hartz <b>slicer)</b> {{is often}} used in <b>slicing</b> fiber in fabric inspection. However, there are some {{problems}} {{for this kind of}} <b>slicer,</b> such as low success, low efficiency, poor safety and so on. A new fiber automatic <b>slicing</b> instrument is proposed in this paper. Some creative designs are done, in aspects of <b>slicing</b> thickness adjustment, automatic fiber cutting, blade constant clamping and gravity pressure. This fiber <b>slicing</b> instrument changed traditional <b>slicing</b> method, and effectively resolved the problems of Y 172 fiber <b>slicer.</b> A reliable and efficient instrument is provided for fast and accurate <b>slicing</b> fiber...|$|R
40|$|A program <b>slice</b> {{extracts}} a semantically meaningful {{portion of}} a program, based upon a user{selected <b>slicing</b> criterion. As the study of program <b>slicing</b> has matured, {{a growing body of}} empirical data has been gathered on the size of <b>slices,</b> the performance of <b>slicing</b> tools, the applications of <b>slicing</b> and the bene cial psychological eects of <b>slices</b> on the programmers who use them. Thi...|$|R
50|$|A meat <b>slicer,</b> {{also called}} a <b>slicing</b> machine, deli <b>slicer</b> {{or simply a}} <b>slicer,</b> is a tool used in butcher shops and delicatessens to <b>slice</b> meats, sausages, cheeses and other deli products. Older models of meat <b>slicer</b> may be {{operated}} by crank, while newer ones generally use an electric motor. While the <b>slicer</b> is traditionally a commercial apparatus, domestic use versions are also marketed.|$|R
5|$|Their {{second son}} {{was born with a}} {{deformed}} hand, leading a cartoon to depict Leopold holding the child surrounded by Congolese corpses with their hands <b>sliced</b> off: the caption said Vengeance from on high.|$|E
5|$|Thick <b>sliced</b> or chopped {{and formed}} chicken {{used to create}} mainly {{traditional}} southern dishes such as chicken fried chicken or chicken cube steak.|$|E
5|$|Adas is {{a healthy}} lentil soup, common in the Middle East. Unlike {{other parts of the}} Middle East, Palestinians do not {{incorporate}} yogurt or other ingredients into this soup. Rather, it is made with lentils and chopped onions and served with <b>sliced</b> onions and bread on the side.|$|E
40|$|This paper {{presents}} {{a system for}} amorphous program <b>slicing</b> which combines <b>slicing</b> and transformation to achieve thinner <b>slices</b> than are possible using conventional syntax-preserving <b>slicing.</b> The approach involves the validation of the transformation and <b>slicing</b> steps using the Coq proof assistant, thereby guaranteeing the correctness of the amorphous <b>slices</b> produced. The combined application of <b>slicing</b> and transformation is illustrated with a simple case study...|$|R
50|$|For each <b>slice,</b> the <b>slice</b> {{length and}} the {{macroblock}} address (i.e. index {{with respect to}} the raster scan order) of the first macroblock (MB) of the <b>slice</b> are extracted by the <b>slice</b> parser (Figure 2). This information, together with the <b>slice</b> itself, is stored in memory (shown as DRAM). In addition, a list of pointers (Figure 2, a pointer for each <b>slice,</b> and each pointing to the memory location where a <b>slice</b> is stored), should be generated. The list of pointers, together with the address of the first macroblock of the <b>slice,</b> will be used to navigate through the out of order <b>slices.</b> The <b>slice</b> length will be used to transfer the <b>slice</b> data from the DRAM to the decoder’s internal memory.|$|R
30|$|Time-equivalent {{stratigraphy}} is {{the foundation}} for sedimentary analysis. Among the several <b>slicing</b> techniques commonly used at present, stratal <b>slicing</b> is closer to time-equivalent interfaces than time <b>slicing</b> and horizon <b>slicing.</b> However, even stratal <b>slicing</b> is prone to diachroneity.|$|R
5|$|An {{examination}} of the hull showed that a piece of coral {{the size of a}} man's fist had <b>sliced</b> clean through the timbers and then broken off. Surrounded by pieces of oakum from the fother, this coral fragment had helped plug the hole in the hull and preserved the ship from sinking on the reef.|$|E
5|$|Chips and dip are a food {{of chips}} or crisps served with dips. Chips used include potato chips, tortilla chips, corn chips, bean chips, {{vegetable}} chips, pita chips, plantain chips and others. Crackers are also sometimes used, as are crudités, which are whole or <b>sliced</b> raw vegetables. Various types of dips {{are used to}} accompany various types of chips.|$|E
5|$|Since {{the late}} 1980s, baby carrots or mini-carrots (carrots {{that have been}} {{peeled and cut into}} uniform cylinders) have been a popular ready-to-eat snack food {{available}} in many supermarkets. Carrots are puréed and used as baby food, dehydrated to make chips, flakes, and powder, and thinly <b>sliced</b> and deep-fried, like potato chips.|$|E
40|$|Program <b>slicing</b> is {{a program}} {{decomposition}} technique that transforms a large program into a smaller one that contains only statements relevant to the computation of a selected function. Applications of program <b>slicing</b> {{can be found in}} software testing, debugging and maintenance where program <b>slicing</b> essentially reduces the amount of data that has to be analyzed in order to comprehend a program or parts of its functionality. In this thesis, two program <b>slicing</b> algorithms based on the notion of removable blocks are presented and they are (1) a general static program <b>slicing</b> algorithm and (2) criterion based hybrid program <b>slicing</b> algorithm. The thesis introduced new syntax tree representation using removable blocks and theorized a new navigation technique for the same. The new static <b>slicing</b> algorithm combined with the enhanced dynamic <b>slicing</b> algorithm is used to derive the criterion based hybrid <b>slicing</b> algorithm. The hybrid program <b>slicing</b> algorithm allows the user to define the range of accuracy between static and dynamic program <b>slicing.</b> These algorithms compute <b>slices</b> that are executable for structured and object-oriented programs. It uses the executable property of new static <b>slicing</b> to reduce the input source code to dynamic <b>slicing</b> to save the time and space. The introduced program <b>slicing</b> approaches are part of M[barbelow]ontreal O[barbelow]bject-O[barbelow]riented S[barbelow]licing E[barbelow]nvironment (MOOSE). MOOSE utilizes the information derived from the program <b>slicing</b> algorithms to enhance the functionality and usability of the framework. The preliminary tests with the basic hybrid program <b>slicing</b> algorithm indicate that hybrid program <b>slicing</b> can reduce the algorithmic time and space for the <b>slice</b> computation as compared to the dynamic program <b>slicing...</b>|$|R
40|$|When we try {{to debug}} a large program eectively, it is very {{important}} to separate a suspicious program portion from the overall source program. Pro-gram <b>slicing</b> is a promising technique to extract a program portion; however, it remains diÆcult issues. Static <b>slicing</b> sometimes produces a large portion of the source program, especially for a program with arrays and pointers. Dynamic <b>slicing</b> requires unacceptably huge run-time overhead. In this pa-per, we discuss intermediate semi-dynamic methods between static and dy-namic <b>slicing.</b> We propose two <b>slicing</b> methods named call-mark <b>slicing</b> and dependence-cache <b>slicing.</b> These algorithms have been implemented in our experimental <b>slicing</b> system, and execution data for several sample programs have been collected. The result shows that call-mark <b>slicing</b> reduces the <b>slice</b> size by about 10 { 20 % from the static <b>slice</b> size, with very little overhead increase. Also, dependence-cache <b>slice</b> reduces by about 30 { 90 %, even for programs using arrays, with aordable run-time overhead increase. These <b>slicing</b> methods will be important features for eective debugging environ-ments...|$|R
40|$|Abstract. We generalize {{the notion}} of <b>slice</b> {{introduced}} in our earlier paper [6]. A <b>slice</b> of a distributed computation {{with respect to a}} global predicate is the smallest computation that contains all consistent cuts of the original computation that satisfy the predicate. We prove that <b>slice</b> exists for all global predicates. We also establish that it is, in general, NP-complete to compute the <b>slice.</b> An optimal algorithm to compute <b>slices</b> for special cases of predicates is provided. Further, we present an efficient algorithm to graft two <b>slices,</b> that is, given two <b>slices,</b> either compute the smallest <b>slice</b> that contains all consistent cuts that are common to both <b>slices</b> or compute the smallest <b>slice</b> that contains all consistent cuts that belong to {{at least one of the}} <b>slices.</b> We give application of <b>slicing</b> in general and grafting in particular to global property evaluation of distributed programs. Finally, we show that the results pertaining to consistent global checkpoints [14, 18] can be derived as special cases of computation <b>slicing.</b> ...|$|R
5|$|Squab pie is a mutton {{pie with}} a shortcrust pastry lid. It {{should be made}} {{with at least one}} layer of onions, {{followed}} by alternating layers of <b>sliced</b> apples and mutton chops. The mixture should be covered with water, though less than in some pies, covered with pastry and baked in the oven for about two hours.|$|E
5|$|Testaroli {{is a type}} of pancake-like pasta {{prepared}} using water, {{wheat flour}} and salt that is <b>sliced</b> into triangular shapes. Chestnut flour is sometimes used in its preparation. The ingredients are mixed together and prepared as a batter, after which it is cooked, sometimes using a two-stage cooking process. In the typical first stage, and sometimes only stage of cooking, the batter is poured and cooked on a hot, flat surface in the style of a pancake or crêpe. In this process, testaroli is traditionally cooked on a testo, which may be prepared for use by being heated over hot coals. A skillet is another cooking device {{that can be used to}} cook the batter. The pasta is then <b>sliced</b> into triangles, and is sometimes directly served after this cooking process. In the second cooking stage that is sometimes performed, the pasta may be set aside to cool, and then cooked further in boiling water.|$|E
5|$|The {{choice of}} tea {{offered to the}} guests is diverse, and {{includes}} the hotel's own Dorchester Blend. The service includes a first course consisting of finger sandwiches with <b>sliced</b> cucumber, cream cheese, and smoked salmon, all served in silver trays, a second course consisting of scones with clotted cream and jam, followed by a pastry tray with a selection of freshly-made patisseries.|$|E
50|$|An {{example of}} how <b>slices</b> can be {{associated}} to different <b>slice</b> group is shown in Figure 3. When ASO and FMO are supported, the four <b>slices</b> of this example can be received by the decoder in a random order. Figure 2 shown the following order: <b>slice</b> #4, <b>slice</b> #2, <b>slice</b> #1, and <b>slice</b> #3. The same figure presents the AVC decoder blocks required to support ASO and FMO decoding.|$|R
30|$|The {{isolation}} {{problem can}} be considered over E 2 E approach (whole <b>slice</b> chain) or only over a single <b>slice</b> from <b>slice</b> chaining. Isolation in <b>slice</b> chaining should satisfy the rule that the isolation level of whole <b>slice</b> chain is not greater than the isolation level of any of <b>slices</b> inside the chain. The consequence of this rule is that network should first guarantee proper creation of <b>slices</b> inside each <b>slice</b> domain (RAN, CN, and other) and in next step an attempt to look after E 2 E slices’ isolation. The <b>slices</b> in each domain can be created independently, but simultaneous creation could cause additional problems with isolation. The E 2 E <b>slice</b> could use <b>slices</b> created earlier if the slices’ parameters are compatible (i.e., provided isolation level, throughput, availability).|$|R
50|$|In {{addition}} to the <b>slice</b> length and the macroblock address of the 1st macroblock (MB) of the <b>slice,</b> the <b>slice</b> parser (Figure 4) need to extract the <b>Slice</b> Group (SG) of each <b>slice.</b> These informations, together with the <b>slice</b> itself, are stored in DRAM. As in the ASO case, the list of pointers (Figure 4) should be generated.|$|R
5|$|Two {{to three}} tablespoons of ReaLemon lemon juice has the {{equivalent}} of the juice from one average-sized lemon. Both ReaLemon and ReaLime are used as ingredients in various recipes, such as in baking, grilling, and as an ingredient in marinades and salad dressings. ReaLemon can be used as an ingredient in hot tea, lemonade and hot lemonade, and in various cooked dishes and baked goods such as pies. ReaLemon and other lemon juices can be used to prevent browning discoloration from occurring in peeled or <b>sliced</b> potatoes. This is performed by soaking the <b>sliced</b> potatoes in a mixture of the lemon juice and water. Both ReaLemon and ReaLime must be refrigerated after the bottles are opened.|$|E
5|$|A beefsteak {{is a type}} of banquet {{in which}} <b>sliced</b> beef {{tenderloin}} is served to diners as all-you-can-eat finger food. The dining style originated in 19th-century New York City as a type of working-class celebration but went into a decline in the mid-20th century. Resurrected by caterers in New Jersey, the beefsteak banquet style is now popular in that state's Bergen and Passaic counties, and is enjoying a revival in New York City, where the style originated, due to the reemergence of a biannual beefsteak in Brooklyn.|$|E
5|$|Anomalocaridids, such as Anomalocaris, were {{organism}}s {{thought to}} be distantly related to the arthropods. These creatures looked quite unlike any organism living today—they had segmented exoskeletons, with lateral lobes used for swimming, typically large compound eyes, often set on stalks, and most strikingly, a pair of large, claw-like great appendages that resembled headless shrimp. These appendages {{are thought to have}} passed food to the animal's mouth, which resembled a ring of <b>sliced</b> pineapple.|$|E
40|$|This paper {{presents}} {{results from}} a study of all <b>slices</b> from 43 programs, ranging up to 136, 000 lines of code in size. The study investigates the effect of five aspects that affect <b>slice</b> size. Three <b>slicing</b> algorithms are used to study two algorithmic aspects: calling-context treatment and <b>slice</b> granularity. The remaining three aspects affect the upstream dependencies considered by the <b>slicer.</b> These include collapsing structure fields, removal of dead code, {{and the influence of}} points-to analysis. The results show that, for the most precise <b>slicer,</b> the average <b>slice</b> contains just under one third of the program. Furthermore, ignoring calling context causes a 50 % increase in <b>slice</b> size and (coarse grained) function-level <b>slices,</b> while 33 % larger than the corresponding statement-level <b>slice,</b> may be useful predictors of the (finer grained) statement-level <b>slice</b> size. Finally, the upstream analyses have an order of magnitude less influence on <b>slice</b> size. ...|$|R
40|$|AbstractThis paper {{presents}} {{a theory of}} dynamic <b>slicing,</b> which reveals {{that the relationship between}} static and dynamic <b>slicing</b> is more subtle than previously thought. The definitions of dynamic <b>slicing</b> are formulated in terms of the projection theory of <b>slicing.</b> This shows that existing forms of dynamic <b>slicing</b> contain three orthogonal dimensions in their <b>slicing</b> criteria and allows for a lattice-theoretic study of the subsumption relationship between these dimensions and their relationship to static <b>slicing</b> formulations...|$|R
30|$|Multiplexing and {{demultiplexing}} do {{not require}} deep inspection on different layers of a <b>slice.</b> Data from different <b>slices</b> is marked; <b>slices</b> are grouped and sent through a common link. A switch and a gateway are more complicated according to <b>slices</b> analysis. In some cases, they would require accessing data sent through a <b>slice</b> to transfer {{it to the other}} <b>slice.</b> This means that such devices require special protection according to access to raw slices’ data as well as a proper assurance for interconnecting <b>slices,</b> including preventing wrong interconnection of <b>slices</b> and potential data leakage.|$|R
