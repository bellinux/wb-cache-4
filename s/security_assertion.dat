100|37|Public
5000|$|Interaction between {{applications}} and modules {{are based on}} industry standards such as <b>Security</b> <b>Assertion</b> Markup Language (or SAML).|$|E
5000|$|SAML — <b>Security</b> <b>Assertion</b> Markup Language, a {{standard}} XML-based {{framework for the}} secure exchange of authentication and authorization information.|$|E
50|$|Building on this work, in November 2002 OASIS {{announced}} the <b>Security</b> <b>Assertion</b> Markup Language (SAML) V1.0 specification as an OASIS Standard.|$|E
30|$|After {{generating}} the CSP {{description of the}} systems using Casper and asking FDR to check the <b>security</b> <b>assertions,</b> two attacks were found. The first discovered attack below is against the WeakAgreement (M, EP) and Aliveness (M, EP) assertions.|$|R
50|$|WS-SecurityPolicy {{specifies}} <b>security</b> policy <b>assertions</b> for WS-Security, WS-Trust and WS-SecureConversation.|$|R
40|$|Long term {{preservation}} of electronic data requires introduction of specific technology solutions and organizational measures {{in order to}} provide stable environment for electronic record preservation. System solutions must support basic principles of electronic preservation: accessibility of data, usability or reproduction of data in usable form and integrity/authenticity provision including time existence for preserved content. Due to their nature, electronic data may become subjects of manipulation without recursive traceability of content alteration. In order to preserve usability of preserved data, electronic preservation system must provide appropriate measures for demonstrating unalterability of data for the entire preservation period. In this paper technology approach for demonstrating integrity and authenticity of archived data on long term basis is presented. Presented technological concept deals with any type of documentation or archiving material and provides creation of additional <b>security</b> <b>assertions</b> or evidence records that are needed to demonstrate the authenticity and integrity of the material anytime during the archival period. The evidence record syntax (ERS), which has been standardized by international organization body for internet standards (IETF), presents universal technique of <b>security</b> <b>assertions</b> generation and their maintenance for integrity preservation based on document hashing, hash treeing and integration of (qualified) time stamps of trusted third parties. Using re-timestamping methods created <b>security</b> <b>assertions</b> may endure their validity for longest periods of time until retention periods of archived data expires. In the paper complementary organizational rules for technology solutions are presented as well, providing an all around overview of long term {{preservation of}} data in authentic, reliable and secure manner...|$|R
5000|$|Extensible Markup Language (XML): Most SAML exchanges are {{expressed}} in a standardized dialect of XML, which is the root for the name SAML (<b>Security</b> <b>Assertion</b> Markup Language).|$|E
5000|$|The Authentication Service is {{responsible}} for the creation of <b>Security</b> <b>Assertion</b> Markup Language (SAML) assertions confirming to Service Providers (SPs) that a successful user authentication dialog has taken place.|$|E
50|$|<b>Security</b> <b>Assertion</b> Markup Language (SAML) is an XML {{standard}} for exchanging authentication and authorization data between security domains. SAML {{is a product}} of the OASIS (organization) Security Services Technical Committee.|$|E
5000|$|<b>Security</b> binding <b>assertions</b> control basic <b>security</b> {{safeguards}} like {{transport and}} message level security, cryptographic algorithm suite and required timestamps.|$|R
40|$|Abstract: In {{this article}} the new trend in {{authorisation}} decision making will be described, using the <b>Security</b> <b>Assertions</b> Mark up Language (SAML). We then present {{an overview of}} the Globus Toolkit (GT), used in Grid computing environments, and highlight its authorisation requirements. We then introduce the PERMIS authorisation infrastructure and describe how it has been adapted to support SAML {{so that it can be}} deployed to make authorisation decisions for GTversion 3. 3...|$|R
40|$|Service-oriented Architectures (SOA) {{facilitate}} the dynamic and seamless integration of services offered by different service providers which in addition can {{be located in}} different trust domains. Especially for business integration scenarios, Federated Identity Management emerged as a possibility to propagate identity information as <b>security</b> <b>assertions</b> across company borders {{in order to secure}} the interaction between different services. Although this approach guarantees scalability regarding the integration of identity-based services, it exposes a service provider to new security risks. These security risks result from the comple...|$|R
50|$|Technologies {{used for}} federated {{identity}} include SAML (<b>Security</b> <b>Assertion</b> Markup Language), OAuth, OpenID, Security Tokens (Simple Web Tokens, JSON Web Tokens, and SAML assertions), Web Service Specifications, Microsoft Azure Cloud Services, and Windows Identity Foundation.|$|E
50|$|In February 2007 Oracle Corporation contributed the Identity Governance Framework to the alliance, which {{released}} {{the first version}} publicly in July 2007.The Identity Governance Framework defined how identity related information is used, stored, and propagated using protocols such as LDAP, <b>Security</b> <b>Assertion</b> Markup Language, WS-Trust, and ID-WSF.|$|E
50|$|The {{protocol}} specifies how {{integrity and}} confidentiality can be enforced on messages {{and allows the}} communication of various security token formats, such as <b>Security</b> <b>Assertion</b> Markup Language (SAML), Kerberos, and X.509. Its main focus {{is the use of}} XML Signature and XML Encryption to provide end-to-end security.|$|E
40|$|Existing {{registry}} {{technologies such}} as UDDI can be enhanced to support capabilities for semantic reasoning and inquiry, which subsequently increases its usability range. The Grimoires registry was developed to provide such support {{through the use of}} metadata attachments to registry entities. The use of such attachments provides a way for allowing service operators to specify <b>security</b> <b>assertions</b> pertaining to registry entities owned by them. These assertions may however have to be reconciled with existing registry policies. A security architecture based on the XACML standard and deployed in the OMII framework is outlined to demonstrate how this goal is achieved in the registry. 1...|$|R
40|$|There {{is growing}} {{interest}} in collaboration and resource sharing among institutions and organizations. In this paper, we investigate the problems of identity management inherent in distributed subscription-based resource sharing. The paper describes the design, implementation and performance {{of a system that}} provides controlled access to subscription based remote network services through a browser. A third-party authentication protocol is designed and employed to exchange <b>security</b> <b>assertions</b> among involved parties. The web servers use plug-ins to provide an authentication-delegation service and a policybased authorization service. Users can use a single userID and password to access multiple subscribed resource site...|$|R
40|$|Abstract — For most {{organizations}} supporting business-tobusiness (B 2 B) {{web services}} interactions, {{security is a}} growing concern. Web services providers and consumers document their primary and alternative security policy requirements and capabilities in security policy files, defined by WS-Policy, WS-SecurityPolicy and WS-Security syntax. To secure message exchanges {{to the satisfaction of}} all parties, the security requirements of both web services providers and consumers need to be satisfied. This paper investigates how mutually agreed-upon security policies can be created. An analysis of the policy intersection algorithm highlights its deficiencies for finding mutually compatible policies. The interrelated effect that <b>security</b> policy <b>assertion</b> choices have on each other is identified as an important aspect not yet considered. Over and above <b>security</b> policy <b>assertions,</b> other influence on security policy choices, which may affect the security level supported by the organization, is identified. A proposal is made on how the <b>assertions</b> of two <b>security</b> policies should be considered, {{in order to create a}} secure, mutually agreed-upon security policy that will satisfy the requirements of both parties. Keywords: WS-Policy; WS-SecurityPolicy; policy intersection, <b>security</b> policy <b>assertions,</b> policy compatibility I...|$|R
50|$|Identity {{federation}} can {{be accomplished}} any number of ways, some of which involve the use of formal Internet standards, such as the OASIS <b>Security</b> <b>Assertion</b> Markup Language (SAML) specification, and {{some of which may}} involve open-source technologies and/or other openly published specifications (e.g. Information Cards, OpenID, the Higgins trust framework or Novell’s Bandit project).|$|E
50|$|Clinical Trial Portals {{can provide}} a single-sign-on {{capability}} using a SAML (<b>Security</b> <b>Assertion</b> Mark-up Language) technology {{to reduce the number}} of websites and credentials that are typically required to conduct a clinical trial. Links to other clinical trial technologies being used for a study can be incorporated into the portal to provide users with a common technology platform for the studies they conduct.|$|E
50|$|Access Manager (a.k.a. NAM) is a Web access {{management}} product from NetIQ, now Micro Focus. Formerly owned by Novell, {{it was created}} as the successor to their iChain product. NAM provides single sign-on for web applications, a role-based SSL VPN and many globally recognized open standard federation protocols such as <b>Security</b> <b>Assertion</b> Markup Language 1.x/2.x, WS-Federation, WS-Trust, CardSpace, OAuth, OpenID Connect, and others.|$|E
5000|$|There {{are many}} subtle {{differences}} between CA signed and self-signed certificates, {{especially in the}} amount of trust that can be placed in the <b>security</b> <b>assertions</b> of the certificate. Some CAs can verify the identity of the person to whom they issue a certificate; for example the US military issues their Common Access Cards in person, with multiple forms of other ID. The CA can attest identity values like these by including them in the signed certificate. The entity that validates the certificate can trust the information in that certificate, to the same extent that they trust the CA that signed it (and by implication, the security procedures the CA used to verify the attested information).|$|R
40|$|Abstract — Service-oriented Architectures (SOA) {{facilitate}} the dynamic and seamless integration of services offered by different service providers which in addition can {{be located in}} different trust domains. Especially for business integration scenarios, Federated Identity Management emerged as a possibility to propagate identity information as <b>security</b> <b>assertions</b> across company borders {{in order to secure}} the interaction between different services. Although this approach guarantees scalability regarding the integration of identity-based services, it exposes a service provider to new security risks. These security risks result from the complex trust relationships within a federation. In a federation the authentication of a user is not necessarily performed within the service provider’s domain, but can be performed in the user’s local domain. Consequently, the service provider has to rely on authentication results received from...|$|R
40|$|In many of {{the single}} sign-on (SSO) {{specifications}} that support multitiered authentication, it is not mandatory to include the authentication context in a signed response. This can be exploited by the adversaries to launch {{a new kind of}} attack specific to SSO systems. In this paper, we propose the Weakest Link Attack, which is a kind of parallel session attack feasible in the above settings. Our attack enables adversaries to succeed at all levels of authentication associate to the victim user by breaking only at the weakest one. We present a detailed case study of our attack on web SSO as specified in <b>Security</b> <b>Assertions</b> Markup Language (SAML) V 2. 0, an OASIS standard released in March, 2005. We also suggest the corresponding repair {{at the end of the}} paper. 1 © Springer-Verlag Berlin Heidelberg 2006. link_to_subscribed_fulltex...|$|R
50|$|<b>Security</b> <b>Assertion</b> Markup Language (SAML, {{pronounced}} sam-el) is an XML-based, open-standard {{data format}} for exchanging authentication and authorization data between parties, in particular, between an identity provider and a service provider. SAML {{is a product}} of the OASIS Security Services Technical Committee. SAML dates from 2001; the most recent major update of SAML was published in 2005, but protocol enhancements have steadily been added through additional, optional standards.|$|E
50|$|<b>Security</b> <b>Assertion</b> Markup Language 2.0 (SAML 2.0) is {{a version}} of the SAML {{standard}} for exchanging authentication and authorization data between security domains. SAML 2.0 is an XML-based protocol that uses security tokens containing assertions to pass information about a principal (usually an end user) between a SAML authority, named an Identity Provider, and a SAML consumer, named a Service Provider. SAML 2.0 enables web-based, cross-domain single sign-on (SSO), which helps reduce the administrative overhead of distributing multiple authentication tokens to the user.|$|E
50|$|The Shibboleth Internet2 {{middleware}} initiative {{created an}} architecture and open-source implementation for identity management and federated identity-based authentication and authorization (or access control) infrastructure based on <b>Security</b> <b>Assertion</b> Markup Language (SAML). Federated identity allows {{the sharing of}} information about users from one security domain to the other organizations in a federation. This allows for cross-domain single sign-on and removes the need for content providers to maintain user names and passwords. Identity providers (IdPs) supply user information, while service providers (SPs) consume this information and give access to secure content.|$|E
5000|$|As {{the name}} implies, {{identity}} federation comprises {{one or more}} systems that federate user access and allow users to log in based on authenticating {{against one of the}} system participating in the federation. This trust between several systems is often known as [...] "Circle of Trust". In this setup, one system acts as the Identity Provider (IdP) and other system(s) acts as Service Provider (SP). When a user needs to access some service controlled by SP, he/she first authenticates against the IdP. Upon successful authentication, the IdP sends a secure [...] "assertion" [...] to the Service Provider. [...] "SAML assertions, specified using a mark up language intended for describing <b>security</b> <b>assertions,</b> can be used by a verifier to make a statement to a relying party about the identity of a claimant. SAML assertions may optionally be digitally signed." ...|$|R
5000|$|WS-SecurityPolicy is a web {{services}} specification, created by IBM and 12 co-authors, {{that has become}} an OASIS standard as of version 1.2. It extends the fundamental security protocols specified by the WS-Security, WS-Trust and WS-SecureConversation by offering mechanisms to represent the capabilities and requirements of {{web services}} as policies. <b>Security</b> policy <b>assertions</b> {{are based on the}} WS-Policy framework.|$|R
40|$|Formal {{security}} {{specifications for}} a distributed application can be checked for compliance at run-time using executable <b>security</b> <b>assertions.</b> We propose the RunTime Security Evaluation (RTSE) method which {{makes use of}} histories/traces of events, assertions and operational evaluation in the distributed environment to ensure the security specifications for the application are fulfilled at run-time. A model problem is used to aid in developing the security requirements formally. 1. Introduction Traditionally, security models have provided checks that the security policy is strictly adhered to at design and implementation times. A formal security policy is given, a design is proposed, then formal proofs must be supplied that the verification of design guarantees enforcement of the security policy. When the implementation is constructed, formal proofs are used again for verification to show a priori that the system or application resulting from that implementation will comply to the formal [...] ...|$|R
50|$|The UCS RADIUS app secures {{access to}} the network via the RADIUS protocol. The UCS-integrated SAML app {{provides}} a Single_sign-on identity provider for UCS based on the <b>Security</b> <b>Assertion</b> Markup Language (SAML) protocol and the SimpleSAMLphp software framework. With help of the identity provider, a single sign-on functionality for third party web services and applications (e.g., Google Apps, Salesforce.com etc.) can be realized while the authentication is done at the identity provider itself. The user management is done via UCS where users are individually activated for particular web services. In addition, the authentication process can be extended by a second factor (2-factor authentication) via privacyIDEA from the App Center.|$|E
50|$|The PERMIS {{policy is}} eXtensible Markup Language (XML)-based and has rules for user-role {{assignments}} and role-privilege assignments, the latter containing optional obligations that are {{returned to the}} application when a user is granted access to a resource. A PERMIS policy can be stored as either a simple text XML file, or as an attribute within a signed X.509 attribute certificate to provide integrity protection and tampering detection. User roles and attributes may be held in secure signed X.509 attributes certificates, and stored in Lightweight Directory Access Protocol (LDAP) directories or Web-based Distributed Authoring and Versioning (WebDAV) repositories, {{or they may be}} created on demand as <b>Security</b> <b>Assertion</b> Markup Language (SAML) attribute assertions.|$|E
50|$|In July 2002, the {{alliance}} announced Liberty Identity Federation (ID-FF) 1.0.At that time, several member companies announced upcoming availability of Liberty-enabled products.Liberty Federation allowed consumers and users of Internet-based services and e-commerce applications to authenticate and sign-on {{to a network}} or domain once from any device and then visit or take part in services from multiple Web sites. This federated approach did not require the user to re-authenticate and can support privacy controls established by the user. The Liberty Alliance released two more versions of the Identity Federation specification, and then in June 2003 contributed its federation specification, to OASIS, forming the foundation for <b>Security</b> <b>Assertion</b> Markup Language (SAML) 2.0. In 2007, industry analyst firm Gartner said it had wide acceptance.|$|E
40|$|A {{security}} policy for a distributed {{system can be}} checked for compliance at run-time, as the system executes, using assertions embedded in software. This paper presents the concept of run-time security assurance, according to a given {{security policy}} for a given distributed system, along with mechanisms for its usage. A model problem illustrates the implementation of executable <b>security</b> <b>assertions</b> and their run-time validation on histories (traces) of events. 1 This work {{was supported in part}} by the National Science Foundation under grant number MSS 9216479, and, in part, by the Air Force Office of Scientific Research under contract numbers F 49620 - 92 J - 0546 and F 49620 - 93 -I- 0409. 1 Introduction Traditionally, security models have provided for checks that the security policy is strictly adhered to at design and implementation times. A security policy is given, a design is proposed, then formal proofs must be supplied that the design guarantees enforcement of the security policy. When t [...] ...|$|R
40|$|Abstract—UNICORE (UNiform Interface to COmputing RE-sources) is a Grid {{middleware}} for accessing {{high-performance computing}} capabilities and storage resources in a secure and seamless fashion. In its current version (7. 0), it offers web services using SOAP (Simple Object Access Protocol) {{in conjunction with}} a security stack based on the <b>Security</b> <b>Assertions</b> Markup Language (SAML) and the WS-Security specification. To accom-modate recent integration use cases, the need for more lightweight ways to access resources through UNICORE has arisen. This work describes the architecture, design, and first implementation results of an interface to UNICORE services based on the REST (Representational State Transfer) architectural style. Crucial boundary conditions included a lightweight security layer, and full interoperability with the existing SOAP-based interfaces. This RESTful interface will greatly simplify access to and interaction with the UNICORE services and enable new use cases. It will allow integrating high-performance computing and data management services into web-based and mobile applications...|$|R
40|$|The Simple Object Access Protocol (SOAP) is an XML-based {{messaging}} protocol {{used primarily}} as the wire format for a {{remote procedure call}} (RPC). SOAP offers advantages for RPC communications on the Internet. SOAP messages piggyback on HTTP {{and are able to}} penetrate Internet firewalls and reach distributed computing applications. SOAP also holds the promise of enabling interoperability between competing heterogeneous RPCbased systems. However, SOAP lacks standard security provisions for remote procedure calls. This paper presents Secure-SOAP, an open architecture leveraging existing web security technology that provides confidentiality, integrity, authentication, and authorization for SOAP RPC requests. The architecture includes a general-purpose authorization module based on the emerging <b>Security</b> <b>Assertions</b> Markup Language (SAML) standard. The authorization module can be invoked at a policy enforcement point just prior to the server invoking the remote method in order to enforce access control for SOAP RPC requests. The architecture demonstrates how any SAMLcompliant authorization service acting as a policy decision point can be readily integrated with a SOAP RPC system to provide access control to SOAP RPC requests...|$|R
