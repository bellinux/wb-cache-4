79|694|Public
50|$|Mobile <b>Service</b> <b>Node</b> (MSN) - The MSN is the node {{that handles}} the mobile {{intelligent}} network (IN) services.|$|E
50|$|A content cluster or <b>service</b> <b>node</b> can {{be formed}} using a layer 4-7 switch to balance load across {{a number of}} servers or a number of web caches within the network.|$|E
5000|$|G.987.1: General {{requirements}} of 10G-PON systems (approved 2010-01-13). Includes examples of services, user network interfaces (UNIs) and <b>service</b> <b>node</b> interfaces (SNIs), {{as well as}} the principal deployment configurations that are requested by network operators.|$|E
50|$|In a PRIME {{subnetwork}} two {{device types}} exist: Base <b>nodes</b> and <b>Service</b> <b>nodes.</b> Base nodes manage subnetwork resources and connections. All devices, {{which are not}} Base <b>nodes</b> are <b>Service</b> <b>nodes.</b> <b>Service</b> <b>nodes</b> register with Base nodes {{to become part of}} a subnetwork.|$|R
40|$|Overlay {{networks}} {{are becoming a}} popular vehicle for deploying advanced network services in the Internet. Overlay {{networks are}} implemented by deploying <b>service</b> <b>nodes</b> at suitably chosen sites in the network. <b>Service</b> <b>nodes</b> communicate with users through the commodity Internet, while among themselves, they may use either the commodity Internet or dedicated channels. The number of distinct <b>service</b> <b>nodes</b> has a big influence on the operational cost of an overlay network; meanwhile, the distance between <b>service</b> <b>nodes</b> and end users has a big influence {{on the quality of}} the service. In this paper, we study the problem of how to optimally place <b>service</b> <b>nodes</b> in a network, balancing the need to minimize the number of nodes, while limiting the distance between users and <b>service</b> <b>nodes.</b> We show that the design problem is NP-hard and study the performance of heuristic algorithms using simulation. For single domain, our algorithms produce results that are within a few percent of an easily computed lower bound. For multi-domain networks, the performance ranges from close to the optimal to roughly twice the optimal...|$|R
50|$|<b>Service</b> <b>Nodes</b> and Application Nodes map into sub-systems {{consisting}} of all {{software and hardware}} resources needed to implement those. In order to maintain system level modularity, {{the only way for}} a node to use SW&HW resources from other sub-systems is through <b>Services</b> <b>Nodes.</b>|$|R
50|$|VB5 {{is a set}} of {{protocols}} {{that define}} the interface between a broadband user access node and a <b>service</b> <b>node.</b> It is the broadband equivalent of the V5 interface, {{and is a member of}} the Broadband ISDN architecture.|$|E
50|$|The {{topology}} {{generated by}} a PRIME subnetwork is a tree with the Base node as trunk. To extend the subnetwork range, a Base node can promote a <b>Service</b> <b>node</b> from terminal state to switch state. Switches relay data in the subnetwork and build the branch points of the tree.|$|E
50|$|The CX1000-SM and CX1000-SC nodes can be {{used for}} cluster computing, but they are {{designed}} for scale-up Symmetric Multi-Processing (SMP). When used for cluster computing, the CX1000-SM node is intended to be the master (<b>service)</b> <b>node,</b> although it can instead be a compute node. Similarly, the CX1000-SC node, when used for cluster computing, is intended to be a compute node, but can instead act as the master (<b>service)</b> <b>node.</b> Either or both the CX1000-SC and/or CX1000-SM nodes can be deployed in a HPC cluster. The CX1000-SM and CX1000-SC nodes, when used for SMP, are connected by a cache-coherency interconnect which is a built-in subassembly of the CX1000-SM and CX1000-SC nodes, rather than a standalone device, and is called the Drawer Interconnect Switch in Cray literature. The Drawer Interconnect Switch uses the Intel QuickPath Interconnect technology.|$|E
50|$|Zeugma's major {{products}} included the Zeugma <b>Services</b> <b>Node</b> (<b>Service</b> Delivery Router) and the Zeugma OSS (Network Management System).|$|R
50|$|The {{computer}} has 4 HP <b>service</b> <b>nodes.</b>|$|R
50|$|NoTA device {{consists}} of <b>Service</b> <b>Nodes</b> (SN) and Application Nodes (AN) that communicate through logical Interconnect (IN). IN provides two basic means of communication, namely message based and streaming type. The former is bi-directional {{and used for}} Service Messages. The latter one is uni-directional and used for large amounts of data like media content. <b>Service</b> <b>Nodes</b> have unique <b>Service</b> Identifier (SID).|$|R
5000|$|Bellcore (subsequently Telcordia Technologies) {{developed}} the Advanced Intelligent Network (AIN) as the variant of Intelligent Network for North America, and performed the standardization of the AIN {{on behalf of}} the major US operators. The original goal of AIN was AIN 1.0, which was specified in the early 1990s (AIN Release 1, Bellcore SR-NWT-002247, 1993). AIN 1.0 proved technically infeasible to implement, which led to the definition of simplified AIN 0.1 and AIN 0.2 specifications. In North America, Telcordia SR-3511 (originally known as TA-1129+) and GR-1129-CORE protocols serve to link switches with the IN systems such as Service Control Points (SCPs) or Service Nodes. SR-3511 details a TCP/IP-based protocol which directly connects the SCP and <b>Service</b> <b>Node.</b> [...] GR-1129-CORE provides generic requirements for an ISDN-based protocol which connects the SCP to the <b>Service</b> <b>Node</b> via the SSP.|$|E
50|$|DECserver 100The DECserver 100 Terminal Server was {{a network}} {{terminal}} switch for Ethernet Local Area Networks, providing a convenient method to logically connect {{up to eight}} DIGITAL asynchronous terminals {{to one or more}} service nodes (hosts) on an Ethernet. Through the use of a simple command, users could establish a logical connection, called a session, to any local <b>service</b> <b>node</b> that implemented the LAT protocol.|$|E
50|$|Big Monitoring Fabric: Big Monitoring Fabric is a {{visibility}} and security monitoring solution. It uses high-performance, open Ethernet switches and a controller-based SDN architecture to enable network-wide monitoring and inline tool chaining in the DMZ. It {{also has a}} DPDK-based <b>Service</b> <b>Node</b> appliance that connects to the Big Monitoring Fabric as a service to provide advanced network packet broker functions such as packet de-duplication, packet slicing, regular matching, and NetFlow generation.|$|E
40|$|Abstract. A {{requester}} <b>node</b> {{requesting a}} <b>service</b> in a {{peer to peer}} network transmits a request to a <b>service</b> provider <b>node.</b> The request may include a communication history of the requester node identifying other nodes with which the requester node has previously communicated. The <b>service</b> provider <b>node</b> authenticates the requester node based on the communication history. The <b>service</b> provider <b>node</b> may ask other nodes with which the requester node has communicated for evaluation of the requester node. The other nodes may calculate a trust metric of the requester node and provide this metric to the <b>service</b> provider <b>node.</b> The <b>service</b> provider <b>node</b> may use this trust metric in combination with a similarity calculation of the requester <b>node</b> and the <b>service</b> provider <b>node</b> to make a determination whether the requester node is to be authenticated. The <b>service</b> provider <b>node</b> may evaluate the requester node and store the evaluation in its communication history...|$|R
3000|$|The cloud {{computing}} load balancing center nodes predict the load of <b>service</b> <b>nodes</b> as per periodic time T; [...]...|$|R
40|$|AbstractIn this paper, a {{trust model}} based on {{real-time}} behavior detection scheme was proposed in P 2 P file-sharing system. It solved {{the problems in}} computing trust value only by past performances and choosing <b>service</b> <b>nodes</b> improperly. It took real-time behavior detection both in trust computing and service choosing, improving {{the accuracy of the}} trust value and the rationality in <b>service</b> <b>nodes</b> choosing. The experimental results proved the advantage of this scheme...|$|R
50|$|In {{queueing}} theory, {{a discipline}} within the mathematical theory of probability, the backpressure routing algorithm {{is a method}} for directing traffic around a queueing network that achieves maximum network throughput, which is established using concepts of Lyapunov drift. Backpressure routing considers the situation where each job can visit multiple service nodes in the network. It {{is an extension of}} max-weight scheduling where rather each job visits only a single <b>service</b> <b>node.</b>|$|E
50|$|In {{discrete}} time networks {{where there}} is a constraint on which service nodes can be active at any time, the max-weight scheduling algorithm chooses a service policy to give optimal throughput in the case that each job visits only a single <b>service</b> <b>node.</b> In the more general case where jobs can visit more than one node, backpressure routing gives optimal throughput. A network scheduler must choose a queuing algorithm, which affects the characteristics of the larger network.|$|E
50|$|SUNMOS uses a single-tasking kernel {{and does}} not provide demand paging. It takes control of all nodes in the {{distributed}} system. Once an application is loaded and running, it can manage all the available memory on a node and use the full resources provided by the hardware. Applications are started and controlled from a process called yod that runs on the host node. Yod runs on a Sun frontend for the nCUBE 2, and on a <b>service</b> <b>node</b> on the Intel Paragon.|$|E
5000|$|Decision Support node. This node {{allows the}} Program to invoke {{business}} rules {{that run on}} a component of IBM Decision Server that is provided with the Program. Use of this component is supported only via Decision <b>Service</b> <b>nodes.</b> The Program license provides entitlement for the Licensee {{to make use of}} Decision <b>Service</b> <b>nodes</b> for development and functional test uses. Refer to the IBM Integration Bus License Information text for details about the program-unique terms.|$|R
40|$|Abstract—A {{requester}} <b>node</b> {{requesting a}} <b>service</b> in a {{peer to peer}} network transmits a request to a <b>service</b> provider <b>node.</b> The request may include a communication history of the requester node identifying other nodes with which the requester node has previously communicated. The <b>service</b> provider <b>node</b> authenticates the requester node based on the communication history. The <b>service</b> provider <b>node</b> may ask other nodes with which the requester node has communicated for evaluation of the requester node. The other nodes may calculate a trust metric of the requester node and provide this metric to the <b>service</b> provider <b>node.</b> The <b>service</b> provider <b>node</b> may use this trust metric in combination with a similarity calculation of the requester <b>node</b> and the <b>service</b> provider <b>node</b> to make a determination whether the requester node is to be authenticated. The <b>service</b> provider <b>node</b> may evaluate the requester node and store the evaluation in its communication history. Keywords-p 2 p, network security, trust model I...|$|R
50|$|For the fork-join queue to {{be stable}} the input rate must be {{strictly}} less than {{sum of the}} service rates at the <b>service</b> <b>nodes.</b>|$|R
5000|$|To reduce {{transmission}} overhead, PRIME uses dynamic addresses {{to address}} nodes in a subnetwork. The addressing scheme resembles the tree {{structure of the}} subnetwork and consists of local switch id, local node id and local connection id. Routes are established during <b>service</b> <b>node</b> registration. PRIME makes use of address structure for packet routing, which reduces state information needed by service nodes. Base node and service nodes monitor network attachment based on periodic exchanged control messages, so called [...] "keep alive messages".|$|E
50|$|The CX1000 scale-out cluster {{computing}} {{group of}} systems {{consists of the}} CX1000 Blade Enclosure, CX1000-C compute Node, CX1000-G GPU Node and CX1000-HN Management Node. Unlike the CX1000-SM and CX1000-SC nodes, these nodes cannot be used for scale-up SMP, as they were designed without a cache-coherency capability. The CX1000-C and CX1000-G nodes both have blade form factors, and the CX1000-HN node is a rackmount 2U Server. The CX1000-HN is intended to act as the head (<b>service)</b> <b>node</b> in an HPC cluster, with CX1000-C and/or CX1000-G compute nodes.|$|E
50|$|Request routing directs client {{requests}} {{to the content}} source best able to serve the request. This may involve directing a client request to the <b>service</b> <b>node</b> that is closest to the client, or to {{the one with the}} most capacity. A variety of algorithms are used to route the request. These include Global Server Load Balancing, DNS-based request routing, Dynamic metafile generation, HTML rewriting, and anycasting. Proximity—choosing the closest service node—is estimated using a variety of techniques including reactive probing, proactive probing, and connection monitoring.|$|E
50|$|The {{system also}} used the Chinese made FeiTeng-1000 central {{processing}} unit. The FeiTeng-1000 processor is used both on <b>service</b> <b>nodes</b> and to enhance the system interconnect.|$|R
40|$|We present {{versatile}} anycast, {{which allows}} a service {{running on a}} varying collection of nodes scattered over a wide-area network to present itself to the clients as one running on a single node. Providing a single logical address enables the client-side software to preserve the traditional service access model based on single access points. At the same time, the dynamic composition of anycast groups implemented by versatile anycast enables the server-side service infrastructure to evolve and adapt to changing network conditions. We implement versatile anycast using Mobile IPv 6, which decouples the logical addresses of mobile nodes from their physical location. We exploit that decoupling to implement logical service addresses that are not bound to any physical nodes, and employ standard MIPv 6 mechanisms to dynamically map each such address onto individual <b>service</b> <b>nodes.</b> Our solution enables a service to transparently hand off clients among the <b>service</b> <b>nodes</b> at the network level while preserving optimal routing between the clients and the <b>service</b> <b>nodes.</b> We demonstrate that the overhead of versatile anycasting is very low. In particular, the client-perceived handoff time is {{shown to be a}} linear function of the latencies among the client and the <b>service</b> <b>nodes</b> participating in the handoff. ...|$|R
40|$|To {{reduce the}} user's {{cognitive}} load and {{make sense of}} complex interlinked service data for realizing advanced service application, an approach to Service Semantic Link Network (S-SLN) navigation was proposed. S emantic based g raph m ining t echnology was employed as an effective solution for automatic service navigation. As {{one of the most important}} navigation tools, related <b>service</b> <b>nodes</b> recommendation was mapped as a basic graph mining problem. The closely related <b>service</b> <b>nodes</b> linked by different relations to form a sub-graph of S-SLN, which <b>service</b> <b>nodes</b> and links with different type and weight represent different service scenarios and relationship to the maximum extent such that sub-graph of S-SLN can improve or speed up user’s navigation decisions by providing the most probable related Web service and links which are most likely to be of interest. The experimental results and analysis shows that the proposed approach is efficient, feasible and practical. </span...|$|R
5000|$|In {{queueing}} theory, {{a discipline}} within the mathematical theory of probability, a layered queueing network (or rendezvous network) is a queueing network model where the service time for each job at each <b>service</b> <b>node</b> {{is given by}} the response time of a queueing network (and those service times in turn may also be determined by further nested networks). Resources can be nested and queues form along the nodes of the nesting structure. The nesting structure thus defines [...] "layers" [...] within the queueing model.|$|E
50|$|Until the 2000/2001 timetable, Gößnitz was a {{stop for}} long-distance {{passenger}} traffic. The last long-distance services in Gößnitz were the Interregio 2792 (Munich Hbf-Leipzig Hbf) and the D-Zug 2793 (Leipzig-Munich). Gößnitz station {{is also an}} important hub for east Thuringian and west Saxon passenger services. Portions of regional trains were attached and detached in Gößnitz between December 2002 and June 2014. A portion of Regional-Express service 1, coming from Erfurt, continued via Werdau to Zwickau, while the other portion operated via Meerane to Glauchau. From December 2011, the train continued from Glauchau to Chemnitz and connected the two Saxon centres with the long-distance <b>service</b> <b>node</b> of Erfurt. The service to Zwickau was abandoned as part of the restructuring of regional services {{with the opening of the}} City Tunnel.|$|E
5000|$|In 1990, the {{new head}} office building, known as the [...] "Super Tower", was {{completed}} in Shiba, Tokyo. Additionally, joint-venture agreements were established to manufacture and market digital electronic switching systems and LSIs in China. In 1993 NEC's asynchronous transfer mode (ATM) switching system, the NEAX61 (Nippon Electronic Automatic Exchange) ATM <b>Service</b> <b>Node,</b> went into service in the United States. NEC Europe, Ltd. was established as a holding company for European operations the same year. The NEC C&C Research Laboratories, NEC Europe, Ltd. were opened in Germany in 1994. NEC (China) Co, Ltd. was established as a holding company for Chinese operations in 1996. In 1997 NEC developed 4Gbit DRAM, and their semiconductor group was honored {{with one of the}} first Japan Quality Awards. In 1998, NEC opened the world's most advanced semiconductor R&D facility.|$|E
3000|$|In {{the first}} phase, <b>service</b> <b>nodes</b> are either {{preselected}} (in iPAK[12]), or self-elected with some probability (in SBK[13]) or based on sensors' physical location (in LKE[14]). A [...]...|$|R
50|$|For closed networks, Chow {{showed a}} result to hold for two <b>service</b> <b>nodes,</b> which was later {{generalised}} to {{a cycle of}} queues and to overtake-free paths in Gordon-Newell networks.|$|R
30|$|To {{describe}} the trust degree more accurately, this paper divides nodes into four categories, which are <b>service</b> <b>nodes,</b> feedback nodes, recommendation nodes and managed nodes. In social networks, trust represents {{the level of}} confidence about the reliability and correctness of entity’s behaviors. Service reliability indicates the trustworthiness of <b>service</b> that <b>service</b> <b>nodes</b> provide; feedback effectiveness represents the trustworthiness of feedback that feedback nodes return; recommendation credibility expresses the trustworthiness of recommendation that recommendation nodes give. In this paper, the global trust of the node i, denoted as T_i, is the probability of i being correct. The service reliability is denoted as ST_i; the feedback effectiveness is denoted as FT_i; and the recommendation credibility is denoted as CT_i.|$|R
