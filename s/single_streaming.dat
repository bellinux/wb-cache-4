28|1304|Public
5000|$|... oWOW Radio {{was awarded}} [...] "Best <b>Single</b> <b>Streaming</b> Webcaster" [...] by an {{independent}} panel at the 2015 RAIN Internet Radio Awards in Atlanta, Georgia.|$|E
5000|$|... 27 July 2002 - Helix Universal Server version 9 {{launched}} - {{the first}} universal multi-format streaming server - supporting RealMedia, Windows Media, QuickTime and MPEG-4 from a <b>single</b> <b>streaming</b> media platform operating on Linux, Solaris, HP-UX, Compaq Tru64, FreeBSD, IBM AIX, Windows NT and Windows 2000 OS ...|$|E
5000|$|... 14 April 2010 - Helix Universal Server version 14 {{launched}} supporting universal {{streaming media}} delivery transports including RTMP, RTSP, HTTP Live Streaming, Microsoft Silverlight and HTTP Progressive Download enabling mobile phone OS (Android, Blackberry, iPhone OS 3.0, Symbian, Windows Mobile) and PC OS media client (Flash Media Player, QuickTime, RealPlayer, Windows Media Player) delivery. Helix Universal Server continues to support 3GPP, RealMedia, Windows Media, QuickTime and MPEG-4 from a <b>single</b> <b>streaming</b> media platform operating on Linux (RHEL5), Solaris SPARC, Windows 2003 or Windows 2008 Server OS ...|$|E
5000|$|... #Subtitle level 3: <b>Single</b> {{instruction}} <b>stream</b> <b>single</b> data <b>stream</b> (SISD) ...|$|R
50|$|In computing, SISD (<b>single</b> {{instruction}} <b>stream,</b> <b>single</b> data <b>stream)</b> is {{a computer}} architecture in which a single uni-core processor, executes a <b>single</b> instruction <b>stream,</b> to operate on data stored in a single memory. This corresponds to the von Neumann architecture.|$|R
50|$|Stream-oriented files {{consist of}} a single {{sequence}} of bytes on which programs can map application data however they want. Stream files are the primary file model supported by Unix and Unix-like operating systems and by Windows. DDM defines a <b>single</b> <b>stream</b> file model and a <b>single</b> <b>stream</b> access method.|$|R
50|$|Walt Disney {{operated}} {{studios are}} {{not members of}} DECE, and do not release any of their films with UltraViolet rights. On February 25, 2014 The Walt Disney Company launched a competing digital movie locker system called Disney Movies Anywhere that allows any Disney-branded movie purchased or redeemed at any participating DMA provider to be played using all other DMA providers. DMA providers include iTunes, Vudu, Google Play, Amazon Video, And Microsoft's Movie Store. The VUDU addition, in a way, allows the Ultraviolet content to merge with the Disney content using a <b>single</b> <b>streaming</b> provider. Non-participation in the DECE consortium does not prohibit Disney from releasing films with UltraViolet rights later.|$|E
50|$|Worldwide, {{on the day}} of its release, More Life broke {{streaming}} {{records on}} both Spotify and Apple Music. The tracks of the album achieved a total of 61.3 million streams on Spotify in a single day, breaking the previous record of 56.7 million for ÷ by Ed Sheeran, in early March 2017. On Apple Music, the tracks of the album achieved a total of 89.9 million streams {{on the day of}} release (not including the amount of listeners during the OVO Sound Radio debut of the album on Beats 1), setting the record of most streams of an album in a single day on Apple Music, as well as any <b>single</b> <b>streaming</b> service, and beating Spotify's number by almost 30 million streams.|$|E
50|$|While colloquially, the StorNext File System {{is known}} as 'StorNext', the entire StorNext product is {{actually}} the combination of two technologies: the StorNext File System, and the optional StorNext Storage Manager. The StorNext Storage Manager is a policy based data management system that can copy, migrate and/or archive data from the StorNext File System {{into a variety of}} storage devices in multiple locations. Data can be tiered into disk, a Quantum Lattus object store, a robotic tape library, or even exported into an offline vault. Regardless of where the data resides, it is all maintained in a single namespace. Customers typically use this capability for three use cases. Some media customers use Storage Manager's policy tiering capability to enable the extension of primary disk storage into object storage or very high performance tape. With the introduction of Lattus-M object storage in 2013, Quantum introduced the capability to archive data durably (at greater than 11 9s) on disk, at very high throughput. Each Lattus-M disk controller can support up to 3 Gbit/s of <b>single</b> <b>streaming</b> performance for video or large files; and these controllers can be scaled horizontally to add performance as required. This has made the combination of StorNext and Lattus-M attractive for use cases such as rapid restore of video or motion imagery, or content distribution. Many customers also use Storage Manager to create granular and efficient data protection (as many versions of policy-selected files can be copied to a second data location or media without the need for a time and resource consuming 'file-walker', avoiding the pain of backup). Finally, administrators use Storage Manager as an HSM for migrating data between tiers (particularly to tape) for cost effective archive. Tapes created by Storage Manager can optionally be written in the LTO industry standard format (LTFS) to enable easy interchange.|$|E
40|$|This study {{examines}} differences in cost and recycling performance between single and multi-stream recycling systems in Ontario, Canada. Using panel data from 223 provincial municipalities spanning a ten year period, {{focus is placed}} on analyzing: (a) Are material management costs for municipalities who implement <b>single</b> <b>stream</b> collection less than those that implement multi stream collection? (b) Are recycling rates for <b>single</b> <b>stream</b> municipalities higher than municipalities with multi stream collection? (c) Do municipalities with multi stream collection realize higher revenues {{from the sale of}} recyclable material? The results of the analysis show that while <b>single</b> <b>stream</b> recycling programs recycle more than multi stream programs, they face significantly higher material management costs. This was contrary to the prevailing opinion that <b>single</b> <b>stream</b> recycling is a cheaper alternative to multi-stream recycling. As far as can be ascertained, {{this is one of the}} few studies of its kind to examine the differences in material management costs and recycling performance between single and multi-stream recycling systems. This topic is of increasing importance, as <b>single</b> <b>stream</b> recycling is being touted as preferred waste management option in both Ontario and abroad...|$|R
5000|$|Multiple {{documents}} {{within a}} <b>single</b> <b>stream</b> {{are separated by}} three hyphens (...) [...]|$|R
50|$|Pseudophoxinus maeandricus (Sandıklı spring minnow; Critically endangered) - {{known from}} a <b>single</b> <b>stream.</b>|$|R
5000|$|The {{first use}} of Virtual Orchestra {{technology}} in live performance occurred on February 12, 1987. Christopher Yavelow's opera, Countdown, was performed by the Boston Lyric Opera Company {{under the direction of}} John Balme. The downbeats of Balme's baton were synchronized through a modified Roland SBX80 to the sequencer driving a fully loaded Kurzweil K250 that had been enhanced with some extra proprietary orchestral sounds. The K250 sampler, a virtual orchestra in a box, was hidden behind the curtain, and was so convincing that the audience assumed they were listening to a taped recording of live musicians playing the score. The commission was sponsored by [...] "Opera in the Eighties and Beyond" [...] through Opera America in conjunction with The National Endowment for the Arts. The event was covered by Macworld, Opera News, Personal Publishing, Kurzweil Generation, and the Journal of the Audio Engineering Society, but it received additional publicity through the popular TV show NOVA on which Yavelow demonstrated the [...] "orchestra in a box" [...] with its inventor Ray Kurzweil fielding questions. The following year, Countdown won first prize in the Virginia Opera Society's [...] "New One-Act Operas" [...] competition. The society mounted a full production of the opera in 1988, again, to the accompaniment of Yavelow's virtual orchestra. On December 1, 1994, nearly eight years after its premiere, the Boston Lyric Opera recording of Countdown became the first opera in cyberspace, generating a week of coverage on MSNBC in early 1995. Prevailing technology required segmenting the opera into 16 [...] ".au" [...] files (the mp3 format hadn't been invented yet), with the libretto and notes divided accordingly. However, in 2004, to commemorate of the tenth anniversary of the first internet opera, the composer replaced the original files with a <b>single</b> <b>streaming</b> mp3 of higher quality. Otherwise, the site has remained unchanged since its launch, a monument to the {{first use of}} Virtual Orchestra technology in live performance as well as the first opera on the internet.|$|E
3000|$|In {{order to}} {{determine}} the streaming capacity of a cluster it is necessary to measure the streaming capacity of a <b>single</b> <b>streaming</b> server in the cloud with the test setup described in subsection [...] "Test setup".|$|E
40|$|CAS used in IPTV or DTV has an {{environment}} of sending single type of contents through <b>single</b> <b>streaming.</b> But it can be improved to support users ’ various video applications through <b>single</b> <b>streaming</b> by combining with SVC. For such {{an environment}}, efficiency should be firstly considered, and hierarchical key management methods for billing policy by service levels should be applied. This study aims to look into considerations to apply SVC to CAS and propose SVC encryption in CAS environment. The security of the proposed scheme {{is based on the}} safety of CAS and oneway hash function. If the proposed scheme is applied, scalability can be efficiently provided even in the encrypted contents and it is possible to bill users according to picture quality. In addition, the test results show that SVC contents given by streaming service with th...|$|E
5000|$|... several network packets {{that belong}} to one <b>single</b> <b>stream</b> (e.g. the IP addresses) ...|$|R
5000|$|Set up the world's largest <b>single</b> <b>stream,</b> {{fuel oil}} based Ammonia - Urea plant ...|$|R
50|$|In Flynn's taxonomy, a {{single-core}} superscalar processor {{is classified}} as an SISD processor (<b>Single</b> Instruction <b>stream,</b> <b>Single</b> Data <b>stream),</b> though many superscalar processors support short vector operations and so {{could be classified as}} SIMD (<b>Single</b> Instruction <b>stream,</b> Multiple Data streams). A multi-core superscalar processor {{is classified as}} an MIMD processor (Multiple Instruction streams, Multiple Data streams).|$|R
40|$|Part 3 : PhD Workshop—High-Speed Networks and Network ManagementInternational audienceVideo {{streaming}} {{over the}} Internet {{is becoming increasingly}} popular. Existing streaming systems range from traditional client/server to peer-to-peer-based approaches. However, no <b>single</b> <b>streaming</b> mechanism fits all possible video streaming scenarios. Therefore, this paper proposes a novel adaptive video streaming approach supporting transitions between different mechanisms {{in order to provide}} a stable Quality of Service to streaming clients. Two stages of adaptation are identified and challenges of different transitions are discussed...|$|E
40|$|Abstract. A {{data stream}} is a continuous, huge, fast changing, rapid, {{infinite}} sequence of data elements. The nature of streaming data makes it essential to use online algorithms which require only one scan over {{the data for}} knowledge discovery. In this paper, we propose a new single-pass algorithm, called DSM-FI (Data Stream Mining for Frequent Itemsets), to mine all frequent itemsets over {{the entire history of}} data streams. DSM-FI has three major features, namely <b>single</b> <b>streaming</b> data scan for counting itemsets ’ frequency information, extended prefix-tree-based compact pattern representation, and top-down frequent itemset discovery scheme. Our performance study shows that DSM-FI outperforms the well-known algorithm Lossy Counting in the same streaming environment. ...|$|E
30|$|The data {{partitioning}} {{feature is}} available in the extended profile of the H. 264 standard. Using this feature, three different data sets (A, B, and C) with different importance are generated for each video frame or slice. If the underlying delivery network is able to provide unequal error protection (UEP) or any kind of QoS, each data partition can be served differently, potentially achieving better services than the <b>single</b> <b>streaming</b> case. In effect, the availability of the data partitioning feature allows a network-aware video source to adapt its output to the requirements and services of the underlying delivery mechanism, that is, the 802.11 e WLAN. In this case, the interaction between the network-aware multimedia source and the QoS-enabled delivery layer results in a cross-layer solution with many configurations.|$|E
30|$|The <b>single</b> <b>stream</b> {{performance}} of the new algorithm improved upon the <b>single</b> <b>stream</b> CUDA FFT performance by 91 [*]ns, taking 769 [*]ns per 512 -point FFT. Using four streams the total processing time dropped to 459 [*]ns, an improvement of 75 [*]ns or 14 %, which would enable a throughput of 5.86 [*]Gbps raw, or 3.75 [*]Gbps decoded data rate using a 2 -GPU solution.|$|R
3000|$|... {{states and}} M {{components}} as described above. Then, we generate the <b>single</b> <b>stream</b> sequences using Algorithm 5.|$|R
50|$|<b>Single</b> <b>Stream</b> Transport (SST) was {{specified}} in DisplayPort 1.1a for use between a single Source and Sink Device.|$|R
30|$|Considering {{these many}} factors, Prismatic uses the {{following}} heuristic {{to choose a}} good launch configuration. At runtime, {{the properties of the}} available devices are queried, which includes the maximum number of threads per threadblock, the total amount of shared memory, and the total number of streaming multiprocessors. BlockSize_x is chosen to be either the largest power of two smaller than the number of plane waves or the maximum number of threads per block, whichever is smaller. The total number of threadblocks that can run concurrently on a <b>single</b> <b>streaming</b> multiprocessor is then estimated using BlockSize_x, the limiting number of threads per block, and the limiting number of threadblocks per streaming multiprocessor. The total number of threadblocks across the entire device is then estimated as this number times the total number of streaming multiprocessors, and then the grid dimensions of the launch configuration are set to create three times this many blocks, where the factor of three is a fudge factor that we found produces better results.|$|E
40|$|We {{introduce}} a new tool to solve the large linear systems arising from gradient-domain image processing. Specifically, we develop a streaming multigrid solver, which needs just two sequential passes over out-of-core data. This fast solution is enabled {{by a combination of}} three techniques: (1) use of second-order finite elements (rather than traditional finite differences) to reach sufficient accuracy in a single V-cycle, (2) temporally blocked relaxation, and (3) multi-level streaming to pipeline the restriction and prolongation phases into <b>single</b> <b>streaming</b> passes. A key contribution is the extension of the B-spline finite-element method to be compatible with the forward-difference gradient representation commonly used with images. Our streaming solver is also efficient for inmemory images, due to its fast convergence and excellent cache behavior. Remarkably, it can outperform spatially adaptive solvers that exploit application-specific knowledge. We demonstrate seamless stitching and tone-mapping of gigapixel images in about an hour on a notebook PC. Keywords: out-of-core multigrid solver, B-spline finite elements, Poisson equation, gigapixel images, multi-level streaming. ...|$|E
40|$|Developing stream based {{teaching}} resources utilising increased Internet bandwidth In {{an educational}} environment, {{large amounts of}} time are spent developing teaching and training resources. This is true regardless of creating paperbased resources, such as workbooks, or creating electronic material. In the Communications and Information Technology area, there is an added problem where products {{that are used to}} support the teaching function are continually changing. Screen capture programs assist in this area, but typically are not customised to facilitate ease of use in a teaching environment. An advantage of a screen capture program is the ability to playback material on a computer with a different Operating System that does not have the actual software installed. This paper explores some preliminary work in developing training materials using a new and innovative product that allows for the capture of video, audio and annotations in a <b>single</b> <b>streaming</b> video file suitable for distribution via the Internet, an Intrane...|$|E
5000|$|... #Subtitle level 3: Multiple {{instruction}} <b>streams,</b> <b>single</b> data <b>stream</b> (MISD) ...|$|R
5000|$|... 1962- The {{school was}} among the 6 schools to {{introduce}} 'A' LEVEL (Art) with a <b>single</b> <b>stream</b> of 30 students.|$|R
5000|$|The Single Sequential Scheduler option, {{also known}} as the Primary Control Program (PCP) {{provided}} sequential execution of a <b>single</b> <b>stream</b> of jobs.|$|R
40|$|We {{address the}} problem of {{providing}} support for executing <b>single</b> <b>streaming</b> applications implemented as a pipeline of stages that run on heterogeneous chips comprised of several cores and one on-chip GPU. In this paper, we mainly focus on the API that allows the user to specify the type of parallelism exploited by each pipeline stage running on the multicore CPU, the mapping of the pipeline stages to the devices (GPU or CPU), and the number of active threads. We use a real streaming application as a case of study to illustrate the experimental results that can be obtained with this API. With this example, we evaluate how the different parameter values affect the performance and energy efficiency of a heterogenous on-chip processor (Exynos 5 Octa) that has three different computational cores: a GPU, an ARM Cortex-A 15 quad-core, and an ARM Cortex-A 7 quad-core. Universidad de Málaga. Campus de Excelencia Internacional Andalucía Tech. Proyecto de Excelencia de la Junta de Andalucía P 11 -TIC- 08144...|$|E
40|$|This work {{considers}} {{the problem of}} peer-to-peer video streaming for a critical private web cast, for a medium sized heterogeneous network. The nodes can form an overlay network based on multicast tree at application level. The nodes are assumed to have different bandwidths and reliabilities, with {{a majority of the}} nodes having low bandwidths and low reliability such that they can only receive stream. A simulation model has been implemented to compare the <b>single</b> <b>streaming</b> scheme and Error Resilience schemes with Dual Disjoint Multicast Trees: Stream Replication and Multiple Description Coding (MDC). Simulation results indicate that MDC Error Resilience scheme provides lower average outage, better video quality and network utilization as packet loss and node failure probability increases. The Error Resilience schemes require multiple path diversified, disjoint trees. We discuss the significance of considering heterogeneous bandwidth and node reliability factor for maintaining multiple disjoint trees for Error Resilience. A disjoint tree algorithm Multi Level Dual Disjoint Trees (MLDDT) has been proposed, that further improves the results of MDC Error Resilienc...|$|E
40|$|Cray X 1 Fortran and C/C++ compilers {{provide a}} number of loop transformations, notably {{vectorization}} and multistreaming, in order to exploit the multistreaming processor (MSP) hardware resources and its high memory bandwidth. A Cray X 1 node is composed of four MSPs, which in turn are composed of four <b>single</b> <b>streaming</b> processors (SSP). Each SSP contains a superscalar processing unit and two vector processing units. Compiler vectorization provides loop level parallelization and uses the vector processing hardware. Multistreaming code generation by the compiler permits execution across the SSPs of an MSP on a block of code. In this paper, we analyze overall impact of loop-level compiler optimization on a scientific application called Parallel Ocean Program (POP). POP has been extensively optimized for X 1 by instrumenting the code using X 1 compiler directives. We compare and contrast automatic and manual optimization schemes available on X 1 and analyze {{their impact on the}} code performance and scalability. Our results show that the addition of compiler directives increases the average vector length, thereby improving the single node performance significantly. However, this code scales at a slower rate as the local workload volume decreases and the communication costs increase. ...|$|E
50|$|Hadopyrgus ngataana is a tiny, transparent, and {{critically}} endangered freshwater snail, {{found only in}} a <b>single</b> <b>stream</b> in a cave in New Zealand.|$|R
5000|$|In 2014, idobi Radio {{was awarded}} [...] "Best <b>Single</b> <b>Stream</b> Webcaster" [...] at the 5th Annual RAIN {{internet}} Radio Awards at RAIN Summit Indianapolis.|$|R
40|$|We present simple {{formulae}} for {{the maximum}} capacity of an intersection of a <b>single</b> <b>stream</b> of minor traffic with a <b>single</b> <b>stream</b> of major (priority) traffic. The method allows for both mixed (nonhomogeneous) vehicle types and for inconsistent driver behaviour {{in the minor}} traffic stream. For a realistic class of major headway distributions the capacity is the harmonic mean of the capacities for each individual vehicle type. The formulae include generalisations of Tanner's formula for the cases of inconsistent and/or nonhomogeneous minor vehicles. ...|$|R
