45|823|Public
5000|$|SPL is a <b>search</b> <b>language</b> for machine-generated big data, {{based upon}} Unix Piping and SQL.|$|E
50|$|Loqu8 is a {{software}} company that helps users access and learn information, such as languages and real-time facts. Its products {{are based on}} an augmented learning model that was originally developed using cognitive science and information processing research at Caltech and Stanford University. Users interact with the augmented environment by touching the screen or pointing to content with a mouse. A pop-up window immediately displays contextually-relevant information with links to supporting resources. Behind the scenes, the text surrounding the mouse pointer is evaluated and supplemental information (e.g., web <b>search,</b> <b>language</b> translation, images and speech) is presented. Powered by Loqu8’s iNtution engine, the software promises to help users learn information quickly; a pop-up window is displayed in {{a fraction of a}} second (typically, 100 milliseconds).|$|E
5000|$|Hailed as the 'Father of Online Systems,' Summit's work on DIALOG {{changed the}} {{information}} industry {{and provided a}} foundation for further research and development. Databases such as ERIC, LexisNexis, ProQuest, EBSCOHost among others all owe much to Roger Summit {{and the creation of}} DIALOG. The work with DIALOG would pave the way for today's leading online search engines like Yahoo! and Google. It shaped the growth of the online industry improving search capabilities. Having precise search capabilities was a product of Dialog's added large and consistent formatted databases and the incorporation of a <b>search</b> <b>language</b> (i.e. Boolean phrases). By providing a wider range of databases for users to search through, DIALOG allowed for the ability to multi-task in search. Users could find solutions with one query instead of running a separate search at a later time. Dialog has grown to be the world's most extensive online information retrieval service - offering more than 1.4 billion unique records from more than 900 databases equaling over 15 terabytes of information, used by more than 25,000 corporate clients in 103 countries. Hence, with such enormous success, Dialog launched many different sub-systems for the corporation (DialogSelect, DialogWeb, DialogClassic and many more). The Thompson Reuters Corporation purchased the Information Services sector of The Dialog Corporation in 2000 and in 2008, ProQuest acquired Dialog from Thompson Reuters and launched ProQuest Dialog. [...] Dialog is creating new systems and its growth over the years has challenged the company to continue seeking competitive advances for data retrieval in various fields.|$|E
40|$|Abstract. We {{study the}} expressiveness and {{performance}} of full-text <b>search</b> <b>languages.</b> Our motivation {{is to provide a}} formal basis for comparing full-text <b>search</b> <b>languages</b> and to develop a model for full-text search that can be tightly integrated with structured search. We design a model based on the positions of tokens (words) in the input text, and develop a full-text calculus (FTC) and a full-text algebra (FTA) with equivalent expressive power; this suggests a notion of completeness for full-text <b>search</b> <b>languages.</b> We show that existing full-text languages are incomplete and identify a practical subset of the FTC and FTA that is more powerful than existing languages, but which can still be evaluated efficiently. ...|$|R
50|$|Interface {{features}} included printable {{versions of}} pages, news flashes, blogs, forums, polls, calendars, website <b>searching,</b> <b>language</b> internationalization, and others.|$|R
2500|$|When <b>searching</b> Spanish <b>language</b> Web sites, use {{the subject}} term, [...] "arabismos".|$|R
40|$|In {{this paper}} we {{address the problem of}} {{improving}} accuracy of web search in a smaller, data-limited search market (<b>search</b> <b>language)</b> using behavioral data from a larger, datarich market (assist language). Specifically, we use interlingual classification to infer the <b>search</b> <b>language</b> query’s intent using the assist language click-through data. We use these improved estimates of query intent, along with the query intent based on the <b>search</b> <b>language</b> data, to compute features that encode the similarity between a search result (URL) and the query. These features are subsequently fed into the ranking model to improve the relevance ranking of the documents. Our experimental results on German and French languages show the effectiveness of using assist language behavioral data – especially, when the <b>search</b> <b>language</b> queries have small click-through data. Categories and Subject Descriptor...|$|E
40|$|Overview of the presentation: {{describes}} of the TOL – Technology online conception. The scientific domain: {{electrical engineering}} in the TOL. It describes {{some kinds of}} e-resources: documents; dictionaries, encyclopaedias and lexicons; document collections; information sources. It describes description elements of e-resources: bibliographical description, abstract, <b>search</b> <b>language</b> KABA (with help LCSH of the Library of Congress). Key functions of the TOL: browse – search – help – partner. Methods of the e-resources preparation: in a general way, <b>search</b> <b>language,</b> sources of e-resources, practical guide. Invitation to cooperation...|$|E
40|$|EquiX is a <b>search</b> <b>language</b> for XML that {{combines}} {{the power of}} querying with the simplicity of searching. Requirements for search languages are discussed and it is shown that EquiX meets the necessary criteria. Both a graphical abstract syntax and a formal concrete syntax are presented for EquiX queries. In addition, the semantics is defined...|$|E
40|$|The {{interfaces}} configuration {{for information}} access and retrieval in bibliographic databases, including OPAC, must {{be adapted to}} the new paradigms, especially to the User-Centered Design. However, {{it is very difficult}} to define the usability criteria for different users types. The retrieval systems have been designed for professional’s use. Therefore, the novice users have got difficulties with the terminology, <b>searching</b> <b>language</b> and browse guidelines...|$|R
40|$|We study formal {{properties}} of full-text <b>search</b> <b>languages</b> for XML. Our main contribution {{is the development}} of a formal model for full-text search based on the positions of tokens in XML nodes. Building on this model, we define a full-text calculus based on first-order logic, and a full-text algebra based on the relational algebra. We show that the full-text calculus and algebra are equivalent even in the presence of arbitrary position-based predicates, such as distance predicates and phrase matching. This suggests a notion of completeness for full-text languages. None of the full-text <b>search</b> <b>languages</b> that we are aware of are complete under the above characterization. We propose a new full-text language that is complete and naturally generalizes existing full-text languages. Our formalization in terms of the relational model can also {{serve as the basis for}} (a) joint optimization of structured and full-text search queries, and (b) ranking full-text search query results by leveraging existing work on the probabilistic relational model...|$|R
50|$|The web-based Browsable Corpus at the Max Planck Institute for Psycholinguistics {{allows you}} to browse through IMDI corpora and <b>search</b> for <b>language</b> resources.|$|R
40|$|Abstract. The {{ability to}} model search in a {{constraint}} solver {{can be an}} essential asset for solving combinatorial problems. However, existing infrastructure for defining search heuristics is often inadequate. Either modeling capabilities are extremely limited or users {{are faced with a}} low-level programming language and modeling search becomes unwieldy. As a result, major improvements in performance may remain unexplored. This paper introduces search combinators, a lightweight and solver-independent method that bridges the gap between a conceptually simple <b>search</b> <b>language</b> (highlevel, functional and naturally compositional) and an efficient implementation (low-level, imperative and highly non-modular). Search combinators allow one to define application-tailored strategies from a small set of primitives, resulting in a rich <b>search</b> <b>language</b> for the user and a low implementation cost for the developer of a constraint solver. The paper discusses two modular implementation approaches and shows, by empirical evaluation, that search combinators can be implemented without overhead compared to a native, direct implementation in a constraint solver. ...|$|E
40|$|EquiX is a <b>search</b> <b>language</b> for XML that {{combines}} {{the power of}} querying with the simplicity of searching. Requirements for such languages are discussed and it is shown that EquiX meets the necessary criteria. Both a graph-based abstract syntax and a formal concrete syntax are presented for EquiX queries. In addition, the semantics is defined and an evaluation algorithm is presented. The evaluation algorithm is polynomial under combined complexity...|$|E
40|$|This {{paper is}} {{a survey of}} {{inductive}} rule learning algorithms that use a separate-and-conquer strategy. This strategy {{can be traced back}} to the AQ learning system and still enjoys popularity as can be seen from its frequent use in inductive logic programming systems. We will put this wide variety of algorithms into a single framework and analyze them along three different dimensions, namely their <b>search,</b> <b>language</b> and overfitting avoidance biases...|$|E
40|$|In this paper, we {{describe}} the <b>Search</b> Tree visual <b>language.</b> It is a novel methodology able to support users to build up complex queries to be run on given search engines. For using this visual language, neither parentheses nor precedence rules are needed, nor the specific ability to perform advanced <b>search</b> tasks. The <b>language</b> is proven {{to have the same}} expressive power as the expressions in Sum Of Product form. In order to prove the appropriateness of our proposal, we measured the usability of the proposed querying approach against the traditional YahooTM web <b>search</b> query <b>language.</b> Results show that, even if both the approaches fully support users in terms of efficacy, the <b>Search</b> Tree visual <b>language</b> significantly improves task efficiency, both {{in terms of the number}} of actions performed and the time requested with respect to the advanced search interface...|$|R
50|$|Google {{provides}} a Klingon <b>language</b> <b>search</b> interface.|$|R
40|$|Abstract {{copyright}} UK Data Service {{and data}} collection copyright owner. This is a computer program designed to store and search the text of legal documents {{and to develop a}} small-scale working system which can be used by law students for practical searching in selected areas of statute and case law. The area of case law chosen for study was that relating to unfair dismissal. In the research programme, particular emphasis was placed on the development of a <b>searching</b> <b>language</b> to be used by lawyers and others in the interrogation of legal documents. <br...|$|R
40|$|Datacenter {{networks}} {{provide the}} communication substrate for large parallel computer systems {{that form the}} ecosystem for high performance computing (HPC) systems and modern Internet applications. The design of new datacenter networks is motivated by an array of applications ranging from communication intensive climatology, complex material simulations and molecular dynamics to such Internet applications as Web <b>search,</b> <b>language</b> translation, collaborative Internet applications, streaming video and voice-over-IP. For both Supercomputing and Cloud Computing the network enables distributed applicat...|$|E
40|$|Have {{you ever}} searched a database, {{received}} {{a set of}} answers that were OK but felt that more information was available if only you had the key? Many times a word or a phrase will produce interesting information but not exactly the information that is needed. Efficiently searching databases requires {{the separation of the}} <b>search</b> <b>language</b> and the database content. The {{purpose of this article is}} to discuss some searching skills to help separate the two and increase your precision. This paper will review basic searching, advanced searching, and some special features...|$|E
40|$|Model M is a {{recently}} proposed class based exponential n-gram language model. In this paper, we extend it with personalization features, address the scalability issues present with large data sets, and test its effectiveness on the Bing Mobile voice-search task. We find that Model M by itself reduces both perplexity and word error rate {{compared with a}} conventional model, and that the personalization features produce a further significant improvement. The personalization features provide a very large improvement when the history contains a relevant query; thus the overall effect is gated {{by the number of}} times a user requeries a past request. Index Terms: voice <b>search,</b> <b>language</b> modeling, speech recognition, personalizatio...|$|E
2500|$|Windows <b>Search</b> {{supports}} natural <b>language</b> searches; so {{the user}} can search {{for things like}} [...] "photo taken last week" [...] or [...] "email sent from Dave". However, this is disabled by default. Natural <b>language</b> <b>search</b> expresses the queries in Natural Query Syntax (NQS), which is the natural language equivalent of AQS.|$|R
5000|$|In <b>Search</b> of Lost <b>Language</b> (Hledání ztraceného jazyka), Prague, 1997.|$|R
40|$|The {{last decade}} has {{witnessed}} {{an explosion of}} the availability of and interest in graph structured data. The desire to search and reason over these increasingly massive data collections pushes the boundaries of <b>search</b> <b>languages,</b> from pure keyword search to structure-aware searches in the graph. These phenomena have inspired a rich body of research on query languages, data management and query evaluation techniques for graph data, both from the theoretical and engineering angles. In this tutorial, we present an overview of the progress on graph search queries, focusing specifically on how the theoretical and engineering perspectives meet and together advanced the field...|$|R
40|$|This report summarises the {{findings}} and outputs of the Jisc-funded EnviLOD project. The overall aim of EnviLOD was {{to demonstrate the}} value of using Linked Open Data (LOD) vocabularies {{in the field of}} environmental science. The objectives were: - To develop tools for efficient LOD-based semantic enrichment of unstructured content. - To create and evaluate intuitive user interface methods that hide the complexities of the SPARQL semantic <b>search</b> <b>language.</b> - To use British Library’s Envia tool as a case study in using LOD vocabularies for enhanced information discovery and management. - To engage actively with environmental science researchers and other key stakeholders, in order to derive requirements and evaluate project results...|$|E
40|$|EquiX is a <b>search</b> <b>language</b> for XML that {{combines}} {{the power of}} querying with the simplicity of searching. Requirements for search languages are discussed and it is shown that EquiX meets the necessary criteria. Both a graphical abstract syntax and a formal concrete syntax are presented for EquiX queries. In addition, the semantics is defined. It is shown that EquiX has an evaluation algorithm that is polynomial under combined complexity. EquiX combines pattern matching, quantification and logical expressions to query both the data and meta-data of XML documents. The result of a query in EquiX {{is a set of}} XML documents. A DTD describing the result documents is derived automatically from the query...|$|E
40|$|Supercomputers are {{composed}} of many diverse components, operated {{at a variety of}} scales, and function as a coherent whole. The resulting logs are thus diverse in format, interrelated at multiple scales, and provide evidence of faults across subsystems. When combined with system configuration information, insights on both the downstream effects and upstream causes of events can be determined. However, difficulties in joining the data and expressing complex queries slow the speed at which actionable insights can be obtained. Effectively connecting data experts and data miners faces similar hurdles. This paper describes our experience with applying the Splunk log analysis tool as a vehicle to combine both data, and people. Splunk’s <b>search</b> <b>language,</b> lookups, macros, an...|$|E
5000|$|<b>Search</b> engine query <b>languages,</b> e.g., as used by Google or Bing ...|$|R
50|$|<b>Language</b> <b>search</b> {{engines are}} {{designed}} to leverage modern search technology to conduct searches based on the source words in context {{to ensure that the}} search results match the meaning of the source segments. Like traditional TM tools, the value of a <b>language</b> <b>search</b> engine rests heavily on the Translation Memory repository it searches against.|$|R
5000|$|Full text analyzers and filters {{allowing}} indexing and <b>searches</b> in 16 <b>languages,</b> ...|$|R
40|$|Abstract—Semantic search {{service is}} {{generally}} considered to include text search, audio search, and video search. The annotation of a video {{is crucial to the}} success of video search and retrieval. With the precise annotation of video files and their semantic reasoning, more accurate search results according to the users ’ query intention can be obtained. In this paper, a prototype of such a video annotation system, called Semantic Video Annotation System (SVAS), is presented. SVAS uses a three-level annotation architecture and a semantic video <b>search</b> <b>language</b> called Semantic Query Description Language for Video (SQDL-V). SQDL-V engine based on SVAS is able to return more accurate search results in comparison to the formal video search method. Keywords-semantic search engine; video annotation; semantic reasoning; SVAS; SQDL-V. I...|$|E
40|$|Abstract. Hybrid {{algorithms}} combining {{local and}} systematic search often use nondeterminism in fundamentally different ways. They may {{differ in the}} strategy to explore the search tree and/or in how computation states are represented. This paper presents nondeterministic control structures to express a variety of hybrid search algorithms concisely and elegantly. These nondeterministic abstractions describe the search tree and are compiled in terms of first-class continuations. They are also parameterized by search controllers that are under user control and specify the state representation and the exploration strategy. The resulting <b>search</b> <b>language</b> is thus high-level, flexible, and directly extensible. The abstractions are illustrated on a jobshop scheduling algorithm that combines tabu search and a limited form of backtracking. Preliminary experimental {{results indicate that the}} control structures induce small, often negligible, overheads. ...|$|E
40|$|We {{study the}} expressiveness and {{performance}} of full-text search languages. Our main motivation {{is to provide a}} formal basis for comparing such languages and to develop a model for full-text search that can be tightly integrated with structured search. We develop a formal model for full-text search based on the positions of tokens (words) in the input text, and develop a full-text calculus (FTC) and a full-text algebra (FTA) with equivalent expressive power. This suggests a notion of completeness for full-text search languages and {{can be used as a}} basis for a study of their expressiveness. We show that existing full-text languages are incomplete and develop COMP, a complete full-text <b>search</b> <b>language.</b> We also identify practical subsets of COMP that are more powerful than existing languages, develop efficient query evaluation algorithms for these subsets, and study experimentally their performance. ...|$|E
50|$|Another measure, the Popularity of Programming Language Index {{which tracks}} <b>searches</b> for <b>language</b> {{tutorials}} ranked Scala 15th in July 2016 {{with a small}} upward trend, making it the most popular JVM-based language after Java.|$|R
50|$|Other notable {{features}} of RetrievalWare include distributed search servers, synchronizers for indexing external content management systems and relational databases, a heterogeneous security model, document categorization, real-time document-query matching (profiling), multi-lingual searches (queries containing terms from multiple <b>languages</b> <b>searching</b> for documents containing terms from multiple <b>languages),</b> and cross-lingual <b>searches</b> (queries in one <b>language</b> <b>searching</b> for documents {{in a different}} language).|$|R
5000|$|In <b>Search</b> of the <b>Language,</b> Kheradnameh Hamshahri Magazine, Vol. 16, Tehran, Iran, (July 2007) ...|$|R
