1|8|Public
30|$|In our model, each content (e.g., video) is {{composed}} {{with one or}} many chunks. The content is divided into multiple equal-sized chunks, which is the smallest unit in the transfer model. Multiple chunks can be grouped into a segment in each vehicle. Different contents can contain different number of chunks, each of which owns a chunk identifier. Based on this, content retrieval can be disposed by using of a sequence of chunk identifier or <b>segment</b> <b>identifier.</b>|$|E
3000|$|Generate {{feature value}} <b>segments</b> <b>identifier</b> number for every feature. The globe feature {{distribution}} is segmented by the intercept of feature i of server 1. We calculate how many segments {{are there in}} the left of feature i of server 1 : [...]...|$|R
40|$|The current {{specification}} of the Segment Routing (SR) architecture requires enhancements to the intra-domain routing protocols (e. g. OSPF and IS-IS) {{so that the}} nodes can advertise the <b>Segment</b> <b>Identifiers</b> (SIDs). We propose a simpler solution called PMSR (Poor Man's Segment Routing), that does not require any enhancement to routing protocol. We compare the procedures of PMSR with traditional SR, showing that PMSR can reduce the operation and management complexity. We analyze the set of use cases in the current SR drafts and we claim that PMSR can support {{the large majority of}} them. Thanks to the drastic simplification of the Control Plane, {{we have been able to}} develop an Open Source prototype of PMSR. In the second part of the paper, we consider a Traffic Engineering use case, starting from a traditional flow assignment optimization problem which allocates hop-by-hop paths to flows. We propose a SR path assignment algorithm and prove that it is optimal with respect to the number of segments allocated to a flow. Comment: September 2015 - Paper accepted to the Mini-conference track of NOMS 201...|$|R
40|$|This paper {{demonstrates}} the performance advantages {{of one such}} data-driven approach to tracking highly maneuverable targets with unknown behavior: the <b>segmenting</b> track <b>identifier</b> (STI), first introduced by Linder [1]. The STI's advantages are demonstrated by comparison against Kalman and extended Kalman filters (EKFs) for the tracking of freeswimming fish. Additionally, {{an extension of the}} STI algorithm is presented, which enables its use in the common data association frameworks for multiple target tracking, and an STI-based joint probabilistic data association filter (STIJPDAF) is developed as a specific example. The effectiveness of the STIJPDAF is demonstrated using simulations and empirical results from fish-tracking experiment...|$|R
40|$|The <b>Segmenting</b> Track <b>Identifier</b> (STI) is {{introduced}} {{as a new}} methodology to tracking highly maneuvering targets. This non-Bayesian approach dynamically partitions a target track into a sequence of track segments, making hard estimates of when the target’s maneuvering mode transitions occur, and then estimates {{the parameters of the}} target model for each segment. STI is compared to two VS IMM algorithms through simulations, where it is shown to have a three fold performance advantage in median absolute turn rate estimation errors, as well as better position estimation for very highly maneuvering targets. STI performance is also shown to increase substantially if small delays in output can be tolerated...|$|R
40|$|In this paper, a rapid {{resynchronization}} method using intent logs {{is suggested}} for replication In-memory databases supporting mobile communication applications. Both the <b>identifiers</b> of unsynchronized <b>segments</b> and the <b>identifiers</b> {{of the slaves}} who have missed the updates in the segments are recorded in the intent logs. When receiving a resynchronization request from a slave, the master will scan the intent logs to find the unsynchronized segments for the salve, and then send the segments gotten directly from its memory to the slave. The performance results shown the intent logs method can reduce resynchronization time than methods using transaction logs. 1...|$|R
50|$|Pivotal's Greenplum {{database}} product uses {{massively parallel}} processing (MPP) techniques. Each computer cluster {{consists of a}} master node, standby master node, and segment nodes.All of the data resides on the segment nodes and the catalog information is stored in the master nodes. Segment nodes run one or more segments, which are modified PostgreSQL database instances and are assigned a content identifier. For each table the data is divided among the segment nodes based on the distribution column keys specified by the user in the data definition language. For each <b>segment</b> content <b>identifier</b> there is both a primary segment and mirror segment which are not running on the same physical host. When a query enters the master node, it is parsed, planned and dispatched {{to all of the}} segments to execute the query plan and either return the requested data or insert the result of the query into a database table.The Structured Query Language, version SQL:2003, is used to present queries to the system. Transaction semantics comply with constraints known as ACID.|$|R
40|$|Abstract—The {{fine scale}} {{swimming}} behavior of fish {{can now be}} studied because {{of the development of}} sophisticated measurement devices such as multibeam sonar and stereo video systems. However, even with these sensors, improved methods are still required to generate quality estimates of swimming speeds and turn rates. Biologist have commonly relied on point-wise differentiation of noisy position measurements, while engineers have focused on Bayesian algorithms to track underwater vehicles. A comparative evaluation of the performance of these tracking algorithms for the analysis of fine scale behavior of fish was performed using a data set of 100 fish track tracks recorded simultaneously with a multibeam sonar and a stereo video camera system. The <b>Segmenting</b> Track <b>Identifier,</b> a non-Bayesian curve fitting and segmenting tracker, is shown to be most effective for tracking the unpredictable and complex horizontal motion of fish, while a Kalman smoother using a constant-velocity model is shown to be most effective for tracking the more predictable and piecewise linear vertical motion of fish. Both are shown to be more effective than point-wise differentiation. Criteria for selecting an appropriate algorithm for a given motion study are provide...|$|R
40|$|Tracking {{of highly}} {{maneuvering}} targets with unknown behavior {{is a difficult}} problem in sequential state estimation. The performance of predictive-model-based Bayesian state estimators deteriorates quickly when their models are no longer accurate or their process not. se is large. A data-driven approach to tracking, the <b>segmenting</b> track <b>identifier</b> (STI), is presented as an algorithm that operates well in environments where the measurement system is well understood but target motion is either or both highly unpredictable or poorly characterized. The STI achieves improved state estimates by the least-squares fitting of a motion model to a segment of data that has been partitioned from the total track such that it represents a single maneuver. Real-world STI tracking performance is demonstrated using sonar data collected from free-swimming fish, where the STI is shown to be effective at tracking highly maneuvering targets while relatively insensitive to its tuning parameters. Additionally, {{an extension of the}} STI to. allow its use in the most common multiple target and cluttered environment data association frameworks is presented, and an STI-based joint probabilistic data association filter (STIJPDAF) is derived as a specific example. The STIJPDAF is shown by simulation to be effective at tracking a single fish in clutter and through empirical results from video data to be effective at simultaneously tracking multiple free-swimming fish...|$|R

