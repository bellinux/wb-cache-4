16|68|Public
25|$|In the {{marketing}} of the Newton/Notepad/MessagePad PDA (starting in 1992), Apple used Gill Sans instead of the regular Apple Garamond. Gill Sans Regular {{was used in the}} logo, for the model name on the computer, on the keyboard and in advertisement materials, though it was not used as a <b>screen</b> <b>font</b> (except as part of the Newton logo).|$|E
50|$|All Mac version can't use outline font if {{not have}} screen font; {{no problem for}} Type 1 fonts because have <b>screen</b> <b>font</b> for each style (italic, bold, heavy, etc.) but TrueType fonts only have one <b>screen</b> <b>font</b> for main style. Windows version can use any Windows font.|$|E
5000|$|LCD <b>screen</b> <b>font</b> {{is smaller}} and shows green {{messages}} (e.g.: Welcome to SBS Transit) instead of yellow-green in its older counterparts.|$|E
50|$|The fonts were {{incorporated}} as <b>screen</b> <b>fonts</b> in themes for the Blackbox and Fluxbox window managers.|$|R
50|$|Fonts are {{designed}} and created using font editors. Fonts {{specifically designed for}} the computer screen and not printing are known as <b>screen</b> <b>fonts.</b>|$|R
50|$|Corona Portable PC Model PPC-400, {{arguably the}} most notable Corona computer, was {{introduced}} in 1984. The PPC-400 was remarkable for its elegant and clear <b>screen</b> <b>fonts.</b> The desktop version was the PC-400.|$|R
50|$|PC <b>Screen</b> <b>Font</b> (PSF) is a {{bitmap font}} format {{currently}} {{employed by the}} Linux kernel for console fonts. Documentation of the PSF file format can be found within the source code of the Linux Kernel.the format can be found here with University Eindhoven.|$|E
50|$|Tahoma was {{the default}} <b>screen</b> <b>font</b> used by Windows 2000, Windows XP, and Windows Server 2003 (replacing MS Sans Serif) {{and was also}} used for Skype and Sega's Dreamcast {{packaging}} and promotional material. Bundled in the font library of Windows, the typeface was widely used {{as an alternative to}} Arial.|$|E
50|$|The Apple III is {{the first}} Apple product to allow the user to choose both a <b>screen</b> <b>font</b> and a {{keyboard}} layout: either QWERTY or Dvorak. These choices can not be changed while programs were running, unlike the Apple IIc, which has a keyboard switch directly above the keyboard, allowing switching on the fly.|$|E
50|$|In 1988, the X Consortium adopted BDF 2.1 as a {{standard}} for X Window <b>screen</b> <b>fonts,</b> but X Windows has largely moved to other font standards such as PCF, Opentype, and Truetype.|$|R
5000|$|Heights: 2,5 mm, 3,5 mm, 5,0 mm, 7,0 mm (stroke {{thickness}} (lineweight) {{should be}} 0.1 {{of the character}} height).Font styles: [...] "Romans.shx - Romantic Simplex", [...] "ISOCPEUR.ttf". Exceptional use of <b>screen</b> <b>fonts</b> (arial, Times New Roman etc.).|$|R
5000|$|According to the Type Directors Club, [...] "Carter & Cone have {{produced}} types on commission for Apple, Microsoft (the <b>screen</b> <b>fonts</b> Verdana and Georgia), Time, Newsweek, Wired, U.S. News & World Report, Sports Illustrated, The Washington Post, and the Walker Art Center." ...|$|R
50|$|In the {{marketing}} of the Newton/Notepad/MessagePad PDA (starting in 1992), Apple used Gill Sans instead of the regular Apple Garamond. Gill Sans Regular {{was used in the}} logo, for the model name on the computer, on the keyboard and in advertisement materials, though it was not used as a <b>screen</b> <b>font</b> (except as part of the Newton logo).|$|E
5000|$|Speaking {{about the}} topic in 2013, Carter said [...] "Ever since there was that big ruckus about the IKEA catalog {{changing}} from Futura to Verdana, which I {{had nothing to do}} with and didn’t even know about, people ask me about that everywhere I go. I give a talk about something historical and then at the end someone will get up and say: “I started a petition to go back to Futura. You’re a villain!” You get blamed for something you {{had nothing to do with}}. There’s a strange misunderstanding. A friendly guy came up to me at a conference recently and said: I signed that petition to go back to Futura. So I asked: what caused you to do that? And he said, well, Verdana is a <b>screen</b> <b>font.</b> You mustn’t use it in print. So I said: OK, well, so you open the IKEA catalog, it’s set in Verdana, with the big prices and everything… how do you tell it’s a <b>screen</b> <b>font?</b> What is it about Verdana that says: this is a <b>screen</b> <b>font?</b> He had no idea. He just knew it because he’d been told. There are many people who make judgments without really understanding what the typographic issues are. Students are interesting — they’ll say things to me like: my professor told me I cannot use Verdana and Georgia in print because they’re screen fonts, but I tried it and it looks perfectly all right. And I can only say: 'Thank you! Go ahead!'" ...|$|E
5000|$|Although it was {{designed}} primarily as a <b>screen</b> <b>font,</b> Lucida Grande/Sans also appears frequently in print, due {{at least in part}} to the ubiquity of Mac platform (and thus the typeface) in professional-grade desktop publishing. The Getty-Dubay Italic Handwriting Series of penmanship workbooks in particular is typeset primarily in a specially modified version of Lucida Sans (with a cursive lowercase [...] "y"), as its monoline italic bears a close resemblance to the form of writing that the program teaches.|$|E
40|$|Outlines are {{becoming}} the standard way of storing character fonts. In {{the late seventies}} and early eighties, only fonts for photocomposers were stored by their outline description. <b>Screen</b> <b>fonts</b> and printer fonts were generally stored in bitmap form. The advent of resolution independent page description language...|$|R
5000|$|Christ Church, Chalford, near Stroud (reordering and furnishings, {{including}} lectern, <b>screen,</b> panelling, <b>font,</b> c. 1934-7) ...|$|R
5000|$|Glyphs [...] "•", [...] "◦" [...] {{and their}} {{reversed}} variants [...] "◘", [...] "◙" [...] became available in text mode since early IBM PCs with MDA-CGA-EGA graphic adapters, because built-in <b>screen</b> <b>fonts</b> contained such forms at code points 7-10. These were not true characters because such points {{belong to the}} C0 control codes range; therefore, these glyphs required a special way {{to be placed on}} the screen (see code page 437 for discussion).|$|R
50|$|As of 2013, {{there are}} several widely {{published}} fonts able to support Javanese, ANSI-based Hanacaraka/Pallawa by Teguh Budi Sayoga, Adjisaka by Sudarto HS/Ki Demang Sokowanten, JG Aksara Jawa by Jason Glavy, Carakan Anyar by Pavkar Dukunov, and Tuladha Jejeg by R.S. Wihananto, {{which is based on}} Graphite (SIL) smart font technology. Other fonts with limited publishing includes Surakarta made by Matthew Arciniega in 1992 for Mac's <b>screen</b> <b>font,</b> and Tjarakan developed by AGFA Monotype around 2000. There is also a symbol-based font called Aturra developed by Aditya Bayu in 2012-2013.In 2014, Google introduced Noto Sans Javanese as part of its Noto font series to support all the world's languages.|$|E
50|$|NLQ {{became a}} {{standard}} feature on all dot-matrix printers. While NLQ was well {{received in the}} IBM PC market, the Apple Macintosh market did not use NLQ mode at all, as it did not rely on the printer's own fonts. Mac word-processing applications used fonts stored in the computer. For non-PostScript (raster) printers, the final raster image was produced by the computer {{and sent to the}} printer, which meant dot-matrix printers on the Mac platform exclusively used raster ("graphics") printing mode. For near-letter-quality output, the Mac would simply double the resolution used by the printer, to 144 dpi, and use a <b>screen</b> <b>font</b> twice the point size desired. Since the Mac's screen resolution (72 dpi) was exactly half of the ImageWriter's maximum, this worked perfectly, creating text at exactly the desired size.|$|E
50|$|Microsoft {{publicly}} {{released the}} initial {{version of the}} font on November 1, 1996 {{as part of the}} core fonts for the Web collection, and later bundled it with the Internet Explorer 4.0 supplemental font pack: these releases made it available for installation on both Windows and Macintosh computers. This made it a popular choice for web designers, as pages specifying Georgia as a font choice would display identically on both types if users installed the core fonts package (or later Internet Explorer), simplifying development and testing. Its creators also produced at the same time Verdana, the first Microsoft sans serif <b>screen</b> <b>font,</b> for the same purposes. Some early public releases of Georgia included number designs between upper and lower-case, similar to those later released with Miller. Carter was asked by Robert Norton, Microsoft's type director, to change these to text, a decision Carter later considered an improvement.|$|E
50|$|Some Old Devon Churches, Their Rood <b>Screens,</b> Pulpits, <b>Fonts,</b> Etc., 3 Vols., London: Vol 1, 1908, Index http://www.wissensdrang.com/stabb000.htm#INDEX; Vol.2, 1911; Vol.3, 1916.|$|R
50|$|The {{original}} ATM {{was created}} for the Apple Macintosh computer platform to scale PostScript Type 1 fonts for the computer monitor, and for printing to non-PostScript printers. Mac Type 1 <b>fonts</b> come with <b>screen</b> <b>fonts</b> set to display at certain point sizes only. In Macintosh operating systems prior to Mac OS X, Type 1 fonts set at other sizes would appear jagged on the monitor. ATM allowed Type 1 fonts to appear smooth at any point size, and to print well to non-PostScript devices.|$|R
50|$|This was {{the first}} version of Plus! and had an initial cost of US$ 49.99. It {{included}} Space Cadet Pinball, the Internet Jumpstart Kit (which was the introduction of Internet Explorer 1.0), DriveSpace 3 and Compression Agent disk compression utilities, the initial release of theme support along with a set of 12 themes, dial-up networking server, dial-up scripting tool, and the graphical improvements such as anti-aliased <b>screen</b> <b>fonts,</b> full-window drag, the ability to stretch or shrink the wallpaper to fit the screen and highcolor icons.|$|R
40|$|Bitstream Vera was {{designed}} by Jim Lyles of Bitstream, Inc., {{in cooperation with the}} Gnome Foundation as a high quality scalable free font for use with free open-source software [4]. The Bitstream Vera family includes serif, sans serif, and monospaced fonts, 1 and all three fonts have normal, oblique, bold, and bold oblique faces. Bitstream Vera is primarily intended as a <b>screen</b> <b>font</b> (though it also works wel...|$|E
40|$|Abstract: The {{objective}} of this work was to classify the factors that may generate a risk of asthenopia among the researchers of the ITCJ, {{as a result of}} reading with VDT, thanks to the work of a focal team. A descriptive study was done. Twelve research professors participated: their age ranking between 25 to 55 years. The methodology used was of quality and participation nature (focusing on emic). The following activities were carried out: brainstorming from an investigation question, ranking and classifying the information, analyzing and interpreting data and determining the categories. The research participation techniques used were brainstorming and focal group. The risk factors identified by the focal team were: screen brightness, exposition time, lighting, type of monitor, size of <b>screen,</b> <b>font</b> type, font size, reader posture, colors used, quality of text printing, human factors and amicable software. The proposed categories by the participants were: equipment, material, environment and people. The main conclusion unfolds the rescuing of the strength displayed by the participation techniques in the investigations towards explaining any problem, and the abundance of knowledge of the group of people. In this work, we have accomplished the classification of factors that cause visual problems, by the general consensus of th...|$|E
40|$|The {{electronic}} {{health record}} (EHR) {{is an important}} part of the effort to improve health care and reduce costs in the United States. Primary care providers, among the largest group of caregivers in the nation, often experience difficulty with implementation and utilization of EHRs. Efforts to enhance the provider 2 ̆ 7 s effectiveness in the use of the EHR should result in improved patient outcomes as well as decreasing the overall cost of health care. Guided by the diffusion of innovation theory, this project was initiated to develop a plan for improved usage of the EHR in a primary care setting. A survey and observations were used to better understand how the providers and staff were using the EHR. Observations and a survey of 11 participants were completed. The observations utilizing a mock patient revealed issues related to the usability of screen information, information availability, and user preference for documentation. The mock patient scenario took 25 - 35 minutes, on average, to complete. All participants stated they had stayed late to input information on actual clinic patients or to clarify their documentation. The same 11 participants completed the Primary Care Information Project (PCIP) Post-Electronic Health Record Implementation: Survey of Providers responses. Descriptive statistics were used to analyze the results. Most participants indicated that the <b>screen</b> <b>font</b> was difficult to read (72. 7...|$|E
50|$|TrueType outline fonts. Up to this point, all fonts on the Macintosh were bitmapped, or {{a set of}} bitmapped <b>screen</b> <b>fonts</b> {{paired with}} outline PostScript printer fonts; TrueType {{for the first time}} offered a single font format that scaled to any size on screen and on paper. This {{technology}} was recognized as being so important that a TrueType extension for System 6 was also released, along with an updated Font/DA Mover capable of installing these new kinds of fonts into the System 6 System file.|$|R
5000|$|... {{interesting}} fittings {{include a}} good <b>font,</b> <b>screens</b> and memorial brass.|$|R
25|$|Volapuk and Translit {{have been}} in use {{since the early days}} of the Internet to write e-mail {{messages}} and other texts in Russian where the support of Cyrillic fonts was limited: either the sender did not have a keyboard with Cyrillic letters or the receiver did not necessarily have Cyrillic <b>screen</b> <b>fonts.</b> In the early days, the situation was aggravated by a number of mutually incompatible computer encodings for the Cyrillic script, so that the sender and receiver were not guaranteed to have the same one. Also, the 7-bit character encoding of the early days was an additional hindrance.|$|R
40|$|The {{problem with}} e-texts {{are related to}} the way texts are {{displayed}} on a screen, with multiple and different aspects that affect legibility, making readers prefer to read a paper format rather than e-resources. This research describes the factors that affect the legibility of online texts aimed at obtaining {{a better understanding of the}} usability of electronic Arabic texts for learning purposes within the field of electronic reading; mainly reading Arabic texts for students aged 9 to 13. This study sets out three particular aims: (1) building a reading strategy for Arabic schoolbook in both formats electronic and paper format based on users’ cognitive and behavioural processes; (2) defining the influence of three typographical variables that affect reading Arabic texts on a <b>screen</b> (<b>font</b> size, font-type and line length); and (3) studying the efficiency of reading Arabic texts and the related factors impacting the efficiency of reading and comprehension. Based on the nature of the research questions and objectives, positivism and phenomenology are adopted as the underlying philosophy for this research. The empirical research was divided into three phases; the first phase focused on collecting data about using the internet among students in primary schools by means of a questionnaire. This has helped in the selection of samples and determined the extent of the students’ reluctance to read from a screen. The second phase was to investigate the reading process of school book in two formats [paper and electronic format] to build reading model based on users’ cognitive and behavioural processes. The third phase was to examine the factors that affect negatively the usability of electronic texts by examining three issues: font size [10, 14, 16 and 18], font type [Arabic traditional, Arial, Times New Roman, Simplified Arabic, and Courier New], and line length [single column and double columns]. Observation was applied as a tool to collect the data. The study has made a significant contribution to the understanding of electronic reading of Arabic language. This contribution addressed five aspects: (1) Two models of reading process for schoolbook using Arabic language were built according to users’ interaction with the school textbook in two formats (electronic and paper). These models will not only help define the interaction amongst users and e-books, but will also help designers to understand user behaviour of e-books and thereby to establish the most appropriate functions/features when building an e-book interface. (2) Identify the optimal font size for reading an Arabic script from screen by children aged 9 to 13. (3) Based on collecting data from experiments (2) and (3) and comparing this date with other researches that have done in the same field, new model explains the interaction between three topographical variables [font size, font type and line length] and their relationships with independent variables were provided. (4) Test a new display technique to improve the legibility of reading Arabic online texts by using colour to increase the ability to focus vision when moving from one line to another so as to improve the screen display. And (5) according to quantitative and qualitative several of the rules were recommended for designers and educators to follow when designing and presenting Arabic text on screen. On the other hand, some recommendations for future research have been derived from this thesis, such as the following. (1) Investigating the effect of the colour factor on improving the legibility of Arabic texts on screen for children, e. g. using different colours to distinguish between dots and vowels. (2) Exploring and developing an e-reading model based on all the factors recorded in the empirical studies in the reading field which will lead to building a theory on e- reading. (3) Investigating the influence of a variable effect reading process and the variables that have a positive or negative impact on it. (4) Applying a model that used colour to increase the ability to focus using different age-range and type of information such as journals or books...|$|E
50|$|The chancel <b>screen,</b> the <b>font</b> {{cover and}} {{the cross and}} candlesticks on the altar are the work of George Bainbridge Reynolds, while the rood {{is the work of}} an unknown artist from Oberammergau.|$|R
50|$|Using capture/playback worked {{quite well}} in the CLI world but there are {{significant}} problems when one tries to implement it on a GUI-based system. The most obvious problem one finds is that the screen in a GUI system may look different while {{the state of the}} underlying system is the same, making automated validation extremely difficult. This is because a GUI allows graphical objects to vary in appearance and placement on the <b>screen.</b> <b>Fonts</b> may be different, window colors or sizes may vary but the system output is basically the same. This would be obvious to a user, but not obvious to an automated validation system.|$|R
5000|$|... #Caption: The {{main title}} <b>screen,</b> with a <b>font</b> {{similar to that}} of Full House ...|$|R
50|$|Showself Launcher is an Android {{launcher}} {{that can}} be used to replace the existing home screen, start other applications, and host widgets. The application enables the user to personalize settings with themes, live wallpapers, lock <b>screens,</b> and <b>fonts.</b>|$|R
5|$|The initial {{releases}} of System 6 were unstable; many third party software developers {{did not receive}} copies before its release, resulting in widespread compatibility problems. At first, many common software programs such as Microsoft Excel, Microsoft Works and 4th Dimension were not fully compatible with System 6. There were also software bugs in the Color Manager, Script Manager, and Sound Manager extension files. Apple announced that 66 bugs were fixed when the 6.0.1 update was released in September 1988. However, a major bug involving text spacing of <b>screen</b> <b>fonts</b> was found in 6.0.1 after distribution began. This led to the quick release of 6.0.2, which solved this problem. Some customers waited longer until moving to System 6 because of the poor reputation already gained.|$|R
