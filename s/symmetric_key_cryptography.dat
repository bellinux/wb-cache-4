191|2785|Public
25|$|In the Microsoft Windows {{family of}} {{operating}} systems EFS enables this measure, although on NTFS drives only, and does so {{using a combination}} of public key cryptography and <b>symmetric</b> <b>key</b> <b>cryptography</b> to make decrypting the files extremely difficult without the correct key.|$|E
50|$|Kerberos {{builds on}} <b>symmetric</b> <b>key</b> <b>cryptography</b> and {{requires}} a trusted third party, and optionally may use public-key cryptography during certain phases of authentication. Kerberos uses UDP port 88 by default.|$|E
50|$|CryptoAPI {{supports}} both public-key and <b>symmetric</b> <b>key</b> <b>cryptography,</b> though persistent symmetric {{keys are}} not supported. It includes functionality for encrypting and decrypting data and for authentication using digital certificates. It {{also includes a}} cryptographically secure pseudorandom number generator function CryptGenRandom.|$|E
5000|$|... <b>symmetric</b> <b>key</b> {{algorithms}} (Private-key <b>cryptography),</b> {{where the}} same key {{is used for}} encryption and decryption, and ...|$|R
50|$|The {{services}} are offered {{through the use}} of end-to-end cryptography between an originator and a recipient at the application layer. Asymmetric (public <b>key)</b> <b>cryptography</b> is used in support of the digital signature service and encryption <b>key</b> management. <b>Symmetric</b> (secret <b>key)</b> <b>cryptography</b> is used in support of the encryption service. The procedures are intended to be compatible {{with a wide range of}} public key management approaches, including both ad hoc and certificate-based schemes. Mechanisms are provided to support many public key management approaches.|$|R
40|$|Secure Programming Cookbook for C and C++ is an {{important}} new resource for developers serious about writing secure code for Unix® (including Linux®) and Windows® environments. This essential code companion covers {{a wide range of}} topics, including safe initialization, access control, input validation, <b>symmetric</b> and public <b>key</b> <b>cryptography,</b> cryptographic hashes and MACs, authentication and key exchange, PKI, random numbers, and anti-tampering...|$|R
50|$|In the Microsoft Windows {{family of}} {{operating}} systems EFS enables this measure, although on NTFS drives only, and does so {{using a combination}} of public key cryptography and <b>symmetric</b> <b>key</b> <b>cryptography</b> to make decrypting the files extremely difficult without the correct key.|$|E
50|$|RSA is a {{relatively}} slow algorithm, {{and because of this}} it is less commonly used to directly encrypt user data. More often, RSA passes encrypted shared keys for <b>symmetric</b> <b>key</b> <b>cryptography</b> which in turn can perform bulk encryption-decryption operations at much higher speed.|$|E
50|$|In <b>symmetric</b> <b>key</b> <b>cryptography,</b> {{both parties}} must possess a secret key which they must {{exchange}} prior to using any encryption. Distribution of secret keys has been problematic until recently, because it involved face-to-face meeting, {{use of a}} trusted courier, or sending the key through an existing encryption channel. The first two are often impractical and always unsafe, while the third depends on {{the security of a}} previous key exchange.|$|E
40|$|The {{security}} of {{wireless sensor networks}} is an active topic of research where both <b>symmetric</b> and asymmetric <b>key</b> <b>cryptography</b> issues have been studied. Due to their computational feasibility on typical sensor nodes, <b>symmetric</b> <b>key</b> algorithms that use the same key to encrypt and decrypt messages have been intensively studied and perfectly deployed in such environment. Because of the wireless sensor’s limited infrastructure, the bottleneck challenge for deploying these algorithms is the key distribution. For the same reason of resources restriction, key distribution mechanisms which are used in traditional wireless networks are not efficient for sensor networks...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. This document defines MIME Object Security Services (MOSS), a protocol that uses the multipart/signed and multipart/encrypted framework [7] to apply digital signature and encryption services to MIME objects. The services are offered {{through the use of}} end-to-end cryptography between an originator and a recipient at the application layer. Asymmetric (public <b>key)</b> <b>cryptography</b> is used in support of the digital signature service and encryption <b>key</b> management. <b>Symmetric</b> (secret <b>key)</b> <b>cryptography</b> is used in support of the encryption service. The procedures are intended to be compatibl...|$|R
40|$|Secure {{communication}} in network environment is primary requirement to access remote resources {{in a controlled}} and efficient way. For validation and authentication in e-banking and e-commerce transactions, digital signatures using public <b>key</b> <b>cryptography</b> is extensively employed. To maintain confidentiality, Digital Envelope, which is {{the combination of the}} encrypted message and signature with the encrypted <b>symmetric</b> <b>key,</b> is also used. This research paper has proposed to develop a hybrid technique using <b>Symmetric</b> & Asymmetric <b>key</b> <b>cryptography.</b> It will also include Message authentication code to maintain integrity of message. Therefore, proposed model will not only help to maintain confidentiality and authentication of message and user but integrity of data too. Java technology has been proposed to validate the performance of proposed model in context of message length, key length, cipher text length and computational time for encryption and decryption...|$|R
50|$|Kerberos is a {{centralized}} network authentication system developed at MIT and {{available as a}} free implementation from MIT but also in many commercial products. It is the default authentication method in Windows 2000 and later. The authentication process itself is {{much more complicated than}} in the previous protocols - Kerberos uses <b>symmetric</b> <b>key</b> <b>cryptography,</b> requires a trusted third party and can use public-key cryptography during certain phases of authentication if need be.|$|E
5000|$|For key {{authentication}} using the traditional <b>symmetric</b> <b>key</b> <b>cryptography,</b> {{this is the}} problem of assuring that there is no man-in-the-middle attacker who is trying to read or spoof the communication. There are various algorithms used now-a-days to prevent such attacks. The most common among the algorithms are Diffie-Hellman key exchange, authentication using Key distribution center, [...] kerberos and Needham-Schroeder protocol. Other methods that can be used include Password-authenticated key agreement protocols etc.|$|E
5000|$|File and Directory {{encryption}} are {{two types}} of encryption that help protect the confidentiality of digital information. [...] Encryption may be used to provide data security at different times (e.g. data in transit, data at rest, etc.) using different means (public key cryptography, <b>symmetric</b> <b>key</b> <b>cryptography,</b> etc.) Similarly, data at rest can also be encrypted using different means as well. Methods for encrypting data at rest include full disk encryption, partition encryption, volume encryption, file system encryption, directory encryption, file encryption, database encryption as well as encryption by tape devices.|$|E
40|$|In this paper, Quaternion Julia set {{is used to}} {{generate}} real-time based <b>symmetric</b> <b>keys</b> for <b>cryptography.</b> The number of iterations, complex number and control value are the determining parameters of dynamically varying quaternion Julia image structure. The considered parameters are initialised in the proposed model of <b>symmetric</b> <b>key</b> generation during the establishment of communication between hosts. The model generates variable length, dynamic, one time usable key from quaternion Julia image to encrypt or decrypt data without involving the exchange of key. The time stamp used during the initialization process makes the quaternion Julia image to be different in real-time. The instantaneous key is generated at the hosts independently in a synchronous fashion to enhance the complexity in cryptanalysis. The proposed model has wide range of applications from low confidential to high confidential data transfer in two party and multi-party scenarios. Key words...|$|R
40|$|Abstract: This paper {{presents}} {{the design and}} implementation of a crypto processor, a special-purpose microprocessor optimized for the execution of cryptography algorithms. This crypto processor {{can be used for}} various security applications such as storage devices, embedded systems, network routers, etc. The crypto processor consists of a 32 -bit RISC processor block and a coprocessor block dedicated to the SEED and triple-DES (data encryption standard) <b>symmetric</b> <b>key</b> crypto (<b>cryptography)</b> algorithms. The crypto processor has been designed and fabricated as a single VLSI chip using 0. 5 m CMOS technology. To test and demonstrate the capabilities of this chip, a custom board providing real-time data security for a data storage device has been developed. Testing results show that the crypto processor operates correctly at a working frequency of 30 MHz and a bandwidth of 240 Mbps 1...|$|R
30|$|Note {{that the}} key K in the example is a <b>symmetric</b> <b>key.</b> While we focus {{primarily}} on protocols involving <b>symmetric</b> <b>keys,</b> our approach can be applied equally well {{in the setting of}} public <b>key</b> <b>cryptography.</b>|$|R
50|$|Provided {{one uses}} {{sufficiently}} large key sizes, the symmetric key cryptographic systems like AES and SNOW 3G are already resistant to attack by a quantum computer. Further, key management systems and protocols that use <b>symmetric</b> <b>key</b> <b>cryptography</b> instead of {{public key cryptography}} like Kerberos and the 3GPP Mobile Network Authentication Structure are also inherently secure against attack by a quantum computer. Given its widespread deployment in the world already, some researchers recommend expanded use of Kerberos-like symmetric key management as an efficient and effective way to get Post Quantum cryptography today.|$|E
40|$|Today's {{cryptanalysis}} on <b>symmetric</b> <b>key</b> <b>cryptography</b> {{is encouraging}} {{the use of}} larger key sizes and complex algorithms to achieve an unbreakable state. However, this leads an increase in computational complexity. This has promoted many researchers to develop high-performance <b>symmetric</b> <b>key</b> <b>cryptography</b> schemes using approaches {{such as the use}} of high-end computing hardware. Peer-to-peer (P 2 P) or enterprise grids are proven as one of the approaches for developing cost-effective high-end computing systems. By utilizing them, one can improve the performance of <b>symmetric</b> <b>key</b> <b>cryptography</b> through parallel execution. This approach makes it attractive for adoption by businesses to secure their documents. In this paper we propose and develop an application for <b>symmetric</b> <b>key</b> <b>cryptography</b> using enterprise grid middleware called Alchemi. An analysis and comparison of its performance is presented along with pointers to future work...|$|E
40|$|Software-based attacks (e. g., malware) pose a big {{threat to}} {{cryptographic}} software {{because they can}} compromise the associated cryptographic keys in their entirety. In this paper, we investigate key-insulated <b>symmetric</b> <b>key</b> <b>cryptography,</b> which can mitigate {{the damage caused by}} repeated attacks against cryptographic software. To illustrate the feasibility of key-insulated <b>symmetric</b> <b>key</b> <b>cryptography,</b> we also report a proof-of-concept implementation in the Kernel-based Virtual Machine (KVM) environment. Categories and Subject Descriptor...|$|E
50|$|Strong {{random number}} {{generation}} is important throughout every phase of public <b>key</b> <b>cryptography.</b> For instance, if a weak generator {{is used for}} the <b>symmetric</b> <b>keys</b> that are being distributed by RSA, then an eavesdropper could bypass the RSA and guess the <b>symmetric</b> <b>keys</b> directly.|$|R
40|$|Abstract: Because {{wireless}} sensor networks usually {{operate on}} unattended mode in hostile environments, the sensitive data should be protected using some sort of <b>cryptography.</b> <b>Symmetric</b> <b>key</b> scheme is more appropriate cryptography for {{wireless sensor networks}} due to its low energy consumption and simple hardware requirements, {{but most of them}} cannot provide sufficient security level (e. g. integrity, confidentiality, and authentication) as public key approach does. In this work, we propose a new security scheme that overcomes the limitations presented in both public- and symmetric-key protocols. The scheme relies on using one-way hash function to implement the data authenticity between nodes in the network, and a mix of <b>symmetric</b> and public <b>key</b> <b>cryptography</b> functions using the pre-distributed keys to implement the data confidentiality service. The <b>symmetric</b> <b>key</b> function is used to guarantee secure communications between in-network nodes while the public key function is used to guarantee a secure data delivery between the source node and the sink node. The proposed scheme is most suitable for wireless sensor networks that incorporate data-centric routing protocols. We have calculated the computational and communication overheads in terms of energy consumption in the new scheme using Directed Diffusion protocol [4]. The results have shown that the proposed scheme is scalable and an strong competitors to pure <b>symmetric</b> <b>key</b> schemes, yet, it maintains all security levels provided by public key schemes...|$|R
40|$|Security {{can only}} be {{as strong as the}} weakest link. In this world of Cryptography, it is now well established, that the weakest link lies in the {{implementation}} of cryptographic algorithms. Galois field is extensively used in coding. Recently Galois field particularly GF(2 ^M) has been used for Cryptography. Hill-cipher is an old <b>symmetric</b> <b>key</b> Technique of <b>Cryptography.</b> In this project, a novel method of Hill-cipher has been introduced in Cryptography. This new type of cipher matrix utilizes. The polynomials as element in GF(2 ^M). Simulation and results confirm the utility such a data security in a private network. In addition to this, encryption and decryption of data are implemented in GF(2 ^M) using the principle of data Chinese Remainder Theorem...|$|R
40|$|Cryptography is {{the science}} of {{encrypting}} the information {{so that it is}} rendered unreadable for an intruder. Cryptographic techniques are of utmost importance in today’s world as the information to be sent might be of invaluable importance to both the sender and the receiver. Various cryptographic techniques ensure that even if an intruder intercepts the sent information, he is not able to decipher it thus render ending it useless for the intruder. Cryptography can be grouped into two types, that is <b>Symmetric</b> <b>key</b> <b>cryptography</b> and Asymmetric key cryptography. <b>Symmetric</b> <b>key</b> <b>cryptography</b> uses the same key for encryption as well as decryption thus making it faster compared to Asymmetric Key cryptography which uses different keys for encryption and decryption. Generation of dynamic keys for <b>Symmetric</b> <b>key</b> <b>cryptography</b> is an interesting field and in this we have tapped this field so as to generate dynamic keys for <b>symmetric</b> <b>key</b> <b>cryptography.</b> In this work, we have devised an algorithm for generating dynamic keys for sending messages over a communication channel and also solving key refreshment problem...|$|E
40|$|Cryptography is an {{essential}} practice required for secure communication between two parties. It preserves the confidentiality, integrity, availability, and authenticity of information thereby enhances {{the security of the}} data processing system and the information flow within an organization. Symmetric and asymmetric key cryptography are used for encryption and decryption of a message. <b>Symmetric</b> <b>key</b> <b>cryptography</b> is the most commonly used cryptography as it is fast and feasible for use in decrypting bulk messages and requires less computer resources. Chosenplaintext attacks have been proposed for <b>symmetric</b> <b>key</b> <b>cryptography</b> as it uses single secret key to encrypt different messages. This paper introduces a novel <b>symmetric</b> <b>key</b> <b>cryptography,</b> where multiple random secret keys can be used to encrypt different messages, which is insecure under cipher text-only attacks, a weaker form of attack than chosenplaintext attacks...|$|E
40|$|This thesis work proposes {{the design}} and {{implementation}} of a Security Architecture for Networked Embedded Systems. It provides the support for reconfigurability and integration of heterogeneous devices using a component-based middleware. Furthermore, it allows to protects communications between devices using a <b>symmetric</b> <b>key</b> <b>cryptography.</b> Devices can be involved in TCP, UDP unicast and UDP multicast communications. Particular {{attention is paid to}} multicast communications. In fact, devices can be organized in multicast group and for each group security communications are ensured through the use of <b>symmetric</b> <b>key</b> <b>cryptography</b> and rekeying algorithms...|$|E
40|$|The {{incremental}} {{growth of}} computer networks caused by new users joining the network {{results in a}} confidentiality problem with the transmission of data. To solve this problem, <b>symmetric</b> / asymmetric <b>key</b> <b>cryptography</b> is mostly used. However, this cipher suffers from the problem of secret key maintenance and distribution across the internet which is unsecure channel. To {{get rid of this}} problem, different key exchange schemes have been developed and classified as a key redistribution scheme, key distribution scheme and key agreement scheme. In this paper, a key agreement scheme based on a multi-agent system is developed. This scheme aims to exchange the secret key between two parties. The mobile agent is the heart of this scheme where it carries the program that is responsible for generating the secret key...|$|R
40|$|One-way hash chains {{have been}} the {{preferred}} choice, over the <b>symmetric</b> and asymmetric <b>key</b> <b>cryptography,</b> in security setups where e#ciency mattered; despite the ephemeral confidentiality and authentication they assure. Known constructions of one-way chains (for example, SHA- 1 based), only ensure the forward secrecy and have limitations over their length i. e., a priori knowledge of chain's length is necessary before constructing it. In this paper, we will see how our approach, based on chameleon functions, leads to the generation of practically unbounded one-way chains with constant storage and computational requirements. We provide the construction and advantages of our proposal {{with the help of}} a secure group communication setup. We also provide the implementation details of our construction and argue its suitability for security setups, where one cannot a priori determine the longevity of the setup...|$|R
40|$|Abstract. Graphics {{processing}} units (GPUs) {{have become}} popular devices for accelerating general purpose computing. In recent years {{there has been}} a surge in research involving the use of GPUs as cryptographic accelerators. Research has shown that contemporary GPU architectures can achieve higher throughput in the context of both <b>symmetric</b> and asymmetric <b>key</b> <b>cryptography</b> than a traditional CPU. Despite the existence of these new approaches, there remains no way for OS kernel services or userspace applications to make use of these implementations in a practical manner. To overcome this shortcoming, this paper investigates the integration of GPU accelerated cryptographic algorithms with an established service virtualisation layer within the Linux kernel, the OCF-Linux framework. This paper demonstrates that it is feasible to use a centralised kernel service to provide a standardised abstraction to GPU accelerated cryptographic functions for both kernelspace and userspace components. ...|$|R
40|$|Nowadays big {{organizations}} have complex administrative structure with scattered offices {{to face with}} serious problems related to key management like financial and security problems based on symmetric encryption system. This project proposes an efficient solution related to symmetric key crypto system {{to solve this problem}} and provide the opportunity for the organization have a secure, affordable, efficient, easier and faster symmetric key crypto system. <b>Symmetric</b> <b>key</b> <b>cryptography</b> with the less key size have more secure in comparison to asymmetric cryptography. Therefore using <b>symmetric</b> <b>key</b> <b>cryptography</b> is more secure and Advantageous. The speed of processing symmetric cryptography is higher than asymmetric cryptography. The purpose of this project is to product the software for all of the employees in the organization to have the secret <b>symmetric</b> <b>key</b> <b>cryptography</b> to have communicatation to each other through the secret key. However, the security of <b>symmetric</b> <b>key</b> <b>cryptography</b> is higher than asymmetric key cryptography. Key derivations algorithm which used in this project is very important for symmetric cryptosystems in comparison with other algorithm because one key can be derived to the others. This Method is chosen by key derivation one-way function and implemented by Delphi programming language. This implemented method give the manager of the organization an opportunity to generate the secret key for all of the employees and so each employee has the symmetric secret key and if the employees need {{to communicate with each other}} their request will be sent to the manager. This project has been done in three phases and one of the outcomes of this project is an application which generates random key, according to hierarchy of organization...|$|E
40|$|Chaos {{functions}} have mainly used {{to develop}} mathematical models of non linear systems. They have {{attracted the attention of}} many mathematicians owing to their extremely sensitive nature to initial conditions and their immense applicability to problems of daily life. In this paper we investigate the utility of such functions in <b>symmetric</b> <b>key</b> <b>cryptography</b> for secure communications. An algorithm using one of the simplest chaotic functions f(x) = 4 *x*(1 -x) is proposed. The algorithm is compared with the DES algorithm which has by far been the most widely used standard for <b>symmetric</b> <b>key</b> <b>cryptography.</b> The algorithm is proved to be much more secure than the DES algorithm. However it has a higher computation cost. Practical applications of the algorithm are also suggested. 1...|$|E
40|$|AbstractWith {{the crucial}} growth of technology, data {{security}} over {{the network and}} internet has achieved immense of prominence today and achieving good security is always a talk of a good security method being in place. Therefore, there is need of better security method with better efficiency {{in order to increase}} the security and authenticity and to efficiently decrease computational complexity. Although there are many symmetric key algorithms, we proposed a content-based algorithm, which follows the <b>Symmetric</b> <b>key</b> <b>cryptography</b> method. This is an algorithm implementing binary addition operation, a circular bit shifting operation and folding method and as <b>symmetric</b> <b>key</b> <b>cryptography</b> needs the transmission of the secret key along with the ciphered text through the network, a deep concern has given to make the key secure...|$|E
40|$|The {{security}} of {{wireless sensor networks}} is an active topic of research where both <b>symmetric</b> and asymmetric <b>key</b> <b>cryptography</b> issues have been studied. Due to their computational feasibility on typical sensor nodes, <b>symmetric</b> <b>key</b> algorithms that use the same key to encrypt and decrypt messages have been intensively studied and perfectly deployed in such environment. Because of the wireless sensor’s limited infrastructure, the bottleneck challenge for deploying these algorithms is the key distribution. For the same reason of resources restriction, key distribution mechanisms which are used in traditional wireless networks are not efficient for sensor networks. To overcome the key distribution problem, several key pre-distribution algorithms and techniques that assign keys or keying material for the networks nodes in an offline phase have been introduced recently. In this paper, we introduce a supplemental distribution technique based on the communication pattern and deployment knowledge modeling. Our technique {{is based on the}} hierarchical grid deployment. For granting a proportional security level with number of dependent sensors, we use different polynomials in different orders with different weights. In seek of our proposed work’s value, we provide a detailed analysis on the used resources, resulting security, resiliency, and connectivity compared with other related works...|$|R
40|$|One-way hash chains {{have been}} the {{preferred}} choice (over <b>symmetric</b> and asymmetric <b>key</b> <b>cryptography)</b> in security setups where efficiency mattered; despite the ephemeral confidentiality and authentication they assure. They only support forward secrecy and have limitations over the chain size (bounded). In this paper, we show how the use of chameleon functions leads to the generation of practically unbounded one-way chains with constant memory storage requirement, providing forward, and backward secrecy as well. Such a cryptographic tool {{appears to be a}} great enabler for a variety of applications that could not be efficiently realized earlier. From our experiments we observed that this new kind of one-way chain formation adds a slight computational burden, which is justifiable by the unique advantages provided under our construction. The basic unit of our construction, chameleon function, can be elegantly used to design trees or even simpler star-like constructs. ...|$|R
50|$|Protocol Composition Logic is {{a formal}} method {{that is used}} for proving {{security}} properties of protocols that use <b>symmetric</b> <b>key</b> and Public <b>key</b> <b>cryptography.</b> PCL is designed around a process calculi with actions for possible protocol steps like generating some random number, perform encryption and decryption, send and receive messages and digital signature verification actions.|$|R
