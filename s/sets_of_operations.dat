101|10000|Public
25|$|In fact, Post gave a {{complete}} {{description of the}} lattice of all clones (<b>sets</b> <b>of</b> <b>operations</b> closed under composition and containing all projections) on the two-element set {T, F}, nowadays called Post's lattice, which implies the above result as a simple corollary: the five mentioned sets of connectives are exactly the maximal clones.|$|E
2500|$|Post {{originally}} did {{not work}} with the modern definition of clones, but with the so-called iterative systems, which are <b>sets</b> <b>of</b> <b>operations</b> closed under substitution ...|$|E
50|$|A {{computer}} is {{a device that}} can be instructed to carry out arbitrary sequences of arithmetic or logical operations automatically. The ability of computers to follow generalized <b>sets</b> <b>of</b> <b>operations,</b> called programs, enables them to perform an extremely wide range of tasks.|$|E
40|$|We present {{separation}} {{results on}} genuinely (or strongly) time bounded sequential, parallel and non-deterministic complexity classes defined by RAMs with fixed <b>set</b> <b>of</b> arithmetic <b>operations.</b> In particular, we separate non-uniform polynomial time from non-uniform parallel polynomial {{time for the}} <b>set</b> <b>of</b> <b>operations</b> f+; Γ; g (answering a question of [M 88]), and uniform deterministic polynomial time from uniform non-deterministic polynomial time for the <b>set</b> <b>of</b> <b>operations</b> f+; Γ; DIV c g, where DIV c denotes a restricted integer division operation...|$|R
5000|$|The web {{services}} expose a common <b>set</b> <b>of</b> <b>operations</b> for system management: ...|$|R
5000|$|Constructive solid geometry, {{a method}} of {{defining}} three-dimensional shapes using a similar <b>set</b> <b>of</b> <b>operations</b> ...|$|R
5000|$|Boolean {{operations}} on polygons are {{a set of}} Boolean operations (AND, OR, NOT, XOR, ...) operating on one or more sets of polygons in computer graphics. These <b>sets</b> <b>of</b> <b>operations</b> are widely used in computer graphics, CAD, and in EDA (in integrated circuit physical design and verification software).|$|E
50|$|In fact, Post gave a {{complete}} {{description of the}} lattice of all clones (<b>sets</b> <b>of</b> <b>operations</b> closed under composition and containing all projections) on the two-element set {T, F}, nowadays called Post's lattice, which implies the above result as a simple corollary: the five mentioned sets of connectives are exactly the maximal clones.|$|E
5000|$|Representational state {{transfer}} (REST) or RESTful {{web services}} {{is a way}} of providing interoperability between computer systems on the Internet. REST-compliant Web services allow requesting systems to access and manipulate textual representations of Web resources using a uniform and predefined set of stateless operations. Other forms of Web service exist, which expose their own arbitrary <b>sets</b> <b>of</b> <b>operations</b> such as WSDL and SOAP.|$|E
5000|$|... authorizes {{one or more}} {{users to}} perform an <b>operation</b> or a <b>set</b> <b>of</b> <b>operations</b> on an object.|$|R
30|$|Each part type has a <b>set</b> <b>of</b> <b>operations</b> {{that must}} be {{processed}} based on the given operation sequence.|$|R
30|$|Many of the {{well-known}} generalizations of Lie algebras involve {{only one or}} two operations: Malcev algebras have one binary bracket, Lie triple systems one ternary bracket, Bol, Lie-Yamaguti and Akivis algebras one binary and one ternary bracket. In contrast, Sabinin algebras which are the most general form of the tangent structure for loops, have an infinite <b>set</b> <b>of</b> independent <b>operations,</b> and, as a consequence, admit an infinite number of axiomatic definitions. At the moment there are three different natural constructions for the <b>set</b> <b>of</b> <b>operations</b> in a Sabinin algebra. Two of these constructions are due to Sabinin and Mikheev and we shall review them in this section. The third <b>set</b> <b>of</b> <b>operations,</b> which appeared {{for the first time in}} [57] in the study of the primitive elements in non-associative bialgebras, will be considered in the next section. Finding a complete <b>set</b> <b>of</b> relations satisfied by this third <b>set</b> <b>of</b> <b>operations</b> is presently an open problem.|$|R
50|$|Although the two <b>sets</b> <b>of</b> <b>operations</b> were {{at least}} {{nominally}} independent of one another, the patrols often gathered intelligence that was crucial to OPLAN 34Athe attacks {{carried out by the}} patrol boats provoked responses by the North Vietnamese military that were monitored by the American destroyers, thus providing very useful intelligence on DRV military capabilities. The situation swiftly escalated as the DRV deployed heavy gunboats and torpedo equipped frigates to observe the U.S. maneuvers.|$|E
5000|$|Allowing empty trees {{makes some}} {{definitions}} simpler, some more complicated: a rooted tree must be non-empty, hence if empty trees are allowed the above definition instead becomes [...] "an empty tree, or a rooted tree such that ...". On the other hand, empty trees simplify defining fixed branching factor: with empty trees allowed, a binary tree is a tree such that every node has exactly two children, {{each of which}} is a tree (possibly empty).The complete <b>sets</b> <b>of</b> <b>operations</b> on tree must include fork operation.|$|E
50|$|NOM {{is a new}} {{approach}} to the problem of automatic search of mathematical equations. The researcher defines the <b>sets</b> <b>of</b> <b>operations,</b> variables and parameters. The computer program generates a number of mathematical equations that satisfy given restrictions. Then the optimization algorithm finds the structure of appropriate mathematical expression and its parameters.Network operator is a directed graph that corresponds to some mathematical expressions. Every source nodes of the graph are variables or constants of mathematical expression, inner nodes correspond to binary operations and edges correspond to unary operations. The calculation’s result of mathematical expression is kept in the last sink node.|$|E
40|$|Instead {{of saving}} {{multiple}} {{versions of a}} large multimedia data file, it is more efficient to store only the instructions used by the editors to create the different versions. To uncompress files stored in this manner, the editor would simple perform the listed instructions. For these files to be portable, however, the <b>set</b> <b>of</b> <b>operations</b> used in the instructions must be standardized. To standardize a <b>set</b> <b>of</b> <b>operations,</b> {{there must be some}} criteria developed for the inclusion <b>of</b> each <b>operation...</b>|$|R
50|$|Identity management, then, can {{be defined}} as a <b>set</b> <b>of</b> <b>operations</b> on a given {{identity}} model, or more generally as a <b>set</b> <b>of</b> capabilities with reference to it.|$|R
50|$|Given the {{definition}} of a strip, a <b>set</b> <b>of</b> <b>operations</b> may be defined. These are necessary to find out the combined result <b>of</b> a <b>set</b> <b>of</b> contiguous strips.|$|R
5000|$|Deadline executes I/O Operations (IOPs) {{through the}} concept of [...] "batches" [...] which are <b>sets</b> <b>of</b> <b>operations</b> ordered in terms of {{increasing}} sector number. This tunable determines how big a batch {{will have to be}} before the requests are queued to the disk (barring expiration of a currently-being-built batch). Smaller batches can reduce latency by ensuring new requests are executed sooner (rather than possibly waiting for more requests to come in), but may degrade overall throughput by increasing the overall movement of drive heads (since sequencing happens within a batch and not between them). Additionally, if the number of IOPs is high enough the batches will be executed in a timely fashion anyways.|$|E
50|$|As an {{elementary}} 2D example, {{it is easy}} to create a product line of calculators, wherevariants offer different <b>sets</b> <b>of</b> <b>operations.</b> Another variation might offer different presentation front ends to calculators, one with no GUI, anotherwith a Java GUI, a third with a web GUI. These variations interact: each GUI representation references a specific calculator operation, so each GUIfeature cannot be designed independently of itscalculator feature. Such a design leads to a matrix: columns represent increments in calculator functionality, and rows represent different presentation front-ends. Such a matrix M is shown to the right: columns allow one to pairbasic calculator functionality (base) with optional logarithmic/exponentiation (lx)and trigonometric (td) features. Rows allow one to pair core functionality with nofront-end (core), with optional GUI (gui) and web-based (web) front-ends.|$|E
50|$|Post {{originally}} did {{not work}} with the modern definition of clones, but with the so-called iterative systems, which are <b>sets</b> <b>of</b> <b>operations</b> closed under substitutionas well as permutation and identification of variables. The main difference is that iterative systems do not necessarily contain all projections. Every clone is an iterative system, and there are 20 non-empty iterative systems which are not clones. (Post also excluded the empty iterative system from the classification, hence his diagram has no least element and fails to be a lattice.) As another alternative, some authors work {{with the notion of}} a closed class, which is an iterative system closed under introduction of dummy variables. There are four closed classes which are not clones: the empty set, the set of constant 0 functions, the set of constant 1 functions, and the set of all constant functions.|$|E
2500|$|... “processing” {{means an}} {{operation}} or activity or <b>set</b> <b>of</b> <b>operations</b> by automatic or other means that concerns data or personal {{data and the}} ...|$|R
5000|$|Since it {{endeavors to}} {{recreate}} traditional DAC controls with MAC-level enforcement, AppArmor's <b>set</b> <b>of</b> <b>operations</b> is also considerably smaller than those available under most SELinux implementations. For example, AppArmor's <b>set</b> <b>of</b> <b>operations</b> consist of: read, write, append, execute, lock, and link. Most SELinux implentations will support numbers <b>of</b> <b>operations</b> orders <b>of</b> magnitude more than that. For example, SELinux will usually support those same permissions, but also includes controls for mknod, binding to network sockets, implicit use of POSIX capabilities, {{loading and unloading}} kernel modules, various means of accessing shared memory, etc.|$|R
25|$|Unlike {{the bulk}} of the MIPS architecture, it's a fairly {{irregular}} <b>set</b> <b>of</b> <b>operations,</b> many chosen for a particular relevance to some key algorithm.|$|R
30|$|One can, in fact, {{write down}} {{explicit}} formulae relating the two <b>sets</b> <b>of</b> <b>operations</b> in Sabinin algebras, see [34, 50].|$|E
40|$|Legality {{is a key}} {{concept for}} the {{definition}} of many shared-memory consistency conditions. As originally defined, a sequence of operations on a given object is legal {{if it is in}} the set of valid sequences specified for that object. Because legality is defined on totally ordered <b>sets</b> <b>of</b> <b>operations,</b> the actual derivation of algorithms and protocols to implement the consistency models that rely on some form of legality may tend to "exaggerate" the amount of synchronization that they eventually require. In this paper we introduce an alternative definition for legality that is based on partially ordered <b>sets</b> <b>of</b> <b>operations</b> representing parallel executions on shared-memory multiprocessing systems. Using a graph-theoretic formalization, this novel definition of legality is shown to be consonant with the one on totally ordered <b>sets</b> <b>of</b> <b>operations...</b>|$|E
40|$|The {{concept of}} {{legality}} {{is a crucial}} one for the definition of many shared-memory consistency conditions. As originally defined, a sequence of operations on a given object is legal {{if it is in}} the set of valid sequences specified for that object. Being thus defined on totally ordered <b>sets</b> <b>of</b> <b>operations,</b> the notion of legality is not fully realistic, because parallel executions on sharedmemory multiprocessing systems are best represented by partially ordered <b>sets</b> <b>of</b> <b>operations.</b> It is conceivable, therefore, that the eventual derivation of practical systems based on consistency models that rely on some form of legality will tend to be excessively heavy on the required synchronization. In this paper, we introduce an alternative definition of legality that is based on partially ordered <b>sets</b> <b>of</b> <b>operations.</b> Our treatment starts with a system model that makes very few assumptions on machine architecture, and proceeds to employ a graph-theoretic formalism to handle the normally troublesome issue of write multiplicity and to characterize legality. Using this same formalism, we argue that the novel definition of legality is consonant with the one on totally ordered <b>sets</b> <b>of</b> <b>operations,</b> so it carries the same intuitive appeal intended by the original definition...|$|E
50|$|Increased module reusability, because {{application}} developers {{will find}} the component they need more easily among the cohesive <b>set</b> <b>of</b> <b>operations</b> provided by the module.|$|R
50|$|Unlike {{the bulk}} of the MIPS architecture, it's a fairly {{irregular}} <b>set</b> <b>of</b> <b>operations,</b> many chosen for a particular relevance to some key algorithm.|$|R
50|$|The Scholars Programme is part <b>of</b> a wider <b>set</b> <b>of</b> <b>operations</b> {{conducted}} by Lloyds Banking Group {{in order to}} fulfill their goal of 'Helping Britain Prosper'.|$|R
40|$|Two qubit {{operation}} sharing schemes [J. Phys. B 44 (2011) 165508] are {{generalized to}} qutrit ones. Operations {{to be shared}} are classified into three different classes in terms of different probabilities (i. e, 1 / 3, 2 / 3 and 1). For the latter two classes, ten and three restricted <b>sets</b> <b>of</b> <b>operations</b> are found out, respectively. Moreover, the two generalized schemes are amply compared from four aspects, namely, quantum and classical resource consumption, necessaryoperation complexity, success probability and efficiency. It is found that the second scheme is overall more optimal than the first one as far as three restricted <b>sets</b> <b>of</b> <b>operations</b> are concerned...|$|E
40|$|A set of {{operations}} on A {{is shown to}} be the set of linear term operations of some algebra on A {{if and only if}} it is closed under permutation of variables, addition of inessential variables, and composition, and if it contains all projections. A Galois framework is introduced to describe the <b>sets</b> <b>of</b> <b>operations</b> that are closed under the operations mentioned above, not necessarily containing all projections. The dual objects of this Galois connection are systems of pointed multisets, and the Galois closed sets of dual objects are described accordingly. Moreover, the closure systems associated with this Galois connection are shown to be uncountable (even if the closed <b>sets</b> <b>of</b> <b>operations</b> are assumed to contain all projections) ...|$|E
40|$|We {{consider}} succinct or space-efficient {{representations of}} trees that efficiently support {{a variety of}} navigation operations. We focus on static ordinal trees, i. e., arbitrary static rooted trees where the children of each node are ordered. The set of operations is essentially the union of the <b>sets</b> <b>of</b> <b>operations</b> supported by previous succinc...|$|E
50|$|Abstract {{types are}} useful in {{that they can be}} used to define and enforce a protocol; a <b>set</b> <b>of</b> <b>operations</b> that all objects {{implementing}} the protocol must support.|$|R
50|$|Protection {{mechanisms}} in an operating system help {{in providing a}} clear separation between different user programs. It also protects the operating system from any malicious user program behavior. For example, {{consider the case of}} user profiles in an operating system. The user should not have access to resources of another user. The object model deals with these protection issues with each resource acting as an object. Every object can perform only a <b>set</b> <b>of</b> <b>operations.</b> In the context of user profiles, the <b>set</b> <b>of</b> <b>operations</b> is limited by privilege level of a user.|$|R
5000|$|A FASTER {{transaction}} is a <b>set</b> <b>of</b> <b>operations</b> {{which together}} perform a task. Usually, {{the majority of}} transactions are relatively simple tasks such as updating the balance of an account.|$|R
