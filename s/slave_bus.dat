4|14|Public
40|$|AbstractThe aim of {{this paper}} is to present a branch and bound method for {{minimizing}} the makespan of an application processed on a master <b>slave</b> <b>bus</b> oriented multiprocessor system. It is supposed that the application can be split into several independent tasks, however, only one task is sent to each processor. It is assumed that there are one master and several slaves. Some structural properties of the optimal schedules are studied in the more general case where more than one task can be sent to one processor. An exact method is described and the computational results are reported...|$|E
40|$|This paper {{presents}} an experimental {{design and implementation}} of serial data communication using I 2 C (Inter-Integrated Circuit) multi master and multi <b>slave</b> <b>bus</b> controller using a {{field programmable gate array}} (FPGA). The I 2 C master bus controller was interfaced with slave. This module was designed in Verilog HDL and simulated in Modelsim 10. 1 c. The design was synthesized using Xilinx ISE Design Suite 14. 2. I 2 C master initiates data transmission and in order slave responds to it. It can be used to interface low speed peripherals like motherboard, embedded system, mobile phones, set top boxes, DVD, PDA’s or other electronic devices...|$|E
40|$|Abstract: The {{automotive}} systems hold {{an important}} {{place in the}} large area of mechatronic systems. More and more intelligent embedded modules {{are included in the}} automobiles. All those modules are based on microcontrollers or similar circuits. A lot of communication protocols were developed for transferring data among the microcontrollers embedded in an automobile. Among them, the SPI bus was intended primarilly for testing, debugging and diagnostic applications. The monitoring of the SPI bus is approached in this paper. SPI (Serial Peripheral Interface) is a master – <b>slave</b> <b>bus</b> supported by many microcontrollers. Starting from an existing hardware which connects a SPI bus to a PC via the CAN bus, dedicated software was created for accessing the information flowing on a SPI bus between several modules. There were time and frequency constraints imposed by the application and structural constraints imposed by the given hardware based on a ST 10 F 276 microcontroller...|$|E
5000|$|The master transmits a 1 bit (a MAK) to {{indicate}} to the <b>slave</b> that the <b>bus</b> operation will be continued.|$|R
5000|$|Single master, up to 16 <b>slaves</b> (i.e. no <b>bus</b> arbitration). This is {{the value}} {{recommended}} by the LIN Consortium to achieve deterministic time response.|$|R
25|$|Every <b>slave</b> on the <b>bus</b> {{that has}} not been {{activated}} using its chip select line must disregard the input clock and MOSI signals, and must not drive MISO.|$|R
40|$|This paper {{proposes a}} new method for line fault {{analysis}} of ungrounded distribution systems. The fault condition {{of a line}} fault is integrated into the nodal admittance matrix of the faulted line to be modeled. The zero- impedance branch is merged into adjacent impedance branches {{to be taken into}} account, and one of its terminal buses with zero neutral-to-ground voltage is chosen as a <b>slave</b> <b>bus</b> when it is an ideal transformer or a voltage regulator with ungrounded winding connection. The three-phase jointly regulation of a distributed generation source is embedded into nodal admittance model of its internal impedance branch by combining three phases of its internal bus into one equivalent phase. The distribution system is partitioned into a main network and a set of lateral networks to be solved. The main network is formed by the connected paths between the terminal buses of the faulted line, and generation sources, and solved by a Gauss-Seidel method. A lateral network is formed by one of the buses of main network and all buses and branches downstream to the bus, and solved by a backward and forward sweep method. The numerical examples are provided to prove the effectiveness of proposed method...|$|E
50|$|As {{with the}} Unibus, the {{signaling}} was carefully optimized {{so that the}} minimum amount of logic is required across the entire bus system. Asynchronous signaling is used but all responsibility for de-skewing of addresses and data {{is the responsibility of}} the current bus master, minimizing the complexity of the <b>bus</b> <b>slave</b> devices. The responsibility for timing-out failed bus cycles also is placed in the master devices. Similarly, the complexities of handling interrupt transactions are concentrated into the single Interrupt-Fielding Processor (the PDP-11 or VAX-11 computer) in the system.|$|R
5000|$|On the VME bus, all {{transfers}} are DMA and every card {{is a master}} or <b>slave.</b> In most <b>bus</b> standards, there is {{a considerable amount of}} complexity added in order to support various transfer types and master/slave selection. For instance, with the ISA bus, both of these features had to be added alongside the existing [...] "channels" [...] model, whereby all communications was handled by the host CPU. This makes VME considerably simpler at a conceptual level while being more powerful, though it requires more complex controllers on each card.|$|R
40|$|System on Chip {{interconnections}} {{are gaining}} importance as many IP cores are being integrated {{on a single}} chip and interconnect is the bottleneck for design speed. In this paper an asynchronous design comprised of single master and multiple slaves connected via point-to-point topology is analysed. This design resulted in large multiplexer, poor timing closure and consumed large interconnect area in FPGA. The aim of the thesis is to evaluate the system on-chip interconnections and implement the system with the synchronous shared bus interconnection. Many system-on-chip interconnections are reviewed in the thesis, which includes study of major types of buses from different vendors. Synchronous shared bus system is proposed as solution for the interconnections between single master and multiple <b>slaves.</b> Shared <b>bus</b> for the single master and multiple slaves is implemented using WISHBONE architecture and protocols for shared bus system. A general model is designed and implemented which is flexible {{to be tested for}} single master and any number of slaves. Performance evaluation is done for the design in terms of resource utilization and timings performance...|$|R
5000|$|The Dallas 1-Wire {{network is}} {{physically}} implemented as an open drain master device connected {{to one or}} more open drain slaves. [...] A single pull-up resistor is common to all devices and acts to pull the bus up to 3 or 5 volts, and may provide power to the slave devices. Communication occurs when a master or <b>slave</b> asserts the <b>bus</b> low, i.e. connects the pull up resistor to ground through its output MOSFET. Specific 1-Wire driver and bridge chips are also available. Data rates of 16.3 kbit/s can be achieved. There is also an overdrive mode which speeds up the communication by a factor of 10.|$|R
40|$|This thesis has {{theoretically}} {{and practically}} evaluated interfaces between a radio front end for GPS and a mobile platform {{to answer the}} question how should this interface be designed to minimize the computational load on the platform as well as costs. Benchmarking of serial peripheral interface and a glueless one bit interface is performed on MPC 5200 and OMAP 1710 running Linux operating system. The conclusion is two different design approaches, one based on serial peripheral interface and one on SDIO card. Buffer sizes in the platform and the front end is the key factor for computational load and this is discussed in detail. Also other consideration for interface design is discussed such as the implications of front end being master or <b>slave</b> on the <b>bus...</b>|$|R
40|$|VME is a {{new high}} {{performance}} standard bus for multimicroprocessor systems. Its characteristics originate in the 68000 microprocessor's interface signals. Processors with other interface characteristics can, however, also be used in VME systems. The case study of the interfacing of a 6809 -based subsystem to the VME bus is presented. A mixture of hardware and software {{has been used to}} implement at low cost the matching functions. The 6809 -based subsystem can perform all VME-related functions: bus requester in multiprocessor environments, bus master, interrupt handler, <b>bus</b> <b>slave</b> and interrupter. The last two functions are performed by a dual-port memory included in the subsystem, which is designed to be used as the main processor in small VME systems or as the intelligent peripheral controller in larger VME systems. Anglai...|$|R
40|$|II This thesis {{presents}} a bus type driving circuit for 20 -inch field emission display (FED) of Tatung Company. The display goal is: frame rate 60 fps, monitor resolution 800 × 600, 24 bits color depth, and non-interlaced scan. It contains a main controller as a bus master. Scan and data controller are <b>bus</b> <b>slaves.</b> The main controller is also connecting with input signal sent from DVI receiver {{and stored in}} two bank SRAMs. Using a divided pulse width modulation (PWM) method which is called frame rate control (FRC) method in plasma display panel (PDP), the input data should divided into eight weights. The scan driver is just selecting row one by one. The data driver is generating eight kinds of sub-frames. Then these sub-frames can generate 256 gray levels. The designed driving logic can be implemented in FPGA and simulated in Xilinx ISE 9. 1...|$|R
40|$|As {{technology}} scales toward deep submicron, on-chip interconnects {{are becoming}} more and more sensitive to noise sources such as power supply noise, crosstalk, radiation induced effects, etc. Transient delay and logic faults are likely to reduce the reliability of data transfers across datapath bus lines. This paper investigates how to deal with these errors in an energy efficient way. We could opt for error correction, which exhibits larger decoding overhead, or for the retransmission of the incorrectly received data word. Provided the timing penalty associated with this latter technique can be tolerated, we show that retransmission strategies are more effective than correction ones from an energy viewpoint, both for the larger detection capability and for the minor decoding complexity. The analysis was performed by implementing several variants of a Hamming code in the VHDL model of a processor based on the Sparc V 8 architecture, and exploiting the characteristics of AMBA <b>bus</b> <b>slave</b> response cycles to carry out retransmissions in a way fully compliant with this standard on-chip bus specification. 1...|$|R
40|$|The Space Plug-and-play Interface Simulation Equipment (SPISE) box was {{developed}} by ÅAC {{to aid in the}} debugging of satellite modules. This report covers the analysis and conversion of this box to provide initial support for the Space Plug-and-play Avionics (SPA) set of protocols in a single Field Programmable Gate Array (FPGA). A major part of this conversion is the design of SPA-U support for which both a host and <b>slave</b> Universal Serial <b>Bus</b> 1. 1 (USB 1. 1) stack is needed. The comparison of methods to get this functionality and the final design of the Intellectual Property (IP) cores which are implemented in the Very High Speed Integrated Circuit Hardware Description Language (VHDL) language utilizing the freely available from OpenCores, USBHostSlave controller IP by Steve Fielding. The intended target hardware for this project is the reuse of the existing platform, an Actel A 3 P 1000 FPGA containing one million gates. Described in this report are the necessary choices made to implement support for the SPA protocols within a limited time and budget while maintaining compatibility with the architecture of the SPISE box...|$|R
40|$|The U 2 P * chip is {{the primary}} {{connection}} on an UltraSPARC CPU board between the UPA System Bus (including UltraSPARC Processors and Memory) and a PCI based I/O Subsystem. Its major functions are UPA port interface, PCI bus interface, processor I/O data transfers, DMA data transfers and interrupt dispatch. Features • Full master and slave port connection to the high-speed UltraSPARC UPA Interconnect Architecture. The UPA is a split address/data packet-switched bus which has a potential data throughput rate of over one gigabyte/sec. UPA data is ECC protected. • Two physically separate PCI bus segments, with full master and <b>slave</b> support. PCI <b>Bus</b> A has the following features:- 5 volt or 3. 3 volt signalling. - 64 -bit data bus. - Compatible with the PCI Rev 2. 1 Specification. - Compatible with the PCI 66 MHz extensions. - Support for up to four master devices (at 33 MHz only). PCI Bus B has the following features:- 5 volt signalling. - 64 -bit data bus. - Compatible with the PCI Rev 2. 1 Specification. - Support {{for up to six}} master devices. • Two separate 16 -entry streaming caches, one for each bus segment, for accelerating some kinds of PCI DVMA activity. Single IOMMU with 16 -entry TLB for mapping DVMA addresses for both busses. • A “Mondo-Vector ” Dispatch Unit, or MDU, for delivering Interrupt requests to UltraSparc CPU modules, including support for PCI interrupts from up to six total slots, as well as interrupts from on board IO devices. * U 2 P was code named Psycho...|$|R

