90|3705|Public
25|$|Given a <b>structured</b> <b>object</b> X of any sort, a {{symmetry}} is {{a mapping}} {{of the object}} onto itself which preserves the structure. This occurs in many cases; for example, if X is a set with no additional structure, a symmetry is a bijective map from the set to itself, giving rise to permutation groups. If the object X {{is a set of}} points in the plane with its metric structure or any other metric space, a symmetry is a bijection of the set to itself which preserves the distance between each pair of points (an isometry).|$|E
2500|$|Given a <b>structured</b> <b>object</b> X of any sort, a {{symmetry}} is {{a mapping}} {{of the object}} onto itself which preserves the structure. This occurs in many cases, for example ...|$|E
50|$|Treating all {{references}} from a <b>structured</b> <b>object</b> {{as being}} from the object {{as a whole}} is known as field insensitivity or structure insensitivity.|$|E
40|$|Check as many boxes as apply) private public-local public-State public-Federal Category of Property (Check {{only one}} box) building(s) {{district}} site <b>structure</b> <b>object</b> Number of Resources within Property (Do not include previously listed {{resources in the}} count.) Contributing Noncontributing 45 3 buildings sites <b>structures</b> <b>objects</b> 45...|$|R
40|$|A generic {{method for}} {{supervised}} classification of <b>structured</b> <b>objects</b> is presented. The approach induces a classifier by (i) deriving a surrogate dataset from a pre-classified dataset of <b>structured</b> <b>objects,</b> by segmenting them into pieces, (ii) learning a model relating pieces to object-classes, (iii) classifying <b>structured</b> <b>objects</b> by combining predictions made for their pieces. The segmentation allows to exploit local information {{and can be}} adapted to inject invariances into the resulting classifier. The framework is illustrated on practical sequence, time-series and image classification problems. 1...|$|R
40|$|The {{notion of}} a {{structure}} system [...] - sets of <b>structured</b> <b>objects</b> that are composed of atomic objects [...] - is introduced by a collection of axioms. By a uniform change of the atomic objects, the relationship, induced by the atomic <b>objects,</b> between the <b>structured</b> <b>objects</b> is preserved, resulting in a notion of isomorphism of sets of <b>structured</b> <b>objects.</b> By definition, a relation R on such structured sets satisfies the Cantor-Bernstein property if A R B and B R A imply that A and B are isomorphic. It is shown that `isomorphic to a subset' does not satisfy the Cantor-Bernstein property. However, a restricted version of this relation does, resulting in {{an extension of the}} Cantor-Bernstein proposition for sets of <b>structured</b> <b>objects.</b> Similar results are shown for multisets of <b>structured</b> <b>objects.</b> Introduction In set theory, the Cantor-Bernstein proposition expresses that two sets are of equal size, if a subset of the one is of equal size to the other and vice versa. Here, `equal size' means that [...] ...|$|R
5000|$|Given a <b>structured</b> <b>object</b> X of any sort, a {{symmetry}} is {{a mapping}} {{of the object}} onto itself which preserves the structure. This occurs in many cases, for example ...|$|E
50|$|Given a <b>structured</b> <b>object</b> X of any sort, a {{symmetry}} is {{a mapping}} {{of the object}} onto itself which preserves the structure. This occurs in many cases; for example, if X is a set with no additional structure, a symmetry is a bijective map from the set to itself, giving rise to permutation groups. If the object X {{is a set of}} points in the plane with its metric structure or any other metric space, a symmetry is a bijection of the set to itself which preserves the distance between each pair of points (an isometry).|$|E
50|$|Theorems in Ramsey theory are {{generally}} {{one of the}} two types. Many theorems, which are modeled after Ramsey's theorem itself, assert that in every partition of a large <b>structured</b> <b>object,</b> one of the classes necessarily contains a large structured subobject, but give no information about which class this is. Occasionally, the reason behind such Ramsey-type results is that the largest partition class always contains the desired substructure. The results of this kind are called either density results or Turán-type result, after Turán's theorem. Notable examples include Szemerédi's theorem, which is such a strengthening of van der Waerden's theorem, and the density version of Hales-Jewett theorem.|$|E
40|$|The {{problem to}} {{characterize}} and investigate <b>structured</b> <b>objects</b> by using information theory is currently of considerable interest. In this paper, we describe {{a method for}} characterizing <b>structured</b> <b>objects</b> representing graphs by means of information inequalities. For this, we deal with information inequalities which describe relations between information measures for graphs. Additionally, we sketch an approach for comparing such information measures qualitatively. ...|$|R
5000|$|... 5754180 Computer {{system and}} process for {{defining}} and manipulating images using <b>structured</b> <b>objects</b> with variable edge characteristics ...|$|R
40|$|Applications of {{semantic}} technologies {{often require}} {{the representation of}} and reasoning with <b>structured</b> objects—that is, <b>objects</b> composed of parts connected in complex ways. Although OWL is a general and powerful language, its class descriptions and axioms cannot be used to describe arbitrarily connected structures. An OWL representation of <b>structured</b> <b>objects</b> can thus be underconstrained, which reduces the inferences that can be drawn and causes performance problems in reasoning. To address these problems, we extend OWL with description graphs, which allow for the description of <b>structured</b> <b>objects</b> in a simple and precise way. To represent conditional aspects of the domain, we also allow for SWRL-like rules over description graphs. Based on an observation {{about the nature of}} <b>structured</b> <b>objects,</b> we ensure decidability of our formalism. We also present a hypertableau-based decision procedure, which we implemented in the HermiT reasoner. To evaluate its performance, we have extracted description graphs from the GALEN and FMA ontologies, classified them successfully, and even detected a modeling error in GALEN. ...|$|R
50|$|In {{addition}} to the examples of Weyl and Eddington, Dirac was influenced also by the primeval-atom hypothesis of Georges Lemaître, who lectured on the topic in Cambridge in 1933. The notion of a varying-G cosmology first appears {{in the work of}} Edward Arthur Milne a few years before Dirac formulated LNH. Milne was inspired not by large number coincidences but by a dislike of Einstein's general theory of relativity. For Milne, space was not a <b>structured</b> <b>object</b> but simply a system of reference in which Einstein's conclusions could be accommodated by relations such as this:where MU is the mass of the universe and t is {{the age of the universe}} in seconds. According to this relation, G increases over time.|$|E
5000|$|Many {{mathematical}} objects {{consist of}} a set, often called the underlying set, equipped with some additional structure, typically a mathematical operation or a topology. It is a common abuse of notation {{to use the same}} notation for the underlying set and the <b>structured</b> <b>object.</b> For example, [...] may denote the set of the integers, the group of integers together with addition, or the ring of integers with addition and multiplication. In general, there is no problem with this, and avoiding such an abuse of notation would make mathematical texts pedantic and difficult to read. When this abuse of notation may be confusing, one may distinguish between these structures by denoting [...] the group of integers with addition, and [...] the ring of integers.|$|E
40|$|Applications of {{description}} logics (DLs) {{often require}} {{the representation of}} and reasoning with structured objects—that is, objects composed of parts connected in complex ways. Although DLs are general and powerful languages, they cannot describe arbitrarily connected structures. The description of <b>structured</b> <b>object...</b>|$|E
50|$|Structured {{prediction}} or structured (output) {{learning is}} an umbrella term for {{supervised machine learning}} techniques that involves predicting <b>structured</b> <b>objects,</b> rather than scalar discrete or real values.|$|R
40|$|The folding {{architecture}} {{is a universal}} mechanism to approximate mappings between trees and real vector spaces with a neural network. The part encoding {{the trees and the}} part approximating the mapping are trained simultaneously so that the encoding fits to the specific learning task. In this article we show that this {{architecture is}} capable of approximating any mapping arbitrary well. Keywords: Neural Networks, <b>Structured</b> <b>Objects,</b> Folding Architecture. 1 Introduction Neural networks are capable of approximating any function from one finite dimensional real vector space to another arbitrary well [4]. Nevertheless in many fields people have to deal with <b>structured</b> <b>objects.</b> Therefore it is desirable that neural networks work directly on these objects rather than on a sometimes artificial coding in terms of real values. Several approaches {{can be found in the}} literature showing that neural networks are able to handle <b>structured</b> <b>objects</b> like trees, lists, terms, or sentences in a natural [...] ...|$|R
3000|$|We {{consider}} {{the evolution of}} a set of N neurons. Here, neurons are considered as “points” instead of spatially extended and <b>structured</b> <b>objects.</b> As a consequence, we define, for each neuron [...]...|$|R
40|$|Rewriting is the {{repeated}} transformation of a <b>structured</b> <b>object</b> {{according to a}} set of rules. This simple concept has turned out to have a rich variety of elaborations, giving rise to many different theoretical frameworks for reasoning about computation. Aside from its theoretical importance, rewriting has als...|$|E
40|$|STROBE is {{a system}} that {{provides}} object-oriented programming support tools for INTERLISP. It offers a primitive foundation with which more complex <b>structured</b> <b>object</b> representation schemes can be constructed. STROBE implements multiple resident knowledge bases, tangled generalization hierarchies, flexible inheritance of properties, procedural attachment, and event-sensitive procedure invocation. 1...|$|E
40|$|International audienceStructured {{objects of}} {{different}} characteristic size have been coated with g-Al 2 O 3. The oxide layers are characterised {{in terms of}} thickness, surface area, crystalline phase, adherence on the support surface, etc. According to the <b>structured</b> <b>object,</b> adherent oxide layers from less than 1 to around 200 mm have been obtained...|$|E
40|$|Many {{problems}} in artificial intelligence can be naturally approached by generating and manipulating probability distributions over <b>structured</b> <b>objects.</b> In this paper we represent <b>structured</b> <b>objects</b> by first-order logic terms (lists, trees, tuples, and nestings thereof) and higher-order terms (sets, multisets), and we study the question how to define probability distributions over such terms. We present two Bayesian approaches that employ such probability distributions over structured objects: {{the first is}} an upgrade of the well-known naive Bayesian classifier to deal with first-order and higher-order terms, {{and the second is}} an upgrade of propositional Bayesian networks to deal with nested tuples...|$|R
50|$|A surface <b>structure</b> <b>object</b> in the non-third-person {{category}} can {{be clearly}} marked as singular, dual, or plural. The morpheme ra:k marks plurality; a combination oh hi and Ɂak marks dual. Singular {{is marked by}} zero.|$|R
40|$|Kernel-based {{learning}} {{methods are}} primarily used with real-valued data. Yet many domains {{are made up}} of <b>structured</b> <b>objects</b> such as strings, trees or graphs. This work focuses on the design of kernels capable of coping with <b>structured</b> <b>objects.</b> It briefly introduces kernel-based learning methods and kernel theory, and goes on to study the basic mechanisms for kernel combination and the family of convolution kernels, which is meant as the main building block for a theory of kernels on structured domains. Additionally, some practical design strategies are identified through applications of the theory. Finally, some proposals are outlined aimed at future research. Postprint (published version...|$|R
40|$|Abstract. The {{complexity}} of visual representations is substantially {{limited by the}} compositional nature of our visual world which, therefore, renders learning <b>structured</b> <b>object</b> models feasible. During recognition, such structured models might however be disadvantageous, especially under the high computational demands of video. This contribution presents a compositional approach to video analysis that demonstrates the value of compositionality for both, learning of <b>structured</b> <b>object</b> models and recognition in near real-time. We unite category-level, multi-class object recognition, segmentation, and tracking in the same probabilistic graphical model. A model selection strategy is pursued to facilitate recognition and tracking of multiple objects that appear simultaneously in a video. Object models are learned from videos with heavy clutter and camera motion where only an overall category label for a training video is provided, but no hand-segmentation or localization of objects is required. For evaluation purposes a video categorization database is assembled an...|$|E
40|$|This work {{describes}} {{a way of}} interactive manipulation of structured objects by interaction rules. Symbols are used as graphical representation of object states. State changes lead to different visual symbol instances. The manipulation of symbols using interactive devices lead to an automatic state change of the corresponding <b>structured</b> <b>object</b> without any intervention of the application. Therefor, interaction rules are introduced. These rules describe the way a symbol may be manipulated and the effects this manipulation has on the corresponding <b>structured</b> <b>object.</b> The rules are interpreted by the visualization and interaction service. For each symbol used, a set of interaction rules can be defined. In order to be the more general as possible, all the interactions on a symbol are defined as a triple, which specifies the preconditions of all the manipulations of this symbol, the manipulations themselves, and the postconditions of all the manipulations of this symbol. A manipulation is a qu [...] ...|$|E
40|$|We {{present a}} {{semi-automatic}} image editing framework dedicated to individual <b>structured</b> <b>object</b> replacement from groups. The major technical difficulty is element separation with irregular spatial distribution, hampering previous texture and image synthesis methods from easily producing visually compelling results. Our method uses the object-level operations and finds grouped elements based on appearance similarity and curvilinear features. This framework enables {{a number of}} image editing applications, including natural image mixing, structure preserving appearance transfer, and texture mixing...|$|E
40|$|Abstract. Knowledge based {{artificial}} networks {{networks have}} been applied quite successfully to propositional knowledge representation and reasoning tasks. However, as soon as these tasks are extended to <b>structured</b> <b>objects</b> and structure-sensitive processes it is not obvious at all how neural symbolic systems should look like such that they are truly connectionist and allow for a declarative reading at the same time. The core method aims at such an integration. It is a method for connectionist model generation using recurrent networks with feed-forward core. After {{an introduction to the}} core method, this paper will focus on possible connectionist representations of <b>structured</b> <b>objects</b> and their use in structure-sensitive reasoning tasks. ...|$|R
5000|$|An {{array of}} 16-bit words for each nonzero {{bit in the}} bit vector. Each datum either {{supplies}} an index that points to the second-level data <b>structure</b> <b>object</b> for the corresponding prefix, or supplies the routing information for that prefix directly.|$|R
40|$|Modern {{universal}} algebra is {{the study}} of general mathematical structures, especially those with an `algebraic' avor. For example: Monads describe `extra algebraic <b>structure</b> on <b>objects</b> of one xed category'. PROs describe `extra algebraic <b>structure</b> on <b>objects</b> of any monoidal category'. PROPs describe `extra algebraic <b>structure</b> on <b>objects</b> of any sym-metric monoidal category'. Algebraic Theories describe `ex-tra algebraic <b>structure</b> on <b>objects</b> of any category with nite prod-ucts'. 2 For example: There's a monad on Set whose algebras are groups. There's an algebraic theory whose algebras in any category with nite products C are `groups in C'. There's no PROP whose algebras are groups, but there's a PROP for monoids. PROPs describe fewer structures, but apply to more contexts: e. g. ...|$|R
40|$|This paper {{presents}} {{scenarios of}} synchronous, spontaneous collaboration on <b>structured</b> <b>object</b> spaces, including multimedia data. It emphasizes the two essential elements for collaboration, namely a shared view and concurrency awareness. Examples from a current implementation show how a consistent {{look and feel}} can be achieved with custom Internet browsers as front ends. Finally, screen shots from a usability study are given. The study was produced for a major mobile network provider {{as part of their}} UMTS exhibit at CeBIT 2001...|$|E
40|$|The {{automatic}} {{acquisition of}} <b>structured</b> <b>object</b> maps requires sophisticated perceptual mechanisms that enable the robot {{to recognize the}} objects {{that are to be}} stored in the robot map. This paper investigates a particular object recognition problem: the automatic detection and classification of gateways in office environments based on laser range data. We will propose, discuss, and empirically evaluate a sensor model for crossing gateways and different approaches to gateway classification including simple maximum classifiers and HMM-based classification of observation sequences...|$|E
40|$|Abstract—We {{present a}} {{semi-automatic}} image editing framework dedicated to individual <b>structured</b> <b>object</b> replacement from groups. The major technical difficulty is element separation with irregular spatial distribution, hampering previous texture and image synthesis methods from easily producing visually compelling results. Our method uses the object-level operations and finds grouped elements based on appearance similarity and curvilinear features. This framework enables {{a number of}} image editing applications, including natural image mixing, structure preserving appearance transfer, and texture mixing. Index Terms—natural image, structure analysis, texture, image processing F...|$|E
40|$|Ontologies often {{describe}} <b>structured</b> <b>objects,</b> which {{consist of}} many parts interconnected in complex ways. Such objects abound in molecular biology and the clinical sciences. Clinical ontologies such as GALEN, the Foundational Model of Anatomy (FMA), and the National Cancer Institute (NCI) Thesaurus describ...|$|R
5000|$|Wirfs-Brock first {{coined the}} [...] "-driven" [...] meme in an OOPSLA 1989 paper she co-authored with Brian Wilkerson. Before that time, the most {{prevalent}} way of <b>structuring</b> <b>objects</b> was based on entity-relationship modeling ideas (popularized by James Rumbaugh, Steve Mellor and Sally Shlaer).|$|R
40|$|The Visitor pattern wraps {{associated}} {{operations that}} are {{performed on the}} elements of an <b>object</b> <b>structure</b> into a separate object. It allows the software designer to define new kinds of operations over the <b>object</b> <b>structure</b> without changing the classes of this structure. But a well-known drawback of this standard Visitor structure is that extending the <b>object</b> <b>structure</b> is hard. This paper presents the design and implementation of a flexible Visitor pattern based on the reflection technique, {{we call it the}} Reflective Visitor pattern. The reflection technique enables the Visitor to perform the run-time dispatch action on itself. The separation of the run-time dispatch action from the <b>object</b> <b>structure</b> makes any extension to the <b>object</b> <b>structure</b> become easy. It also removes the cyclic dependencies between the Visitor and the <b>object</b> <b>structure,</b> so the reusability and extensibility of the system are improved. Intent Define a new operation over the <b>object</b> <b>structure</b> without changing the classes of the elements on which it operates, while in the meantime, allow the element classes in the <b>object</b> <b>structure</b> to be extended constantly without changing the existing system...|$|R
