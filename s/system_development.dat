10000|10000|Public
5|$|Plan 9 proponents and {{developers}} {{claim that the}} problems hindering its adoption have been solved, that its original goals as a distributed <b>system,</b> <b>development</b> environment, and research platform have been met, and that it enjoys moderate but growing popularity. Inferno, through its hosted capabilities, has been a vehicle for bringing Plan 9 technologies to other systems as a hosted part of heterogeneous computing grids.|$|E
5|$|Weber listed several {{preconditions}} for {{the emergence}} of the bureaucracy: The growth in space and population being administered, the growth in complexity of the administrative tasks being carried out and the existence of a monetary economy– these resulted in a need for a more efficient administrative <b>system.</b> <b>Development</b> of communication and transportation technologies made more efficient administration possible (and popularly requested) and democratisation and rationalisation of culture resulted in demands that the new system treat everybody equally.|$|E
5|$|Development of Wild Guns {{began when}} a small team of Natsume staff was asked to create a game quickly and cheaply while waiting for their next major assignment. The team {{consisted}} of three core members: Shunichi Taniguchi for game design and graphics, Toshiyasu Miyabe for programming, and Hiroyuki Iwatsuki for sound. Two other people helped as support staff. The team chose to develop for the Super NES because the three had worked together previously on The Ninja Warriors (1994) for that <b>system.</b> <b>Development</b> of Wild Guns lasted approximately five months and was led by Taniguchi.|$|E
5000|$|...Gestalt Organizations and <b>Systems</b> <b>Development</b> (International Gestalt Center of Organizations and <b>Systems</b> <b>Development</b> - Cleveland, USA).|$|R
5000|$|... {{information}} <b>systems</b> acquisition, <b>development</b> and maintenance, (see <b>Systems</b> <b>Development</b> Life Cycle) ...|$|R
40|$|There {{are many}} factors {{believed}} to be important to <b>systems</b> <b>development</b> cost estimation. However an in-depth analysis demonstrates requirements as central cost drivers. The various transformations requirements go through from candidate requirements to released response is the most intricate part of <b>systems</b> <b>development</b> cost estimation. Requirements exist independent of <b>systems</b> <b>development</b> methodologies. Requirements may be viewed from bespoke or market driven perspectives. The former assumes a traditional economic agent theory view where a client organisation requests for a service from the <b>systems</b> <b>development</b> organisation. The later, market-driven requirements elicitation entails predicting requirements by the <b>systems</b> <b>development</b> organisation based on market research output. Irrespective of the perspective the <b>systems</b> <b>development</b> cost estimation is imperative. The study investigates adoption and usage of cost estimation models by the <b>systems</b> <b>development</b> companies in the Limpopo province of South Africa. The paper introduces a requirements transition state diagram and pinpoints informal cost estimation models as predominant. In this article we also present {{the results of our}} survey findings and the discussion of those results as well as the recommendations for further work[URL]...|$|R
5|$|The city is {{serviced}} by the LRT Line 1 and Line 2, which form the Manila Light Rail Transit <b>System.</b> <b>Development</b> of the railway system {{began in the}} 1970s under the presidency of Ferdinand Marcos, when Line 1 was built, making it the first light rail transport in Southeast Asia. These systems are currently undergoing a multibillion-dollar expansion. Line 1 runs {{along the length of}} Taft Avenue (N170/R-2) and Rizal Avenue (N150/R-9), and Line 2 runs along Claro M. Recto Avenue (N145/C-1) and Ramon Magsaysay Boulevard (N180/R-6) from Santa Cruz, through Quezon City, up to Masinag in Antipolo, Rizal.|$|E
5|$|The company {{aimed to}} have two {{aircraft}} operative in June 1984, and be fully operational with 35 to 40 employees and four aircraft by 1985, when all-year oil drilling would start in the Norwegian Sea. Use of aircraft for oil spill reduction {{was at the time}} established in the United Kingdom, and Norsk Forurensningskontroll aimed to create a similar preparedness for Norway in cooperation with the Norwegian Pollution Control Authority. The cost of the four aircraft was stipulated to approximately NOK35 million. Operation started in May 1984 with an aircraft on dry lease from Widerøe (LN-BNS), which was also used as <b>system</b> <b>development</b> platform. The airline stated that they hoped to have 30 to 50 operations per year.|$|E
5|$|The lipid {{component}} of MFGM {{is rich in}} phospholipids, glycosphingolipids, and cholesterol. Phospholipids make up approximately 30% of the total lipid weight of MFGM, the three most prominent being sphingomyelin (SM), phosphatidylcholine (PC), and phosphatidylethanolamine (PE), which together represent up to 85% of total phospholipids. Phospholipids and sphingolipids play central roles in cerebral neurogenesis and migration during fetal development, as well as promoting neuronal growth, differentiation, and synaptogenesis {{during the first year}} of life. Other important polar lipids present in the membrane include the glycerophospholipids phosphatidylserine (PS) and phosphatidylinositol (PI), as well as gangliosides (GG), which are sphingolipids containing sialic acid and an oligosaccharide side chain. Each of these lipid classes is known to play functional roles within the body, including the support of gut, immune, and central nervous <b>system</b> <b>development.</b>|$|E
40|$|Information <b>systems</b> <b>development</b> (ISD) {{continues}} to receive considerable {{attention in the}} literature. Much of it, however, simply perpetuates the myth that ISD should somehow be conceived in technical terms. In this paper, we challenge this view by presenting <b>systems</b> <b>development</b> {{as a form of}} social action. The hypothesis offered is that ISD can be more effectively understood by applying seven basic building blocks of social action theories: Knowledge, Power, Subjective Meanings, Human Interests, Consensus, Conflict, and Resistance. It is the interplay of these seven elements which make up the fundamental basis of <b>systems</b> <b>development.</b> To show that our understanding of ISD is enhanced through viewing it as social action, we present evidence from four case studies. It is shown that the practice of <b>systems</b> <b>development</b> is reflected in our notion of social action; more specifically, that it makes sense to view information <b>systems</b> <b>development</b> as social action. <b>systems</b> <b>development</b> social action power conflict...|$|R
40|$|MSc (Computer Science), North-West University, Potchefstroom Campus, 2014 Problem statement: There {{seem to be}} perceptual incongruence between <b>systems</b> <b>development</b> {{managers}} and developers. Research shows that while managers are more positive towards <b>systems</b> <b>development</b> methodologies, developers {{on the other hand}} seem to resist and not to use <b>systems</b> <b>development</b> methodologies in their entirety but instead adapt, tailor, modify and change them depending on the project at hand (contingent use). <b>Systems</b> <b>development</b> managers can exert power through a variety of influence bases. However, these power influences may be perceived differently by developers. While some might feel constrained, others might actually feel liberated by the existence of the same influence base. Main findings: IS managers are using <b>systems</b> <b>development</b> methodologies to gain control over team members. However, there was no clear perception on whether <b>systems</b> <b>development</b> methodologies were enslaving systems developers. This was indicated by the majority of the respondents neither agreeing nor disagreeing to that effect. The research showed that most organisations are adapting the use of <b>systems</b> <b>development</b> methodologies on a project to project basis, which {{is referred to as the}} contingent use of <b>systems</b> <b>development</b> methodologies. Research method followed: The positivistic research paradigm was used as it allowed the researcher to find out patterns and regularities between power, <b>systems</b> <b>development</b> methodologies’ use and success. A survey was conducted and a questionnaire was used for data collection purposes. Questionnaire data was analysed using IBM SPSS Statistics Version 21, Release 20. 0. 0 software package tools. Principal conclusion: Power is interpreted in terms of the type of power that can be exercised by IT professionals specifically IS developers and their respective managers at the workplace. The roles assumed and the different power types that may be exercised in organisations provide a link as to who has the final say when it comes to the use and success rate of <b>systems</b> <b>development</b> methodologies. The contingent use of <b>systems</b> <b>development</b> methodologies provides a form of “freedom” to systems developers. Based on the research findings, the research proposes an answer to the question – are <b>systems</b> <b>development</b> methodologies enslaving <b>systems</b> developers and empowering IS managers?Master...|$|R
50|$|Evolutionary <b>Systems</b> <b>Development</b> is a {{class of}} methodologies that attempt to {{formally}} implement evolutionary prototyping. One particular type, called Systemscraft is described by John Crinnion in his book Evolutionary <b>Systems</b> <b>Development.</b>|$|R
5|$|There {{are other}} {{conferences}} on international emergency medicine as well, {{including the one}} that the World Association for Disaster and Emergency Medicine (WADEM) has held every two years since 1987. However, WADEM focuses more on disaster medicine than emergency medicine <b>system</b> <b>development,</b> {{and many of its}} member physicians are not specialists in emergency medicine. Additionally, the European Society for Emergency Medicine (EuSEM) has hosted an annual conference since 1998. EuSEM also publishes The European Journal of Emergency Medicine, develops recommendations for emergency medicine standards for European countries, and supports a disaster medicine training center and degree program in San Marino. The Asian Society for Emergency Medicine (Asian Society), which was founded in 1998, holds its own biennial conference. In addition to that, the Asian Society, like the EuSEM, develops curriculum recommendations for Asian countries.|$|E
5|$|The {{structure}} of the root system, comprising a vertical tap root and multiple horizontal laterals, develops in the seedling's first year. Thereafter, the sinker and laterals continue to lengthen, and new laterals appear. There are only three to five laterals at first, but this number typically increases to eight to ten within ten years. During the first winter, {{there is a great}} deal of root <b>system</b> <b>development,</b> especially elongation of the sinker root, but almost no shoot growth. By summer, the sinker root has generally almost reached the water table, and shoot growth increases substantially. Around February, the shoot forms a resting bud, and growth then ceases until October. On resumption of shoot growth, the shoots grow rapidly for a short time, while the plant is under little water stress; then, with the onset of water stress, the plants settles into a long period of slower shoot growth. This pattern of summer-only shoot growth is maintained throughout the life of the plant, except that in mature plants, seasonal shoot growth may cease with the formation of a terminal inflorescence rather than a resting bud. Inflorescence development continues after shoot growth ceases, and flowering commences in February or March. March and April are the peak months for flowering, which ends in July or August.|$|E
25|$|Besides {{their role}} in the nervous <b>system</b> <b>development,</b> proneural genes are also {{involved}} in processes related to trophoblast invasion, endocrine cell differentiation (namely in pancreas and adenohypophysis), sex determination and lungs, thyroid, adrenal and salivary glands and gastrointestinal <b>system</b> <b>development.</b>|$|E
40|$|This {{research}} {{investigates the}} complex dynamics between knowledge creation and sharing in <b>systems</b> <b>development.</b> Quantitative and qualitative {{data from a}} project are interpreted drawing upon concepts from knowledge management and organizational learning. The {{research shows that the}} applied <b>systems</b> <b>development</b> techniques rely on simplified notions of knowledge creation and sharing that do {{not take into account the}} dynamic relationships between the two, and neglect the factors that facilitate or inhibits them. These findings suggest a number of lessons on how to balance knowledge creation and sharing in <b>systems</b> <b>development</b> and they suggest that we need to critically rethink contemporary <b>systems</b> <b>development</b> techniques...|$|R
40|$|Model-driven <b>systems</b> <b>development</b> Traditional <b>systems</b> <b>development</b> {{methods are}} {{designed}} to create a ‘‘point solution’’– that is, a solution for a specific and static set of requirements. These methods result in systems that are sluggish in their response to dynamic conditions and changing requirements, expensive to maintain over extended periods of time, and prone to system failure. As an alternative to this approach, this paper describes a model-driven approach to <b>systems</b> <b>development,</b> which extends traditional systems engineering methods and is well-suited to a <b>systems</b> <b>development</b> environment characterized by rapidly changing conditions and requirements. We describe how model-driven <b>systems</b> <b>development</b> is performed by using the RUPt SE (Rational Unified Processt for Systems Engineering) architecture framework and transformation methods, which have been refined over eight years of field experience by Rationalt, IBM, and our clients...|$|R
40|$|While {{software}} development teams {{are becoming more}} and more distributed around the globe, most {{software development}} methodologies used by global teams prescribe self-managing teams. Transformational leadership is the key to successful information <b>systems</b> <b>development</b> and use for competitive advantage. Yet, little is known about transformational leadership in self-managing global information <b>systems</b> <b>development</b> team settings. This study answers the research question of how leaders emerge and strategically influence <b>systems</b> <b>development</b> in self-managing global information <b>systems</b> <b>development</b> teams. This question is answered with a grounded theory study of Apache Open Source Software development teams. A theoretical model of action-embedded transformational leadership is developed to demonstrate how leaders emerge and strategically influence <b>systems</b> <b>development</b> efforts through their leadership, which is embedded in their work-related actions. (C) 2013 Elsevier B. V. All rights reserved. ...|$|R
25|$|Raptor is a {{new family}} of methane-fueled full flow staged {{combustion}} cycle engines {{to be used in}} its future Interplanetary Transport <b>System.</b> <b>Development</b> versions have been test fired.|$|E
25|$|Soon {{after the}} protein product was confirmed, DCC {{knockout}} mice were created. As DCC−/− mutations are rapidly fatal {{due to a}} lack of nervous <b>system</b> <b>development,</b> DCC+/− mice were assessed for increased tumour development over two years, and no increase in tumour predisposition was detected.|$|E
25|$|Operating <b>system</b> <b>development</b> {{is one of}} {{the most}} {{complicated}} activities in which a computing hobbyist may engage. A hobby operating system may be classified as one whose code has not been directly derived from an existing operating system, and has few users and active developers.|$|E
40|$|Information <b>systems</b> <b>development</b> {{takes place}} within an {{economical}} context. However, the economical conditions, which shape <b>systems</b> <b>development</b> in practice, are hardly researched. In this paper we {{are investigating the}} question how a given price structure influences <b>systems</b> <b>development</b> projects. Our analysis {{is based on a}} multi case study and a Grounded Theory inspired research approach. Our work is informed by economic theories, which deal with the relationship of suppliers and customers and their mutual dependency. We thus apply principal-agent theory and economic game theory in form of the prisoner’s dilemma. As a result we provide three interlinked models for understanding the impact of pricing structure on <b>systems</b> <b>development</b> practice. The main elements of these models are pricing structure, risk distribution and price level, and opportunistic behavior. We discuss how these elements are interrelated and examine their impact on information <b>systems</b> <b>development</b> in practice...|$|R
40|$|Abstract: This article reviews 105 {{representative}} {{contributions to}} the literature on mobile <b>systems</b> <b>development.</b> The contributions are categorized according to a simple conceptual framework. The framework comprises four perspectives: the requirements perspective, the technology perspective, the application perspective, and the business perspective. Our literature review shows that mobile <b>systems</b> <b>development</b> is overlooked in the current debate. From the review, we extend the traditional view on <b>systems</b> <b>development</b> to encompass mobile systems, {{and based on the}} identified perspectives we propose core characteristics for mobile systems. We also extend the traditional focus found in <b>systems</b> <b>development</b> on processes in a development project to encompass the whole of the development company as well as inter-organizational linkage between development companies. Finally, we point at research directions emerging from the review that are relevant to the field of mobile <b>systems</b> <b>development...</b>|$|R
30|$|At the moment, {{there are}} two {{prevalent}} models of Instructional Design/Instructional <b>Systems</b> <b>Development</b> that refer to different levels of application: ADDIE at the macro-level and the Cognitive Load Theory at the micro-level of Instructional Design/Instructional <b>Systems</b> <b>Development.</b>|$|R
25|$|In March 2004 Oshkosh Truck Corporation (now Oshkosh Defense) {{announced}} that the US Marine Corps had awarded the company a Phase I <b>System</b> <b>Development</b> and Demonstration Contract to supply three LVSR trucks. These were to be delivered to the Marines for extensive endurance and performance testing within 12 months.|$|E
25|$|A common way {{to conduct}} these {{simulations}} is {{to replicate the}} settlement logics of the real payment or securities settlement systems under analysis and then use real observed payment data. In case of system comparison or <b>system</b> <b>development,</b> naturally also the other settlement logics need to be implemented.|$|E
25|$|There {{was also}} a {{specialist}} networking lab that was equipped with more than 20 enterprise level network switches and routers, including wireless and VoIP devices. There was a dedicated security and software forensics laboratory. There were also many special-purpose facilities for embedded <b>system</b> <b>development</b> and robotics.|$|E
40|$|This work {{examines}} the belief system underlying computer-based <b>systems</b> <b>development,</b> {{by reference to}} an analogy with a model of scientific research due to Kuhn. Kuhn's model describes 'scientific communities', each united by an underlying many-faceted belief system, the 'disciplinary matrix', which forms a constellation of commitments shared {{by the members of}} these communities. A scientific community is compared here with the community of computer-based systems developers and its sub-groups. The division of the developers of computer-based <b>systems</b> <b>development</b> methods and tools into schools based on paradigmatic differences is paralleled with Kuhn's view of a scientific discipline at the early, pre-science, stage. The use of a computer-based <b>systems</b> <b>development</b> method in practice, and informal computer-based <b>systems</b> <b>development</b> activities, are paralleled with Kuhnian normal science, working within the paradigm of the discipline and of the techniques employed. This parallel provides a framework for structuring the explicit and implicit assumptions and models which form the craft knowledge underlying computer-based <b>systems</b> <b>development</b> theory and practice. Following a search for elements of the disciplinary matrix in the theory of computer-based <b>systems</b> <b>development,</b> as described in textbooks, and in its practice through interviews with developers, the results of action research and reports of <b>systems</b> <b>development</b> failures, it is concluded that the analogy with Kuhn's view of scientific activity is justifiable, and that articulation and examination of the implications of the analogy can reveal useful information to assist in describing and improving computer-based <b>systems</b> <b>development.</b> The results of this search are presented in terms of the specific beliefs and models identified. It is suggested that, as future research, the Kuhn-based model of computer-based <b>systems</b> <b>development</b> should be extended into a detailed investigation into the effects of individual elements of the disciplinary matrix, either individually or in combination, on the mind set of the computer-based systems developer...|$|R
50|$|Weapons <b>systems</b> <b>development.</b>|$|R
40|$|MSc (Computer Sciences), North-West University, Potchefstroom Campus, 2014 The <b>development</b> of {{e-government}} <b>systems</b> in South Africa {{has raised}} major concerns when {{coming to the}} <b>systems</b> <b>development</b> methodology used. Through the literature review conducted and the data collected, the study has indicated that there is lack of uniformity, isolated cost, models for choosing project teams and the overall control of {{the whole process of}} e-government <b>systems</b> <b>development.</b> As a result, this research investigates the use of <b>systems</b> <b>development</b> methodologies in the <b>development</b> of e-government <b>systems.</b> The study followed the qualitative research method; interviews were conducted in four case studies involved in the <b>development</b> of e-government <b>systems.</b> The collected data were then analysed using a software analytical tool called Atlas ti. 6. 1. Subsequently a cross-case analysis was performed on the four case studies. The research findings of this study indicated that the appropriate use of <b>systems</b> <b>development</b> methodologies in the <b>development</b> of e-government <b>systems</b> helps improve the quality of e-government <b>systems,</b> reduces <b>development</b> costs, and also makes the development process effective and efficient. Based on the information gathered from the four case studies, developers in government find it difficult to select a suitable <b>systems</b> <b>development</b> methodology to use when developing e-government systems. Therefore the study proposes a conceptual framework {{that can be used to}} select the appropriate <b>systems</b> <b>development</b> methodology when developing e-government systems. This framework is made up of characteristics of e-government systems and different types of <b>systems</b> <b>development</b> methodologies. Master...|$|R
25|$|The Nintendo Platform Technology Development {{division}} {{is a combination}} of Nintendo's former Integrated Research & Development (or IRD) and <b>System</b> <b>Development</b> (or SDD) divisions. Led by Ko Shiota, the {{division is}} responsible for designing hardware and developing Nintendo's operating systems, developer environment and internal network as well as maintenance of the Nintendo Network.|$|E
25|$|On September 22, 1966, Secretary of Defense Robert McNamara {{recommended}} retiring all of {{the remaining}} Hound Dog missiles within a few years. The Hound Dogs would be retained pending {{the outcome of the}} Terrain Contour Matching (TERCOM) guidance <b>system</b> <b>development</b> program. Secretary McNamara's recommendation was not acted upon, and the Hound Dog remained in service.|$|E
25|$|Across a {{protracted}} development {{period of several}} years, previews of Copland garnered much press which introduced the layperson Macintosh audience to basic concepts of modern operating system design such as object orientation, crash-proofing, and multitasking. The project was Apple's trigger to cofound several industry-wide standards and consortiums for next-generation operating <b>system</b> <b>development,</b> such as OpenDoc and Taligent.|$|E
40|$|The paper {{discusses}} {{scientific and}} technological problems of dynamic integrated expert <b>systems</b> <b>development.</b> Extensions of problem-oriented methodology for dynamic integrated expert <b>systems</b> <b>development</b> are considered. Attention is paid to the temporal knowledge representation and processing. Comment: 8 pages, 3 figure...|$|R
5000|$|... 1984. [...] Beyond {{productivity}} : information <b>systems</b> <b>development</b> for organizational effectiveness : {{proceedings of}} the IFIP WG 8.2 Working Conference on Beyond Productivity : information <b>systems</b> <b>development</b> for organizational effectiveness, Minneapolis, Minnesota, U.S.A., 22-24 August 1983. Bemelmans (ed.) North-Holland. 1984.|$|R
30|$|In view of {{the vast}} amount of {{competing}} Instructional Design/Instructional <b>Systems</b> <b>Development</b> models, a comprehensive framework – called ADDIE – is widely used in Instructional <b>Systems</b> <b>Development.</b> Actually, ADDIE exists more as a label than as an Instructional Design model, and its origins are not clear at all. It seems that the ADDIE model is an umbrella term referring to a family of procedural Instructional Design models that share a common underlying structure of Instructional <b>Systems</b> <b>Development.</b> Although there is no original and elaborated ADDIE model (Molenda 2003), most theorists agree that ADDIE is an acronym that covers the major processes of the generic Instructional <b>Systems</b> <b>Development</b> process: A nalysis, D esign, D evelopment, I mplementation, and E valuation.|$|R
