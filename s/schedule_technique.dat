5|2053|Public
30|$|In {{a recent}} work, Patikirikorala et al. [59] {{proposed}} {{a new approach}} for QoS performance management and resource provisioning by using an off-line identification of Hammerstein and Wiener nonlinear block structural model. Using the characteristic structure of the nonlinear model, a predictive feedback controller based on a gain <b>schedule</b> <b>technique</b> is incorporated in the design to achieve the performance objectives.|$|E
40|$|Runtime {{management}} of Quality of Service (QoS) performance and resource provisioning {{is a vital}} issue in shared resource software environments. A useful performance management technique for such software systems is the relative guarantee feedback control scheme. The existing approaches for this class of control systems are mainly based on off-line linear or on-line model identification and control techniques, which tend to have performance issues {{in the presence of}} nonlinearities induced by this scheme. Instead of using such modeling techniques, this paper proposes a new approach for QoS performance management and resource provisioning by using an off-line identification of Hammerstein and Wiener nonlinear block structural model. Using the characteristic structure of the nonlinear model, a predictive feedback controller based on a gain <b>schedule</b> <b>technique</b> is incorporated in the design to achieve the performance objectives. The proposed approach is validated using experiments based on a prototype, demonstrating superior runtime QoS performance management and resource provisioning in a complex software system...|$|E
40|$|This pilot {{research}} {{attempts to}} investigate differences in process between lighting study using physical model and computational simulation. A Physical modelling team, a computational modelling team, and a monitoring and tracking team were formed to process and monitor the research by a defined workflow {{of the design}} process. Using a time <b>schedule</b> <b>technique,</b> the procedures {{of each of the}} two methods were tracked. The research reveals that the research team favoured physical modelling for its ease of use and computational simulation for its flexibly. And that the users of physical models were more aware of the need for technical knowledge whilst the users of simulation software are more contended with the virtual results without evaluating them critically. In addition, the experiment also shows that the feedback mechanism of the physical modelling process is instant, continues and intuitive, whereas that of the computational process is discrete. Preliminary results not only confirm the long established view that the computational process lacks the tactile quality required for architectural understanding, worst still, it gives inexperienced users an illusion of knowledge and claims of understanding. Due to limitations of time, the research captures only the feasibility stage of the design process, further works involving a more comprehensive design program should be conducted...|$|E
40|$|Abstract — This paper {{shows the}} {{comparative}} study about existing <b>scheduling</b> <b>technique</b> in grid computing. This paper also shows {{the performance and}} capability for each <b>scheduling</b> <b>technique.</b> Four existing <b>scheduling</b> <b>technique</b> are AppLeS, Condor-G, Nimrod/G and GrADS have been studied and analyzed. Several experiments have been done for each technique by using simulation and tested in real grid. The results shows a performance and capability for each <b>scheduling</b> <b>technique</b> and was analyzed in summary table...|$|R
40|$|This chapter {{deals with}} the survey of <b>scheduling</b> <b>techniques</b> for the forward link and access schemes for the return link in {{satellite}} systems. In the forward link, technologies are considered as baseline that apply adaptive coding and modulation. The <b>scheduling</b> <b>techniques</b> proposed are designed in a cross-layer approach, i. e. decisions at the MAC layer are made considering {{the evolution of the}} physical layer (channel conditions experienced by the involved receivers) in order to optimize the transmission. In addition, <b>scheduling</b> <b>techniques</b> suitable for multicast are analysed...|$|R
40|$|Recently, {{high-performance}} computer architecture {{has focused on}} dynamic <b>scheduling</b> <b>techniques</b> to issue and ex-ecute multiple operations concurrently. These designs are complex and have frequently shown disappointing perfor-mance. A complementary approach {{is the use of}} static <b>scheduling</b> <b>techniques</b> to exploit the same parallelism. In this paper we describe some of the tradeoffs between the use of static and dynamic <b>scheduling</b> <b>techniques</b> and show that with appropriate scheduling, low-complexity designs using only static scheduling have significant advantages over high-complexity designs using dynamic scheduling in real systems. 1...|$|R
40|$|Short Messaging Services (SMS) is {{a service}} for {{transmitting}} text messages between mobile phones and also external {{systems such as}} electronic mail, paging and voice mail systems. In today's digital age, this service has becomes a valuable and effective tool for the students and lecturers in education environment. Some universities have used the SMS technology to improve {{the effectiveness of their}} services such as exam result notification, class cancellation, class changes, appointment reminders, class schedules and so forth. With SMS, students and lecturers can be reached in anywhere and anytime with ensuring that message is delivered. The SMS class schedule is a way to provide a service for students to retrieve their class schedule or timetable faster and cost effective. This service also can increase convenience for the students because the information comes to them immediately and effectively rather than having to seek them on paper. This paper begins by studying two common techniques of class schedule through SMS, which are addressed on SMS via cellular modem and SMS via gateway. It will describe the system architecture of these techniques include how they were implemented, itâ€™s strengths and weaknesses in main aspects such as network interoperability and messaging cost. From these two techniques, the studies will come out with an appropriate technique solution for the class schedule via SMS for the student convenience, which considered the cost-effective and practical factors. Finally, the paper reports on the finding of a new prototype of SMS class <b>schedule</b> <b>technique</b> that will benefit students and lectures in terms of fast delivery of class schedule, reliable and effective cost communication for concise information...|$|E
40|$|UnrestrictedThe {{design of}} {{hardware}} and software for embedded systems is well understood. But the compatibility problems between the two parts increases {{the time and effort}} of exploring the system design space. This research lies at the interface between the {{hardware and software}} design to reduce incompatibilities. This research has contributions in hardware verification and automatically retargetable software.; This research is unique because the microarchitecture of the embedded system is an input to the methodology rather than a fixed structure. The semantics of the instruction set architecture are described as an ISA extension language added to the architectural description. The extensions are considered assertions, are verified in the microprocessor hardware and are constraints in the automatic retargeting of the software.; The architectural verification portion of this research considers both the structure and timing of data and control in the microprocessor datapath. A technique named structural correctness verifies the structure of the datapath has the required number and types of operand paths, execution units and control signals. Structural correctness is based on a path searching technique. Another technique named Hardware Token Graph (HTG) semantic model and simulation rules verifies the timing synchronization of data and control. The microprocessor states represent the location of data and control passing through the datapath at clock edges. The semantic model is analyzed using a simulation reachability analysis. The generated reachability tree is examined for the desired states which correspond to the correct operation of the microprocessor.; The software portion of this research describes an automatically retargetable optimizing assembler. A novel technique for software optimizations performs integrated instruction scheduling and register allocation under resource-conflict and data-dependency constraints. The software instruction scheduling is based on a priority <b>schedule</b> <b>technique,</b> and the register allocation is based on a linear scan allocation.; An implementation of this methodology has been developed named RAVE (Retargetable optimizing Assembler with architectural VErification). RAVE has been applied to instruction set trade-off analysis for edge detection and DNA sequencing applications to demonstrate its utility with promising results...|$|E
40|$|Timeliness in {{conventional}} real-time systems is addressed by employing well-known <b>scheduling</b> <b>techniques</b> that guarantee {{the execution of}} a number of tasks within certain deadlines. However, these classical <b>scheduling</b> <b>techniques</b> do not take into account basic features that characterize today's critical pervasive computing environments. In this paper...|$|R
40|$|With {{aggressive}} instruction <b>scheduling</b> <b>techniques</b> {{and significant}} increases in instruction-level par-allelism (ILP), modern computer architectures have seen an impressive increase in performance. Un-fortunately, large amounts of ILP hardware and aggressive instruction <b>scheduling</b> <b>techniques</b> put large demands on a machine’s register resources. With these demands, it becomes difficult to maintain a sin...|$|R
40|$|In {{the area}} of Computer Science, Parallel job {{scheduling}} is an important field of research. Finding a best suitable processor on the high performance or cluster computing for user submitted jobs plays animportant role in measuring system performance. A new <b>scheduling</b> <b>technique</b> called communication aware scheduling is devised and is capable of handling serial jobs, parallel jobs, mixed jobs and dynamic jobs. This work focuses the comparison of communication aware scheduling with the available parallel job <b>scheduling</b> <b>techniques</b> and the experimental results show that communication aware scheduling performs better {{when compared to the}} available parallel job <b>scheduling</b> <b>techniques...</b>|$|R
40|$|Instruction {{scheduling}} is {{a necessary}} step in compiling for many modern microprocessors. Traditionally, global instruction <b>scheduling</b> <b>techniques</b> have outperformed local techniques. However many of the global <b>scheduling</b> <b>techniques</b> described in the literature have a side e#ect of increasing the size of compiled code. In an embedded system, the size of compiled code is often a critical issue. In such circumstances, the scheduler should use techniques that avoid increasing {{the size of the}} generated code. This paper explores two global <b>scheduling</b> <b>techniques,</b> extended basic block scheduling and dominator path scheduling, that do not increase the size of the object code, and in some cases may decrease it...|$|R
40|$|Automatic {{tool support}} for {{scheduling}} applications on multiprocessor platforms is {{of paramount importance}} both to guarantee critical application demands and to keep development costs down. In this paper we present GAST, an object-oriented evaluation environment for multiprocessor assignment and <b>scheduling</b> <b>techniques.</b> GAST is based on a decomposition approach where existing assignment and <b>scheduling</b> <b>techniques</b> have been broken down into a set of common operations. By combining these operations into a complete scheduling process, GAST offers a powerful toolbox of existing assignment and <b>scheduling</b> <b>techniques.</b> GAST has been implemented on several popular operating systems and is accompanied by a graphic visualization tool that allows for flexible interaction with the application scheduling process...|$|R
40|$|In {{this modern}} era of {{technological}} progress, multi-core processors have brought significant and consequential {{improvements in the}} available processing potential {{to the world of}} real-time embedded systems. These improvements impose a rapid increment of software complexity as well as processing demand placed on the underlying hardware. As a consequence, the need for efficient yet predictable multi-core <b>scheduling</b> <b>techniques</b> is on the rise. As part of this thesis, in-depth research of currently available multi-core <b>scheduling</b> <b>techniques,</b> belonging to both partitioned and global approaches, is done in the context of real-time embedded systems. The emphasis is on the degree of their usability on hard real-time systems, focusing on the <b>scheduling</b> <b>techniques</b> offering better processor affinity and the lower number of context switching. Also, an extensive research of currently available real-time test-beds as well as real-time operating systems is performed. Finally, a subset of the analyzed multi-core <b>scheduling</b> <b>techniques</b> comprising PSN-EDF, GSN-EDF, PD$^{ 2 }$ and PD$^{ 2 *}$ is simulated on the real-time test-bed LITMUS$^{RT}$...|$|R
40|$|The project {{management}} field has shown great progress {{over the last}} decades. With technology evolution, project managers {{as well as other}} managers have a faster and more efficient way to handle information. While progress brought more abilities to managers, it also brought them more requirements, and an increasingly higher level of minimum accepted quality. The development and usage of new <b>scheduling</b> <b>techniques</b> became therefore imperative, so that better results could be achieved. In this research, four <b>scheduling</b> <b>techniques</b> well documented in the literature were studied: Early Start Schedule, Late Start Schedule, Constructive Heuristics and Branch-and-Bound. The main objective of this research project was to integrate these <b>scheduling</b> <b>techniques</b> into commercially available software, in order to help project managers deal with scheduling tasks in a more easy and controlled way. These <b>scheduling</b> <b>techniques</b> were integrated as an add-in, coded with C# programming language, for Microsoft Project 2010. After developing the add-in, an experimental phase was performed, in which the software was tested using some example projects. The initial hypothesis was confirmed by the results. For the tested projects the conclusion was {{that it was possible to}} get better results, concerning the project’s duration, using the studied techniques rather than the default <b>scheduling</b> <b>technique</b> used by Microsoft Project 2010...|$|R
40|$|The {{construction}} {{industry has been}} relying on the Critical Path Method <b>scheduling</b> <b>technique</b> (CPM) to plan and manage most construction projects. Numerous researchers have shown how the Line of Balance <b>scheduling</b> <b>technique</b> (LOB) has various intrinsic advantages, and offers solutions to many scheduling related problems, relative to the CPM <b>scheduling</b> <b>technique.</b> Studies show that a major reason the {{construction industry}} {{has been slow to}} adopt LOB scheduling was the lack of supporting software. With advancements in construction related technologies, theories, and ideas, the need for more effective and efficient scheduling and management tools has grown correspondingly. A review of literature and search for available software programs reveals very few attempts to produce a well-supported, advanced, and user-friendly LOB scheduling software program for the construction industry prior to the introduction of Vico Control®. With the availability of a supporting software program and the increasing needs and technological advancements in the construction industry, the industry could possibly experience a shift in the <b>scheduling</b> <b>techniques</b> currently used. This study will try to explore the effect of introducing software programs on the utilization of LOB scheduling, and evaluate the advantages, benefits, limitations, and implications of applying this <b>scheduling</b> <b>technique</b> in the construction industry through LOB software programs...|$|R
40|$|In this paper, {{we apply}} {{divisible}} load theory {{to model the}} Grid scheduling problem involving multiple sources to multiple sinks, and present an optimized <b>scheduling</b> <b>technique</b> for this scenario. This <b>scheduling</b> <b>technique</b> can be easily extended to schedule resources with buffer space constraints. We provide a step-wise scheduling algorithm for these constraints. Two example calculations will show the practical utility and efficiency of DLT...|$|R
40|$|Loops with {{conditional}} branches {{have multiple}} execution paths which are di cult to software pipeline. The modulo <b>scheduling</b> <b>technique</b> for software pipelining addresses {{this problem by}} converting loops with conditional branches into straight-line code before scheduling. In this paper we present an Enhanced Modulo <b>Scheduling</b> (EMS) <b>technique</b> that can achieve a lower minimum Initiation Interval than modulo <b>scheduling</b> <b>techniques</b> that rely on either Hierarchical Reduction or If-conversion with Predicated Execution. These three modulo <b>scheduling</b> <b>techniques</b> have been implemented inaprototype compiler. We show that for existing architectures which support one branch per cycle, EMS performs approximately 18 % better than Hierarchical Reduction. We also show that If-conversion with Predicated Execution outperforms EMS assuming one branch per cycle. However, with hardware support for multiple branches per cycle, EMS should perform as well as or better than If-conversion with Predicated Execution. ...|$|R
40|$|This project aims is {{to develop}} an Online Reservation System of Pet Care by using First Come First Served (FCFS) <b>scheduling</b> <b>technique</b> for Mesra Pet Shop at Seksyen 7 Shah Alam. Mesra Pet Shop is a pet store and animal clinic that {{provides}} a variety of services to fulfill the needs and well-being of pet. This project focused on the pet boarding reservation service. Staffs in MPS was difficult to arrange the schedule and manage the reservation of pet care during the peak day. Hence, the main highlight of this project is to apply first come first served <b>scheduling</b> <b>technique</b> in order {{to solve the problem}} in the Mesra Pet Shop. Originally this <b>scheduling</b> <b>technique</b> which means the first task that arrive first will get the service first. By using this definition, the researcher is trying to apply this <b>scheduling</b> <b>technique</b> in Online Reservation System to control the reservation that made by the customer. Besides, System Development Life Cycle (SDLC) model was selected for this project and the researcher has followed several phases in SDLC model in order to complete this project. Based on adoption of this model, the requirements gathered from the users will be modeled and analyzed and validated requirement will be presented in the prototype to show the verification requirement for Online Reservation of Pet Care. In order to accomplish all the objectives of this project, the selected of <b>scheduling</b> <b>technique</b> is applied. As a conclusion, by applying FCFS <b>scheduling</b> <b>technique</b> to solve the problem that were faced by Mesra Pet Shop, it can conclude that all the objectives of this research are achieved...|$|R
40|$|Successful {{implementations}} of <b>scheduling</b> <b>techniques</b> {{in practice}} are scarce. Not only do daily disturbances {{lead to a}} gap between theory and practice, but also {{the extent to which}} a <b>scheduling</b> <b>technique</b> can adequately model the processes on the shopfloor, and the extent to which the optimization goal of a technique matches the organizational goal are not great enough. Further, the schedulers’ actions may play an important role in the fulfilment of the generated schedules. The organizational structure with its different responsibilities and conflicting goals may also result in the poor performance of <b>scheduling</b> <b>techniques.</b> Besides these, there is the problem of measuring the quality of a schedule. Discusses the causes for these gaps and illustrates the solutions to improve scheduling by way of a case study...|$|R
40|$|This paper {{describes}} a simple compile-time <b>scheduling</b> <b>technique,</b> called conditional compaction, which uses {{the concept of}} conditional execution to move instructions across basic block boundaries. It then {{presents the results of}} an investigation into the performance of the <b>scheduling</b> <b>technique</b> using C benchmark programs scheduled for machines with different functional unit configurations. This paper represents the culmination of our investigation into how much performance improvement can be obtained using conditional execution as the sole scheduling techniqu...|$|R
30|$|A novel {{resource}} allocation and <b>scheduling</b> <b>technique,</b> RM-DCWF, for handling an open stream of multi-stage jobs with SLAs. Two task scheduling policies are devised.|$|R
40|$|Many {{potential}} real-world {{planning applications}} {{are on the}} border of planning and scheduling. To handle the complex choices of actions and temporal and resource constraints of these problems we need to integrate planning and <b>scheduling</b> <b>techniques.</b> Here we propose a transition-based formulation of temporal planning problems, that enables us to represent features like deadlines, time windows, release times etc. in a simple way. We describe a CSP encoding of the transition-based formulation and its potential advantages in integrating planning and <b>scheduling</b> <b>techniques...</b>|$|R
40|$|Many {{database}} applications {{today are}} characterised by {{the requirement of}} timely access to data. This requirement leads to an increasing trend towards adapting real-time <b>scheduling</b> <b>techniques</b> to the management of data access requests. In this paper, we summarise and stimulate developments of time-cognisant <b>scheduling</b> <b>techniques</b> for database management systems. In particular, we review briefly the methods used in mapping timing constraints of transactions into priorities, and the priority-based protocols used for concurrency control. We also suggest useful directions for future research...|$|R
40|$|Processor <b>scheduling</b> <b>techniques</b> {{are used}} in {{conjunction}} to exploit the major paradigms of algorithmic parallelism, geometric parallelism, and processor farming. Static process <b>scheduling</b> <b>techniques</b> are successfully used with algorithmic and geometric parallelism, whilst dynamic process scheduling is better suited {{in dealing with the}} independent processes inherent in the processor farming paradigm. This paper investigates the application of parallel, or multi-computers to a class of problems exhibiting spatial data characteristic of the geometric paradigm that is best suited to the static scheduling scheme. However, by using the processor farming paradigm, a dynamic <b>scheduling</b> <b>technique</b> is developed to suit the MIMD structure of the multi-computers. The specific problem chosen for the investigation is the recognition and classification of microscopic wear particles generated by wear mechanisms. Experiments are performed on both schemes and compared in terms of total processing time, speedup, and efficiency...|$|R
40|$|Abstract. With {{the advent}} of cloud {{computing}} technology, {{one of the important}} issues that had been raised in this debate is Task <b>scheduling</b> <b>techniques.</b> The main challenge in scheduling is to reduce Makespan, which is the required time to finish all the running tasks. Scheduling is a NP-hard problem and with a given number of jobs and the machines, it is difficult to find a definitive solution to this problem. Many researchers have tried to solve this crucial problem in cloud computing. This article tries to presents a new meta heuristic <b>scheduling</b> <b>technique</b> Using a combination of Cat Swarm Optimization (CSO) and Genetic Algorithm (GA). Using a combination of CSO and GA, a new hybrid optimization algorithm is introduced, which is called CSO-GA. Evaluation and simulation results show that this proposed <b>scheduling</b> <b>technique</b> is able to reduce Makespan in comparison with other techniques...|$|R
40|$|Frequency-Based List Scheduling (FBLS) is an {{extension}} of traditional list scheduling. The extension considers varying execution frequencies in meta-blocks created by global <b>scheduling</b> <b>techniques</b> such as Dominator Path Scheduling and Trace Scheduling. Traditional list scheduling was designed for use by local instruction <b>scheduling</b> <b>techniques.</b> These traditional list schedulers are useful in scheduling blocks that do not contain control flow. However, as global <b>scheduling</b> <b>techniques</b> extend the <b>scheduling</b> context to consider parallelism beyond the basic block boundaries, instruction schedulers are presented with meta-blocks to be scheduled. Meta-blocks contain control flow which is ignored by traditional list schedulers. In order to improve schedules for meta-blocks, FBLS was developed to place operations in the "best" possible area of the schedule. Here "best" refers to that region with the lowest execution frequency which meets all control and data dependencies. The algorithm was evalua [...] ...|$|R
40|$|Despite {{a number}} of similarities, vehicle routing {{problems}} and scheduling problems are typically solved with different techniques. In this paper, we undertake a systematic study of problem characteristics that differ between vehicle routing and scheduling problems {{in order to identify}} those that are important for the performance of typical vehicle routing and <b>scheduling</b> <b>techniques.</b> In particular, we find that the addition of temporal constraints among visits or the addition of tight vehicle specialization constraints significantly improves the performance of <b>scheduling</b> <b>techniques</b> relative to vehicle routing techniques...|$|R
40|$|Many {{research}} activities {{have focused on}} the problem of task scheduling in heterogeneous systems from the com-putational point of view. However, an ideal scheduling strategy would also take into account the communication requirements of the applications and the communication bandwidth that the network can offer. In this paper, we first propose a criterion to measure the suitability of each allocation of network resources to each parallel applica-tion, according to the communication requirements. Sec-ond, we propose a <b>scheduling</b> <b>technique</b> based exclusively on this criterion that provides a near-optimal mapping of processes to processors according to the communication re-quirements. Evaluation results show that the use of this <b>scheduling</b> <b>technique</b> fully exploits the available network bandwidth, greatly improving network performance. There-fore, the proposed <b>scheduling</b> <b>technique</b> may be used in the design of communication-aware scheduling strategies for those situations where the communication requirements are the system performance bottleneck. 1...|$|R
40|$|Abstract. This paper {{presents}} a middleware real-time <b>scheduling</b> <b>technique</b> for static, distributed, real-time applications. The technique uses global deadline monotonic priority assignment to clients and the Distributed Priority Ceiling protocol to provide concurrency control and priorities for server execution. The paper {{presents a}} new algorithm for mapping the potentially {{large number of}} unique global priorities required by this <b>scheduling</b> <b>technique</b> to the restricted set of priorities provided by commercial real-time operating systems. This algorithm is called Lowest Overlap First Priority Mapping; we prove that it is optimal among direct priority mapping algorithms. This paper also presents the implementation of these real-time middleware <b>scheduling</b> <b>techniques</b> in a <b>Scheduling</b> Service that meets the interface proposed for such a service in the Real-Time CORBA 1. 0 standard. Our prototype Scheduling Service is integrated with the commercial PERTS tool that provides schedulability analysis and automated generation of global and local priorities for clients and servers...|$|R
40|$|In recent years, {{parameterized}} dataflow {{has evolved}} {{as a useful}} framework for modeling synchronous and cyclo-static graphs in which arbitrary parameters can be changed dynamically. Parameterized dataflow has proven to have significant expressive power for managing dynamics of DSP applications in important ways. However, efficient hardware synthesis techniques for parameterized datafow representations are lacking. This paper addresses this void; specifically, the paper investigates efficient {{field programmable gate array}} (FPGA) -based implementation of parameterized cyclostatic dataflow (PCSDF) graphs. We develop a <b>scheduling</b> <b>technique</b> for throughput-constrained minimization of dataflow buffering requirements when mapping PCSDF representations of DSP applications onto FPGAs. The proposed <b>scheduling</b> <b>technique</b> is integrated with an existing formal schedule model, called the generalized schedule tree, to reduce schedule cost. To demonstrate our new, hardware-oriented PCSDF <b>scheduling</b> <b>technique,</b> we have designed a real-time base station emulator prototype based on a subset of long-term evolution (LTE), which is a key cellular standard...|$|R
3000|$|... of the n th {{layer of}} the k th user. In this section, we will find bounds that are {{independent}} of n and i for each <b>scheduling</b> <b>technique.</b>|$|R
40|$|A {{frame-based}} expert scheduling system shell, PLAN-IT, {{is developed}} for spacecraft scheduling in the Request Integration Phase, using the Comet Rendezvous Asteroid Flyby (CRAF) mission as a development base. Basic, structured, and expert <b>scheduling</b> <b>techniques</b> are reviewed. Data {{elements such as}} activity representation and resource conflict representation are discussed. Resource constraints include minimum and maximum separation times between activities, percentage of time pointed at specific targets, and separation time between targeted intervals of a given activity. The different <b>scheduling</b> <b>technique</b> categories and the rationale for their selection are also considered...|$|R
40|$|In this letter, we employ {{orthogonal}} random beamforming (ORBF) for {{the worst-case}} multi-user downlink scenario where each user is wiretapped by one eavesdropper. Two opportunistic <b>scheduling</b> <b>techniques</b> that ensure confidentiality by exploiting multi-user diversity are investigated; the first technique (optimal) requires limited feedback of the effective signal-to-interference ratio (SIR) {{from all the}} users and the eavesdroppers while the second technique (suboptimal) incorporates SIR knowledge from only the legitimate users. By using extreme value theory, we derive the achievable SIR-based secrecy sum-rate and the associated scaling laws for both <b>scheduling</b> <b>techniques...</b>|$|R
40|$|A {{number of}} recent studies have {{investigated}} <b>scheduling</b> <b>techniques</b> in support of variable bit rate (VBR) video. When compared with constant bit rate (CBR) video, VBR has a lower storage and bandwidth requirement while providing the same quality of images. However, a VBR video clip might exhibit a significant variance in the bit rate required to support its continuous display. The previous studies have proposed techniques to support the display of a VBR clip from two different perspectives: disk storage subsystem and the network. In this study, we propose a taxonomy of VBR disk <b>scheduling</b> <b>techniques</b> that includes those proposed for the network. The results demonstrate that {{a new class of}} disk <b>scheduling</b> <b>techniques,</b> termed Atomic Γ V R 2 V ITAL, is superior. Algorithms used to represent this class were adopted from the networking literature. 1 Introduction Due to several advances in computer processing, storage performance, and high speed communications, a number of data intens [...] ...|$|R
40|$|Instruction schedulers for superscalar and VLIW {{processors}} must expose sufficient instruction-level parallelism to {{the hardware}} {{in order to}} achieve high performance. Traditional compiler instruction <b>scheduling</b> <b>techniques</b> typically take into account the constraints imposed by all execution scenarios in the program. However, there are additional opportunities to increase instruction-level parallelism for the frequent execution scenarios {{at the expense of the}} less frequent ones. Profile information identifies these important execution scenarios in a program. In this paper, two major categories of proffile information are studied: control-flow and memory-dependence. Profile-assisted code <b>scheduling</b> <b>techniques</b> have been incorporated into the IMPACT-I compiler. These techniques are acyclic global scheduling and software pipelining. This paper describes the scheduling algorithms, highlights the modifications required to use profile information, and explains the hardware and compiler support for dealing with hazards that arise from aggressive use of profile information. The effectiveness of these profile-based <b>scheduling</b> <b>techniques</b> is evaluated for a range of superscalar and VLIW processors...|$|R
