82|10000|Public
25|$|Phunware, Inc.: Phunware is {{responsible}} for multiscreen infrastructure, <b>software</b> <b>and</b> <b>application</b> development services for an impressive list of top-tier customers. WWE invested in it in 2014.|$|E
25|$|Computer {{programs}} may be categorized along functional lines. The main functional categories are application software and system software. System software includes {{the operating system}} which couples computer hardware with application software. The purpose of the operating system is to provide {{an environment in which}} application software executes in a convenient and efficient manner. In addition to the operating system, system software includes embedded programs, boot programs, and micro programs. Application software designed for end users have a user interface. Application software not designed for the end user includes middleware, which couples one application with another. Application software also includes utility programs. The distinction between system <b>software</b> <b>and</b> <b>application</b> software is under debate.|$|E
2500|$|Many Linux distributions, or [...] "distros", {{manage a}} remote {{collection}} of system <b>software</b> <b>and</b> <b>application</b> software packages available for download and installation through a network connection. This {{allows users to}} adapt the operating system to their specific needs. Distributions are maintained by individuals, loose-knit teams, volunteer organizations, and commercial entities. A distribution {{is responsible for the}} default configuration of the installed Linux kernel, general system security, and more generally integration of the different software packages into a coherent whole. Distributions typically use a package manager such as apt, yum, zypper, pacman or portage to install, remove, and update all of a system's software from one central location.|$|E
5000|$|... #Subtitle level 3: Proprietary data-mining <b>software</b> <b>and</b> <b>applications</b> ...|$|R
5000|$|... #Subtitle level 3: Free {{open-source}} {{data mining}} <b>software</b> <b>and</b> <b>applications</b> ...|$|R
50|$|There {{are many}} types of <b>software</b> <b>and</b> <b>applications</b> used to create documentation.|$|R
5000|$|SoCEDS, {{a set of}} {{development}} tools, utility programs, run-time <b>software,</b> <b>and</b> <b>application</b> examples to help you develop software for SoC FPGA embedded systems.|$|E
5000|$|Phunware, Inc.: Phunware is {{responsible}} for multiscreen infrastructure, <b>software</b> <b>and</b> <b>application</b> development services for an impressive list of top-tier customers. WWE invested in it in 2014.|$|E
50|$|Caucho Technology {{is based}} in San Diego, CA. It is an {{information}} technology company that produces web server <b>software</b> <b>and</b> <b>application</b> server software {{as well as the}} originators of Quercus and Hessian open source projects.|$|E
5000|$|... 2006. [...] "ISO Standards for Interoperability: a comparison." [...] Interoperability of Enterprise <b>Software</b> <b>and</b> <b>Applications.</b> Springer London, p. 55-64.|$|R
50|$|<b>Software</b> {{engineering}} <b>and</b> <b>Application</b> Development - {{for students}} {{interested in the}} <b>software</b> engineering concepts <b>and</b> techniques required for the design and implementation of large <b>software</b> systems <b>and</b> <b>applications.</b>|$|R
5000|$|IEEE Annual International Computers, Software & Applications Conference (IEEE COMPSAC): First held in 1977 in Chicago, Illinois, IEEE COMPSAC is {{an annual}} {{international}} conference focusing on computers, <b>software,</b> <b>and</b> <b>applications,</b> including cloud computing. Conference programs address research results, advancements and future trends in computer <b>and</b> <b>software</b> technologies <b>and</b> <b>applications</b> through keynote addresses, panel discussions, workshops, and doctoral symposiums.|$|R
5000|$|MunichRe have {{assembled}} {{a family of}} [...] "collaboration models" [...] to cover the whole spectrum of <b>software</b> <b>and</b> <b>application</b> work. Four collaboration models — exploratory, standard, maintenance, and support — have been built on the same kernel from {{the same set of}} 12 practices.|$|E
50|$|As {{a result}} of the {{competitive}} tension between RACF and ACF2, IBM matured the SAF (Security Access Facility) interface in MVS (z/OS), which allowed any security product to process OS, third-party <b>software</b> <b>and</b> <b>application</b> security calls, enabling the mainframe to secure all facets of mainframe operations.|$|E
50|$|GMX Multi Messenger was {{an instant}} {{messenger}} <b>software</b> <b>and</b> <b>application</b> launched by the German webmail provider GMX Mail in November, 2006. GMX is a subsidiary of United Internet, a company that also owns the webmailer Web.de, which offered the same instant messenger client with their own branding.|$|E
2500|$|Omar Alshathry, Helge Janicke, [...] "Optimizing Software Quality Assurance," [...] compsacw, pp.87–92, 2010 IEEE 34th Annual Computer <b>Software</b> <b>and</b> <b>Applications</b> Conference Workshops, 2010.|$|R
50|$|The {{term was}} coined {{in a paper}} written by Ning Zhong, Jiming Liu Yao and Y.Y. Ohsuga in the Computer <b>Software</b> <b>and</b> <b>Applications</b> Conference in 2000.|$|R
5000|$|McCaffrey, J.D., [...] "Generation of Pairwise Test Sets using a Genetic Algorithm", Proceedings of the 33rd IEEE International Computer <b>Software</b> <b>and</b> <b>Applications</b> Conference, July 2009, pp. 626-631.|$|R
50|$|The {{operating}} system (prominent examples being Microsoft Windows, macOS and Linux), allows {{the parts of}} a computer to work together by performing tasks like transferring data between memory and disks or rendering output onto a display device. It provides a platform (hardware abstraction layer) to run high-level system <b>software</b> <b>and</b> <b>application</b> software.|$|E
50|$|Currently, {{the company}} is {{investing}} in OpenRFM for Radio Frequency (RF) and microwave processing that will bring interoperability to the RF/microwave domain, as OpenVPX did in the digital realm. OpenRFM standardizes the profiles, interfaces and protocols for RF and microwave processing enabling sensor chain applications to be fully open systems compliant.Mercury applies open systems architectures to software as well as hardware. This approach, applied to middleware preserves the <b>software</b> <b>and</b> <b>application</b> investments while adding new capabilities through tech-refreshes.|$|E
5000|$|Embedded {{software}} resides as firmware within embedded systems, devices {{dedicated to}} a single use or a few uses such as cars and televisions (although some embedded devices such as wireless chipsets can themselves {{be part of an}} ordinary, non-embedded computer system such as a PC or smartphone). In the embedded system context there is sometimes no clear distinction between the system software and the application software. However, some embedded systems run embedded operating systems, and these systems do retain the distinction between system <b>software</b> <b>and</b> <b>application</b> software (although typically there will only be one, fixed, application which is always run).|$|E
50|$|AIM {{produces}} <b>software</b> <b>and</b> <b>applications</b> for mobile telephones, including cameras, GPS, SMS-systems, ringtones, dictionaries, games, and hardware. Examples {{of companies}} that use AIM products are i-Mate, Motorola, HP, Vodafone, Orange, T-Mobile, and others.|$|R
50|$|Some <b>software</b> <b>and</b> <b>applications,</b> such as GIMP, {{provide an}} option for users to turn off some or all tooltips.However, such options are left to the {{discretion}} of the developer, and are often not implemented.|$|R
30|$|J. Srinivasan, R. Dobrin and K. Lundqvist. ’State of the Art’ in Using Agile Methods for Embedded Systems Development. 33 rd Annual IEEE International Computer <b>Software</b> <b>and</b> <b>Applications</b> Conference, Seattle, Washington, USA, pages 522 – 527, July 2009.|$|R
5000|$|While these {{considerations}} may {{be directed toward}} any building, achieving an ideal optimized cost/performance solution requires careful, holistic, system integration engineering of these scientific principles. Modern refinements through computer modeling (such as the comprehensive U.S. Department of Energy [...] "Energy Plus" [...] building energy simulation <b>software),</b> <b>and</b> <b>application</b> of decades of lessons learned (since the 1970s energy crisis) can achieve significant energy savings and reduction of environmental damage, without sacrificing functionality or aesthetics. In fact, passive-solar design features such as a greenhouse/sunroom/solarium can greatly enhance the livability, daylight, views, and value of a home, at a low cost per unit of space.|$|E
5000|$|Many Linux distributions, or [...] "distros", {{manage a}} remote {{collection}} of system <b>software</b> <b>and</b> <b>application</b> software packages available for download and installation through a network connection. This {{allows users to}} adapt the operating system to their specific needs. Distributions are maintained by individuals, loose-knit teams, volunteer organizations, and commercial entities. A distribution {{is responsible for the}} default configuration of the installed Linux kernel, general system security, and more generally integration of the different software packages into a coherent whole. Distributions typically use a package manager such as apt, yum, zypper, pacman or portage to install, remove, and update all of a system's software from one central location.|$|E
50|$|Computer {{programs}} may be categorized along functional lines. The main functional categories are application software and system software. System software includes {{the operating system}} which couples computer hardware with application software. The purpose of the operating system is to provide {{an environment in which}} application software executes in a convenient and efficient manner. In addition to the operating system, system software includes embedded programs, boot programs, and micro programs. Application software designed for end users have a user interface. Application software not designed for the end user includes middleware, which couples one application with another. Application software also includes utility programs. The distinction between system <b>software</b> <b>and</b> <b>application</b> software is under debate.|$|E
50|$|The FSU Digital Studio {{has seven}} staff {{members in the}} Spring 2011 semester, {{all of whom have}} varying levels of {{expertise}} with a variety of <b>software</b> <b>and</b> <b>applications,</b> including Photoshop, InDesign, Dreamweaver, Powerpoint, Prezi, Movie Maker, Vuvox, etc.|$|R
50|$|JAMB {{also has}} an online {{practice}} test on its website which enables students to practice. There are also some test <b>software</b> <b>and</b> <b>applications</b> which are made by several test preparatory companies, none of which JAMB is affiliated with.|$|R
50|$|The {{consortium}} {{provides a}} neutral forum for vendors and developers {{who are interested}} in, working with, and/or proliferating multicore-related products, including processors, infrastructure, devices, <b>software,</b> <b>and</b> <b>applications.</b> Its members represent vendors of processors, operating systems, compilers, development tools, debuggers, ESL/EDA tools, <b>and</b> simulators; <b>and</b> <b>application</b> <b>and</b> system developers.|$|R
50|$|All rolling {{distributions}} (whether part-, full-, pseudo-, true-, cyclic-, etc.) have software {{contained in}} the repositories that is more current than that contained on the installation media and usually contains very recent software releases - often the latest stable software releases available. They have pseudo-releases and installation media that are simply {{a snapshot of the}} software distribution {{at the time of the}} release. There is therefore no need to reinstall the operating system, as is (usually) the case with upgrading between versions of a standard release. Also, a rolling release operating system installed from an old install disc can be fully updated post-installation to the latest system <b>software</b> <b>and</b> <b>application</b> software via the Internet.|$|E
5000|$|From a {{technical}} standpoint, {{it is important}} to note that the distinction between an MBR and a volume boot record exists only at the user software level, above the BIOS firmware. (Here, the term [...] "user software" [...] refers to both operating system <b>software</b> <b>and</b> <b>application</b> software.) To the BIOS, removable (e.g. floppy) and fixed disks are essentially the same. For either, the BIOS reads the first physical sector of the media into RAM at absolute address 7C00hex, checks the signature in the last two bytes of the loaded sector, and then, if the correct signature is found, transfers control to the first byte of the sector with a jump (JMP) instruction. The only real distinction that the BIOS makes is that (by default, or if the boot order is not configurable) it attempts to boot from the first removable disk before trying to boot from the first fixed disk. From the perspective of the BIOS, the action of the MBR loading a volume boot record into RAM is exactly the same as the action of a floppy disk volume boot record loading the object code of an operating system loader into RAM. In either case, the program that BIOS loaded is going about the work of chain loading an operating system. The distinction between an MBR and a volume boot record is an OS software-level abstraction, designed to help people to understand the operational organization and structure of the system. That distinction doesn't exist for the BIOS. Whatever the BIOS directly loads, be it an MBR or a volume boot record, is given total control of the system, and the BIOS from that point is solely at the service of that program. The loaded program owns the machine (until the next reboot, at least). With its total control, this program is not required to ever call the BIOS again and may even shut BIOS down completely, by removing the BIOS ISR vectors from the processor interrupt vector table, and then overwrite the BIOS data area. This is mentioned to emphasize that the boot program that the BIOS loads and runs from the first sector of a disk can truly do anything, so long as the program does not call for BIOS services or allow BIOS ISRs to be invoked after it has disrupted the BIOS state necessary for those services and ISRs to function properly.|$|E
40|$|This paper {{describes}} the hardware, <b>software</b> <b>and</b> <b>application</b> programming {{of a small}} multiprocessor, designed and built, which consists of eight IBM PC/XT motherboards connected together using point-to-point byte-wide bidirectional communication links with storage at each link. Pascal has been enhanced with a few routines for interprocess communication and remote process initialization. This facilitates writing parallel programs. MSDOS is the underlying operating system...|$|E
50|$|The E-series JUNOSe system <b>software</b> <b>and</b> <b>applications</b> {{supports}} stateful Switch Route Processor switchover capabilities. The {{high availability}} for subscriber management applications, including all Point-to-Point Protocol and Dynamic Host Configuration Protocol access options, {{means that all}} subscriber sessions and services remain active during failure.|$|R
50|$|Rasmussen holds patents on thirty-five <b>software</b> {{services}} <b>and</b> <b>applications.</b>|$|R
40|$|In {{this paper}} an {{approach}} for teaching <b>software</b> <b>and</b> <b>applications</b> from {{the convergence of}} classroom experience, contributions of constructionism, Bloom's taxonomy, {{and the concept of}} mindtool, and the context in which it occurs. From the conceptual framework proposed suggestions and examples of activities are analyzed...|$|R
