303|2262|Public
5|$|Fortinet {{was founded}} in 2000 by {{brothers}} Ken and Michael Xie. It raised about $93 million in funding by 2004 and introduced ten FortiGate appliances. That same year {{was the beginning of}} a recurring patent dispute between Fortinet and Trend Micro. The company went public in 2009, raising $156 million through an initial public offering. Throughout the 2000s, Fortinet diversified its product lines, adding products for wireless access points, <b>sandboxing,</b> and messaging security, among others.|$|E
25|$|At Pwn2Own 2012, Chrome was {{defeated}} by a French team who used zero day exploits in the version of Flash shipped with Chrome to take complete control of a fully patched 64-bit Windows 7 PC using a booby-trapped website that overcame Chrome's <b>sandboxing.</b>|$|E
25|$|In recent years, {{researchers}} have discovered numerous security flaws in some widely used Java implementations, including Oracle's, which allow untrusted code {{to bypass the}} <b>sandboxing</b> mechanism, exposing users to malicious attacks. These flaws affect only Java applications which execute arbitrary untrusted bytecode, such as web browser plug-ins that run Java applets downloaded from public websites. Applications where the user trusts, and has full control over, all code that is being executed are unaffected.|$|E
50|$|He is the CEO of Hubli <b>Sandbox,</b> Chairman of <b>Sandbox</b> Startups and Managing Trustee of Deshpande Educational Trust. He also co-founded Ek Soch <b>Sandbox</b> {{and is the}} Patron of Kakatiya <b>Sandbox.</b> He {{has also}} contributed {{significantly}} to the founding of the Hubli chapter of TiE.|$|R
50|$|<b>Sandbox</b> Industries manages five Funds. Two are {{traditional}} funds: <b>Sandbox</b> Venture Fund and <b>Sandbox</b> Advantage Fund; and three are Collaborative Investment Vehicles: Blue Cross Blue Shield Venture Partners I, L.P., Blue Cross Blue Shield Venture Partners II, L.P., and Cultivian <b>Sandbox</b> Food and Agriculture Fund II.|$|R
50|$|<b>Sandbox</b> Venture Fund (SVF) {{invested}} {{primarily in}} <b>Sandbox</b> Industries' Foundry companies.|$|R
500|$|On Windows 10, Windows Store {{serves as}} a unified {{storefront}} for apps, music, films, TV series and ebooks. Windows 10 also allows web apps and desktop software (using either Win32 or [...]NET Framework) to be packaged for distribution on the Windows Store. Desktop software distributed through Windows Store is packaged using the App-V system to allow <b>sandboxing.</b>|$|E
2500|$|Subgraph (operating system), a Linux {{distribution}} which approaches security through <b>sandboxing</b> ...|$|E
2500|$|In 2011, {{a report}} by Accuvant, funded by Google, rated the {{security}} (based on <b>sandboxing)</b> of Internet Explorer worse than Google Chrome but better than Mozilla Firefox.|$|E
5000|$|Ghost Trap is {{a variant}} of GPL Ghostscript secured and <b>sandboxed</b> using Google Chrome's <b>sandbox</b> technology.|$|R
50|$|The Ek Soch <b>Sandbox</b> in Varanasi was {{inspired}} by the Deshpande Foundation’s Social Innovation <b>Sandbox</b> model - the Hubli <b>Sandbox.</b> It was co-founded by Dilip Modi, the pioneering telecom entrepreneur in India and Naveen Jha, CEO of Deshpande Foundation, India.|$|R
5000|$|In 2011, CNET named Famigo <b>Sandbox</b> (the {{parental control}} app) the Best App for Parents. PC Pro named Famigo <b>Sandbox</b> {{one of the}} 25 best Android apps. Time Magazine’s tech section named Famigo <b>Sandbox</b> one of “The 10 Best Android Games for Kids.” ...|$|R
2500|$|A {{more recent}} browser {{security}} white paper comparing Google Chrome, Microsoft Edge, and Internet Explorer 11 by X41 D-Sec in 2017 came to similar conclusions, {{also based on}} <b>sandboxing</b> and support of legacy web technologies.|$|E
2500|$|Chrome uses a process-allocation {{model to}} sandbox tabs. Using the {{principle}} of least privilege, each tab process cannot interact with critical memory functions (e.g. OS memory, user files) or other tab processes similar to Microsoft's [...] "Protected Mode" [...] used by Internet Explorer 9 or greater. The Sandbox Team {{is said to have}} [...] "taken this existing process boundary and made it into a jail." [...] This enforces a computer security model whereby there are two levels of multilevel security (user and sandbox) and the sandbox can only respond to communication requests initiated by the user. On Linux <b>sandboxing</b> uses the seccomp mode.|$|E
2500|$|In September 2014, Jason Nova of Android Authority {{reported}} on {{a study by the}} German security company Fraunhofer AISEC in antivirus software and malware threats on Android. Nova wrote that [...] "The Android operating system deals with software packages by <b>sandboxing</b> them; this does not allow applications to list the directory contents of other apps to keep the system safe. By not allowing the antivirus to list the directories of other apps after installation, applications that show no inherent suspicious behavior when downloaded are cleared as safe. If then later on parts of the app are activated that turn out to be malicious, the antivirus will have no way to know since it is inside the app and out of the antivirus’ jurisdiction". The study by Fraunhofer AISEC, examining antivirus software from Avast, AVG, Bitdefender, ESET, F-Secure, Kaspersky, Lookout, McAfee (formerly Intel Security), Norton, Sophos, and Trend Micro, revealed that [...] "the tested antivirus apps do not provide protection against customized malware or targeted attacks", and that [...] "the tested antivirus apps were also not able to detect malware which is completely unknown to date but does not make any efforts to hide its malignity".|$|E
40|$|Manual {{processing}} of malware samples became impossible years ago. <b>Sandboxes</b> {{are used to}} automate the analysis of malware samples to gather information about the dynamic behaviour of the malware, both at AV companies and at enterprises. Some malware samples use known techniques to detect when it runs in a <b>sandbox,</b> {{but most of these}} <b>sandbox</b> detection techniques can be easily detected and thus flagged as malicious. I invented new approaches to detect these <b>sandboxes.</b> I developed a tool, which can collect a lot of interesting information from these <b>sandboxes</b> to create statistics how the current technologies work. After analysing these results I will demonstrate tricks to detect <b>sandboxes.</b> These tricks can’t be easily flagged as malicious. Some <b>sandboxes</b> don’t not interact with the Internet in order to block data extraction, but with some DNS-fu the information can be extracted from these appliances as well...|$|R
5000|$|<b>Sandbox</b> of Human Ingenuity: A giant <b>sandbox</b> {{featuring}} The Claw, a larger-than-life sized {{version of}} the classic arcade game.|$|R
40|$|The <b>Sandbox</b> is a {{flexible}} and expressive thinking environment that supports both ad-hoc and more formal analytical tasks. It {{is the evidence}} marshalling and sensemaking component for the analytical software environment called nSpace. This paper presents innovative <b>Sandbox</b> human information interaction capabilities and the rationale underlying them including direct observations of analysis {{work as well as}} structured interviews. Key capabilities for the <b>Sandbox</b> include “put-this-there ” cognition, automatic process model templates, gestures for the fluid expression of thought, assertions with evidence and scalability mechanisms to support larger analysis tasks. The <b>Sandbox</b> integrates advanced computational linguistic functions using a Web Services interface and protocol. An independent third party evaluation experiment with the <b>Sandbox</b> has been completed. The experiment showed that analyst subjects using the <b>Sandbox</b> did higher quality analysis in less time than with standard tools. Usability test results indicated the analysts became proficient in using the <b>Sandbox</b> with three hours of training. Keywords visual analytics, information visualization, sense making, gestures, user-centered design ACM Keyword...|$|R
2500|$|Chromium 9.0 was {{released}} on 23 October 2010, just 16 days after Chromium 8.0, with 9.0.562.0 as the initial version. The new version introduced an infobar refresh feature {{with the aim of}} preventing website spoofing attacks. Reviewer Wolfgang Gruener noted that the first builds of Chrome 9 have now doubled in size between Chrome 3 and Chrome 9 to a compressed download of 28.2 MB, calling it [...] "notably more bloated". Gruener also criticized the seemingly arbitrary numbering breaks between major versions, saying, [...] "even by more progressive standards, the version numbering may be a bit excessive. By the end of this year, Google will have gone through seven or eight different browser versions. Some may doubt the benefit of that strategy." [...] Chromium 9 introduced two new test features in November 2010 intended to load web pages more quickly, [...] "pre-rendering" [...] and [...] "false start", plus <b>sandboxing</b> for Adobe Flash. Stable releases of Chrome and Chromium were version 9.0.597.84 and included features such as Instant Search which allows the URL bar to act through Google Instant when Google is the default search. Other features included GPU/hardware acceleration, default 3D graphics though WebGL and access to the Chrome Web Store [...] on the New Tab page.|$|E
5000|$|<b>Sandboxing</b> {{on native}} hosts: Security {{researchers}} {{rely heavily on}} <b>sandboxing</b> technologies to analyse malware behaviour. By creating an environment that mimics or replicates the targeted desktops, researchers can evaluate how malware infects and compromises a target host. Numerous malware analysis services {{are based on the}} <b>sandboxing</b> technology.|$|E
50|$|<b>Sandboxing</b> {{systems can}} also control file and process accesses {{as well as}} network access. Commercial <b>sandboxing</b> systems are {{available}} for both Windows and Unix type OSes.|$|E
50|$|The Commons <b>Sandbox</b> {{provides}} a workspace where Commons contributors collaborate and experiment on projects {{not included in}} the Commons Proper. Commons members champion projects in the <b>Sandbox</b> for promotion to the Commons Proper, and groups of developers work to enhance <b>Sandbox</b> projects until they meet the standards for promotion.|$|R
40|$|International audienceThis paper {{presents}} an architecture {{and implementation of}} a self-healing <b>sandbox</b> for the execution of third party code dynamically loaded which may potentially put in risk application stability. By executing code in a fault contained <b>sandbox,</b> no faults are propagated to the trusted part of the application. The <b>sandbox</b> is monitored by a control loop that is able to predict and avoid known types of faults. If the <b>sandbox</b> crashes or hangs, it can be automatically recovered to normal activity without needing to stop the main application. A comparison between an implementation of the <b>sandbox</b> in a domain-based isolation and operating-system based isolation analyses performance overhead, memory footprint and <b>sandbox</b> reboot time in both approaches. The implementation has been tested in a simulation of an RFID and sensor-based application...|$|R
5000|$|As of May 19, 2014, a Cascade Framework-based Drupal theme {{has been}} added to the Drupal website <b>sandbox</b> [...] as a <b>sandbox</b> project.|$|R
50|$|<b>Sandboxing</b> a {{software}} process can protect against potentially malicious actions such as code injection and memory modifications {{that would otherwise}} tamper with the game. One of the key benefits of <b>sandboxing</b> {{is that it can}} effectively prevent the underlying cheat mechanisms from working, and thereby can avoid the need for banning game community members as cheats simply don't work. Additionally, strong prevention mechanisms can stop many game hackers from targeting the game because of elevated skill requirements. Compared to pattern detection systems, <b>sandboxing</b> is generally not privacy invasive as the approach requires no data to be uploaded to foreign back-end systems.|$|E
5000|$|Subgraph (operating system), a Linux {{distribution}} which approaches security through <b>sandboxing</b> ...|$|E
50|$|Scott also {{developed}} <b>sandboxing</b> technology that explored {{how to create}} secure mashups.|$|E
5000|$|Firejail is an {{open source}} Linux <b>sandbox</b> program that {{utilizes}} Linux Namespaces, Seccomp, and other kernel-level security features to <b>sandbox</b> Linux and Wine applications.|$|R
5000|$|Superimpose dynamic virtual {{information}} on the real <b>sandbox,</b> present the dynamic <b>sandbox</b> contents three-dimensionally, and support various natural interactions and multi-terminal remote collaborative communication.|$|R
5000|$|A servlet can {{be run by}} a servlet {{container}} in a restrictive environment, called a <b>sandbox.</b> This is similar to an applet that runs in the <b>sandbox</b> of the web browser. This enables restricted use of potentially harmful servlets. CGI programs can of course also <b>sandbox</b> themselves, since they are simply OS processes.|$|R
5000|$|Capability {{systems can}} be thought of as a {{fine-grained}} <b>sandboxing</b> mechanism, in which programs are given opaque tokens when spawned and have the ability to do specific things based on what tokens they hold. Capability-based implementations can work at various levels, from kernel to user-space. An example of capability-based user-level <b>sandboxing</b> involves HTML rendering in a Web browser.|$|E
5000|$|On February 26, 2013 McAfee {{announced}} it had acquired the ValidEdge <b>sandboxing</b> technology.|$|E
5000|$|Qore was {{designed}} to support embedding and <b>sandboxing</b> logic in applications; this also applies to applications written in Qore as well as applications using the Qore library's public C++ API. By using the [...] class which represents a logic container with <b>sandboxing</b> controls, discrete objects can be created and destroyed at runtime containing embedded code to extend or modify the behavior of your application in user-defined ways.|$|E
50|$|In 2003, Rosa and Robert Shapiro founded {{venture capital}} firm and startup foundry <b>Sandbox</b> Industries in Chicago, Illinois, with $4 million. They then raised an {{additional}} $18 million. Rosa serves as managing director. He and Shapiro previously worked together as executives at Monsanto and NutraSweet. <b>Sandbox</b> is the fund manager for BlueCross BlueShield Venture Partners and Cultivian <b>Sandbox</b> Food and Agriculture Fund, among others. In addition to its original Chicago office, <b>Sandbox</b> opened a second office in San Francisco in 2012.|$|R
50|$|Hubli <b>Sandbox</b> runs many {{programs}} {{in the areas of}} education, student leadership, agriculture, micro-entrepreneurship, and maternal health. Major programs are <b>Sandbox</b> Startups, Navodyami, Grantmaking & partnerships, Deshpande Educational Trust (DET), LEADers' Accelerating Development (LEAD), Agriculture, Healthcare, and Global Exchange Program.The Development Dialogue is the annual international conference of social entrepreneurship conducted by Hubli <b>Sandbox.</b>|$|R
40|$|International audienceHardware {{prefetching}} is {{an important}} feature of modern high-performance processors. When the application working set is too large to fit in on-chip caches, disabling hardware prefetchers may result in severe performance reduction. A new prefetcher was recently introduced, the <b>Sandbox</b> prefetcher, that tries to find dynamically the best prefetch offset using the <b>sandbox</b> method. The <b>Sandbox</b> prefetcher uses simple hardware and was shown to be quite effective. However, the <b>sandbox</b> method {{does not take into}} account prefetch timeliness. We propose an offset prefetcher with a new method for selecting the prefetch offset that takes into account prefetch timeliness. We show that our Best-Offset prefetcher outperforms the <b>Sandbox</b> prefetcher on the SPEC CPU 2006 benchmarks, with equally simple hardware...|$|R
