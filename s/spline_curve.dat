222|319|Public
500|$|The {{inclusion}} of procedural content tools {{allowed for the}} creation of realistic environments at much faster rates than was the case with Morrowind. Using Interactive Data Visualization, Inc. (IDV)'s SpeedTree technology, for example, Bethesda artists were able to [...] "quickly generate complex and organic tree shapes with relative ease". With its [...] "parent/child hierarchies and iterative branch levels [...] highly modifiable cylinder primitives", Bethesda's Noah Berry attests that [...] "an entire tree shape can be created in a manner of minutes, just by adjusting numerical values and tweaking <b>spline</b> <b>curve</b> handles". Instead of Morrowinds artificially smoothed-over terrain, erosion algorithms incorporated in the landscape generation tools allowed {{for the creation of}} [...] "craggy mountain vistas" [...] quickly and easily.|$|E
50|$|Feature {{highlights}} include hierarchic track layout, integrated sound editor, surround sound, <b>spline</b> <b>curve</b> automation, 64-bit mixing, multiprocessing and a customizable user interface.|$|E
50|$|In the {{mathematical}} subfield of numerical analysis, a Hermite spline is a <b>spline</b> <b>curve</b> where each polynomial of the spline is in Hermite form.|$|E
40|$|The paper {{presents}} a technique {{for construction of}} interpolating <b>spline</b> <b>curves</b> in linear spaces by means of blending parametric curves. A class of polynomi- als which satisfy special boundary conditions is used for blending. Properties of the polynomials are stated. An application of the technique to construction of interpolat- ing B´ezier <b>spline</b> <b>curves</b> with local control is considered. The presented interpolating Bezier <b>spline</b> <b>curves</b> {{can be used in}} on-line geometric applications or for fast sketching and prototyping of <b>spline</b> <b>curves</b> in geometric design...|$|R
40|$|This paper {{describes}} an augmentation to the spline concept {{to account for}} topological relations between different <b>spline</b> <b>curves.</b> These topological relations include incidence relations, constraining the extremes of <b>spline</b> <b>curves</b> to other <b>spline</b> <b>curves,</b> and also more general geometric relations, for example, involving the tangents of <b>spline</b> <b>curves</b> in their extremes. To maintain these incidence relations, some <b>spline</b> <b>curves</b> {{may have to be}} transformed (translated, rotated, scaled), or even deformed (i. e., the shape of the curve may change) as a result of modifying other <b>spline</b> <b>curves.</b> A data structure and algorithms are given to implement the propagation of these transformations and deformations. Based on the augmented spline concept, to be called sticky splines, both a script system to represent spline structures and an interactive system for editing drawings while automatically, maintaining their topological structure are presented...|$|R
50|$|Unlike modern drawing programs, Tgif uses <b>spline</b> <b>curves</b> {{instead of}} Bézier curves.|$|R
50|$|In {{computer-aided}} geometric {{design a}} control {{point is a}} member of a set of points used to determine the shape of a <b>spline</b> <b>curve</b> or, more generally, a surface or higher-dimensional object.|$|E
50|$|In 1946, mathematicians started {{studying}} the spline shape, and derived the piecewise polynomial formula {{known as the}} <b>spline</b> <b>curve</b> or spline function. I. J. Schoenberg gave the spline function its name after its resemblance to the mechanical spline used by draftsmen.|$|E
5000|$|A general {{introduction}} to B-splines {{is given in}} the main article. Here we discuss de Boor's algorithm, an efficient and numerically stable scheme to evaluate a <b>spline</b> <b>curve</b> [...] at position [...] The curve is built from a sum of B-spline functions [...] multiplied with potentially vector-valued constants , called control points, ...|$|E
40|$|Polynomials for {{blending}} parametric curves in Lie {{groups are}} defined. Properties of these polynomials are proved. Blending parametric curves in Lie groups with these polynomials is considered. Then {{application of the}} proposed technique to construction of <b>spline</b> <b>curves</b> on smooth manifolds is presented. As an example, construction of spherical <b>spline</b> <b>curves</b> using the proposed approach is depicted...|$|R
5000|$|Drawing {{features}} include 2D/3D text, 2D drawing tools, 3D primitives and <b>spline</b> <b>curves.</b>|$|R
40|$|Rendering and {{simulation}} software needs many models of reality. Every human has hair {{and we need}} to visualize realistic hair. We can model hair with many <b>spline</b> <b>curves.</b> A typical task of the ray tracing method is finding an intersection of <b>spline</b> <b>curves</b> with a ray. We try to find a fast way to calculate the point where the ray intersects the curve...|$|R
5000|$|B-splines {{of order}} [...] are {{connected}} piece-wise polynomial functions of degree [...] defined over {{a grid of}} knots [...] (we always use zero-based indices in the following). De Boor's algorithm uses O(p2) + O(p) operations to evaluate the <b>spline</b> <b>curve.</b> Note: the main article about B-splines and the classic publications use a different notation. The B-spline is indexed as [...] with [...]|$|E
50|$|In 1946, mathematicians started {{studying}} the spline shape and derived the piecewise polynomial formula {{known as the}} <b>spline</b> <b>curve,</b> or spline function. This {{has led to the}} widespread use of such functions in computer-aided design, especially in the surface designs of vehicles. I. J. Schoenberg gave the spline function its name after its resemblance to the mechanical spline used by draftsmen.|$|E
5000|$|Plugging [...] {{into the}} spline {{equations}} [...] and [...] {{shows that the}} value of the <b>spline</b> <b>curve</b> at [...] is [...] Similarly, substituting [...] into the spline equations shows that [...] at [...] This is true independent of the value of [...] since the equation for [...] is not needed to calculate the value of [...] at points [...] and [...]|$|E
40|$|The paper {{presents}} a technique {{for construction of}} Cn interpolating rational Bйzier <b>spline</b> <b>curves</b> by means of blending rational quadric Bйzier curves. A class of polynomials which satisfy special boundary conditions is used for blending. Properties of the polynomials are considered. The constructed <b>spline</b> <b>curves</b> have local shape control that make them useful in such geometric applications as real-time trajectory generation and fast curve sketching...|$|R
40|$|AbstractWe {{present a}} B-spline-Bézier {{representation}} of geometrically continuous quartic and quintic <b>spline</b> <b>curves</b> {{based on the}} Bézier representation of these curves described in a foregoing paper of the two authors. The influence of the design parameters is illustrated, and local support basis functions are given. Geometrically continuous curves include as special cases visually continuous curves as well as minimizing <b>spline</b> <b>curves</b> due to Nielson [1] and Hagen [2]...|$|R
50|$|In {{numerical}} analysis, a blossom is {{a functional}} {{that can be}} applied to any polynomial, but is mostly used for Bézier and <b>spline</b> <b>curves</b> and surfaces.|$|R
5000|$|The {{inclusion}} of procedural content tools {{allowed for the}} creation of realistic environments at much faster rates than was the case with Morrowind. Using Interactive Data Visualization, Inc. (IDV)'s SpeedTree technology, for example, Bethesda artists were able to [...] "quickly generate complex and organic tree shapes with relative ease". With its [...] "parent/child hierarchies and iterative branch levels [...] highly modifiable cylinder primitives", Bethesda's Noah Berry attests that [...] "an entire tree shape can be created in a manner of minutes, just by adjusting numerical values and tweaking <b>spline</b> <b>curve</b> handles". Instead of Morrowinds artificially smoothed-over terrain, erosion algorithms incorporated in the landscape generation tools allowed {{for the creation of}} [...] "craggy mountain vistas" [...] quickly and easily.|$|E
5000|$|For Bézier curves, it {{has become}} {{customary}} {{to refer to the}} -vectors p in a parametric representation [...] p of a curve or surface in -space as control points, while the scalar-valued functions , defined over the relevant parameter domain, are the corresponding weight or blending functions. Some would reasonably insist, in order to give intuitive geometric meaning to the word `control', that the blending functions form a partition of unity, i.e., that the [...] are nonnegative and sum to one. This property implies that the curve lies within the convex hull of its control points. This is the case for Bézier's representation of a polynomial curve {{as well as for the}} B-spline representation of a <b>spline</b> <b>curve</b> or tensor-product spline surface.|$|E
5000|$|Hans Hagen has {{published}} over four hundred articles in journals, books and conference proceedings. His research interests are deep and very broad. His work concentrates on physically based modeling, curve and surface interrogation and topology-based visualization. Particular {{emphasis is placed}} on variational design. The key idea is include energy minimization {{as an integral part of}} the algorithm and the underlying mathematics. This concept is now industry standard. Hans Hagen has a strong background in differential geometry and topology. His geometric modeling publication record started with a work on geometric splines, where he introduced a torsion continuous <b>spline</b> <b>curve.</b> Thereafter he developed together with Guido Brunnett and Paolo Santarelli the Variational Design methodology and a solution to the twist input and compatibility twist problem of the Coons patches. Triangular patches did not have [...] "curvature modeling facilities" [...] for many years.|$|E
40|$|A {{new class}} of <b>spline</b> <b>curves</b> in polar {{coordinates}} has been presented in (S'anchez-Reyes, 1992) and independently considered in (de Casteljau, 1994). These are rational trigonometric curves in Cartesian coordinates and can be represented as NURBS. From the relationship existing with the correspondent curves in Cartesian coordinates an alternative way to derive some useful tools for modelling splines in polar coordinates has been provided. In particular an ad hoc algorithm of degree elevation for splines in polar coordinates is presented. On {{the basis of these}} results we propose a modelling system for NURBS curves and surfaces supplied with a modelling environment for <b>spline</b> <b>curves</b> and surfaces in polar, spherical, and mixed polar-Cartesian coordinates. 1 Introduction Recently, in (Sanchez-Reyes, 1992) a class of <b>spline</b> <b>curves</b> in polar coordinates was proposed. We refer to these curves as p-splines. They have proved to be a generalization of those considered in (Sanchez-Reyes [...] ...|$|R
50|$|Some notable tool {{functions}} include: walls, arcs, chamfers, fillets, <b>spline</b> <b>curves,</b> perpendiculars, and tangents. Dimensioning tools {{can create}} point-to-point, chain, datum, angle, radius, diameter, and circle-center dimensions.|$|R
50|$|The most {{important}} instruments here are parametric curves and parametric surfaces, such as Bézier <b>curves,</b> <b>spline</b> <b>curves</b> and surfaces. An important non-parametric {{approach is the}} level set method.|$|R
5000|$|The {{curve is}} named after Edwin Catmull and Raphael Rom. The {{principal}} advantage of this technique is that the points along the original set of points also make up the control points for the <b>spline</b> <b>curve.</b> [...] Two additional points are required on {{either end of the}} curve. The default implementation of the Catmull-Rom algorithm can produce loops and self intersections. The chordal and centripetal Catmull-Rom implementations [...] solve this problem, but use a slightly different calculation. In computer graphics, Catmull-Rom splines are frequently used to get smooth interpolated motion between key frames. For example, most camera path animations generated from discrete key-frames are handled using Catmull-Rom splines. They are popular mainly for being relatively easy to compute, guaranteeing that each key frame position will be hit exactly, and also guaranteeing that the tangents of the generated curve are continuous over multiple segments.|$|E
40|$|ABSTRACT. In {{this paper}} we find an {{explicit}} form of upper bound of Hausdorff distance be-tween given cubic <b>spline</b> <b>curve</b> and its quadratic spline approximation. As an application the approximation of offset curve of cubic <b>spline</b> <b>curve</b> is presented using our explicit error analy-sis. The offset curve of quadratic <b>spline</b> <b>curve</b> is exact rational <b>spline</b> <b>curve</b> of degree six, {{which is also}} an approximation of the offset curve of cubic <b>spline</b> <b>curve.</b> 1...|$|E
40|$|AbstractIn this paper, a {{classical}} {{problem of the}} construction of a cubic G 1 continuous interpolatory <b>spline</b> <b>curve</b> is considered. The only data prescribed are interpolation points, while tangent directions are unknown. They are constructed automatically {{in such a way that}} a particular minimization of the strain energy of the <b>spline</b> <b>curve</b> is applied. The resulting <b>spline</b> <b>curve</b> is constructed locally and is regular, cusp-, loop- and fold-free. Numerical examples demonstrate that it is satisfactory as far as the shape of the curve is concerned...|$|E
50|$|Although {{originally}} defined {{only for}} straight-line drawings of graphs, later authors have also investigated the angular resolution of drawings {{in which the}} edges are polygonal chains, circular arcs, or <b>spline</b> <b>curves.</b>|$|R
30|$|The B-spline {{curve is}} {{composed}} of segmented <b>spline</b> <b>curves.</b> Each curve is controlled by a polygon composed of specific control points, which can describe {{the characteristics of the}} object locally without affecting the global fitting [25]. At the same time, the curve is more free and smooth, and the fitting effect is better.|$|R
40|$|This paper {{presents}} a novel method for wavelength-continuous tuning of a MG-Y-Branch Laser that possesses an intrinsic self-calibration capability. The method utilizes the measured characteristic output power pattern {{caused by the}} internal longitudinal cavity modes of the laser device to calibrate a set of cubical <b>spline</b> <b>curves.</b> The <b>spline</b> <b>curves</b> are then used to generate the tuning currents for the two reflector sections and the phase section of the laser from an intermediate tuning control parameter. A calibration function maps the desired laser wavelength to the intermediate tuning parameter, thus enabling continuous tuning with high accuracy...|$|R
40|$|We {{propose a}} new method to {{approximate}} a given set of ordered data points by a spatial circular <b>spline</b> <b>curve.</b> At first an initial circular <b>spline</b> <b>curve</b> {{is generated by}} biarc interpolation. Then an evolution process based on a least-squares approximation {{is applied to the}} curve. During the evolution process, the circular <b>spline</b> <b>curve</b> converges dynamically to a stable shape. Our method does not need any tangent information. During the evolution process, the number of arcs is automatically adapted to the data such that the final curve contains as few arc arcs as possible. We prove that the evolution process is equivalent to a Gauss-Newton type method...|$|E
40|$|Abstract — This paper {{presents}} a robust image watermarking {{scheme based on}} a sample spline approach. While we consider the human visual system in our watermarking algorithm, we use the low frequency components of image blocks for data hiding to obtain high robustness against attacks. We use four samples of the approximation coefficients of the image blocks to construct a <b>spline</b> <b>curve</b> in the 2 -D space. The slopes of this <b>spline</b> <b>curve,</b> which is invariant to the gain factor, is employed for watermarking purpose. We embed the watermarking code by constructing a <b>spline</b> <b>curve</b> according to message bits. To design a maximum likelihood decoder, we compute {{the distribution of the}} slope of the embedding <b>spline</b> <b>curve</b> for Gaussian samples. The performance of the proposed technique is analytically investigated and Experimental results confirm the validity of our model and its high robustness against common attacks in comparison with similar watermarking techniques that are invariant to the gain attack...|$|E
40|$|AbstractThis paper {{presents}} a C 2 Pythagorean-Hodograph (PH) <b>spline</b> <b>curve</b> interpolator for high speed contouring applications. With the knot vector and control points given, the C 2 PH quintic <b>spline</b> <b>curve</b> is a “good” interpolant to the nodal {{points of the}} cubic B-spline curve, with the same knot vector and control points. To generate the C 2 PH quintic spline curves, a uniform knot sequence is employed. The S-curve motion planning architecture, with variable feedrate for a planar C 2 PH quintic <b>spline</b> <b>curve,</b> is also developed. In particular, C 1 cubic feed acceleration/deceleration is imposed on {{the first and last}} PH quintic spline segments. Several closed C 2 PH quintic <b>spline</b> <b>curve</b> contouring tasks, along with a simple position loop controller, were conducted to verify the effectiveness of the proposed interpolation algorithm. The experimental results were analyzed and discussed. It is found that the proposed CNC interpolator is not only feasible for machining the complicated parametric curves represented in the C 2 PH quintic spline form, but also yields a satisfactory contouring performance for variable feedrate control...|$|E
40|$|Introduction 3 D {{reconstruction}} {{of an object}} from its 2 D cross-sections (slices) has many applications in different fields of sciences such as medical physics and biomedical engineering. In order to perform 3 D reconstruction, at first, desired boundaries at each slice are detected and then using a correspondence between points of successive slices surface of desired object is reconstructed. Materials and Methods In this study, Gradient Vector Flow (GVF) was used in order to trace the boundaries at each slice. Then, cubic Bezier <b>Spline</b> <b>curves</b> were used to approximate each of obtained contours and to approximate the corresponding points of different contours at successive slices. The reconstructed surface was a bi-cubic Bezier Spline surface which was smooth with G 2 continuity. Results Our presented method was tested on SPECT data of JASZCZAK phantom and human's left ventricle. The results confirmed that the presented method was accurate, promising, applicable, and effective. Conclusion Using GVF algorithm to trace boundaries at each slice, and cubic Bezier <b>Spline</b> <b>curves</b> to approximate the obtained rough contours yield to the procedure of reconstruction which was fast and also the final surface was smooth with G 2 continuity. So far, some mathematical <b>curves</b> such as <b>spline,</b> cubic <b>spline,</b> and B-spline <b>curves</b> were used to approximate the computed contour during a time consuming procedure. This study presented a 3 D reconstruction method based {{on a combination of}} GVF algorithm and cubic Bezier <b>Spline</b> <b>curves.</b> There was a good trade-off between speed and accuracy in using cubic Bezier <b>Spline</b> <b>curves</b> which is especially useful for training students...|$|R
40|$|Abstract. Parametric curves are {{frequently}} used in computer animation and virtual environments {{to control the}} movements of synthetic objects. In many of these applications {{it is essential to}} efficiently relate parameter values to the arc length of the curve. Current approaches to compute arc length or to construct an arc-length parameterized curve are impractical to use in real-time applications. This paper presents a simple and efficient technique to generate approximately arc-length parameterized <b>spline</b> <b>curves</b> that closely match <b>spline</b> <b>curves</b> typically used to model roads in high-fidelity driving simulators. Parametric cubic <b>splines</b> are the <b>curves</b> of choice for many applications of computer graphics. They are widely used in computer animation and virtual environments to define motion paths [6]. As the parameter variable ranges over the interval of definition, the computed position trace...|$|R
40|$|We {{present a}} full {{pipeline}} for computing the medial axis transform of an arbitrary 2 D shape. The instability of the medial axis transform is overcome by a pruning algorithm {{guided by a}} user-defined Hausdorff distance threshold. The stable medial axis transform is then approximated by <b>spline</b> <b>curves</b> in 3 D to produce a smooth and compact representation. These <b>spline</b> <b>curves</b> are computed by minimizing the approximation error between the input shape and the shape represented by the medial axis transform. Our results on various 2 D shapes suggest that our method is practical and effective, and yields faithful and compact representations of medial axis transforms of 2 D shapes. Comment: GMP 14 (Geometric Modeling and Processing...|$|R
