20|92|Public
50|$|A {{signature}} file {{is a technique}} that creates a quick and dirty filter, for example a Bloom filter, that will keep all the documents that match to the query and hopefully a few ones that do not. The way this is done is by creating for each file a signature, typically a hash coded version. One method is <b>superimposed</b> <b>coding.</b> A post-processing step is done to discard the false alarms. Since in most cases this structure is inferior to inverted files in terms of speed, size and functionality, it is not used widely. However, with proper parameters it can beat the inverted files in certain environments.|$|E
40|$|In {{this article}} we {{describe}} how <b>superimposed</b> <b>coding</b> {{can be used to}} represent hierarchical information, which is especially useful in categorized information retrieval systems (for example, Web directories). <b>Superimposed</b> <b>coding</b> have been widely used in signature files in a rigid manner, but our approach is more flexible and powerful. The categorization is based on a directed acyclic graph and each document is assigned to one or more nodes, using <b>superimposed</b> <b>coding</b> we represent the categorization information of each document in a signature. In this paper we explain the <b>superimposed</b> <b>coding</b> theory and how this coding technique can be applied to more flexible environments. Furthermore, we realize an exhaustive analysis of the important factors that have repercussions on the performance of the system. Finally we expose the conclusions obtained from this article...|$|E
40|$|Signature files {{have been}} studied {{extensively}} as an access method for textual databases. Many approaches have been proposed for searching signatures files efficiently. However, different methods make different assumptions and use different performance measures, {{making it difficult to}} compare their performance. In this paper, we study three basic methods proposed in the literature, namely, the indexed descriptor file, the two-level <b>superimposed</b> <b>coding</b> scheme, and the partitioned signature file approach. The contribution of this paper is two-fold. First, we present a uniform analytical performance model so that the methods can be compared fairly and consistently. The analysis shows that the two-level <b>superimposed</b> <b>coding</b> scheme, if stored in a transposed file, has the best performance. Second, we extend the two-level <b>superimposed</b> <b>coding</b> method into a multi-level <b>superimposed</b> <b>coding</b> method, we obtain the optimal number of levels for the multi-level method and show that for databases with [...] ...|$|E
40|$|Partially {{supported}} by the Technical University of Gabrovo under Grant C- 801 / 2008 One of the main problems {{in the theory of}} <b>superimposed</b> <b>codes</b> is to find the minimum length N for which an (N, T,w, r) <b>superimposed</b> <b>code</b> exists for given values of T, w and r. Let N(T,w, r) be the minimum length N for which an (N, T,w, r) <b>superimposed</b> <b>code</b> exists. The (N, T,w, r) <b>superimposed</b> <b>code</b> is called optimal when N = N(T,w, r). The values of N(T, 1, 2) are known for T ≤ 12 and the values of N(T, 1, 3) are known for T ≤ 20. In this work the values of N(T, 1, 2) for 13 ≤ T ≤ 20 and the value of N(21, 1, 3) are obtained. The optimal <b>superimposed</b> <b>codes</b> with parameters (9, 10, 1, 2), (10, 13, 1, 2), (11, 14, 1, 2), (11, 15, 1, 2), (11, 16, 1, 2) and (11, 17, 1, 2) are classified up to equivalence. The optimal (N, T, 1, 3) <b>superimposed</b> <b>codes</b> for T ≤ 20 are classified up to equivalence...|$|R
40|$|AbstractWe {{describe}} {{three new}} methods for obtaining <b>superimposed</b> <b>codes</b> in Euclidean spaces. With help of them we construct codes with parameters improving upon known constructions. We also {{prove that the}} spherical simplex code is not optimal as <b>superimposed</b> <b>code</b> at least for dimensions greater than 9...|$|R
40|$|<b>Superimposed</b> <b>codes</b> is {{a special}} {{combinatorial}} structure that has many applications in information theory, data communication and cryptography. On the other hand, mutually orthogonal latin squares is a beautiful combinatorial object that has deep connection with design theory. In this paper, we draw a connection between these two structures. We give explicit construction of mutually orthogonal latin squares and we show a method of generating new larger <b>superimposed</b> <b>codes</b> from an existing one by using mutually orthogonal latin squares. If n denotes the number of codewords in the existing code then the new code contains n 2 codewords. Recursively, using this method, we can construct a very large <b>superimposed</b> <b>code</b> from a small simple code. Well-known constructions of <b>superimposed</b> <b>codes</b> are based on algebraic Reed-Solomon codes and our new construction gives a combinatorial alternative approach...|$|R
40|$|Providing {{efficient}} query processing in database sys-tems is {{one step}} in gaining acceptance of such systems by end users. We propose several techniques for index-ing fuzzy sets in databases {{to improve the}} query evalu-ation performance. Three of the presented access meth-ods are based on <b>superimposed</b> <b>coding,</b> while the fourth relies on inverted files. The efficiency of these tech-niques was evaluated experimentally. We present results from these experiments, which clearly show the superi-ority of the inverted files. ...|$|E
40|$|AbstractAn {{implementation}} of PROLOG based on general clause-indexing methods using bit-serial content-addressable memory hardware is presented. The approach permits extremely high-performance implementations of knowledge-based applications and enables a greater reliance on unification in PROLOG programming. The indexing methods are easily attachable to other implementations of PROLOG. Three hardware-implementable indexing methods using m-in-n coding or <b>superimposed</b> <b>coding</b> are described and compared, and a bit-map {{representation of the}} set of clauses responding to a goal is described. Some benchmarks are given, {{and a group of}} useful unordered descriptor primitives described. The implications for programming style are discussed...|$|E
40|$|Abstract{A {{multiple}} access channel is a medium that allows multiple terminal stations {{to communicate with}} a central station. We will consider a system containing {{a large amount of}} terminal stations and a {{multiple access}} OR channel connecting the terminal stations to the central station, as in the slotted ALOHA system [1] We implement the symmetric model of group testing and superimposed code constructions [2] to the discussed multiple access information transmission model, for the calculation of bounds on the multiple access channel capacity [3]. Recent results in <b>Superimposed</b> <b>Coding</b> Theory provide the possibility of improving the known bounds [4] [5] on the multiple access OR channel capacity. ...|$|E
5000|$|Calvin Mooers invented Zato Coding at M.I.T., a {{mechanical}} information retrieval {{system based on}} <b>superimposed</b> <b>codes,</b> and formed the Zator Company in 1947 to commercialize its applications.The particular <b>superimposed</b> <b>code</b> used in that system is called Zatocoding,while the marginal-punched card information retrieval {{system as a whole}} is called [...] "Zator".|$|R
50|$|A Bloom filter can be {{considered}} a kind of <b>superimposed</b> <b>code.</b>|$|R
5000|$|Setting up a <b>superimposed</b> <b>code</b> for a {{particular}} library goes something like this: ...|$|R
40|$|This paper {{deals with}} the {{estimation}} of the signature weight as generated by the <b>superimposed</b> <b>coding</b> technique adopted in "multiple" signature files. The estimation is needed for performance evaluation of such organizations used for information retrieval applications. In particular, simple formulas for the probability density function, the expected value and the variance of the signature weight are presented. The presented formulas can be derived following a general methodology we called the - transform approach in a previous work, which results much more simple than the method used by other authors for the derivation of the density function. Equivalence of the results is also shown...|$|E
40|$|A {{variation}} of the <b>superimposed</b> <b>coding</b> version of the signature file method is introduced. The processing of a user query {{is similar to that}} of the conventional method with one difference: the output is provided in a ordered (ranked) way. The latter is based on a credibility value reflecting the probability of each candidate block to pass the validation test rather than being a false drop. The principles, an analytical model, and simulation results of the new technique are presented. The model’s usefulness is the reduced I/O activity for cases where the user is only sampling the text base and is satisfied by retrieving a limited number of the many documents that qualify. 1...|$|E
40|$|N-gram {{encoding}} for strings provides good inexact matching performance, but pays a {{large storage}} penalty. We describe {{a method for}} superimposed N-gram coding that provides more than a 40 - 60 % reduction in the storage space required over the typical N-gram implementation while giving good speed and matching performance. Our system uses bit vectors to represent the occurrence of sets of N-grams in lexicon strings. The space savings comes from the notion of superimposing sets of N-grams onto single bit vectors. We also discuss {{an extension of the}} <b>superimposed</b> <b>coding</b> idea which encodes every N-gram with an ensemble of bit vectors {{in such a way as}} to yield even greater space savings. 1...|$|E
40|$|We {{investigate}} the zero-error capacity region of r-out of T user multiple access OR channel. A family subsets of [n] =..., n} is an r-single-user- tracing <b>superimposed</b> <b>code</b> (r-SUT) if there exists such r, #(#A#F # A) #. In this paper we introduce {{the concept of}} these codes and investigate bounds on their rate. We also consider disjointly r- <b>superimposed</b> <b>codes...</b>|$|R
2500|$|Zatocoding – Calvin Mooers {{developed}} a mechanical system using <b>superimposed</b> <b>codes</b> of descriptors for information retrieval called Zatocoding.|$|R
40|$|We {{will discuss}} <b>superimposed</b> <b>codes</b> and non-adaptive group testing designs {{arising from the}} {{potentialities}} of compressed genotyping models in molecular biology. The given paper was motivated by the 30 th anniversary of D'yachkov-Rykov recurrent upper bound on the rate of <b>superimposed</b> <b>codes</b> published in 1982. We were also inspired by recent results obtained for non-adaptive threshold group testing which develop the theory of superimposed codesComment: 19 pages, 4 table...|$|R
40|$|In {{this paper}} we {{evaluate}} {{a selection of}} data retrieval algorithms for storage efficiency, retrieval speed and partial matching capabilities using a large Information Retrieval dataset. We evaluate standard data structures, for example inverted file lists and hash tables, but also a novel binary neural network that incorporates: single-epoch training, <b>superimposed</b> <b>coding</b> and associative matching in a binary matrix data structure. We identify {{the strengths and weaknesses}} of the approaches. From our evaluation, the novel neural network approach is superior with respect to training speed and partial match retrieval time. From the results, we make recommendations for the appropriate usage of the novel neural approach. (C) 2001 Elsevier Science Ltd. All rights reserved...|$|E
40|$|Abstract—We {{address the}} problem of {{bounding}} the achievable rates of a new class of superimposed codes, termed weighted Euclidean superimposed codes (WESCs). WESCs generalize traditional Euclidean superimposed codes in so far that they allow for distinguishing bounded, integer-valued linear combinations of codewords. They can also be viewed as a bridge between <b>superimposed</b> <b>coding</b> and compressive sensing. In particular, we focus on sparse WESCs, for which one can devise low-complexity decoding algorithms and simple analytical constructions. Our results include a sufficient condition for meeting a minimum distance requirement of sparse WESCs, and a lower bound on the largest rate of sparse WESCs. Also included is a simple extension of DeVore’s deterministic construction for sparse compressed sensing matrices that meets the derived lower bound. I...|$|E
40|$|Many {{computational}} processes require efficient algorithms, {{those that}} both store and retrieve data efficiently and rapidly. In this paper we evaluate {{a selection of}} data structures for storage efficiency, retrieval speed and partial matching capabilities using a large information retrieval dataset. We evaluate standard data structures, for example inverted file lists and hash tables but also a novel binary neural network that incorporates <b>superimposed</b> <b>coding,</b> associative matching and row-based retrieval. We identify {{the strengths and weaknesses}} of the approaches. The novel neural network approach is superior with respect to training speed and partial match retrieval time. Many computational implementations require algorithms that are storage efficient, may be rapidly trained with data and allow fast retrieval of selected data. Information retrieval requires the storage of massive sets of word to document associations to allow the documents matching query terms to be retrieved. T [...] ...|$|E
40|$|Abstract- We {{will discuss}} <b>superimposed</b> <b>codes</b> and non-adaptive group testing designs {{arising from the}} {{potentialities}} of compressed genotyping models in molecular biology. The given lecture was motivated by the 30 th anniversary of our recurrent upper bound on the rate of <b>superimposed</b> <b>codes</b> published in 1982. We were also inspired by recent results obtained for non-adaptive threshold group testing which essentially develop the theory of <b>superimposed</b> <b>codes.</b> Index terms. Group testing, compressed genotyping, screening experiments, search designs, <b>superimposed</b> <b>codes,</b> rate of codes, rate of designs, bounds on the rate, shortened RC-code, threshold search designs. 1 Notations, De nitions and Relevant Issues Let [n] be the set of integers from 1 to n and the symbol � denote de nitional equalities. For integers N ≥ 2 and t ≥ 2, symbols j ⊂ [N], j = 1; 2;:::;t, denote subsets of [N]. Subsets j, j ∈ [t], are identi ed with binary columns x(j) � (x 1 (j);x 2 (j);:::;xN(j)) in which xi(j) � 1 if i ∈ j, 0 if i ∈ j, i ∈ [N]...|$|R
50|$|A <b>superimposed</b> <b>code</b> such as Zatocoding {{is a kind}} of hash {{code that}} was popular in {{marginal}} punched-card systems.|$|R
40|$|Abstract—In {{this work}} we propose {{the use of}} random <b>superimposed</b> <b>codes</b> as {{sequences}} for collusion-resistant fingerprints. This approach {{seems to be more}} suitable in comparison with the use of some other regular sequences (as WBE-sequences) against watermark removal attacks. Sphere decoding algorithm is used for tracing traitors. The performance evaluation of the proposed method is presented. Simulation results show a good efficiency of the proposed codes. Index Terms—Digital fingerprints, collusion attacks, <b>superimposed</b> <b>codes,</b> sphere decoding algorithm. I...|$|R
40|$|This {{paper is}} divided into two {{distinct}} parts. The first is a summary of the general theory of information retrieval. A comprehensive mathematical model is described in terms of the theory of Boolean lattices, which serves to unify and make precise the basic problem of information retrieval. All possible basic methods of coding information for storage and retrieval are briefly described and contrasted. Another mathematical model for information retrieval based on linear graphs and stochastic processes is briefly described {{as an alternative to the}} lattice model. The appendices contain a survey of lattice theory, and an example of <b>superimposed</b> <b>coding.</b> The second part of this paper is a detailed example of the application of information retrieval techniques utilizing the facilities of the USNPGS Computer Center to handle a problem involving the technical reports section of the school library. (Author) [URL] United States Nav...|$|E
40|$|Recently, new {{applications}} have emerged that require database management systems with uncertainty capabilities. Many {{of the existing}} approaches to modelling uncertainty in database management systems {{are based on the}} theory of fuzzy sets. High performance is a necessary precondition for the acceptance of such systems by end users. However, performance issues have been quite neglected in research on fuzzy database management systems so far. In this article they are addressed explicitly. We propose new index structures for fuzzy database management systems based on the well known technique of <b>superimposed</b> <b>coding</b> together with detailed cost models. The correctness of the cost models as well as the efficiency of the index structures proposed is validated by a number of measurements on experimental fuzzy databases. Keywords Information Storage and Retrieval, Fuzzy Database Management Systems, Fuzzy Object Oriented Database Management Systems, Index Structures, Cost Analysis, Superimposed [...] ...|$|E
40|$|Text {{indexing}} is {{an issue}} of primary importance in today's InterNet based world of information exchange and dissemination. Two textbase indexing methods which enjoy wide applicability are file inversion and the <b>superimposed</b> <b>coding</b> based signature file (SC-SF). The former is most efficient in query processing, whereas the latter excels in storage utilization. The present study: (a) considers SC-SF and its drawbacks in relation with the size of the textbase vocabulary, (b) presents two new signature file variations one of which achieves optimum information compression, whereas the other maximizes the query processing efficiency, and (c) proposes a new textbase indexing structure, the performance of which may be tuned to lie anywhere between file inversion and an information-loss-free signature file. The structure in (c) is labeled S-Index, where "S-" implies the signature file and "Index" implies file inversion. S-Index makes possible the indexing of selected logical sections of text, le [...] ...|$|E
40|$|Designing Screening Experiments (DSE) is a {{class of}} {{information}} - theoretical models for multiple - access channels (MAC). We discuss the combinatorial model of DSE called a disjunct channel model. This model {{is the most important}} for applications and closely connected with the <b>superimposed</b> <b>code</b> concept. We give a detailed survey of lower and upper bounds on the rate of <b>superimposed</b> <b>codes.</b> The best known constructions of <b>superimposed</b> <b>codes</b> are considered in paper. We also discuss the development of these codes (non-adaptive pooling designs) intended for the clone - library screening problem. We obtain lower and upper bounds on the rate of binary codes for the combinatorial model of DSE called an adder channel model. We also consider the concept of universal decoding for the probabilistic DSE model called a symmetric model of DSE. Comment: 66 page...|$|R
40|$|Abstract—We {{introduce}} a new family of codes, termed weighted Euclidean <b>superimposed</b> <b>codes</b> (WESCs). This family generalizes the class of Euclidean <b>superimposed</b> <b>codes,</b> used in multiuser identification systems. WESCs allow for discriminating bounded, integer-valued linear combinations of real-valued codewords, and can therefore {{also be seen as}} a specialization of compressed sensing schemes. We present lower and upper bounds on the largest size of a member of the WESCs family, and show how to use classical coding-theoretic and new compressed sensing analytical tools to devise low-complexity decoding algorithms for these codes. I...|$|R
40|$|This paper {{presents}} a novel channel assignment approach to support local broadcast in multi-radio multi-channel (MR-MC) wireless networks. The proposed algorithm intelligently assigns channels to each node based on <b>superimposed</b> <b>codes.</b> By applying <b>superimposed</b> <b>codes,</b> each node can easily locate a common channel shared with its s-closest neighbors. Under certain conditions, it is proved that our solution {{is able to}} solve the exposed terminal problem {{as well as the}} hidden terminal problem. Furthermore, with our channel assignment for local broadcast, most traditional MAC/routing protocols, though designed for single-radio single-channel (SR-SC) wireless networks, can possibly adapt to MR-MC wireless networks...|$|R
40|$|This paper {{presents}} {{an analysis of}} Correlation Matrix Memory (CMM), a binary associative neural network. CMM has been proposed as an inference engine, which could be utilized in an expert system (Austin, 1994). In this role, CMM encodes Tensor Products (Smolensky, 1990) to support Dynamic Variable Binding. The ability to perform partial match efficiently, with {{a large body of}} stored information is important for a useful expert system. This paper extends the work on the storage v. error characteristics of CMM and presents new work on the partial match ability of the memory. A comparison is made with an efficient partial match method used in databases, Multi-level <b>Superimposed</b> <b>Coding</b> (Sacks-Davis & Ramamohanarao, 1983), and the partial match performance of CMM is shown to compare well. We conclude that CMM is well suited to its proposed use as an inference engine. page 1 Using Correlation Matrix Memories for Inferencing in Expert Systems 1. INTRODUCTION Rule-based reasoning has been [...] ...|$|E
40|$|Signature file {{has been}} shown to be a very good access method for text and multiattribute {{retrieval}} [6, 13]. It has a low storage overhead and a simple structure. However its speed is poor compared to an inverted file, since every signature in the file must be searched. In this paper, we introduce a partitioning method to reduce the search space required on the signature file. A partitioned signature file is better than the multilevel signature file [15] and the S-tree [3] in that it has an extremely small storage and processing overhead. We outline three partitioning schemes and discuss their performance. We describe the data structure necessary to support the partitioning schemes and the algorithms for signature insertion, deletion and retrieval. 1 Introduction Signature files, in particular, the <b>superimposed</b> <b>coding</b> method [14], is an excellent access structure for supporting conjunctive queries. For instance given a relation R = (A 1; A 2; :::; A n), a partial match query may spe [...] ...|$|E
40|$|Today, {{two classes}} of {{indexing}} methods enjoying wide applicability are the Inverted Index and the <b>Superimposed</b> <b>Coding</b> based Signature File (SC-SF). The former is most efficient in query processing but utilizes extra storage of size {{comparable to that of}} the textbase, whereas the latter is most efficient in storage utilization. The present study builds upon the results obtained in previous research [2], and proposes a hybrid structure for text retrieval. The new structure is labelled S-Index and is shown to be of a tunable performance which ranges between two extreme ends. At the one extreme end, S-Index turns into a Signature File, which involves zero information loss and, in this respect, it is faster than the ordinary SC-SF method. At the other extreme end, S-Index becomes an Inverted Index. The advantage of the proposed access method is that frequently queried sections of text are indexed via an Inverted Index, whereas the bulk of the textbase, which is not frequently targeted by user queries, is stored {{in the form of a}} Signature File...|$|E
50|$|An {{alternative}} approach to implementation {{is based on}} <b>Superimposed</b> <b>Code</b> Words or Field Encoded Words which are used for more efficient database operations, information retrieval and logic programming, with hardware implementations based on both RAM and head-monitoring disk technology.|$|R
40|$|A {{family of}} n-dimensional unit norm vectors is a Euclidean <b>superimposed</b> <b>code,</b> if the sums of any two {{distinct}} at most m-tuples of vectors {{are separated by}} a certain minimum Euclidean distance d. Ericson and Györfi [8] proved {{that the rate of}} such a code is between (log m) / 4 m and (log m) /m for m large enough. In this paper – improving the above longstanding best upper bound for the rate – it is shown that the rate is always at most (log m) / 2 m, i. e., the size of a possible <b>superimposed</b> <b>code</b> is at most the root of the size given in [8]. We also generalize these codes to other normed vector spaces...|$|R
40|$|A <b>superimposed</b> <b>code</b> {{with general}} {{distance}} D {{can be used}} to construct a non-adaptive pooling design. It can then be used to identify a few unknown positives from a large set of items by associating naturally an outcome vector u. A simple method for decoding the outcome vector u is given whenever there are at most ⌊ D− 1 2 ⌋ errors occuring in the outcome vector u. Moreover, another simple method of detecting whether there is any error occuring in the outcome vector u is also given whenever there are at most D − 1 errors in u. Our method is a generalization of the classical result of W. H. Kautz and R. C. Singleton[Nonadaptive binary <b>superimposed</b> <b>codes,</b> IEEE Trans. Inform...|$|R
