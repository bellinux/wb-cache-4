12|259|Public
5000|$|For signed zoned decimal values, the {{rightmost}} (least significant) zone nibble {{holds the}} <b>sign</b> <b>digit,</b> {{which is the}} same set of values that are used for signed packed decimal numbers (see above). Thus a zoned decimal value encoded as the hex bytes F1 F2 D3 represents the signed decimal value −123: ...|$|E
50|$|Various BCD {{implementations}} {{exist that}} employ other representations for numbers. Programmable calculators manufactured by Texas Instruments, Hewlett-Packard, and others typically employ a floating-point BCD format, typically {{with two or}} three digits for the (decimal) exponent. The extra bits of the <b>sign</b> <b>digit</b> may be used to indicate special numeric values, such as infinity, underflow/overflow, and error (a blinking display).|$|E
5000|$|A signed {{overpunch}} is a code used {{to store}} {{the sign of a}} number by changing the last digit. It is used in COBOL, especially when using EBCDIC. Its purpose is to save a character that would otherwise be used by the <b>sign</b> <b>digit.</b> [...] The code is derived from the Hollerith Punched Card Code, where both a digit and a sign can be entered in the same card column.|$|E
40|$|This paper proposes an {{effective}} method for converting any fast DCT algorithm into an approximate multiplierless version. Basically it approximates any constant {{in the original}} transform by a <b>signed</b> <b>digit</b> representation. We developed an efficient algorithm to convert any constant into a <b>signed</b> <b>digit</b> string with a minimum number of non-zero <b>signed</b> <b>digits</b> and a reduced length. As the accuracy of an approximated algorithm depends critically on the assignment of <b>signed</b> <b>digits</b> to the constants, this paper formulated {{an effective}} algorithm for finding an effective <b>signed</b> <b>digits</b> configuration which could minimize the MSE of an approximated DCT algorithm with a specified complexity. Experiment {{results show that the}} AAN’s fast DCT algorithm, approximated by the proposed method and using an optimized configuration can be used to reconstruct images with high visual quality in terms of PSNR. 1...|$|R
40|$|Abstract: Speed {{of digital}} {{arithmetic}} processor depends {{mainly on the}} speed of adders. This paper provides a technique {{so that we can}} increase the speed of addition. Hybrid <b>signed</b> <b>digit</b> number representation perform addition {{in such a way that}} the carry propagation chain is limited to single digit position and hence are used to speed up arithmetic operation. Also hybrid <b>signed</b> <b>digit</b> reduces the critical path delay by parallelizing. Hybrid <b>signed</b> <b>digit</b> can be appropriate to use, when output is redundant representation...|$|R
40|$|Abstract. We {{describe}} two representations {{for real}} numbers, <b>signed</b> <b>digit</b> streams and Cauchy sequences. We give coinductive proofs for the correctness of functions converting {{between these two}} representations to show the adequacy of <b>signed</b> <b>digit</b> stream representation. We also show a coinductive proof for the correctness of a corecursive program for the average function {{with regard to the}} <b>signed</b> <b>digit</b> stream representation. We implemented this proof in the interactive proof system Minlog. Thus, reliable, corecursive functions for real computation can be guaranteed, which is very helpful in formal software development for real numbers...|$|R
40|$|ABSTRACT: This Research paper {{includes}} {{designing a}} area efficient and low error Discrete Cosine Transform. This area efficient and low error DCT is obtained by using shifters and adders {{in place of}} multipliers. The main technique used here is CSD (Canonical <b>Sign</b> <b>Digit)</b> technique. CSD technique efficiently reduces redundant bits. Pipelining technique is also introduced here which reduces the processing time. I...|$|E
40|$|The {{purpose of}} this paper is twofold: to give a {{positive}} integer algorithm for transforming both negative and positive numbers between equal magnitude radices of opposite sign; to implement a sequential logic machine for bidirectional conversion of radix 2 numbers which requires no “a priori” or “a posteriori” knowledge of the <b>sign</b> <b>digit</b> and which automatically generates the properly signed data and its complement, when required, on a digit-by-digit basis starting with the least significant digit...|$|E
40|$|In {{this paper}} {{the design of}} a totally multiplier-less M-Channel Modified Discrete Fourier Transform (MDFT) Filter bank with Perfect {{reconstruction}} has been proposed. Canonic <b>Sign</b> <b>Digit</b> (CSD) based Finite Impulse Response (FIR) prototype filter with low implementation complexity is designed. The performance of the MDFT filter bank designed with this filter is optimized using Artificial Bee Colony (ABC) algorithm. This design leads to very low implementation complexity and hence low power dissipation and low chip area, which are desirable in upcoming applications such as software defined radio, wireless communication and portable computing systems...|$|E
40|$|A {{sub-band}} {{tree structure}} hardware design based on canonic <b>signed</b> <b>digit</b> (CSD) architecture {{is presented in}} this paper. We have proposed based on canonic <b>signed</b> <b>digit</b> (CSD) arithmetic for low complexity and efficient implementation of sub-band tree structure. The canonic <b>signed</b> <b>digit</b> (CSD) technique {{has been applied to}} reduce the number of full adders required by 2 ’s complement based deigns. This architecture is suitable for high speed on-line applications. With this architecture the speed of the sub-band tree structure is increased with a factor two but the occupied area of the circuit is less than double. It has 100...|$|R
40|$|AbstractÐAssuming <b>signed</b> <b>digit</b> number representations, we {{investigate}} {{the implementation of}} some addition related operations assuming linear threshold networks. We measure the depth {{and size of the}} networks in terms of linear threshold gates. We show first that a depth- 2 network with O…n † size, weight, and fan-in complexities can perform <b>signed</b> <b>digit</b> symmetric functions. Consequently, assuming radix- 2 <b>signed</b> <b>digit</b> representation, we show that the two operand addition can be performed by a threshold network of depth- 2 having O…n † size complexity and O… 1 † weight and fan-in complexities. Furthermore, we show that, assuming radix-… 2 n 1 † <b>signed</b> <b>digit</b> representations, the multioperand addition can be computed by a depth- 2 network withO…n 3 † size with the weight and fanin complexities being polynomially bounded. Finally, we show that multiplication can be performed by a linear threshold network of depth- 3 with the size of O…n 3 † requiring O…n 3 † weights and O…n 2 logn † fan-in. Index TermsÐComputer arithmetic, signed-digit number representation, signed-digit arithmetic, carry-free addition, redundant adders, redundant multipliers, threshold logic, neural networks. ...|$|R
40|$|Abstract—Symbolic substitution, a {{parallel}} processing technique, {{has been proposed}} in computing literature to perform fast, carry-free addition of numbers. Several algorithms and corresponding symbolic substitution tables {{have been developed for}} addition of two numbers represented in binary, modified <b>signed</b> <b>digit</b> (MSD), and canonical modified <b>signed</b> <b>digit</b> (CMSD) number systems. In this paper, however, we present a new symbolic substitution based algorithm and corresponding substitution table for the addition of two numbers represented in canonical modified <b>signed</b> <b>digit</b> (CMSD) notation. In contrast with the existing algorithm in this regard, that derives the addition result in MSD system, our algorithm derives the result in CMSD notation and thus it could be employed to perform symbolic substitution based associative addition of a set of CMSD numbers. c ○ 200...|$|R
40|$|A new carry-free Montgomery {{inversion}} algorithm {{which is}} suitable for hardware implementation is presented. The algorithm utilizes a new redundant <b>sign</b> <b>digit</b> (RSD) representation and arithmetic to avoid carry propagation in addition and subtraction, which are the atomic operations in the Montgomery inversion algorithm. The proposed algorithm is described {{in such a way}} that its hardware realization is straightforward. The algorithm enables very fast computation of multiplicative inversion in GF(p), which is the most time-consuming operation in elliptic and hyperelliptic curve cryptography. Complexity analysis and a gate level implementation of the algorithm reveal that the proposed algorithm provides a speedup of at least 1. 95 over the original Montgomery inversion algorithm...|$|E
40|$|Abstract: The {{proposed}} paper presents multiplier-less architecture for the discrete {{wavelet transform}} using canonic signed digit (CSD). In the proposed architecture, the canonic <b>sign</b> <b>digit</b> (CSD) algorithm {{has been applied}} {{to reduce the number of}} full adders required by 2 ’s complement based deigns. The proposed design has been coded in VHDL and functionality is verified by RTL and gate level simulation targeting Xilinx vertex-IV, SF Packet 363. The proposed architecture is based on arithmetic for low complexity and efficient implementation of 2 -D discrete wavelet transform. DWPT provides good temporal and spectral resolutions in arbitrary regions of the time and frequency plane. With this proposed architecture the speed of the 2 -D DWPT operation will increase. This architecture is suitable for high speed on-line applications...|$|E
40|$|The {{main issue}} in this thesis is to {{minimize}} the number of operations and the energy consumption per operation for the computation (arithmetic operation) part of DSP circuits, such as Finite Impulse Response Filters (FIR), Discrete Cosine Transform (DCT), and Discrete Fourier Transform (DFT) etc. More specific, {{the focus is on}} the elimination of most frequent common sub-expression (CSE) in binary, Canonic <b>Sign</b> <b>Digit</b> (CSD), Twos Complement or <b>Sign</b> <b>Digit</b> representation of the coefficients of non-recursive multiple input multiple output (MIMO)   FIR system, which can be realized using shift-and-add based operations only. The possibilities to reduce the complexity i. e. the chip area, and the energy consumption have been investigated. We have proposed an algorithm which finds the most common sub expression in the binary/CSD/Twos Complement/Sign Digit representation of coefficients of non-recursive MIMO multiplier less FIR systems. We have implemented the algorithm in MATLAB. Also we have proposed different tie-breakers for the selection of most frequent common sub-expression, which will affect the complexity (Area and Power consumption) of the overall system. One choice (tie breaker) is to select the pattern (if there is a tie for the most frequent pattern) which will result in minimum number of delay elements and hence the area of the overall system will be reduced. Another tie-breaker is to choose the pattern which will result in minimum adder depth (the number of cascaded adders). Minimum adder depth will result in least number of glitches which is the main factor for the power consumption in MIMO multiplier less FIR systems. Switching activity will be increased when glitches are propagated to subsequent adders (which occur if adder depth is high). As the power consumption is proportional to the switching activity (glitches) hence we will use the sub-expression which will result in lowest adder depth for the overall system...|$|E
40|$|In {{binary number}} system carry {{is a major}} problem in arithmetical operation. We have to suffer O(n) carry {{propagation}} delay in n-bit binary operation. To overcome this problem <b>signed</b> <b>digit</b> is required for carry free arithmetical operation. Further, literature reviews suggest that multi-valued logic (MVL) would be a better choice {{to address the problem of}} developing faster chips for performing faster computational operation. Quaternary <b>Signed</b> <b>Digit</b> (QSD) have a major contribution in higher radix (= 4) carry free arithmetical operation. For digital implementation, the <b>signed</b> <b>digit</b> quaternary numbers are represented using 3 -bit 2 's compliment notation. In this paper, a simple and new technique of binary (2 's compliment) to QSD conversion is proposed and described. Well-known operational amplifier (OPAMP) based digital to analog converter circuit is also given to verify the above technique...|$|R
40|$|The {{number of}} {{positive}} and negative carries in the addition of two independent random <b>signed</b> <b>digit</b> expansions of given length is analyzed asymptotically for the $(q, d) $-system and the symmetric <b>signed</b> <b>digit</b> expansion. The results include expectation, variance, covariance between the positive and negative carries and a central limit theorem. Dependencies between the digits require determining suitable transition probabilities to obtain equidistribution on all expansions of given length. A general procedure is described to obtain such transition probabilities for arbitrary regular languages. The number of iterations in von Neumann's parallel addition method for the symmetric <b>signed</b> <b>digit</b> expansion is also analyzed, again including expectation, variance and convergence to a double exponential limiting distribution. This analysis is carried out in a general framework for sequences of generating functions...|$|R
3000|$|... and the {{conversion}} from an integer to <b>signed</b> <b>digit</b> code {{can be implemented}} by recursive functions. These are given in the Appendix.|$|R
40|$|The {{effect of}} {{different}} stimulus sets (regular digits, spatial and somatic sensory digits, and the signs for the digits) on the span capacity of deaf and hearing Ss was investigated. Results were recorded for forward and reverse recall over pre and post-cued conditions for all stimulus sets. Span capacity of hearing Ss remained invariant to stimulus set. Span capacity of deaf Ss, while inferior {{to that of}} the hearing group, improved with <b>sign</b> <b>digit</b> presentation. Serial position analyses revealed that both deaf and hearing Ss demonstrated forward/reverse effects (i. e. forward span greater than reverse span). Finally, no difference in performance was observed over pre and post-cued conditions for hearing Ss, while deaf Ss performed better on pre than post-cued conditions. Results are discussed in terms of capacity, rehearsal and coding aspects of short term memory performance...|$|E
40|$|Multi-stage analog-to-digital {{converters}} are {{the dominant}} choice in applications that require both high speed and high accuracy, such as video and wideband radio [1]. Non-idealities such as static device mismatch and dynamic timing mismatch, in different architectures of multi-steps {{analog to digital converter}} affect the redundancy and {{performance at the}} output of an instrument. Redundant <b>sign</b> <b>digit</b> (RSD) is an approach of calibration have been proposed to detect and automation no anymore only for cyclic converter but also for multistage A/D with M-bits per cycle for correction of errors in order to improve the resolution and the redundancy of A/D converters and to adapt the high performance of digital signal processing system. In this paper we will presented a behavioral model in order to investigate the impact of different sources of error at different levels of simulation based at the comparison of RSD to conventional converter with Z extra decision level (CRZ). As result, the RSD converter show a performance equivalent to CRZ with Z= 2 M- 1 where M is the number of bits per cycle...|$|E
40|$|Abstract—The JPEG 2000 {{image coding}} {{standard}} employs the biorthogonal 9 / 7 wavelet for lossy compression. The performance of hardware implementation of 9 / 7 -filter bank depends on accuracy and efficiency. A method for processing signal in a canonical signed digit format, filter due to fractional coefficient includes {{the steps of}} obtaining real coefficients optimized to desired filter characteristics, calculating scaling factors for each real coefficients which minimizes errors between the real coefficients and converted canonical signed digit codes, producing optimum canonical signed digit coefficients by using the calculated scaling factors and filtering input data by using the optimum canonical signed digit form coefficient. For multiplierless operation canonical <b>sign</b> <b>digit</b> plays an important roll in processing signal. Advantage of this implementation {{is to reduce the}} number of adders in hardware and also increase the speed of operation. Filter bank filters the low resolution information using lowpass filter and high resolution information by using high pass filter. Wavelet co-efficient decides the characteristic of filter. In this method we used 9 / 7 wavelet transform to implement multiplierless operation. To implement multiplierless Hardware we used sum or difference of power two-representation i. e. canonical signed digit form. The canonical signed digit form is optimal in terms of how many nonzero digits are required to represent a given number. On an average, a canonical representation used two thirds as many nonzero digits as a binary representation, so the canonical signed digit form can significantly reduce the number of adders required in hardware...|$|E
40|$|A {{parallel}} multiplier for constant {{numbers is}} pre-sented. The constant number is in Canonical <b>Signed</b> <b>Digit</b> (CSD) {{form and the}} other factor in two’s com-plement form. The result is obtained in two’s com-plement form. The design presented here {{is based on a}} special algorithm developed for the multiplication of two’s complement numbers with numbers in <b>signed</b> <b>digit</b> representation. The proposed multiplier com-pared with the existing schemes is superior from the point of hardware complexity and operation speed. I...|$|R
40|$|Title: Binary <b>Signed</b> <b>Digit</b> Representations of Integers in Cryptanalysis of Hash Functions Author: Jiří Vábek Department: Department of Algebra Supervisor: doc. RNDr. Jiří Tůma, DrSc., Department of Algebra Abstract: The work {{summarizes}} {{two main}} papers, A New Type of 2 -block Colli- sions in MD 5 and On the Number of Binary <b>Signed</b> <b>Digit</b> Representations of a Given Weight, while containing also the wider {{introduction to the}} topic of crypt- analysis of MD 5 and binary <b>signed</b> <b>digit</b> representations (BSDR's). In the first paper we have implemented and applied Stevens algorithm to the newly proposed initial message differences and constructed a new type of collisions in MD 5. In the second paper we have introduced and proved a new improved bound for the number of optimal BSDR's and also a new recursive bound for the number of BSDR's of a given integer with a given overweight. In addition to the results in mentioned papers, the generalized result is stated with the new bound for the number of optimal D-representations of natural numbers with D = { 0, 1, 3 }. Keywords: hash function, MD 5, binary <b>signed</b> <b>digit</b> representation (BSDR), non- adjacent form (NAF) ...|$|R
40|$|Abstract [...] - In {{binary number}} system carry {{is a major}} problem in arithmetical operation. We have to suffer O(n) carry {{propagation}} delay in n-bit binary operation. To overcome this problem <b>signed</b> <b>digit</b> is required for carry free arithmetical operation. Further, literature reviews suggest that multi-valued logic (MVL) would be a better choice {{to address the problem of}} developing faster chips for performing faster computational operation. Quaternary <b>Signed</b> <b>Digit</b> (QSD) have a major contribution in higher radix (= 4) carry free arithmetical operation. For digital implementation, the <b>signed</b> <b>digit</b> quaternary numbers are represented using 3 -bit 2 ’s compliment notation. In this paper, a simple and new technique of binary (2 ’s compliment) to QSD conversion is proposed and described. Well-known operational amplifier (OPAMP) based digital to analog converter circuit is also given to verify the above technique...|$|R
40|$|In {{redundant}} representations, addition can {{be carried}} out in a constant time independent of the word length of the operands. Adder forms a fundamental building block in almost majority of VLSI designs. A hybrid adder can add an unsigned number to a signed-digit number and hence their efficient performance greatly determinesthe quality of the final output of the concerned circuit. In this paper we designed and compared the speed of adders by reducing the carry propagation time with the help of combined effect of improved architectures of adders and <b>signed</b> <b>digit</b> representation of number systems. The key idea is to draw out a compromise between execution time of fast adding process and area available which is often very limited. In this paper we also tried to verify the various algorithms of <b>signed</b> <b>digit</b> and hybrid <b>signed</b> <b>digit</b> adders...|$|R
5000|$|Lui Han, Dongdong Chen, Seok-Bum Ko, Khan A. Wahid [...] "Non-speculative Decimal <b>Signed</b> <b>Digit</b> Adder" [...] from Department of Electrical and Computer Engineering, University of Saskatchewan.|$|R
40|$|The Hybrid <b>Signed</b> <b>Digit</b> (HSD) {{representation}} {{introduced in}} [9] employs both <b>signed</b> and unsigned <b>digits</b> and renders the maximum length of carry propagation {{equal to the}} maximum distance between two consecutive <b>signed</b> <b>digits.</b> This representation offers a continuum of choices from two’s complement representation on one extreme (where there are no <b>signed</b> <b>digits)</b> {{all the way to}} the conventional fully <b>signed</b> <b>digit</b> (SD) representation on the other extreme, wherein every <b>digit</b> is <b>signed.</b> The area-delay tradeoffs associated with each of the HSD formats have been analyzed in [9]. Possibility of reducing power consumption by utilizing the HSD representation was also mentioned therein. This paper investigates the impact of the HSD representation on power consumption. Adder based on a well known fully SD implementation [2] (which is adopted in a microprocessor [4]) is compared with the adder based on HSD representation. Layouts of basic adder cells based on SD and HSD representations are exhaustively simulated to obtain the average number of transitions and power dissipation per addition. The results are then used to estimate power dissipation in adders of various word lengths and indicate that adopting HSD representation can lead to a reduction in power consumption over a fully SD representation. The power (and area) reduction is achieved as a result of algorithm level change. This leaves room for additional power reduction by employing standard techniques at lower levels of the design process (such as circuit level, layout level etc). Furthermore, The HSD representation offers a continuum of choices to the designer. By increasing the distance between the <b>signed</b> <b>digits,</b> lower power dissipation can be achieved at the expense of slower speed. Thus, if the worst case delay is predetermined, the designer can select a hybrid representation that minimizes power dissipation under the delay constraint. ...|$|R
40|$|Software-Defined Radio (SDR) {{technology}} is evolving rapidly, offering higher flexibility for wireless communication networks. For {{the sake of}} performance, and power consumption, filtering is commonly implemented in hardware using FPGAs. Pulse shaping in the transmitter and the corresponding matched filtering in the receiver, which together satisfy the Nyquist inter symbol interference (ISI) criterion, are no exception to this. To decrease the FPGA resources used by filters, to increase speed and to decrease power consumption the filter coefficients can be optimized by expressing them in canonical <b>signed</b> <b>digit</b> (CSD) form, using as few arithmetic operations per filter as possible, while maintaining acceptable filter characteristics. In this paper a new method to decrease the number of nonzero <b>signed</b> <b>digits</b> is presented. With this method a reduction of up to 65 % of the nonzero <b>signed</b> <b>digits</b> per filter is realized, while decreasing the ISI ratio too...|$|R
40|$|Boehm et al. mention three {{different}} main approaches to exact real number arithmetic: Representation of reals via continued fractions, <b>signed</b> <b>digit</b> expansions, and as functions (Cauchy sequences). There exist prototype implementations of packages providing exact real arithmetic {{based on all}} three of these approaches. A key property distinguishing the approaches is incrementality: If the accuracy of the result has to be increased in the function approach, computation starts from scratch and all previous calculations have to be disregarded. In contrast, the <b>signed</b> <b>digit</b> approach is incremental, i. e. the previous result is re-used and some further digits are computed to increase precision. In this paper, we show how the function approach can be modified, resulting in a hybrid representation where <b>signed</b> <b>digit</b> expansions can be read as functions and vice versa. We develop an algorithm for addition in this setting combining advantages of both approaches. Keywords: Exact real arithmetic, in [...] ...|$|R
40|$|Exact {{representations}} of real numbers {{such as the}} <b>signed</b> <b>digit</b> representation or more generally linear fractional representations or the infinite Gray code represent real numbers as infinite streams of digits. In earlier work by the first author it was shown how to extract certified algorithms working with the <b>signed</b> <b>digit</b> representations from constructive proofs. In this paper we {{lay the foundation for}} doing a similar thing with nonempty compact sets. It turns out that a representation by streams of finitely many digits is impossible and instead trees are needed. Comment: 34 page...|$|R
40|$|This paper studies coinductive {{representations}} of real numbers by <b>signed</b> <b>digit</b> streams and fast Cauchy sequences. It is shown how the associated coinductive principle {{can be used}} to give straightforward and easily implementable proofs of the equivalence of the two representations as well as the correctness of various corecursive exact real number algorithms. The basic framework is the classical theory of coinductive sets as greatest fixed points of monotone operators and hence is different from (though related to) the type theoretic approach by Ciaffaglione and Gianantonio. Key words: Exact real number computation, coinduction, corecursion, <b>signed</b> <b>digit</b> streams. ...|$|R
40|$|Redundant <b>signed</b> <b>digit</b> number {{systems are}} popular in {{computationally}} intensive environments particularly {{because of their}} carry-free property which allows for digit-parallel addition. The time required for addition is particularly important because other arithmetic operations heavily depend on it. <b>Signed</b> <b>digit</b> number systems with high radices are of particular interest because of less memory requirement to represent a given number. But, {{the time required to}} perform digit-parallel addition is, by a relatively large coefficient, logarithmically proportional to the radix. Reduction of this coefficient is the prime goal of our study in this paper, where we emphasize on least cost implementations...|$|R
40|$|In {{this paper}} we {{investigate}} no learning based neural networks for <b>signed</b> <b>digit</b> counters. We first assume radix- 2 <b>signed</b> <b>digit</b> inputs and prove that a pj([log p] + 1) {{can be implemented}} with a depth- 2 neural network with at most p + 2 [log p] + 3 neural gates and the maximum weight and fan-in values {{in the order of}} O(p). Under the same assumption we investigate 7 j 2 counters and we propose an explicit depth- 3 (implicit depth- 2) neural network for such counters. Finally we assume radix-(2 p Γ 1) <b>signed</b> <b>digit</b> input representation and we prove that a pj 2 counter can be implemented with an explicit depth- 2 neural network with the size measured in terms of neural gates in the order of O(p 2) and with the maximum weight and fan-in values both in the order of O(p 2). 1 Introduction Multiplication schemes for VLSI implementations can be divided broadly in two categories, namely array and parallel multiplication schemes [1]. Both schemes reduce a matrix of partial products to a sing [...] ...|$|R
40|$|According to {{scientific}} applications, level of precision is more demanding computational point {{which can be}} double precision floating point arithmetic‘s or quadruple precision floating-point arithmetic‘s. Here we analyze the evolution of double-precision floating-point & quadruple precision floating-point computing. Since last few years this application has more demand. Modern science and Engineering models mostly depend on supercomputer simulation to reduce experimentation requirements. The results show that peak-performance for precision addition, Subtraction, multiplication and division on FPGAs is already better than general-purpose processors (GPPs). The canonical <b>signed</b> <b>digit</b> (CSD) representation {{is one of the}} existing <b>signed</b> <b>digit</b> representations with unique features which make it useful in certain DSP applications focusing on low power, area efficient and high speed arithmetic. Canonical <b>signed</b> <b>digit</b> is a recoding technique, which recodes a number with minimum number of non-zero digits. As the number of partial products depends on the number of non-zero digits, by using Canonical recoding, the number of non-zero digits will be reduced, thereby reducing the number of partial products. In this paper, Double & quadruple precisio...|$|R
40|$|This paper {{proposes a}} {{methodology}} {{for the development}} of simple arithmetic selfchecking circuits using <b>Signed</b> <b>Digit</b> representation. In particular, the architecture of an adder is reported and its self- checking capability with respect to the stuck-at fault set is shown. The main idea underlying the paper is to exploit the properties of <b>Signed</b> <b>Digit</b> representation allowing carry-free operations. In a carry free adder the parity can be easily checked allowing therefore detecting the occurrence of a fault belonging to the considered stuck- at fault set. The proposed architecture is therefore very suitable for the implementation of self-checking adders that are also fast due to the same carry free property. ...|$|R
40|$|We discuss {{an optimal}} method for the {{computation}} of linear combinations of elements of Abelian groups, which uses <b>signed</b> <b>digit</b> expansions. This has applications in elliptic curve cryptography. We compute the expected {{number of operations}} asymptotically (including a periodically oscillating second order term) and prove a central limit theorem. Apart from the usual right-to-left (i. e., least significant digit first) approach we also discuss a left-to-right computation of the expansions. This exhibits fractal structures that are studied in some detail. Key words: Elliptic curve cryptography, joint sparse form, <b>signed</b> <b>digit</b> expansions, fractals This author {{is supported by the}} START-project Y 96 -MAT of the Austrian Science Fund...|$|R
