765|10000|Public
25|$|What {{operation}} is performed (3n + 1)/2 or n/2 {{depends on the}} parity. The parity sequence {{is the same as}} the <b>sequence</b> <b>of</b> <b>operations.</b>|$|E
25|$|It is connected: any nonempty string {{may have}} its rank reduced by some operation, {{so there is}} a <b>sequence</b> <b>of</b> <b>operations</b> leading from it to the empty string, {{reversing}} which gives a directed path in the graph from the empty string to every other vertex.|$|E
25|$|In linear algebra, Gaussian {{elimination}} (also {{known as}} row reduction) is an algorithm for solving systems of linear equations. It is usually {{understood as a}} <b>sequence</b> <b>of</b> <b>operations</b> performed on the corresponding matrix of coefficients. This method {{can also be used}} to find the rank of a matrix, to calculate the determinant of a matrix, and to calculate the inverse of an invertible square matrix. The method is named after Carl Friedrich Gauss (1777–1855), although it was known to Chinese mathematicians as early as 179 CE (see History section).|$|E
30|$|Learners could {{understand}} nested structures in control flows and code descriptions through packing <b>sequences</b> <b>of</b> <b>operations</b> hierarchically.|$|R
2500|$|... do-blocks {{in a state}} monad are <b>sequences</b> <b>of</b> <b>operations</b> {{that can}} examine and update the state data.|$|R
2500|$|... with Węgrzyn, Stefan Skowronek, Marcin. Optimization <b>of</b> <b>sequences</b> <b>of</b> <b>operations</b> under {{constraints}} on the individual operations. (Polish) Podstawy Sterowania 1 (1971), 147—151.|$|R
500|$|Just as exponentiation {{of natural}} numbers is {{motivated}} by repeated multiplication, {{it is possible to}} define an operation based on repeated exponentiation; this operation is sometimes called hyper-4 or tetration. [...] Iterating tetration leads to another operation, and so on, a concept named hyperoperation. [...] This <b>sequence</b> <b>of</b> <b>operations</b> is expressed by the Ackermann function and Knuth's up-arrow notation. Just as exponentiation grows faster than [...] multiplication, which is faster-growing than addition, tetration is faster-growing than exponentiation. Evaluated at , the functions addition, multiplication, exponentiation, and tetration yield 6, 9, 27, and [...] (...) respectively.|$|E
2500|$|... with Węgrzyn, S. Skowronek, M. Optimization of a <b>sequence</b> <b>of</b> <b>operations</b> at {{limitations}} {{imposed on}} particular operations. Bull. Acad. Polon. Sci. Sér. Sci. Tech. 20 (1972), 65—68.|$|E
2500|$|In the Babbage design, one {{iteration}} (i.e., {{one full}} set of addition and carry operations) happens for each rotation of the main shaft. Odd and even columns alternately perform an addition in one cycle. The <b>sequence</b> <b>of</b> <b>operations</b> for column [...] is thus: ...|$|E
50|$|Although {{the company}} {{demonstrated}} <b>operation</b> <b>of</b> a prototype thruster with an end-to-end (grid to thruster) <b>sequence</b> <b>of</b> <b>operation</b> <b>of</b> an externally powered propulsion system in 2015, the company ceased {{operations at the}} end of 2015 as a result of insufficient funding to complete the requisite R&D process to complete development.|$|R
50|$|This clause is new; it {{recommends}} how language standards should {{specify the}} semantics <b>of</b> <b>sequences</b> <b>of</b> <b>operations,</b> {{and points out}} the subtleties of literal meanings and optimizations that change {{the value of a}} result.|$|R
25|$|For {{more details}} on the <b>sequences</b> <b>of</b> <b>operations</b> used for various quantum algorithms, see {{universal}} quantum computer, Shor's algorithm, Grover's algorithm, Deutsch–Jozsa algorithm, amplitude amplification, quantum Fourier transform, quantum gate, quantum adiabatic algorithm and quantum error correction.|$|R
2500|$|CP1/TP1: For every pair of {{concurrent}} operations [...] and [...] defined on {{the same}} state, the transformation function T satisfies CP1/TP1 property if and only if: [...] where [...] denotes the <b>sequence</b> <b>of</b> <b>operations</b> containing [...] followed byand where [...] denotes equivalence of the two sequences of operations. CP1/TP1 precondition: CP1/TP1 is required only if the OT system allows any two operations to be executed in different orders.|$|E
2500|$|Squaring {{the circle}} {{has been proven}} impossible, as it {{involves}} generating a transcendental number, that is, [...] Only certain algebraic numbers can be constructed with ruler and compass alone, namely those constructed from the integers with a finite <b>sequence</b> <b>of</b> <b>operations</b> of addition, subtraction, multiplication, division, and taking square roots. The phrase [...] "squaring the circle" [...] {{is often used to}} mean [...] "doing the impossible" [...] for this reason.|$|E
2500|$|Algorithms are {{essential}} to the way computers process data. Many computer programs contain algorithms that detail the specific instructions a computer should perform (in a specific order) to carry out a specified task, such as calculating employees' paychecks or printing students' report cards. Thus, an algorithm can be considered to be any <b>sequence</b> <b>of</b> <b>operations</b> that can be simulated by a Turing-complete system. Authors who assert this thesis include Minsky (1967), Savage (1987) and Gurevich (2000): ...|$|E
40|$|Systematic flight {{investigation}} of the spinning characteristics of various airplanes {{over a period of}} several years have given the pilots engaged in the testing a varied and extensive experience. From this experience certain general rules of procedure have been formulated, particularly for the <b>sequence</b> <b>of</b> <b>operation</b> <b>of</b> the controls in recovery from spins, and are recommended to the attention of all pilots...|$|R
5000|$|In case [...] and , , so the amortized {{time can}} be used to provide {{accurate}} predictions about the actual time <b>of</b> <b>sequences</b> <b>of</b> <b>operations,</b> even though the amortized time for an individual operation may vary widely from its actual time.|$|R
30|$|In general, {{programming}} {{students learn}} algorithm, code readings, and coding in turn. They attend a lecture and receive algorithm instruction from their teacher. Then, they reproduce {{the behavior of}} the algorithm using certain input data and produce a <b>sequence</b> <b>of</b> concrete <b>operations</b> that represents {{the behavior of the}} algorithm. Subsequently, they abstract <b>sequences</b> <b>of</b> <b>operations,</b> grasp the relationship between the abstracted operations and the program code, and consequently understand the entire program code. Finally, they perform a coding exercise to confirm their understandings.|$|R
2500|$|On 2 January 1944, the 32nd Division {{took part}} in Operation Cartwheel, part of MacArthur's [...] "leap-frog" [...] {{operational}} plan to take strategic points to use as forward bases. MacArthur sent Allied forces westward along the [...] northern coast of New Guinea in a <b>sequence</b> <b>of</b> <b>operations</b> against selected locations that would provide landing fields for aircraft. This was designed to provide his ground forces with continued close air support and deny the enemy sea and airborne resupply, effectively cutting the Japanese forces off as they were under attack.|$|E
2500|$|For {{the next}} several seconds, the crew {{continued}} to call out [...] "100 meters" [...] as read from the radar altimeter. The aircraft was flying into a valley at this time and actually descended by [...] The crew began calling out radar altitude every [...] At [...] radar altitude (where the crew had set their radar altitude bugs), the First Officer called out [...] "Go around" [...] (this is the [...] "confirmation" [...] go around call {{referred to in the}} Polish comment above). Due to the terrain in the area, the aircraft was actually only [...] above runway level at the time. Simultaneously to this callout, the FDR recorded a brief pull on the control column, likely done by the first officer, as he instinctively started the go-around sequence of actions. According to the investigation, this attempt at a go-around was completely overridden by the auto-pilot, which was still active, and, in any event, it was not completed (protocol requires that the correct <b>sequence</b> <b>of</b> <b>operations</b> during a go-around attempt involves increasing thrust to takeoff mode and disengaging the autopilot, neither action was done at the time). Flight simulator testing by the investigation concluded that had the first officer completed a go-around at this point, the crash would likely have been avoided despite the violation of minimums and the excessive rate of descent. The investigation found that this was the last moment at which a go-around would have been successful.|$|E
2500|$|Rather than {{inferring}} {{the ancestral}} DNA sequence, {{one may be}} interested in the larger-scale molecular structure and content of an ancestral genome. This problem is often approached in a combinatorial framework, by modelling genomes as permutations of genes or homologous regions. Various operations are allowed on these permutations, such as an inversion (a segment of the permutation is reversed in-place), deletion (a segment is removed), transposition (a segment is removed from one part of the permutation and spliced in somewhere else), or gain of genetic content through recombination, duplication or horizontal gene transfer. The [...] "genome rearrangement problem", first posed by Watterson and colleagues, asks: given two genomes (permutations) and a set of allowable operations, what is the shortest <b>sequence</b> <b>of</b> <b>operations</b> that will transform one genome into the other? [...] A generalization of this problem applicable to ancestral reconstruction is the [...] "multiple genome rearrangement problem": given a set of genomes and a set of allowable operations, find (i) a binary tree with the given genomes as its leaves, and (ii) an assignment of genomes to the internal nodes of the tree, such that the total number of operations across the whole tree is minimized. [...] This approach is similar to parsimony, except that the tree is inferred along with the ancestral sequences. [...] Unfortunately, even the single genome rearrangement problem is NP-hard, although it has received much attention in mathematics and computer science (for a review, see Fertin and colleagues).|$|E
50|$|Inspecting sites, {{analyzing}} {{factors such}} as climate, soil, flora, fauna, surface and subsurface water and drainage; and consulting with clients and making recommendations regarding methods <b>of</b> work and <b>sequences</b> <b>of</b> <b>operations</b> for projects related to the landscape and built environment.|$|R
40|$|Given the {{congruence}} lattice L of {{a finite}} algebra A with a Mal'cev term, {{we look for}} those <b>sequences</b> <b>of</b> <b>operations</b> on L that are <b>sequences</b> <b>of</b> higher commutator <b>operations</b> <b>of</b> expansions of A. The properties of higher commutators proved so far delimit {{the number of such}} sequences: the number is always at most countably infinite; if it is infinite, then L is the union of two proper subintervals with nonempty intersection. Comment: 9 pages, submitted for publicatio...|$|R
40|$|The {{sequence}} control system for Cs atomic fountain clock {{is described in}} this paper. An electronic module to control the operational <b>sequence</b> <b>of</b> the Cesium (Cs) fountain frequency standard has been designed and developed. This control system consists of RF generation for AOMs and provides sequential control for cyclic <b>operation</b> <b>of</b> atomic fountain. In this paper, indigenously developed hardware as well as software of the module along with the computer controlled <b>sequence</b> <b>of</b> <b>operation</b> <b>of</b> the Cs fountain is described in detail...|$|R
50|$|A <b>sequence</b> <b>of</b> <b>operations</b> is {{represented}} by boxes connected with lines. In the example below, operation A consists of the <b>sequence</b> <b>of</b> <b>operations</b> B, C and D.|$|E
5000|$|Despite its {{artificial}} appearance, {{the total}} amortized {{time of a}} <b>sequence</b> <b>of</b> <b>operations</b> provides a valid upper bound on the actual time for the same <b>sequence</b> <b>of</b> <b>operations.</b>|$|E
5000|$|... accused device {{provides}} for the <b>sequence</b> <b>of</b> <b>operations</b> which is the precise essence of Freeman's advance in the art. With each device, Mercoid provides certain wiring diagrams for installation. The accused device has no other use than for accomplishing the <b>sequence</b> <b>of</b> <b>operations</b> of the Freeman patent.|$|E
50|$|In {{computational}} complexity theory, {{the potential}} method {{is a method}} {{used to analyze the}} amortized time and space complexity of a data structure, a measure of its performance over <b>sequences</b> <b>of</b> <b>operations</b> that smooths out the cost of infrequent but expensive operations.|$|R
40|$|Appendix J: Site User Guide [...] . J- 1 Appendix A – Programmatic Specification The {{programmatic}} specification for {{installation of}} the Premium Ventilation measures on stand-alone RTUs {{is included in the}} following Appendix. The programmatic specification includes the revised <b>Sequence</b> <b>of</b> <b>Operation</b> (see Appendix B for the original) ...|$|R
5000|$|The space {{required}} {{to represent a}} program can often be decreased {{by the use of}} interpreters in which common <b>sequences</b> <b>of</b> <b>operations</b> are represented compactly. A typical example is the use of a finite-state machine to encode a complex protocol or lexical format into a small table Jon Bentley ...|$|R
5000|$|... 4. Write {{the relay}} logic diagram from the <b>sequence</b> <b>of</b> <b>operations.</b>|$|E
50|$|The snub rhombicuboctahedron {{can be seen}} in <b>sequence</b> <b>of</b> <b>operations</b> {{from the}} cuboctahedron.|$|E
5000|$|For example, a <b>sequence</b> <b>of</b> <b>operations</b> in an {{applicative}} language like the following: ...|$|E
5000|$|The hyperoperation {{sequence}} [...] is the <b>sequence</b> <b>of</b> binary <b>operations</b> , defined recursively as follows: ...|$|R
50|$|In {{the summer}} 2015, the company {{demonstrated}} <b>operation</b> <b>of</b> a prototype thruster with specific impulse above 500 seconds using helium as a propellant. The demonstration showed an end-to-end <b>sequence</b> <b>of</b> <b>operation</b> <b>of</b> an externally powered propulsion system. Energy {{was drawn from}} the grid, converted into microwaves using EDI's gyrotron, guided through a system of beam shaping mirrors, and beamed from an antenna to a thruster. Conversion of the microwave energy into thrust was performed using a thermal thruster with a highly efficient microwave-absorbing heat exchanger.|$|R
40|$|In {{this paper}} {{we present a}} new {{template}} class concept for matrices and lattices. In the design we have focussed on the efficiency of single as well as <b>sequences</b> <b>of</b> <b>operations.</b> In order to get concise and efficient programming code we present a new technique based on template mechanisms and suitable inheritance structures. ...|$|R
