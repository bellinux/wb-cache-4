8|49|Public
5000|$|The Rock {{processor}} {{was intended}} to be used in Sun's proposed [...] "Supernova" [...] server line. Details of the <b>server</b> <b>specifications</b> were released in OpenSolaris Architecture Review case FWARC/2008/761.|$|E
50|$|The EPA {{released}} Version 1.0 of the Computer <b>Server</b> <b>specifications</b> on May 15, 2009. It covered standalone servers {{with one}} to four processor sockets. A second tier to the specification adding active state power and performance reporting for all qualified servers, as well as blade and multi-node server idle state requirements became effective December 16, 2013.|$|E
5000|$|With Xbox Live {{being the}} main focus, a few {{announcements}} were made such as <b>server</b> <b>specifications</b> {{and the development}} of over 50 Xbox Live enabled games. A subtle announcement was made towards the Xbox 360, with Microsoft stating that they will get a head start on PlayStation 3, and that they expect every game, 5 years from then, to be Xbox Live aware.https://web.archive.org/web/20110713004737/http://uk.xbox.ign.com/articles/372/372013p1.htmlhttp://www.ferrago.com/story/564http://www.ferrago.com/story/576http://www.computerandvideogames.com/article.php?id=81141 ...|$|E
40|$|The Work Manager for Application <b>Servers</b> <b>Specification</b> {{is being}} {{provided}} by the copyright holders under the following license. By using and/or copying this work, you agree that you have read, understood and will comply with the following terms and conditions: Permission to copy and display the Work Manager for Application <b>Servers</b> <b>Specification</b> and/or portions thereof, without modification, in any medium without fee or royalty is hereby granted, provided that you include the following on ALL copies of the Work Manager for Application <b>Servers</b> <b>Specification,</b> or portions thereof, that you make: 1. A link or URL to the Work Manager for Application <b>Servers</b> <b>Specification</b> at this location...|$|R
5000|$|The WFS Web Feature Services or Web Feature <b>Server</b> <b>specification</b> {{supports}} two communication models: ...|$|R
50|$|<b>Server</b> <b>Specification</b> - Whena {{customer}} has {{elected to}} own/lease hardware, they can select and specifyservers that are specifically tuned {{to meet the}} likely needs of their operation(i.e., directly controlling the cost/benefit equation).|$|R
30|$|In this paper, {{we focused}} our {{attention}} on the case where one computational unit is defined as one physical core. It {{would be useful to}} investigate the model where there are multiple computational units per core. In the most granular case, consumers could even specify exactly how many CPU cycles are required by a virtual machine. Using a typical 2 GHz CPU, consumers could specify how many clock cycles per second their virtual machine needs, between 1 and 2, 000, 000, 000. Further analysis should also be conducted on how the model performs in heterogeneous datacentres where different <b>server</b> <b>specifications</b> are used.|$|E
40|$|We apply {{a formal}} method based on assertions to specify and verify an atomic {{broadcast}} protocol. The protocol is implemented by replicating a server process on all processors in a network. First {{the requirements of}} the protocol are formally described. Next the underlying communication mechanism, the assumptions about local clocks, and the failure assumptions are axiomatized. Also the server process is represented by a formal specification. Then we verify that parallel execution of the server processes leads to the desired properties by proving that the conjunction of all <b>server</b> <b>specifications</b> and the axioms about the system implies {{the requirements of the}} protocol...|$|E
30|$|The rate {{at which}} the {{processor}} can interact with memory offers one potential system bottleneck. <b>Server</b> <b>specifications</b> often cite a maximum potential bandwidth, for example the cited maximum for one of our OpenStack Sun Fire x 4250 s is 21 GB/s, (with a 6 MB L 2 cache). Cloud providers do not cite figures for memory bandwidth, even though making effective use of the CPU for certain types of workload is going to be governed to some extent by whether the virtualisation system (hypervisor), base operating system or hardware itself can sufficiently separate operations to deal with any contention for the underlying physical resources.|$|E
50|$|JOnAS is an {{open-source}} {{implementation of}} the Java EE application <b>server</b> <b>specification,</b> developed and hosted by the ObjectWeb consortium (ObjectWeb is a non-profit European consortium, founded by INRIA, Groupe Bull, and France Télécom).JOnAS is released under the LGPL open-source license.|$|R
50|$|Write {{a native}} Java OPC UA stack. This was {{observed}} {{to be the}} most portable, but estimated to take the most engineering effort to implement. The Eclipse Milo project provides a pure-Java, open-source, implementation of the UA 1.03 client and <b>server</b> <b>specification.</b>|$|R
30|$|The next task is {{choosing}} the database migration parameters. These include {{the capacity of}} the target cloud database, <b>server(s)</b> <b>specification,</b> and whether a middleware (e.g., [16]) or VPN is required. Finally, a simulation is performed using our MigSim discrete-event simulator for each set of parameters.|$|R
40|$|A general {{model of}} a web server system {{comprising}} of the interactions between World Wide Web users and the web sites (servers) is analyzed and evaluated. Incoming requests, once admitted for processing, compete for the available resources (HTTP threads). An efficient approximate solution is provided; its accuracy is evaluated by comparing the model estimates with those obtained from simulations. The effect of several controllable parameters {{on the performance of}} the system is examined in a series of numerical and simulation experiments. In trying to understand the interactions between web users and web servers, we attempt to answer three key questions. How can we model user and server behavior on the World Wide Web ? How do users and web servers interact? Can we improve upon the ways in which web servers process incoming requests from users? In our study we formulate a queueing model for the web server and from the queueing model we obtain expressions for web server performance metrics such as average response time, throughput and blocking probability. This model will be used evaluate the suitability of web servers to prospective users of web server systems. The foreseen end users of the model are corporate decision makers who faced by a variety of several web server systems, are interested in evaluating the suitability of the servers in market. We envision a situation in which a given manager has a set of his/her own requirements or analysis of the business requirements and needs to purchase a web server that can meet the demands/requirements of the situation at hand. Hence with the users requirements and <b>server</b> <b>specifications,</b> the model could predict the best web server for the user requirements. We model the web server as an M/M/ 1 /K queue with FCFS queueing discipline. The arrival process of HTTP requests is assumed to be Poissonian and the service discipline First come First served (FCFS). The distribution of service time is assumed to be exponential. The total number of requests that can be processed at one time is limited to K. We obtain closed form expressions for web server performance metrics such as average response time, throughput and blocking probability...|$|E
40|$|Collection of {{autonomous}} computers are referred as Computer Networks consist of various devices that {{are attached to}} it and it must needs to be completely secured from inside or outside threats. Threat is an unwanted assault must be mitigated in all the measures by applying various cryptographic algorithms or models. Similarly, an attack {{is also an important}} issue to be considered in the networks both in the case of wired or wireless mode of network arrangements. In general Replay Attacks includes the most vulnerable attack in case of wireless networks particularly, Wireless Sensor Networks. The categories of attacks in the section one is followed by the hardware architecture that explains the sensor network arrangement in the section two. The research proposal suggests the query conditional model approach using the proxy <b>server</b> <b>specifications</b> to identify the intruder detection analysis to pinpoint the adversaries where the networks are spoofed by the false IP injection packets in order to compromise the networks. Till date the necessary authentication scheme are applied in the various modes to identify the intruding effect but the applications are subject to vulnerable because of wireless modes. Normally, hacking gets easily applicable in the wireless devices due to the shared nature of the wireless medium, also through modifying the Media Access Control (MAC) address of the network. The issue can be solved by the new proposal of the query conditional model approaches which exactly identifies the intruder and blacklist them in order to quarantine them like a viral scanner tool in the section three. Further the sections depict the pre-implementation procedure to notate the findings and followed by the analysis that narrates the pinpoint inference of the attacks detected and solved. Any sensor nodes that are compromised are arranged through the modular arithmetic fashion but still the deployment is not possible in the initial stage. The existing architectural pattern of the sensor node arrangement is random, but security arrangements are dynamic and {{it is up to the}} organization to decide the infrastructural needs. The cost of the node arrangement can also be considered in the feasibility stage. The research proposal and the model are applicable to any Advanced Encryption Standard [AES] algorithms in the near future. Keywords: Security, Encryption Standard, Query Model, Sensor, Attacks, Proxy...|$|E
40|$|Securing storage {{systems to}} use UNIX-based Kerberos version 5 servers for NFS storage {{authentication}} using both NFS version 3 and 4. NFS version 4 is the NFS Implementation and mandates Kerberos authentication {{as part of}} the NFS client and <b>server</b> <b>specification</b> Integrate their storage systems with Kerberos version 5 to achieve strong NFS storage authentication...|$|R
5000|$|Starting in 2004, the Forum {{expanded}} its work into other last mile technologies including optical fiber. On 17 June 2008 it {{changed its name}} to [...] "Broadband Forum". DSL-related specifications, while still {{a key part of the}} forum's work, are no longer its only work. For instance, the forum produced work specific to passive optical networking (PON). Its Auto-Configuration <b>Server</b> <b>specification</b> TR-069, originally published in 2004, was adapted for use with set-top box and Network Attached Storage units.|$|R
5000|$|The TD200x <b>server</b> offered higher <b>specifications</b> as {{compared}} to the TD200. Detailed <b>specifications</b> of the <b>server</b> are as follows: ...|$|R
50|$|AMAX {{introduced}} the ServMax Open CloudServer (OCS) data center product {{based on the}} Microsoft Open Cloud <b>Server</b> version 2 <b>specifications.</b>|$|R
5000|$|Apple iTunes : Apple iTunes is the {{original}} DACP <b>server</b> and the <b>specification</b> was created specifically for iTunes remote control.|$|R
50|$|The RS210 was {{announced}} by Lenovo in September 2009, {{along with the}} TS200. It was a rack <b>server</b> with <b>specifications</b> {{similar to those of}} the TS200. The processor, chipset, and RAM were the same. However, the four available hot swap bays were designed for 2.5 inch hard disk drives.|$|R
50|$|The Language Server Protocol was {{originally}} developed for Microsoft's Visual Studio Code. On 2016-07-27, Microsoft announced along with Red Hat and Codenvy that the protocol is being adopted {{and supported by}} the three companies. At the same time, Microsoft made the Language <b>Server</b> Protocol <b>specification</b> an open standard, hosted on GitHub.|$|R
5000|$|EJBs are {{deployed}} in an EJB container, typically within an application <b>server.</b> The <b>specification</b> describes how an EJB interacts with its container and how client code {{interacts with the}} container/EJB combination. The EJB classes used by applications {{are included in the}} [...] package. (The [...] package is a service provider interface used only by EJB container implementations.) ...|$|R
40|$|Abstract. Smart card Web server {{provides}} a modern interface between smart cards and the external world. It is {{of paramount importance}} that this new software component does not jeopardize the security of the smart card. This paper presents a formal model of the smart card Web <b>server</b> <b>specification</b> and the proof of its security properties. The for-malization enables a thoughtful analysis of the specification that has revealed several ambiguities and potentially dangerous behaviors. Our formal model is built using a modular approach upon a model of Java Card and Global Platform. By proving the security properties, we show that the smart card Web server preserves the security policy of the over-all model. In other words, this component introduces no illegal access to the card resources (i. e., file system and applications). Furthermore, the smart card Web server {{provides a}} means for securely managing the card contents (i. e., resources update). ...|$|R
40|$|Part 1 : Smart Cards System SecurityInternational audienceSmart card Web server {{provides}} a modern interface between smart cards and the external world. It is {{of paramount importance}} that this new software component does not jeopardize the security of the smart card. This paper presents a formal model of the smart card Web <b>server</b> <b>specification</b> and the proof of its security properties. The formalization enables a thoughtful analysis of the specification that has revealed several ambiguities and potentially dangerous behaviors. Our formal model is built using a modular approach upon a model of Java Card and Global Platform. By proving the security properties, we show that the smart card Web server preserves the security policy of the overall model. In other words, this component introduces no illegal access to the card resources (i. e., file system and applications). Furthermore, the smart card Web server {{provides a}} means for securely managing the card contents (i. e., resources update) ...|$|R
40|$|This {{specification}} is the {{specification of}} the interface for developers of OPC clients and OPC <b>servers.</b> The <b>specification</b> {{is a result}} of an analysis and design process to develop a standard interface to facilitate the development of servers and clients by multiple vendors that shall inter-operate seamlessly together. Trademarks: Most computer and software brand names have trademarks or registered trademarks. The individual trademarks have not been listed here...|$|R
40|$|Funded by Florida LSTA grants in 2002 - 03 {{this project}} {{digitized}} 88, 000 {{black and white}} aerial photographs and 2, 500 photomosaic indexes created for Florida by the U. S. Department of Agriculture between 1938 and 1971. These images are presented on the Web using an ESRI ARCIMS(Internet Map <b>Server.)</b> Technical <b>specifications</b> of digital capture, specialized programming, and project value are reviewed. (Will be published in OSS: International Digital Library Perspectives, v. 21, no. 2, Summer 2005...|$|R
40|$|Eﬀective {{management}} and sharing of geodata {{is one of}} the priorities of the European Union (INSPIRE activity) and companies all around the world. Many diﬀerent companies and organisations publish their geodata using web mapping services. This situation leads to a multiple publishing of similar or completely same geodata. On the other hand, there is frequently a problem how to determine an appropriate mapserver with the required data. This paper presents a geodata search engine which solves the problem how to access geodata more eﬀectively. Presented solution aggregates data from the diﬀerent mapservers and provides an interface according to the Open Geospatial Consortium Web Map <b>Server</b> <b>speciﬁcation.</b> This allows to use our solution in the standard GIS tools as common mapserver. Completely new feature is a request which allows to select map layers which fulﬁlls speciﬁed criteria. Selection could be given by keywords in a map layer description and by deﬁning a bounding box on Earth surface. Response is a list of appropriate layers sorted according to their relevance. Presented solution could be among other applications signiﬁcant source of information for many data mining techniques. It allows to interconnect processed data with their space-temporal context...|$|R
40|$|Cloud {{migration}} allows {{organizations to}} benefit from reduced operational costs, improved flexibility, and greater scalability, and enables them to focus on core business goals. However, {{it also has the}} flip side of reduced visibility. Enterprises considering migration of their IT systems to the cloud only have a black box view of the offered infrastructure. While information about <b>server</b> pricing and <b>specification</b> is publicly available, there is limited information about cloud infrastructure performance. Comparison of alternative cloud infrastructure offerings based only on price and <b>server</b> <b>specification</b> is difficult because cloud vendors use heterogeneous hardware resources, offer different server configurations, apply different pricing models and use different virtualization techniques to provision them. Benchmarking the performance of software systems deployed {{on the top of the}} black box cloud infrastructure offers one way to evaluate the performance of available cloud server alternatives. However, this process can be complex, time-consuming and expensive, and cloud consumers can greatly benefit from tools that can automate it. Smart CloudBench is a generic framework and system that offers automated, on-demand, real-time and customized benchmarking of software systems deployed on cloud infrastructure. It provides greater visibility and insight into the run-time behavior of cloud infrastructure, helping consumers to compare and contrast available offerings during the initial cloud selection phase, and monitor performance for service quality assurance during the subsequent cloud consumption phase. In this paper, we first discuss the rationale behind our approach for benchmarking the black box cloud infrastructure. Then, we propose a generic architecture for benchmarking representative applications on the heterogeneous cloud infrastructure and describe the Smart CloudBench benchmarking workflow. We also present simple use case scenarios that highlight the need for tools such as Smart CloudBench...|$|R
40|$|In this paper, {{we propose}} a server {{structure}} proposal and automatic performance verification technology which proposes and verifies an appropriate server structure on Infrastructure as a Service (IaaS) cloud with baremetal servers, container based virtual servers and virtual machines. Recently, cloud services have been progressed and providers provide not only virtual machines but also baremetal servers and container based virtual servers. However, users need to design an appropriate server structure for their requirements based on 3 types quantitative performances and users need much technical knowledge to optimize their system performances. Therefore, we study a technology which satisfies users' performance requirements on these 3 types IaaS cloud. Firstly, we measure performances of a baremetal server, Docker containers, KVM (Kernel based Virtual Machine) virtual machines on OpenStack with virtual server number changing. Secondly, we propose a server structure proposal technology {{based on the}} measured quantitative data. A server structure proposal technology receives an abstract template of OpenStack Heat and function/performance requirements and then creates a concrete template with <b>server</b> <b>specification</b> information. Thirdly, we propose an automatic performance verification technology which executes necessary performance tests automatically on provisioned user environments according to the template. Comment: 13 pages, 9 figures, International Conference on Internet Studies (NETs 2015), July 201...|$|R
40|$|Abstract. Geo-data and geo-service interoperations are {{important}} to Geographic Information System (GIS) users. To meet such needs, standard specifications are required for geo-data and geo-services. The OpenGIS Consortium (OGC) defined abstract specifications and partial implementation specifications, which can make diverse geo-data and geo-services accessible to conforming applications. However the implementation specifications are not complete, particularly {{in the areas of}} interactive map servers and feature servers. Currently available map server and feature <b>server</b> implementation <b>specifications</b> are only for HTTP-based Web environments; the implementation specifications for non-HTTP environments, such as CORBA, are still undefined...|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2005). The Dynamic Host Configuration Protocol (DHCP) Relay Agent Information Option (RFC 3046) conveys information between a DHCP Relay Agent and a DHCP <b>server.</b> This <b>specification</b> defines an authentication suboption for that option, containing a keyed hash in its payload. The suboption supports data integrity and repla...|$|R
40|$|Abstract—Performance unpredictability {{is one of}} {{the major}} {{concerns}} slowing down the migration of mission-critical applications into cloud computing infrastructures [4]. An example of non-intuitive result is the measured n-tier application performance in a virtualized environment that showed increasing workload caused a competing, co-located constant workload to decrease its response time [12]. In this paper, we investigate the sensitivity of measured performance in relation to two factors: (1) consolidated <b>server</b> <b>specification</b> of virtual machine resource availability, and (2) burstiness of n-tier application workload. Our first and surprising finding is that specifying a complete isolation, e. g., 50 - 50 even split of CPU between two co-located virtual machines (VMs) results in significantly lower performance compared to a fully-shared allocation, e. g., up to 100 % CPU for both co-located VMs. This happens even at relatively modest resource utilization levels (e. g., 40 % CPU in the VMs). Second, we found that an increasingly bursty workload also increases the performance loss among the consolidated servers, even at similarly modest utilization levels (e. g., 70 % overall). A potential solution to the first problem (performance loss due to resource allocation) is crosstier-priority scheduling (giving higher priority to shorter jobs), which can reduce the performance loss by a factor of two in our experiments. In contrast, bursty workloads are a more difficult problem: our measurements show they affect both the isolation and sharing strategies in virtual machine resource allocation. Keywords-application co-location; cloud; consolidation; experimental study; n-tier; performance; interference; RUBBoS. I...|$|R
50|$|One of Robert McCool's many {{contributions}} was {{in drafting}} the initial specification of the Common Gateway Interface (CGI), {{in collaboration with}} others on the www-talk mailing list, and providing a reference implementation of CGI in version 1.0 of the NCSA HTTPd web <b>server.</b> The CGI <b>specification,</b> introduced in December 1993, {{turned out to be}} a key element in making the World Wide Web dynamic and interactive.|$|R
50|$|DNS64 {{describes}} a DNS server that when {{asked for a}} domain's AAAA records, but only finds A records, synthesizes the AAAA records from the A records. The {{first part of the}} synthesized IPv6 address points to an IPv6/IPv4 translator and the second part embeds the IPv4 address from the A record. The translator in question is usually a NAT64 <b>server.</b> The standard-track <b>specification</b> of DNS64 is in RFC 6147.|$|R
50|$|Hewlett Packard Enterprise(HPE) offers {{data storage}} backup with its HPE StoreOnce portfolio. HPE StoreOnce can be {{offered as a}} virtual storage {{appliance}} (VSA) or a disk based hardware appliance. The StoreOnce VSA is licensed at 4 TB, 10 TB and 50 TB capacity points and can be deployed on any x86 Industry Standard <b>Server</b> with certain <b>specification</b> requirements. The disk based StoreOnce Backup appliances have six models ranging from a StoreOnce 3100 (5.5TB usable) to a StoreOnce 6500 (1.7PB usable).|$|R
40|$|The Web Map <b>Server</b> Interface <b>Specification,</b> {{launched}} by the OpenGIS Consortium in the final {{part of the year}} 1999, proposes a standard framework for publish and interchange geographical information, increasing the possibilities of inter-operational capacity among GIS applications in the Internet. On the other hand, software implementation for the internet is highly conditioned by the growth and standardisation of Java as preferred Internet programming language. The authors illustrate an approach for the implementation of the web map server interface using Java as the programming language, in both in the server side to implement the map services of the specification, {{as well as in the}} client side, using Java and the more broaden HTML. The paper provides some inside of this experience and shows different examples of map clients accessing map services from one or more map servers fulfilling the OpenGIS specification. 1...|$|R
