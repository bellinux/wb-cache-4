2|7|Public
25|$|In 1895, the C itself built {{locomotive}} No. 17 at Stockwell depot, {{and carried}} {{out a series of}} tests on locomotives 12, 15 and 17, as more locomotives would soon be needed for the extensions being made. They ordered three more locomotives from different manufacturers in 1898, which were equipped with four-pole motors, a more efficient control system using <b>series-parallel</b> <b>switching</b> of the motors, and on-board compressors. The motors were still mounted on the axles. Another two locomotives (Nos. 21 and 22), which were built at Stockwell Depot, included further refinements and were the prototypes for the final batches of locomotives. Nos. 23 to 52 were built by Crompton to an improved design, including nose-suspended motors connected to the axles by a single reduction gear, but still bore a strong external resemblance to the original locomotives. Between 1904 and 1907, locomotives Nos. 3 to 12 were rebuilt with new electrical equipment to improve their performance.|$|E
40|$|Abstract: This paper {{deals with}} a {{multilevel}} dc-link inverter topology with reduced number of <b>series-parallel</b> <b>switches</b> [1]. A large electrical drives and utility application demanding advance power electronics converter to meet a great power requirement [11]. As finding result multilevel power converter structure has been import as a high power and medium voltage situations. A multilevel inverter not only obtaining high power rating but also become better performances of system in relative to harmonics. In this paper modified inverter can get output more numbers of voltage levels with less numbers of switches(which connect in Series-Parallel) as comparable to cascaded H-bridge inverter which results in reduction of installation cost & easy to controlling. The circuit methodology, theoretical description and Matlab based simulation results described in detail in this paper...|$|R
40|$|Shannon in his 1938 Masterpsilas Thesis {{demonstrated}} that any Boolean function {{can be realized}} by a switching relay circuit, leading {{to the development of}} deterministic digital logic. Here, we replace each classical switch with a probabilistic switch (pswitch). We present algorithms for synthesizing circuits closed with a desired probability, including an algorithm that generates optimal size circuits for any binary fraction. We also introduce a new duality property for <b>series-parallel</b> stochastic <b>switching</b> circuits. Finally, we construct a universal probability generator which maps deterministic inputs to arbitrary probabilistic outputs. Potential applications exist in the analysis and design of stochastic networks in biology and engineering...|$|R
40|$|Abstract — Stochastic {{switching}} circuits are relay circuits that {{consist of}} stochastic switches (that we call pswitches). We study the expressive power of these circuits; in particular, we address the following basic question: given an arbitrary integer q, and a pswitch set { 1 2 q− 1,, [...] .,}, can we realize any rational q q q probability with denominator q n (for arbitrary n) {{by a simple}} <b>series-parallel</b> stochastic <b>switching</b> circuit? In this paper, we generalized previous results and prove that when q is a multiple of 2 or 3 the answer is positive. We also show that when q is a prime number the answer is negative. In addition, we propose a greedy algorithm to realize desired reachable probabilities, and thousands of experiments show that this algorithm can achieve almost optimal size. Finally, we prove that any desired probability can be approximated well by a linear size circuit. I...|$|R
40|$|In his 1938 Master’s Thesis, Shannon {{demonstrated}} that any Boolean function {{can be realized}} by a switching relay circuit, leading {{to the development of}} deterministic digital logic. Here, we replace each classical switch with a probabilistic switch (pswitch). We present algorithms for synthesizing circuits closed with a desired probability, including an algorithm that generates optimal size circuits for any binary fraction. We also introduce a new duality property for <b>series-parallel</b> stochastic <b>switching</b> circuits. Finally, we construct a universal probability generator which maps deterministic inputs to arbitrary probabilistic outputs. Potential applications exist in the analysis and design of stochastic networks in biology and engineering. I. INTRODUCTION. Claude Shannon, in his 1938 Master’s Thesis, discovered a systematic synthesis procedure to realize a given Boolean function using deterministic switches [Sha 38]. This classical contribution {{led to the development of}} modern digital logic design and is at the foundation of our ability to design and manufacture digital circuits with millions of transistors...|$|R
40|$|Stochastic {{switching}} circuits are relay circuits that {{consist of}} stochastic switches called pswitches. The study of stochastic switching circuits has widespread applications in many fields of computer science, neuroscience, and biochemistry. In this paper, we discuss several properties of stochastic switching circuits, including robustness, expressibility, and probability approximation. First, we study the effect caused by introducing an error of size ϵ to each pswitch in a stochastic circuit. We analyze two constructions–simple seriesparallel and general series-parallel circuits–and prove that simple series-parallel circuits are robust to small error perturbations, while general series-parallel circuits are not. Specifically, the total error introduced by perturbations of size less than ϵ is bounded by a constant multiple of ϵ {{in a simple}} seriesparallel circuit, independent {{of the size of}} the circuit. Next, we study the expressibility of stochastic switching circuits: Given an integer q and a pswitch set S = { 1 2,}, can we synthesize any q q rational probability with denominator qn (for arbitrary n) with a simple <b>series-parallel</b> stochastic <b>switching</b> circuit? We generalize previous results and prove that when q is a multiple of 2 or 3, the answer is yes. We also show that when q is a prime number larger than 3, the answer is no. Probability approximation is studied for a general case of an arbitrary q−...|$|R
40|$|This {{dissertation}} {{focuses on}} optimal generation of design-specific cell libraries. In cell-based integrated circuit design, a cell library defines the final {{quality of a}} design. Hence, use of a general-purpose cell library {{may lead to a}} poor quality. We address various issues regarding optimal generation of design-specific cell libraries, targeting high-performance digital circuit design. The goal of {{the first part of the}} dissertation is to provide the key components required to successfully realize the automatic generation of design-specific cell libraries, which consists of cell logic type selection and drive strength type selection. Chapter 2 addresses feasibility issues on transistor-level optimization. During transistor-level optimization, cell layout synthesis and characterization steps are the major bottlenecks with respect to runtime. To resolve this drawback, we present a fast and accurate prelayout estimation technique of cell characteristics. Our estimation technique is based on quick transistor placement. Given a transistor-level circuit of a cell, layout parasitics are estimated using quick transistor placement. Then, the cell is characterized by simulating an estimated circuit which is built according to the estimated layout parasitics. Experimental results on a 0. 13 um industrial standard cell library demonstrate that the proposed technique estimates the cell characteristics with a reasonable accuracy in a negligibly small amount of time. Chapter 3 addresses a cell logic type selection problem for design-specific cell libraries. Our methodology consists of two steps: logic-rich cell library generation and cell logic type count minimization. We propose a cell logic type count minimization method which minimizes the logic type count iteratively under performance constraints. Experimental results on the ISCAS 85 benchmark suite in an industrial 90 nm technology demonstrate that it is feasible to find the minimal set of cell logic types under performance constraints. Chapter 4 addresses a performance-constrained cell count minimization problem for continuously-sized circuits. After providing a formal formulation of the problem, we propose an effective heuristic for the problem. The proposed hill-climbing heuristic iteratively minimizes the number of cells under performance constraints such as area, delay and power. Experimental results on the ISCAS 85 benchmark suite in an industrial 90 nm technology demonstrate its effectiveness. We also discuss several implementation issues towards a practical application of the proposed method to large-scale circuits. The second part of the dissertation focuses on transistor-level topology synthesis, which is an important component in the manual generation phase where portions of a circuit are manually identified and cells for the portions are synthesized at the transistor level. We present three transistor-level topology synthesis methods. Although their objectives are to minimize the transistor count, they have different solution spaces. Combining these methods, the minimum solution in larger solution space can be obtained. Chapter 5 presents a method for synthesis of minimal static CMOS circuits where the solution space is restricted to the circuit structures which can be obtained by performing algebraic transformations on an arbitrary prime-and-irredundant two-level circuit. The circuit structures are implicitly enumerated via structural transformations on a single graph structure, then a dynamic-programming based algorithm efficiently finds the minimum solution among them. Experimental results on a benchmark suite targeting standard cell implementations demonstrate the feasibility of the proposed procedure. We also demonstrate the efficiency of the proposed algorithm by a numerical analysis on randomly-generated problems. It is also shown that the proposed procedure sometimes generates significantly smaller circuits compared to conventional approach. Chapter 6 presents an exact method for minimum logic factoring which can be viewed as the synthesis of a static CMOS compound gate. We first introduce a novel graph structure, called an X-B (eXchanger Binary) tree, which implicitly enumerates binary trees. Using this X-B tree, the factoring problem is compactly transformed into a quantified Boolean formula (QBF) and is solved by general-purpose QBF solver. Experimental results on artificially-created benchmark functions show that the proposed method successfully finds the exact minimum solutions to the problems with up to 12 literals. Chapter 7 studies the synthesis of read-once switch networks in which every variable appears only once. The proposed procedure is based on the notions of prime implicants and unateness, which establish a basis for Boolean expression synthesis. We also propose a pruning technique for an efficient search. Experimental results on randomly-generated problems with up to 20 switches demonstrate that the proposed procedure successfully solves about 90 % of the problems in 10 minutes each and the resulting read-once switch networks are up to 78 % smaller compared to <b>series-parallel</b> <b>switch</b> networks. Chapter 8 conducts an experimental study using a circuit consisting of C 432 and C 499 from the ISCAS 85 benchmark suite as a design example. We compare the circuits synthesized with a typical cell library and optimal design-specific libraries in an industrial 90 nm technology, and demonstrate that using the design-specific cell libraries, the area-delay tradeoff curve is shifted to the left-bottom from that using the typical library. Comparing between the area-optimal circuits, the area is improved by 27. 3 %. And, comparing between the delay-optimal circuits, the maximum delay is improved by 22. 4 %. These results clearly prove the effectiveness of the flow and the key components for optimal generation of design-specific cell libraries. 報告番号: 甲 22279; 学位授与年月日: 2007 - 03 - 22; 学位の種別: 課程博士; 学位の種類: 博士(工学); 学位記番号: 博工第 6484 号; 研究科・専攻: 工学系研究科電子工学専...|$|R

