1|1909|Public
5000|$|Multiseat desktop {{virtualization}} is {{an entirely}} new methodology which combines the cost saving benefits and ease of maintenance of server based computing, the time savings of hardware agnostic cloning, and the capabilities of desktop virtualization, with the performance capabilities of real PC functionality. It takes advantage of this fact to enable ordinary users to install a multiseat PC giving 2 [...] "seats" [...] with a dual-core CPU or 4 [...] "seats" [...] with a quad-core CPU. The operating system of this PC is initially installed just like a regular PC. Regular PC users can install and use this type of product without having to install servers, or know how to manage complicated, server based computing or <b>server</b> <b>based</b> <b>virtualization</b> products. It has the combined benefits of a Type 1 hypervisor and a Type 2 hypervisor virtual machine. It does this with the efficiency of a Type 1 hypervisor while maintaining the portability of a Type II hypervisor.|$|E
40|$|This Virtualization is an {{emerging}} technology leading organizations to utilize their computing resources effectively. It abstractsthe actual {{resources such as}} hardware, network, storage, applications etc and create virtual platform for optimal utilization of resources. Though virtualization has many benefits like isolation, data sharing, and reduction in costs etc., there are also security issues such asfluctuating workloads, dynamic migration, hostile guests, the disappearance of perimeter security etc. These risks should be analyzed and a proper configuration should be performed to mitigate these risks. This paper emphasizes various virtualization techniques and it mainly concentrates on <b>server</b> <b>virtualization</b> <b>based</b> on the hypervisor behaviour. This paper also features different security issues in the Virtualization and the measures to mitigate them...|$|R
50|$|Switch <b>based</b> <b>virtualization</b> may {{not require}} {{specific}} host interoperability — if it uses packet cracking techniques to redirect the I/O.|$|R
40|$|CERN has a {{successful}} experience with running Server Self Service Center (S 3 C) for virtual server provisioning {{which is based}} on Microsoft® Virtual Server 2005. With the introduction of Windows Server 2008 and its built-in hypervisor <b>based</b> <b>virtualization</b> (Hyper-V) there are new possibilities for the expansion of the current service. This paper describes the architecture of the redesigned virtual <b>Server</b> Self Service <b>based</b> on Hyper-V which provides dynamically scalable virtualized resources on demand as needed and outlines the possible implications on the future use of virtual machines at CERN...|$|R
50|$|Current {{virtualization}} {{engines are}} {{in sharp contrast}} to the partitioning <b>based</b> <b>virtualization</b> that is limited in its scope and only offers a logical view of data storage partitions.|$|R
50|$|The <b>Server</b> <b>Base</b> System Architecture (SBSA) is a {{hardware}} system architecture for <b>servers</b> <b>based</b> on 64-bit ARM processors.|$|R
40|$|Abstract—Virtualization is a {{technique}} for efficient utilization of hardware resources. Virtual Machine Monitor (VMM) {{is a piece of}} software which facilitates hardware <b>Virtualization.</b> Software <b>based</b> <b>Virtualization</b> technologies encompass considerable instruction overhead. We have implemented a purely hardware-assisted VMM for x 86 architecture on AMD Secure Virtual Machine (SVM) [1] to overcome the instruction overhead caused by software <b>based</b> <b>Virtualization.</b> The performance impact due to Virtualization is measured in terms of the CPU time consumed by certain critical sections of Virtualization specific code. A quantitative performance analysis using the purely Hardware-assisted Virtual Machine Monitor reveals that Hardware Virtualization at its current stage suffers from performance overhead, but improves considerably with hardware enhancement...|$|R
5000|$|Four {{different}} classes of <b>server</b> <b>based</b> signatures have been proposed: ...|$|R
5000|$|... 1989: Created first UNIX <b>server</b> <b>based</b> mass calling IVR {{platform}} ...|$|R
5000|$|... #Subtitle level 3: <b>Server</b> <b>based</b> {{solutions}} and web based solutions ...|$|R
5000|$|FreeNAS a free {{network-attached storage}} <b>server</b> <b>based</b> on a minimal version of FreeBSD.|$|R
5000|$|ItsNat Java Ajax web {{framework}} with built-in, <b>server</b> <b>based,</b> functional web testing capabilities.|$|R
5000|$|T: {{entry level}} and {{mid-range}} rackmount <b>servers</b> <b>based</b> on UltraSPARC T-series CoolThreads processors ...|$|R
5000|$|KAON (single {{user and}} <b>server</b> <b>based</b> {{solutions}} possible, open source, from FZI/AIFB Karlsruhe) ...|$|R
5000|$|<b>Server</b> <b>based</b> systems, {{which are}} {{designed}} to automatically remove metadata at the network gateway.|$|R
5000|$|BusyBox, since version 1.16.2, has {{included}} an SNTP client and <b>server</b> <b>based</b> on OpenNTP.|$|R
50|$|Oracle HTTP Server (OHS) is a web <b>server</b> <b>based</b> on the Apache HTTP Server, {{created by}} the Oracle Technology Network. The web <b>server</b> is <b>based</b> on Apache version 2.2. OHS, like Apache 2.2, {{includes}} support for IPv6.|$|R
5000|$|Lockitron server for remote {{operation}} of locks—with key management. Control <b>server</b> <b>based</b> on the SheevaPlug.|$|R
40|$|Today, {{the growth}} of {{technology}} is very fast {{and a lot of}} technology that can facilitate users in helping their activity is made. A technology need a server to store both systems and users data. More users needed more servers to store user data. The server room became full and needed the extra space so that it required high cost to build the server and the server space itself. The purpose of this research is to create an IaaS <b>based</b> <b>server</b> <b>virtualization</b> that is connected to a router, switch, virtual client and administrator with VirtualBox application. The purpose of this research can be achieved by designing an appropriate research 2 ̆ 7 s methodology. There are 5 stages of implementation/methodology in building virtualization server at this research which are the system definition, requirements specification, system configuration, system testing, and system analysis. First, phase of the definition system is by describing a system of early identification, system requirements and network topology on the implemented system. The second phase is the specification requirements to determine specifications hardware and software. The hardware consists of a computer with resources 8 GB RAM and AMD Phenom II X 6 as a processor. The software consists of VirtualBox and operating systems. The third stage is the system configuration to declare the source code in application on each server, routers and switches to perform the function of each device. The final stage is system testing and system analysis by checking the system is ready to use and works the best. Results in this research show IaaS-based server virtualization can be connected to display a web page on all clients through virtual switches and routers on a computer...|$|R
50|$|Server centric {{systems can}} be divided into <b>Server</b> <b>Based</b> Gaming (SBG) and Server Supported Gaming (SSG).|$|R
5000|$|Win32 sound <b>servers,</b> <b>based</b> on the Miles SDK (obsolete), the AuSIM sound hardware, and Microsoft DirectSound.|$|R
50|$|In March 2009 Semantinet {{began the}} {{transition}} from client to <b>server</b> <b>based</b> solutions and in July it started a pilot of a semantic web WordPress plugin for bloggers. The product was made publicly available via the WordPress plugin directory in October 2009. In January 2010 the <b>server</b> <b>based</b> Headup solution was made available as a Joomla extension and in March it became available as a Drupal module.|$|R
40|$|Cloud {{computing}} {{is ready}} to transform the structure of businesses and learning through supplying the real-time applications and provide an immediate help for small to medium sized businesses. The ability to run a hypervisor inside a virtual machine is important feature of virtualization and it is called nested virtualization. In today’s growing field of information technology, many of the virtualization models are available, that provide a convenient approach to implement, but decision for a single model selection is difficult. This paper explains the applications of operating system <b>based</b> <b>virtualization</b> in cloud computing with an appropriate/suitable model with their different specifications and user’s requirements. In the present paper, most popular models are selected, and the selection was based on container and hypervisor <b>based</b> <b>virtualization.</b> Selected models were compared {{with a wide range}} of user’s requirements as number of CPUs, memory size, nested virtualization supports, live migration and commercial supports, etc. and we identified a most suitable model of virtualization...|$|R
5000|$|... ng_teredo is a relay and <b>server</b> <b>based</b> on netgraph for FreeBSD {{from the}} LIP6 University and 6WIND.|$|R
5000|$|Scalix email and {{calendar}} server, a full-featured messaging {{and collaboration}} <b>server</b> <b>based</b> on Linux and open source ...|$|R
50|$|In general, these {{technologies}} fall {{into one of}} two technical models - <b>Server</b> <b>based,</b> or MFP internal software.|$|R
50|$|Run BASIC is a web {{application}} <b>server,</b> <b>based</b> on the Liberty BASIC {{version of the}} BASIC programming language.|$|R
3000|$|... the {{capacity}} W {{of each of}} the database <b>servers</b> <b>based</b> on some configuration information of the distributed database system [...]...|$|R
50|$|In April 2008, Sun {{released}} <b>servers</b> <b>based</b> on the UltraSPARC T2 Plus processor, an SMP capable {{version of}} UltraSPARC T2.|$|R
50|$|The A180 and A180C were 32-bit, single-{{processor}}, 2U <b>servers</b> <b>based</b> on the PA-7300LC {{processor with}} the Lasi and Dino ASICs.|$|R
50|$|Since 2010, <b>servers</b> <b>based</b> on new SPARC CMT {{processors}} (SPARC T3 and later) {{have been}} branded as Oracle's SPARC T-Series servers.|$|R
40|$|Large {{machines}} with tens or even {{hundreds of thousands}} of processors are currently in use. As the number of components increases, the mean time between failure will decrease further. Fault tolerance is an important issue for these and the even larger machines of the future. This is borne out by the significant amount of work in the field of fault tolerance for parallel computing. However, recovery-time after a crash in all current fault tolerance protocols is no smaller than the time between the last checkpoint and the crash. This wastes valuable computation time as all the remaining processors wait for the crashed processors to recover. This thesis presents research aimed at developing a fault tolerant protocol that is relevant in the context of parallel computing and provides fast restarts. We propose to combine the ideas of message logging and object <b>based</b> <b>virtualization.</b> We leverage the facts that message logging based protocols do not require all processors to rollback when one processor crashes and that object <b>based</b> <b>virtualization</b> allows work to be moved from one processor to another. We develop a message logging protocol that operates in conjunction with object <b>based</b> <b>virtualization.</b> We evaluate and study the implementation of our protocol in the Charm++/AMPI run-time. We use benchmarks and real world applications to investigate and improve the performance of different aspects of our protocol. We also modify the load balancing framework of the Charm++ run-time to work with the message logging protocol. We show that in the presence of faults, an application using our fault tolerance protocol takes less time to complete than a traditional checkpoint based protocol...|$|R
50|$|Flexible Management {{facilitates}} {{administration of}} a large number of WebSphere Application <b>Server</b> <b>base</b> edition and Network Deployment topologies that might be geographically distributed.|$|R
50|$|Botnets {{are often}} {{structured}} with their {{command and control}} <b>servers</b> <b>based</b> on a censorship-resistant hidden service, creating {{a large amount of}} bot-related traffic.|$|R
5000|$|... mod_authz_host - allows {{access control}} to {{particular}} parts of web <b>server</b> <b>based</b> on hostname, IP address or other {{characteristics of the}} client request ...|$|R
50|$|In {{clinical}} research, <b>server</b> <b>based</b> systems call Clinical Trial Management Systems (CTMS) require audit trails. Anything regulatory or QA/QC related {{also requires}} audit trails.|$|R
