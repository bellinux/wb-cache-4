0|59|Public
50|$|The {{recipient}} <b>splits</b> its <b>copy</b> of {{the file}} into chunks and computes two checksums for each chunk: the MD5 hash, and a weaker but easier to compute 'rolling checksum'. It sends these checksums to the sender.|$|R
5000|$|To edit videos, a [...] "Video Wizard" [...] splices and merges files {{into one}} video, adjusts volume, edits sound, trims, <b>splits</b> or <b>copies</b> video, inserts text, or adds an effect (black and white, sepia, posterise, solarize, blur, sharpen, noise, emboss).|$|R
50|$|ASP 014 Skill 7 Stamina 12, Toilet, Same Things. <b>Split</b> 12". 200 <b>copies</b> with {{handmade}} screen-print sleeves.|$|R
40|$|Abstract. The Burau {{representation}} enables {{to define}} many other {{representations of the}} braid group Bn by the topological operation of “cabling braids”. We show here that these representations <b>split</b> into <b>copies</b> of the Burau representation itself and of a representation of Bn/(Pn, Pn). In particular, we {{show that there is}} no gain in terms of faithfulness by cabling the Burau representation...|$|R
40|$|The Burau {{representation}} enables {{to define}} many other {{representations of the}} braid group $B_n$ by the topological operation of ``cabling braids''. We show here that these representations <b>split</b> into <b>copies</b> of the Burau representation itself and of a representation of $B_n/(P_n,P_n) $. In particular, we {{show that there is}} no gain in terms of faithfulness by cabling the Burau representation. Comment: 11 page...|$|R
5000|$|In The Legend of Zelda: The Minish Cap and the Picori Blade {{which is}} re-forged into the legendary Four Sword, a magical blade that can allow its user to <b>split</b> into four <b>copies.</b>|$|R
25|$|The signal {{entering}} a compressor is <b>split,</b> one <b>copy</b> {{sent to a}} variable-gain amplifier {{and the other to}} a side-chain where the signal level is measured and a circuit controlled by the measured signal level applies the required gain to the amplifier. This design, known as a feed-forward type, is used today in most compressors. Earlier designs were based on a feedback layout where the signal level was measured after the amplifier.|$|R
40|$|We {{develop an}} automata-theoretic {{framework}} for reasoning about linear properties of infinite-state sequential systems. Our framework {{is based on}} the observation that states of such systems, which carry a finite but unbounded amount of information, can be viewed as nodes in an infinite tree, and transitions between states can be simulated by finite-state automata. Checking that the system satisfies a temporal property can then be done by an alternating two-way automaton that navigates through the tree. For branching properties, the framework is known and the two-way alternating automaton is a tree automaton. Applying the framework for linear properties results in algorithms that are not optimal. Indeed, the fact that a tree automaton can <b>split</b> to <b>copies</b> and simultaneously read all the paths of the tree has a computational price and is irrelevant for linear properties. We introduce path automata on trees. The input to a path automaton is a tree, but the automaton cannot <b>split</b> to <b>copies</b> and it can read only a single path of the tree. In particular, two-way nondeterministic path automata enable exactly the type of navigation that is required in order to check linear properties of infinite-state sequential systems. As has been the case with finite-state systems, the automata-theoretic framework is quite versatile. We demonstrate it by solving several versions of the model-checking problem for LTL specifications an...|$|R
50|$|Hajduks were romanticized bandits that {{fought the}} rule of the Ottoman Turks. It is speculated that famed hajduk Andrija Šimić, who triumphantly arrived in Split in 1902 to cheering crowds (after a long stint in an Austrian prison), was perhaps the {{inspiration}} for the name. The founders subsequently designed the club's emblem, and a group of Catholic nuns from a monastery in <b>Split,</b> created <b>copies</b> which were distributed to fans. Both the name and the checkered board on the crest were found provocative by the Monarchy, but it eventually allowed them having been convinced that a football club {{is a good way to}} train soldiers.|$|R
40|$|If V is an {{elementary}} abelian 2 -group, Ossa {{proved that the}} con-nective K-theory of BV <b>splits</b> into <b>copies</b> of Z= 2 and of the connective K-theory of the innite real projective space. We give a brief proof of Ossa’s theorem. Introduction. We have been asked whether our work, [1] and [2] on the Brown-Peterson homology of BV, V {{an elementary}} p-group, gives a nice structure of the connective K-theory of BV. The {{answer is that the}} approach of [1] leads to the elegant structure theorem of Ossa [3]. Although the ap-proach is motivated by our [1] and [2], the proof is independent of that work...|$|R
5000|$|In {{a typical}} {{multi-shot}} FROG setup, the unknown pulse is <b>split</b> into two <b>copies</b> with a beamsplitter. One copy is delayed by a known amount {{relative to the}} other. Both pulses are focused to the same point in a nonlinear medium, and the spectrum of the nonlinear signal is measured with a spectrometer. This process is repeated for many delay points.|$|R
40|$|This paper {{deals with}} estimations of probabilities of rare events using fast {{simulation}} {{based on the}} splitting method. In this technique, the sample paths are <b>split</b> into multiple <b>copies</b> at various stages in the simulation. Our aim is to optimize the algorithm and to obtain a precise confidence interval of the estimator using branching processes. The numerical results presented suggest that the method is reasonably efficient...|$|R
40|$|The 600 cell S has exactly 10 5 -colorings. From these colorings we can {{construct}} {{the space of}} colorings $B(S) $. This complex has 1344 colorings, and is isomorphic to the space of 5 by 5 Latin Squares. These simplices <b>split</b> into 4 <b>copies</b> of a quotient of S by an involution, and two copies of a space made up of even Latin Squares. Comment: 4 page...|$|R
40|$|Abstract. If V is an {{elementary}} abelian 2 -group, Ossa {{proved that the}} con-nective K-theory of BV <b>splits</b> into <b>copies</b> of Z/ 2 and of the connective K-theory of the infinite real projective space. We give a brief proof of Ossa’s theorem. Introduction. We have been asked whether our work, [1] and [2] on the Brown-Peterson homology of BV, V {{an elementary}} p-group, gives a nice structure of the connective K-theory of BV. The {{answer is that the}} approach of [1] leads to the elegant structure theorem of Ossa [4]. Although the approach is motivated by our [1] and [2], the proof is independent of that work. In this reproof of an establishe...|$|R
40|$|The {{classical}} signal <b>splitting</b> and <b>copying</b> are {{not possible}} in quantum mechanics. Specifically, one cannot copy the basis {{up and down}} states of the input (I) two-state system (qubit, spin) into the copy (C) and duplicate-copy (D) two-state systems if the latter systems are initially in an arbitrary state. We consider instead a quantum evolution in which the basis states of I at time t are duplicated {{in at least two}} of the systems I, C, D, at time t + ∆t. In essence, the restriction on the initial target states is exchanged for uncertainty as to which two of the three qubits retain copies of the initial source state. PACS numbers: 03. 65. Bz, 85. 30. St –...|$|R
50|$|The Legend of Zelda: Four Swords Adventures (2004) is an {{indirect}} sequel to Twilight Princess, and occurs {{hundreds of years}} after that game. Zelda and the six other mystical maidens, who {{are worried about the}} seal on the Four Sword, go to check on the Sanctuary of the Four Sword, with Link accompanying them. However, a dark, shadowy copy of Link attacks them. Link is forced to draw the Four Sword to fight this Shadow Link, but when he does, he is <b>split</b> into <b>copies</b> of himself much like the Link in Four Swords. By extension, drawing the Four Sword also results in Vaati escaping from the seal placed upon him in Four Swords.|$|R
5000|$|In the [...] "Titans Tomorrow" [...] storyline, Beast Boy {{calls himself}} [...] "Animal Man". In this storyline, {{he has the}} power to use more than one animal power at a time such as using an amoeba's power to <b>split</b> to create <b>copies</b> of himself while in the form of another creature. He also {{demonstrates}} the ability to become mythical animals, and is much more feral than his more fun-loving former self.|$|R
40|$|The use of true {{experiments}} is {{advocated for}} testing destination advertising effectiveness in causing visits. Examples of A-B ad <b>copy</b> <b>split</b> tests in other industries are described {{and the value}} and limitations of advertising conversion research studies are reviewed. A hypothetical example in tourism advertising effectiveness research of an A-B-C split is presented, C being a control group of subjects not exposed to advertising. A call for travel and tourism industry action to test advertising ’s influence on causing visits and revenues concludes the article...|$|R
40|$|The {{splitting}} method {{is a well-known}} method for rare-event simulation, where sample paths of a Markov process are <b>split</b> into multiple <b>copies</b> during the simulation, {{so as to make}} the occurrence of a rare event more frequent. Motivated by the splitting algorithm we introduce a novel global optimization method for continuous optimization that is both very fast and accurate. Numerical experiments demonstrate that the new splitting-based method outperforms known methods such as the differential evolution and artificial bee colony algorithms for many bench mark cases. Keywords...|$|R
5000|$|A run of tree {{automaton}} [...] over a -labeled tree [...] is a -labeled tree [...] Lets {{suppose that}} the tree automaton is at state [...] and it has reached to a node t labeled with [...] of input tree. [...] is degree of node t. Then, the automaton proceeds by selecting a tuple [...] from set [...] and <b>splitting</b> into [...] <b>copies</b> of itself. For each , one copy enters into [...] state and proceeds to the node [...] This process produces a run over a tree.|$|R
40|$|All-optical WDM {{networks}} are fast becoming the natural choice for future backbone. In this paper, we establish {{the efficiency of}} multicasting over unicasting in all-optical WDM networks, assess the usefulness of wavelength conversion for multicasting, and explore the {{issues related to the}} <b>splitting</b> (or <b>copying)</b> capability of the nodes. The comparison between multicasting and unicasting is {{based on the number of}} wavelengths as well as the amount of bandwidth required for a given set of multicasting sessions. For each multicasting session, a source-specific multicasting forest (or trees) is constructed first, taking into account the sparse splitting capability of the nodes in the network. Then, each multicasting tree is partitioned into segments according to the sparse wavelength conversion capability of the nodes on the tree such that each segment needs to be assigned the same wavelength. Simulation results obtained for a practical network such as NSFNET and randomly generated networks [...] ...|$|R
40|$|The {{classical}} signal <b>splitting</b> and <b>copying</b> are {{not possible}} in quantum mechanics. Specifically, one cannot copy the basis {{up and down}} states of the input (I) two-state system into the copy (C) and duplicate-copy (D) two-state systems if the latter systems are initially in an arbitrary state. We consider instead a quantum evolution in which the basis states of I at time t are duplicated {{in at least two}} of the systems I, C, D, at time t + ∆t. For possible applications in quantum computing, we derive an explicit Hamiltonian to accomplish this process; it turns out to involve only three-spin x,y-component interactions. PACS numbers: 03. 65. Bz, 89. 80. +h, 02. 20. Sv, 76. 70. Fz – 1 – Recent interest in quantum computing [1 - 27] has led to consideration of quantum dynamical processes mimicing computer gate operation, i. e., those processes that involve “binary ” states constructed from the up and down states of two-state systems (qubits). The goal of making coheren...|$|R
50|$|The {{first trip}} to Europe lasted for {{approximately}} {{three and a half}} months and introduced Kelly to a culture and place where he felt he belonged. Though he returned to the Academy in the Fall, he left for Europe again a few months later to begin a four-year stay in Paris. He moved into an apartment at 19 rue Daguerre in Paris and began an existence intellectually rich but in creature comforts, very poor. “I kept a cinderblock over the drain in the kitchen sink to keep the rats out of the apartment” he once explained. He frequented the cafes making acquaintances with Henry Miller, James Joyce and the critic Felix Feneon as well as others. His days were <b>split</b> between <b>copying</b> old master paintings in the Louvre and pursuing modernist ideas that were swirling through the work of all the artists around him. The Lake, 1926 and Interior of the Studio, 1927, now in the Newark Museum.|$|R
40|$|The Everett-interpretation {{description}} of isolated measurements, i. e., measurements involving interaction between a measuring apparatus and a measured system but not {{interaction with the}} environment, is shown to be unambiguous, claims in the literature to the contrary notwithstanding. The appearance of ambiguity in such measurements is engendered by the fact that, in the Schrödinger picture, information on <b>splitting</b> into Everett <b>copies</b> must be inferred {{from the history of}} the combined system. In the Heisenberg picture this information is contained in mathematical quantities associated with a single time. Key words: basis ambiguity, preferred basis problem, Everett interpretation, quantu...|$|R
40|$|In Delay Tolerant Mobile Sensor Networking (DTMSN), mobile sensor nodes {{are usually}} limited to their energy capacity, one {{important}} concern in routing design of DTMSN is energy consumption. This paper presents {{a number of}} variations of the Epidemic Routing Protocol (ERP) to extend the DTMSN lifetime. It introduces the analytical model for ERP, after introducing the concepts behind the Target Delivery Probability and Minimum Delivery Probability, it defines the network lifetime. In this paper, it firstly studies many variations of the Epidemic Routing Protocol to extend the lifetime of the DTMSN. Secondly, based on the Epidemic Routing Protocol, three schemes are introduced. Those schemes rely on the limiting the times of message allowed for propagation (LT scheme), directly controlling {{the number of the}} <b>copies</b> (LC scheme), <b>split</b> the <b>copies</b> to the residual energies of the nodes (LE scheme). Finally, with the experiment and the validation of the simulation, the LE scheme can significantly maximize the lifetime of DTMSN, because it minimizes the number of copies and that shifts the generation of the copies to the nodes with larger residual energy...|$|R
50|$|Scientists {{believe the}} origin of snake venom began with gene {{duplication}} of genes that had been expressed in the body tissues of ancestors. Due to subfunctionalization, in which an ancestral function is <b>split</b> between the <b>copied</b> genes, one of the duplicates becomes limited to only the venom (salivary) gland and as a result, evolves in to the toxin producing gene. Data has shown that pre-existing proteins in the salivary glands were {{the origin of}} the toxins in snake venom. Some researchers have come to see snake venom as just “a modified form of saliva,” instead of an entirely recruited set of proteins from various tissues throughout the body.|$|R
40|$|PLAS {{framework}} {{is designed for}} easy development of multiplatform applications in form of component system in JAVA programming language. Target application can be distributed to multiple connected, user defined computer. User has full control over computation part of component and data flow ie. vertices of component system and edges between them. Framework acts as a transparent communication layer, delivers data to child states using user defined routing informations, which are defined in annotation of an object. Data can be <b>split</b> into multiple <b>copies</b> on demand (when state has multiple edges to child nodes defined) so parts of aplicationi can process their own <b>copy</b> simultaneously. <b>Split</b> data can be again merged in user defined parts of component system...|$|R
40|$|Abstract. We {{study the}} {{possibility}} for branching random walks in random environment (BRWRE) to survive. The particles perform simple symmetric random walks on the d-dimensional integer lattice, while at each time unit, they <b>split</b> into independent <b>copies</b> according to time-space i. i. d. offspring dis-tributions. As noted by Comets and Yoshida, the BRWRE is naturally asso-ciated with the directed polymers in random environment (DPRE), for which the quantity Ψ called the free energy is well studied. Comets and Yoshida proved {{that there is no}} survival when Ψ 0. We proved here that, except for degenerate cases, the BRWRE always die when Ψ = 0. This solves a conjecture of Comets and Yoshida. 1...|$|R
40|$|We {{propose a}} novel {{approach}} to the well-known view update problem for the case of tree-structured data: a domain-specific programming language in which all expressions denote bi-directional transformations on trees. In one direction, these transformations—dubbed lenses—map a “concrete ” tree into a simplified “abstract view”; in the other, they map a modified abstract view, together with the original concrete tree, to a correspondingly modified concrete tree. Our design emphasizes both robustness and ease of use, guaranteeing strong well-behavedness and totality properties for well-typed lenses. We identify a natural mathematical space of well-behaved bi-directional transformations (over arbitrary structures), study definedness and continuity in this setting, and state a precise connection with the classical theory of “update translation under a constant complement ” from databases. We then instantiate this semantic framework {{in the form of}} a collection of lens combinators that can be assembled to describe transformations on trees. These combinators include familiar constructs from functional programming (composition, mapping, projection, conditionals, recursion) together with some novel primitives for manipulating trees (<b>splitting,</b> pruning, <b>copying,</b> merging, etc.). We illustrate the expressiveness of these combinators by developing a number of bi-directional list-processing transformations as derive...|$|R
40|$|Abstract. The {{splitting}} method is a simulation technique for {{the estimation of}} very small probabilities. In this technique, the sample paths are <b>split</b> into multiple <b>copies,</b> at various stages in the simulation. Of vital importance to {{the efficiency of the}} method is the Importance Function (IF). This function governs the placement of the thresholds or surfaces at which the paths are split. We derive a characterisation of the optimal IF and show that for multi-dimensional models the “natural ” choice for the IF is usually not optimal. We also show how nearly optimal splitting surfaces can be derived or simulated using reverse time analysis. Our numerical experiments illustrate that by using the optimal IF, one can obtain a significant improvement in simulation efficiency. ...|$|R
40|$|We {{propose a}} novel {{approach}} to the view update problem for tree-structured data: a domainspecific programming language in which all expressions denote bi-directional transformations on trees. In one direction, these transformations—dubbed lenses—map a “concrete ” tree into a simplified “abstract view”; in the other, they map a modified abstract view, together with the original concrete tree, to a correspondingly modified concrete tree. Our design emphasizes both robustness and ease of use, guaranteeing strong well-behavedness and totality properties for welltyped lenses. We begin by identifying a natural mathematical space of well-behaved bi-directional transformations over arbitrary structures, studying definedness and continuity in this setting. We then instantiate this semantic framework {{in the form of}} a collection of lens combinators that can be assembled to describe bi-directional transformations on trees. These combinators include familiar constructs from functional programming (composition, mapping, projection, conditionals, recursion) together with some novel primitives for manipulating trees (<b>splitting,</b> pruning, <b>copying,</b> merging, etc.). We illustrate the expressiveness of these combinators by developing a number of bi-directional list-processing transformations as derived forms. An extended example shows how our combinators can be used to define a lens that translates between a native HTML representation of browser bookmarks and a generic abstract bookmark format...|$|R
40|$|Preliminary version {{presented}} at the Workshop on Programming Language Technologies for XML (PLAN-X), 2004; extended abstract {{presented at}} Principles of Programming Languages (POPL), 2005 International audienceWe propose a novel approach to the view update problem for tree-structured data: a domain- specific programming language in which all expressions denote bi-directional transformations on trees. In one direction, these transformations—dubbed lenses—map a “concrete” tree into a simplified “abstract view”; in the other, they map a modified abstract view, together with the original concrete tree, to a correspondingly modified concrete tree. Our design emphasizes both robustness and ease of use, guaranteeing strong well-behavedness and totality properties for well- typed lenses. We begin by identifying a natural mathematical space of well-behaved bi-directional transformations over arbitrary structures, studying definedness and continuity in this setting. We then instantiate this semantic framework {{in the form of}} a collection of lens combinators that can be assembled to describe bi-directional transformations on trees. These combinators include familiar constructs from functional programming (composition, mapping, projection, conditionals, recursion) together with some novel primitives for manipulating trees (<b>splitting,</b> pruning, <b>copying,</b> merging, etc.). We illustrate the expressiveness of these combinators by developing a number of bi-directional list-processing transformations as derived forms. An extended example shows how our combinators can be used to define a lens that translates between a native HTML representation of browser bookmarks and a generic abstract bookmark format...|$|R
40|$|Space based {{multicast}} switches use copy {{networks to}} generate the copies requested by the input packets. In this paper our interest is in the multicast switch proposed by Lee [12]. The order in which the copy requests of the input ports are served {{is determined by the}} copy scheduling policy and this plays a major part in defining the performance characteristics of a multicast switch. In any slot, the sum of the number of copies requested by the active inputs of the copy network may exceed the number of output ports and some of the copy requests may need to be dropped or buffered. We first propose an exact model to calculate the overflow probabilities in an unbuffered Lee's copy network. Our exact results improve upon the Chernoff bounds on the overflow probability given by Lee by a factor of more than 10. Next, we consider buffered inputs and propose queueing models for the copy network for three scheduling policies [...] cyclic service of the input ports with and without fanout <b>splitting</b> of <b>copy</b> requests and acyclic service without fanout splitting. These queueing models obtain the average delay experienced by the copy requests. We also obtain the sustainable throughput of a copy network, the maximum load that can be applied to all the input ports without causing an unstable queue at any of the inputs, for the scheduling policies mentioned above...|$|R
40|$|We {{study the}} {{survival}} probability {{and the growth}} rate for branching random walks in random environment (BRWRE). The particles perform simple symmetric random walks on the $d$-dimensional integer lattice, while at each time unit, they <b>split</b> into independent <b>copies</b> according to time-space i. i. d. offspring distributions. The BRWRE is naturally associated with the directed polymers in random environment (DPRE), for which the quantity called the free energy is well studied. We discuss the survival probability (both global and local) for BRWRE and give a criterion for its positivity {{in terms of the}} free energy of the associated DPRE. We also show that the global growth rate for the number of particles in BRWRE is given by the free energy of the associated DPRE, though the local growth rate is given by the directional free energy...|$|R
40|$|As WDM {{technology}} matures and multicast applications {{become increasingly}} popular, supporting multicast at the WDM layer becomes {{an important and}} yet challenging topic. In this paper, we study constrained multicast routing in WDM networks with sparse light splitting, i. e. where some switches are incapable of <b>splitting</b> light (or <b>copying</b> data in the optical domain). Specifically, we propose four WDM multicast routing algorithms, namely, Re-route-to-Source, Re-route-to-Any, Member-First, and Member-Only. Given the network topology, multicast membership information, and light splitting capability of the switches, these algorithms construct a source-based multicast light-forest (consisting one or more multicast trees) for each multicast session. The performance of these algorithms are compared {{in terms of the}} average number of wavelengths used per forest (or multicast session), average number of branches involved (bandwidth) per forest as well as average number of hops encountered (delay) fr [...] ...|$|R
40|$|Splitting is a {{technique}} {{that can be used}} to improve the efficiency in simulating rare events. The basic idea is to create separate <b>copies</b> (<b>splits)</b> of the simulation whenever it gets close to the rare event. To implement splitting, several decisions must be made – for example, choosing a level function, choosing the number of simulation runs for each level, etc. This paper analyzes the sensitivity of the variance of the rare-event estimator to several parameters used within the splitting framework. We specifically consider a two-level fixed-effort variation of splitting for which analytic results can be derived. Results are applied to a simple model of cascading blackouts. The results illustrate that a good choice for the locations of levels may be more important than a good choice for the importance function for these types of problems. ...|$|R
