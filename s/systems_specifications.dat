79|5037|Public
50|$|Lindland, Odd Ivar, and Andreas Lothe Opdahl. Representation of Diagrammatic <b>Systems</b> <b>Specifications</b> in Temporal Logic. University of Trondheim, 1987.|$|E
50|$|In {{the early}} 1960s, Schultz was {{involved}} in the automation of the Armed Services Technical Information Agency (ASTIA). She was also involved in developing <b>systems</b> <b>specifications</b> for the MEDLARS/MEDLINE system of the National Library of Medicine.|$|E
50|$|Since 1991, Eurescom {{produced}} {{several hundred}} European telecommunications technology project results. Eurescom made, for example, {{contributions to the}} introduction of interoperable European ISDN, the design of network management <b>systems,</b> <b>specifications</b> in the Internet domain, and the development of new services and applications for mobile networks and fixed networks.|$|E
40|$|International audienceWe {{present an}} {{adaptation}} of model-based verification, via model checking pushdown systems, to semantics-based verification. First we introduce the algebraic notion of pushdown <b>system</b> <b>specifications</b> (PSS) and adapt a model checking algorithm for this new notion. We instantiate pushdown <b>system</b> <b>specifications</b> in the K framework by means of Shylock, a relevant PSS example. We show why K is a suitable environment for the pushdown <b>system</b> <b>specifications</b> and we give a methodology for defining the PSS in K. Finally, we give a parametric K specification for model checking pushdown <b>system</b> <b>specifications</b> based on the adapted model checking algorithm for PSS...|$|R
50|$|The {{conceptual}} design stage is {{the stage where}} an identified need is examined, requirements for potential solutions are defined, potential solutions are evaluated and a <b>system</b> <b>specification</b> is developed. The <b>system</b> <b>specification</b> represents the technical requirements that will provide overall guidance for system design. Because this document determines all future development, the stage cannot be completed until a {{conceptual design}} review has determined that the <b>system</b> <b>specification</b> properly addresses the motivating need.|$|R
40|$|This paper {{presents}} a new test method for COTS {{based on the}} classification-tree method. Information from the <b>system</b> <b>specification</b> and the COTS specification is used to guide the selection of test input. Applying our method, testers can identify test cases that serve three purposes: verifying input outside the <b>system</b> <b>specification</b> but {{within the scope of}} COTS does not cause problems to the system, verifying input required by the <b>system</b> <b>specification</b> and within the scope of COTS specification provides correct results, and verifying input not within the scope of COTS specification is actually not required by the <b>system</b> <b>specification.</b> This paper presents our test selection method {{with the aid of a}} case example. Department of ComputingRefereed conference pape...|$|R
50|$|Secure Digital Music Initiative (SDMI) was a forum {{formed in}} late 1998, {{composed}} {{of more than}} 200 IT, consumer electronics, security technology, ISP and recording industry companies, as well as Authors, Composers and Publishers Right holders (represented by CISAC and BIEM representatives, mainly from SGAE/SDAE, GEMA, SACEM/SDRM, MCPS/PRS, ASCAP, BMI, SODRAC), ostensibly {{with the purpose of}} developing technology and rights management <b>systems</b> <b>specifications</b> that will protect once developed and installed, the playing, storing, distributing and performing of digital music.|$|E
50|$|Capita {{manages the}} Criminal Records Bureau for the Home Office. In 2002, when {{mandatory}} CRB-vetting of all workers with children was brought in, {{a large number}} of teachers were temporarily unable to work after Capita's systems had difficulty with the workload and were subsequently overwhelmed, meaning that the start of the academic year was delayed in some places. Poor <b>systems</b> <b>specifications</b> and last-minute changes in government policy by the then Secretary of State for Education, Estelle Morris are believed to have been significant factors in these delays.|$|E
5000|$|Since the 1960s, {{integrated}} circuits make construction of DIY audio systems easier, but {{the proliferation of}} surface mount components (which are very small and difficult to solder with a soldering iron) and fine pitch printed circuit boards (PCBs) arguably make the physical act of construction more difficult. Nevertheless, surface mounting is often used, as are conventional PCBs and electronic components, while some enthusiasts insist on using old-style perforated cardboard onto which individual components are [...] "hardwired" [...] and soldered. Test equipment is readily available for purchase and enables convenient testing of parts and <b>systems.</b> <b>Specifications</b> of parts and components are readily accessible through the Internet including data sheets and equipment designs.|$|E
40|$|We present Matisse, a {{concurrent}} object-oriented <b>system</b> <b>specification</b> language, well-suited for protocol processing applications used in telecom networks. An {{industrial application}} used in ATM networks is introduced. From this case study, we derive the requirements {{that must be}} supported by Matisse. Matisse is the entry point for the methodology presented in [6], that bridges the gap between <b>system</b> <b>specification</b> and synthesis tools commercially available. In contrast to the <b>system</b> <b>specification</b> languages currently used in industry, Matisse is implementation-independent and permits the exploration of different embedded hardware/software realizations. Keywords <b>System</b> <b>specification,</b> hardware/software codesign, protocol processing applications, system synthesis and object-oriented languages. 1 INTRODUCTION Modern telecom systems are rapidly increasing in design complexity. Telecom network applications include protocol processing systems for broadband networks [9], wireless infrastructur [...] ...|$|R
5000|$|... #Article: Finite & Deterministic Discrete Event <b>System</b> <b>Specification</b> ...|$|R
5000|$|RealTime: Provides {{definitions}} {{useful in}} real-time <b>system</b> <b>specifications.</b>|$|R
50|$|In 1985 Kreowski {{was a guest}} {{researcher}} at the IBM T.J. Watson Research Center in Yorktown Heights (N.Y, USA). He founded the IFIP Working Group 1.3 (Foundations of <b>Systems</b> <b>Specifications)</b> in 1992 and was its first chairman until 1997. He {{is also a member}} of the European Association for Theoretical Computer Science (EATCS), the Gesellschaft für Informatik , and the Forum of Computer Scientists for Peace and Social Responsibility which he chaired from 2003 to 2009. In 1996 he was conferred the Outstanding Service Award by the International Federation of Information Processing and in 2001 he was awarded the IFIP Silver Core. Since 2013 Hans Jörg Kreowski {{is also a member of}} the Leibniz Sozietät.|$|E
5000|$|The {{first product}} from SeaMicro was the SM10000, {{along with the}} SM10000-XE, which {{achieved}} Red Hat Certification in 2011 when operating on Red Hat Enterprise Linux. A more recent model, The SeaMicro SM15000 is also designed to support Citrix Xen Servers, VMware ESXi software and both GNU-Linux and Microsoft Windows Operating <b>systems.</b> <b>Specifications</b> of newer versions have reached computing benchmarks of 5 petabytes of storage, 64 CPUs, a 1,000 Virtual machine capacity, and 1.28 Tb/s of bandwidth. In addition, the 10U Rack Unit provides a total 2,048 CPU cores, 16 TBs of RAM and data is transferred through a custom [...] "Freedom Fabric" [...] for supercomputers unique to SeaMicro microservers. Additional certifications for SeaMicro products include OpenStack Cloud Computing for the Rackspace Private Cloud.|$|E
50|$|VisualSim {{provides}} modeling libraries for model-driven {{systems engineering}} activities. Libraries are {{used during the}} specification to optimize and validate the specification; during the hardware and software development phase {{to come up with}} the optimal architecture; and during the product debug and testing phase to match the actual output with a set of expected results. VisualSim at the level of deriving <b>Systems</b> <b>Specifications</b> provides a complete visual inspection of the system operation as a combination of traffic input, behavioral system definition and sink. This solution augments tools such as MatLab/Simulink and UML/SysML by providing very early visibility into the full system operation without getting into the details of the algorithm and code-level implementation. Typical example use cases would be Multimedia SoC with Network-On-Chip, In-Car networks using Ethernet, CAN, LIN and FlexRay, Submarine Inertial systems and etc. VisualSim modeling at the level of Hardware and Software are built after the system specification has been optimized and validated. The design can be refined by adding specific hardware implementation details, logic and cycle-level timing to the VisualSim model. The device can be a board, set of boards, SoC, sub-system or an Intellectual Property (IP). Implementation details can include the processor pipeline, functional cache, accelerators and bus arbiters. These refinements provide cycle-by-cycle and address-level evaluation of the system functionality, performance and power.|$|E
5000|$|... 1979. Structured Analysis and <b>System</b> <b>Specification.</b> Prentice Hall, ...|$|R
5000|$|PAS 82 Shopfitting and {{interior}} contracting. Management <b>system</b> <b>specification</b> ...|$|R
5000|$|BSI PAS 95:2011 - Hypoxic air fire {{prevention}} <b>systems.</b> <b>Specification</b> ...|$|R
40|$|PLA method {{can be used}} to {{formally}} specify systems. <b>Systems</b> <b>specifications</b> are written as text, what is exhaustive and understandable, but unfortunately are not visual, and user can’t quickly acquaintance with the formalized system. This article presents a way to visually and quite easily write <b>systems</b> <b>specifications</b> using PLA formalization method. This article also presents a software tool to accomplish this task. That’s graphical editor – a subsystem of a formal complex systems integrated analysis automatization system (FSA) ...|$|E
40|$|We {{describe}} {{a method for}} writing assumption/guarantee specifications of concurrent systems. We also provide a proof rule for reasoning about the composition of these <b>systems.</b> <b>Specifications</b> are written in TLA (the Temporal Logic of Actions), and all reasoning is performed within the logic. Our proof rule handles internal variables and both safety and liveness properties...|$|E
40|$|Fast pace of {{everyday}} life and the acute need of new in software applications have lead to reusing functional modules while designing information <b>systems.</b> <b>Specifications</b> {{have a big impact}} in reusing modules as they have to present the demands, descriptions and functionality in a natural-like language and in a complete, precise and verifiable manner. software, reuse, integration, quality...|$|E
50|$|UML has {{support for}} {{object-oriented}} <b>system</b> <b>specification,</b> design and modelling.|$|R
5000|$|National {{standard}} “Solar home <b>system</b> <b>specification</b> {{and test}} procedure” issued ...|$|R
40|$|Traceability is {{commonly}} known as the ability to describe and follow links between artifacts, e. g. between requirements and their corresponding part of the system design. These links are typically inside of the <b>system</b> <b>specification.</b> Very few approaches consider traceability between the <b>system</b> <b>specification</b> and project management artifacts. By introducing links between these two models a task {{can be traced to the}} system model elements it is related to. This paper proposes a unified model, which explicitly combines project management models and the <b>system</b> <b>specification</b> models to enable traceability. We introduce and discuss the following key concepts, which are currently evaluated in a case study: (1) Ability to navigate between tasks and the according part of the specification, (2) Project Management Status aggregation by <b>system</b> <b>specification</b> artifacts, (3) Use of entities from the system model for project planning, (4) Unified model validation. 1...|$|R
40|$|A thesis {{submitted}} to Strathmore University in partial fulfillment {{to the requirements}} of the award of Master of Science in Computer Based Information Systems (MSCIS). Full text thesis. The extraordinary developments of Information Technology (IT) profoundly concern libraries which are today experiencing a phase of substantial change. These innovations have changed the image of the library, placing it before a radical transformation Librarians are moving into dramatically different roles as new services are implemented. The most significant transformations in libraries have been the automation of procedures, the realization of online catalogues and the growing presence of non-paper documentation. This study aimed at investigating the extent to which Academic Libraries in Kenya are addressing the ICT guidelines spelt out by the Commission Higher Education (CHE). The study also embarked on establishing whether there is a link between individual library’s <b>systems</b> <b>specifications</b> and the shared requirements among academic libraries in Kenya. The researcher saw this as a means of facilitating for the sharing of bibliographic information among academic libraries. From the research findings, the researcher aimed at designing a framework/model that systematically shows the fundamental steps that a quality library management system project should traverse. The research findings showed that over 87 % of the respondents shared their <b>systems</b> <b>specifications.</b> This implied {{that there was a lot}} of uniformity within universities libraries in terms of <b>systems</b> <b>specifications.</b> This was supported by the fact all the sampled respondents agreed that academic libraries in Kenya should feel free to share their system specifications. Armed with this statistics, the researcher developed a modified “V model” of systems development which academic libraries in Kenya should adopt in their Integrated Library. The extraordinary developments of Information Technology (IT) profoundly concern libraries which are today experiencing a phase of substantial change. These innovations have changed the image of the library, placing it before a radical transformation Librarians are moving into dramatically different roles as new services are implemented. The most significant transformations in libraries have been the automation of procedures, the realization of online catalogues and the growing presence of non-paper documentation. This study aimed at investigating the extent to which Academic Libraries in Kenya are addressing the ICT guidelines spelt out by the Commission Higher Education (CHE). The study also embarked on establishing whether there is a link between individual library’s <b>systems</b> <b>specifications</b> and the shared requirements among academic libraries in Kenya. The researcher saw this as a means of facilitating for the sharing of bibliographic information among academic libraries. From the research findings, the researcher aimed at designing a framework/model that systematically shows the fundamental steps that a quality library management system project should traverse. The research findings showed that over 87 % of the respondents shared their <b>systems</b> <b>specifications.</b> This implied that there was a lot of uniformity within universities libraries in terms of <b>systems</b> <b>specifications.</b> This was supported by the fact all the sampled respondents agreed that academic libraries in Kenya should feel free to share their system specifications. Armed with this statistics, the researcher developed a modified “V model” of systems development which academic libraries in Kenya should adopt in their Integrated Library...|$|E
40|$|The topics {{addressed}} are: (1) class- 10 {{flight test}} program; (2) class system requirements; (3) Doppler wind velocity measurement; (4) <b>systems</b> <b>specifications</b> rational; (5) signal-to-noise equation for remote atmospheric sensing laser velocimeter; (6) variation of signal-to-noise ratios and true wind velocity with distance; (7) velocity error {{as a function}} of signal-to-noise ratio, with turbulence; and (8) final class optomechanical design on NASA B/ 737...|$|E
40|$|Two approaches, resource-oriented and constraint-oriented, for {{structuring}} telephone <b>systems</b> <b>specifications,</b> are presented. Both approaches express behaviour by {{collections of}} communicating processes, using the language LOTOS. However, requirements are distributed differently among processes. Examples {{are taken from}} specifications of telephone systems, first basic, and then with features. The features used as examples are call forwarding, originating call screening, and three-way calling. The two structuring methods are compared...|$|E
5000|$|Structured {{analysis}} and <b>system</b> <b>specification</b> published in 1979 by Tom DeMarco.|$|R
5000|$|The {{spacecraft}} <b>system</b> <b>specification</b> defines {{also the}} subsystems {{of the spacecraft}} e.g.: ...|$|R
5000|$|The {{following}} is the <b>system</b> <b>specifications</b> as transcribed in the playing manual: ...|$|R
40|$|The paper {{discusses}} a set {{of general}} system properties {{which can be used}} as macro-properties in <b>systems</b> <b>specifications.</b> To make the discussion more illustrative the general system properties are presented through the descriptive definition of the two classes of systems: primitive systems and complex systems. These classes do not exhaust all varieties of practical systems, but rather identify limiting cases which encompass the whole spectrum of other systems...|$|E
40|$|A common {{requirement}} for modern distributed and reactive systems {{is a high}} dependability guaranteeing reliability and security. The rigorous analysis of dependable <b>systems</b> <b>specifications</b> {{is of paramount importance}} for the reliability and security of these systems. A two-layered modal specification notation will allow the specification of services and protocols for distributed dependable systems and their properties. Refinement and its dual – abstraction – will play the key roles in an integrated development and analysis framework. Refinement and abstraction form the basis for an interference analysis method for security properties and for automated test case generation...|$|E
40|$|A formal {{framework}} {{based on}} algebraic graph theory is presented that integrates specification {{and construction of}} dynamics in information <b>systems.</b> <b>Specifications</b> are based on temporal logic whose semantics are given by algebras and partial homomorphisms. Constructions are given by graph transformation rules whose ooperational nature provides a first step towards actual implementations. Both are related by a correctness notion. The formal framework is especially suited as a semantical basis for graphical notations as used in conceptual modeling, thus combining intuitiveness of such notations with the precision of formal methods...|$|E
5000|$|Provide a {{point of}} {{reference}} for system designers to extract <b>system</b> <b>specifications</b> ...|$|R
40|$|We {{consider}} {{two types}} of specifications of reactive systems: requirement specification which lists properties the system should satisfy, and <b>System</b> <b>specification</b> which describes {{the response of the}} system to each incoming input. Some of the differences between these two styles of specification are analyzed with the conclusion that both types are needed in an orderly system development. Traditionally, temporal logic was used for requirement specification while process algebras, such as csp and ccs, were used for <b>system</b> <b>specification.</b> Recent developments, mainly represented in Lamport's temporal logic of actions (tla), demonstrated that temporal logic can be used effectively also for <b>system</b> <b>specification.</b> This paper explores the use of temporal logic for <b>systems</b> <b>specification,</b> evaluates some of {{the advantages and disadvantages of}} such a use, and demonstrates the use of temporal logic for refinement and systematic development of systems. To allow simulation of a single high level step [...] ...|$|R
5000|$|Elicitation {{from various}} sources (users, {{interfaces}} to other <b>systems),</b> <b>specification,</b> and consistency checking ...|$|R
