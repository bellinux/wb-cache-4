4|54|Public
40|$|Deniable {{authentication}} protocol {{is different}} from traditional authentication protocol in that the intended receiver can authenticate {{the source of a}} given message, but cannot prove the source to a third party. In recent years, many deniable authentication protocols have been put forth. To adapt to some special group communication requirements, in this paper, we will propose a new group oriented Identity-based deniable authentication protocol based on the bilinear pairings. In our proposed protocol, the sender is no longer a single person but a <b>sender</b> <b>group,</b> only all senders in the <b>sender</b> <b>group</b> agree to generate a deniable authentication code for a message, can the deniable authentication message be regarded as valid in eye of the intended receiver...|$|E
40|$|The aim of an {{efficient}} deniable authentication protocol is to enable a receiver {{to identify the}} source of a given message but not to prove the identity of the sender. Lu and Cao [7, 10] confirmed that the previous protocols had a common weakness in which any third party can impersonate the intended receiver to verify the signature of the given message, and they proposed a new protocol based on bilinear pairing using single sender and <b>sender</b> <b>group.</b> They claimed that their protocol could provide complete security and properties of a deniable authentication protocol based on bilinear pairing using single sender and <b>sender</b> <b>group,</b> we will point out that the protocol in two papers is unable to prove the source of the given message to any third party, even if he/she fully cooperates with the third party. General terms Cryptosystem; encryption; decryption; Interne...|$|E
40|$|Video {{streaming}} over {{wireless network}} is challenging {{due to the}} node mobility and high channel error rate. In this paper, we propose a multi-source video streaming (MUVIS) system to support high quality video streaming service over IEEE 802. 11 -based wireless networks. We begin by collocating a streaming proxy with the wireless access point to help leverage both the media server and peers in the WLAN. By tracking the peer mobility patterns and performing content discovery among peers, we construct a multi-source <b>sender</b> <b>group</b> and stream video using a rate-distortion optimized scheme. We formulate such a multi-source streaming problem as a combinatorial packet scheduling problem and introduce the concept of asynchronous clocks to decouple the problem into three steps. First, we decide {{the membership of the}} multi-source <b>sender</b> <b>group</b> based on the mobility pattern tracking, available video content in each peer and the bandwidth each peer allocates to the multi-source streaming service. Then we select one sender from the <b>sender</b> <b>group</b> in each optimization instance using asynchronous clocks. Finally, we apply the point-to-point rate-distortion optimization framework between the selected sender-receiver pair. In addition, we implement two different caching strategies, simple caching simple fetching (SCSF) and distortion minimized smart caching (DMSC) in the proxy to investigate the effect of cache on the streaming performance. To design more realistic simulation models, we use the empirical results from corporate wireless networks to model the peer mobility. Simulation results show that our proposed multi-source streaming scheme has better performance than the traditional server only streaming scheme and that having cache in the proxy can potentially improve the streaming performance. ...|$|E
40|$|Due to the {{character}} of the original source materials and the nature of batch digitization, quality control issues may be present in this document. Please report any quality issues you encounter to digital@library. tamu. edu, referencing the URI of the item. Includes bibliographical references: p. 53 - 55. Distributed real-time systems require guaranteed ographics. communication, where guarantees may be in terms of a maximum delay, minimum bandwidth and so on. In {{order to be able to}} provide these guarantees to applications, resources must be allocated along the path of connections. If resources are allocated for many connections, even though they may not be simultaneously sending data, over allocation of resources occurs. Resource sharing techniques are employed to conserve resources. <b>Sender</b> Sharing <b>Groups,</b> discussed in this thesis, is a mechanism for resource sharing, where resources along the path of connections from the sender are shared. Whenever connections are known to not carry data simultaneously, resources can be conserved by grouping such connections into <b>Sender</b> Sharing <b>Groups.</b> The <b>sender</b> agrees to send over not more than a predefined number of connections at any one time and the system guarantees the promised performance for the connections, as long as the sender does not violate this agreement. We discuss the mechanism of establishing and tearing down connections in a <b>Sender</b> Sharing <b>Group.</b> We also discuss the design of a two-level (independent and shared) politer, required for policing of sharing group data. The admission probability, policing time and admission time are measured in cases with and without <b>Sender</b> Sharing <b>Groups...</b>|$|R
50|$|Peter Mortimer (born January 28, 1974) is an American filmmaker from Colorado. He has {{produced}} and directed multiple films related to rock climbing, mountaineering, and outdoor adventure under the production <b>group</b> <b>Sender</b> Films.|$|R
40|$|This paper {{presents}} a flow control protocol for multi-sender multi-group multicast and unicast in wide area overlay networks. The protocol is analytically grounded and achieves real world goals, such as simplicity, fairness and minimal resource usage. Flows are regulated {{based on the}} "opportunity" costs of network resources used and the benefit provided by the flow. In contrast to existing windowbased flow control schemes, we avoid end-to-end per <b>sender</b> or per <b>group</b> feedback by looking only {{at the state of}} the virtual links between participating nodes. This produces control traffic proportional only to the number of overlay network links and independent of the number of <b>groups,</b> <b>senders</b> or receivers. We show the effectiveness of the resulting protocol through simulations and validate the simulations with live Internet experiments...|$|R
40|$|Abstract: Video {{streaming}} over wireless networks {{is challenging}} due to node mobility and high channel error rate. In this paper, we propose a multi-source video streaming (MUVIS) system to support {{high quality video}} streaming service over IEEE 802. 11 -based wireless networks. We begin by collocating a streaming proxy with the wireless access point to help leverage both the media server and peers in the WLAN. By tracking the peer mobility patterns and performing content discovery among peers, we construct a multisource <b>sender</b> <b>group</b> and stream video using a rate-distortion optimized scheme. We formulate such a multi-source streaming scenario as a combinatorial packet scheduling problem and introduce the concept of asynchronous clocks to decouple the problem into three steps. First, we decide {{the membership of the}} multi-source <b>sender</b> <b>group</b> based on the mobility pattern tracking, available video content in each peer and the bandwidth each peer allocates to the multi-source streaming service. Then we select one sender from the <b>sender</b> <b>group</b> in each optimization instance using asynchronous clocks. Finally, we apply the point-to-point rate-distortion optimization framework between the selected sender-receiver pair. In addition, we implement two different caching strategies, simple caching simple fetching (SCSF) and distortion minimized smart caching (DMSC), in the proxy to investigate the effect of caching on the streaming performance. To design more realistic simulation models, we use the empirical results from corporate wireless networks to generate node mobility. Simulation results show that our proposed multi-source streaming scheme has better performance than the traditional server-only streaming scheme and that proxy-based caching can potentially improve video streaming performance. Index Terms: Caching strategies, multi-source video streaming, rate-distortion optimized packet scheduling. I...|$|E
40|$|In {{recent years}} the use of {{portable}} and wireless equipment is becoming more widespread, and as in many situations communication infrastructure might not be available, wireless networks such as Mobile Ad Hoc Networks (MANETs) are becoming increasingly important. A mobile ad hoc network {{is a collection of}} nodes that exchanges data over wireless paths. The nodes in this network are free to move at any time, therefore the network topology changes in an unpredictable way. Since there is no fixed infrastructure support in mobile ad hoc networks, each node functions as a host and a router. Due to mobility, continuous change in topology, limited bandwidth, and reliance on batteries; designing a reliable and scalable routing protocol for mobile ad hoc networks is a challenging task. Multicast routing protocols have been developed for routing packets in mobile ad hoc networks. Existing protocols suffer from overheads and scalability. As the number of <b>senders,</b> <b>groups,</b> and mobility speed increases, the routing overhead and the packet collision increases, and therefore the packet delivery ratio decreases. Thus none of the existing proposed multicast routing protocols perform well in every situation. In this study a novel multicast routing protocol for ad hoc networks is proposed. It is an efficient and scalable routing protocol, and named Network Sender Multicast Routing Protocol (NSMRP). NSMRP is a reactive mesh based multicast routing protocol. A central node called mesh sender (MS) is selected periodically from among the <b>group(s)</b> <b>sender(s)</b> to create one mesh in order to be used in forwarding control and data packets to all multicast group(s) member(s). One invitation message will be periodically flooded to all group(s) member(s) by MS to join the group(s). The proposed routing protocol is evaluated by simulation and compared with a well known routing protocol. The results are analyzed and conclusions are drawn. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|R
40|$|Abstract—This paper {{presents}} a flow control protocol for multi-sender multi-group multicast and unicast in wide area overlay networks. The protocol is analytically grounded and achieves real world goals, such as simplicity, fairness and minimal resource usage. Flows are regulated {{based on the}} “opportunity ” costs of network resources used and the benefit provided by the flow. In contrast to existing windowbased flow control schemes, we avoid end-to-end per <b>sender</b> or per <b>group</b> feedback by looking only {{at the state of}} the virtual links between participating nodes. This produces control traffic proportional only to the number of overlay network links and independent of the number of <b>groups,</b> <b>senders</b> or receivers. We show the effectiveness of the resulting protocol through simulations and validate the simulations with live Internet experiments. I...|$|R
40|$|CBT and PIM-SM are two typical intradomain {{multicast}} routing protocols. However, CBT lacks efficient member management mechanism such as {{admission control}} and authentication for <b>senders</b> of multicast <b>group,</b> and PIM-SM lacks robustness. This paper proposes a new one, which can effectively solve the both problems through admitting senders at multiple cores and transporting packets towards uni-direction. Furthermore, the protocol {{is easy to}} implement...|$|R
40|$|The Adhoc Multicast Routing Protocol (AMRoute) {{presents}} {{a novel approach}} for robust IP Multicast in mobile adhoc networks by exploiting user-multicast trees and dynamic logical cores. It creates a bidirectional, shared tree for data distribution using only <b>group</b> <b>senders</b> and receivers as tree nodes. Unicast tunnels are used as tree links to connect neighbors on the user-multicast tree. Thus, AMRoute {{does not need to}} be supported by network nodes that are not interested/capable of multicast, and group state cost is incurred only by <b>group</b> <b>senders</b> and receivers. Also, the use of tunnels as tree links implies that tree structure does not need to change even in case of a dynamic network topology, which reduces the signaling traffic and packet loss. Thus AMRoute does not need to track network dynamics; the underlying unicast protocol is solely responsible for this function. AMRoute does not require a specific unicast routing protocol; therefore, it can operate seamlessly over separate dom [...] ...|$|R
30|$|In this study, we {{considered}} {{the problem of}} multiple unicast streams from one <b>sender</b> to a <b>group</b> of receivers under a general wireless channel setting. We suggested a coded solution to the problem, which codes over packets intended to different users. Although unnecessary in the noiseless scenario, in the noisy scenario coding across different streams is beneficial in case packets intended to one receiver are overheard by others.|$|R
40|$|Abstract — When many parties share network {{resources}} on an overlay network, mechanisms must exist to allocate {{the resources and}} protect the network from overload. Compared to large physical networks such as the Internet, in overlay networks {{the dimensions of the}} task are smaller, so new and possibly more effective techniques can be used. In this work we take a fresh look at the problem of flow control in multi-sender multi-group reliable multicast and unicast and explore a cost-benefit approach that works in conjunction with Internet standard protocols such as TCP. In contrast to existing window-based flow control schemes we avoid end-to-end per <b>sender</b> or per <b>group</b> feedback by looking only at the state of the virtual links between participating nodes. This produces control traffic proportional only to the number of overlay network links and independent of the number of <b>groups,</b> <b>senders</b> or receivers. We show the effectiveness of the resulting protocol through simulations and validate the simulations with live Internet experiments. We demonstrate near optimal utilization of network resources, fair sharing of individual congested links and quick adaptation to network changes. I...|$|R
40|$|Abstract—Many {{proposals}} {{for the next}} generation of the Internet suggest moving from an end-point oriented to an informationcentric oriented architecture. Many of these proposals are based on the publish/subscribe paradigm, which lends itself naturally to native multicast support, a key factor for efficient content distribution. However, the design of efficient reliable transport protocols for multicast is a largely open problem, due to the problem of feedback implosion towards the <b>sender</b> as <b>group</b> size grows. In this paper we propose a hierarchical retransmissionbased error control scheme for a native publish/subscribe internetwork. We compare our protocol with similar approaches proposed for IP multicast and evaluate its performance against IP multicast with unicast-based error control. Index Terms—Information-centric networks, error recovery, multicast, transport layer I...|$|R
40|$|In recent years, {{a variety}} of unicast and {{multicast}} routing protocols for Mobile Ad hoc wireless NETworks (MANETs) have been developed. The Zone Routing Protocol (ZRP) is a hybrid unicast protocol that proactively maintains routing information for a local neighborhood (routing zone), while reactively acquiring routes to destinations beyond the routing zone. In this paper, we extend ZRP for application to multicast routing and call it the Multicast Zone Routing Protocol (MZRP). MZRP is a shared tree multicast routing protocol that proactively maintains the multicast tree membership for nodes’ local routing zones at each node while establishing multicast trees on-demand. It is scalable to {{a large number of}} multicast <b>senders</b> and <b>groups.</b> IP tunnel mechanism is used to improve the data packet delivery ratio during transmission. Detailed simulations were performed on the NS- 2 simulator. Its performance was also compared with that of ODMRP...|$|R
50|$|Connection of trunks to {{incoming}} registers {{and outgoing}} senders is {{not through the}} four-stage voice fabric. Rather it is through a dedicated single-stage crossbar network known as incoming register link (IRL) or outgoing sender link (OSL) respectively. Registers and <b>senders</b> are in <b>groups</b> of ten, assigned one to each level of as many crossbar switches as are appropriate to the traffic they can handle. Different trunks are wired to different IRLs or OSLs depending {{on what kind of}} signaling they use; i.e. IRDP, IRRP (see panel switch), or IRMF.|$|R
50|$|The phone {{facilitates}} MMS (multimedia) messaging, {{which allows}} sending and receiving text, images, and audio. Functionality is extensive: multimedia messages can be multi-page, {{they can be}} given custom or repetitive content from message templates, a specific duration, priority, and expiry date; and messages can be previewed before sending. Incoming multimedia messages can be replied to <b>sender</b> or a <b>group</b> of recipients, and forwarded. Depending {{on the type of}} data, information in an MMS message can be used to call the sender, extract addresses to contacts, or save images or audio into a separate folder.|$|R
40|$|We im'estigate a {{heuristic}} application-Ieye] (oYerlay) multicast ap-proach. {{which we}} call Topology Aware Grouping (fAG). TAG ex-ploits underlying network topology dala to construct multicast over-lay nctwocts. TAG uses information about O"erfap ill roules / 0 the <b>sender</b> among <b>group</b> mc:mbcrs {{to set up the}} overlay network in a distributed low-ow:mead manner. The constructed tree has low rel-ative delay penally. and introduces a limited number of identical copies of a packet on the same link- assuming underlying routes are of good quaJily. We study the properties of TAG, and quantify its economies of scale faclor. compared 10 unicast and IP multi-cast. We also compare TAG with End System Muilicast (ESM) in a variety of simulation configurations. including both reallntemcl topologies and generated topologies. Our results indicate the effec-tiveness of our heuristic in reducing delays and duplicate packets, with reasonable time and space complexities. TAG can be com-bined with delay and bandwidth bounds to construct overlays that satisfy application requirements...|$|R
40|$|We {{investigate}} a heuristic application-level (overlay) multicast approach, {{which we call}} Topology Aware Grouping (TAG). TAG exploits underlying network topology data to construct multicast overlay networks. TAG uses information about overlap in routes to the <b>sender</b> among <b>group</b> members {{to set up the}} overlay network in a distributed low-overhead manner. The constructed tree has low relative delay penalty, and introduces a limited number of identical copies of a packet on the same link – assuming underlying routes are of good quality. We study the properties of TAG, and quantify its economies of scale factor, compared to unicast and IP multicast. We also compare TAG with End System Multicast (ESM) in a variety of simulation configurations, including both real Internet topologies and generated topologies. Our results indicate the effectiveness of our heuristic in reducing delays and duplicate packets, with reasonable time and space complexities. TAG can be combined with delay and bandwidth bounds to construct overlays that satisfy application requirements...|$|R
40|$|Abstract—In {{the past}} few years, many {{researchers}} {{have argued that the}} Internet should transition from its traditional endpoint-centric architecture to an information-centric paradigm. One of the advantages of the information-centric model is that the network can easily aggregate requests for the same content and serve them via multicast. Indeed, most information-centric architectures proposed to date offer native support for multicast, promising a vast improvement in the efficiency of content distri-bution. However, designing efficient reliable transport protocols for multicast is a largely open issue, due to the problem of feedback implosion towards the <b>sender</b> as <b>group</b> size grows. In this paper we propose RMTPSI, a retransmission-based reliable error control protocol for multicast communication de-signed specifically for information-centric networks. We compare RMTPSI with existing approaches proposed for IP multicast and evaluate its performance via simulation, showing that our approach leads to more efficient content distribution and error recovery than previous solutions. Index Terms—Information-centric networks, error recovery, multicast, transport layer I...|$|R
40|$|The Multicast Address Resolution Server {{protocol}} {{has been}} proposed as a mechanism for supporting IP multicast over ATM networks. Two basic techniques exist for the intra-subnet multicasting of IP packets over ATM networks. Both the approaches {{are based on the}} use of a Multicast Address Resolution Server (MARS). One approach makes use of a mesh of point-to-multipoint Virtual Circuits (VC Mesh) each of which is rooted at a multicast source, while the other uses a shared point-to-multipoint tree rooted at a Multicast Server (MCS). In this paper we describe the design and implementation of a MARS client and an MCS. We present a framework for comparing the VC Mesh and MCS approaches using experimental, simulation and analytical techniques. Finally we present three protocols for the usage of multiple MCSs per IP multicast group, a technique required for groups with large number of <b>senders</b> and <b>group</b> members. Keywords: IP Multicast, Multicast Server Architectures, Network Protocols, [...] ...|$|R
40|$|A key {{challenge}} in reliable multicast {{is to reduce}} the retransmission cost such as bandwidth usage and delay. Local recovery approach employing replicated servers has recently been shown to be effective in reducing this cost. The basic idea in the local recovery approach is to perform data replication on a subset of routers inside the network known as replicated servers. Each replicated server is attached to a router and responsible for the retransmission requests from receivers within its local area. In a multicast network, packets are forwarded from a source (<b>sender)</b> to <b>group</b> receivers along a distribution tree where the source is the root, the receivers are the leaves and the multicast-capable routers are the internal nodes. In this paper, we consider the problem of placing multiple replicated servers within the multicast-capable routers. We first present the problem formulation and then present a number of heuristics-based algorithms for server replication. Finally, in order to investigate various tradeoffs in terms of cost and algorithm complexity, we carry out comparison studies among different heuristic algorithms...|$|R
40|$|Abstract. The Ad hoc Multicast Routing {{protocol}} (AMRoute) {{presents a}} novel approach for robust IP Multicast in mobile ad hoc networks by exploiting user-multicast trees and dynamic logical cores. It creates a bidirectional, shared tree for data distribution using only <b>group</b> <b>senders</b> and receivers as tree nodes. Unicast tunnels are used as tree links to connect neighbors on the user-multicast tree. Thus, AMRoute {{does not need to}} be supported by network nodes that are not interested/capable of multicast, and group state cost is incurred only by <b>group</b> <b>senders</b> and receivers. Also, the use of tunnels as tree links implies that tree structure does not need to change even in case of a dynamic network topology, which reduces the signaling traffic and packet loss. Thus AMRoute does not need to track network dynamics; the underlying unicast protocol is solely responsible for this function. AMRoute does not require a specific unicast routing protocol; therefore, it can operate seamlessly over separate domains with different unicast protocols. Certain tree nodes are designated by AMRoute as logical cores, and are responsible for initiating and managing the signaling component of AMRoute, such as detection of group members and tree setup. Logical cores differ significantly from those in CBT and PIM-SM, since they are not a central point for data distribution and can migrate dynamically among member nodes. Simulation results (using ns- 2) demonstrate that AMRoute signaling traffic remains at relatively low level for typical group sizes. The results also indicate that group members receive a high proportion of data multicast by senders, even in the case of a highly dynamic network...|$|R
40|$|Addressing {{multicast}} group integrity management with particular regard to policy specification, this paper discusses our approach {{referred to as}} MGMS/GML - a tailored Multicast Group Management System complemented by our Group Management Language. We classify and compare existing policy specification approaches and find that none is sufficiently suitable for our problem domain, which includes tasks such as specifying and controlling integrity conditions on {{multicast group}} composition, e. g. {{limiting the number of}} <b>senders</b> in a <b>group,</b> or placing a cap on member fluctuation. Typical problems in group integrity management are identified, and an example illustrates the use of GML Following an architectural and functional overview of our system, we look at selected implementation issues and describe how policies may be specified at runtime...|$|R
40|$|The thesis {{investigates the}} {{reliable}} transport from one <b>sender</b> to a <b>group</b> of receivers (multicast). It is often stated that network support {{is required to}} allow for efficient reliable multicast. This thesis shows {{that this is not}} the case. Efficient reliable multicast is possible on a pure end-to-end basis even for a very large number of In the case of data loss in the network, reliability is efficiently provided, if receivers signal the loss to the sender and the sender in turn performs a retransmission of the missing data. The complexity of such a system increases with the number of receivers. Both, the number of retransmissions to be performed by the sender and the amount of feedback returned to the sender increases with the number of receivers...|$|R
40|$|We {{present a}} single rate {{multicast}} congestion control scheme (pgmcc) which is TCP-friendly and achieves scalability, stability and fast response to variations in network conditions. pgmcc {{is suitable for}} both non-reliable and reliable data transfers; it uses a window-based TCP-like controller based on positive ACKs and run between the <b>sender</b> and a <b>group's</b> representative, the acker. The innovative part of pgmcc is a fast and low-overhead procedure to select (and track changes of) the acker, which permits us to consider the acker as a moving receiver rather than a changing one. As such, the scheme is robust to measurement errors, and supports fast response {{to changes in the}} receiver set and/or network conditions. The scheme has been implemented in the PGM protocol, and the paper presents a number of experimental results on its performance...|$|R
40|$|This memo defines an Experimental Protocol for the Internet community. This memo {{does not}} specify an Internet {{standard}} of any kind. Discussion {{and suggestions for}} improvement are requested. Distribution of this memo is unlimited. CBT is a multicast routing architecture that builds a single delivery tree per group which is shared {{by all of the}} <b>group's</b> <b>senders</b> and receivers. Most multicast algorithms build one multicast tree per sender (subnetwork), the tree being rooted at the sender's subnetwork. The primary advantage of the shared tree approach is that it typically offers more favourable scaling characteristics than all other multicast algorithms. The CBT protocol [1] is a network layer multicast routing protocol that builds and maintains a shared delivery tree for a multicast group. The sending and receiving of multicast data by hosts on...|$|R
40|$|Recently, a TCP-friendly, single-rate {{multicast}} {{congestion control}} scheme called pgmcc {{was introduced by}} one of the authors. In this paper, we study the fairness of pgmcc in a variety of scenarios in which a multicast transfer session competes with long-lived TCP flows and web-like traffic. We evaluate fairness of the pgmcc scheme at different timescales and compare it with the fairness of the TCP congestion control algorithm. Our results show that pgmcc is capable of sharing fairly the available bandwidth with competing connections. In particular, the use of a closed control loop between the <b>sender</b> and a <b>group’s</b> representative — which closely mimics the TCP congestion control — guarantees that pgmcc is fair to TCP sessions and that it is capable of reacting quickly to changes of network conditions without compromising fairness...|$|R
40|$|Abstract — The {{purpose of}} {{multicast}} routing {{is to reduce}} the communication coats for applications that send the same data to multiple recipients. Existing multicast routing mechanisms were intended for use within regions where a group is widely represented or bandwidth is universally plentiful. when <b>group</b> members, and <b>senders</b> to those <b>group</b> members, are d~tributed sparsely across a wide area, these schemes are not efficient; data packets or membership report information are occasionally sent over many links that do not lead to receivers or senders, respectively. We have developed a multicast routing archhecture that efficiently established distribution trees across wide area interneta, where many groups will be sparsely represented. Efficiency is measured in terms of the router state, control message processing, and data packet processing, required across the entire network in order to deliver data packets to the members of th...|$|R
40|$|Multicast traffic {{patterns}} {{play a key}} role in dependable data centers, arising when data is replicated and distributed over multiple machines for fault-tolerance and availability. Such settings involve large numbers of multicast groups as well as multiple <b>senders</b> to each <b>group</b> — a single system can have hundreds of such multicast channels. Without effective multi-channel rate control, multicast senders cannot determine the right rate to send data at and often transmit to groups as fast as possible. As a result, multicast channels are subject to traffic spikes that can overload individual end-hosts within the data center as well as its communication back-plane. This paper introduces and evaluates Ajil, a distributed rate-limiting protocol for data centers. Ajil enforces a system-wide quota on multicast traffic, and facilitates equitable distribution of this quota across all the multicast channels in the data center. 1...|$|R
40|$|Multicasting {{provides}} an economic way of distributing {{information from a}} <b>sender</b> to a <b>group</b> of receivers located at different sites of the networks. However, heterogeneous networks and variable traffic loads make the multicast more problematic. An efficient {{solution to the problem}} is to transmit layered signals, a base layer and several progressive enhancement layers. The local networks simply select the number of layers, according to the capacities. In the paper, a general model of layered packet video is proposed. Two layered compression methods are analysed. The examples show that the general model is suitable to describe layered video, and the model is helpful to design required layers. Layered packet loss rate is suggested as a measure of communication quality requirements. Numerical results show that layered video is more sensitive to the packet dropping than unlayered video and unequal loss protection is more efficient than equal protection. Keyword: layered video, multicasting, [...] ...|$|R
40|$|Existing {{multicast}} routing mechanisms {{were intended}} for use within regions where a group is widely represented or bandwidth is universally plentiful. When <b>group</b> members, and <b>senders</b> to those <b>group</b> members, are distributed sparsely across a wide area, these schemes are not efficient; data packets or membership report information are occasionally sent over many links that do not lead to receivers or senders, respectively. We have developed a multicast routing architecture that efficiently establishes distribution trees across wide area internets, where many groups will be sparsely represented. Efficiency is {{measured in terms of}} the state, control message processing, and data packet processing, required across the entire network in order to deliver data packets {{to the members of the}} group. Our Protocol Independent Multicast (PIM) architecture: (a) maintains the traditional IP multicast service model of receiver-initiated membership; (b) can be configured to adapt to different multicast g [...] ...|$|R
40|$|Existing {{multicast}} routing mechanisms {{were intended}} for use within regions where a group is widely represented or bandwidth is universally plentiful. When <b>group</b> members, and <b>senders</b> to those <b>group</b> members, are distributed sparsely across a wide area, these schemes are not efficient; data packets or membership report information are periodically sent over many links that do not lead to receivers or senders, respectively. This characteristic lead us to develop a multicast routing architecture that efficiently establishes distribution trees across wide-area internets, where many groups will be sparsely represented and where bandwidth is not uniformly plentiful due to the distances and multiple administrations traversed. Efficiency is evaluated {{in terms of the}} state, control message processing, and data packet processing required across the entire network in order to deliver data packets {{to the members of the}} group. The architecture also includes a more traditional, dense mode of operation [...] ...|$|R
40|$|We {{investigate}} {{the applicability of}} spanners as shared structures that offer both low cost and low delay for broadcast and multicast. A k-spanner {{has the potential to}} offer lower delay than shared trees because it limits the distance between any two nodes in the network to a multiplicative factor k of the shortest-path distance. Using simulation over random topologies, we compare k-spanners to single-source minimum-distance spanning trees and show that a k-spanner can have similar cost and lower delay. We illustrate that by varying the value of k a spanner can be made to gradually favor cost over delay. These results indicate that it is feasible to build a multicast routing protocol using spanners as a shared communication structure. 1 Introduction Current multicast routing protocols can be classified as constructing either a separate shortest path tree for each <b>sender</b> to a <b>group</b> or a single shared tree for all senders. The tradeoffs between these two approaches have been [...] ...|$|R
40|$|In {{this term}} paper, we present recent issues on {{congestion}} control mechanism for multicast protocol. Multicast is sending packets {{from one or}} more <b>senders</b> to a <b>group</b> of receivers, rather than dedicating their resources to only one receiver, and thus utilizing limited bandwidth efficiently. End-to-end multicast {{is one of the}} most important research areas in distributed systems because many applications will depend on it largely. One of the most difficult issues in end-to-end multicast is congestion control which is providing fair resource allocation in a network, and operating at an acceptable level when there are more requests than the capacity, which the network can handle. Congestion control is an important issue in multicast environment because congestion is more common. Moreover, error free transmission should be guaranteed in case of reliable multicast. In addition, we need to guarantee fairness between best-effort connections and we are likely to see congestion collapses in the absence of proper congestion control mechanism. 1...|$|R
40|$|This paper {{describes}} {{the design and}} implementation of a multicast transport protocol called RMTP. RMTP provides sequenced, lossless delivery of bulk data from one <b>sender</b> to a <b>group</b> of receivers. RMTP achieves reliability by using a packet-based selective repeat retransmission scheme, in which each acknowledgment (ACK) packet carries a sequence number and a bitmap. ACK handling {{is based on a}} multi-level hierarchical approach, in which the receivers are grouped into a hierarchy of local regions, with a Designated Receiver (DR) in each local region. Receivers in each local region periodically send ACKs to their corresponding DR, DRs send ACKs to the higher-level DRs, until the DRs in the highest level send ACKs to the sender, thereby avoiding the ACK-implosion problem. DRs cache received data and respond to retransmission requests of the receivers in their corresponding local regions, thereby decreasing end-to-end latency and improving resource usage. This paper also provides the measurem [...] ...|$|R
