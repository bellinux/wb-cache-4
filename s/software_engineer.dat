1949|3683|Public
5|$|Awindra Pratap Pandey, {{the man who}} was attacked, is a <b>software</b> <b>engineer</b> from Gorakhpur, Uttar Pradesh, {{who lives}} in Ber Sarai, New Delhi; he {{suffered}} broken limbs but survived.|$|E
5|$|While he {{was working}} as a <b>software</b> <b>engineer</b> in Silicon Valley, California, he pursued filmmaking and {{graduated}} with a Master of Fine Arts degree from Columbia University.|$|E
5|$|Madhavan {{was born}} on 1 June 1970 in Jamshedpur, Bihar (now in Jharkhand), India, to a Tamil family. His father Ranganathan was a {{management}} executive in Tata Steel and his mother, Saroja was a manager in the Bank of India. His younger sister, Devika, is a <b>software</b> <b>engineer</b> settled in the United Kingdom. He had a Tamil-speaking upbringing in Bihar.|$|E
5000|$|Most <b>software</b> <b>engineers</b> work as {{employees}} or contractors. <b>Software</b> <b>engineers</b> work with businesses, government agencies (civilian or military), and non-profit organizations. Some <b>software</b> <b>engineers</b> {{work on their}} own as consulting <b>software</b> <b>engineers.</b> Some organizations have specialists to perform all of the tasks in the software development process. Other organizations separate <b>software</b> <b>engineers</b> based on specific software-engineering tasks. These companies sometimes hire interns (possibly university or college students) over a short time. In large projects, <b>software</b> <b>engineers</b> are distinguished from people who specialize in only one role because they {{take part in the}} design as well as the programming of the project. In small projects, <b>software</b> <b>engineers</b> will usually fill several or all roles at the same time. Specializations include: ...|$|R
40|$|The {{group of}} people {{described}} as end user <b>software</b> <b>engineers</b> are a very large and diverse group. For example, research scientists building simulations of complex processes are described as end user <b>software</b> <b>engineers</b> as are school teachers who create spreadsheets to track the progress of their students. Given the difference in background and domains in which different end user <b>software</b> <b>engineers</b> work, I {{argue that it is}} important to distinguish between different categories of end user <b>software</b> <b>engineers.</b> Such distinctions will enable us to determine which tools and techniques are appropriate for which types of end user <b>software</b> <b>engineers.</b> Indeed, such distinctions will also make clear the differences and similarities between end user <b>software</b> <b>engineers</b> and so called professional <b>software</b> <b>engineers...</b>|$|R
5000|$|The PSP aims {{to provide}} <b>software</b> <b>engineers</b> with disciplined methods for {{improving}} personal software development processes. The PSP helps <b>software</b> <b>engineers</b> to: ...|$|R
5|$|After graduating, Leon {{joined the}} New Delhi firm Softek LLC {{and worked with}} them for two years till 1994. As per Leon, during this time, he became {{inspired}} by Jurassic Park after watching the film and decided to pursue {{his career in the}} technologies used in its making. After completing the master's degree at Arizona State University in 1996, Leon worked for a short time as a game programmer with DreamWorks Interactive, before joining Sony Pictures Imageworks in 1996, where he continues working to date, currently holding the position of Principal <b>Software</b> <b>Engineer.</b>|$|E
5|$|Imran Khan {{was born}} as Imran Pal on 13 January 1983 in Madison, Wisconsin, United States to Anil Pal, a <b>software</b> <b>engineer,</b> and Nuzhat Khan, a psychologist. Imran's {{father is a}} Hindu of mixed Bengali and English descent; {{he works as a}} senior manager at Yahoo in Silicon Valley, USA. Imran's mother is a Muslim from a film family, {{daughter}} of the director-producer Nasir Hussain, sister of director-producer Mansoor Khan and cousin of actor Aamir Khan.|$|E
5|$|In 2007, Scott Kramer {{became the}} congregation's rabbi, his first rabbinic post. A native of Baltimore, Kramer had a Master's degree in physics from the University of Utah, and {{for over two}} decades {{had worked as a}} <b>software</b> <b>engineer.</b> He began {{studying}} at the Ziegler School of Rabbinic Studies at the American Jewish University in 2002, and was ordained there in 2007. , Kramer was Agudath Israel Etz Ahayem's rabbi and Joy Blondheim was the president.|$|E
50|$|There {{are another}} 1,500,000 people in system analysis, system administration, and {{computer}} support, {{many of whom}} might be called <b>software</b> <b>engineers.</b> Many systems analysts manage software development teams and analysis is an important software engineering role, {{so many of them}} might be considered <b>software</b> <b>engineers</b> in the near future. This means that the number of <b>software</b> <b>engineers</b> may actually be much higher.|$|R
5000|$|Computer <b>software</b> <b>engineers</b> develop, design, {{and test}} software. They construct, and {{maintain}} computer programs, {{as well as}} set up networks such as [...] "intranets" [...] for companies. <b>Software</b> <b>engineers</b> can also design or code new applications {{to meet the needs}} of a business or individual. Some <b>software</b> <b>engineers</b> work independently as freelancers and sell their software products/applications to an enterprise or individual.|$|R
50|$|<b>Software</b> <b>engineers</b> {{are part}} of the much larger software, hardware, application, and {{operations}} community. In 2000 in the U.S., there were about 680,000 <b>software</b> <b>engineers</b> and about 10,000,000 IT workers.|$|R
5|$|In October 2010, Hurley {{announced}} that he would be stepping down as chief executive officer of YouTube to take an advisory role, and that Salar Kamangar would take over as head of the company. In April 2011, James Zern, a YouTube <b>software</b> <b>engineer,</b> revealed that 30% of videos accounted for 99% of views on the site. In November 2011, the Google+ social networking site was integrated directly with YouTube and the Chrome web browser, allowing YouTube videos to be viewed from within the Google+ interface.|$|E
5|$|In a video {{posted on}} July 21, 2009, YouTube <b>software</b> <b>engineer</b> Peter Bradshaw {{announced}} that YouTube users can now upload 3D videos. The videos {{can be viewed}} in several different ways, including the common anaglyph (cyan/red lens) method which utilizes glasses worn by the viewer to achieve the 3D effect. The YouTube Flash player can display stereoscopic content interleaved in rows, columns or a checkerboard pattern, side-by-side or anaglyph using a red/cyan, green/magenta or blue/yellow combination. In May 2011, an HTML5 version of the YouTube player began supporting side-by-side 3D footage that is compatible with Nvidia 3D Vision.|$|E
5|$|Shruti {{lives with}} her widowed mother and brother and her {{neighbour}} Brahmi, a <b>software</b> <b>engineer,</b> who pesters her to marry him. A corrupt police officer named Pasupathy, who works for Ali Bhai, is attracted to Shruti. He is determined to make her his mistress, undeterred by Shruti's multiple rejections. After Pandu kills a henchman of Narayana, he is confronted by Pasupathy {{and is able to}} prevent Shruti from being molested. She meets him the next day to thank him, and Pandu introduces himself as a self-employed person who undertakes any activity for money. They develop unspoken romantic feelings for each other angering Pasupathy.|$|E
40|$|A Doctoral Thesis. Submitted in partial {{fulfilment}} of {{the requirements}} for the award of Doctor of Philosophy of Loughborough University. The purpose of the research described within this thesis is to provide {{information that can be}} used to improve the quality of programs and the productivity of the software industry. To fulfil this purpose, the thesis is concerned with the order in which <b>software</b> <b>engineers</b> construct solutions to software problems, the factors that influence the order in which <b>software</b> <b>engineers</b> construct solutions, and the effectiveness of constructing a solution in a particular order. Control strategies describe the order in which solutions are constructed. Four empirical studies investigating control strategies were undertaken to answer the concerns of the thesis. The aim of the first two studies was to observe the global control strategies employed by <b>software</b> <b>engineers.</b> The two studies collected verbal reports and keystroke behaviour of <b>software</b> <b>engineers</b> using Prolog and C. The results showed that <b>software</b> <b>engineers</b> used a combination of Top-Down control strategies to solve a software problem. A Children-First Top-Down control strategy was used during the initial stages of solving a complex sub-problem, while a Depth-First Top-Down control strategy was used to solve simple sub-problems. Occasionally <b>software</b> <b>engineers</b> diverged from a Top-Down control strategy. There were eight types of divergences (such as working pursuing pre-requisites) that frequently occurred within the context of six different activities (such as making alternations to a solution). The third study investigated the choice of local control strategies that supplement global control strategies. When <b>software</b> <b>engineers</b> were presented with a series of subproblems to complete, they chose to complete the four sub-problems in the order that they were presented. The <b>software</b> <b>engineers</b> did not choose to pursue the series of sub-problems in any alternative order, such as the order of Easiest-First, or AnalogiesFirst. The fourth study investigated the environmental factors that influence the software engineers' choice of global control strategies. The study also investigated whether <b>software</b> <b>engineers</b> using the Breadth-First control strategy produced better results than <b>software</b> <b>engineers</b> using alternative control strategies. Three different text editors were produced to determine under what circumstance <b>software</b> <b>engineers</b> would use the Breadth-First control strategy. The editors also recorded the behaviour of the <b>software</b> <b>engineers.</b> The <b>software</b> <b>engineers</b> would only use the Breadth-First control strategy when the text editor forced them to follow the Breadth-First control strategy. However, the performance of the <b>software</b> <b>engineers</b> was better when they were forced to use the Breadth-First control strategy than when they used their preferred control strategies...|$|R
5000|$|The {{first two}} semesters, the <b>software</b> <b>engineers</b> {{to educate the}} {{teachers}} {{side by side with}} the students. The third semester, the <b>software</b> <b>engineers</b> and teachers coteach the students. By the fourth semester, the teachers lead the class, and the <b>software</b> <b>engineers</b> become [...] "teaching assistants". The aim is to enable the teachers who have math and science backgrounds in the future to lead the classes by themselves.|$|R
50|$|Many <b>software</b> <b>engineers</b> work as {{employees}} or contractors. <b>Software</b> <b>engineers</b> work with businesses, government agencies (civilian or military), and non-profit organizations. Some <b>software</b> <b>engineers</b> work for themselves as freelancers. Some organizations have specialists to perform {{each of the}} tasks in the software development process. Other organizations require <b>software</b> <b>engineers</b> to do many or all of them. In large projects, people may specialize in only one role. In small projects, people may fill several or all roles at the same time. Specializations include: in industry (analysts, architects, developers, testers, technical support, middleware analysts, managers) and in academia (educators, researchers).|$|R
5|$|Kellee Santiago is a Venezuelan-American {{video game}} {{designer}} and producer. She is the co-founder {{and former president}} of thatgamecompany. Santiago was born in Caracas, Venezuela and was raised in Richmond, Virginia, where she played video games from a young age and was encouraged by her <b>software</b> <b>engineer</b> father to experiment with computers. While attending New York University's Tisch School of the Arts, she became active in experimental theater, and intended to pursue it after earning a master's degree in the Interactive Media Program of the School of Cinematic Arts at the University of Southern California. While there, however, she became involved in video game design, and produced Cloud, a game developed by Jenova Chen and a student team. Its success sparked her and Chen to found thatgamecompany upon graduating, and she became the president.|$|E
5|$|One {{week after}} Super Millionaire {{came to an}} end, Ken Jennings of Salt Lake City, Utah, became the new {{champion}} on Jeopardy! The episode, broadcast on June 2, 2004, {{was the first in}} a long winning streak for the <b>software</b> <b>engineer,</b> made possible due to a change at the beginning of that season (the show's twentieth on air in syndication), eliminating the longstanding rule limiting consecutive appearances for a champion to five. With no limit to his appearances, Jennings began to break many game show records. As his streak continued deeper into the 21st season, Jennings was inching closer and closer to Olmstead's record. Jennings topped Olmstead's Millionaire winnings with his 65th consecutive win, finishing the day with $45,099 and a new cumulative total of $2,197,000.|$|E
5|$|Marble Madness was {{developed}} by Atari Games, with Mark Cerny as the lead designer and Bob Flanagan as the <b>software</b> <b>engineer.</b> Both Cerny and Flanagan handled programming the game. It uses the Atari System 1 hardware, an interchangeable system of circuit boards, control panels, and artwork. The game features pixel graphics on a 19-inch Electrohome G07 model CRT monitor, and uses a Motorola 68010 central processing unit (CPU) with a MOS Technology 6502 subsystem to control the audio and coin operations. Marble Madness was Atari's first game to use an FM sound chip produced by Yamaha, {{which is similar to}} a Yamaha DX7 synthesizer and creates the music in real time so that it is in synchronization with the game's on-screen action. The game's music was composed by Brad Fuller and Hal Canon who spent a few months becoming familiar with the capabilities of the sound chip.|$|E
50|$|<b>Software</b> <b>engineers</b> may use {{multimedia}} {{in computer}} simulations for anything from entertainment to training such as military or industrial training. Multimedia for software interfaces are often {{done as a}} collaboration between creative professionals and <b>software</b> <b>engineers.</b>|$|R
40|$|Current {{research}} suggests that motivation factors in software engineering are evolving and that our current understanding of motivation in software engineering is out of date. In this paper an analysis of semi-structured interviews with 13 professional <b>software</b> <b>engineers</b> is presented. The data suggests that „the work ‟ makes <b>software</b> <b>engineers</b> go that extra mile and that „people ‟ are important, but that „obstacles ‟ really sap the energy of <b>software</b> <b>engineers.</b> 1...|$|R
40|$|Abstract—Just like in {{co-located}} teams, <b>software</b> <b>engineers</b> in distributed teams need {{a variety}} {{of information about the}} project and their team members to collaborate effectively. In contrast with the co-located situation however, acquiring and maintaining sufficient awareness is more difficult. Therefore technological support is developed to assist them with this. However, such support walks a fine line: if it provides too little information <b>software</b> <b>engineers</b> {{will not be able to}} collaborate effectively, yet if it provides too much, an information overload can occur. To further complicate matters, the information needs of <b>software</b> <b>engineers</b> dynamically change based on their current activity, context and focus. Therefore we assist tool developers by investigating and reporting on the prioritization of information for distributed <b>software</b> <b>engineers</b> based on their current activity and status. Finally, we illustrate the applicability of the findings by describing how to apply them in a support tool for distributed <b>software</b> <b>engineers.</b> I...|$|R
5|$|The {{college is}} {{actively}} involved in the development and use of assistive technology to aid visually impaired people in their everyday lives. For example, working with a United States-based <b>software</b> <b>engineer,</b> RNC produced the T3 (Talking Tactile Tablet), a touch sensitive device for interpreting tactile images such as diagrams, charts and maps. The device is connected to a computer and run with a programme CD, and has a tactile surface which produces touchable icons that provide audio feedback when they are pressed. The device was originally developed for educational purposes but can be adapted for other uses. In 2005 Hereford Museum and Art Gallery became the first in the United Kingdom to invest in the technology. The T3 was later marketed internationally {{with the help of the}} UK Trade & Investment's passport initiative– a scheme which gives new exporters the training, planning and support they need to succeed in overseas markets.|$|E
5|$|Pokiri success {{elevated}} Mahesh to super-stardom {{and brought}} recognition to Jagannadh {{as a writer}} and director. The sequences featuring Brahmanandam as a <b>software</b> <b>engineer,</b> the comedy track of Ali and Brahmanandam, Mahesh asking D'Cruz to give him upma at the railway station were acclaimed. The fashion trend of wearing doctor sleeves increased in Andhra Pradesh after Mahesh sported them and they continue to influence fashion even today. After the film's release, many films were released subsequently that had titles bordering on cuss words including Jagannadh's next film Desamuduru (2006). Mahesh revealed that he became confused after the film's success:It was such a huge hit, that if someone came to me with a script, I would approach the result of the film before approaching the character. I only wanted to act in movies that were like Pokiri, I think that was a mistake. It all got to me and I felt that I needed a break from films itself. Initially, I wanted just a seven-month break. I signed Khaleja after nine months, but it just kept getting delayed and the break ended up becoming a two-year-long holiday. But I didn't freak out... I relaxed {{for the first time in}} life.|$|E
25|$|Sam Ruby; (BA '82); <b>Software</b> <b>Engineer.</b>|$|E
40|$|The {{attributes}} of individual <b>software</b> <b>engineers</b> {{are perhaps the}} most important factors in determining the success of software development. Our goal is to identify the professional competencies that are most essential. In particular, we seek to identify the attributes that di#erentiate between exceptional and non-exceptional <b>software</b> <b>engineers.</b> Phase 1 of our research is a qualitative study designed to identify competencies {{to be used in the}} quantitative analysis performed in Phase 2. In Phase 1, we conduct an in-depth review of ten exceptional and ten non-exceptional <b>software</b> <b>engineers</b> working for a major computing #rm. We use biographical data and Myers-Briggs Type Indicator test results to characterize our sample. We conduct Critical IncidentInterviews focusing on the subjects experience in software and identify 38 essential competencies of <b>software</b> <b>engineers.</b> Phase 2 of this study surveys 129 <b>software</b> <b>engineers</b> to determine the competencies that are di#erential between ex [...] ...|$|R
40|$|Effects of {{personality}} profiles and human factors in software engineering (SE) {{have been studied}} from different perspectives, such as: software life cycle, team performance, software quality attributes, and so on. This study intends to compare personality profiles of <b>software</b> <b>engineers</b> in academia and industry. In this survey we have collected personality profiles of <b>software</b> <b>engineers</b> from academia and the local industry in Pakistan. According to the Myers- Briggs Type Indicator (MBTI) instrument, the most prominent personality type among Pakistani academicians {{is a combination of}} Introversion, Sensing, Thinking, and Judging (ISTJ). However the most dominant personality type among <b>software</b> <b>engineers</b> in the Pakistani software industry is a combination of Extroversion, Sensing, Thinking, and Judging (ESTJ). The results of study establish that <b>software</b> <b>engineers</b> working in industry are mostly Extroverts as compared to those in academia who tend to be Introverts. The dimensions: Sensing, Thinking, and Judging (STJ), however, remain common in the dominant personality types of <b>software</b> <b>engineers,</b> both in Pakistani software industry and academia...|$|R
40|$|The Dissertation {{submitted}} to the Department of Computer Science and Engineering for the MBAThis study performs an in-depth analysis {{of the impact of}} technology change and organizational culture change on <b>Software</b> <b>Engineers.</b> <b>Software</b> Industry is fast moving and rapidly changing. The knowledge workers interact with computers and attempt to model a real world scenario in intangible computer software. This process is not made easier by the evolution of software technology, new hardware and various process methodologies. <b>Software</b> <b>Engineers</b> today need {{to have the ability to}} grasp new technologies and make use of them. Culture of an organization is the heart of what employees believe in. Organizational culture is defined as a way of life characterized by certain sets of behavior, assumptions, beliefs and attitudes. It is found that the organizational culture has a significant impact on the organizational effectiveness and the success. The author presents an experiment and an analysis to find the impact of technological and cultural change on <b>Software</b> <b>Engineers.</b> This impact is studied in view of motivation and turnover intention of the <b>Software</b> <b>Engineers.</b> Hypothesis tests are performed in order to find the significance of this impact. The results of the study show that there is a positive effect from technological change on <b>Software</b> <b>Engineer's</b> motivation and a negative effect from culture change on <b>Software</b> <b>Engineer's</b> motivation. Technology change does not seem to have a significant effect on <b>Software</b> <b>Engineer's</b> intentions to leave the organization but when it comes to the change of culture there is a significant effect. The <b>Software</b> <b>Engineers</b> wish to leave their organizations if a culture change is more frequent. The study concludes with recommendations of best practises to follow when technological and cultural change is needed...|$|R
25|$|During his Jeopardy! winning streak, Jennings was a <b>software</b> <b>engineer</b> for CHG Healthcare Services, a healthcare-placement firm in Holladay, Utah.|$|E
25|$|Eric Emerson Schmidt (born April 27, 1955) is an American <b>software</b> <b>engineer,</b> a businessman, and the Executive Chairman of Alphabet, Inc.|$|E
25|$|Sega studied {{computer}} science and philosophy at Stony Brook University. Throughout the years, {{he has worked}} primarily as a full-time <b>software</b> <b>engineer</b> for video games.|$|E
40|$|Many <b>software</b> <b>engineers</b> make {{implicit}} assumptions {{when working}} with incomplete software requirements. To study assumptions made by <b>software</b> <b>engineers</b> while converting incomplete requirements to software design or to implementation phase deliverables, we conducted an experiment with 251 <b>software</b> <b>engineers</b> from eight companies. The results of this empirical study showed that how <b>software</b> <b>engineers</b> responded (using source code, pseudo code, or prototype) to an incomplete requirement significantly impacted the number of explicit assumptions they made. We studied relationships {{between the number of}} explicit assumptions and the engineers' experience and educational backgrounds. On average, non-computer-background engineers made more explicit assumptions than computerbackground graduates. We found a significant relationship between the engineers' experience and the number of explicit assumptions made. We discuss the results and their implications. © 2009 IEEE...|$|R
5000|$|... #Subtitle level 3: <b>Software</b> <b>Engineers</b> Versus Traditional Engineers ...|$|R
40|$|Program {{comprehension}} is a {{very important}} activity during the development and the maintenance of programs. This activity has been actively studied in the past decades to present <b>software</b> <b>engineers</b> with the most accurate and—hopefully—most useful pieces of information on the organisation, algorithms, executions, evolution, and documentation of a program. Yet, only few work tried to understand concretely how <b>software</b> <b>engineers</b> obtain and use this information. <b>Software</b> <b>engineers</b> mainly use sight to obtain information about a program, usually from source code or class diagrams. Therefore, we use eye-tracking to collect data about the use of class diagrams by <b>software</b> <b>engineers</b> during program comprehension. We introduce a new visualisation technique to aggregate and to present the collected data. We also report the results and surprising insights gained from two case studies. ...|$|R
