11|30|Public
5000|$|AVERAGE_WIDTH: Average {{width of}} {{characters}} of this font; 0 means <b>scalable</b> <b>font</b> ...|$|E
5000|$|PIXEL_SIZE: Size of characters, in pixels; 0 (Zero) means a <b>scalable</b> <b>font</b> ...|$|E
5000|$|Scalable Text — Supports {{high quality}} {{scalable}} text {{that can be}} used by mobile and smart phones. The device manufacturers and mobile developers can replace the bitmaps at a single point size with <b>scalable</b> <b>font</b> that can be rendered at different font sizes.|$|E
50|$|<b>Font</b> synthesis: Provides <b>scalable</b> <b>fonts,</b> font {{management}} and storage of forms and fonts.|$|R
5000|$|Comprehensive Font Selection: Added {{support for}} <b>scalable</b> <b>fonts</b> ...|$|R
50|$|When {{producing}} postscript files, dvips embeds fonts {{inside the}} file. Most recent distributions will normally embed <b>scalable</b> <b>fonts,</b> {{also known as}} Type 1 fonts. Files generated with older distributions, however, may embed raster fonts. To substitute raster for <b>scalable</b> <b>fonts</b> in a postscript file {{in a situation where}} the original dvi file is unavailable use a utility called pkfix.|$|R
5000|$|SFNT is a font {{file format}} which can contain other fonts, such as PostScript, TrueType, OpenType, Web Open Font Format (WOFF) fonts and other. SFNT stands for spline font or <b>scalable</b> <b>font,</b> and was {{originally}} developed for TrueType fonts on the Macintosh {{and used by}} Apple Computer's QuickDraw. SFNT was named after the resource tag the Macintosh used internally to track font data.|$|E
50|$|In 2007 Ascender {{executed}} {{a license to}} distribute the Microsoft <b>scalable</b> <b>font</b> engine that supports hinting technology to enhance on-screen legibility. Ascender also created the Liberation fonts distributed by Red Hat. In the same year Ascender made the Microsoft ClearType Font Collection available to end users looking to utilize the fonts from the Microsoft Vista operating system on other platforms (including Mac, Unix and previous Windows versions).|$|E
5000|$|Bitstream Speedo, or Speedo, is an {{obsolete}} <b>scalable</b> <b>font</b> format {{created by}} Bitstream Inc. Speedo was used on Atari ST, Falcon, in the XyWrite word processor, and in very early versions of WordPerfect and Microsoft Windows. Speedo {{was replaced by}} more popular font types like Type 1 fonts. Before Speedo was considered obsolete it {{was supported by the}} X Window System through the speedo module, and most Linux distributions had a Speedo font package, but support was removed from X in the X11R7.0 release in 2005. Speedo fonts have the file extension [...]spd.|$|E
5000|$|Level 4 adds new {{features}} of the IBM LaserPrinter 4029 to the previous PPDS levels. These features include compression, <b>scalable</b> <b>fonts,</b> and enhanced orientations.|$|R
5000|$|ESC/P2 is a {{more recent}} variant of ESC/P by Epson. ESC/P2 is {{backward}} compatible with ESC/P, but adds commands for new printer features such as <b>scalable</b> <b>fonts</b> and enhanced graphics printing.|$|R
50|$|Truetype font {{support was}} added, {{providing}} <b>scalable</b> <b>fonts</b> to Windows applications, {{without having to}} resort to using a third-party font technology such as Adobe Type Manager. Windows 3.1 included the following fonts: Arial, Courier New, and Times New Roman, in regular, bold, italic, and bold-italic versions, as well as Symbol (a collection of <b>scalable</b> symbols). Truetype <b>fonts</b> could be scaled to any size and rotated, depending on the calling application.|$|R
5000|$|Having {{received}} {{applications to}} register copyrights for computer programs that generated typefaces using [...] "typeface in digitized form", the Copyright Office revisited the 1988 Policy Decision in 1992. The Office {{was concerned that}} the claims indicated a significant technological advance since the previous policy decision. One advance was <b>scalable</b> <b>font</b> representations (Bézier curves). This format can output a font at any resolution, and stores its data as control points rather than pixels. The Office acknowledged that these fonts might involve original computer instructions to generate typefaces, and thus be protectable as computer programs, but ended saying that [...] "The scope of the copyright will be, as in the past, a matter for the courts to determine." ...|$|E
50|$|Intellifont was a <b>scalable</b> <b>font</b> {{technology}} {{developed by}} Tom Hawkins at Compugraphic in Wilmington, Massachusetts {{during the late}} 1980s, the patent for which was granted to Hawkins in 1987. Intellifont fonts were hinted on a Digital Equipment Corporation VAX mainframe computer using Ikarus software. In 1990, printer and computing system manufacturer Hewlett-Packard adopted Intellifont scaling {{as part of its}} PCL 5 printer control protocol, and Intellifont technology was shipped with HP LaserJet III and 4 printers. In 1991, Commodore released AmigaOS 2.04, which contained the font engine bullet.library with native support for the format. Intellifont technology became part of Agfa-Gevaert's Universal Font Scaling Technology (UFST), which allows OEM's to produce printers capable of printing on either the Adobe systems PostScript or HP PCL language.|$|E
40|$|TEX {{began its}} &quot; with 7 -bit-encoded fonts, and has entered {{adolescence}} with 8 -bit encodings {{such as the}} Cork standard. Adulthood will require TEX to embrace 16 -bit encoding standards such as Unicode. Omega has debuted as a well-designed extension of the TEX formatter to accommodate Unicode, but much new work remains to extend the fonts and DVI translation {{that make up the}} bulk of a complete TEX implementation. Far more than simply doubling the width of some variables, such an extension implies a massive reorganization of many components of TEX. We describe the many areas of development needed to bring TEX fully into multi-byte encoding. To describe and illustrate these areas, we introduce the TrueTEX r ° Unicode edition, which implements many of the extensions using the Windows Graphics Device Interface and TrueType <b>scalable</b> <b>font</b> technology. Integrating TEX and Unicode You cannot use TEX for long without discoverin...|$|E
50|$|To remedy {{this problem}} of low quality printing, one can use Heiko Oberdiek's utility called pkfix. The input of pkfix is a PostScript file {{generated}} by dvips (with versions at 5.58 or newer) and its output is another PostScript file, this time, with the bitmapped <b>fonts</b> substituted by <b>scalable</b> <b>fonts</b> (if possible).|$|R
50|$|The SVG Working Group is {{a working}} group created by the World Wide Web Consortium (W3C) to address {{the need for an}} {{alternative}} to the PostScript document format. The PostScript format was unable to create <b>scalable</b> <b>fonts</b> and objects without creating files which were inordinately larger than a file which used unscalable fonts and objects.|$|R
50|$|Font {{rasterization}} is {{the process}} of converting text from a vector description (as found in <b>scalable</b> <b>fonts</b> such as TrueType fonts) to a raster or bitmap description. This often involves some anti-aliasing on screen text to make it smoother and easier to read. It may also involve hinting—information embedded in the font data that optimizes rendering details for particular character sizes.|$|R
40|$|In Chinese {{calligraphy}} cao shu {{is regarded}} as a kind of free form art which differs from other styles greatly in its less constrained strokes and brush textures. In this paper we present a framework for synthesizing cao shu realistically. In our system, we adopt different brush texture patches (BTP) collected from hand-written artworks to represent the solid and hollow strokes appearing in cao shu. BTP can be extended to fit the required length by use of texture synthesis, smooth transitions between adjacent BTP over the stroke are achieved by a Markov Random Field (MRF) -based interpolation technique. With a few parameters we can reproduce typical stroke forms of cao shu, variations of brush texture, the ink amount as well as wetness of the stroke. Our model is also able to synthesize characters of cao shu with different levels of detail that are applicable to <b>scalable</b> <b>font</b> design, very high-quality publishing, computer-aided education and electronic practice of calligraphy...|$|E
40|$|What is {{the most}} {{important}} innovation in typography in the past 25 years? Answers will vary, but most people will probably cite technological innovations such as the emergence of the PostScript, TrueType and OpenType <b>scalable</b> <b>font</b> technologies [1], or perhaps mention the coming of age of the Unicode standard originally proposed by Joseph Becker, Lee Collins, and Mark Davis back in 1988 [2]. Others might cite the emergence of the World Wide Web in 1991 [3]. Asking this question today, few would be likely to list participatory democracy as an important factor in modern digital typography. However, when we look back on the history of typography in five or ten years, I believe this term will rank highly. In the past few years, an increasing number of Open Source Unicode fonts of very high quality for specific scripts and specific uses (scholarly, scientific, etc.) have been released by dedicated groups and individuals for the common benefit. The emergence of George Williams ’ Open Source outline font editor, FontForge [4], has certainly {{played an important role in}} lowering the barrier to entry, enabling amateurs, students, and professional designers alike to design digital type. SIL’s Open Font License [5], developed in 2005, has already had a noticeable impact in facilitating the development of an open typographic community by providing a legal framework and infrastructure for the worldwide development, sharing and improvement of fonts. One need only take a cursory look at the excellent work being done by a wide spectrum of organizations —like SIL International [6]...|$|E
50|$|The Glyph Bitmap Distribution Format (BDF) by Adobe is a {{file format}} for storing bitmap fonts. The content {{takes the form}} of a text file {{intended}} to be human- and computer-readable. BDF is typically used in Unix X Window environments. It has largely been replaced by the PCF font format which is somewhat more efficient, and by <b>scalable</b> <b>fonts</b> such as OpenType and TrueType fonts.|$|R
50|$|Portable Compiled Format (PCF) is a {{bitmap font}} format used by X Window System in its core font system, {{and has been}} used for decades. PCF fonts are usually installed, by default, on most Unix-based {{operating}} systems, and are used in terminals such as xterm. PCF fonts replaced BDF due to a slight efficiency increase, however most applications have moved on to <b>scalable</b> <b>fonts.</b>|$|R
50|$|Lotus {{obtained}} Ami Pro {{to round}} out their office suite by acquiring Samna in 1990. Lotus continued to develop Ami Pro further with version 3 released in 1992. Version 3.1 is the last version of Ami Pro released (all versions were 16 bit). The Windows versions of Ami Pro were also bundled with Adobe Type Manager for Windows, as Windows had poor support for <b>scalable</b> <b>fonts</b> before the introduction of TrueType.|$|R
50|$|In 1990, GeoWorks {{released}} GEOS for IBM PC compatible systems, PC/GEOS. Also called GeoWorks Ensemble, it was {{incompatible with}} the earlier 8-bit versions of GEOS for Commodore and Apple II computers, but provided numerous enhancements, including <b>scalable</b> <b>fonts</b> and multitasking even on XT and AT-class PC clones. GeoWorks saw a market opportunity to provide a graphical user interface for the 16 million older model PCs that were unable to run Microsoft Windows 2.x.|$|R
50|$|Some older {{versions}} of dvips with embedded bitmapped fonts, which represented letters and symbols as pictures {{at a fixed}} resolution (for instance, at 300 dpi). When such files are printed on newer devices (some with resolution of 1200 dpi), {{the letters of the}} files that have bitmapped fonts display a remarkably low quality, with jagged lines on curves and diagonals. One solution to this problem is to substitute the bitmapped <b>fonts</b> with <b>scalable</b> <b>fonts</b> (known among PostScript users as Type 1 fonts).|$|R
25|$|In {{response}} to the impending release of OS/2 2.0, Microsoft developed Windows 3.1 (first released in April 1992), which included several improvements to Windows 3.0, such as display of TrueType <b>scalable</b> <b>fonts</b> (developed jointly with Apple), improved disk performance in 386 Enhanced Mode, multimedia support, and bugfixes. It also removed Real Mode, and only ran on an 80286 or better processor. Later Microsoft also released Windows 3.11, a touch-up to Windows 3.1 which included all of the patches and updates that followed the release of Windows 3.1 in 1992.|$|R
50|$|PC/GEOS is a light-weighted {{object-oriented}} multitasking graphical {{operating system}} with sophisticated window and desktop management featuring <b>scalable</b> <b>fonts.</b> It is mostly written in an object-oriented x86 assembly language dialect and some C/C++ {{and is designed}} to run atop DOS (similar to Microsoft Windows up to Windows Me). GEOS was originally developed by Berkeley Softworks in 1990, which later became GeoWorks Corporation, and it is continued to be maintained by BreadBox Computer Company. Related software suites were named Ensemble and New Deal Office. Adaptations exist for various palmtops, and 32-bit systems with non-x86-CPUs.|$|R
50|$|FC Version 7.5 was {{released}} on 5 August 2013. It is the first font editor to provide support for <b>scalable</b> colour <b>font</b> technology, which is available in Windows 8.1.|$|R
40|$|With {{embedded}} systems gaining high resolution displays and powerful cpus, {{the desire for}} sophis-ticated graphical user interfaces can be realized in even the smallest of systems. While the cpu power available for a given power budget has in-creased dramatically, these tiny systems remain severely memory constrained. This unique envi-ronment presents interesting challenges in graphi-cal system design and implementation. To explore this particular space, a new window system, twin, has been developed. Using ideas from modern window systems in larger environments, twin of-fers overlapping translucent windows, anti-aliased graphics and <b>scalable</b> <b>fonts</b> in a total memory budget of 100 kb...|$|R
50|$|OpenType is {{a format}} for <b>scalable</b> {{computer}} <b>fonts.</b> It {{was built on}} its predecessor TrueType, retaining TrueType's basic structure and adding many intricate data structures for prescribing typographic behavior. OpenType is a registered trademark of Microsoft Corporation.|$|R
50|$|The misc-fixed fonts {{have been}} much less {{commonly}} used since support for <b>scalable</b> outline <b>font</b> formats such as Type 1, TrueType and OpenType has become available for X. However, they are still commonly used with terminal emulators, such as xterm, and as a fallback font for the many Unicode characters not yet found in common outline fonts.|$|R
40|$|We present {{algorithms}} {{for constructing}} iso-contours from image data or fitting scattered point data C 1, C 2 or C 3 piecewise smooth chains of single sheeted real cubic algebraic curve segments called cubic A-splines (short for cubic algebraic splines). Using cubic A-splines we achieve data fitting {{with either a}} higher order of continuity or greater local flexibility for fixed continuity, than numerous prior schemes. Key Words. iso-contours, scattered points, curve fitting, algebraic splines, cubic 1 Introduction Generating contours in image data, reconstructing digitized signals, and designing <b>scalable</b> <b>fonts</b> are {{only some of the}} several applications of spline curve fitting techniques. In this paper, we generalize past fitting schemes with conic splines [4, 16, 17, 18] and even rational parametric splines [7, 13, 19], We exhibit efficient techniques to deal with cubic algebraic splines (A-splines) achieving fits with small number of pieces yet higher order of smoothness/contin [...] ...|$|R
40|$|Bitstream Vera was {{designed}} by Jim Lyles of Bitstream, Inc., {{in cooperation with the}} Gnome Foundation as a high quality <b>scalable</b> free <b>font</b> for use with free open-source software [4]. The Bitstream Vera family includes serif, sans serif, and monospaced fonts, 1 and all three fonts have normal, oblique, bold, and bold oblique faces. Bitstream Vera is primarily intended as a screen font (though it also works wel...|$|R
2500|$|The {{distinction}} between font and typeface {{is that a}} font designates a specific member of a type family such as roman, boldface, or italic type, while typeface designates a consistent visual appearance or style {{which can be a}} [...] "family" [...] or related set of fonts. For example, a given typeface such as Arial may include roman, bold, and italic fonts. [...] In the metal type era, a font also meant a specific point size, but with digital <b>scalable</b> outline <b>fonts</b> this distinction is no longer valid, as a single font may be scaled to any size.|$|R
40|$|Because {{a typical}} Asian {{typeface}} can consist {{of more than}} 12, 000 glyphs, traditional <b>scalable</b> outline-based <b>fonts</b> require 5 - 10 MBs of memory. This requirement is particularly problematic in mobile devices (e. g. cell phones and PDAs) and embedded systems (e. g. car navigation systems) where memory is at a premium. Existing commercial solutions (e. g. by Bitstream and Monotype Imaging) represent glyphs using simplified uniform-width strokes. However, these light-weigh (250 KBs) stroke-based fonts lack the detail, expressiveness, and variety needed for optimal legibility and true cultural acceptance (Figure 1). Although METAFONT [Knuth 1986] is stroke-based and provides sufficient detail and expressiveness, it requires the type designer to be proficient in mathematics, rasterization and programming. ACM SIGGRAP...|$|R
50|$|Beta BASIC also {{drove the}} Spectrum's 256x192 pixel display directly, {{eliminating}} the restrictions of the ROM's 32-column text display. Beta BASIC offered <b>scalable</b> screen <b>fonts,</b> {{with a special}} soft font which was only 4 pixels wide but still legible. This meant that Beta BASIC could display 64 columns of text across the screen, making it more comparable to newer 8-bit machines' 80-column displays. If the user was prepared to tolerate characters being displayed without gaps between them, an 85 column display was possible. This was not very readable but did allow easy porting of BASIC applications designed for an 80-column screen. Text size could be controlled programmatically so that part of a program's display might use 64-column text, part 32-column text and enlarged or reduced intermediate sizes.|$|R
