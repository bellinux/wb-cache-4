14|56|Public
5|$|Many {{parallel}} programs {{require that}} their subtasks act in synchrony. This requires {{the use of}} a barrier. Barriers are typically implemented using a <b>software</b> <b>lock.</b> One class of algorithms, known as lock-free and wait-free algorithms, altogether avoids the use of locks and barriers. However, this approach is generally difficult to implement and requires correctly designed data structures.|$|E
25|$|Dennett {{finds that}} many people find it {{difficult}} to see this, so he uses the case of RoboMary to further illustrate {{what it would be like}} for Mary to possess such a vast knowledge of the physical workings of the human brain and color vision. RoboMary is an intelligent robot who, instead of the ordinary color camera-eyes, has a <b>software</b> <b>lock</b> such that she is only able to perceive black and white and shades in-between.|$|E
2500|$|In the iPhone 7, Apple added a <b>software</b> <b>lock</b> that {{prevents}} individuals from attempting {{to replace the}} home button on their own. Users are now required {{to go to an}} Apple Store to have repairs done, with [...] "recalibration" [...] of the button being necessary. This is a step further than Apple went with iPhone 5S, 6 and 6S, where only Touch ID functionality would get disabled but the [...] "return-to-home" [...] functionality still worked.|$|E
2500|$|On June 9, 2016, Tesla reintroduced the 60 and 60D, {{which has}} a 75kWh battery, <b>software</b> <b>locked</b> to 60kWh {{and there is an}} option to {{purchase}} an unlock for the 75kWh capacity. The early 2016 refresh also offers the [...] "Bioweapon Defense Mode" [...] airfilter first offered on the Model X.|$|R
5000|$|The kiosk {{industry}} {{is divided into}} three segments: kiosk hardware, kiosk software, and kiosk application. Kiosk <b>software</b> <b>locks</b> down your operating system (be it Apple, Windows, Android, or Linux) to restrict access and/or functionality of a kiosk hardware device. This allows for users to interact with an application that serves a self-service purpose such as those mentioned above.|$|R
50|$|Adobe Digital Editions {{uses the}} {{proprietary}} ADEPT (Adobe Digital Experience Protection Technology) Digital Rights Management scheme, {{which is also}} implemented on some e-book readers, including iPads and many Android devices, but not Kindles. The <b>software</b> <b>locks</b> content to up to six machines and allows the user to view the content on each of them. Barnes & Noble (B&N) ebooks are protected with a variant of ADEPT.|$|R
50|$|Many {{parallel}} programs {{require that}} their subtasks act in synchrony. This requires {{the use of}} a barrier. Barriers are typically implemented using a <b>software</b> <b>lock.</b> One class of algorithms, known as lock-free and wait-free algorithms, altogether avoids the use of locks and barriers. However, this approach is generally difficult to implement and requires correctly designed data structures.|$|E
50|$|Dennett {{finds that}} many people find it {{difficult}} to see this, so he uses the case of RoboMary to further illustrate {{what it would be like}} for Mary to possess such a vast knowledge of the physical workings of the human brain and color vision. RoboMary is an intelligent robot who, instead of the ordinary color camera-eyes, has a <b>software</b> <b>lock</b> such that she is only able to perceive black and white and shades in-between.|$|E
50|$|The state-court suit, {{filed by}} the law office of Damian R. Fernandez on behalf of California {{resident}} Timothy P. Smith, sought an injunction barring Apple from selling iPhones with a <b>software</b> <b>lock</b> and $200 million in damages. In Smith v. Apple Inc., the plaintiffs said that Apple failed to disclose to purchasers its five-year agreement with AT&T when they bought iPhones with a two-year contract and cited the Sherman Act's prohibition of monopolies.|$|E
50|$|In the United States, the {{copyright}} fair use defense {{has been successfully}} invoked in decompilation cases. For example, in Sega v. Accolade, {{the court held that}} Accolade could lawfully engage in decompilation in order to circumvent the <b>software</b> <b>locking</b> mechanism used by Sega's game consoles. Additionally, the Digital Millennium Copyright Act (PUBLIC LAW 105-304) has proper exemptions for both Security Testing and Evaluation in §1205(i), and Reverse Engineering in §1205(f).|$|R
40|$|Accessing shared {{resources}} in multicore systems is usually pro-tected by a <b>software</b> <b>locking</b> mechanism, which itself is imple-mented through atomic operations. This {{can result in}} a large syn-chronization overhead, which, in the context of real-time systems, increases the worst-case execution time and may void a task set’s schedulability. In this paper we present a hardware locking mech-anism to reduce the synchronization overhead. The solution is implemented for the chip-multiprocessor version of the Java Op-timized Processor in the context of safety-critical Java. The im-plementation is compared to a software solution. The performance and the hardware cost are evaluated...|$|R
40|$|Synchronization {{primitives}} {{for large}} shared-memory multiprocessors need to minimize latency and contention. <b>Software</b> queue-based <b>locks</b> address these goals, but suffer if a process {{near the end}} of the queue waits for a preempted process ahead of it. To solve this problem, we present two queue-based locks that recover from in-queue preemption. The simpler, faster lock employs an extended kernel interface that shares information in both directions across the user-kernel boundary. Results from experiments with real and synthetic applications on SGI and KSR multiprocessors demonstrate that high-performance <b>software</b> spin <b>locks</b> are compatible with multiprogramming on both largescale and bus-based machines. ...|$|R
5000|$|In the iPhone 7, Apple added a <b>software</b> <b>lock</b> that {{prevents}} individuals from attempting {{to replace the}} home button on their own. Users are now required {{to go to an}} Apple Store to have repairs done, with [...] "recalibration" [...] of the button being necessary. This is a step further than Apple went with iPhone 5S, 6 and 6S, where only Touch ID functionality would get disabled but the [...] "return-to-home" [...] functionality still worked.|$|E
5000|$|The tying of Apple {{products}} {{is an example}} of commercial tying that has caused recent controversy. When Apple initially released the iPhone on June 29, 2007, it was sold exclusively with AT&T (formerly Cingular) contracts in the United States. To enforce this exclusivity, Apple employed a type of <b>software</b> <b>lock</b> that ensured the phone would not work on any network besides AT&T's. Related to the concept of bricking, any user who tried to unlock or otherwise tamper with the locking software ran the risk of rendering their iPhone permanently inoperable.This caused complaints among many consumers, as they were forced to pay an additional early termination fee of $175 if they wanted to unlock the device safely for use on a different carrier. [...] Other companies such as Google complained that tying encourages a more closed-access-based wireless service. Many questioned the legality of the arrangement, and in October 2007 a class-action lawsuit was filed against Apple, claiming that its exclusive agreement with AT&T violates California antitrust law. The suit was filed by the Law Office of Damian R. Fernandez on behalf of California resident Timothy P. Smith, and ultimately sought to have an injunction issued against Apple to prevent it from selling iPhones with any kind of <b>software</b> <b>lock.</b>|$|E
5000|$|In 2009, picoSpin, {{based in}} Boulder, Colorado, {{launched}} a small (7 x 5.75 x 11.5”) 45 MHz spectrometer with good resolution (< 1.8 Hz) and mid-to-low-range sensitivity that weighs 4.76 kg (10.5 lbs) and can acquire a 1D 1H or 19F spectrum. picoSpin {{was acquired by}} Thermo Fisher Scientific in December 2012, and subsequently renamed the product Thermo Scientific picoSpin 45. [...] Instead of the traditional static 5 mm NMR tubes, the picoSpin 45 spectrometer uses a flow-through system that requires sample injection into a 1/16” or 1/32” capillary. Deuterated solvents are optional due {{to the presence of}} a <b>software</b> <b>lock.</b> It needs only a web browser on any external computer or mobile device for control as the spectrometer has a built-in web server board; no installed software on a dedicated PC is required. In August 2013 a second version was introduced, the Thermo Scientific picoSpin 80, that operates at 82 MHz with a resolution of 1.48 Hz and weighs 19 kg.|$|E
5000|$|Below is {{the history}} of Folder <b>Lock</b> <b>software</b> written in yearly format; ...|$|R
40|$|The paper {{reports a}} mobile {{application}} that {{allows users to}} share photos with other co-present users by synchronizing the display on multiple mobile devices. Various floor control policies (<b>software</b> <b>locks</b> that determine when someone can control the displays) were implemented. The behaviour of groups of users was studied to determine how people would use this application for sharing photos and how various floor control policies affect this behaviour. Explicit policies was shown {{to be the best}} strategy for structured presentations, but when all locks were removed, the users created a new form of social interaction which seemed to be a more compelling use of the technology than the original, intended, application...|$|R
50|$|Kiosk {{software}} is the system and user interface software designed for an interactive kiosk or Internet kiosk. Kiosk <b>software</b> <b>locks</b> down the application {{in order to protect}} the kiosk from users. Kiosk software may offer remote monitoring to manage multiple kiosks from another location. Email or text alerts may be automatically sent from the kiosk for daily activity reports or generated in response to problems detected by the software. Other features allow for remote updates of the kiosks content and the ability to upload data such as kiosk usage statistics.Kiosk {{software is}} used to manage a touchscreen, allowing users to touch the monitor screen to make selections. A virtual keyboard eliminates the need for a computer keyboard.|$|R
40|$|A commutated {{automatic}} {{gain control}} (AGC) system was designed and built for a prototype Loran C receiver. The receiver uses a microcomputer to control a memory aided phase-locked loop (MAPLL). The microcomputer also controls the input/output, latitude/longitude conversion, and the recently added AGC system. The circuit designed for the AGC is described, and bench and flight test results are presented. The AGC circuit described actually samples starting at a point 40 microseconds after a zero crossing determined by the <b>software</b> <b>lock</b> pulse ultimately generated by a 30 microsecond delay and add network in the receiver front end envelope detector...|$|E
40|$|The rise of {{multicore}} computing {{has made}} synchronization necessary {{to overcome the}} challenge of sharing data between multiple threads. Locks are critical synchronization primitives for maintaining data integrity and preventing race conditions in multithreaded applications. This thesis explores the lock design space. We propose a hardware lock implementation, called the lock arbiter, which reduces lock latency while minimizing hardware overheads and maintaining high levels of fairness between threads. We evaluate our mechanism against state-of-the-art <b>software</b> <b>lock</b> algorithms and find that our mechanism has comparable performance and fairness. by Rachael Harding. Thesis: S. M., Massachusetts Institute of Technology, Department of Electrical Engineering and Computer Science, 2014. Cataloged from PDF version of thesis. Includes bibliographical references (pages 53 - 55) ...|$|E
40|$|International audienceHardware lock-elision (HLE) {{introduces}} concurrency into legacy lock-based code by optimistically executing critical {{sections in}} a fast-path as hardware transactions. Its main limitation {{is that in}} case of repeated aborts, it reverts to a fallback-path that acquires a serial lock. This fallback-path lacks hardware- software concurrency, because all fast-path hardware transactions abort {{and wait for the}} completion of the fallback. <b>Software</b> <b>lock</b> elision has no such limitation, but the overheads incurred are simply too high. We propose amalgamated lock-elision (ALE), a novel lock-elision algorithm that provides hardware-software concurrency and efficiency: the fallback-path executes concurrently with fast-path hardware transactions, while the common-path fast-path reads incur no overheads and proceed without any instrumentation. The key idea in ALE is to use a sequence of fine-grained locks in the fallback-path to detect conflicts with the fast-path, {{and at the same time}} reduce the costs of these locks by executing the fallback-path as a series segments, where each segment is a dynamic length short hardware transaction. We implemented ALE into GCC and tested the new system on Intel Haswell 16 -way chip that provides hardware transactions. We benchmarked linked-lists, hash-tables and red-black trees, as well as converting KyotoCacheDB to use ALE in GCC, and all show that ALE significantly outperforms HLE...|$|E
50|$|The <b>software</b> {{periodically}} <b>locks</b> {{the screen}} while showing an animated character, “Miss Workrave”, walks the user through various stretching exercises, urges {{them to take}} a coffee break and sets a daily work time limit after which it automatically triggers an action, such as supend the machine.|$|R
50|$|Folder Lock {{can create}} {{multiple}} lockers and store files in them. These lockers are actually folders which are encrypted. There {{is virtually no}} way to access them except to enter the correct password. Multiple lockers can have multiple passwords which aren't related with the main Folder <b>Lock</b> <b>software.</b> This means that there's no way to access these lockers if the user does not know the correct password, {{even if he has}} access to the main Folder <b>Lock</b> <b>software.</b>|$|R
40|$|This {{dissertation}} researches current {{approaches to}} photo sharing. We {{have found that}} most current methods of photo sharing are not as compelling as traditional photo sharing - with the increasing in popularity of digital photography, consumers do not print photos as often as before and thus typically require a group display (such as a PC) to view their photographs collectively. This dissertation describes a mobile application that attempts to support traditional photo sharing activities by allowing users to share photos with other co-present users by synchronizing the display on multiple mobile devices. Various floor control policies (<b>software</b> <b>locks</b> that determine when someone can control the displays) were implemented. The behaviour of groups of users was studied to determine how people would use this application for sharing photos and how various floor control policies affect this behaviour...|$|R
40|$|In 2007, George Hotz {{circumvented}} the <b>software</b> <b>lock</b> on his iPhone {{that prevented}} him from using the device on a wireless network other than AT 2 ̆ 6 T 2 ̆ 7 s. When oilier Phone purchasers similarly freed themselves from AT 2 ̆ 6 T 2 ̆ 7 s service, Apple responded by using a software update to disable the altered iPhones. This back-and-forth between consumers and Apple raises two important questions: can consumers legally unlock their iPhones, and, if so, under what body of law? Although an exemption to the Digital Millennium Copyright Act (the 2 ̆ 2 DMCA 2 ̆ 2) appears to allow consumers to circumvent cell phone locks under copyright law, the regulation is of little practical use to consumers seeking to avoid AT 2 ̆ 6 T 2 ̆ 7 s allegedly inferior service. Instead, they should challenge the underlying business arrangement between Apple and AT 2 ̆ 6 T by arguing that tying {{the purchase of the}} iPhone to AT 2 ̆ 6 T 2 ̆ 7 s service violates Section 1 of the Sherman Antitrust Act. This Note examines this argument and, in doing so, illuminates the limitations of the DMCA and demonstrates how it encourages content providers to engage in anticompetitive behavior...|$|E
40|$|Thomas Jefferson National Accelerator Facility (Jefferson Lab) uses digital {{feedback}} loops (less than 1 Hz update rate) to correct drifts in the Continuous Electron Beam Accelerator Facility’s (CEBAF) electron beam orbit and energy. Previous incarnations of these loops used response matrices that were computed by a numerical {{model of the}} machine. Jefferson Lab is transitioning this feedback system to use empirically determined response matrices whereby the software introduces small orbit or energy deviations using the loop’s actuators and measures the system response with the loop’s sensors. This method is in routine use for orbit correction. This paper will describe the problem that both <b>software</b> <b>lock</b> systems are designed to address. A brief discussion of the design and operational experience of the numerical model based orbit and energy lock software system will follow. Next, the empirical orbit lock system will be described. Finally, future plans for an empirical energy lock system will be presented. 1 PROBLEM DESCRIPTION The CEBAF electron beam experiences slow drifts in orbit and energy on the time scale of minutes. The magnitude of the orbit drift does not exceed 1 mm in position and 0. 1 mrad in angle. The magnitude of the energy drift is {{on the order of}} 0. 001 dp/p [1]. Because the time scale is relatively large, these problems do not require specially designed controls hardware to detect and correct the drifts. Therefore, they can be addressed using software running on operator workstations communicating with existing beam diagnostic hardware for sensors, namely beam position monitors (BPMs), and standard CEBAF corrector magnet and RF cavity controls for actuators. Device controls at Jefferson Lab are written using the Experimental Physics and Industrial Control System (EPICS) toolkit [2]. CEBAF can simultaneously deliver to its end station users up to three different beam energies from five total possibilities. Recall that CEBAF is a recirculating linac where its two main anti-parallel linac sections are joine...|$|E
5000|$|The {{bill would}} have criminalized the act of circumventing, or making {{available}} to the public the ability to circumvent, digital rights management <b>software</b> <b>locks.</b> These restrictions were described as [...] "arguably worse than those found in the U.S." [...] While explicit mentions of [...] "videocassettes" [...] in Bill C-61 were replaced with technology neutral terms, the copying of DRM encumbered media such as DVDs was still prohibited by Bill C-32. Bill C-32 was also interpreted as banning the user of region-free DVD players. According to CBC News, the {{bill would have}} even criminalized [...] "websites designed to encourage violation and piracy". When describing the main principle of the bill, Michael Geist said [...] "anytime a digital lock is used - whether on books, movies, music, or electronic devices - the lock trumps virtually all other rights." ...|$|R
50|$|Transactional Synchronization Extensions (TSX) is an {{extension}} to the x86 instruction set architecture (ISA) that adds hardware transactional memory support, speeding up execution of multi-threaded <b>software</b> through <b>lock</b> elision. According to different benchmarks, TSX can provide around 40% faster applications execution in specific workloads, and 4 - 5 times more database transactions per second (TPS).|$|R
50|$|Although {{the feature}} of save games might suggest you can retry {{after a game}} over, a notable {{exception}} is in games where save games are deleted when it is game over. Several names are used to describe this feature: 'permadeath', 'iron man', 'hardcore', and the feature has developed over the years from being {{the only kind of}} save system per game to the more modern 'suspend game' feature among regular save points. For online games the game's progress is maintained on the remote server. In some games, upon resuming the game from a save game, the <b>software</b> <b>locks</b> or marks the save game. Early examples like Moria (video game), Diablo II 'hardcore' mode where the character save game is managed by the battle.net server. Depending on the game the feature may be feasible or not, depending on how the game handles interrupting or ending a game session.|$|R
50|$|GateKeeper {{software}} uses {{a dashboard}} that displays the device's signal strength, {{allows users to}} select or configure lock settings, manage user credentials, and set the range at which the computer detects the device's presence. The GateKeeper software provides the user options to enable two-factor authentication (2-FA) for computer access by requiring the user to enter a PIN and carry the GateKeeper to login.If the USB dongle lock is ever removed from the computer, the <b>software</b> immediately <b>locks</b> the computer.|$|R
40|$|Synchronization {{primitives}} {{for large}} scale multiprocessors {{need to provide}} low latency and low contention to achieve good performance. Queue-based <b>locks</b> (implemented in <b>software</b> with fetch and 8 instructions) can greatly reduce contention and improve overall performance by arranging for processors to spin only on local locations. Unfortunately, queued locks exhibit poor behavior {{in the presence of}} multiprogramming: a process {{near the end of the}} queue, in addition to waiting for any process that is preempted during its critical section, must also wait for any preempted processes ahead of it in the queue. To solve this problem, we present two queue-based locks that recover from in-queue preemption. The rst lock employs the kernel interface of the NYU Symunix project. The second employs an extended interface that shares information in both directions across the user-kernel boundary, resulting in simpler code and better performance. We describe experiments with these locks in both real and synthetic applications on Silicon Graphics and Kendall Square multiprocessors. Results demonstrate the feasibility of high performance <b>software</b> <b>locks</b> with multiprogramming on scalable systems, and show competitive behavior on smaller, bus based machines. 3...|$|R
40|$|Presentation {{focusing}} on <b>software</b> synchronization, thread <b>locking,</b> transactional memory, and relativistic programming. Hash table algorithms {{are presented with}} examples of relativistic list insertion and removal, and related data structures. Existing approaches are compared to new methodologies and future work with relativistic data structures...|$|R
50|$|Screen Pass is a Windows-based screen <b>locking</b> <b>software</b> {{for network}} administrators which {{provides}} them enforcement of password security and centrally control security options over idle workstations. Its advanced features include automatic logoff, auto shutdown, administrator override, and record of all workstation events.|$|R
50|$|Poor use of file locks, {{like any}} {{computer}} lock, {{can result in}} poor performance or in deadlocks. File locking may also refer to additional security applied by a computer user either by using Windows security, NTFS permissions or by installing a third party file <b>locking</b> <b>software.</b>|$|R
5000|$|As of the 2012-2013 school year, Archbishop Mitty High School was {{the first}} high school in America to give Apple Inc. iPad tablet {{computers}} to all students and teachers. The 2010-2011 school year was a pilot year where a few select students were given iPads as a test. The iPads are equipped with certain electronic books and application programs ("apps") that the students are allowed to use. The iPod/music <b>software</b> are <b>locked,</b> students are only allowed to use these apps outside of the classroom. However the apps are strictly educational only.|$|R
40|$|AbstractThis paper {{discusses}} the experimental {{design of a}} grid-*connected photovoltaic system based on 16 -bit Microprocessor (MCU) SPMC 75 F 2413 A. In this paper, the SPMC 75 F 2413 A as the main topology control the main circuit of the Single-phase bridge type inverter. The system can {{track the maximum power}} point by detecting PV(photovoltaic) voltage, current and grid-connected output voltage and current, and simultaneously can track the frequency and phase by the <b>software</b> phase <b>locked</b> loop. The testing results of the grid-connected photovoltaic system shows that the grid-connected voltage and network voltage are synchronous, and the system is feasible and practical...|$|R
