0|10000|Public
50|$|In WSDL, {{a binding}} defines how to map between the {{abstract}} PortType {{and a real}} service format and protocol. For example, the SOAP binding defines <b>the</b> encoding <b>style,</b> <b>the</b> SOAPAction <b>header,</b> <b>the</b> namespace of the body (the targetURI), and so forth.|$|R
50|$|In {{addition}} to <b>the</b> presentation <b>style,</b> <b>the</b> content-disposition <b>header</b> also provides fields for specifying {{the name of}} the file, the creation date and modification date, which can be used by the reader's mail user agent to store the attachment.|$|R
5000|$|The {{original}} MIME specifications only {{described the}} structure of mail messages. They {{did not address the}} issue of presentation <b>styles.</b> <b>The</b> content-disposition <b>header</b> field was added in RFC 2183 to specify <b>the</b> presentation <b>style.</b> A MIME part can have: ...|$|R
40|$|For {{the fourth}} {{edition of the}} KOMA-Script book I’ve used a special <b>style</b> for <b>the</b> page <b>header,</b> in which <b>the</b> page number is {{separated}} by a small black bar from the running head and moved out into the margin. This was accomplished by using the KOMA-Script package scrpage 2. Although the KOMA-Script book was created using a KOMA-Script class, use of the scrpage 2 package {{is not limited to}} those classes. It may also be used with several other classes, e. g., the standard classes. ...|$|R
50|$|Extension headers carry {{optional}} Internet Layer information, and {{are placed}} between <b>the</b> fixed <b>header</b> and <b>the</b> upper-layer protocol <b>header.</b> <b>The</b> <b>headers</b> form a chain, using <b>the</b> Next <b>Header</b> fields. <b>The</b> Next <b>Header</b> field in <b>the</b> fixed <b>header</b> indicates <b>the</b> type {{of the first}} extension header; <b>the</b> Next <b>Header</b> field of <b>the</b> last extension <b>header</b> indicates <b>the</b> type of <b>the</b> upper-layer protocol <b>header</b> in <b>the</b> payload of the packet.|$|R
5000|$|After <b>the</b> <b>header,</b> <b>the</b> file {{is split}} into packets called [...] "FLV tags", which have 15-byte packet <b>headers.</b> <b>The</b> first four bytes denote {{the size of}} the {{previous}} packet/tag (including <b>the</b> <b>header),</b> and aid in seeking backward.|$|R
5000|$|The {{last two}} bytes of <b>the</b> <b>header</b> are a {{checksum}} {{of the previous}} 255 words, to verify the validity of <b>the</b> <b>header.</b>|$|R
2500|$|<b>The</b> RTP <b>header</b> has {{a minimum}} size of 12 bytes. After <b>the</b> <b>header,</b> {{optional}} header extensions may be present. This {{is followed by}} the RTP payload, the format of which is determined by the particular class of application. The fields in <b>the</b> <b>header</b> are as follows: ...|$|R
30|$|<b>The</b> {{structure}} of <b>header</b> tree for decoding {{is very simple}} for the proposed technique. According to Fig.  2, {{it does not require}} to store the entire codeword in <b>the</b> <b>header</b> tree for a symbol. The most frequent symbol is stored first in <b>the</b> <b>header</b> which confirms faster decoding. Moreover, retrieving two bits at a time during decoding process also speeds up the process. In the decoding phase, matching (two bits at a time) from encoded bit string with <b>the</b> <b>header</b> starts from level 1 in <b>the</b> <b>header</b> tree. If there is any symbol with codeword of length 2, then it will be found in level 1 in <b>the</b> <b>header</b> tree. Likewise, matching a symbol with codeword of length 4 both the level 1 and level 2 have to be searched. The simplicity of <b>the</b> <b>header</b> tree also contributes to speed up the decoding process.|$|R
50|$|<b>The</b> <b>header</b> begins <b>the</b> {{file and}} {{provides}} metadata describing {{the body of}} <b>the</b> file. <b>Header</b> lines are denoted as starting with #. Special keywords in <b>the</b> <b>header</b> are denoted with ##. Recommended keywords include fileformat, fileDate and reference.|$|R
5000|$|<b>The</b> <b>header</b> of both ASCII and {{binary files}} is ASCII text. Only the {{numerical}} data that follows <b>the</b> <b>header</b> is different between <b>the</b> two versions.The <b>header</b> always {{starts with a}} [...] "magic number", a line containing ...|$|R
5000|$|The {{method of}} CRC-Based framing re-uses <b>the</b> <b>header</b> cyclic {{redundancy}} check (CRC), which is present in ATM and other similar protocols, to provide framing on the link with no additional overhead. In ATM, this field is known as <b>the</b> <b>Header</b> Error Control/Check (HEC) field. It consists of {{the remainder of the}} division of the 32 bits of <b>the</b> <b>header</b> (taken as <b>the</b> coefficients of a polynomial over the field with two elements) by the polynomial [...] The pattern 01010101 is XORed with the 8-bit remainder before being inserted in the last octet of <b>the</b> <b>header.</b>|$|R
5000|$|... sushw Set {{one or more}} Header Words using trace number, mod and integer divide {{to compute}} <b>the</b> <b>header</b> word values or input <b>the</b> <b>header</b> word values from a file ...|$|R
50|$|However, RFC-822 {{messages}} are inherently inefficient, as are pure name-value formats like JSON “objects”. <b>The</b> <b>header</b> names occupy substantial storage space, finding {{the boundaries of}} <b>the</b> <b>header</b> value requires slow byte-by-byte sequential scanning, and finding a particular header such as “Subject” requires sequentially scanning over all <b>the</b> <b>headers</b> at least once, if only to store them into a hash table.|$|R
5000|$|<b>The</b> <b>headers</b> {{are sent}} to the server {{application}} encoded as a netstring. The body is sent following <b>the</b> <b>headers</b> and its length is specified by the [...] "CONTENT_LENGTH" [...] header.|$|R
50|$|<b>The</b> IPv4 <b>header</b> {{checksum}} is {{a simple}} checksum used in version 4 of the Internet Protocol (IPv4) to protect <b>the</b> <b>header</b> of IPv4 data packets against data corruption. This checksum is calculated only for <b>the</b> <b>header</b> bytes (with <b>the</b> checksum bytes set to 0), is 16 bits long and {{is a part of}} <b>the</b> IP packet <b>header.</b>|$|R
5000|$|Under <b>the</b> <b>header</b> [...] a [...] {{copy the}} {{corresponding}} column in Table 1, under <b>the</b> <b>header</b> [...] b [...] copy the corresponding column in Table 1, etc., and construct Table 4.|$|R
40|$|A {{method of}} an {{equipment}} for controlling header compression context during handover in a data exchange between a transmitter and a transmitter and a receiver of an IP mobile data network wherein data packets are transferred comprising a header portion and an information portion. The transmitter comprises a <b>header</b> compressor and <b>the</b> receiver comprisesa <b>header</b> decompressor arranged for operating {{in accordance with}} a header compression scheme. In {{the case of a}} handover <b>the</b> <b>header</b> compressor is notified of the initiation of a handover and starts transmitting packets arranged for controlling <b>the</b> <b>header</b> compression context between <b>the</b> <b>header</b> compressor and header decompressor.; After completion of <b>the</b> handover, <b>the</b> <b>header</b> compressor is notified of the completion of the handover and resumes header compression in accordance with <b>the</b> <b>header</b> compression scheme during normal data exchange not involving a handover...|$|R
50|$|In its {{original}} implementation, <b>the</b> <b>header</b> lines of each incoming message are examined, {{and a single}} line of text is appended to the overview files, with one overview file present for each newsgroup. Tab (ASCII code 9) characters and line breaks within <b>the</b> <b>headers</b> are converted to spaces (ASCII code 32), and <b>the</b> <b>header</b> fields within each overview line are then delimited by tab characters.|$|R
3000|$|In general, <b>the</b> <b>header</b> {{design is}} not unique [13], we use the first two bits of <b>the</b> <b>header</b> to signify which format is used in this packet. Besides, we use the {{following}} [...]...|$|R
50|$|<b>The</b> Header-back (or <b>header</b> back) is <b>the</b> part of {{the exhaust}} system from the outlet of <b>the</b> <b>header</b> to <b>the</b> final vent to open air — {{everything}} from <b>the</b> <b>header</b> back. Header-back systems are generally produced as aftermarket performance systems for cars without turbochargers.|$|R
50|$|The {{data section}} follows <b>the</b> <b>header.</b> Its {{contents}} are the payload data carried for the application. The {{length of the}} data section is not specified in <b>the</b> TCP segment <b>header.</b> It can be calculated by subtracting the combined length of <b>the</b> TCP <b>header</b> and <b>the</b> encapsulating IP <b>header</b> from <b>the</b> total IP datagram length (specified in <b>the</b> IP <b>header).</b>|$|R
40|$|An all-optical serial header {{processor}} {{is demonstrated}} using a semiconductor laser amplifier in a loop mirror configuration (SLALOM). The operation of <b>the</b> <b>header</b> processor is discussed {{and it is}} experimentally demonstrated with a 10 Gbit/s Manchester encoded (information rate of 5 Gbit/s) packet stream. The operation of <b>the</b> <b>header</b> processor {{is based on the}} correlation function of <b>the</b> SLALOM. <b>The</b> <b>header</b> processor can be utilised in devising all-optical packet switches...|$|R
5000|$|In multi-dimensional tables, {{each cell}} {{in the body of}} the table (and the value of that cell) relates to the values at the {{beginnings}} of the column (i.e. <b>the</b> <b>header),</b> <b>the</b> row, and other structures in more complex tables. This is an injective relation: each combination of the values of <b>the</b> <b>headers</b> row (row 0, for lack of a better term) and <b>the</b> <b>headers</b> column (column 0 for lack of a better term) is related to a unique cell inthe table: ...|$|R
50|$|<b>The</b> ELF <b>header</b> defines {{whether to}} use 32- or 64-bit addresses. <b>The</b> <b>header</b> {{contains}} three fields that are affected by this setting and offset other fields that follow them. <b>The</b> ELF <b>header</b> is 64 bytes long.|$|R
50|$|After <b>the</b> <b>header</b> <b>the</b> image itself starts.This example {{will use}} the {{following}} 72x28 pixel image.|$|R
50|$|The file {{consists}} of three sections, <b>the</b> <b>header,</b> <b>the</b> table of contents and the heap.|$|R
50|$|The {{data field}} of <b>the</b> SSTP <b>header</b> {{contains}} an SSTP control message only when <b>the</b> <b>header's</b> Control bit C is set.|$|R
5000|$|<b>The</b> <b>header</b> {{contains}} <b>the</b> NUM and SEQ, {{the protection}} (security) information, and the location(s) {{of the rest}} of <b>the</b> file <b>header.</b>|$|R
50|$|<b>The</b> <b>header</b> is {{encoded in}} the same way as an HTTP header and must include the MIME type of the {{document}} returned. <b>The</b> <b>headers,</b> supplemented by <b>the</b> Web server, are generally forwarded with the response back to the user.|$|R
5000|$|The new packet reaches N(2,3). From <b>the</b> <b>header</b> of <b>the</b> packet it {{removes the}} leftmost bit {{to decide the}} direction. Since it is a zero, left link of N(2,3) (which connects to N(3,2)) gets selected. <b>The</b> <b>header</b> field is empty.|$|R
5000|$|The {{official}} Executive Mansion card of Rutherford B. Hayes contained <b>the</b> <b>header,</b> [...] "Executive Mansion, Washington" [...] on {{the upper}} left corner of the card. On later cards, such as William McKinley's, <b>the</b> <b>header</b> was displayed in the upper right corner.|$|R
40|$|The present {{invention}} is {{a system}} and method embodied in an optical circuit switched protocol for the transmission of data through a network. The optical circuit switched protocol is an all-optical circuit switched network and includes novel optical switching nodes for transmitting optical data packets within a network. Each optical switching node comprises a detector for receiving <b>the</b> <b>header,</b> header detection logic for translating <b>the</b> <b>header</b> into routing information and eliminating <b>the</b> <b>header,</b> and a controller for receiving the routing information and configuring an all optical path within the node. The all optical path located within the node is solely an optical path without having electronic storage of the data and without having optical delay of the data. Since electronic storage of <b>the</b> <b>header</b> is not necessary and <b>the</b> initial <b>header</b> is eliminated by the first detector of the first switching node. multiple identical headers are sent throughout the network so that subsequent switching nodes can receive and read <b>the</b> <b>header</b> for setting up an optical data path...|$|R
40|$|The {{analysis}} of flow maldistribution in a {{shell and tube}} heat exchanger is presented. The flow field within <b>the</b> <b>headers</b> was obtained through numerical solution of conservation equations of mass and momentum {{in addition to the}} equations of the turbulence model. The flow maldistribution inside <b>the</b> <b>header</b> was a 3 -D numerical simulation with the help of commercial software To increase the performance of the heat exchanger, flow maldistribution among the tubes should be minimized [...] Flow maldistribution in <b>the</b> <b>header</b> affects <b>the</b> heat transfer performance. The effects of the pressure drop and velocity distribution in <b>the</b> <b>headers</b> were analyzed, as it effects the heat transfer performance. The study showed that by changing <b>the</b> <b>header</b> geometry, <b>the</b> maldistribution can be reduced leading to improved performance. Two types of headers were considered with varying header length and inlet flow velocities from 0. 8373 mm/sec to 2. 344 mm/sec are considered. The uniformity of flow distribution improved with increasing header length, whereas it decreased with increasing flow rate. As <b>the</b> <b>header</b> length increased to 1500 mm the flow maldistribution decreased and the static pressure was almost equal for all the tubes in case of a conical <b>header.</b> <b>The</b> results show that conical header minimizes flow maldistribution compared to a cylindrical header...|$|R
30|$|In {{communications}} systems, {{two different}} ways utilized to transmit the data are continuous data transmission and packet data transmission. For the continuous data transmission such as voice, the transmission rate {{is controlled by the}} transport layer. In this case, the receiver knows the transmission rate during the entire data flow. As for the packet data transmission, each packet consists of <b>the</b> <b>header</b> and <b>the</b> data, and the information of the switch configuration can be hidden in <b>the</b> <b>header</b> of each packet. Therefore, in order to adjust the transmission rate without notifying the receiver, the transmitter first encodes the switch configuration and then includes the encoded bits in <b>the</b> <b>header.</b> <b>The</b> length of <b>the</b> <b>header</b> depends on <b>the</b> coding rate of the error correcting codes. In this article, we consider continuous data transmission.|$|R
50|$|Header {{filtering}} {{looks at}} <b>the</b> <b>header</b> of <b>the</b> email which contains {{information about the}} origin, destination {{and content of the}} message. Although spammers will often spoof fields in <b>the</b> <b>header</b> in order to hide their identity, or {{to try to make the}} email look more legitimate than it is many of these spoofing methods can be detected, and any violation of the RFC 5322 standard on how <b>the</b> <b>header</b> is to be formed can also serve as a basis for rejecting the message.|$|R
