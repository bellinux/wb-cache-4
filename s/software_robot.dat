54|526|Public
50|$|Ubiquitous robot (Ubibot) is a robot {{incorporating}} {{three components}} including virtual <b>software</b> <b>robot</b> or avatar, real-world mobile robot and embedded sensor system in surroundings. <b>Software</b> <b>robot</b> within a virtual world can control a real-world robot as a brain {{and interact with}} human beings. Researchers of KAIST, Korea describe these three components as a Sobot (<b>Software</b> <b>robot),</b> Mobot (Mobile robot), and Embot (Embedded robot).|$|E
5000|$|Player/Stage Project - A {{very popular}} Free <b>Software</b> <b>robot</b> {{interface}} and simulation system, used for robotics {{research and teaching}} worldwide.|$|E
5000|$|Tae-Hun Kim, Seung-Hwan Choi, and Jong-Hwan Kim. [...] "Incorporation of a <b>Software</b> <b>Robot</b> and a Mobile Robot Using a Middle Layer." [...] IEEE Transactions on Systems, Man, and Cybernetics - Part C: Applications and Reviews, Vol. 37, No. 6, Nov. 2007.|$|E
5000|$|... #Subtitle level 2: <b>Software</b> <b>robots</b> as a {{paradigm}} for automation ...|$|R
50|$|ICICI on 10 Sep 2016 {{announced}} 'software robotics' initiative—a {{first by}} any Indian bank. Over 200 <b>software</b> <b>robots</b> are now performing over 1 million transactions {{per day for}} the bank which comprises 10% of its total transactions. The bank will engage 500 <b>software</b> <b>robots</b> {{by the end of}} the year which will help it to automate 20% of its total transactions.|$|R
50|$|Robotic process {{automation}} (or RPA) is an emerging form of clerical {{process automation}} technology {{based on the}} notion of <b>software</b> <b>robots</b> or artificial intelligence (AI) workers.|$|R
5000|$|Michalewicz co-founded Complexica in 2014, {{which is}} a leading {{provider}} of Artificial Intelligence software. The company's core product - an AI-based <b>software</b> <b>robot</b> called Larry, the Digital Analyst - can help organisations increase revenue, margin, and productivity using automated analytics.|$|E
50|$|A {{software}} 'robot' is {{a software}} application that replicates {{the actions of}} a human being interacting with the user interface of a computer system. For example, the execution of data entry into an ERP system - or indeed a full end-to-end business process - would be a typical activity for a <b>software</b> <b>robot.</b> The <b>software</b> <b>robot</b> operates on the user interface (UI) {{in the same way that}} a human would; this is a significant departure from traditional forms of IT integration which have historically been based on Application Programming Interfaces (or APIs) - that is to say, machine-to-machine forms of communication based on data layers which operate at an architectural layer beneath the UI.|$|E
50|$|An {{apparent}} contradiction {{arises from}} the use of robots to automate clerical processes. Once configured to perform a particular task a <b>software</b> <b>robot</b> essentially constitutes a software program in its own right, executing a sequences of steps according to a prescribed set of rules and procedures. This raises the question why a robot is needed in place of core systems of record that are procured or developed to meet the processing needs at the outset.|$|E
40|$|In {{this paper}} we give an {{overview}} of the “Kairai ” virtual actor system, which understands natural language instructions and displays the results via <b>software</b> <b>robots.</b> In controlling <b>software</b> <b>robots</b> acting in a 3 -D world, the system needs to access various types of information from language expressions. Here, we concentrate especially a handling anaphora, used to indicate objects or positions in the virtual world. Our system contains a robot belief database and analyzes the user’s speech act in manipulating the database. We also consider ellipsis, which is used frequently in command-style dialogues. ...|$|R
40|$|Security risks is an {{important}} issues and {{caught the attention of}} researchers in the area of networks, web development, human computer interaction and software engineering. One main challenge for online systems is to identify whether the users are humans or <b>software</b> <b>robots</b> (bots). While it is natural to provide service to human users, providing service for <b>software</b> <b>robots</b> (bots) comes with many security risks and challenges. <b>Software</b> <b>robots</b> are often used by spammers to create fake online accounts, affect search engine ranking, take part in on-line polls, send out spam or simply waste the resources of the server. In this paper we introduce a visual CAPTCHA technique that is based on generating random images by the computer, theuser is then asked to match a feature point between two images (i. e. solve the correspondence problem as defined by the researchers in the computer vision area). The relationship between the two images is based on a randomly generated homography transformation function. The main advantage of our approach compared to other visual CAPTCHA techniques is that we eliminate the need for a database of images while retaining ease of use...|$|R
5000|$|Botnet is a jargon {{term for}} a {{collection}} of <b>software</b> <b>robots,</b> or [...] "bots", that run autonomously and automatically. Hackers have for some time utilized Botnets for various purposes, but Ancheta set himself above the crowd by actively advertising his network of bots on Internet chat channels.|$|R
5000|$|The hosting of RPA {{services}} also aligns {{with the}} metaphor of a <b>software</b> <b>robot,</b> with each robotic instance having its own virtual workstation, much like a human worker. The robot uses keyboard and mouse controls to take actions and execute automations. Normally all of these actions {{take place in a}} virtual environment and not on screen; the robot does not need a physical screen to operate, rather it interprets the screen display electronically. The scalability of modern solutions based on architectures such as these owes much to the advent of virtualization technology, without which the scalability of large deployments would be limited by available capacity to manage physical hardware and by the associated costs. The implementation of RPA in business enterprises has shown dramatic cost savings when compared to traditional non-RPA solutions.http://www.kpmg-institutes.com/content/dam/kpmg/sharedservicesoutsourcinginstitute/pdf/2015/robotics-improve-legacy-sourcing.pdf ...|$|E
5000|$|Software robots {{interpret}} the user interface of third party applications and are configured to execute steps identically {{to a human}} user.They are configured (or [...] "trained") using demonstrative steps, rather than being programmed using code-based instructions. This is an important concept in the RPA market because the intention is not to provide another [...] "coding" [...] platform for IT users (who already {{have the benefit of}} mature and tested software development and middleware platforms). Rather, the intention is to provide an agile and configurable capability to non-technical [...] "business" [...] users in operational departments. The paradigm, in summary, is that a <b>software</b> <b>robot</b> should be a virtual worker who can be rapidly [...] "trained" [...] (or configured) by a business user in an intuitive manner which is akin to how an operational user would train a human colleague.|$|E
50|$|However, a <b>software</b> <b>robot</b> {{is often}} only {{deployed}} {{in place of}} a function that a human would otherwise do. Activities might include performing double data entry, copying and pasting data between computer systems, reconciling and cross referencing data between different systems and implementing high level decision making at key points along the business process. Such activities are frequently performed in many large organisations and these disjointed processes tend to arise out of an organic growth of changing system requirements {{and the fact that the}} changing needs of the business over time (arising from, for example, changes in consumer demand and regulatory mandates) cannot always be matched by commensurate investment in IT system changes. The high investment cost of time and money to achieve IT transformation often then means that such workarounds and manually intensive clerical activities then persist over long periods of time and are liable to creep back in (post transformation) as the business' needs continue to evolve.|$|E
50|$|Regardless which {{language}} is used, {{the end result}} of <b>robot</b> <b>software</b> is to create robotic applications that help or entertain people. Applications include command-and-control and tasking software. Command-and-control <b>software</b> includes <b>robot</b> control GUIs for tele-operated <b>robots,</b> point-n-click command <b>software</b> for autonomous <b>robots,</b> and scheduling <b>software</b> for mobile <b>robots</b> in factories. Tasking software includes simple drag-n-drop interfaces for setting up delivery routes, security patrols and visitor tours; it also includes custom programs written to deploy specific applications. General purpose <b>robot</b> application <b>software</b> is deployed on widely distributed robotic platforms.|$|R
40|$|This {{article is}} about special methods of {{information}} security. These methods {{are a part}} of the tools of ensuring the information security. In this paper the problem of threats and protection against <b>software</b> <b>robots</b> discussed. The results of the researches were successfully protected by the various security documents of ROSPATENT...|$|R
5000|$|RDDL is {{designed}} to allow both human readers and <b>software</b> <b>robots</b> to find any sort of resource associated with a particular namespace. Instead of putting one thing {{at the end of}} a namespace URI, RDDL puts a document there that lists all the machine-processable documents that might be available, including: ...|$|R
50|$|Lastly, {{the role}} of robots in {{increasing}} security is significant. Unimate, the first industrial robot used {{in the manufacture of}} cars was introduced in order to improve health and safety within the manufacturing context. Similarly, software robots {{have a role to play}} in the service sector where, even if the cost of automation would not otherwise by economically justified (say for a low volume clerical process), it may be that a particular process is so sensitive (or perhaps that the cost of an error is so high) that it is preferred not to use error prone - and potentially untrustworthy - people to execute them. In this context, robots provide a trustworthy and accurate means of executing processes. For example, a sovereign department administering the personal pensions and administrative affairs of armed forces personnel could be expected to be extremely sensitive about the treatment or abuse of personal data relating to those personnel, who might become targets of terrorist aggressors, spies or anyone who is in any way inclined to pervert the interests of the sovereign entity. Alternatively, in a financial services context, the opportunity for fraud might be greatly increased by providing a single person with access to multiple banking systems. One option is to segment a process between departments, to the detriment of speed and quality associated with that process. Alternatively, a <b>software</b> <b>robot</b> can be trusted to execute a process as directed, without inappropriate data collection, fraudulent intervention or deviation from the prescribed process.|$|E
40|$|Abstract—One {{of the key}} {{components}} of an ubiquitous robot (Ubibot) is the <b>software</b> <b>robot</b> (Sobot), which can communicate with embedded robot (Embot) and mobile robot (Mobot). Sobot is a virtual robot, which {{has the ability to}} move to any place or to connect to any device through a network without any spatial limi-tation. Embot has the capability to sense the surroundings and to interpret the context of the environment and can communicate with Mobot and Sobot. Mobot provides an integrated mobile services. To incorporate Sobot, Embot, and Mobot reliably as an Ubibot, a middle layer is needed to arbitrate different protocols among them. This paper focuses on incorporating Sobot and Mobot to overcome physical limitations of Sobot for physical behaviors in real situa-tions. To implement the incorporation of them, the basic concept and structure of the middle layer are proposed. The effectiveness of the middle layer for Sobot and Mobot is demonstrated through real experiments. Index Terms—Middle layer, mobile robot, <b>software</b> <b>robot,</b> ubiq-uitous robot...|$|E
40|$|This paper {{presents}} {{our research}} group's latest results in fully autonomous force-controlled manipulation tasks: (i) advanced non-linear estimators for simultaneous parameter estimation and contact formation "map building" for 6 D contact tasks (with active sensing {{integrated into the}} task planner), and (ii) the application of these results to programming by human demonstration, for tasks involving contacts. The paper also describes our e#orts to integrate the estimators in the Free <b>Software</b> <b>robot</b> control software project Orocos...|$|E
40|$|Abstract. CAPTCHAs are {{tests that}} {{distinguish}} humans from <b>software</b> <b>robots</b> {{in an online}} environment [3, 14, 7]. We propose and implement three CAPTCHAs based on naming images, distinguishing images, and identifying an anomalous image out of a set. Novel contributions include proposals for two new CAPTCHAs, the first user study on image recognition CAPTCHAs, and a new metric for evaluating CAPTCHAs. ...|$|R
50|$|Much {{research}} <b>software</b> for autonomous <b>robots</b> is Free <b>Software</b> or Open Source <b>Software,</b> including: <b>Robot</b> Operating System, Carmen from Carnegie Mellon, Player/Stage/Gazebo {{from the}} University of Southern California and the ARIA APIs from MobileRobots Inc. URBI with a Free Software SDK, {{is used in}} many universities.|$|R
40|$|This paper {{proposes a}} {{technique}} to analyze and visualize the human-machine interaction corpus using VisualChat. The evaluation {{used in this study}} is based on real-time interaction between machines or <b>software</b> <b>robots</b> called AINI (Artificial Intelligent Natural Language Identity) and online human user using MSN messenger, a Web-based messaging system called MSNChat. The result shows that VisualChat is a useful tool to evaluate the human-machine interaction corpus...|$|R
40|$|TRIPOD is {{free and}} open source {{software}} for rapidly developing computer vision applications. With such <b>software,</b> <b>robot</b> vision systems can be developed, tested and validated. This paper presents a step-by-step tu-torial where live video is thresheld to display the cor-responding binary image. This simple exercise serves to illustrate the realization of a robot vision system. A LEGO Mindstorms Vision Command module, which is a Logitech USB camera, is used. Platform develop-ment is in ANSI C/C++ on a Windows PC without low-level Windows programming...|$|E
40|$|Crisis Communication is an {{effective}} communication mechanism in the world. The outbreak of the SARS disease and the way information on it was disseminated has illustrated the importance of effective and efficient crisis communication management. Consequently, {{we would like to}} highlight the viability of incorporating an intelligent agent <b>software</b> <b>robot</b> into a crisis communication portal (CCNet) to send the alert news to subscribed users via email and others mobile services such as SMS, MMS and GPRS. Comment: International Journal of Intelligent Information Technologies, Inaugural Issue: January 2005, Idea Group Publishing, ISSN: 1548 - 3657, US...|$|E
40|$|This paper {{describes}} the software system supporting the Carnegie Mellon/Univ. of Pittsburgh team of simulated {{search and rescue}} robots in the Robocup Rescue 2010 Virtual Robots competition. Building on the Machinetta agent <b>software,</b> <b>robot</b> command and control is decomposed into a hierarchy of subtasks managed by independent agents both on the robot and co-located with human operators. By encapsulating all robot and human operator interactions into interfaces to these agents, the system can perform {{with a high level}} of robustness and re-usability. As in previous years, the entire code base is portable and platform-independent, running entirely in Java...|$|E
40|$|The paper {{describes}} {{a framework for}} developing mobile <b>software</b> <b>robots</b> by using the Planet mobile object system, whichischaracterized by language-neutral layered architecture, the native code execution of mobile objects, and asynchronous object passing. We propose an approach to implementing mobile Web search robots that takes full advantage of these characteristics, and we base our discussion of its efffectiveness on experiments conducted in the Internet environment...|$|R
40|$|This {{document}} {{is the final}} report for the WebWatch project. The aim {{of the project was}} to develop and use <b>robot</b> <b>software</b> for analysing and profiling Web sites within various UK communities and to report on the findings. This document reviews the original bid, gives a background to <b>robot</b> <b>software,</b> describes the <b>robot</b> <b>software</b> used by the WebWatch project, and summaries the conclusions gained from the WebWatch trawls. A list of recommendations for further work in this area is given. The appendices include a number of the reports which have been produced which describe the main trawls carried out by the project...|$|R
40|$|My chosen {{research}} topic {{covers the}} use of agents in human-computer interaction (HCI). These interface agents are autonomous software components that undertake tasks {{on behalf of their}} user. The term implies a degree of intelligence and adaptability (learning ability) that helps the software to perform its tasks more effectively and in a more acceptable manner to its user. At a different level, interface agents can be viewed as <b>software</b> <b>robots,</b> butlers, secretaries or slaves...|$|R
40|$|Abstract—In {{this paper}} a motion control system of a robot arm is described. Robots arms are built their motion machine, Motors. DC motor is {{chosen for the}} robot arm and the author also {{presents}} how to choose this motor. The robot arm is with single degree of freedom and motion control system for it is selected using MATLAB Simulink software. This paper is mainly focus to apply MATLAB software to Control system design. The system is simple but it is deigned the motor to move the robot arm to proper angular position according to the input. Keywords—Control system, DC motor, MATLAB Simulink <b>software,</b> <b>robot</b> arm...|$|E
40|$|Abstract—In this paper, we {{proposed}} a new framework to incorporate an intelligent agent <b>software</b> <b>robot</b> into a crisis communication portal (CCNet) in order to send alert news to subscribed users via email and other mobile services such as Short Message Service (SMS), Multimedia Messaging Service (MMS) and General Packet Radio Services (GPRS). The content on the mobile services can be delivered either through mobile phone or Personal Digital Assistance (PDA). This {{research has shown that}} with our proposed framework, the embodied conversation agents system can handle questions intelligently with our multilayer architecture. At the same time, the extended framework can take care of delivery content through a more humanoid interface on mobile devices...|$|E
40|$|Abstract. This paper {{describes}} the software system supporting the Carnegie Mellon/Univ. of Pittsburgh team of simulated search and res-cue robots in the Robocup Rescue 2008 Virtual Robots competition. This system {{is an extension}} to the software that finished in {{first place in the}} 2007 competition, focusing on two key areas: algorithm performance and autonomy. Building on the Machinetta agent <b>software,</b> <b>robot</b> com-mand and control is decomposed into a hierarchy of subtasks managed by independent agents both on the robot and colocated with human op-erators. By encapsulating all robot and human operator interactions into interfaces to these agents, the system can perform {{with a high level of}} robustness and reusability. As in previous years, the entire code base is portable and platform-independent, running entirely in Java. ...|$|E
40|$|Abstract-This paper {{describes}} flexible <b>software</b> {{for industrial}} <b>robots.</b> WinRS 232 ROBOTcontroi and winEthernetROBOTcontrol software {{were developed to}} be used in industrial <b>robots.</b> With this <b>software,</b> industrial <b>robots</b> can be integrated in modern production systems, in an easy and efficient way. A Robotic Bar and a Flexible Manufacturing Cell (FMC) were developed with the objective of showing the potentialities of the developed software. I...|$|R
50|$|Three-layered {{software}} architecture, {{which can}} provide flexibility, maintainability, reusability and scalability is used when an effective <b>robot</b> <b>software</b> design is needed. The HAL (Hardware Abstract Layer) provides a relatively uniform abstraction for aggregates of underlying hardware {{such that the}} underlying robotic hardware is transparent to the <b>robot</b> control <b>software.</b> This <b>robot</b> control <b>software</b> can be written in a hardware independent manner.|$|R
50|$|ROS, (Robot Operating System), is a {{collection}} of <b>software</b> frameworks for <b>robot</b> <b>software</b> development, providing operating system-like functionality on a heterogeneous computer cluster. ROS provides standard operating system services such as hardware abstraction, low-level device control, implementation of commonly used functionality, message-passing between processes, and package management.|$|R
