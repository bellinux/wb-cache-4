281|917|Public
25|$|<b>Sample</b> <b>code</b> and Documentation.|$|E
25|$|This <b>sample</b> <b>code</b> {{displays}} various JavaScript features.|$|E
25|$|Court {{testimony}} {{shows that}} the first demonstration of DoS attack was made by Khan C. Smith in 1997 during a DEF CON event disrupting Internet access to the Las Vegas Strip for over an hour. The release of <b>sample</b> <b>code</b> during the event led to the online attack of Sprint, EarthLink, E-Trade, and other major corporations in the year to follow.|$|E
40|$|A {{recent study}} [1] {{examined}} {{the use of}} sampled hardware counters to create <b>sampled</b> <b>code</b> signatures. This approach is attractive because <b>sampled</b> <b>code</b> signatures can be quickly gathered for any application. The conclusion of their study was that there exists a fuzzy correlation between <b>sampled</b> <b>code</b> signatures and performance predictability. The paper {{raises the question of}} how much information is lost in the sampling process, and our paper focuses on examining this issue. We first focus on showing that there exists a strong correlation between code signatures and performance. We then examine the relationship between <b>sampled</b> and full <b>code</b> signatures, and how these affect performance predictability. Our results confirm that there is a fuzzy correlation found in recent work for the SPEC programs with <b>sampled</b> <b>code</b> signatures, but that a strong correlation exists with full code signatures. In addition, we propose converting the sampled instruction counts, used in the prior work, into <b>sampled</b> <b>code</b> signatures representing loop and procedure execution frequencies. These sampled loop and procedure code signatures allow phase analysis to more accurately and easily find patterns, and they correlate better with performance. ...|$|R
3000|$|We have {{implemented}} {{a number of}} <b>sample</b> <b>codes</b> for typical complex systems simulations, including iterative maps, cellular automata, dynamical networks and agent-based models. All of those codes were concisely written in plain Python. They are freely available from the project website.b To run those <b>sample</b> <b>codes,</b> the user will need the following software modules, which are also available for free and widely used for scientific computation in academia and industries: [...]...|$|R
5000|$|August 26, 2015: AMD {{released}} AMD APP SDK v3.0 {{which contains}} full support of OpenCL 2.0 and <b>sample</b> <b>coding.</b>|$|R
25|$|The SDK {{includes}} a comprehensive set of development tools, including a debugger, software libraries, a handset emulator based on QEMU, documentation, <b>sample</b> <b>code,</b> and tutorials. Initially, Google's supported {{integrated development environment}} (IDE) was Eclipse using the Android Development Tools (ADT) plugin; in December 2014, Google released Android Studio, based on IntelliJ IDEA, as its primary IDE for Android application development. Other development tools are available, including a native development kit (NDK) for applications or extensions in C or C++, Google App Inventor, a visual environment for novice programmers, and various cross platform mobile web applications frameworks. In January 2014, Google unveiled an framework based on Apache Cordova for porting Chrome HTML5 web applications to Android, wrapped in a native application shell.|$|E
2500|$|HTM {{for stocks}} - example of {{tracking}} anomalies {{in the stock}} market (<b>sample</b> <b>code)</b> ...|$|E
2500|$|Rogue {{behavior}} detection - {{example of}} finding anomalies in human behavior (white paper and <b>sample</b> <b>code)</b> ...|$|E
30|$|Using the Python {{language}} {{itself as}} a modeling and simulation platform, we have developed “PyCX”, an online repository of simple, crude, easy-to-understand <b>sample</b> <b>codes</b> for various complex systems simulation.b The target audiences of PyCX are researchers and students {{who are interested in}} developing their own complex systems simulation software using a general-purpose programming language but do not have much experience in computer programming. We carefully designed the <b>sample</b> <b>codes</b> so that our audience can understand, modify, create and visualize dynamic complex systems simulations relatively easily.|$|R
30|$|We {{introduce}} PyCX, {{an online}} repository of simple, crude, easy-to-understand <b>sample</b> <b>codes</b> for various complex systems simulation, including iterative maps, cellular automata, dynamical networks and agent-based models. All the <b>sample</b> <b>codes</b> {{were written in}} plain Python, a general-purpose programming language widely used in industry {{as well as in}} academia, so that students can gain practical skills for both complex systems simulation and computer programming simultaneously. The core philosophy of PyCX is on the simplicity, readability, generalizability and pedagogical values of simulation codes. PyCX has been used in instructions of complex systems modeling at several places with successful outcomes.|$|R
50|$|Wm. Divale, Noelle Abrams, Jennifer Barzola, Estelle Harris, and Fred-Michael Henry. 1998 Sleeping Arrangements of Children and Adolescents: SCCS <b>Sample</b> <b>Codes.</b> World Cultures: Journal of Comparative and Cross-Cultural Research. World Cultures 9, 3-12.|$|R
2500|$|Geospatial {{tracking}} - {{example of}} finding anomalies in objectives moving through {{space and time}} (white paper and <b>sample</b> <b>code)</b> ...|$|E
2500|$|The name [...] "CamelCase" [...] is {{not related}} to the [...] "Camel Book", the popular {{nickname}} of the book Programming Perl due to the picture of a camel on its cover, which uses all-lowercase identifiers with underscores (sometimes called snake case) in its <b>sample</b> <b>code.</b>|$|E
2500|$|Programmer Johnny Lee {{has posted}} video demos and <b>sample</b> <b>code</b> at [...] {{related to the}} use of the Wii Remote for finger tracking, {{low-cost}} multipoint interactive whiteboards, and head tracking for desktop VR displays. This was the subject for his presentation at the prestigious TED conference, where he demonstrated several such applications. The [...] forum has become the discussion, support and sharing site for Lee's Wii Remote projects and other newer developments.|$|E
50|$|In addition, the {{standard}} specifies that all result bits are inverted before the octet is transmitted. Thus, a silent μ-law encoded PCM channel has the 8 bit <b>samples</b> <b>coded</b> 0xFF instead of 0x00 in the octets.|$|R
50|$|<b>Sample</b> {{application}} <b>code.</b>|$|R
50|$|The {{following}} <b>code</b> <b>samples</b> are ALGOL 68 {{versions of}} the above ALGOL 60 <b>code</b> <b>samples.</b>|$|R
2500|$|On January 21, 2010, Amazon {{announced}} {{the release of}} its Kindle Development Kit (KDK). KDK aims to allow developers to build [...] "active content" [...] for the Kindle, and a beta version was announced with a February 2010 release date. [...] A number of companies have already experimented with delivering active content through the Kindle's bundled browser, and the KDK gives <b>sample</b> <b>code,</b> documentation and a Kindle Simulator together with a new revenue sharing model for developers. The KDK {{is based on the}} Java programming language's Personal Basis Profile packaged Java APIs.|$|E
50|$|This <b>sample</b> <b>code</b> {{displays}} various JavaScript features.|$|E
5000|$|Jungle Disk : Proprietary license {{download}} client <b>sample</b> <b>code.</b>|$|E
50|$|NPB 1 defined eight benchmarks, each in two problem sizes dubbed Class A and Class B. <b>Sample</b> <b>codes</b> {{written in}} Fortran 77 were supplied. They used a small problem size Class S {{and were not}} {{intended}} for benchmarking purposes.|$|R
30|$|In {{the article}} “PyCX: a Python-based {{simulation}} code repository for complex systems education”, Hiroki Sayama introduces PyCX, an online python-based code repository of simple, crude but easy-to-understand <b>sample</b> <b>codes</b> for various complex systems simulation, including iterative maps, cellular automata, dynamical networks and agent-based models (Sayama 2013).|$|R
40|$|Prolog {{language}} {{is used for}} mixed programming in a example of Class Scheduling System based on multi-agent, {{in order to enhance}} the programming efficiency. The Language Suitability Model is introduced to quantify the programming efficiency of the programming. Finally, experiment is carried out for <b>sample</b> <b>codes...</b>|$|R
5000|$|Builder allows {{creating}} DOM elements dynamically. Using the <b>sample</b> <b>code</b> below: ...|$|E
50|$|The <b>sample</b> <b>code</b> below shows {{explicit}} casting of the integer datatype.|$|E
5000|$|<b>Sample</b> <b>Code</b> to Send Multipart E-Mail, HTML E-Mail and File Attachments ...|$|E
30|$|We have {{presented}} PyCX, an online repository of <b>sample</b> <b>codes</b> of complex systems simulations designed primarily for higher education. It uses the Python programming language {{itself as a}} modeling and simulation platform, aiming at overcoming several limitations that arose from using existing complex systems simulation software for educational purposes.|$|R
40|$|This article {{provides}} {{an exploration of}} the major legal issues involved in responding to off-campus student misconduct. The authors outline the historical and current relationships between institutions and students, the historical and current scope of jurisdiction, handling simultaneous campus and criminal proceedings, <b>sample</b> <b>codes</b> of conduct, and recommendations for taking disciplinary action...|$|R
40|$|The NHT- 1 {{benchmarks}} am a set {{of three}} scalable I/ 0 benchmarks suitable for evaluating the I/ 0 subsystems of high performance distributed memory computer systems. The benchmarks test application I/ 0, maximum sustained disk I/ 0, and maximum sustained network I/ 0. <b>Sample</b> <b>codes</b> are available which implement the benchmarks...|$|R
50|$|<b>Sample</b> <b>code</b> {{implementation}} for filters with custom filter {{strategy is}} given below.|$|E
50|$|The {{specification}} and <b>sample</b> <b>code</b> {{have been}} released into the public domain.|$|E
5000|$|Rogue {{behavior}} detection - {{example of}} finding anomalies in human behavior (white paper and <b>sample</b> <b>code)</b> ...|$|E
25|$|See the Examples section {{below for}} <b>samples</b> of <b>code</b> demonstrating Ruby syntax.|$|R
2500|$|More <b>sample</b> Ruby <b>code</b> is {{available}} as algorithms {{in the following}} article: ...|$|R
50|$|See the Examples section {{below for}} <b>samples</b> of <b>code</b> demonstrating Ruby syntax.|$|R
