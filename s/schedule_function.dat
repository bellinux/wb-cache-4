9|443|Public
40|$|The {{elapsed time}} to {{complete}} a scheduled task is expressed {{as a function of}} the completion times of the component tasks and the path matrix of the scheddule graph. The <b>schedule</b> <b>function</b> is interpreted geometrically as a polyhedron. If the scheduled activities have random completion times, the probability distribution of the {{time to complete}} the entire task is found by integrating over the contours of the polyhedron. Composite schedule functions are represented by algebraic formulae which are applicable in both the probabilistic and non-probabilistic cases. A method for joint control of cost and schedule is presented. ...|$|E
40|$|Abstract. This paper shows new {{preimage}} {{attacks on}} reduced Tiger and SHA- 2. Indesteege and Preneel presented a preimage attack on Tiger reduced to 13 rounds (out of 24) with a complexity of 2128 : 5. Our new preimage attack finds a one-block preimage of Tiger reduced to 16 rounds with a complexity of 2161. The proposed attack {{is based on}} meet-in-the-middle attacks. It seems difficult to find “independent words ” of Tiger at first glance, since its key <b>schedule</b> <b>function</b> is much more compli-cated than that of MD 4 or MD 5. However, we developed techniques to find independent words efficiently by controlling its internal variables. Surprisingly, the similar techniques {{can be applied to}} SHA- 2 includin...|$|E
40|$|Abs&act [...] It {{has been}} shown that the method of decomposing a {{dependence}} graph into multiple phases with appropriate m-phase <b>schedule</b> <b>function</b> is useful for designing faster regular arrays for matrix multiplication and transitive closure. In this paper, we will further apply this method to design several parallel algorithms for Algebraic Path Problem and derive N x N 2 -D regular arrays with execution time LyJ- 2 (cylindrical array and orthogonal one) and 4 N- 2 (spherical one). Index Terms-Algebraic path problem, cylindrical array, par-allel algorithm design, systolic array, spherical array, transitive closure, VLSI architecture. I. IN’IRODUCTION WO major steps on the design of a regular array (RA) T [l] from a sequential algorithm for a problem are reg-ularization and spacetime mapping. Firstly, by regularization we can rewrite the sequential algorithm to a regular iterativ...|$|E
40|$|AbstractThe {{difficulty}} of finding errors caused by unexpected interleavings of threads in concurrent programs is well known. Model checkers can pinpoint such errors and verify correctness {{but are not}} easily scalable to large programs. The approach discussed here is more scalable but less systematic. We transform a given Java program by inserting calls to a <b>scheduling</b> <b>function</b> at selected points. The <b>scheduling</b> <b>function</b> either does nothing or causes a context switch. The simplest <b>scheduling</b> <b>function</b> makes the choice blindly using a pseudo-random number generator; more sophisticated <b>scheduling</b> <b>functions</b> use heuristics to weight the choices. We try to insert as few calls as possible while still ensuring that for each reachable deadlock and assertion violation, there is a sequence of choices by the <b>scheduling</b> <b>function</b> that leads to it; thus, there is a non-zero probability of finding it by testing the transformed program, regardless of the scheduling policies of the underlying Java Virtual Machine...|$|R
40|$|International audienceThe 6 TiSCH {{working group}} is {{standardizing}} the low-power wireless protocol stack for the Industrial IoT. The default <b>scheduling</b> <b>function</b> (SF 0) standardized by 6 TiSCH uses simple random slot selection. This paper proposes the Low Latency <b>Scheduling</b> <b>Function</b> (LLSF), a new <b>scheduling</b> <b>function</b> which daisy-chains timeslots rather than picking them randomly. We implement LLSF in OpenWSN and evaluate its performance experimentally. LLSF yields 82. 8 % lower end-to-end latency on a 5 -hop path than SF 0, at no extra costs...|$|R
40|$|In this paper, {{we present}} an {{approach}} to determine <b>scheduling</b> <b>functions</b> suitable {{for the design of}} processor arrays. The considered <b>scheduling</b> <b>functions</b> support a followed LSGP-partitioning of the processor array by allowing to execute the tasks of processors of the full-size array mapped into one processor of the partitioned processor array in an arbitrary order. Several constraints are derived to ensure the causality of computations and to prevent access conflicts to both modules and registers. We propose an optimization problem generating the <b>scheduling</b> <b>functions</b> and outline its implementation as an integer linear program. The proposed methods are also applicable for the mapping of algorithms to parallel architectures. In this case, the <b>scheduling</b> <b>function</b> produces identical, independent small threads which can be combined to utilize the target architecture as much as possible. 1...|$|R
40|$|ABSTRACT. We {{provide a}} {{framework}} for pricing and hedging against shortfall risk in an incomplete market from an insurer’s point of view. Our insurer writes an insurance contract (life and nonlife) against risk described by a Poisson arrival. The growing number of papers about pricing under distorted probabilities indicates a demand for technology that complements the law of large numbers. In this context, we shall answer the following questions: (1) How does the insurer price insurance premium given a payment <b>schedule</b> <b>function</b> under distorted probabilities, (2) how could she hedge her position by investing the initial wealth (premium) in the financial market and (3) how the pricing decision and hedging strategy are related? This should cover a wide spectrum of the insurer’s business in an incomplete market. We present a unified approach to pricing and hedging issues and explicit solutions for each problem under a fairly general setup. To illustrate our framework, a numerical example is also discussed...|$|E
40|$|Abstract. Avionics Full Duplex Switched Ethernet (AFDX) {{standardized}} as ARINC 664 is a {{major upgrade}} for integrated avionics systems of civil aircraft. It becomes the current communication technology {{in the context of}} avionics and provides a backbone network for the civil avionics system. This paper focuses on features of AFDX network protocol. Architecture of AFDX switch based on shared memory is proposed to meet the requirements of avionics real-time system. In addition, frame filtering, traffic policing and frame <b>schedule</b> <b>function</b> are used to eliminate uncertainties in huge traffic flows. End System (ES) host-target architecture is also researched in this paper. Virtual link scheduler, redundancy management, and protocol stack in ES are designed to ensure determinism and reliability of data communication. AFDX switch and ES have been successfully developed, and configuration tool, ARINC 615 A loader and simulation tool related to AFDX network are also provided as package solution to support avionics system construction. Finally, AFDX switch and ESes have passed ARINC 664 protocol conformance test and certification, the test results show that our AFDX products meet the requirements of real-time communication, determinism and reliability defined in ARINC 664...|$|E
40|$|In this paper, we {{proposed}} a new approach for key scheduling algorithm which is an enhancement of the Rijndael key scheduling. This {{proposed a}}lgorithm was developed to improve the weaknesses that has in the Rijndael key schedule. The key <b>schedule</b> <b>function</b> in Rijndael block cipher did not receive {{the same amount of}} attention during design phase as the cipher components. Based on our research, there are several properties in key schedule that seemed to violate the design criteria, which was published by NIST, and this has led to many types of attack performed on Rijndael block cipher. Thus {{we proposed a}}n approach called ShiftColumn, operates by shifting bit and the result will be shifted with different offsets. This transformation is added as the last function after the RCon function. Our new approach improves the security of the original Rijndael key scheduling, by enhancing the bit confusion and diffusion of the subkey, which is output that is produced from the key schedule transformation. The subkeys produced by the proposed approach have been proven to be a better result on both properties compared to the subkeys that were produced from Rijndael key scheduling transformation...|$|E
40|$|International audienceThis paper {{presents}} {{the design of}} a robust LPV observer for discrete descriptor-linear parameter varying systems. The gain <b>scheduling</b> <b>functions</b> are considered as depending on the unmeasurable state vector. Designing an effective observer state for this type of systems is more complicated because implies the estimation of the <b>scheduling</b> <b>functions.</b> To reduce the design complexity the original system is transformed into a perturbed system depending on the estimated <b>scheduling</b> <b>functions.</b> The convergence of the estimation error is guaranteed by considering L_ 2 gain and Lyapunov approach which relies in sufficient conditions given in linear matrix inequalities(LMIs) formulation. Moreover, in fault detection (FD) and fault tolerant control (FTC) framework, the robust discrete LPV observer demonstrates its capacity to detect sensor and actuator faults. Simulation results illustrate effectiveness of the proposed method...|$|R
50|$|A {{preemptive}} scheduler relies upon a programmable {{interval timer}} which invokes an interrupt handler that runs in kernel mode and implements the <b>scheduling</b> <b>function.</b>|$|R
40|$|International audienceThis paper {{addresses}} {{the design of}} a state estimation and sensor fault detection, isolation and fault estimation observer for descriptor-linear parameter varying (D-LPV) systems. In contrast to where the <b>scheduling</b> <b>functions</b> depend on some measurable time varying state, the proposed method considers the <b>scheduling</b> <b>function</b> depending on an unmeasurable state vector. In order to isolate, detect and estimate sensor faults, an augmented system is constructed by considering faults to be auxiliary state vectors. An unknown input LPV observer is designed to estimate simultaneously system states and faults. Sufficient conditions to guarantee stability and robustness against the uncertainty provided by the unmeasurable <b>scheduling</b> <b>functions</b> and the influence of disturbances are synthesized via a linear matrix inequality (LMI) formulation by considering H∞ and Lyapunov approaches. The performances of the proposed method are illustrated through the application to an anaerobic bioreactor model...|$|R
40|$|Pigeons {{performed}} on discrete-trial, temporally defined schedules {{in which the}} food delay (D) was adjusted according to the latency of the key peck (X) and two schedule parameters (t and A). The <b>schedule</b> <b>function</b> was D = A(t − X), where D is the experienced delay between a response and a reinforcer. The schedule parameter t is the maximum value below which the present contingencies occur. A is the additional delay to reinforcement for each second the response latency is shorter than the t value. When A = 0 s, the schedule is a continuous reinforcement schedule with immediate reinforcement. When A = 1 s, the schedule is a conjunctive fixed-ratio 1 fixed-time t-s schedule. When A approaches infinity, the schedule becomes a differential reinforcement of long latency schedule. The latencies for subjects with t = 10 s and t = 30 s were observed with the present schedules having seven values for A between 0 s and 11 s. In addition, the latencies for subjects for which t = 30 s were observed at an A value of 31 s to 41 s. As the A value increased, the latencies approached the t value for subjects for which t = 10 s. The latencies for 30 -s-t subjects did not approach t, even when the A value was 41 s. The latencies for 10 -s-t subjects at 11 -s A value were longer than those under yoked conditions having exactly the same delays/interreinforcement intervals. These results demonstrated a continuum of latency related to the schedule continuum (value of A) at a small t value...|$|E
3000|$|There {{are mainly}} two {{realistic}} modes to release various traffic information in traffic communication system: the first mode is {{where all the}} traffic participants organize themselves and deliver traffic information either single-hop or multi-hop; the second mode is where all the traffic participants deliver traffic information to each other via a roadside base station which has total control of the whole system. Jurgen (...) give a summary of some characteristics of two modes. The majority of researches on traffic communication system focus on the first mode based on ad hoc networks or sensor networks (Sichitiu and Kihl 2008; Liang et al. 2015; Paier et al. 2010; Li 2010; Biswas et al. 2006). Since the first mode has a limit application scope, such as collision avoiding, driving assistant or vehicle’s vertical control, this paper pays {{more attention to the}} latter mode. As the representative of the 4 th generation mobile communication technologies, TD-LTE (Astely et al. 2010; Araniti et al. 2013) has better spectrum efficiency and higher transmission rate. For example, with system bandwidth of 20  MHz and eNodeB coverage radius up to 100  km, system peak rate of TD-LTE can be up to 100  Mbps for the downlink, and 200  Mbps for the uplink, respectively; Since TD-LTE has a flat system architecture, the one-way transmission delay in its user plane is less than 5  ms, and the system transition delay in its control plane from sleep state to activated state is less than 50  ms, and from resident state to activated state is less than 100  ms, respectively. TD-LTE system adopts an advanced communication technology called orthogonal frequency division multiple access (OFDMA), which can divide wireless resources into some independent resources blocks (RBs) in both the time as well as frequency domain, and let scheduler adaptively decide which RB would be allocated to a specific user at a given time according to the instantaneous value of <b>schedule</b> <b>function</b> for mitigating the traditional fading effects.|$|E
40|$|The {{operational}} scheduling at {{coal handling}} facilities {{is of the}} utmost importance to ensure that the coal consuming processes are supplied with a constant feed of good quality coal. Although the Sasol Coal Handling Facility (CHF) were not designed to perform coal blending during the coal handling process, CHF has to blend the different sources to ensure that the quality of the feed supplied is of a stable nature. As a result, the operation of the plant has become an extremely complex process. Consequently, human intelligence is no longer sufficient to perform coal handling scheduling and therefore a scheduling model is required to ensure optimal plant operation and optimal downstream process performance. After various attempts to solve the scheduling model optimally, i. e. with exact solution methods, it was found that {{it is not possible to}} accurately model the complexities of CHF in such a way that the currently available exact solvers can solve it in an acceptable operational time. Various alternative solution approaches are compared, in terms of solution quality and execution speed, using a simplified version of the CHF scheduling problem. This investigation indicates that the Simulated Annealing (SA) metaheuristic is the most efficient solution method to provide approximate solutions. The metaheuristic solution approach allows one to model the typical sequential thoughts of a control room operator and sequential operating procedures. Thus far, these sequential rules could not be modelled in the simultaneous equation environment required for exact solution methods. An SA metaheuristic is developed to solve the practical scheduling model. A novel SA approach is applied where, instead of the actual solution being used for neighbourhood solution representation, the neighbours are indirectly represented by the rules used to generate neighbourhood solutions. It is also found that the initial temperature should not be a fixed value, but should be a multiple of the objective function value of the initial solution. An inverse arctan-based cooling <b>schedule</b> <b>function</b> outperforms traditional cooling schedules as it provides the required diversification and intensification behaviour of the SA. The scheduling model solves within 45 seconds and provides good, practically executable results. The metaheuristic approach to scheduling is therefore successful as the plant complexities and intricate operational philosophies can be accurately modelled using the sequential nature of programming languages and provides good approximate optimal solutions in a short solution time. Tests done with live CHF data indicate that the metaheuristic solution outperforms the current scheduling methodologies applied in the business. The implementation of the scheduler will lead to a more stable factory feed, which will increase production yields and therefore increase company profits. By reducing the amount of coal re-handling (in terms of throw-outs and load-backs at mine bunkers), the scheduler will reduce the coal handling facility’s annual operating cost by approximately R 4. 6 million (ZAR). Furthermore, the approaches discussed in this document can be applied to any continuous product scheduling environment. Additional information available on a CD stored at Level 3 of the Merensky Library. Dissertation (MEng (Industrial Engineering)) [...] University of Pretoria, 2011. Industrial and Systems Engineeringunrestricte...|$|E
50|$|Low Altitude Deconfliction Program - Deconflict.org is online <b>scheduling</b> <b>function</b> with FAA's MADE {{program to}} provide {{collision}} avoidance for military aircraft operating in low altitude environment.|$|R
50|$|<b>Scheduled</b> <b>Function</b> Node: a Function node {{which allows}} the user to specify clock times for the start {{and end of the}} {{execution}} of the subnetwork tasks.|$|R
40|$|To support {{instrument}} and experiment operations {{effectively in the}} Space Station era, planning, scheduling, and control must allow for: (1) interactive real-time remote operations; (2) responsive scheduling and rescheduling; (3) support of {{the full range of}} distributed science, application and commercial users; (4) interaction and cooperation among distributed users; and (5) efficient use of often onboard, communications, and ground-based resources. We suggest conceptual and managerial approaches that address these needs. Specifically, we describe approaches to distributed planning, <b>scheduling</b> and control <b>functions</b> that are based on resources and on a distributed knowledge hierarchy. We describe the <b>scheduling</b> <b>functions</b> as the component of the integrated space-ground Operations Management System. We include the integration of the planning and <b>scheduling</b> <b>functions</b> with the real-time operations control system, and we discuss automated scheduling assistants. These suggested approaches, taken from the users' point-of-view, have resulted in two prototype systems: Operations and Science Instrument Support package and Science User Resource Planning and Scheduling System...|$|R
2500|$|System 2 {{represents}} the information channels and bodies {{that allow the}} primary activities in System 1 to communicate between each other and which allow System 3 to monitor and co-ordinate the activities within System 1. [...] Represents the <b>scheduling</b> <b>function</b> of shared resources {{to be used by}} System 1.|$|R
40|$|Data {{distribution}} {{functions are}} introduced. They are matced with <b>scheduling</b> <b>functions.</b> The processors and iterations are determined that use an array element at its fixed {{position in a}} statement. This {{makes it possible to}} obtain the initial data distribution and also information on the data volume for every processor and on the structure of required communication...|$|R
50|$|It generates one 32-bit {{word for}} each update step using a 32-bit to 32-bit mapping {{function}} {{similar to the}} output function of the Blowfish cipher. Finally a linear bit-masking function is applied to generate an output word. It uses the two message <b>schedule</b> <b>functions</b> in the hash function SHA-256 internally, but with the tables P and Q as S-boxes.|$|R
40|$|In Wireless ATM {{networks}} transmission {{resources are}} shared among geographically disperse applications with diverse Quality of Service (QoS) requirements and traffic characteristics. To provide QoS guarantees {{and use the}} bandwidth efficiently, call admission and <b>scheduling</b> <b>functions</b> are necessary. These functions should ensure the delivery of the target QoS to the supported applications while achieving statistical multiplexing gains, without explicit and continuous exchange of information between sources and scheduler...|$|R
40|$|Single stage {{systems with}} high set-up times and high {{utilization}} levels occur in flow process industries. In this paper a two-tiered hierarchical model is developed {{for such a}} system. At the top level, the optimal value of the control parameters is determined, while the operational <b>scheduling</b> <b>function</b> is performed at the bottom level. The conceptual aggregation approach used in this model is compared to the aggregation approach used in classical hierarchical approaches...|$|R
5000|$|... // <b>Scheduling</b> a <b>function</b> to be {{executed}} every 2 seconds var uuid = system.setInterval('myJavaScriptFunction("parameterValue")', 2000); // Stopping the above scheduled task system.clearInterval(uuid); ...|$|R
40|$|Thirsty rats licked two metal tubes: a {{water tube}} paired with another water tube, with saccharin, {{or with a}} dry tube. For each pair, a {{multipoint}} baseline function was measured by offering free access to one tube throughout each session, and free or restricted access to the other. The three resulting baseline functions showed the members of each pair to be mutual substitutes: When access to either tube was restricted, the rats made more licks at the other. A linear function identified the two water tubes as perfect substitutes. Convex functions identified {{the members of the}} saccharin-water and the dry-water pair as imperfect substitutes. Each pair was also tested under several reciprocal fixed-ratio schedules that required instrumental licking of either tube for contingent access to the other. The resulting <b>schedule</b> <b>functions</b> showed the members of each pair to be perfect substitutes: Water licks decreased linearly as licks at the other water tube, the saccharin, or the dry tube increased, in agreement with a conservation model of instrumental performance. Baseline and <b>schedule</b> <b>functions,</b> indistinguishable in the water-water pair, indicated a schedule facilitation of dry-tube licking in the dry-water pair and of water-tube licking in the saccharin-water pair...|$|R
30|$|In this paper, a queuing {{model is}} {{presented}} that respects the specific structure of dedicated schedules, in particular, {{but not limited}} to, IEEE 802.15. 4 TSCH networks. A popular schedule implemented in Contiki [23] is Orchestra [6]. It does not require any management traffic for building up the schedule. Part of the ongoing IETF standardization of 6 TiSCH, the link between IPv 6 networks and TSCH, {{is the development of}} <b>scheduling</b> <b>functions</b> such as SF 0 [24] and SF 1 [25].|$|R
40|$|Manufacturing {{scheduling}} is {{a complex}} combinatorial problem, particularly in distributed and dynamic environments. This paper presents a holonic approach to manufacturing scheduling, where the <b>scheduling</b> <b>functions</b> are distributed by several entities, combining their calculation power and local optimization capability. In this scheduling and control approach, {{the objective is to}} achieve fast and dynamic re-scheduling using a scheduling mechanism that evolves dynamically to combine centralized and distributed strategies, improving its responsiveness to emergence, instead of the complex and optimized scheduling algorithms found in traditional approaches...|$|R
40|$|The <b>scheduling</b> <b>function</b> {{determines the}} amount of each product to produce, the {{allocation}} of equipment and resources to tasks, {{as well as the}} sequencing and timing of such tasks, in order to fulfill plan production objectives. A knowledge-based model has been created relying on rigorous analysis of existing process scheduling models. Likewise, a reasoning tool has been developed for matching the system and scheduling task features to previously existing mathematical models. As a result, a model selection can be obtained based on features matching. Postprint (published version...|$|R
40|$|Consumables models {{required}} for the mission planning and <b>scheduling</b> <b>function</b> are formulated. The relation of the models to prelaunch, onboard, ground support, and postmission functions for the space transportation systems is established. Analytical models consisting of an orbiter planning processor with consumables data base is developed. A method of recognizing potential constraint violations in both the planning and flight operations functions, and a flight data file storage/retrieval of information {{over an extended period}} which interfaces with a flight operations processor for monitoring of the actual flights is presented...|$|R
40|$|Linux {{supports}} {{global and}} partitioned scheduling through its real-time scheduling class, which provides SCHED_FIFO and SCHED_RR fixed priority policies. Recently, the SCHED_DEADLINE policy was proposed that provides Earliest Deadline First scheduling with budget control. In this {{paper we propose}} a new implementation for global EDF scheduling which uses a heap global data structure to speed-up scheduling decisions. We also compare the execution time of the main <b>scheduling</b> <b>functions</b> in the kernel for four different implementations of global scheduling, showing that our implementation is as scalable and efficient as SCHED_FIFO...|$|R
40|$|International audienceThe paper {{introduces}} {{the problems in}} china’s agricultural machinery information. We provide an architecture for the agricultural machinery intelligent scheduling in cross-regional work. We put forward constructing the private cloud of agricultural machinery {{with the aid of}} cloud computing technology, and forward agricultural machinery will link together through Internet of Things technology. We provide an information platform and simplified it to three components including information service system, communication line and monitoring front-end equipment machine carrying. We also describes two modes to realize the intelligent <b>scheduling</b> <b>function</b> of agricultural machinery cross-regional working...|$|R
40|$|We {{introduce}} {{the notion of}} a scheduling problem which is a boolean function S over atomic formulas of the form x_i ≤ x_j. Considering the x_i as jobs to be performed, an integer assignment satisfying S schedules the jobs subject to the constraints of the atomic formulas. The <b>scheduling</b> counting <b>function</b> counts the number of solutions to S. We prove that this counting function is a polynomial in the number of time slots allowed. Scheduling polynomials include the chromatic polynomial of a graph, the zeta polynomial of a lattice, the Billera-Jia-Reiner polynomial of a matroid. To any scheduling problem, we associate not only a counting function for solutions, but also a quasisymmetric function and a quasisymmetric function in non-commuting variables. These <b>scheduling</b> <b>functions</b> include the chromatic symmetric functions of Sagan, Gebhard, and Stanley, and a close variant of Ehrenborg's quasisymmetric function for posets. Geometrically, we consider the space of all solutions to a given scheduling problem. We extend a result of Steingrímmson by proving that the h-vector of the space of solutions is given by a shift of the scheduling polynomial. Furthermore, under certain niceness conditions on the defining boolean function, we prove partitionability of the space of solutions and positivity of fundamental expansions of the <b>scheduling</b> quasisymmetric <b>functions</b> and of the h-vector of the scheduling polynomial. Comment: Final version, substantially shortened, 18 page...|$|R
40|$|ABSTRACT FILTER SCHEDULING FUNCTION MODEL IN INTERNET SERVER: RESOURCE CONFIGURATION, PERFORMANCE EVALUATION AND OPTIMAL SCHEDULING by MINGHUA XU August 2010 Advisor: Dr. Cheng-Zhong Xu Major: Computer Engineering Degree: Doctor of Philosophy Internet traffic often {{exhibits}} a structure with rich high-order statistical properties like selfsimilarity and long-range dependency (LRD). This greatly complicates {{the problem of}} server performance modeling and optimization. On the other hand, popularity of Internet has created numerous client-server or peer-to-peer applications, with most of them, such as online payment, purchasing, trading, searching, publishing and media streaming, being timing sensitive and/or financially critical. The scheduling policy in Internet servers is playing central role in satisfying service level agreement (SLA) and achieving savings and efficiency in operations. The increasing popularity of high-volume performance critical Internet applications is a challenge for servers to provide individual response-time guarantees. Existing tools like queuing models in most cases only hold in mean value analysis under the assumption of simplified traffic structures. Considering {{the fact that most}} Internet applications can tolerate a small percentage of deadline misses, we define a decay function model characterizes the relationship between the request delay constraint, deadline misses, and server capacity in a transfer function based filter system. The model is general for any time-series based or measurement based processes. Within the model framework, a relationship between server capacity, scheduling policy, and service deadline is established in formalism. Time-invariant (non-adaptive) resource allocation policies are design and analyzed in the time domain. For an important class of fixed-time allocation policies, optimality conditions with respect to the correlation of input traffic are established. The upper bound for server capacity and service level are derived with general Chebshev 2 ̆ 7 s inequality, and extended to tighter boundaries for unimodal distributions by using VysochanskiPetunin 2 ̆ 7 s inequality. For traffic with strong LRD, a design and analysis of the decay function model is done in the frequency domain. Most Internet traffic has monotonically decreasing strength of variation functions over frequency. For this type of input traffic, it is proved that optimal schedulers must have a convex structure. Uniform resource allocation is an extreme case of the convexity and is proved to be optimal for Poisson traffic. With an integration of the convex-structural principle, an enhance GPS policy improves the service quality significantly. Furthermore, it is shown that the presence of LRD in the input traffic results in shift of variation strength from high frequency to lower frequency bands, leading to a degradation of the service quality. The model is also extended to support server with different deadlines, and to derive an optimal time-variant (adaptive) resource allocation policy that minimizes server load variances and server resource demands. Simulation results show time-variant scheduling algorithm indeed outperforms time-invariant optimal decay function scheduler. Internet traffic has two major dynamic factors, the distribution of request size and the correlation of request arrival process. When applying decay function model as scheduler to random point process, corresponding two influences for server workload process is revealed as, first, sizing factor [...] interaction between request size distribution and <b>scheduling</b> <b>functions,</b> second, correlation factor [...] interaction between power spectrum of arrival process and <b>scheduling</b> <b>function.</b> For the second factor, it is known from this thesis that convex <b>scheduling</b> <b>function</b> will minimize its impact over server workload. Under the assumption of homogeneous <b>scheduling</b> <b>function</b> for all requests, it shows that uniform scheduling is optimal for the sizing factor. Further more, by analyzing the impact from queueing delay to <b>scheduling</b> <b>function,</b> it shows that queueing larger tasks vs. smaller ones leads to less reduction in sizing factor, but at the benefit of more decreasing in correlation factor in the server workload process. This shows the origin of optimality of shortest remain processing time (SRPT) scheduler...|$|R
40|$|In {{the last}} decades, the {{integration}} of informatics applications supporting planning, scheduling and control has been a serious concern of the industrial community. Many standards {{have been developed to}} tackle this issue by addressing the exchange of data between the <b>scheduling</b> <b>function</b> and its immediate lower and upper levels in the planning pyramid. However, a more comprehensive approach is required to tackle integration problems, since this matter entails much more than data exchange. So, this article presents an ontological framework that provides the foundations to reach an effective interoperability among the various applications linked to scheduling activities...|$|R
40|$|In {{this paper}} the {{inclusion}} of hardware constraints into the design of massively parallel processor arrays is considered. We propose an algorithm which determines an optimal <b>scheduling</b> <b>function</b> {{as well as the}} selection of components which have to be implemented in one processor of a processor array. The arising optimization problem is formulated as an integer linear program which also takes the necessary chip area of a hardware implementation into consideration. Thereby we assume that an allocation function is given and that a partitioning of the processor array is required to match a limited chip area in silicon. 1...|$|R
40|$|This article {{presents}} {{the integration of}} on-line mission planning and flight scheduling for an unmanned aerial vehicle in military observation missions. Planning selects and orders the best subset of observations {{to be carried out}} and schedules the observations while accommodating time windows. The vehicle is subjected to speed, fuel supply and flight constraints in a uncertain and dynamic environment. The modeling of the problem and the algorithms implementation based on the exploration of a graph by an ordered depth-first search are presented. Mission planning and flight <b>scheduling</b> <b>function</b> is integrated in an on-board architecture based on Petri nets...|$|R
