10000|4877|Public
5|$|All of the Peano axioms {{except the}} ninth axiom (the {{induction}} axiom) are statements in first-order logic. The arithmetical operations of addition and multiplication {{and the order}} relation can also be defined using first-order axioms. The axiom of induction is in second-order, since it quantifies over predicates (equivalently, sets of natural numbers rather than natural numbers), {{but it can be}} transformed into a first-order axiom <b>schema</b> of induction. Such a <b>schema</b> includes one axiom per predicate definable in the first-order language of Peano arithmetic, making it weaker than the second-order axiom.|$|E
5|$|In Active Directory environments, BitLocker {{supports}} optional {{key escrow}} to Active Directory, although a <b>schema</b> update {{may be required}} for this to work (i.e. if the Active Directory Services are hosted on a Windows version previous to Windows Server 2008).|$|E
5|$|The {{best known}} <b>schema,</b> the APWeb, lists fifteen genera, {{arranged}} as follows, and illustrated in Table 4, with three subfamilies, Lilioideae representing Liliaceae sensu Tamura {{and the two}} subfamilies of Calochortaceae sensu Tamura (Streptopoideae and Calochortoideae) as proposed by Patterson and Givnish now included within Lilaceae sensu APG.|$|E
40|$|We {{study the}} data {{transformation}} capabilities associated with <b>schemas</b> that are presented by labeled directed multi-graphs and path equivalence constraints. Unlike most approaches which treat graph-based <b>schemas</b> as abbreviations for relational <b>schemas,</b> we treat graph-based <b>schemas</b> as categories. A morphism M between <b>schemas</b> S and T, {{which can be}} generated from a visual mapping between graphs, induces three adjoint data migratio...|$|R
5000|$|Preintegration - An {{analysis}} of <b>schemas</b> {{is carried out}} before integration to decide upon some integration policy. This governs the choice of <b>schemas</b> to be integrated, the order of integration, and a possible assignment of preferences to entire <b>schemas</b> or portions of <b>schemas.</b>|$|R
40|$|AbstractDatabase <b>schemas</b> may be {{partitioned}} {{into two}} subclasses: three <b>schemas</b> and cyclic <b>schemas.</b> The analysis of tree vs. cyclic <b>schemas</b> introduced {{the concepts of}} GYO reductions, canonical connections, and tree projections. This paper investigates the intricate relationships among these concepts {{in the context of}} universal relation databases...|$|R
5|$|Peano {{arithmetic}} is equiconsistent {{with several}} weak systems of set theory. One such system is ZFC with the axiom of infinity replaced by its negation. Another such system consists of general set theory (extensionality, {{existence of the}} empty set, and the axiom of adjunction), augmented by an axiom <b>schema</b> stating that a property that holds for the empty set and holds of an adjunction whenever it holds of the adjunct must hold for all sets.|$|E
5|$|The WHO 2008 {{classification}} of {{acute myeloid leukemia}} attempts to be more clinically useful and to produce more meaningful prognostic information than the FAB criteria. Each of the WHO categories contains numerous descriptive subcategories {{of interest to the}} hematopathologist and oncologist; however, most of the clinically significant information in the WHO <b>schema</b> is communicated via categorization into one of the subtypes listed below.|$|E
5|$|The prince {{began to}} be {{perceived}} as a unifier towards the middle of the 19th century. Such an interpretation is completely lacking in the historiography of the 17th-century chroniclers, and even in that of the Transylvanian School around 1800. What they emphasized, apart from the exceptional personality of Michael himself, were the idea of Christendom and his close relations with Emperor Rudolf. The conqueror's ambition is likewise frequently cited as a motivation for his action, occupying in the interpretative <b>schema</b> the place that was later to be occupied by the Romanian idea.|$|E
5000|$|Comparison of the <b>Schemas</b> - <b>Schemas</b> are {{analyzed}} and compared {{to determine the}} correspondences among concepts and detect possible conflicts. Interschema properties may be discovered while comparing <b>schemas.</b>|$|R
40|$|International audienceMatching {{at large}} scale {{represents}} a laborious process. The standard approach trying {{to match the}} complete input <b>schemas</b> will often lead to performance problems matching. In this context, we propose a pre-matching approach based on a XML <b>schemas</b> reduction. The presented approach identifies common structures between and within XML <b>schemas</b> and attempts to scale down these input <b>schemas.</b> Our method uses tree mining techniques to identify these common structures. The interest {{of this approach is}} {{to reduce the size of}} the XML <b>schemas</b> before matching and to find, at the same time, the similarity of sub-parts of the <b>schemas.</b> As shown by our experiments, resulting <b>schemas</b> are much smaller than originals one which will improve matching performance...|$|R
40|$|These {{integrated}} XML <b>schemas</b> {{are intended}} for authoring/developing tools that can not handle the normative modularised IMS LD <b>schemas.</b> A document detailing their use has been included. Many XML tools encounter problems with the modular XML <b>schemas</b> of the IMS LD specification. Therefore non-modular XML <b>schemas</b> have been created {{for each of the}} levels of IMS LD. The only normative XML <b>schemas</b> for the IMS LD specification {{can be found at the}} IMS website...|$|R
5|$|The program employs its own {{communication}} protocol layered {{on top of}} a <b>schema</b> to communicate to other nodes. This {{communication protocol}} interfaces with the BEEP infrastructure, a network application protocol framework. Computers discovered by the Xgrid system, that is computers with Mac OS X's Xgrid service enabled, are automatically added to the list of available computers to use for processing tasks.|$|E
25|$|The example <b>schema</b> {{shown to}} the right is a snowflaked version of the star <b>schema</b> example {{provided}} in the star <b>schema</b> article.|$|E
25|$|The {{following}} example query is the snowflake <b>schema</b> {{equivalent of}} the star <b>schema</b> example code which returns {{the total number of}} units sold by brand and by country for 1997. Notice that the snowflake <b>schema</b> query requires many more joins than the star <b>schema</b> version in order to fulfill even a simple query. The benefit of using the snowflake <b>schema</b> in this example is that the storage requirements are lower since the snowflake <b>schema</b> eliminates many duplicate values from the dimensions themselves.|$|E
40|$|A bstract Large-scale protein-protein {{interaction}} networks {{provide new}} opportunities for understanding cellular organization and functioning. We introduce network <b>schemas</b> to elucidate shared mechanisms within interactomes. Network <b>schemas</b> specify descriptions of proteins and the topology of interactions among them. We develop algorithms for systematically uncovering recurring, over-represented <b>schemas</b> in physical interaction networks. We apply our methods to the S. cerevisiae interactome, focusing on <b>schemas</b> consisting of proteins described via sequence motifs and molecular function annotations and interacting {{with one another in}} one of four basic network topologies. We identify hundreds of recurring and overrepresented network <b>schemas</b> of various complexity, and demonstrate via graph-theoretic representations how more complex <b>schemas</b> are organized in terms of their lower-order constituents. The uncovered <b>schemas</b> span a wide range of cellular activities, with many signaling and transport related higher-order <b>schemas.</b> We establish the functional importance of the <b>schemas</b> by showing that they correspond to functionally cohesive sets of proteins, are enriched in the frequency with which they have instances in the H. sapiens interactome, and are useful for predicting protein function. Our finding...|$|R
40|$|A {{class of}} (monadic) {{functional}} <b>schemas</b> with nested predicates is defined. It is shown that termination, divergence and freedom problems for these <b>schemas</b> are decidable. It is proved {{that when the}} <b>schemas</b> are more general the freedom problem is undecidable. A procedure is given for deleting the identity function from the <b>schema's</b> definition {{at the cost of}} increasing $k$ by 1 when $k$ is the maximum depth of nesting. Part of our results extend results of [1] about <b>schemas</b> without nesting. Our algorithm for checking freedom is not a natural extension of theirs. Furthermore, using our algorithm for <b>schemas</b> without nesting yields a much more efficient way of deciding freedom than the algorithm suggested in [1]. Keywords and Phrases: monadic functional <b>schemas,</b> nested predicates, decision problems, equivalence, freedom, polynomial time, DPDA...|$|R
40|$|Chambers and Jurafsky (2009) {{demonstrated}} that event <b>schemas</b> can be automatically in-duced from text corpora. However, our analy-sis of their <b>schemas</b> identifies several weak-nesses, e. g., some <b>schemas</b> lack a common topic and distinct roles are incorrectly mixed {{into a single}} actor. It {{is due in part}} to their pair-wise representation that treats subject-verb independently from verb-object. This of-ten leads to subject-verb-object triples that are not meaningful in the real-world. We present a novel approach to inducing open-domain event <b>schemas</b> that overcomes these limitations. Our approach uses co-occurrence statistics of semantically typed re-lational triples, which we call Rel-grams (re-lational n-grams). In a human evaluation, our <b>schemas</b> outperform Chambers’s <b>schemas</b> by wide margins on several evaluation criteria. Both Rel-grams and event <b>schemas</b> are freely available to the research community. ...|$|R
25|$|This result {{shows that}} it is {{possible}} to axiomatize ZFC with a single infinite axiom <b>schema.</b> Because at least one such infinite <b>schema</b> is required (ZFC is not finitely axiomatizable), this shows that the axiom <b>schema</b> of replacement can stand as the only infinite axiom <b>schema</b> in ZFC if desired. Because the axiom <b>schema</b> of separation is not independent, it is sometimes omitted from contemporary statements of the Zermelo-Fraenkel axioms.|$|E
25|$|The axiom <b>schema</b> of {{separation}} can almost {{be derived from}} the axiom <b>schema</b> of replacement.|$|E
25|$|The {{snowflake}} <b>schema</b> {{is similar}} to the star <b>schema.</b> However, in the snowflake <b>schema,</b> dimensions are normalized into multiple related tables, whereas the star schema's dimensions are denormalized with each dimension represented by a single table. A complex snowflake shape emerges when the dimensions of a snowflake <b>schema</b> are elaborate, having multiple levels of relationships, and the child tables have multiple parent tables ("forks in the road").|$|E
5000|$|The form of XML {{documents}} containing EXPRESS <b>schemas</b> and/or data {{governed by}} EXPRESS <b>schemas</b> ...|$|R
30|$|Performance of two {{different}} <b>schemas</b> was {{measured in terms of}} write-query speed in this section. The comparison is between the <b>schemas</b> generated using the proposed model and the <b>schemas</b> produced using the conventional method. Results are presented as follows.|$|R
5000|$|Star <b>schemas,</b> {{which are}} also known as fact-dimension models and have been {{extended}} to snowflake <b>schemas</b> ...|$|R
25|$|A newer <b>schema</b> language, {{described}} by the W3C as the successor of DTDs, is XML <b>Schema,</b> often referred to by the initialism for XML <b>Schema</b> instances, XSD (XML <b>Schema</b> Definition). XSDs are far more powerful than DTDs in describing XML languages. They use a rich datatyping system and allow for more detailed constraints on an XML document's logical structure. XSDs also use an XML-based format, which {{makes it possible to}} use ordinary XML tools to help process them.|$|E
25|$|The primary {{disadvantage}} of the snowflake <b>schema</b> {{is that the}} additional levels of attribute normalization adds complexity to source query joins, {{when compared to the}} star <b>schema.</b>|$|E
25|$|Accepting {{only the}} axiom <b>schema</b> of {{specification}} {{was the beginning}} of axiomatic set theory. Most of the other Zermelo–Fraenkel axioms (but not the axiom of extensionality or the axiom of regularity) then became necessary to make up for some of what was lost by changing the axiom <b>schema</b> of comprehension to the axiom <b>schema</b> of specification – each of these axioms states that a certain set exists, and defines that set by giving a predicate for its members to satisfy, i.e. it is a special case of the axiom <b>schema</b> of comprehension.|$|E
50|$|Predefined WinFS <b>schemas</b> include <b>schemas</b> for documents, e-mail, appointments, tasks, media, audio, video, {{and also}} {{includes}} system <b>schemas</b> that include configuration, programs, and other system-related data. Custom <b>schemas</b> {{can be defined}} on a per-application basis, in situations where an application wants to store its data in WinFS, but not share the structure of that data with other applications, or they can be made available across the system.|$|R
25|$|In summary, {{the mental}} working models that {{underlie}} attachment styles appear to contain information about self {{and information about}} others organized into relational <b>schemas.</b> The relational <b>schemas</b> are themselves organized into a three-tier hierarchy. The highest level of the hierarchy contains relational <b>schemas</b> for a general working model that applies to all relationships. The middle level of the hierarchy contains relational <b>schemas</b> for working models that apply to different types of relationships (e.g., friends, parents, lovers). The lowest level of the hierarchy contains relational <b>schemas</b> for working models of specific relationships.|$|R
40|$|Abstract: We {{define a}} class of (monadic) {{functional}} <b>schemas</b> which properly includes rIanov * flowchart <b>schemas.</b> We show that the termination, divergence and freedam problems for functional <b>schemas</b> are decidable. Although {{it is possible to}} translate a large class of non-free functional <b>schemas</b> into equivalent free functional <b>schemas,</b> we show that this cannot be done in general. We show also that the equivalence problem for free functional <b>schemas</b> is decidable. Most of the results are obtained from well-known results in Focal Languages and Automata Theory. The views and conclusions contained in this document {{are those of the authors}} and should not be interpreted as necessarily representing the official policies, either expressed or implied, of the Advanced Researc...|$|R
25|$|Thus, one may {{use this}} as an axiom <b>schema</b> {{in the place of}} the axioms of empty set and pairing. Normally, however, one uses the axioms of empty set and pairing separately, and then proves this as a theorem <b>schema.</b> Note that {{adopting}} this as an axiom <b>schema</b> will not replace the axiom of union, which is still needed for other situations.|$|E
25|$|Not {{only is it}} {{necessary}} for the body <b>schema</b> {{to be able to}} integrate and form a three-dimensional representation of the body, but it also {{plays an important role in}} tool use. Studies recording neuronal activity in the intraparietal cortex in macaques have shown that, with training, the macaque body <b>schema</b> updates to include tools, such as those used for reaching, into the body <b>schema.</b> In humans, body <b>schema</b> plays an important role in both simple and complex tool use, far beyond that of macaques. Extensive training is also not necessary for this integration.|$|E
25|$|Metadata Authority Description <b>Schema</b> (MADS), an XML <b>schema</b> for an {{authority}} element set {{that may be}} used to provide metadata about agents (people, organizations), events, and terms (topics, geographics, genres, etc.).|$|E
50|$|Support schemas: NIEM {{includes}} three special <b>schemas,</b> appinfo, structures and proxy, for annotating and structuring NIEM-conformant <b>schemas.</b>|$|R
5000|$|List of XML <b>schemas</b> - list of XML <b>schemas</b> in {{use on the}} Internet sorted {{by purpose}} ...|$|R
40|$|Melis is a {{software}} tool for enablingan incremental process of automatic annotation of local <b>schemas</b> (e. g. re-lational database <b>schemas,</b> directory trees) with lexical information. Thedistinguishing and original feature of MELIS is its incrementality: thehigher {{the number of}} <b>schemas</b> which are processed, the more back-ground/domain knowledge is cumulated in the system (a portion of do-main ontology is learned at every step), the better the performance ofthe systems on annotating new <b>schemas...</b>|$|R
