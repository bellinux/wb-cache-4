620|9554|Public
25|$|The {{first part}} of the Solaris code base to be open sourced was the Solaris Dynamic Tracing {{facility}} (commonly known as DTrace), a tool that aids in the analysis, debugging, and tuning of applications and systems. DTrace was released under the CDDL on January 25, 2005 on the newly launched opensolaris.org website. The bulk of the Solaris <b>system</b> <b>code</b> was released on June 14, 2005. There remains some <b>system</b> <b>code</b> that is not open sourced, and is available only as pre-compiled binary files.|$|E
25|$|S0 space: (Or system space) {{which is}} global to all {{processes}} and stores operating <b>system</b> <b>code</b> and data, whether paged or not, including pagetables.|$|E
25|$|The VMM is also {{responsible}} for creating MS-DOS environments for system processes and Windows applications that still need to run in MS-DOS mode. It is the replacement for Win386 in Windows 3.x, and the file vmm32.vxd is a compressed archive containing most of the core VxD, including VMM.vxd itself and ifsmgr.vxd (which facilitates file system access without the need to call the real mode file <b>system</b> <b>code</b> of the DOS kernel).|$|E
5000|$|Technical Expert to the JTC1/SC7 - Embedded <b>System</b> <b>Coding</b> Guidelines Study Group ...|$|R
5000|$|... #Caption: An {{example of}} a river <b>system</b> <b>coded</b> with the Pfafstetter <b>coding</b> <b>system.</b> The main {{tributary}} water basins are coded with even numbers 2-8, and the inter-basin regions with odd numbers. The code 0 is reserved for basins unconnected to the main stem.|$|R
5000|$|Direct {{integration}} with accounting system: Can the expense data flow {{directly into the}} accounting <b>system,</b> <b>coded</b> appropriately, {{without the need for}} any manual data entry? ...|$|R
2500|$|Build 4029's {{name was}} {{displayed}} as [...] "onghornLay rofessionalPay ersionVay 2003" [...] (Pig Latin for Longhorn Professional Version 2003) in various {{places around the}} operating system. While some had presumed that screenshots of this build were fake because of this seemingly obvious mistake, Microsoft later explained that this was merely a test of some new code to locate and {{reduce the number of}} places in the operating <b>system</b> <b>code</b> that the name was defined.|$|E
2500|$|A 2000 {{landmark}} {{federal court}} decision ruled that Microsoft had violated antitrust laws, {{and the court}} ordered that the company be broken up. In 2001, the federal appeals court agreed, but rather than breakup the company, sent the case to a new judge to hold hearings and determine appropriate remedies. [...] July 9–13, 2001 | date=July 16, 2001 | accessdate=May 22, 2010}} Remedies were later proposed by Blumenthal and eight other attorneys general; these included requiring that Microsoft license an unbundled version of Windows in which middleware and operating <b>system</b> <b>code</b> were not commingled. In 2001, the Bush Administration's DOJ settled with Microsoft in an agreement criticized by many states and other industry experts as insufficient. In November 2002, a federal court ruling imposed those same remedies.|$|E
2500|$|David Watt's 2004 {{textbook}} also analyzes {{exception handling}} {{in the framework}} of sequencers (introduced in this article in the section on early exits from loops). Watt notes that an abnormal situation, generally exemplified with arithmetic overflows or input/output failures like file not found, is a kind of error that [...] "is detected in some low-level program unit, but [...] a handler is more naturally located in a high-level program unit". For example, a program might contain several calls to read files, but the action to perform when a file is not found depends on the meaning (purpose) of the file in question to the program and thus a handling routine for this abnormal situation cannot be located in low-level <b>system</b> <b>code.</b> Watts further notes that introducing status flags testing in the caller, as single-exit structured programming or even (multi-exit) return sequencers would entail, results in a situation where [...] "the application code tends to get cluttered by tests of status flags" [...] and that [...] "the programmer might forgetfully or lazily omit to test a status flag. In fact, abnormal situations represented by status flags are by default ignored!" [...] Watt notes that in contrast to status flags testing, exceptions have the opposite default behavior, causing the program to terminate unless the programmer explicitly deals with the exception in some way, possibly by adding explicit code to ignore it. Based on these arguments, Watt concludes that jump sequencers or escape sequencers aren't as suitable as a dedicated exception sequencer with the semantics discussed above.|$|E
5000|$|... 1992 - The HELP {{campaign}} raised {{funds for}} infrastructure {{changes such as}} ventilation <b>systems,</b> <b>code</b> upgrades and plumbing. Ten years later, the Renewing the Vision campaign was launched.|$|R
5000|$|OBDII - On-board Diagnostic <b>System</b> (<b>codes</b> can be read/erased by {{a variety}} of readers, e.g. Actron blaZt). Nissan Pulsar N16 Models without EuroOBD in Australia do not have OBDII.|$|R
5000|$|Where {{the host}} {{language}} and {{data manipulation language}} have different type <b>systems,</b> <b>code</b> conversion operates outside of the OO type system, and hence has a higher chance of having undetected errors.|$|R
5000|$|DPMS - a DR-DOS API {{to assist}} the {{relocation}} and execution of resident <b>system</b> <b>code</b> in extended memory ...|$|E
50|$|However, {{since the}} Cray {{machines}} {{did not have}} peripheral processors, the main central processor executed the operating <b>system</b> <b>code.</b>|$|E
5000|$|Even all the {{low-level}} <b>system</b> <b>code</b> {{is written}} in Lisp (device drivers, garbage collection, process scheduler, network stacks, etc.) ...|$|E
50|$|Note {{that even}} if a SYLK file is created by an {{application}} that supports Unicode (for example Microsoft Excel), the SYLK file will be encoded in the current <b>system's</b> ANSI <b>code</b> page, not in Unicode. If the application contained characters that were displayable in Unicode but have no codepoint in the current <b>system's</b> <b>code</b> page, they will be converted to question marks ('?') in the SYLK file.|$|R
5000|$|Translating coded values: (e.g., if {{the source}} <b>system</b> <b>codes</b> male as [...] "1" [...] and female as [...] "2", but the {{warehouse}} codes male as [...] "M" [...] and female as [...] "F") ...|$|R
5000|$|Victoria Ambulatory <b>Coding</b> <b>System</b> (VACS) / Queensland Ambulatory <b>Coding</b> <b>System</b> (QACS), Australia ...|$|R
50|$|There is no {{provision}} for running any Supervisor/Privileged/kernel mode code on the 4000 systems—all operating <b>system</b> <b>code</b> runs as processes. Hence, device drivers, file <b>system</b> <b>code,</b> and other features which are often found within operating system kernels must be run in processes on the 4000 systems. Inherent in this {{is that they are}} all running in their own address spaces, protected from the actions of each other, just as all processes are.|$|E
5000|$|COMPASS PP is the {{assembly}} language for the PP (Peripheral Processor), only running operating <b>system</b> <b>code.</b> See CDC 6600 PP architecture.|$|E
5000|$|M42 is the Unified {{numbering}} <b>system</b> <b>code</b> ("miscellaneous nonferrous {{metals and}} alloys") for a grade of {{high speed steel}} with cobalt ...|$|E
40|$|<b>Systems</b> <b>code</b> {{is almost}} universally {{written in the}} C {{programming}} language or a variant. C has a very low level of type and memory abstraction and formal reasoning about C <b>systems</b> <b>code</b> requires a memory model that is able to capture the semantics of C pointers and types. At the same time, proof-based verification demands abstraction, in particular from the aliasing and frame problems. In this thesis, we study the mechanisation {{of a series of}} models, from semantic to separation logic, for achieving this abstraction when performing interactive theorem-prover based verification of C <b>systems</b> <b>code</b> in higher- order logic. We do not commit common oversimplifications, but correctly deal with C's model of programming language values and the heap, while developing the ability to reason abstractly and efficiently. We validate our work by demonstrating that the models are applicable to real, security- and safety-critical code by formally verifying the memory allocator of the L 4 microkernel. All formalisations and proofs have been developed and machine-checked in the Isabelle/HOL theorem prover...|$|R
50|$|Native {{multilingual}} support - Strings {{are represented}} by multibyte string internally. You can use UTF-8, EUC-JP, Shift-JIS or no multibyte encoding. Conversion between native <b>coding</b> <b>system</b> and external <b>coding</b> <b>system</b> is supported by port objects.|$|R
5000|$|There are {{following}} Current Procedural Terminology (CPT) and Healthcare Common Procedure <b>Coding</b> <b>System</b> (HCPCS) <b>codes</b> (maintained by the American Medical Association) for cutaneous electrogastrography: ...|$|R
5000|$|For {{the purpose}} of {{assessment}} of customs duty, products are given an identification code {{that has come to}} be known as the Harmonized <b>System</b> <b>code.</b> This code was developed by the World Customs Organization based in Brussels. A Harmonized <b>System</b> <b>code</b> may be from four to ten digits. For example, 17.03 is the HS code for molasses from the extraction or refining of sugar. However, within 17.03, the number 17.03.90 stands for [...] "Molasses (Excluding Cane Molasses)".|$|E
50|$|S0 space: (Or system space) {{which is}} global to all {{processes}} and stores operating <b>system</b> <b>code</b> and data, whether paged or not, including pagetables.|$|E
50|$|The {{first part}} of the Solaris code base to be open sourced was the Solaris Dynamic Tracing {{facility}} (commonly known as DTrace), a tool that aids in the analysis, debugging, and tuning of applications and systems. DTrace was released under the CDDL on January 25, 2005 on the newly launched opensolaris.org website. The bulk of the Solaris <b>system</b> <b>code</b> was released on June 14, 2005. There remains some <b>system</b> <b>code</b> that is not open sourced, and is available only as pre-compiled binary files.|$|E
50|$|The {{programmer}} usually edits and compiles the embedded <b>system's</b> <b>code</b> on {{the host}} system, as well. The host system will have special compilers that produce executable code for the embedded system, termed cross compilers or cross assemblers.|$|R
40|$|<b>Coding</b> <b>systems</b> is the {{assignment}} of symbols such as letters and numbers to provide specific identification of an object. Effective code provide unique and concise information of an object. In many cases, coding is used for making classification schemes that is useful for accounting <b>systems.</b> A <b>coding</b> <b>systems</b> consist of character set that is symbols {{that are used to}} define something. Accountants commonly use <b>coding</b> <b>systems</b> when they design chart of accounts...|$|R
5000|$|Jon had written, {{edited and}} co-authored {{a number of}} books and {{publications}} which have been adopted internationally in academic courses, including TCP/IP & Linux Protocol Implementation: <b>Systems</b> <b>Code</b> for the Linux Internet, [...] Internetworking Multimedia and Open Distributed Systems.|$|R
5000|$|Transistor As A Service (TAAS) is a transistor-level {{reconfigurable}} chip technology which directly executes <b>system</b> <b>code</b> [...] {{written in}} C/C++ and other languages {{using the same}} transistor real estate on chip. Such <b>system</b> <b>code</b> represents and abstracts system's functionality and interactions with the external world that the system interfaces with. Examples of <b>system</b> <b>code</b> are video encoding C model that takes camera sensor's RGB pixel data as input and outputs compressed video files, communication physical layer signal processing algorithms that have antenna signal as input and output demodulated data bits, deep convolutional neural networks process images and output recognized objects, etc. The biggest advantage of TAAS is its ASIC-like high performance and performance/power ratio as compared to processor or GPU architectures, making it the most suitable architecture for edge computing (client devices) in era of IoT.|$|E
50|$|Estimated {{annual sales}} of The Ajna Offensive is 86,000 copies. The label's Standard Industrial Classification code is 7389 and its North American Industry Classification <b>System</b> <b>code</b> is 561990.|$|E
50|$|In most systems, system calls {{can only}} be made from userspace processes, while in some systems, OS/360 and successors for example, privileged <b>system</b> <b>code</b> also issues system calls.|$|E
30|$|For the <b>coded</b> MIMO <b>system</b> with SSD, the {{theoretical}} performance analysis is very difficult. Compared with SISO <b>system,</b> <b>coded</b> MIMO <b>system</b> with SSD lacks {{the theoretical}} {{analysis of the}} performance. The performance of proposed MIMO-SSD systems in [34 – 39] are evaluated by simulations.|$|R
40|$|Abstract: We {{show that}} Polarization-Time codes can {{mitigate}} PDL impairments in long-haul OFDM <b>systems.</b> <b>Coding</b> gains are maintained in weakly non-linear regime and no extra penalty is added when non-linear effects become severe. OCIS codes: (060. 2330) Fiber optics communications, (060. 4080) Modulation 1...|$|R
50|$|Limburg {{makes up}} one {{region of the}} International Organization for Standardization world region <b>code</b> <b>system,</b> having the <b>code</b> ISO 3166-2:NL-LI.|$|R
