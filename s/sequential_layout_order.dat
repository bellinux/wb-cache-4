0|274|Public
50|$|NimbleOS is Nimble's {{operating}} system {{heavily dependent on}} a patented file-system architecture, cache accelerated <b>sequential</b> <b>layout</b> (CASL). NimbleOS includes: flexible flash scaling, adaptive flash service levels, dynamic flash-based read caching, write-optimized data layout, inline compression, scale-to-fit flexibility, scale out, snapshots and integrated data protection, efficient replication, deduplication, and zero-copy clones.|$|R
40|$|An {{investigation}} {{was carried out}} during the rainy period in six semi-intensive production fish ponds in which water flowed from one pond to another without undergoing any treatment. Eight sampling sites were assigned at pond outlets during the rainy period (December-February). Lowest and highest physical and chemical parameters of water occurred in pond P 1 (a site near the springs) and in pond P 4 (a critical site that received allochthonous material from the other ponds and also from frog culture ponds), respectively. Pond <b>sequential</b> <b>layout</b> caused concentration of nutrients, chlorophyll-a and conductivity. Seasonal rains increased the water flow in the ponds and, consequently, silted more particles and other dissolved material from one fish pond to another. Silting increased limnological variables from P 3 to P 6. Although results suggest that during the period under analysis, rainfall affected positively the ponds' water quality and since the analyzed systems have been aligned in a <b>sequential</b> <b>layout</b> with constant water flow from fish ponds and parallel tanks without any previous treatment, care {{has to be taken}} so that an increase in rain-induced water flow does not have a contrary effect in the fish ponds investigated...|$|R
2500|$|Most {{operating}} systems allow switching between functional keyboard layouts, using a key combination involving register keys {{that are not}} used for normal operations (e.g. Microsoft reserve [...] or [...] register control keys for <b>sequential</b> <b>layout</b> switching; those keys were inherited from old DOS keyboard drivers). There are keyboards with two parallel sets of characters labeled on the keys, representing alternate alphabets or scripts. It is also possible to add {{a second set of}} characters to a keyboard with keyboard stickers manufactured by third parties.|$|R
50|$|ISO 9660 traces {{its roots}} to the High Sierra Format file system. High Sierra {{arranged}} file {{information in a}} dense, <b>sequential</b> <b>layout</b> to minimize nonsequential access by using a hierarchical (eight levels of directories deep) tree file system arrangement, similar to UNIX and FAT. To facilitate cross platform compatibility, it defined a minimal set of common file attributes (directory or ordinary file and time of recording) and name attributes (name, extension, and version), and used a separate system use area where future optional extensions for each file may be specified.|$|R
40|$|This article {{discusses}} how the Royal Festival Hall (RFH) {{was featured}} as a location in editorial photo-spreads published in British fashion periodicals Vogue and Harperâ€™s Bazaar throughout 1952. It invites {{another way of}} looking at the RFH, an often-celebrated architectural icon of British post-war history and democratic achievement. This article focuses upon the spatiality of the fashion magazine and addresses how this particular object context can aid the historical analysis of fashion imagery, and representations of space. Here a history of fashion, dress codes, femininity, modern architecture and post-war public cultural space is garnered within the <b>sequential</b> <b>layout</b> of the fashion magazine page...|$|R
40|$|This paper {{presents}} {{a new approach}} to analyse Building Information Models. Firstly, a domain-specific language in its textual notation is introduced. It is tailored to domain experts with little programming experience. Based on an uncomplicated pattern, the language offers a formal and general method of BIM-analysis. Additionally, its imperative nature and its <b>sequential</b> <b>layout</b> makes a stepwise execution and inspection of intermediate results possible. Thus, complex queries may consist of comprehensible and verifiable statements. As an alternative to textual definitions, we introduce a visual notation for BIM queries. Both the textual and the visual notation are based on the identical abstract syntax and offer the same range of functionalities...|$|R
50|$|The <b>layouts</b> are <b>ordered</b> by {{the line}} number.|$|R
50|$|As {{an example}} of how XRATE is used, {{consider}} a protein-coding gene consisting of exons interspersed with introns. The exons contain triplets of nucleotides (codons) that are translated by ribosomes according to the genetic code, and consequently are under selection pressure (since any mutation may affect the translated amino acid sequence). In contrast, the introns are under fewer selective constraints and tend to evolve faster. These varying pressures show up clearly in multiple alignments.The <b>sequential</b> <b>layout</b> of introns and exons can be described using grammar theory (from linguistics) and each of their distinct evolutionary signatures modeled as a continuous-time Markov process.XRATE allows the user to specify such models in a configuration file and estimate their parameters (evolutionary rates, length distributions of exons and introns, etc.) directly from alignment data, using the Expectation-maximization algorithm.|$|R
40|$|This paper {{examines}} the performance benefit gained by combining different storage and order picking policies. The author use simulation {{to analyze the}} dependencies on <b>order</b> picking <b>layout,</b> <b>order</b> structure and picking strategies. The results indicate that multi-order-picking has the greatest potential for decreasing the order picking time. By adding further picking strategies the performance is increased by a diversifying amount. This makes it necessary to consider the ratio between cost and benefit for each individual case...|$|R
5000|$|While {{watching}} an on-location filming of [...] "Charlie's Angels", Fong saw {{for the first}} time an on-set Storyboard and reasoned that wedding photography albums should use a similar format to depict a wedding story. So, using <b>sequential</b> photo <b>layouts</b> rather than static, posed images, Fong introduced the [...] "Storybook Concept". This style of wedding albums remains popular to this day.|$|R
50|$|In 2014, the Silk Board {{junction}} {{bus stop}} was moved 250 ft {{away from the}} junction towards HSR <b>Layout</b> in <b>order</b> to ensure free vehicular movement.|$|R
50|$|Each {{patent office}} has rules {{relating}} to {{the form of the}} specification, defining such things as paper size, font, <b>layout,</b> section <b>ordering</b> and headings. Such requirements vary between offices.|$|R
40|$|Semi-structured data is {{becoming}} commonplace with examples such as XML, Bioinformatics suffix-trees, scientific computing data, and even generic directory-file hierarchies. Such semi-structured data must be stored on mass storage devices for persistence {{as well as}} cost-efficiency. Current approaches, which map semi-structured data to relational databases or simply use flat files, incur a mismatch between {{the structure of the}} data and the underlying storage device (disk drive). In this paper, we explore alternate native strategies for storing semi-structured data that match its access characteristics to those of disk drives, using XML data as a concrete case study. In particular, we present algorithms that, given semi-structured data and a disk drive, decide how to store the data on the drive {{in a way that will}} later allow efficient navigation and retrieval. We evaluate our proposed methods using the DiskSim disk simulator and benchmark XPath queries. The experimental results indicate savings of as much as 7 X- 34 X in query execution time for an important class of navigational queries (which we call non-deep-focused class), compared to the baseline <b>sequential</b> <b>layout</b> of the XML data. ...|$|R
5000|$|Persistence of user-set column <b>layouts</b> (i.e. widths, <b>ordering,</b> {{visibility}} and sorting of lists) ...|$|R
5000|$|A more {{detailed}} <b>layout</b> of the <b>Order</b> of Service for Good Friday Vespers is as follows: ...|$|R
40|$|Video-on-demand (VOD) is {{increasingly}} {{becoming one of}} the most important and successful services due to the recent advances in storage subsystems, compression technology, and networking. Therefore, the investigation of various alternatives to improve the performance of VOD servers has become a major research focus. The reduction of disk access time through intelligent data placement strategies is one such avenue and is the theme of this paper. Movie rental patterns indicate that accesses to movies are highly localized, with only a small number of movies receiving most of the accesses. In this paper, we exploit the access patterns and propose an adaptive rearrangement of the blocks on each disk within the server. With this approach, the blocks of the movies with comparable access frequencies are kept closer to each other. We analyze two rearrangement schemes, called centered and sequential. In the centered layout, blocks are placed according to their access patterns starting with the most popular movie at the center. The <b>sequential</b> <b>layout</b> places movies in the order of their popularity starting at the edge of the disk. We compare and evaluate, through an intensive simulation study, the effectiveness of these layouts with respect to arbitrary layouts. The simulation results indicate that significant disk improvements could be attained by adopting the proposed schemes, and that the centered layout is the best performer. 1...|$|R
25|$|Shai Coleman {{developed}} the Colemak keyboard <b>layout</b> in <b>order</b> to make typing easier {{by placing the}} most frequent letters under the strongest fingers. This is to prevent RSI syndrome that {{can be caused by}} repetitive and lasting movements such as pressing keys frequently in an unfavorable position, so a faster typing speed is achieved.|$|R
50|$|The Bachelor of Art {{department}} {{is the largest}} department at The Animation Workshop offering three programs in Computer Graphics Art, Character Animation and Graphic Storytelling. The Computer Graphic artists explore the work methods of a computer graphics production from start to finish: from the concept design and storyboarding, through {{all aspects of the}} 3D Maya pipeline, to compositing. Character Animators focus on the classical principles of animation through the study of physicality and acting within hand drawn 2D animation, flash and 3D animation in Maya. Graphic Storytelling teaches students all areas of working with graphic storytelling: drawing, <b>sequential</b> storytelling, <b>layout,</b> scripting, storyboarding for films, cross media and developing original graphic universes.|$|R
50|$|The English {{title is}} a kind of {{recursive}} acronym (Lisp in Small Pieces). It was originally published in French by InterÃ©ditions with the title Les Langages Lisp. The revised edition, published by Paracamplus, bears the title Principes dimplantation de Scheme et Lisp, another acronym based on the cover <b>layout</b> which <b>orders</b> the title as the following list (Lisp Implementation Scheme Principes).|$|R
50|$|Kawasaki {{first started}} {{to develop the}} {{motorcycles}} in 1974, {{under the direction of}} Nagato Sato, and chose the <b>layout</b> in <b>order</b> to minimise the frontal area of the machine and allow a disc valve engine design. In its first years, it was ridden by Mick Grant and gained little success but in 1977 it won the Dutch TT at the Assen racing circuit.|$|R
40|$|Two-dimensional arrays are {{generally}} arranged in memory in row-major order or column-major order. Sophisticated programmers, or occasionally sophisticated compilers, match the loop structure to the language's storage <b>layout</b> in <b>order</b> to maximise spatial locality. Unsophisticated programmers do not, {{and the performance}} loss is often dramatic | up to a factor of 20. With knowledge of how the array will be used, it is often possible {{to choose between the}} two <b>layouts</b> in <b>order</b> to maximise spatial locality. In this paper we study the Morton storage layout, which has substantial spatial locality whether traversed in row-major or column-major order. We present results from a suite of simple application kernels which show that, on the AMD Athlon and Pentium III, for arrays larger than 256 256, Morton array layout, even implemented with a lookup table with no compiler support, is always within 61 % of both row-major and column-major | and is sometimes faster...|$|R
40|$|This thesis {{describes}} {{a way to}} visualize hierarchical structures on PDAs using Treemaps. A new <b>ordered</b> <b>layout</b> algorithm for treemaps, called Split Layout, is presented. Traditionally, treemap algorithms have exhibited a trade off between good aspect ratio and <b>ordered</b> <b>layout.</b> The new Split Layout is compared to five published treemap algorithms. Properties such as avarage aspect ratio, stability, run time and readability are measured, and it is shown that the new Split Layout performs better than any known <b>ordered</b> <b>layout.</b> The average aspect ratio is about 23 % better and the stability increased between 28 % and 40 %. A user study was performed to measure {{the quality of the}} ordering of the new algorithm. 30 users gave a total of 360 measured response times, and {{it was found that the}} median time to locate a specific rectangle in the treemap only took 0. 14 seconds (5 %) longer for the Split Layout than for the Pivot by Split Size algorithm...|$|R
40|$|Sound {{designers}} source {{sounds in}} massive collections, heav-ily tagged by themselves and sound librarians. For each query, once successive keywords attained {{a limit to}} filter down the results, hundreds of sounds are left to be reviewed. AudioMetro combines a new content-based information visu-alization technique with instant audio feedback to facilitate this part of their workflow. We show through user evalua-tions by known-item search in collections of textural sounds that a default grid <b>layout</b> <b>ordered</b> by filename unexpectedly outperforms content-based similarity layouts resulting from a recent dimension reduction technique (Student-t Stochas-tic Neighbor Embedding), even when complemented with content-based glyphs that emphasize local neighborhoods and cue perceptual features. We propose a solution bor-rowed from image browsing: a proximity grid, whose density we optimize for nearest neighborhood preservation among the closest cells. Not only does it remove overlap but we show through a subsequent user evaluation that it also helps to direct the search. We based our experiments on an open dataset (the OLPC sound library) for replicability...|$|R
50|$|Tag {{clouds are}} {{typically}} represented using inline HTML elements. The tags can appear in alphabetical order, {{in a random}} order, they can be sorted by weight, and so on. Sometimes, further visual properties are manipulated in addition to font size, such as the font color, intensity, or weight. Most popular is a rectangular tag arrangement with alphabetical sorting in a <b>sequential</b> line-by-line <b>layout.</b> The decision for an optimal layout should be driven by the expected user goals. Some prefer to cluster the tags semantically so that similar tags will appear near each other. Heuristics {{can be used to}} reduce the size of the tag cloud whether or not the purpose is to cluster the tags.|$|R
25|$|Title II {{applies to}} public {{transportation}} provided by public entities through regulations by the U.S. Department of Transportation. It includes the National Railroad Passenger Corporation (Amtrak), {{along with all}} other commuter authorities. This section requires the provision of paratransit services by public entities that provide fixed route services. ADA also sets minimum requirements for space <b>layout</b> in <b>order</b> to facilitate wheelchair securement on public transport.|$|R
50|$|Make Trax is a maze game {{in which}} the player {{controls}} a paintbrush and must paint the entire <b>layout</b> in <b>order</b> {{to advance to the}} next stage. Two fish - one yellow, the other light-blue - emerge from separate aquariums to pursue the paintbrush around the board, and if either of the fish succeeds in making contact with the paintbrush, the player loses one of three lives.|$|R
50|$|Title II {{applies to}} public {{transportation}} provided by public entities through regulations by the U.S. Department of Transportation. It includes the National Railroad Passenger Corporation (Amtrak), {{along with all}} other commuter authorities. This section requires the provision of paratransit services by public entities that provide fixed route services. ADA also sets minimum requirements for space <b>layout</b> in <b>order</b> to facilitate wheelchair securement on public transport.|$|R
5000|$|One popular theory {{suggests}} that the reason {{is similar to that}} given for the QWERTY <b>layout,</b> the unfamiliar <b>ordering</b> slowed down users to accommodate the slow switches of the late 1950s and early 1960s.|$|R
40|$|AbstractâŽ¯In this paper, {{issues of}} storage <b>layout</b> and <b>order</b> picking {{operations}} problems for warehousing are addressed using optimization techniques. The {{aim of this}} study is to develop a dynamic planning system applied for storage layout and order-picking operations problems. The planning system considers dynamic nature of customer order demand, configuration of picking area, and interactive human-machine interface. Heuristic-based optimization technique is utilized to design the planning system. To analyze the dynamic nature of customer order demand, similarity measures among types of items are defined using the entry-order-quantity rule. Based on the characteristics of customer order demand and the configuration of picking area, a zero-one quadratic generalized assignment model is developed. A heuristic procedure is devised to find near-optimal solutions to this problem and coded using Borland C++ computer language. An industrial size application is performed to demonstrate this approach. Results indicate that the developed planning system can be promising for dealing with storage <b>layout</b> and <b>order</b> picking operations problems for warehousing. KeywordsâŽ¯Warehousing, 0 - 1 quadratic generalized assignment model, stock location 1...|$|R
40|$|Significant {{progress}} has been made toward all of the goals for {{the first phase of the}} project short of actual fabrication of a light path. Two alternative approaches to fabricating gold mirrors using the basic LIGA process were developed, one using electroplated solid gold mirrors and the second using gold plated over a nickel base. A new method of fabrication, the transfer mask process, was developed and demonstrated. Analysis of the projected surface roughness and beam divergence effects was completed. With gold surface with low surface roughness scattering losses are expected to be insignificant. Beam divergence due to diffraction will require a modification of the original design, but should be eliminated by fabricating mirrors 1000 mu m in height by 1000 mu m in width and using a source with an initial beam radius greater than 300 mu m. This may eliminate any need for focusing optics. Since the modified design does not affect the mask <b>layout,</b> <b>ordering</b> of the mask and fabrication of the test structures can begin immediately at the start of Phase 1...|$|R
50|$|After the Great Siege of Malta, Valletta {{was planned}} and {{built on a}} grid's <b>layout</b> by the <b>Order</b> of St. John, with Republic Street (back then, Strada San Giorgio) in the midst, to become {{the main street of}} the city.|$|R
5000|$|A {{number of}} modern {{operating}} systems, such as Mac OS X and Linux, offer {{the choice of}} using phonetic keyboard layout for Russian instead of the default <b>layout.</b> In <b>order</b> to create a phonetic keyboard layout for Microsoft Windows, one needs a special [...] "keyboard layout editor" [...] software - such as a MSKLC, available for free from Microsoft. A number of ready-made layout files for Microsoft Windows are available online for Russian as well as Belarusian.|$|R
5000|$|Coving is {{a method}} of urban {{planning}} used in subdivision and redevelopment of cities characterized by non-uniform lot shapes and home placement. When combined with winding roads, lot area is increased and road area reduced. Coving is used {{as an alternative to}} conventional urban [...] "grid" [...] and suburban zoning-driven land development <b>layouts</b> in <b>order</b> to enhance curb appeal, eliminate monotony, reduce costs, such as road surfacing and street length, while increasing the amount of land available for construction.|$|R
40|$|How good {{is a given}} graph clustering, graph <b>layout,</b> or graph <b>ordering</b> â€“ specifically, {{how well}} does it group densely {{connected}} vertices and separate sparsely connected vertices? How good is a given software design â€“ specifically, how well does it min-imize the interdependence of the subsystems? This work introduces and validates simple and uniform measures for these two properties. Together with existing op-timization algorithms, the introduced measures enable the automatic computation e. g. of communities in social networks and of design flaws in software systems. The first part derives, validates, and unifies quality measures for graph cluster-ings, graph layouts, and graph orderings, with the following results: â€¢ Identical quality measures {{can be applied to}} clusterings, layouts, and orderings; this enables the computation of consistent clusterings, layouts, and orderings. â€¢ Diverse existing and new measures can be unified into few general measures; this facilitates their comparison and validation. â€¢ Many existing measures are biased towards certain clusterings, <b>layouts,</b> or <b>order...</b>|$|R
40|$|Molecular {{dynamics}} is used {{to study}} the time evolution of systems of atoms. It is common to constrain bond lengths {{in order to increase}} the time step of the simulation. Here we accelerate Newtonâ€™s method for solving the constraint equations for a system consisting of many identical small molecules. Starting with a modular and generic base code using a <b>sequential</b> data <b>layout,</b> we apply three different optimization techniques. The compiled code approach {{is used to}} generate subroutines equivalent to a single step of Newtonâ€™s method for a user specified molecule. Differing from the generic subroutines, these specific routines contain no loops and no indirect addressing. Interleaving the data describing different molecules generates vectorizable loops. Finally, we apply task fusion. The simultaneous application of all three techniques increases the speed of the base code by a factor of 15 for single precision calculations...|$|R
50|$|The {{primary goal}} of the course is to develop studentsâ€™ skills as reporters and writers. Students also learn {{newspaper}} design and <b>layout</b> skills. In <b>order</b> to generate topics that inform and entertain the audience, students must think critically and creatively while communicating effectively with each other.|$|R
