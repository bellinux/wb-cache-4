10|24|Public
5000|$|... tenKsolar {{manufactures}} the RAIS WAVE {{system which}} combines PV modules, power electronics, <b>static</b> <b>reflection,</b> and racking configured in a repeating wave pattern {{to provide the}} market’s most energy dense PV system for flat roof deployments. The cells, modules, and inverters are all wired in parallel, and the module and system voltage is 50V. The low voltage, parallel architecture contributes to a highly reliable system architecture that has no {{single point of failure}} and a system that is inherently safe, with no possibility of generating arc flashes or lethal shocks. This architecture, combined with module integrated power electronics, enables tenKsolar’s modules to utilize static/non uniform reflection and therefore generate 20% more energy per installed Watt of power when combined with tenK’s integrated reflector. The integrated electronics also enable the system to automatically sense ground faults and shut down immediately. The ultimate result of tenKs technology is a system that is extremely energy dense, reliable, and safe.|$|E
40|$|Reflection allows {{defining}} generic {{operations in}} terms of the constituents of objects. These definitions incur overhead if reflection takes place at run time, which is the common case in popular languages. If performance matters, some compile-time means of reflection is desired to obviate that penalty. Furthermore, the information provided by <b>static</b> <b>reflection</b> can be utilised for class generation, e. g., to optimize internal representation. We demonstrate how to provide <b>static</b> <b>reflection</b> on class field properties by means of generic components in an OO language with static meta-programming facilities. Surprisingly, {{a major part of the}} solution is not specific to the particular task of providing reflection. We define the internal representation of classes by a reworked implementation of a generic container that models the concept of a statically indexed family. The proposed features of this implementation are also beneficial to its use as a common container...|$|E
40|$|<b>Static</b> <b>reflection</b> How to {{read this}} {{document}} The first two sections are devoted to the introduction to reflection and reflective programming, they contain some motivational examples and some experiences with usage of a library-based reflection utility. These can be skipped if you are knowledgeable about reflection. Section 3 contains {{the rationale for the}} design decisions. The most important part is the technical specification in section 4, the impact on the standard is discussed in section 5, the issues that need to be resolved are liste...|$|E
30|$|Such an approach, called Q-D, {{was offered}} for {{modeling}} access and backhaul millimeter-wave channels at 60  GHz [9, 15]. The approach {{builds on the}} representation of the millimeter-wave channel impulse response comprised of a few Q-D strong rays (D-rays), a number of relatively weak random rays (R-rays, originating from the <b>static</b> surfaces <b>reflections),</b> and flashing rays (F-rays, originating from moving cars, buses, and other dynamic objects reflections).|$|R
50|$|As {{the names}} imply, {{both of the}} NRL systems relied on the {{comparison}} of returned signals stored on magnetic drums. In an attempt to remove clutter from radar displays, many late-war and post-war radar systems added an acoustic delay line that stored the received signal for exactly {{the amount of time}} needed for the next signal pulse to arrive. By adding the newly arrived signal to an inverted version of the signals stored in the delay line, the output signal included just the changes from one pulse to the next. This removed any <b>static</b> <b>reflections,</b> like nearby hills or other objects, leaving only the moving objects, such as aircraft. This basic concept would work for a long-range radar as well, but had the problem that a delay line has to be mechanically sized to the pulse repetition frequency of the radar, or PRF. For long-range use, the PRF was very long to start, and deliberately changed in order to make different ranges come into view. For this role, the delay line was not usable, and the magnetic drum, recently introduced, provided a convenient and easily controlled variable-delay system.|$|R
40|$|Abstract — This paper {{addresses}} the bilateral control of non-linear teleoperation with time varying communication delays. The proposed methods {{are two types}} of simple PD-type con-trollers which consists of D-controls depending on (the upper bound of) the rate of change of delay and P-controls depending on the upper bound of round-trip delay. Using Lyapunov-Krasovskii function, the delay-dependent stability of the origin is shown for the ranges of gains. Furthermore the proposed strategies also achieve master-slave position coordination and bilateral <b>static</b> force <b>reflection.</b> Several experimental results show the effectiveness of our proposed methods. I...|$|R
40|$|Abstract This {{paper is}} the {{follow-up}} to N 3996 and N 4111 an {{it is the}} third revision of the proposal to add support for <b>static</b> <b>reflection</b> to the C++ standard. During the presentation of N 4111 concerns were expressed about the level-of-detail {{and scope of the}} presented proposal and possible dangers of giving non-expert language users a too powerful tool to use and the dangers of implementing it all at once. This paper aims to address these issues. Furthermore, the accompanying paper – N 4452 describes several use cases of reflection, which were called for during the presentation of N 4111...|$|E
40|$|The {{demand for}} low cost and less weight antenna with compact {{broadband}} features in communication system is rapidly increasing. In this work, {{the possibility of}} employing dual gap on square patch reflectarray antenna for bandwidth improvement is presented. The introduction of dual gap attached on square patch is shown to improve the bandwidth performance from 315 MHz to 397 MHz. Moreover 26 % improvement of bandwidth performance offers an achievable <b>static</b> <b>reflection</b> loss of 0. 28 dB. Several parameters of reflectarray antenna such as reflection loss, reflection phase, bandwidth and figure of merit (FoM) are also discussed in this work...|$|E
40|$|A {{systematic}} {{study of}} fission-barrier dependence on excitation energy has been performed using the self-consistent finite-temperature Hartree-Fock+BCS (FT-HF+BCS) formalism with the SkM* Skyrme energy density functional. The calculations {{have been carried}} out for even-even superheavy nuclei with Z ranging between 110 and 124. For an accurate description of fission pathways, the effects of triaxial and reflection-asymmetric degrees of freedom have been fully incorporated. Our survey demonstrates that the dependence of isentropic fission barriers on excitation energy changes rapidly with particle number, pointing to the importance of shell effects even at large excitation energies characteristic of compound nuclei. The fastest decrease of fission barriers with excitation energy is predicted for deformed nuclei around N= 164 and spherical nuclei around N= 184 that are strongly stabilized by ground-state shell effects. For nuclei 240 Pu and 256 Fm, which exhibit asymmetric spontaneous fission, our calculations predict a transition to symmetric fission at high excitation energies due to the thermal quenching of <b>static</b> <b>reflection</b> asymmetric deformations. Comment: 5 pages, 4 figure...|$|E
40|$|Reflection and {{reflective}} programming {{can be used}} {{for a wide range of}} tasks such as implementation of serialization-like operations, remote procedure calls, scripting, automated GUIgeneration, implementation of several software design patterns, etc. C++ as one of the most prevalent programming languages however, for various reasons, lacks a standardized reflection facility. In this paper we present Mirror - a portable library adding reflection to C++ with a command-line utility automating its usage. This library supports functional style <b>static</b> compiletime <b>reflection</b> and metaprogramming and also provides two different object-oriented run-time polymorphic layers for dynamic reflection...|$|R
40|$|Abstract: We {{propose a}} novel control scheme for teleoperators {{consisting}} {{of a pair of}} multi-degree-of-freedom (DOF) nonlinear robotic systems under a constant communication time delay. By passifying the communication and control blocks together, the proposed control scheme guarantees energetic passivity of the closed-loop teleoperator in the presence of parametric uncertainty and a constant communication delay without relying on widely utilized scattering or wave formalisms. The proposed control scheme also achieves exponential masterslave position coordination and bilateral <b>static</b> force <b>reflection.</b> The proposed control scheme is symmetric {{in the sense that the}} control and communication laws of the the master and slave are of the same form. Simulations are performed to validate properties of the proposed control scheme...|$|R
40|$|We study supersymmetric domain {{walls in}} N= 1 supergravity theories, {{including}} those with modular-invariant superpotentials arising in superstring compactifications. Such domain walls are shown to saturate the Bogomol’nyi bound of wall energy per unit area. We find <b>static</b> and <b>reflection</b> asymmetric domain wall solutions of the self-duality equations for the metric and the matter fields. Our result establishes {{a new class of}} domain walls beyond those previously classified. As a corollary, we define a precise notion of vacuum degeneracy in the supergravity theories. In addition, we found examples of global supersymmetric domain walls that do not have an analog when gravity is turned on. This result establishes {{that in the case of}} extended topological defects gravity plays a crucial, nontrivial rol...|$|R
40|$|We {{investigate}} the phase diagram of branching annihilating random walks with {{one and two}} offsprings in one dimension. A walker can hop to a nearest neighbor site or branch {{with one or two}} offsprings with relative ratio. Two walkers annihilate immediately when they meet. In general, this model exhibits a continuous phase transition from an active state into the absorbing state (vacuum) at a finite hopping probability. We map out the phase diagram by Monte Carlo simulations which shows a reentrant phase transition from vacuum to an active state and finally into vacuum again as the relative rate of the two-offspring branching process increases. This reentrant property apparently contradicts the conventional wisdom that increasing the number of offsprings will tend to make the system more active. We show that the reentrant property is due to the <b>static</b> <b>reflection</b> symmetry of two-offspring branching processes and the conventional wisdom is recovered when the dynamic reflection symmetry is introduced instead of the static one. Comment: 14 pages, Revtex, 4 figures (one PS figure file upon request) (submitted to Phy. Rev. E...|$|E
40|$|Despite its {{widespread}} use in Android apps, reflection poses graving problems for static security analysis. Currently, string inference {{is applied to}} handle reflection, resulting in significantly missed security vulnerabilities. In this paper, we bring forward the ubiquity of incomplete information environments (IIEs) for Android apps, where some critical data-flows are missing during static analysis, {{and the need for}} resolving reflective calls under IIEs. We present Ripple, the first IIE-aware <b>static</b> <b>reflection</b> analysis for Android apps that resolves reflective calls more soundly than string inference. Validation with 17 popular Android apps from Google Play demonstrates the effectiveness of Ripple in discovering reflective targets with a low false positive rate. As a result, Ripple enables FlowDroid, a taint analysis for Android apps, to find hundreds of sensitive data leakages that would otherwise be missed. As a fundamental analysis, Ripple will be valuable for many security analysis clients, since more program behaviors can now be analyzed under IIEs. Comment: This is an extended version of Yifei Zhang, Tian Tan, Yue Li and Jingling Xue, Ripple: Reflection Analysis for Android Apps in Incomplete Information Environments, CODASPY ' 1...|$|E
40|$|We study Floquet topological phases in {{periodically}} driven {{systems that}} are protected by "time glide symmetry", a combination of reflection and half time period translation. Time glide symmetry is an analog of glide symmetry with partial time translation replacing the partial space translation, and hence, is an intrinsically dynamical symmetry which may be engineered in periodically driven systems by exploiting the controllability of driving. We present lattice models of time glide symmetric Floquet topological insulators in two and three dimensions. The topological numbers characterizing those Floquet topological phases are derived from the half period time evolution operator along with time glide operator. Moreover, we classify Floquet topological phases protected by time glide symmetry in general dimensions using a Clifford algebra approach. The obtained classification table {{is similar to that}} for topological crystalline insulators protected by <b>static</b> <b>reflection</b> symmetry, but shows nontrivial entries in different combination of symmetries, which clarifies that time glide symmetric Floquet topological phases are a distinct set of topological phases from topological crystalline insulators. We also classify Floquet topological phases with "time screw symmetry," defined as a two-fold spatial rotation accompanied by half-period time translation. Comment: 17 pages, 5 figure...|$|E
40|$|The study {{aimed to}} {{investigate}} naïve beliefs regarding the dynamic and <b>static</b> behavior of <b>reflections.</b> In {{the first three}} experiments, {{participants in the study}} made predictions about the correspondence between real and reflected movements or about the orientation of the <b>reflection</b> of a <b>static</b> object placed in front of a mirror. In Experiments 1 and 2, paper-and-pencil tasks were used and in Experiment 3 participants were asked to make their predictions while imagining that they were facing a mirror. Results revealed that a percentage of undergraduates (ranging from 25...|$|R
40|$|Reflection is a {{language}} feature which allows {{to analyze and}} transform the behavior of classes at the runtime. Reflection is used for software debugging and testing. Malware authors can leverage reflection to subvert the malware detection by <b>static</b> analyzers. <b>Reflection</b> initializes the class, invokes any method of class, or accesses any field of class. But, instead of utilizing usual programming language syntax, reflection passes classes/methods etc. as parameters to reflective APIs. As a consequence, these parameters can be constructed dynamically or can be encrypted by malware. These cannot be detected by state-of-the-art static tools. We propose EspyDroid, a system that combines dynamic analysis with code instrumentation for a more precise and automated detection of malware employing reflection. We evaluate EspyDroid on 28 benchmark apps employing major reflection categories. Our technique show improved results over FlowDroid via detection of additional undetected flows. These flows have potential to leak sensitive and private information of the users, through various sinks...|$|R
40|$|Reflection {{has always}} been a thorn in the side of Java static {{analysis}} tools. Without a full treatment of <b>reflection,</b> <b>static</b> analysis tools are both incomplete because some parts of the program may not be included in the application call graph, and unsound because the static analysis {{does not take into account}} reflective features of Java that allow writes to object fields and method invocations. However, accurately analyzing reflection {{has always been}} di#cult, leading to most static analysis tools treating reflection in an unsound manner or just ignoring it entirely. This is unsatisfactory as many modern Java applications make significant use of reflection...|$|R
40|$|Java {{reflection}} {{has been}} increasingly {{used in a}} wide range of software. It allows a software system to inspect and/or modify the behaviour of its classes, interfaces, methods and fields at runtime, enabling the software to adapt to dynamically changing runtime environments. However, this dynamic language feature imposes significant challenges to static analysis, because the behaviour of reflection-rich software is logically complex and statically hard to predict, especially when manipulated frequently by statically unknown string values. As a result, existing static analysis tools either ignore reflection or handle it partially, resulting in missed, important behaviours, i. e., unsound results. Therefore, improving or even achieving soundness in (<b>static)</b> <b>reflection</b> analysis [...] an analysis that infers statically the behaviour of reflective code [...] will provide significant benefits to many analysis clients, such as bug detectors, security analyzers and program verifiers. This paper makes two contributions: we provide a comprehensive understanding of Java reflection through examining its underlying concept, API and real-world usage, and, building on this, we introduce a new static approach to resolving Java reflection effectively in practice. We have implemented our reflection analysis in an open-source tool, called SOLAR, and evaluated its effectiveness extensively with large Java programs and libraries. Our experimental results demonstrate that SOLAR is able to (1) resolve reflection more soundly than the state-of-the-art reflection analysis; (2) automatically and accurately identify the parts of the program where reflection is resolved unsoundly or imprecisely; and (3) guide users to iteratively refine the analysis results by using lightweight annotations until their specific requirements are satisfied. Comment: 46 page...|$|E
40|$|Rainbows are {{generally}} considered to be caused by <b>static</b> refraction and <b>reflection.</b> A primary and a secondary rainbow appear due to refraction and internal reflection in a raindrop as explained by Newton. The quantum nuclear rainbow, which is generated by refraction in the nucleus droplet, only has a "primary" rainbow. Here we show for the first time evidence for the existence of a secondary nuclear rainbow generated dynamically by coupling to an excited state without internal reflection. This has been demonstrated for experimental $^{ 16 }$O+$^{ 12 }$C scattering using the coupled channel method with an extended double folding potential derived from microscopic realistic wave functions for $^{ 12 }$C and $^{ 16 }$O. Comment: 5 pages, 4 figure...|$|R
5000|$|The Plus-minus was {{developed}} for shallow seismic surveys where a thin, low velocity weathering layer covers the more solid basement. The thickness of the weathering layer is, among others, important for <b>static</b> corrections in <b>reflection</b> seismic processing or for engineering purposes. An important advantage of the method {{is that it does}} not require manual interpretation of the intercept time or the crossover point. This makes it is also easy to implement in computer programs. However, it is only applicable if the layer boundary is planar in parts and the dips are small. These assumptions often lead to smoothing of the actual topography of the layer boundary. Nowadays, the Plus-minus method has mostly been replaced by more advanced inversion methods that have less restrictions. However, the Plus-minus method is still used for real-time processing in the field because of its simplicity and low computational costs.|$|R
40|$|Charge-lattice {{fluctuations}} {{are observed}} in the layered perovskite manganite LaSr 2 Mn 2 O 7 by Raman spectroscopy as high as 340 K and with decreasing temperature they become static and form a charge ordered (CO) phase below TCO= 210 K. In the <b>static</b> regime, superlattice <b>reflections</b> are observed through neutron and x-ray diffraction with a propagation vector (h+ 1 / 4,k- 1 / 4,l). Crystallographic analysis of the CO state demonstrates {{that the degree of}} charge and orbital ordering in this manganite is weaker than the charge ordering in three dimensional perovskite manganites. A TN= 170 K a type-A antiferromagnetism (AF) develops and competes with the charge ordering, that eventually melts below T*= 100 K. High resolution diffraction measurements suggest that that CO- and AF-states do not coincide within the same region in the material but rather co-exist as separate phases. The transition to type-A antiferromagnetism at lower temperatures is characterized by the competition between these two phases. Comment: 9 pages, 6 figure...|$|R
40|$|Blind source {{separation}} (BSS) {{has been}} successfully applied in separation of <b>static</b> images from <b>reflections</b> superimposed on the desired image by a semi-reflective medium. In our previous study [1], we have shown simulation results for the separation of dynamic reflections. Here we further discuss this problem and show results of experimental data for separation of dynamic images. We also illustrate an application concerned with recovery of images acquired through a semi-transparent cloudy medium. This is a more complex problem in that the mixtures are not stationary in space, the mixing coefficients vary {{in the presence of}} clouds, and the mixtures involve also multiplicative and convolutive components. We apply the three-dimensional spatio-temporal Sparse ICA (SPICA) method on simulations of linearly mixed moving landscape, contaminated by the interference of clouds. We then incorporate a nonlinear multiplicative interaction and examine its effects on the SNR of the recovered image. We illustrate preliminary promising results. 1...|$|R
40|$|In {{sync with}} the {{accelerated}} integration of communication and control systems, this dissertation presents theoretical and experimental results on the robust control of networked Lagrangian systems with discrete-delayed inputs and uncertain information. Within this context, we present novel solutions to the control of nonlinear systems, coordination of multiple agents, bilateral teleoperation, and collision avoidance over unreliable communication channels. We start {{with the introduction of}} a passivity-based Model Reference Robust Control framework that guarantees delay-independent asymptotic stability and state convergence of dissipative, nonlinear Lagrangian systems with input and state measurement delays. Then, the proposed control methodology is extended to networks of multiple heterogeneous systems. We demonstrate that stability, formation, and cooperative motion coordination can be attained independently of arbitrarily large constant input delays. We next treat the control problem of single-master-single-slave bilateral teleoperation. Using concepts of passivity theory and input-to-state stability, we design a control strategy that passively compensates for position errors that arise during contact tasks and achieves delay-independent stability and transparency when alternating between unobstructed and obstructed environments. Likewise, we address the case of single-master-multi-slave teleoperation and propose a distributed control law that synthesizes the use of a proportional-derivative controller and the avoidance functions to enforce closed-loop stability, slaves-to-master motion coordination, formation control, <b>static</b> force <b>reflection,</b> and collision avoidance of a group of slave robots with bounded communication delays. We further investigate the topic of collision avoidance and formulate cooperative and noncooperative control strategies that guarantee the safe navigation of multiple Lagrangian systems with limited, unreliable sensing range. Along with the theoretical formulation of the control solutions, this dissertation presents simulation and experimental results with robotic manipulators and unmanned coaxial helicopters utilizing the proposed control strategies...|$|R
40|$|The {{need for}} {{increased}} resolution in velocity spectra is clear when {{one wishes to}} distinguish between neighboring primary events from reflectors with conflicting dip, or to identify primaries {{in the presence of}} multiples. The transformation in velocity analysis from the offset and reflection-time domain to the stacking velocity and zero-offset-time domain can be achieved using any of several coherence measures based on the crosscorrelations between traces in a collection such as a common-midpoint (CMP) gather or common-image gather (CIG). Use of selected subsets of crosscorrelations, rather than all possible ones in a gather, however, can improve both the reliability and resolution of velocity analysis. In selective-correlation velocity analysis, we include in the summation only those crosscorrelations for whose pair of traces the relative differential moveout of reflections exceeds a chosen threshold value. Comparisons of the performances on synthetic CMP gathers show that selective-correlation velocity analysis considerably enhances the resolving power of velocity spectra over that of conventional crosscorrelation sum (whether normalized or unnormalized) in the presence of closely interfering <b>reflections,</b> <b>statics</b> distortions and random noise, at no sacrifice in the quality of results, and does so at computational cost that is comparable to that for conventional velocity analysis...|$|R
40|$|We {{continue}} {{the study of}} time-like geodesic dynamics in exact <b>static,</b> axially and <b>reflection</b> symmetric space-times describing the fields of a Schwarzschild black hole surrounded by thin discs or rings. In the previous paper, the rise (and decline) of geodesic chaos with ring/disc mass and position and with test particle energy was revealed on Poincaré sections, on time series of position or velocity and their power spectra, and on time evolution of the orbital `latitudinal action'. In agreement with the KAM theory of nearly integrable dynamical systems and with the results observed in similar gravitational systems in the literature, we found orbits of very different degrees of chaoticity in the phase space of perturbed fields. Here we compare selected orbits in more detail and try to classify them according to {{the characteristics of the}} corresponding phase-variable time series, mainly according to the shape of the time-series power spectra, and also applying two recurrence methods: the method of `average directional vectors', which traces the directions in which the trajectory (recurrently) passes through a chosen phase-space cell, and the `recurrence-matrix' method, which consists of statistics over the recurrences themselves. All the methods proved simple and powerful, while it is interesting to observe how they differ in sensitivity to certain types of behaviour. Comment: 22 pages, 14 figure...|$|R
40|$|We {{continue}} {{the study of}} time-like geodesic dynamics in exact <b>static,</b> axially and <b>reflection</b> symmetric space-times describing the fields of a Schwarzschild black hole surrounded by thin discs or rings. In the first paper of this series, the rise (and decline) of geodesic chaos with ring/disc mass and position and with test particle energy was revealed on Poincaré sections and on time series of position or velocity and their power spectra. In the second paper we compared these results with those obtained by two recurrence methods, focusing on "sticky" orbits whose different parts show different degrees of chaoticity. Here we complement the analysis by using several Lyapunov-type coefficients which quantify the rate of orbital divergence. After comparing the results with those obtained by the previous methods, we specifically consider a system involving a black hole surrounded by a small thin disc or a large ring, having in mind the configuration which probably occurs in galactic nuclei. Within the range of parameters which roughly corresponds to our Galactic center, {{we found that the}} black-hole accretion disc does not have a significant gravitational effect on the dynamics of free motion at larger radii, while the inner circumnuclear molecular ring (concentrated above 1 parsec radius) can only induce some irregularity in motion of stars ("particles") on smaller radii if its mass reaches 10 to 30...|$|R
40|$|Most of {{the seismic}} data {{processing}} procedures {{are divided into}} 2 -D, 2. 5 -D, crooked lines or 3 -D versions dictated by {{the differences in the}} shot and receiver con-figurations. In this paper, we introduce a tomographic ap-proach that overcomes these geometrical difficulties and provides stable statics solutions from picked first-break times. We also show that the first-break picks contain both the short and the long wavelength surface statics. The solutions are obtained by solving a set of general-ized surface-consistent delay-time equations using the method of weighted least squares and conjugate gradi-ent. While iterating, each first-break pick is evaluated to ensure its consistency with the least-squares solution. Based on consistency, we weight the traveltime picks and use them in the next iteration. These weights also serve as an indicator of anomalous picks to the user. We show that long wavelength solutions leave large residual errors in the least-squares solutions. We also use the expected length of the Fresnel zone to differenti-ate between short and long wavelength static solutions. After removing the influence of long wavelength statics, we apply short wavelength statics to reduce the residual errors further. We demonstrate the validity of our unified method by applying it to actual data examples. The removal of both long and short wavelength statics improves the initial data set that produces a more consistent set of velocities and leaves only the short wavelength residual <b>reflection</b> <b>statics,</b> which are generally less than quarter wavelet pe-riod delays. This removes the most probable cause of the leg jump contamination and poor velocity estimates from the residual statics computations, especially from the 3 -D data...|$|R
40|$|Reflective {{programming}} {{allows one}} to construct programs that manipulate or examine their behaviour or structure at runtime. One of the benefits {{is the ability to}} create generic code that is able to adapt to being incorporated into different larger programs, without modifications to suit each concrete setting. Due to the runtime nature of <b>reflection,</b> <b>static</b> verification is difficult and has been largely ignored or only weakly supported. This work focusses on supporting verification for cases where generic code that uses reflection is to be used in a “closed” program where the structure of the program is known in advance. This thesis first describes extensions to a verification system and semi-automated tool that was developed to reason about heap-manipulating programs which may store executable code on the heap. These extensions enable the tool to support a wider range of programs on account of the ability to provide stronger specifications. The system’s underlying logic is an extension of separation logic that includes nested Hoare-triples which describe behaviour of stored code. Using this verification tool, with the crucial enhancements in this work, a specified reflective library has been created. The resulting work presents an approach where metadata is stored on the heap such that the reflective library can be implemented using primitive commands and then specified and verified, rather than developing new proof rules for the reflective operations. The supported reflective functions characterise a subset of Java’s reflection library and the specifications guarantee both memory safety and a degree of functional correctness. To demonstrate the application of the developed solution two case studies are carried out, each of which focuses on different reflection features. The contribution to knowledge is a first look at how to support semi-automated static verification of reflective programs with meaningful specifications...|$|R
40|$|Abstract. Reflection {{has always}} been a thorn in the side of Java static {{analysis}} tools. Without a full treatment of <b>reflection,</b> <b>static</b> analysis tools are both incomplete because some parts of the program may not be included in the application call graph, and unsound because the static analysis {{does not take into account}} reflective features of Java that allow writes to object fields and method invocations. However, accurately analyzing reflection {{has always been}} difficult, leading to most static analysis tools treating reflection in an unsound manner or just ignoring it entirely. This is unsatisfactory as many modern Java applications make significant use of reflection. In this paper we propose a static analysis algorithm that uses pointsto information to approximate the targets of reflective calls as part of call graph construction. Because reflective calls may rely on input to the application, in addition to performing reflection resolution, our algorithm also discovers all places in the program where user-provided specifications are necessary to fully resolve reflective targets. As an alternative to userprovided specifications, we also propose a reflection resolution approach based on type cast information that reduces the need for user input, but typically results in a less precise call graph. We have implemented the reflection resolution algorithms described in this paper and applied them to a set of six large, widely-used benchmark applications consisting of more than 600, 000 lines of code combined. Experiments show that our technique is effective for resolving most reflective calls without any user input. Certain reflective calls, however, cannot be resolved at compile time precisely. Relying on a user-provided specification to obtain a conservative call graph results in graphs that contain 1. 43 to 6. 58 times more methods that the original. In one case, a conservative call graph has 7, 047 more methods than a call graph that does not interpret reflective calls. In contrast, ignoring reflection leads to missing substantial portions of the application call graph. ...|$|R
40|$|Java {{reflection}} {{is increasingly}} {{used in a}} range of software and framework architectures. It allows a software system to examine itself and make changes that affect its execution at run-time, but creates significant challenges to static analysis. This is because the usages of reflection are quite complicated in real-world Java programs, and their dynamic behaviors are mainly specified by string arguments, which are usually unknown statically. As a result, in almost all the <b>static</b> analysis tools, <b>reflection</b> is either ignored or handled partially, resulting in missed, important behaviors, i. e., unsound results. Improving or even achieving soundness in reflection analysis will provide significant benefits to many clients, such as bug detectors, security analyzers and program verifiers. This thesis first introduces what Java reflection is, and conducts an empirical study on how reflection is used in real-world Java applications. Many useful findings are concluded for guiding the designs of more effective reflection analysis methods and tools. Based on this study, this thesis then presents two new techniques for handling reflection statically: a self-inferencing analysis called Elf, and a soundness-guided analysis called Solar. Elf is able to analyze reflection more effectively than the previous string resolution approach by exploiting a self-inferencing property found in our study. Such property is inherent in almost every reflective call, but not fully exploited by existing methods. Elf could make a disciplined trade-off among soundness, precision and scalability, while also discovering usually more reflective targets than in the previous work. Solar allows its soundness to be reasoned about when some reasonable assumptions are met, and yields significantly improved under-approximations otherwise. In addition, Solar is able to accurately identify where reflection is analyzed unsoundly or imprecisely and it provides a mechanism to guide users to iteratively refine the analysis results by lightweight annotations until their specific requirements are satisfied. For both Elf and Solar, this thesis presents their methodologies and formalisms and evaluates them against the state-of-the-art solutions with a set of large Java benchmarks and applications. The experimental results demonstrate their effectiveness as the new state-of-the-art reflection analyses in practice. Both Elf and Solar have been made available as open-source tools...|$|R
40|$|In this {{research}} paper, it evaluates the benefits achievable from static testing framework by analyzing and transforming the JUnit 3. 8 source code and static execution of transformed code. Static structure {{enables us to}} analyze the code statically during creation and execution of test cases. The concept of research is by now well established in static analysis and testing development. The research approach is also increasingly affecting the static testing process and such research oriented work has proved particularly valuable {{for those of us}} who want to understand the reflective behavior of JUnit 3. 8 Framework. JUnit 3. 8 Framework uses Java Reflection API to invoke core functionality (test cases creation and execution) dynamically. However, Java Reflection API allows developers to access and modify structure and behavior of a program.   Reflection provides flexible solution for creating test cases and controlling the execution of test cases. Java reflection helps to encapsulate test cases in a single object representing the test suite. It also helps to associate each test method with a test object. Where reflection is a powerful tool to perform potential operations, on the other hand, it limits static analysis. Static analysis tools often cannot work effectively with reflection. In order to avoid the <b>reflection,</b> <b>Static</b> Testing Framework provides a static platform to analyze the JUnit 3. 8 source code and transform it into non-reflective version that emulates the dynamic behavior of JUnit 3. 8. The transformed source code has possible leverage to replace <b>reflection</b> with <b>static</b> code and does same things in an execution environment of Static Testing Framework that reflection does in JUnit 3. 8. More besides, the transformed code also enables execution environment of Static Testing Framework to run test methods statically. In order to measure the degree of efficiency, the implemented tool is evaluated. The evaluation of Static Testing Framework draws results for different Java projects and these statistical data is compared with JUnit 3. 8 results to measure the effectiveness of Static Testing Framework. As a result of evaluation, STF can be used for static creation and execution of test cases up to JUnit 3. 8 where test cases are not creating within a test class and where real definition of constructors is not required. These problems can be dealt as future work by introducing a middle layer to execute test fixtures for each test method and by generating test classes as per real definition of constructors...|$|R
40|$|This thesis {{includes}} three different studies of geophysical imaging: (1) inference of plume moments from tomograms with cross-hole radar; (2) simulated annealing inversion for near-surface shear-wave velocity structure with microtremor measurements; and (3) time-lapse GPR imaging of water {{movement in the}} vadose zone. Although these studies involve different geophysical approaches, they are linked by a common theme—using geophysical imaging to understand hydrologic phenomena or subsurface structure. ^ My first study in this thesis {{is concerned with the}} identification of plume moments from geophysical tomograms. Previously geophysical imaging has been applied to characterize contaminant plume migration in groundwater, and to determine plume mass, extent, velocity, and shape. Although tomograms have been used for quantitative inference of plume moments, the reliability of these inferred moments is poorly understood. In general, tomograms represent blurry and blunted images of subsurface properties, as a consequence of limited data acquisition geometry, measurement error, and the effects of regularization. In this thesis, I investigated the effect of tomographic resolution on the inference of plume moments from tomograms. I presented a new approach to quantify the resolution of inferred moments, drawing on concepts from conventional geophysical image appraisal, and also image reconstruction from orthogonal moments. This new approach is demonstrated by synthetic examples in radar tomography. My results indicated that moments calculated from tomograms are subject to substantial error and bias. For example, for many practical survey geometries, crosshole radar tomography (1) is incapable of resolving the lateral center of mass, and (2) severely underpredicts total mass. The degree of bias and error varies spatially over the tomogram, in a complicated manner, as a result of spatially variable resolution. These findings have important implications for the quantitative use of tomograms to interpret plume morphology. ^ In my second study I developed a passive-seismic method to image shear-wave velocity, which is an important geotechnical property commonly correlated with soil type or lithology. I inverted shear-wave velocity profiles from the phase velocity dispersion of Rayleigh waves based on passive seismic observations (microtremors). I used several sets of microtremor data which were collected at different sites. I obtained the phase velocity dispersion curve by the Extended Spatial Autocorrelation (ESPAC) method. I used simulated annealing method is used to invert the subsurface shear-wave velocity profile from the fundamental phase velocity dispersion curve. The field-experimental and synthetic results indicated that the microtremor approach can provide valuable information for quantitative geotechnical and hydrologic characterization. ^ In my third study I developed a method to image vadose-zone dynamics using GPR. Flow in the unsaturated zone is important for predicting groundwater recharge, contaminant migration, and chemical/microbiological processes. However, it is difficult to characterize or monitor with conventional hydrologic measurements, which provide information at sparse locations. The {{purpose of this study was}} to image changes in moisture content, as well as aquifer structure based on the relation between dielectric constant and water content. The objective was to calibrate a flow model to field-experimental, time-lapse GPR data collected during an infiltration experiment. To this end, (1) I constructed a VS 2 DT model based on aquifer structure interpreted from <b>static</b> GPR <b>reflection</b> profiles; (2) I manually calibrated the model to reproduce observed changes in GPR data during infiltration; and (3) I used a time-domain electromagnetic finite-difference model to simulate experimental observations for comparison. The results of this work indicate that time-lapse GPR can monitor changes in water content on the order of a few percent. ^ Keywords. geophysical imaging, hydrogeologic characterization, geometric moments, orthogonal moments, central mass, regularization, measurement errors, unsaturated zone, moisture content, water infiltration, VS 2 DT, GPR, EM forward model, simulated-annealing, shear wave velocity, microtremor, Rayleigh wave, Extended Spatial Autocorrelation (ESPAC) method. ...|$|R

