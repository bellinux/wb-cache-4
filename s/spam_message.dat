53|383|Public
25|$|SPIT (SPam over Internet Telephony) is VoIP (Voice over Internet Protocol) spam, usually using SIP (Session Initiation Protocol). This {{is nearly}} {{identical}} to telemarketing calls over traditional phone lines. When the user chooses to receive the spam call, a pre-recorded <b>spam</b> <b>message</b> or advertisement is usually played back. This is generally easier for the spammer as VoIP services are cheap and easy to anonymize over the Internet, {{and there are many}} options for sending mass amounts of calls from a single location. Accounts or IP addresses being used for VoIP spam can usually be identified by a large number of outgoing calls, low call completion and short call length.|$|E
5000|$|Image-based spam, or Image spam, for short, {{is a kind}} of E-mail spam {{where the}} textual <b>spam</b> <b>message</b> is {{embedded}} into images, that are then attached to spam emails. Since most of the email clients will display the image file directly to the user, the <b>spam</b> <b>message</b> is conveyed as soon as the email is opened (there is no need to further open the attached image file).|$|E
5000|$|Systems {{that use}} ham {{passwords}} ask unrecognised senders {{to include in}} their email a password that demonstrates that the email message is a [...] "ham" [...] (not <b>spam)</b> <b>message.</b> Typically the email address and ham password would be described on a web page, and the ham password would {{be included in the}} [...] "subject" [...] line of an email address. Ham passwords are often combined with filtering systems, to counter the risk that a filtering system will accidentally identify a ham message as a <b>spam</b> <b>message.</b>|$|E
40|$|We {{provide a}} model to study the effect of {{improving}} the quality of the filters that users use, and the increase of the cost of mailing <b>spam</b> <b>messages,</b> on the total number of messages that spammers send. We show that increasing the cost of mailing <b>spam</b> <b>messages</b> have the unequivocal effect of reducing the total number of <b>spam</b> <b>messages</b> sent by spammers. On the other hand, {{improving the quality of}} the filters have an ambiguous effect: users who uses the improved filter receive less <b>spam</b> <b>messages,</b> but the total number of messages sent by spammers might increase, and other users, who keep their old filters, might receive more <b>spam</b> <b>messages.</b> ...|$|R
40|$|We {{study how}} the {{launching}} of a do-not-spam registry will affect the internet’s efficiency. We show {{that as long as}} the cost of sending <b>spam</b> <b>messages</b> is not high, having rich users (who have high-quality filters) join the registry has the desirable effect of lowering the number of <b>spam</b> <b>messages</b> sent to each user, while having poor users (who have low-quality filters) join the registry has the opposite undesirable effect. We also show that the registry improves the total efficiency of the internet - as long as the cost of sending <b>spam</b> <b>messages</b> is not high; as more users join, the total number of <b>spam</b> <b>messages</b> sent to all users decreases. ...|$|R
40|$|Abstract—Short <b>Message</b> Service (SMS) <b>spam</b> is {{increasingly}} becoming {{a problem for}} many telecommunication service providers. Not only do SMS <b>spam</b> <b>messages</b> use mobile network resources abusively, but also {{in many cases they}} represent malware propagation vectors for mobile devices. In this work, we propose a network-based online detection method for SMS <b>spam</b> <b>messages.</b> The proposed scheme uses robust text signatures to identify similar messages that are sent excessively in the SMS platform and is robust against slight modifications in SMS <b>spam</b> <b>messages.</b> Additionally, the method uses a fast online algorithm which can be deployed in large carrier networks to detect spam activities before too many <b>spam</b> <b>messages</b> are delivered. It does not store SMS message contents, therefore it does not compromise the privacy of mobile subscribers...|$|R
5000|$|An e-mail {{described}} as a <b>spam</b> <b>message</b> promoting a concert of Nicole Ash with songs written by her fiancé, Lance Bishop, is {{a reference to the}} Avalon movie.|$|E
5000|$|More {{sophisticated}} {{mimic functions}} use grammar-based models of [...] to structure the output. One example, [...] "SpamMimic", uses a context free grammar {{to model the}} structure of a typical spam email message. It will convert the input file A to read like a <b>spam</b> <b>message.</b>|$|E
5000|$|The {{first known}} {{large-scale}} non-commercial <b>spam</b> <b>message</b> was sent on 18 January 1994 by an Andrews University system administrator, by cross-posting a religious message to all USENET newsgroups. In January 1994 Mark Eberra started the first email marketing company for opt in email list under the domain Insideconnect.com ...|$|E
25|$|The FTC {{said it had}} {{received}} {{more than three million}} complaints about <b>spam</b> <b>messages</b> connected to this operation, and estimated that it may be responsible for sending billions of illegal <b>spam</b> <b>messages.</b> The US District Court froze the defendants’ assets to preserve them for consumer redress pending trial.|$|R
50|$|A common {{piece of}} advice is to not to reply to <b>spam</b> <b>messages</b> as spammers may simply regard {{responses}} as confirmation that an email address is valid. Similarly, many <b>spam</b> <b>messages</b> contain web links or addresses which the user is directed to follow {{to be removed from}} the spammer's mailing list - and these should be treated as dangerous. In any case, sender addresses are often forged in <b>spam</b> <b>messages,</b> so that responding to spam may result in failed deliveries - or may reach completely innocent third parties.|$|R
30|$|To show that, in Table 1 {{we observe}} that <b>spam</b> <b>messages</b> come from many {{different}} networks, since 3, 226 distinct autonomous systems appeared in the collected data. It is interesting to notice {{that most of those}} <b>spam</b> <b>messages</b> were sent by {{a very small number of}} autonomous systems, being fifty of them responsible for over 85 % of all traffic. Thus, analyzing the behavior of spam at the source can direct the efforts to fight spam as it can identify which are the neighborhoods that have worst behavior, and, consequently, that are more likely to send <b>spam</b> <b>messages.</b>|$|R
5000|$|When {{these files}} have been received, the bot will first {{initialize}} a software routine which {{allows it to}} remove files critical for revealing spam and rootkit applications. [...] After this procedure is done, the trojan will then start sending out the <b>spam</b> <b>message</b> it has received from the control server.|$|E
50|$|From the {{beginning}} of the Internet (the ARPANET), sending of junk email has been prohibited. Gary Thuerk sent the first email <b>spam</b> <b>message</b> in 1978 to 600 people. He was reprimanded and told not to do it again. The ban on spam is enforced by the Terms of Service/Acceptable Use Policy (ToS/AUP) of internet service providers (ISPs) and peer pressure.|$|E
5000|$|Because lists have varying {{methods for}} adding IP {{addresses}} and/or URIs, {{it can be}} difficult for senders to configure their systems appropriately to avoid becoming listed on a DNSBL. For example, the UCEProtect DNSBL seems to list IP addresses merely once they have validated a recipient address or established a TCP connection, even if no <b>spam</b> <b>message</b> is ever delivered.|$|E
40|$|We {{provide a}} model to {{study the effects of}} three methods of {{fighting}} spam mail, namely (1) increasing the cost of mailing messages, (2) filters, and (3) a do-not-spam registry, on the number of <b>spam</b> <b>messages</b> that users receive, and on the efficiency of the internet (measured {{by the total number of}} <b>spam</b> <b>messages</b> spammers send). 1...|$|R
50|$|The program uses {{a special}} {{algorithm}} for interaction with Microsoft Outlook Rules. This algorithm allows {{the user to}} set the order of executing Outlook Rules and Spam Reader. This prevents chaotic movement of <b>spam</b> <b>messages</b> between the <b>Spam</b> folder and the destination folder for some Outlook Rule in case the <b>spam</b> <b>messages</b> match up with this Rule.|$|R
30|$|Many studies analyze <b>spam</b> traffic using <b>messages</b> {{collected}} at the destination mail servers. Gomes et al. [10] showed features {{that can be used}} to separate legitimate <b>messages</b> from <b>spam</b> <b>messages,</b> using data collected from only one specific point of the network. In this work, <b>spam</b> <b>messages</b> were collected by low-interaction honeypots installed in 10 different countries and located in transit networks. This provided a more global view of spam traffic, offering a different perspective.|$|R
50|$|Spammers {{sometimes}} use various {{means to}} confirm addresses as deliverable. For instance, including a hidden Web bug in a <b>spam</b> <b>message</b> written in HTML may cause the recipient's mail client to transmit the recipient's address, {{or any other}} unique key, to the spammer's Web site. Users can defend against such abuses by turning off their mail program's option to display images, or by reading email as plain-text rather than formatted.|$|E
50|$|In Usenet, it {{is widely}} {{considered}} even more important to avoid responding to spam. Many ISPs have software that seek and destroy duplicate messages. Someone may see a spam and respond to it before it is cancelled by their server, which can {{have the effect of}} reposting the spam for them; since it is not a duplicate, the reposted copy will last longer. Replying may also cause the poster to be falsely linked to as part of the <b>spam</b> <b>message.</b>|$|E
5000|$|Bayesian {{poisoning}} is {{a technique}} used by e-mail spammers to attempt to degrade the effectiveness of spam filters that rely on Bayesian spam filtering. Bayesian filtering relies on Bayesian probability to determine whether an incoming mail is spam or is not spam. The spammer hopes that the addition of random (or even carefully selected) words that are unlikely to appear in a <b>spam</b> <b>message</b> will cause the spam filter to believe the message to be legitimate—a statistical type II error.|$|E
5000|$|... spam filtering, {{a process}} which tries to discern E-mail <b>spam</b> <b>messages</b> from {{legitimate}} emails ...|$|R
5000|$|The United States (the {{origin of}} 19.8% of <b>spam</b> <b>messages,</b> up from 18.9% in Q3) ...|$|R
40|$|In {{this paper}} {{we present a}} {{detailed}} study of the behavioral characteristics of spammers based on a two-month email trace collected at a large US university campus network. We analyze the behavioral characteristics of spammers that are critical to spam control, including the distributions of <b>message</b> senders, <b>spam</b> and non-spam <b>messages</b> by <b>spam</b> ratios; the statistics of <b>spam</b> <b>messages</b> from different spammers; the spam arrival patterns across the IP address space; and the active duration of spammers, among others. In addition, we also formally confirm an informal observation that spammers may hijack network prefixes in sending <b>spam</b> <b>messages,</b> by correlating the arrivals of <b>spam</b> <b>messages</b> with the BGP route updates of the corresponding networks. In this paper we present the detailed results of the measurement study; in addition, we also discuss {{the implications of the}} findings for the (content-independent) anti-spam efforts...|$|R
50|$|Words that {{normally}} appear {{in large quantities}} in spam may also be transformed by spammers. For example, «Viagra» would be replaced with «Viaagra» or «V!agra» in the <b>spam</b> <b>message.</b> The recipient of the message can still read the changed words, but each of these words is met more rarely by the Bayesian filter, which hinders its learning process. As a general rule, this spamming technique does not work very well, because the derived words end up recognized by the filter just like the normal ones.|$|E
5000|$|The spam was {{ultimately}} confirmed as having {{come from the}} Srizbi network. Through the capture {{of one of the}} control servers involved, investigators learned that the <b>spam</b> <b>message</b> had been sent to up to 160 million email addresses by as few as 3,000 bot computers. The spammer has only been identified by his Internet handle [...] "nenastnyj" [...] ( [...] , means [...] "rainy" [...] or [...] "foul", as in [...] "rainy day, foul weather" [...] in Russian); his or her real identity has not been determined.|$|E
5000|$|Systems {{that use}} [...] "ham {{password}}s" [...] ask unrecognised senders {{to include in}} their email a password that demonstrates that the email message is a [...] "ham" [...] (not <b>spam)</b> <b>message.</b> Typically the email address and ham password would be described on a web page, and the ham password would {{be included in the}} subject line of an email message (or appended to the [...] "username" [...] part of the email address using the [...] "plus addressing" [...] technique). Ham passwords are often combined with filtering systems which let through only those messages that have identified themselves as [...] "ham".|$|E
50|$|Admin botIt {{is created}} to keep order in groups, monitor and punish {{distributors}} of <b>spam</b> <b>messages</b> and using foul language users.|$|R
40|$|A {{new method}} for {{clustering}} of <b>spam</b> <b>messages</b> collected in bases of antispam system is offered. The genetic algorithm is developed for solving clustering problems. The objective function is a maximization of similarity between messages in clusters, which {{is defined by}} k-nearest neighbor algorithm. Application of genetic algorithm for solving constrained problems faces the problem of constant support of chromosomes which reduces convergence process. Therefore, for acceleration of convergence of genetic algorithm, a penalty function that prevents occurrence of infeasible chromosomes at ranging of values of function of fitness is used. After classification, knowledge extraction is applied {{in order to get}} information about classes. Multidocument summarization method is used to get the information portrait of each cluster of <b>spam</b> <b>messages.</b> Classifying and parametrizing spam templates, it will be also possible to define the thematic dependence from geographical dependence (e. g., what subjects prevail in <b>spam</b> <b>messages</b> sent from certain countries). Thus, the offered system will be capable to reveal purposeful information attacks if those occur. Analyzing origins of the <b>spam</b> <b>messages</b> from collection, it is possible to define and solve the organized social networks of spammers...|$|R
40|$|Stock spam {{is a part}} of {{unsolicited}} {{electronic mail}} which wants its receiver to buy a certain share at the stock markets. As there is no direct profit for the sender of this message, impacts on the share prices seem to {{be the only way to}} generate earnings by the spam sender. To hide the information within stock <b>spam</b> <b>messages</b> from automatic processing, textual and image-based distortions are used. This thesis will to show that the automatic processing of stock <b>spam</b> <b>messages</b> is possible and the available tools from the domains of Optical Character Recognition and Information Retrieval are sufficient. In-depth analyses on different tools and methods are performed to find the best suitable ones. Thereafter the model will be implemented and a large number of messages is processed to identify stock <b>spam</b> <b>messages.</b> Finally, a descriptive analysis on the characteristics of stock <b>spam</b> <b>messages</b> and their impact to financial markets is conducted. Stock Spam ist ein Teil der unerwünschten eMail Nachrichten, der ihren Empfänger dazu bringen möchte, bestimmte Aktien über den Aktienmarkt zu kaufen. Nachdem dies keinen direkten Vorteil für den Sender bringt, scheinen Auswirkungen auf die Aktienkurs...|$|R
50|$|SPIT (SPam over Internet Telephony) is VoIP (Voice over Internet Protocol) spam, usually using SIP (Session Initiation Protocol). This {{is nearly}} {{identical}} to telemarketing calls over traditional phone lines. When the user chooses to receive the spam call, a pre-recorded <b>spam</b> <b>message</b> or advertisement is usually played back. This is generally easier for the spammer as VoIP services are cheap and easy to anonymize over the Internet, {{and there are many}} options for sending mass amounts of calls from a single location. Accounts or IP addresses being used for VoIP spam can usually be identified by a large number of outgoing calls, low call completion and short call length.|$|E
5000|$|Many modern mail {{programs}} incorporate Web browser functionality, such as {{the display}} of HTML, URLs, and images. This can easily expose the user to offensive images in spam. In addition, spam written in HTML can contain web bugs which allows spammers {{to see that the}} e-mail address is valid and that the message has not been caught in spam filters. JavaScript programs can be used to direct the user's Web browser to an advertised page, or to make the <b>spam</b> <b>message</b> difficult to close or delete. Spam messages have contained attacks upon security vulnerabilities in the HTML renderer, using these holes to install spyware. (Some computer viruses are borne by the same mechanisms.) ...|$|E
50|$|Backscatter {{occurs because}} worms and spam {{messages}} often forge their sender addresses. Instead of simply rejecting a <b>spam</b> <b>message,</b> a misconfigured mail server sends a bounce message {{to such a}} forged address. This normally happens when a mail server is configured to relay a message to an after-queue processing step, for example, an antivirus scan or spam check, which then fails, {{and at the time}} the antivirus scan or spam check is done, the client already has disconnected. In those cases, it is normally not possible to reject the SMTP transaction, since a client would time out while waiting for the antivirus scan or spam check to finish. The best thing to do in this case, is to silently drop the message, rather than risk creating backscatter.|$|E
50|$|Robert Alan Soloway of Seattle, Washington, {{pleaded guilty}} to charges of using botnets to send tens of {{millions}} of <b>spam</b> <b>messages</b> touting his website.|$|R
40|$|One of {{the biggest}} �allenges in global {{communication}} is to overcome the problem of unwanted emails, {{commonly referred to as}} spam. In the last years many approa�es {{to reduce the number of}} spam emails have been proposed. Most of them have in common that the end-user is still required to verify the filtering results. �ese approa�es are reactive: before mails can be classified as spam in a reliable way, a set of similar mails have to be received. Spam fighting has to become proactive. Unwanted mails have to be blo�ed before they are delivered to the end-user’s mailbox. In this thesis the implementation of two proactive spam fighting te�niques is discussed. �e first concept, called Mail-Shake, introduces an authentication step before a sender is allowed to send emails to a new contact. Computers are unable to authenticate themselves and so all <b>spam</b> <b>messages</b> are automatically blo�ed. �e development of this concept is discussed in this thesis. �e second concept, called Spam Templates, is motivated by the fact that <b>spam</b> <b>messages</b> are generated from a common template. If we gain access to the template we are able to identify <b>spam</b> <b>messages</b> by mat�ing the message against the template. As the template is generated from currently sent <b>spam</b> <b>messages,</b> the template will never mat � a legitimate mail. In this thesis mat�ing a mail against a template is implemented. In the scope of this thesis an evaluation for the Mail-Shake concept is provided. �is evaluation shows that Mail-Shake is able to reduce the number of received <b>spam</b> <b>messages</b> and mails containing malicious so�ware. ...|$|R
50|$|Every step {{to control}} worms and <b>spam</b> <b>messages</b> helps reduce backscatter, but other common approaches, {{such as those}} in this section, also reduce the same problem.|$|R
