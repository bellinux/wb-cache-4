247|3|Public
5|$|As {{support for}} {{multiple}} instruction set architectures complicates <b>symmetric</b> <b>multiprocessing</b> (SMP) support, DragonFly BSD now limits its {{support to the}} x86-64 platform. DragonFly originally ran on the x86 architecture, however as of version 4.0 {{it is no longer}} supported. Since version 1.10, DragonFly supports 1:1 userland threading (one kernel thread per userland thread), which is regarded as a relatively simple solution that is also easy to maintain. Inherited from FreeBSD, DragonFly also supports multi-threading.|$|E
5|$|Dillon started DragonFly in {{the belief}} that the methods and {{techniques}} being adopted for threading and <b>symmetric</b> <b>multiprocessing</b> in FreeBSD 5 would lead to poor system performance and cause maintenance difficulties. He sought to correct these suspected problems within the FreeBSD project. Due to ongoing conflicts with other FreeBSD developers over the implementation of his ideas, his ability to directly change the FreeBSD codebase was eventually revoked. Despite this, the DragonFly BSD and FreeBSD projects still work together contributing bug fixes, driver updates, and other system improvements to each other.|$|E
5|$|In November 2006, first-generation <b>symmetric</b> <b>multiprocessing</b> (SMP) {{clients were}} {{publicly}} released for open beta testing, {{referred to as}} SMP1. These clients used Message Passing Interface (MPI) communication protocols for parallel processing, as {{at that time the}} GROMACS cores were not designed to be used with multiple threads. This was the first time a distributed computing project had used MPI. Although the clients performed well in Unix-based operating systems such as Linux and macOS, they were troublesome under Windows. On January24, 2010, SMP2, the second generation of the SMP clients and the successor to SMP1, was released as an open beta and replaced the complex MPI with a more reliable thread-based implementation.|$|E
40|$|Abstract — Achieving high {{performance}} within a power envelope becomes extremely difficult as feature sizes decrease. Uniprocessor architects encounter diminishing returns {{when trying to}} attain higher performance in exchange for area and power. For multithreaded programs, <b>symmetric</b> chip <b>multiprocessing</b> (CMP) offers higher throughput and power efficiency than uniprocessors. However, symmetric CMP does not scale well with technology. In this paper we explore the theoretical advantages of placing asymmetric core clusters in multiprocessor chips. All of the cores on the ACCMP die have the same instruction set architecture, but may have a completely different micro-architecture. We show that asymmetric core clusters are expected to achieve higher performance per are...|$|R
40|$|Abstract—This paper {{introduces}} a framework developed for image processing of synthetic apterure radar (SAR) images. It en-capsulates features of modern hardware architectures, including <b>symmetric</b> and asymmetric <b>multiprocessing,</b> within an easy and intuitive to use {{application programming interface}} (API). The multiprocessing part is designed for unified usage of different architectures reaching from multicore processors to cluster of workstations to grids of clusters. So an applcation using the framework can be ported from one architecture to another without any changes in the source code. The framework builds the bottom layer of the processing system developed for the German Aerospace Center’s (DLR) new airborne SAR sensor, the F-SAR [1]. I...|$|R
50|$|The QorIQ P Series {{processors}} {{are based}} on Power Architecture e500 or e5500 cores. The P10xx series, P2010 and P2020 {{are based on}} the e500v2 core, P204x, P30xx and P40xx on the e500mc core, and P50xx on the e5500 core. Features include 32/32 kB data/instruction L1 cache, 36-bit physical memory addressing {{to the top of the}} virtual address in the process context, each process is still 32bit, a double precision floating point unit is present on some cores (not all) and support for virtualization through a hypervisor layer is present in products featuring the e500mc or the e5500. The dual and multi-core devices supports both <b>symmetric</b> and asymmetric <b>multiprocessing,</b> and can run multiple operating systems in parallel.|$|R
25|$|In 2006, native <b>symmetric</b> <b>multiprocessing</b> {{support was}} added to the runtime system and virtual machine.|$|E
25|$|Heap layout {{has been}} {{modified}} to provide higher performance on 64-bit and <b>Symmetric</b> <b>multiprocessing</b> (SMP) systems. The new heap structure {{is also more}} scalable and has low management overhead, especially for large heaps.|$|E
25|$|SCO {{has claimed}} {{a number of}} {{instances}} of IBM Linux code as breaches of contract. These examples include code related to <b>Symmetric</b> <b>multiprocessing</b> (SMP), Journaled File System (JFS), Read-copy-update (RCU) and Non-Uniform Memory Access (NUMA). This code is questionably in the Linux kernel, and may have been added by IBM through the normal kernel submission process. This code was developed and copyrighted by IBM. IBM added features to AIX and Dynix.|$|E
2500|$|Windows 9x has no native {{support for}} [...] hyper-threading, Data Execution Prevention, <b>symmetric</b> <b>multiprocessing</b> or {{multi-core}} processors.|$|E
2500|$|In the Linux kernel, {{hibernation}} {{is implemented}} by swsusp which {{is built into}} the 2.6 series. An alternative implementation is TuxOnIce which is available as patches for the kernel version 3.4. TuxOnIce provides advantages such as support for <b>symmetric</b> <b>multiprocessing</b> and preemption. Another alternative implementation is uswsusp. All three refer to it as [...] "suspend-to-disk".|$|E
2500|$|Erlang's main {{strength}} is support for concurrency. It {{has a small}} but powerful set of primitives to create processes and communicate among them. Erlang is conceptually similar to the occam programming language, though it recasts the ideas of communicating sequential processes (CSP) in a functional framework and uses asynchronous message passing. Processes are the primary means to structure an Erlang application. [...] They are neither operating system processes nor operating system threads, but lightweight processes that are scheduled by Erlang's BEAM VM. Like operating system processes (but unlike operating system threads), they share no state with each other. The estimated minimal overhead for each is 300 words. Thus, many processes can be created without degrading performance. A benchmark with 20 million processes has been successfully performed. Erlang has supported <b>symmetric</b> <b>multiprocessing</b> since release R11B of May 2006.|$|E
5000|$|UMA using bus-based <b>symmetric</b> <b>multiprocessing</b> (SMP) architectures; ...|$|E
5000|$|... #Subtitle level 2: CX1000 {{scale-up}} <b>symmetric</b> <b>multiprocessing</b> nodes ...|$|E
5000|$|... #Caption: [...] Simple <b>symmetric</b> <b>multiprocessing</b> using {{a system}} bus ...|$|E
5000|$|... #Subtitle level 3: In <b>symmetric</b> <b>multiprocessing</b> (SMP) {{microprocessor}} systems ...|$|E
50|$|<b>Symmetric</b> <b>multiprocessing</b> is {{supported}} if a multi-core processor is used.|$|E
5000|$|CPU support: Works on dual core CPUs in <b>symmetric</b> <b>multiprocessing</b> mode ...|$|E
50|$|Solbourne Computer Inc. was {{originally}} a vendor of computer systems based in Longmont, Colorado, United States, at first 52% owned by Matsushita. In the late 1980s and early '90s, the company produced {{a range of}} computer workstations and servers based on the SPARC microprocessor architecture, largely compatible with Sun Microsystems' Sun-4 systems. Some of these are notable for supporting <b>symmetric</b> <b>multiprocessing</b> some time before Sun themselves produced multiprocessor systems. Even when Sun produced multiprocessor systems, SunOS uses an asymmetric multiprocessing model rather than OS/MP's <b>symmetric</b> <b>multiprocessing</b> model; Sun would not adopt <b>symmetric</b> <b>multiprocessing</b> until the release of Solaris 2.0 in 1992. Due {{to the cost of}} engineering and producing new systems to compete with Sun's increasingly competitive hardware offerings and the loss of <b>symmetric</b> <b>multiprocessing</b> as a distinguishing feature, in 1994, Solbourne left the computer hardware business, with Grumman Systems Support Corporation taking over support for Solbourne customers until 2000.|$|E
50|$|DC/OSx was {{the first}} <b>symmetric</b> <b>multiprocessing</b> (SMP) {{implementation}} on Unix System V Release 4.|$|E
50|$|In 2006, native <b>symmetric</b> <b>multiprocessing</b> {{support was}} added to the runtime system and virtual machine.|$|E
5000|$|... {{support for}} <b>Symmetric</b> <b>multiprocessing</b> (SMP), {{to allow the}} {{renderer}} {{to take advantage of}} multiple processors ...|$|E
50|$|Windows 9x has no native {{support for}} hyper-threading, Data Execution Prevention, <b>symmetric</b> <b>multiprocessing</b> or {{multi-core}} processors.|$|E
50|$|The {{microkernel}} handles multitasking, {{memory management}} and inter-process communication. It also provides kernel-based threads and supports <b>symmetric</b> <b>multiprocessing.</b>|$|E
50|$|Sybase {{released}} SQL Server 4.2 in 1992. This release included internationalization and localization {{and support}} for <b>symmetric</b> <b>multiprocessing</b> systems.|$|E
50|$|Stettner ported UNIX to DEC's <b>symmetric</b> <b>multiprocessing</b> VAX-11/782 {{hardware}} system, though {{based upon}} Purdue University's asymmetric kernel. The kernel supported <b>symmetric</b> <b>multiprocessing</b> while not being fully multithreaded and based upon pre-Ultrix work by Stettner and earlier work by George H. Goble at Purdue University. There was liberal use of locking and some tasks {{could only be}} done by a particular CPUs (e.g. the processing of interrupts). This was not uncommon in other SMP implementations of that time (e.g. SunOS).|$|E
50|$|The ScaleMP {{hypervisor}} combines x86 servers {{to create}} a virtual <b>symmetric</b> <b>multiprocessing</b> system. The process {{is a type of}} hardware virtualization called virtualization for aggregation.|$|E
5000|$|Allegro CL {{includes}} an implementation of Prolog [...] and an object caching database called AllegroCache. The most recent release, Allegro CL 10.1, supports <b>Symmetric</b> <b>Multiprocessing.</b>|$|E
50|$|Over the years, {{multitasking}} {{systems have}} been refined. Modern operating systems generally include detailed mechanisms for prioritizing processes, while <b>symmetric</b> <b>multiprocessing</b> has introduced new complexities and capabilities.|$|E
50|$|Since {{computer}} {{manufacturers have}} long implemented <b>symmetric</b> <b>multiprocessing</b> (SMP) designs using discrete CPUs, the issues regarding implementing multi-core processor architecture and supporting it with software are well known.|$|E
50|$|The ABIT BP6 {{motherboard}} {{also allows}} 2 Mendocino Socket 370 Celeron processors {{to operate in}} a <b>Symmetric</b> <b>multiprocessing</b> (SMP) configuration without any modification to the CPUs or the motherboard.|$|E
5000|$|Hercules {{can be used}} as a {{development}} environment to verify that code is portable (across Linux processor architectures, for example), supports <b>symmetric</b> <b>multiprocessing</b> (SMP), and is 64-bit [...] "clean." ...|$|E
50|$|IntervalZero, Inc. {{develops}} hard real-time {{software and}} its <b>symmetric</b> <b>multiprocessing</b> (SMP) enabled RTX and RTX64 software transform the Microsoft Windows {{general-purpose operating system}} (GPOS) into a real-time operating system (RTOS).|$|E
50|$|As of 2007, XNU runs on ARM, IA-32, and x86-64 {{processor}}s, both one {{processor and}} <b>symmetric</b> <b>multiprocessing</b> (SMP) models. PowerPC support is removed as of version 10 (i.e., Mac OS X 10.6).|$|E
50|$|Its {{most recent}} product, RTX64, focuses on 64-bit and <b>symmetric</b> <b>multiprocessing</b> (SMP) to replace {{dedicated}} hardware based {{systems such as}} digital signal processors (DSPs) or field-programmable gate arrays (FPGAs) with multicore PCs.|$|E
50|$|Enea OSE Multicore Edition was {{released}} in 2009 {{and is based on}} the same microkernel architecture. The kernel design that combines the advantages of both traditional asymmetric multiprocessing (AMP) and <b>symmetric</b> <b>multiprocessing</b> (SMP).|$|E
