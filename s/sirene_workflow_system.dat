0|3314|Public
40|$|<b>Workflow</b> <b>systems</b> {{are often}} {{associated}} with Business Process Re-engineering (BPR). This paper argues that the functional access control requirements in <b>workflow</b> <b>systems</b> {{are rooted in the}} scope of a BPR project. A framework for access control in <b>Workflow</b> <b>Systems</b> is developed. The framework suggests that existing Role-based Access Control (RBAC) mechanisms {{can be used as a}} foundation in <b>workflow</b> <b>systems.</b> The framework separates the administration-time and the run-time aspects. Key areas that must be investigated to meet the functional requirements imposed by <b>workflow</b> <b>systems</b> on access control services are identified. 1...|$|R
40|$|Computer {{software}} <b>Workflow</b> <b>systems</b> {{are often}} associated with business process re-engineering (BPR). This paper argues that the functional access control requirements in <b>workflow</b> <b>systems</b> {{are rooted in the}} scope of a BPR project. A framework for access control in <b>workflow</b> <b>systems</b> is developed. The framework suggests that existing role-based access control mechanisms {{can be used as a}} foundation in <b>workflow</b> <b>systems.</b> The framework separates the administration-tim e and the runtime aspects. Key areas that must be investigated to meet the functional requirements imposed by <b>workflow</b> <b>systems</b> on access control services are identified...|$|R
40|$|<b>Workflow</b> <b>systems</b> provide {{automated}} {{support that}} enables organizations to efficiently and reliably move important data through their routine business processes. For some organizations, the information processed by their <b>workflow</b> <b>systems</b> is highly valued {{and in need}} of protection from disclosure or corruption. Current <b>workflow</b> <b>systems</b> do not help organizations to adequately protect this important data. We describe a prototype secure <b>workflow</b> <b>system</b> that allows users to develop high-level workflow security policies and to automatically execute these policies within the <b>workflow</b> <b>system.</b> These <b>workflow</b> policies can use the workflow context to provide fine-grained, dynamic access control and other security services that enhance the organizationâ€™s ability to control the information contained in its <b>workflow</b> <b>system.</b> In this paper, we will explain these security policy goals, our prototype policy editor, our prototype workflow server, and our underlying Java-based implementation. 1 Overvie...|$|R
40|$|Nowadays <b>workflow</b> <b>systems</b> {{are widely}} {{deployed}} around the world, especially within large international corporations. Thus the performance evaluation of these <b>workflow</b> <b>systems</b> becomes an important topic, especially in grid environment. We {{have developed an}} automatic and scalable testing tool to evaluate <b>workflow</b> <b>systems.</b> This tool is named Scalable <b>Workflow</b> <b>systEm</b> Evaluation Tool (SWEET). SWEET can automatically test against <b>workflow</b> <b>systems</b> according to a highly customizable process template specified by users. It can also provide multi-layer performance metrics related to response time, throughput and fairness. Further, it can adaptively determine the maximum concurrency of a <b>workflow</b> <b>system</b> under a desired average processing time, using control theory (PI Controller). In this paper, we will present the design and architecture of SWEET. We will also discuss the evaluation metrics and our implementation of such a framework. Finally, we will give detailed experimental results and analysis...|$|R
40|$|This paper {{describes}} {{an evaluation of}} process modelling where the same distributed conference organizing process was modelled in three different process centred environments (PCEs) - Endeavors, ProcessWeb, and our own CAGIS PCE. Endeavors is an activity based, flexible <b>workflow</b> <b>system,</b> ProcessWeb is a role-based <b>workflow</b> <b>system</b> with a web-interface, whereas the CAGIS PCE combines an activity based <b>workflow</b> <b>system</b> with a software agent system. The goal of the evaluation was to investigate if {{a combination of a}} traditional <b>workflow</b> <b>system</b> and a software agent system is more suitable for modelling, changing and configuring distributed cooperative processes than stand-alone <b>workflow</b> <b>systems.</b> As far as we know, there exist no similar studies for process centred environments...|$|R
40|$|This paper {{describes}} novel work on context-aware <b>workflow</b> <b>systems</b> envisaged {{to integrate}} and utilise context information from pervasive environments {{to improve the}} enactment of mobile work processes. Work in dynamic, mobile environments requires <b>workflow</b> <b>systems</b> {{to be capable of}} utilising contextual events to be used in process enactment and coordination. The existing standards in <b>workflow</b> <b>systems</b> are investigated and extended with new requirements to cope with context-awareness. The concept of a smart work process is used to capture adaptive and contextaware process support. The requirements and design considerations for developing context-aware <b>workflow</b> <b>systems</b> are elaborated and then used to propose a new interface for handling context-awareness in workflow enactment services. This interface will serve as a link between the work environment and the <b>workflow</b> <b>system...</b>|$|R
50|$|A {{bioinformatics}} <b>workflow</b> management <b>system</b> is {{a specialized}} scientific <b>workflow</b> <b>system</b> focused on bioinformatics.|$|R
40|$|SimplyCT is {{framework}} for simple online or offline digital archives with preservation, standardisation and extensibility being major foci. A <b>workflow</b> <b>system</b> {{was developed for}} the SimplyCT framework to test its applicability as an institutional repository. The <b>workflow</b> <b>system</b> was built as a Web application using Java Servlets and HTML. The <b>workflow</b> <b>system</b> shows potential {{to assist with the}} input and manipulation of data...|$|R
40|$|Abstract. Although it {{is widely}} {{accepted}} that <b>workflow</b> <b>systems</b> add value to business processes, no substantial research {{has been reported in}} the literature that confirms this. Most of the efforts in the field of <b>workflow</b> <b>systems</b> are devoted to issues that are relevant to the design and implementation of this type of systems. Companies have a practical need to gain insight in to what extent <b>workflow</b> <b>systems</b> improve their business processes. In this paper, we present a model that measures the added value of <b>workflow</b> <b>systems</b> to business processes. We apply the model on two real-life cases in an IT company in the Netherlands. Although our model can be advanced with regard to several issues, the application of the model on the real-life cases resulted in valuable insight with regard to the impact of <b>workflow</b> <b>systems</b> for this company. From these cases we observed that value creation by a <b>workflow</b> <b>system</b> is not something to be taken for granted...|$|R
40|$|Scientific <b>workflow</b> <b>systems</b> {{have become}} a {{necessary}} tool for many applications, enabling the composition and execution of complex analysis on distributed resources. Today there are many <b>workflow</b> <b>systems,</b> often with overlapping functionality. A key issue for potential users of <b>workflow</b> <b>systems</b> {{is the need to}} be able to compare the capabilities of the various available tools. There can be confusion about system functionality and the tools are often selected without a proper functional analysis. In this paper we extract a taxonomy of features from the way scientists make use of existing <b>workflow</b> <b>systems</b> and we illustrate this feature set by providing some examples taken from existing <b>workflow</b> <b>systems.</b> The taxonomy provides end users with a mechanism by which they can assess the suitability of workflow in general and how they might use these features to make an informed choice about which <b>workflow</b> <b>system</b> would be a good choice for their particular application...|$|R
40|$|Heterogeneous {{architectures}} can {{be problematic}} to program on, particularly {{when trying to}} schedule tasks on all available compute resources, overlapping PCI express transfers, and managing the limited memory available on the architectures. In this thesis we propose a <b>workflow</b> <b>system</b> {{that is capable of}} scheduling on all available compute resources, overlaps PCI express transfers, and manages the limited memory. A procedure for creating the <b>workflow</b> <b>system</b> is described and two case studies are analyzed. (i) Image Stitching, which implements the <b>workflow</b> <b>system</b> and achieves two orders of magnitude speedup over an image stitching plugin found in the popular Fiji ImageJ application. (Fiji 2012) Implementing the image stitching algorithm without the <b>workflow</b> <b>system</b> yielded only one order of magnitude speedup over the image stitching plugin. (ii) Out of Core LU Decomposition, which does not implement the <b>workflow</b> <b>system.</b> This case study demonstrates the impact of the PCI express on a problem with a large number of dependencies. A proposed <b>workflow</b> <b>system</b> for this algorithm is provided in Future Work. Using the <b>workflow</b> <b>system,</b> programmers have a method for scheduling any algorithm on all available compute resources and is capable of hiding the I/O impact by overlapping computation with I/O...|$|R
40|$|<b>Workflow</b> <b>systems</b> {{hold the}} promise of facilitating the {{everyday}} operation of many enterprises and work environments. As a result, many commercial <b>workflow</b> management <b>systems</b> have been developed. These systems, although useful, do not scale well, have limited fault-tolerance, and are inflexible in terms of interoperating with other <b>workflow</b> <b>systems.</b> In this paper, we discuss the limitations of contemporary <b>workflow</b> management <b>systems,</b> and then elaborate on various directions for research and potential future extensions to the design and modeling of <b>workflow</b> management <b>systems...</b>|$|R
40|$|Abstract. Agent based <b>workflow</b> <b>systems</b> {{are being}} {{discussed}} by many researchers {{for a long}} time. In this paper we present a new collaborative approach for <b>workflow</b> <b>systems.</b> Agents collaborate by forming social network such as societies. Various kinds of societies can exist and that facilitates cooperation and a communal effort towards group oriented problem solving. This framework would help us study the social behavior of real life resources represented by the agents in an agent-based <b>workflow</b> <b>system.</b> The societal framework for the <b>workflow</b> management <b>system</b> would be built upon our existing multi-agent based <b>workflow</b> management <b>system.</b> ...|$|R
40|$|Security considerations, such as role-based {{access control}} (RBAC) {{mechanism}} and separation of duty (SoD) constraints, are important and integral to <b>workflow</b> <b>systems.</b> We propose {{the use of an}} equation-based method â€“ the OTS/CafeOBJ method to specify <b>workflow</b> <b>systems</b> with such security considerations, and verify some desired safety and liveness properties of <b>workflow</b> <b>systems.</b> Specifically, a <b>workflow</b> <b>system,</b> together with its security considerations, is modeled as an OTS, a kind of transition system. Then the OTS is written in CafeOBJ, an algebraic specification language. We express safety and liveness properties in CafeOBJ and verify that the OTS satisfies these properties by writing proof scores in CafeOBJ. We use a case study â€“ formal analysis of a <b>workflow</b> <b>system</b> that deals with travel expense reimbursement, to demonstrate our method of modeling, specifying and verifying. 1...|$|R
40|$|During {{the past}} decade {{a new class of}} systems has emerged, which plays an {{important}} role in the support of efficient business process implementation: <b>workflow</b> <b>systems.</b> Despite their proliferation however, <b>workflow</b> <b>systems</b> are still being developed in an ad hoc way without making use of advanced software engineering technologies such as component-based system development and reuse of architecture artifacts. This work proposes a modern approach to <b>workflow</b> <b>system</b> construction. The approach is centered around a domain-specific software architecture metamodel (the REWORK metamodel) and a repository-based composition framework for <b>workflow</b> <b>system</b> construction out of reusable reactive components. The architecture metamodel defines the component and connector abstractions necessary for describing the static and dynamic aspects of a <b>workflow</b> <b>system.</b> The composition framework defines the lifecycle of a <b>workflow</b> <b>system</b> and supports the dynamic extension of a kernel <b>workflow</b> management <b>system</b> with application-specific elements. Appropriately, resulting systems are called REWORK systems. An event- and repository-based style underlies the REWORK framework. Events are the only component integration mechanism used in REWORK systems. Repositories support both system development by storing artifacts which are used for <b>workflow</b> <b>system</b> development and system operation by making explicit the structure of a running REWORK <b>system.</b> The iterative <b>workflow</b> <b>system</b> composition lifecycle proposed in this thesis comprises the following phases: the architecture analysis phase allows the identification and characterization of processing entities which participate in workflow execution; this phase is supported by a classification framework for processing entities in accordance to their integration-related properties. During the architecture definition phase <b>workflow</b> <b>system</b> components are defined and their behavior is tailored to specifications of workflows which are intended to be executed by the resulting system; furthermore, organizational relations and task assignment policies for these components are declaratively defined. The implementation phase is largely automated and consists in the instantiation of the defined components on top of an event-based operational infrastructure. As already mentioned the entire lifecycle is supported by repositories which store the <b>workflow</b> <b>system</b> artifacts. The iterative development comes into the picture once existing <b>workflow</b> <b>systems</b> have to be maintained either by adding new repository artifacts or by modifying existing ones. Thus, we dedicate a part of this thesis to the description of these repositories...|$|R
40|$|Workflow {{interoperability}} {{is receiving}} increasing {{attention from the}} distributed computing community. Different standards and levels have been set to achieve interoperability among <b>workflow</b> <b>system,</b> for example, by the Workflow Management Coalition (WfMC). WS-based notification messaging systems provide a mechanism for decoupling and enabling asynchronous messaging among different applications in the distributed computing environment. In this paper a generic approach to achieving interoperability among <b>workflow</b> <b>systems,</b> based on a WS-based notification messaging system, is proposed. This approach exposes an API called Publish/Subscribe Scientific Workflow Interoperability Framework (PS-SWIF) that can be implemented in multiple <b>workflow</b> <b>systems</b> to provide run time interoperability. The PS-SWIF application is based on Web Services that enable scientists to apply a Publish/Subscribe mechanism to publish a topic using a <b>workflow</b> <b>system,</b> and enables different <b>workflow</b> <b>systems</b> to subscribe to this topic and receive notification messages when an event is executed...|$|R
40|$|<b>Workflow</b> <b>systems</b> {{have long}} been of {{interest}} to computer science researchers due to their practical relevance. Supporting delegation mechanisms in <b>workflow</b> <b>systems</b> is receiving increasing research interest. In this paper, we conduct a comprehensive study of user delegation operations in computerized <b>workflow</b> <b>systems.</b> In a <b>workflow</b> <b>system,</b> the semantics of a delegation operation are largely based on three factors: the underlying workflow execution model, task type and delegation type. We describe three different workflow execution models and {{examine the effect of}} various delegation operations in each workflow execution model. We then extend our workflow execution models to examine the effect of various delegation operations in different role-based workflow execution models...|$|R
40|$|The major {{contributions}} {{of this book}} are that we have provided a set of new concepts, innovative methods and algorithms for temporal verification in grid <b>workflow</b> <b>systems.</b> With these, we can significantly improve overall temporal verification effectiveness and efficiency. This would eventually improve the overall performance and usability of grid <b>workflow</b> <b>systems</b> because temporal verification {{can be viewed as}} a service or function of grid <b>workflow</b> <b>systems.</b> Consequently, by deploying the new concepts, innovative methods and algorithms, grid <b>workflow</b> <b>systems</b> would be able to better support large-scale sophisticated scientific and business processes in complex e-science and e-business applications in the context of grid economy...|$|R
40|$|Signatures {{have been}} widely used in paper-based {{work-flow}} systems for different purposes. Currently there are many studies on computerizing <b>workflow</b> <b>systems.</b> There are also studies on implementing signatures in electronic media. But the diversified purposes of a signature in workflow makes a straight-forward implementation of digital signature schemes inadequate to satisfy the needs of an electronic <b>workflow</b> <b>system.</b> There are few studies on the implication on the purposes of signatures in <b>workflow</b> <b>systems</b> after the change in the media of operation. In this paper, we report our studies on the purposes of signature and our implementing of these purposes in the Liaison <b>workflow</b> <b>system.</b> link_to_subscribed_fulltex...|$|R
40|$|Workflow {{processes}} are long-duration activities {{and therefore it}} is not possible to apply the well accepted correctness techniques of transactions directly to <b>workflow</b> <b>systems.</b> In this paper, we first mention the correctness problems of <b>workflow</b> <b>systems</b> and then exploit the available semantics in workflow specification in the form of data and serial control-flow dependencies to define isolation units. We show that isolation units in a workflow can be identified automatically, i. e. without human intervention, from the workflow definition. We then propose a technique to provide for the correctness of concurrently executing workflows on the basis of isolation units. The technique is general enough to handle the correctness of hierarchically structured workflows consisting of compound tasks. Keywords: <b>Workflow</b> <b>System,</b> Correctness of <b>Workflow</b> <b>Systems,</b> Concurrency Control in <b>Workflow</b> <b>Systems,</b> Isolation Units. 1 Introduction A workflow consists of a set of processing steps (tasks) together [...] ...|$|R
40|$|Abstract. Workflow {{definition}} {{languages are}} evolving rapidly. However, {{there is not}} any agreed-upon standard for such languages. In this paper we {{address the problem of}} how to develop a <b>workflow</b> <b>system</b> that is able to cope with the constant changes in these languages. We address the definition aspect of <b>workflow</b> <b>systems</b> by distinguishing between frontend and backend languages. This way, a <b>workflow</b> <b>system</b> can be developed based on the backend language whereas the frontend language can change. ...|$|R
40|$|<b>Workflow</b> <b>systems</b> are {{becoming}} applied {{in a wide}} range to improve productivityand quality control. Digital <b>workflow</b> <b>systems</b> developed by market leading companies meetthis novel demand. These systems integrate jobs and forward them to the units addressed. Implementing these systems improve the market status of printing companies. Many routineand calculation tasks can be automated, administrative work can be simplified. In additioninformation flow becomes faster between units, <b>workflow</b> <b>systems</b> also enhance customerloyalty. All these advantages and opportunities make these systems an actuality to discuss. The objective of the research work is {{to draw attention to the}} process design solutionsapplied in Hungarian print industry, to introduce and analyze digital <b>workflow</b> <b>systems</b> andto provide information on relevant standards and operational background...|$|R
40|$|International audienceWorkflow {{systems are}} now {{successfully}} used in numerous administrative and production applications. Following this success, {{a lot of}} research has been launched to keep workflow technology supporting a larger range of applications. This paper reports on the Corvette project, an experience in developing a cooperative <b>workflow</b> <b>system</b> by integrating a commercial <b>workflow</b> <b>system</b> developed by Hitachi Ltd. with a cooperation technology developed by INRIA. By cooperative <b>workflow</b> <b>system,</b> we mean a <b>workflow</b> <b>system</b> that has the capability to manage cooperative behaviours characteristic of creative applications, typically co-design and co-engineering processes, where interactions between activities are more subtle than in traditional applications. More precisely, Corvette was targeted to support coordination processes of a virtual team working over Internet...|$|R
40|$|This project aims to {{describe}} how <b>workflow</b> <b>systems</b> can integrate and make use of context information from context rich environments, to enhance the execution of workflow processes. Context information can for example be used to control transitions between activities, activity enactment and process/activity coordination. A dynamic contextual environment also requires that a <b>workflow</b> <b>system</b> is capable of responding to contextual events. A set of requirements for a context-aware <b>workflow</b> <b>system,</b> based on existing workflow standards, theory behind context-aware computing and activity theory, will be presented and elaborated. Prototypes, which illustrate how these requirements can be implemented in a standard based <b>workflow</b> <b>system,</b> are also provided. Based on the solutions presented in the prototypes, a new interface for a workflow enactment service is presented. This new interface serves as {{the link between the}} contextual environment and the <b>workflow</b> <b>system.</b> We also present a solution for handling context related exception states. The definition of basic terms in <b>workflow</b> <b>systems</b> are expanded to better support context-aware behaviour. Ideas and solutions for more complex requirements not met in our prototypes are also discussed, such as situated activity coordination. </p...|$|R
40|$|Abstract. This paper {{contains}} {{some of the}} major design considerations which have been experienced through development of several <b>workflow</b> <b>systems</b> for business organizations and offices. These considerations, which are raised from both theoretical and practical sides, include the gathered requirements in a useroriented iterative design, the implied changes in software architecture to satisfy these requirements and the developerâ€™s experience on how such <b>workflow</b> <b>systems</b> can be easily adopted in typical office environments. More specifically, feedbacks of 40 users about the desired functionalities of a <b>workflow</b> <b>system</b> after using it has been compared with the initial requirements gathered before the development. This comparison shows not only the essential usersâ€™ requirements from a <b>workflow</b> <b>system,</b> but also how some of the requirements can be changed through a cyclic design. The contribution of this research is a practical look at the designing implication of business <b>workflow</b> management <b>system,</b> rather than a theoretical view. Keywords: <b>Workflow</b> Management <b>Systems,</b> User-oriented Design...|$|R
40|$|Traditional <b>workflow</b> <b>systems</b> are not {{suited for}} highly {{interactive}} online systems. We present a state machine based <b>workflow</b> <b>system,</b> named FlexFlow, which formally describes Internet applications using statecharts. The FlexFlow engine uses these descriptions to directly control {{the execution of}} web applications...|$|R
40|$|Component-based {{development}} is a promising way to promote the productivity of large <b>workflow</b> <b>systems</b> development. This paper proposes a component-based <b>workflow</b> <b>systems</b> development approach by investigating the following notions, mechanisms, and methods: workflow component, workflow component composition, reuse [...] association relationship between workflow components, and workflow component repository. The proposed approach {{is supported by a}} set of development strategies and a development platform. Through application and comparison, we show the advantages of the component-based <b>workflow</b> <b>systems</b> and the effectiveness of the proposed approach...|$|R
40|$|Todayâ€™s {{commercial}} <b>workflow</b> <b>systems,</b> although useful, {{do not scale}} well, {{have limited}} fault tolerance, and donâ€™t interoperate well with other <b>workflow</b> <b>systems.</b> The authors discuss current research directions and potential future extensions that might enable workflow services {{to meet the needs}} of mission-critical applications...|$|R
40|$|Abstract. We propose and {{demonstrate}} {{the feasibility of}} a framework for document-driven <b>workflow</b> <b>systems</b> that requires no explicit control flow and {{the execution of the}} process is driven by input documents. The framework can assist workflow designers to discover the data de-pendencies between tasks in a process and achieve more efficient control flow design. The framework also provides an architecture to separate the <b>workflow</b> <b>system</b> from application data and facilitate inter-organizational processes. Document-driven <b>workflow</b> <b>systems</b> are more flexible than tra-ditional control flow processes, easier to verify and work better for ad hoc workflows. We also implemented a prototype <b>workflow</b> <b>system</b> using the framework entirely in a RDBMS using Transact-SQL in Microsoft SQL Server 2000. A detailed comparison with control driven workflows has also been done. ...|$|R
50|$|A key {{assumption}} underlying all scientific <b>workflow</b> <b>systems</b> is {{that the}} scientists themselves {{will be able to}} use a <b>workflow</b> <b>system</b> to develop their applications based on visual flowcharting, logic diagramming, or, as a last resort, writing code to describe the workflow logic. Powerful <b>workflow</b> <b>systems</b> make it easy for non-programmers to first sketch out workflow steps using simple flowcharting tools, and then hook in various data acquisition, analysis, and reporting tools. For maximum productivity, details of the underlying programming code should normally be hidden.|$|R
40|$|Scientific <b>workflow</b> <b>systems</b> {{have become}} a {{necessary}} tool for many applications, enabling the composition and execution of complex analysis. CO(2) flux data observed by eddy covariance technique is large in quantity and the procedure of flux data is complex, scientific workflow technique plays {{a very important role}} in the sharing, reusing and automatic calculation of flux data processing method. In this paper, we discuss the feasibility and validity of applying scientific workflow technique to flux data processing and make a tentative approach to construct a scientific <b>workflow</b> <b>system</b> for CO(2) flux data processing by taking Kepler scientific <b>workflow</b> <b>system</b> as the development platform. CO(2) flux data of Changbai Mountain in 2003 is used to verify the scientific <b>workflow</b> <b>system.</b> The results show that scientific <b>workflow</b> <b>system</b> for CO(2) flux data processing can solve many problems of too much multifarious calculation, inconsistent development platform and complicated procedure in flux data processing. This approach indicates that the scientific <b>workflow</b> <b>system</b> applied to CO(2) flux data processing can provide an automatic calculation platform for flux data processing and prompt the communication and sharing of international flux data processing method, which make it easier for scientists to focus on their research and not computation management...|$|R
5000|$|Workflow tools (VisTrails, Kepler {{scientific}} <b>workflow</b> <b>system)</b> ...|$|R
40|$|Different {{or similar}} <b>workflow</b> <b>systems,</b> hosted {{anywhere}} on a network, written {{in any language}} and running on different operating systems, can easily use {{the full range of}} PS-SWIF tools to interoperate with each other. The PS-SWIF approach provides interoperability among a wide range of scientific <b>workflow</b> <b>systems...</b>|$|R
40|$|<b>Workflow</b> Management(WFM) <b>Systems</b> {{automate}} traditional processes where information flows between individuals. WFM {{systems have}} two major implications for security. Firstly, since {{the description of}} a workflow process explicitly states when which function is to be performed by whom, security specifications may be automatically derived from such descriptions. Secondly, the derived security specifications have to be enforced. The paper considers the issues {{that need to be}} addressed by a secure <b>workflow</b> <b>system.</b> In particular it addresses the requirement that security for <b>workflow</b> <b>systems</b> need to be specified at the workflow level, and not at the level of the underlying components, such as the database or networks. One reason why it is necessary to consider security at this level is the dynamic nature of <b>workflow</b> <b>systems,</b> with access restrictions depending on the state of the workflow process. In addition, <b>workflow</b> <b>systems</b> may handle many instances of a given workflow specificat [...] ...|$|R
40|$|In {{this paper}} {{we present a}} <b>workflow</b> <b>system</b> which is {{innovative}} in three respects: First, we use active databases {{for the implementation of}} a workflow server. Second, WWW browsers as clients allows platform independent worldwide access to the <b>workflow</b> management <b>system.</b> Finally, we show how interaction between workflow servers for communication between different <b>workflow</b> <b>systems</b> can be achieved with a simple extension to this architecture. 1 INTRODUCTION <b>Workflow</b> <b>systems</b> are a key technology for supporting the management of processes as it is requested by modern organizational approaches. <b>Workflow</b> management <b>systems</b> support the definition, execution, controlling, and documentation of business processes. Several products of <b>workflow</b> management <b>systems</b> are already on the market with a different set of features and different degrees of support (IBM, 1994; Georgakopoulos et al., 1995). The Workflow Management Coalition was founded to define standards for terminology and interfaces of workf [...] ...|$|R
40|$|A {{single agent}} {{architecture}} supports {{decision making in}} a flexible <b>workflow</b> <b>system.</b> An experimental implementation of this system has been constructed. The operation of a <b>workflow</b> <b>system</b> that supports decision making may be tuned to produce decisions of differing quality for differing costs. If {{the performance of a}} <b>workflow</b> <b>system</b> can be controlled so that the quality and cost of processing may be brought into line with determined strategic priorities then the system is called a strategic <b>workflow</b> <b>system.</b> A trial application involves a range of different types of interaction with the players, and it involves `soft' decision-making. Decisions are {{made on the basis of}} opinions given; each opinion is given to a stated level of certainty. Decisions made in this environment can employ decision-making structures that can not be realised in traditional systems...|$|R
