0|21|Public
40|$|Abstract: The paper {{considers}} the utilizing {{of the master}} <b>synchronous</b> serial <b>port</b> (MSSP) module of the microcontrollers of the PIC 16 F 87 X Microchip family in master mode for I 2 C communications. An algorithm for processing {{the status of the}} transfer is presented. Key words: microcontroller PIC 16 F 87 X, master <b>synchronous</b> serial <b>port</b> MSSP, I 2 C communications, special function registers...|$|R
5000|$|DDR SRAM <b>Synchronous,</b> single read/write <b>port,</b> double {{data rate}} I/O ...|$|R
50|$|A <b>Synchronous</b> Serial <b>Port</b> (SSP) is a {{controller}} {{that supports}} the Serial Peripheral Interface (SPI), 4-wire Synchronous Serial Interface (SSI), and Microwire serial buses. A SSP uses a master-slave paradigm to communicate across its connected bus.|$|R
5000|$|PIC 16F88 - Nanowatt Technology variant, 4K program memory, 368 bytes data memory, 256 bytes EEPROM, 3× timers, {{hardware}} PWM, on-board 8 MHz/37 kHz precision oscillator, 7-input 10-bit ADC, <b>synchronous</b> serial <b>port</b> supporting SPI and I²C.|$|R
40|$|The ADSP- 21161 N SHARC ® DSP {{has four}} {{independent}} <b>synchronous</b> Serial <b>Ports</b> (SPORTs). Every SPORT has two channels, channel A and B. These channels can be programmed both as receiver or both as transmitter. Beside the Time Division Multiplex (TDM) and serial mode, the SPORTs of the ADSP- 21161 N SHARC DSP also support the Inter IC-Sound (I 2 S) mode developed by Philips...|$|R
40|$|Passive Optical Network (PON) {{elements}} such as Optical Line Terminal (OLT) and Optical Network Units (ONUs) are currently managed by inflexible legacy network management systems. Software-Defined Networking (SDN) is a new networking paradigm that improves the operation and management of networks. In this paper, we propose a novel architecture, based on the SDN concept, for Ethernet Passive Optical Networks (EPON) that includes the Service Interoperability standard (SIEPON). In our proposal, the OLT is partially virtualized {{and some of its}} functionalities are allocated to the core network management system, while the OLT itself is replaced by an OpenFlow (OF) switch. A new MultiPoint MAC Control (MPMC) sublayer extension based on the OpenFlow protocol is presented. This would allow the SDN controller to manage and enhance the resource utilization, flow monitoring, bandwidth assignment, quality-of-service (QoS) guarantees, and energy management of the optical network access, to name a few possibilities. The OpenFlow switch is extended with <b>synchronous</b> <b>ports</b> to retain the time-critical nature of the EPON network. OpenFlow messages are also extended with new functionalities to implement the concept of EPON Service Paths (ESPs). Our simulation-based results demonstrate the effectiveness of the new architecture, while retaining a similar (or improved) performance in terms of delay and throughput when compared to legacy PONs. Peer ReviewedPostprint (author's final draft...|$|R
50|$|The extra {{features}} are integrated memory, PCMCIA, and color LCD controllers connected to an on-die system bus, and five serial I/O channels that {{are connected to}} a peripheral bus attached to the system bus. The memory controller supported FPM and EDO DRAM, SRAM, flash, and ROM. The PCMCIA controller supports two slots. The memory address and data bus is shared with the PCMCIA interface. Glue logic is required. The serial I/O channels implement a slave USB interface, a SDLC, two UARTs, an IrDA interface, a MCP, and a <b>synchronous</b> serial <b>port.</b>|$|R
5000|$|The Triple X {{was based}} on an 8 MHz 68010 CPU, with a Hitachi 6303 [...] "service processor". The CPU was {{accompanied}} by a 68451 memory management unit and a 68450 DMA controller. Both VMEbus and a BBC Micro-compatible [...] "1MHz bus" [...] expansion buses were provided, as was a SCSI host adapter, and an optional Ethernet interface. Both RS-423 and X.25-compatible <b>synchronous</b> serial <b>ports</b> were provided. This latter feature made the Triple X attractive to the UK academic community, where X.25 networks were prevalent at the time.|$|R
50|$|The C&DH system {{consists}} of a custom-modified MIP405-3X single board computer which included (i) 133 MHz PowerPC processor; (ii) 128 MB ECC; (iii) 4 RS-232 asynchronous serial ports; (iv) 1 Ethernet Port; (v) a PC/104 bus; (vi) a PC/104+ bus; and, (vi) a 202-D384-X Disc on Chip providing 384 MB of secondary storage. The computer board is supported by an ESCC-104 Synchronous Serial Card with 2 <b>synchronous</b> serial <b>ports,</b> and an EMM-8M-XT Serial Expansion Card with 8 RS-232/422/485 asynchronous serial ports and 8 digital I/O channels. A modified I0485 data acquisition board provides 22 analog telemetry channels and 32 digital I/O channels.|$|R
5000|$|The PDT series were desktop systems {{marketed as}} [...] "smart {{terminal}}s". The /110 and /130 were {{housed in a}} VT100 terminal enclosure. The /150 was housed in a table-top unit which included two 8-inch floppy drives, three asynchronous serial ports, one printer port, one modem <b>port</b> and one <b>synchronous</b> serial <b>port</b> and required an external terminal. All three employed the same chipset as used on the LSI-11/03 and LSI-11/2 in four [...] "microm"s. There is an option which combines two of the microms into one dual carrier, freeing one socket for an EIS/FIS chip. The /150 in combination with a VT105 terminal was also sold as MiniMINC, a budget version of the MINC-11.|$|R
40|$|Abstract. Traditional {{rectifier}} circuit can convert AC to DC, but some disadvantages can’t be avoided, such as small output current, high power consumption, low conversion efficiency. This paper designs {{a new type}} of rectifier voltage-multiplier circuit named MR_MOS circuit. It uses a low let-through resistance MOS tube to replace the conventional rectifier diode, and adds the voltage-multiplying factor to the <b>synchronous</b> input <b>port.</b> Therefore, it can improve the rectifier effect and increase the output voltage. By the simulation result of Synopsys Saber Platform, it shows that the new type circuit can implement the rectification and voltage-multiplying by the simulating output pulse voltage of nano fiber made in Deakin University as the source of excitation. It can provide the basic theoretical of the piezoelectric energy harvester (PEH) development, and has certain reference significance to the development of piezoelectricity technology. 1...|$|R
40|$|Traditional {{rectifier}} circuit can convert AC to DC, but some disadvantages can 2 ̆ 7 t be avoided, such as small output current, high power consumption, low conversion efficiency. This paper designs {{a new type}} of rectifier voltage-multiplier circuit named MR MOS circuit. It uses a low let-through resistance MOS tube to replace the conventional rectifier diode, and adds the voltage-multiplying factor to the <b>synchronous</b> input <b>port.</b> Therefore, it can improve the rectifier effect and increase the output voltage. By the simulation result of Synopsys Saber Platform, it shows that the new type circuit can implement the rectification and voltage-multiplying by the simulating output pulse voltage of nano fiber made in Deakin University as the source of excitation. It can provide the basic theoretical of the piezoelectric energy harvester (PEH) development, and has certain reference significance to the development of piezoelectricity technology. © (2014) Trans Tech Publications...|$|R
40|$|The authors {{describe}} their approach to, and experiences in, developing a PC based IEEE 802. 3 LAN-X. 25 WAN IP router. The basic router functionality {{is achieved by}} integrating a commercially available <b>synchronous</b> serial <b>port</b> card for the PC-AT bus, and their enhancements of public domain or licensed pre-production source code for the communication protocols. The router implements a strategy developed by Kumar et al. (1992) for providing differential QOS to bulk transfer and interactive traffic on WAN links. Various link level policies are studied to further improve the QOS. Several other performance issues that they encountered while developing the router are discussed. They study various task handling strategies for the router software {{to arrive at the}} ideal combination that gives the peak performance. The issues, and their resolutions for physical interface handling are detailed. Experimentation done to compare the various alternatives for resolving these issues are reported...|$|R
40|$|International audienceThe new {{open-source}} Matlab/Simulink toolbox called RT-MaG {{presented here}} generates reliable standalone robotic applications running on real-time embedded Linux targets such as tiny Computers On Module (e. g., Gumstix boards). This toolbox gives direct access from Simulink {{to the main}} communication drivers classically used in robotics: network interfaces (via UDP), asynchronous and <b>synchronous</b> serial <b>port</b> interfaces (RS 232, SPI), Pulse-width-modulation (PWM), general purpose input-output (GPIO) and analog-todigital converters (ADCs). A Simulink model is automatically converted into a standalone multi-task program, which guarantees a repeatable execution time within each sampling time. The toolbox includes efficient debug modes which detect problems such as unsuitable configurations and hardware failure. The main features of the toolbox and its structure are described here. We also discuss the real-time performances and I/Os delays and show that a control loop can be implemented at frequencies of up to 1 kHz. The tests performed show that RTMaG {{can be used to}} efficiently implement all the control laws involved in stabilizing a quadrotor...|$|R
40|$|ABSTRACT: At present, {{microcontrollers}} {{have found}} a broad application in various electronic connections. The scope of the use is very extensive and we can find them in circuits for regulation, control, measurement, amusement, etc. In accordance with the type, these powerful microscopic components (with respect to their possibilities) contain in a single box processor, data and program memories, input and output ports, A/D and D/A converters, <b>synchronous</b> serial <b>port,</b> etc. All functions performed by this controller are controlled by the program which is inserted in the chip. The controlling program is made by the user himself and thus the functions performed by this integrated circuit are specified. The parameters of one-chip computer, where a single box contains processor, data and program memories, etc. in a single integrated circuit allow to use this microchip in connections which would be hardly realized by classic integrated circuits. Owing {{to the use of}} these fast microprocessor, the connections are realized with a minimum number of the other components. ...|$|R
40|$|In {{computational}} biology {{there is an}} increasing need to combine micro and macro views {{of the system of}} interest. Therefore, explicit means to describe micro and macro level and the downward and upward causation that link both are required. Multi-Level-DEVS (or ml-DEVS) supports an explicit description of macro and micro level, information at macro level can be accessed from micro level and vice versa, micro models can be synchronously activated by the macro model and also the micro models can trigger the dynamics at macro level. To link both levels, different methods are combined, to those belong, value coupling, <b>synchronous</b> activations, variable <b>ports,</b> and invariants. The simulator and its use is illustrated based on an small extract of the Wnt pathway. ...|$|R
40|$|We are {{implementing}} a unified cognitive architecture for a mobile robot. Our {{goal is to}} endow a robot agent with {{the full range of}} cognitive abilities, including perception, use of natural language, learning and the ability to solve complex problems. The perspective of this work is that an architecture based on a unified theory of robot cognition has the best chance of attaining human-level performance. This agent architecture is an integration of three theories: a theory of cognition embodied in the Soar system, the RS formal model of sensorimotor activity and an algebraic theory of decomposition and reformulation. These three theories share a hierarchical structure that is the basis of their integration. These three component theories have been implemented and tested separately and their integration is currently underway. This paper describes these components and the overall architecture. The Cognitive Architecture Our robot cognitive architecture exhibits a hierarchy of sensory-motor modules in all facets of its operation, from abstract deliberative planning to realtime scheduling and reaction. It is being implemented by integrating two existing systems: RS and Soar, and tested on Pioneer P 2 robots. RS is a formal model of robot computation that is based on the semantics of networks of port automata [5]. A port automaton (PA) is a finite-state automaton equipped with a set of <b>synchronous</b> communication <b>port...</b>|$|R
40|$|Despite the availability, {{inherent}} parallelism, {{and potential}} fault tolerance of networked workstations and microcomputers, most programmers do not write distributed code. Those that do are often {{overwhelmed by the}} asynchrony, concurrency, and tricky failure behaviour inherent in such systems. In this thesis, we describe the design and implementation of a new programming language called Distributed ML. Distributed ML provides a programming construct called a port group that hides the sources of complexity listed above and can be implemented efficiently. Port groups are intermachine multicast channels which provide membership and failure information to application programmers. Although inherently asynchronous, port groups guarantee the delivery of data sent through them and can order such data in several different ways, thereby providing many of the assurances of <b>synchronous</b> communication. <b>Port</b> groups are general-purpose communication abstractions {{that can be used}} to transfer information between machines, between processes on the same machine, and between threads within the same process. In this thesis, we demonstrate that efficient distributed programs-even highly available and fault-tolerant distributed programs-can be quickly developed, easily reasoned about, and properly coded in a well-designed high level programming language. First, we provide an implementation and description of port groups in the context of the Concurrent ML concurrent programming language, which is a superset of the Standard ML general-purpose programming language. Second, we introduce a formal theory for relating the membership and ordering properties of port groups. Finally, we argue that our implementation matches the formal specification...|$|R
40|$|This paper aims at {{designing}} and modelling of three port DC-DC converter and also describes the power management for multiple sources by using three port DC-DC converter based on boost topology. These multiple input converters are capable enough in independent and simultaneous regulation {{of either of}} two ports whereas the third port balances the power in entire system. The Multiple input converter (MIC) instead of conventional converters has several advantages such as high efficiency, reduced conversion stages, lower cost, more compact packing, excellent management of the power among the ports and provides centralized control. The three port converter (TPC) topology based on dual input converter (DIC) or dual output converter (DOC) interfaces one PV panel as input source <b>port,</b> one <b>synchronous</b> battery <b>port,</b> and an output/load port. As there are numerous modes of operations, so independent power management in each port is a challenging task. This TPC works in dual input mode (DI), dual output mode (DO), and single input single output mode (SISO). This paper explains detail analysis of all the three modes. Finally, {{in order to obtain}} design equations DI mode is analyzed in detail. State space averaging has been developed to obtain various transfer functions under DI mode. Pulse width modulation scheme for the Boost TPC has been designed in order to get smooth autonomous mode transition. A controller has been designed and simulated by using perturb and observe (P&O) MPPT method and output voltage regulation...|$|R
40|$|Abstract: <b>Synchronous</b> serial <b>ports,</b> or S-Ports, {{support a}} variety of serial data {{communication}} protocols. They provide a direct interconnection between processors in a multiprocessor system. Bidirectional functions provide flexibility for serial Communication. Serial Communication Ports can operate at half the full clock rate at the processor,at a maximum data rate of n/ 2 Mbps,where n-equals the processor core clock frequency. The most common use of S-PORT is to interconnect two processors in a multiprocessor system. These interface devices can be operated in the synchronous mode. S-PORT can transfer a frame of data with three or thirty two bits per transmission. For serial communications there are different types of cables used such as UARTS, RS 232 cable, I 2 C bus but {{the time required to}} transmit and receive through these cables {{takes a lot of time}} like 11 kbps but these days the the speed is the most important in every aspect. So this project is based on the device or cables that can be used to increase the speed for the serial communication between two devices. So to overcome the problem of less speed, the SPORT is used which has a very high speed of 100 mbps. The RTL code is written for each and every block using Verilog. The code thus written is simulated using XILINX ISE 12. 4 tool. The verification for the SPORT core is done by developing verification IP in System Verilog. The main application is in the present day Avionics application systems in Defence, Multiprocessor communication, ADC & DAC, Video codec applications. Key words: S-PORT...|$|R
5000|$|Some {{commonly}} used I/O Controllers are the interval timer, system console controller, punched tape reader and punch controllers, line printer controller (all these use {{just a single}} Way), a number of SMD (and earlier disk bus interface) disk controllers for controlling up to four drives (all using 2 Ways), Pertec PPC magnetic tape controllers for up to four ½" [...] tape drives, {{and a number of}} multi <b>ported</b> <b>synchronous</b> and asynchronous serial communication controllers (using between 4 and 32 Ways). A digital I/O board (using 4 Ways) was {{commonly used}} for direct process control interfacing, and for providing a fast parallel link between systems. A CAMAC crate controller was also available (again, used for process control interfacing). The Normal Interface bus which these controllers plug into is a published interface, and many customers also built their own controllers for their own specific process control requirements. Also, the earlier GEC 2050 minicomputer used an 8-bit version of the Normal Interface, and most I/O Controllers could be used on both ranges of systems.|$|R

