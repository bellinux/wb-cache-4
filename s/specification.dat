10000|10000|Public
5|$|The USB2.0 <b>specification</b> was {{released}} in April 2000 and was ratified by the USB Implementers Forum (USB-IF) {{at the end of}} 2001. Hewlett-Packard, Intel, Lucent Technologies (now Nokia), NEC, and Philips jointly led the initiative to develop a higher data transfer rate, with the resulting <b>specification</b> achieving 480Mbit/s, 40 times as fast as the original USB 1.1 <b>specification.</b>|$|E
5|$|The {{sub-committee}} {{did most}} of the work creating the <b>specification,</b> leaving the short-range committee to review and modify their work before producing the finished <b>specification.</b>|$|E
5|$|There {{are five}} HDMI {{connector}} types. Type A/B are {{defined in the}} HDMI 1.0 <b>specification,</b> type C is defined in the HDMI 1.3 <b>specification,</b> and type D/E are defined in the HDMI 1.4 <b>specification.</b>|$|E
40|$|Assertions {{have been}} made {{recently}} {{by many in the}} public sector and the construction industry that a standard set of <b>specifications</b> based on measurable performance has been developed for the industry. The move from method, or prescriptive, <b>specifications</b> to performance <b>specifications</b> and warranties has produced innovative ideas and changes to the industry; however, it was not clear just how complete the change was or to what extent method <b>specifications</b> were still relied upon. In addition, it was not clear what contribution, if any, method <b>specifications</b> would make to the ideal set of standard <b>specifications.</b> A recently conducted study analyses the prevalence of method <b>specifications</b> versus performance <b>specifications</b> and warranties in highway and bridge construction. Innovative contracting and the trend within state highway agencies to move from method <b>specifications</b> to warranties and performance <b>specifications</b> are discussed, as are suggestions for integrating method <b>specifications</b> into performance and warranty <b>specifications.</b> Method <b>specifications,</b> prescriptive <b>specifications,</b> performance-related <b>specifications,</b> performance-based <b>specifications,</b> warranties, performance <b>specifications,...</b>|$|R
40|$|The {{translation}} from UML <b>specifications</b> to B <b>specifications</b> {{may give}} {{a way to}} use jointly UML and B in an unified, practical and rigorous software development. We can formally analyse UML <b>specifications</b> via their corresponding B formal <b>specifications.</b> This point is significant because B support tools are available. We can also use UML <b>specifications</b> as a tool for building B <b>specifications,</b> so the development of B <b>specifications</b> become easier...|$|R
40|$|Colloque avec actes et comité de lecture. internationale. International audienceAn {{appropriate}} {{approach for}} translating UML to B formal <b>specifications</b> {{allows one to}} use UML and B jointly in an unified, practical and rigorous software development. We formally analyze UML <b>specifications</b> via their corresponding B formal <b>specifications.</b> This point is significant because B support tools like are available. We can also use UML <b>specifications</b> {{as a tool for}} building B <b>specifications,</b> so the development of B <b>specifications</b> become easier. This paper reports our recent results on formalizing UML behavioral diagrams in B notations. We are planning to present automatic derivation schemes from UML behavioral diagrams to B <b>specifications.</b> Our proposal together with the formalization in B of UML structure <b>specifications</b> provide a complete frameworks to translate UML <b>specifications</b> into B. We discuss also the perspectives for analyzing UML behavioral <b>specifications</b> via the derived B <b>specifications...</b>|$|R
5|$|Battery Charging <b>Specification</b> 1.1: Released in March 2007 {{and updated}} on 15 April 2009.|$|E
5|$|Battery Charging <b>Specification</b> 1.2: Released in December 2010.|$|E
5|$|Cylinder threads {{may be in}} {{two basic}} configurations: Taper thread and {{parallel}} thread. These thread specifications are detailed in a previous section. The valve thread <b>specification</b> must exactly match the neck thread <b>specification</b> of the cylinder. Improperly matched neck threads can fail under pressure and can have fatal consequences.|$|E
40|$|An {{appropriate}} {{approach for}} translating UML to B formal <b>specifications</b> {{allows one to}} use UML and B jointly in an unified, practical and rigorous software development. We can formally analyse UML <b>specifications</b> via their derived B formal <b>specifications.</b> This point is significant because B support tools like AtelierB are available. We can also use UML <b>specifications</b> {{as a tool for}} building B <b>specifications,</b> so the development of B <b>specifications</b> become easier...|$|R
40|$|Abstract. An {{appropriate}} {{approach for}} translating UML to B formal specifica-tions {{allows one to}} use UML and B jointly in an unified, practical and rigorous software development. We formally analyze UML <b>specifications</b> via their cor-responding B formal <b>specifications.</b> This point is significant because B support tools like AtelierB are available. We can also use UML <b>specifications</b> {{as a tool for}} building B <b>specifications,</b> so the development of B <b>specifications</b> become eas-ier. This paper reports our recent results on formalizing UML behavioral diagrams in B notations. We are planning to present automatic derivation schemes from UML behavioral diagrams to B <b>specifications.</b> Our proposal together with the formalization in B of UML structure <b>specifications</b> provide a complete frame-works to translate UML <b>specifications</b> into B. We discuss also the perspectives for analyzing UML behavioral <b>specifications</b> via the derived B <b>specifications...</b>|$|R
40|$|We {{specify the}} black box {{behavior}} of dataflow components by characterizing {{the relation between the}} input and the output histories. We distinguish between three main classes of such <b>specifications,</b> namely time independent <b>specifications,</b> weakly time dependent <b>specifications</b> and strongly time dependent <b>specifications.</b> Dataflow components are semantically modeled by sets of timed stream processing functions. <b>Specifications</b> describe such sets by logical formulas. We emphasize the treatment of the well-known fair merge problem and the Brock/Ackermann anomaly. We give refinement rules which allow <b>specifications</b> to be decomposed into networks of <b>specifications.</b> ...|$|R
5|$|Developed {{at roughly}} {{the same time as the}} USB3.1 <b>specification,</b> but {{distinct}} from it, the USBType-C <b>Specification</b> 1.0 was finalized in August 2014 and defines a new small reversible-plug connector for USB devices. The Type-C plug connects to both hosts and devices, replacing various Type-A and Type-B connectors and cables with a standard meant to be future-proof.|$|E
5|$|Electrification by 2019 was {{announced}} in the Department for Transport's High Level Output <b>Specification</b> of 2012.|$|E
5|$|HDMI 1.0 and 1.1 are {{restricted}} to transmitting only certain video formats, defined in EIA/CEA-861-B and in the HDMI <b>Specification</b> itself. HDMI 1.2 and all later versions allow any arbitrary resolution and frame rate (within the bandwidth limit); any formats that are {{not supported by the}} HDMI <b>Specification</b> (i.e. no standardized timings defined) may be implemented as a vendor-specific format. Although successive versions of the HDMI <b>Specification</b> continue to add support for additional formats (such as 4K resolutions), the added support is to establish standardized timings to ensure interoperability between products, not to establish what formats are and aren't permitted, and video formats do not require explicit support from the HDMI <b>Specification</b> in order to be displayed.|$|E
40|$|The {{translation}} from UML <b>specifications</b> {{to formal}} B <b>specifications</b> gives {{a way to}} analyse rigorously UML <b>specifications</b> via their corresponding B formal <b>specifications.</b> This point is significant thanks to B support tools. This paper reports our experiences on UML-into-B translation that emphasise on the integration {{of different kinds of}} UML diagrams into B <b>specifications...</b>|$|R
5|$|In {{addition}} to the ASTM <b>specifications,</b> titanium alloys are also produced to meet Aerospace and Military <b>specifications</b> (SAE-AMS, MIL-T), ISO standards, and country-specific <b>specifications,</b> as well as proprietary end-user <b>specifications</b> for aerospace, military, medical, and industrial applications.|$|R
40|$|Abstract. Assuring {{the quality}} of {{software}} requirement <b>specifications</b> is critical. Poor requirement <b>specifications</b> may make costly errors during the development process. Therefore methods and techniques for verification and validation of software requirement <b>specifications</b> are fundamentally important. This survey presents taxonomy of verification and validation of requirements and <b>specifications</b> that represents the “flow ” from requirements to <b>specifications...</b>|$|R
5|$|HDMI 2.0b was {{released}} March, 2016. HDMI 2.0b initially supported the same HDR10 standard as HDMI 2.0a as {{specified in the}} CTA-861.3 <b>specification.</b> In December 2016 additional support for HDR Video transport was added to HDMI 2.0b in the recently released CTA-861-G <b>specification</b> which extends the static metadata signaling to include Hybrid Log-Gamma (HLG).|$|E
5|$|ISO 9 — The International Organization for Standardization ISO 9 <b>specification.</b>|$|E
5|$|Micro-USB Cables and Connectors <b>Specification</b> 1.01: Released in April 2007.|$|E
40|$|Colloque sans acte à {{diffusion}} restreinte. internationale. International audienceThe translation from UML <b>specifications</b> {{to formal}} B <b>specifications</b> gives {{a way to}} analyse rigorously UML <b>specifications</b> via their corresponding B formal <b>specifications.</b> This point is significant thanks to B support tools. This paper reports our experiences on UML-into-B translation that emphasise on the integration {{of different kinds of}} UML diagrams into B <b>specifications...</b>|$|R
40|$|Colloque avec actes et comité de lecture. internationale. Part of the 16 th IEEE International Conference on Automated Software EngineeringInternational audienceThe {{translation}} from UML <b>specifications</b> to B <b>specifications</b> gives {{a way to}} use jointly UML and B in an unified, {{practical and}} rigorous software development. We can formally analyse UML <b>specifications</b> via their corresponding B formal <b>specifications.</b> This point is significant because B support tools are available. We can also use UML <b>specifications</b> as a tool for building B <b>specifications,</b> so the development of B <b>specifications</b> become easier. So far, the rules for mapping data elements from UML <b>specifications</b> into B have been proposed. However, the problem of translating UML behavioral diagrams into B <b>specifications</b> has been an open issue. This point is the main concern in this paper. We are planning to propose derivation schemes to translate automatically UML behavioral diagrams into B <b>specifications.</b> Furthermore, the combination between the object refinement and the B refinement is also investigated...|$|R
40|$|The {{translation}} from UML <b>specifications</b> to B <b>specifications</b> {{may give}} {{a way to}} use jointly UML and B in an unified, practical and rigorous software development. We can formally analyse UML <b>specifications</b> via their corresponding B formal <b>specifications.</b> This point is significant because B support tools are available. We can also use UML <b>specifications</b> as a tool for building B <b>specifications,</b> so the development of B <b>specifications</b> become easier. So far, the rules for mapping data elements from UML <b>specifications</b> into B have been proposed. However, the problem of translating UML behavioral diagrams into B <b>specifications</b> has been an open issue. This point is the main concern in this paper. We present an approach to model UML behavioral concepts based on the B procedural refinement. This approach is the basis for translation schemes from UML <b>specifications</b> into B. Furthermore, the combination between the object refinement and the B data refinement is also investigated...|$|R
5|$|On 13 July 1965, the <b>specification</b> for the AFVG {{feasibility}} study was issued; according to Wood, the <b>specification</b> greatly resembled that {{which had been}} earlier issued for the cancelled TSR-2. The AFVG {{was to have a}} maximum speed of 800 knots at sea level and Mach 2.5 at altitude. It was required to possess a minimum combat radium of 500 nautical miles, a ferry range of 3,500 nautical miles, and the nose-mounted airborne interception radar was to have a minimum range of 60 nautical miles. Armanment was to include a pair of 30 mm cannons and a 2,500lb tactical nuclear bomb. However, the <b>specification</b> would be repeatedly re-drafted, the issuing of a definitive <b>specification</b> by Whitehall was delayed until April 1966.|$|E
5|$|SuperSpeed (SS) rate of 5.0Gbit/s. The written USB3.0 <b>specification</b> was {{released}} by Intel and its partners in August 2008. The first USB3.0 controller chips were sampled by NEC in May 2009, and the first products using the USB3.0 <b>specification</b> arrived in January 2010. USB3.0 connectors are generally backward compatible, but include new wiring and full-duplex operation.|$|E
5|$|The COBOL <b>specification</b> was revised {{three times}} in the five years after its publication.|$|E
5000|$|Similar {{connectors}} {{with different}} contact arrangements and bayonet coupling rings {{are also available}} to military <b>specifications.</b> [...] Supplemental military <b>specifications</b> (e.g., MS Drawings, Detail <b>Specifications,</b> and Performance <b>Specifications)</b> are available to assist users with the proper selection of connectors and related components.|$|R
5000|$|... {{published}} patent <b>specifications</b> {{and industrial}} design <b>specifications,</b> ...|$|R
5000|$|... #Subtitle level 2: <b>Specifications</b> (MKII, {{preliminary}} <b>specifications)</b> ...|$|R
5|$|The PHP {{language}} evolved {{without a}} written formal <b>specification</b> or standard until 2014, leaving the canonical PHP interpreter as {{a de facto}} standard. Since 2014 work {{has gone on to}} create a formal PHP <b>specification.</b>|$|E
5|$|The USB3.1 <b>specification</b> was {{published}} in July 2013.|$|E
5|$|The USB3.2 <b>specification</b> was {{published}} in September 2017.|$|E
40|$|Abstract. We adress the {{controller}} synthesis problem for distributed systems with regular and deterministic contextfree <b>specifications.</b> Our main {{result is a}} complete characterization of the decidable architectures for local <b>specifications.</b> This extends existing results on local <b>specifications</b> in two directions. First, we consider arbitrary, not necessarily acyclic, architectures and second, we allow deterministic contextfree <b>specifications.</b> Moreover, we show that for global deterministic contextfree <b>specifications,</b> even very simple architectures are undecidable. ...|$|R
40|$|Abstract. Geo-data and geo-service interoperations are {{important}} to Geographic Information System (GIS) users. To meet such needs, standard <b>specifications</b> are required for geo-data and geo-services. The OpenGIS Consortium (OGC) defined abstract <b>specifications</b> and partial implementation <b>specifications,</b> which can make diverse geo-data and geo-services accessible to conforming applications. However the implementation <b>specifications</b> are not complete, particularly {{in the areas of}} interactive map servers and feature servers. Currently available map server and feature server implementation <b>specifications</b> are only for HTTP-based Web environments; the implementation <b>specifications</b> for non-HTTP environments, such as CORBA, are still undefined...|$|R
40|$|Introduction The Larch Development Environment, LDE, {{provides}} a {{graphical user interface}} {{for the development of}} formal <b>specifications</b> using the Larch family of <b>specifications</b> languages. Larch uses a two-tiered approach to formal <b>specifications.</b> The first tier, using the Larch Shared Language (LSL), provides programming language independent <b>specifications</b> defining the characteristics and behavior of abstract data types. The second tier, using the Larch Interface Languages (LIL), provides <b>specifications</b> of the components of a software system. The interface language is particular to the programming language used for the software system and defines the interfaces of the components of that system. LDE offers support for constructing and editing <b>specifications,</b> browsing and referencing existing <b>specifications,</b> and proof construction with LSL <b>specifications.</b> 1. 1 Hardware Requirements The Larch Development Environment runs on a Sun SPARCstation 10 using the Solaris 2...|$|R
