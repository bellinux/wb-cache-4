1247|10000|Public
5|$|The score {{came under}} {{scrutiny}} from various soundtrack forums soon after being released. Spectral {{analysis of the}} content of the CD revealed certain frequency cutoff patterns around 16kHz, which are typical for lossy codecs. By analyzing the block size of these cutoffs, individuals at Hydrogenaudio were able to identify the lossy codec that was used before mastering the CD as MP3 with a <b>sample</b> <b>rate</b> of 48kHz. According to the aforementioned forums, Varèse's German subsidiary Colosseum Schallplatten acknowledged this as a mastering error, while Varèse Sarabande itself denied this. It is so far unclear if a remastered version with full frequency content will be released.|$|E
25|$|Cascaded integrator–comb (CIC) filters, {{commonly}} used for anti-aliasing during interpolation and decimation operations {{that change the}} <b>sample</b> <b>rate</b> of a discrete-time system.|$|E
25|$|Strictly speaking, the theorem only {{applies to}} a class of {{mathematical}} functions having a Fourier transform that is zero outside of a finite region of frequencies. Intuitively we expect that when one reduces a continuous function to a discrete sequence and interpolates back to a continuous function, the fidelity of the result depends on the density (or <b>sample</b> <b>rate)</b> of the original samples. The sampling theorem introduces {{the concept of a}} <b>sample</b> <b>rate</b> that is sufficient for perfect fidelity for the class of functions that are bandlimited to a given bandwidth, such that no actual information is lost in the sampling process. It expresses the sufficient <b>sample</b> <b>rate</b> in terms of the bandwidth for the class of functions. The theorem also leads to a formula for perfectly reconstructing the original continuous-time function from the samples.|$|E
50|$|<b>Sampling</b> <b>rate</b> can {{severely}} {{impact the}} values obtained for peak and average power output. <b>Sampling</b> <b>rates</b> {{consistent with a}} standard mechanical ergometer test show significantly lower peak and average power values than a test with much higher <b>sampling</b> <b>rates</b> in the computer data feeds. Furthermore, tests that use low <b>sampling</b> <b>rates</b> (< 2 Hz) {{tend to be less}} consistent than tests with high <b>sampling</b> <b>rates.</b> This suggests that a <b>sampling</b> <b>rate</b> of at least 5 Hz (0.2 sec) provides the most accurate results.|$|R
50|$|Linear time-invariant systems {{typically}} {{operate at}} a single <b>sampling</b> <b>rate,</b> which means {{that we have the}} same <b>sampling</b> <b>rate</b> at input and output. In other words, in an LTI system, the <b>sampling</b> <b>rate</b> would not change in the system. Systems that use different <b>sampling</b> <b>rates</b> at different stages are called multirate systems. The multirate system can have different <b>sampling</b> <b>rates</b> based on desire.Also multirate systems can provide different <b>sampling</b> <b>rates</b> without destroy the signal components. In Figure 1, you can see a block diagram of a two channel multirate system.|$|R
3000|$|... ≥ 2 fmax is the Nyquist {{sampling}} frequency. As the Nyquist <b>sampling</b> <b>rate</b> is 1 /T, {{the average}} <b>sampling</b> <b>rate</b> of nested <b>sampling</b> {{is smaller than}} the conventional Nyquist <b>sampling</b> <b>rate.</b>|$|R
25|$|DirectSound {{provides}} <b>sample</b> <b>rate</b> {{conversion and}} sound mixing (volume and pan) for an unlimited number of audio sources, however the practical limits are {{the number of}} hardware audio sources {{and the performance of}} software mixers.|$|E
25|$|The {{higher level}} APIs {{such as the}} Waveform-Audio Interface (waveXxx functions) and DirectSound use shared mode, which results in {{pre-mixed}} PCM audio that {{is sent to the}} driver in a single format (in terms of <b>sample</b> <b>rate,</b> bit depth and channel count). This format is configurable by the end user through Control Panel.|$|E
25|$|After {{passing through}} WASAPI, all {{host-based}} audio processing, including custom audio processing, {{can take place}} (<b>sample</b> <b>rate</b> conversion, mixing, effects). Host-based processing modules {{are referred to as}} Audio Processing Objects, or APOs. All these components operate in user mode. The only portion of this architecture that runs in kernel mode is the audio driver (which contains the Port Class driver, the vendor Miniport driver and the vendor HAL).|$|E
5000|$|The <b>sampling</b> <b>rate</b> is {{indicated}} in a header field of NetFlow version 5 (same <b>sampling</b> <b>rate</b> for all interfaces) or in option records of NetFlow version 9 (<b>sampling</b> <b>rate</b> per interface) ...|$|R
40|$|The {{conversion}} of digital signals from a given <b>sampling</b> <b>rate</b> to a second, arbitrary <b>sampling</b> <b>rate,</b> with both <b>sampling</b> <b>rates</b> derived from independent clock generators, is revisited. A general approach to arbitrary <b>sampling</b> <b>rate</b> conversion is presented from which two efficient realisations are deduced. The computational expenditure of both realisations is derived under the restriction of finite coefficient wordlengths. Finally, design examples demonstrate {{how to find}} the optimised parameters and finite wordlength coefficients of an arbitrary <b>sampling</b> <b>rate</b> converter with minimised expenditure and a prescribed performance...|$|R
3000|$|... [*]≥[*] 2 fmax is the Nyquist {{sampling}} frequency, {{which is}} greater than twice of the maximum frequency. As the Nyquist <b>sampling</b> <b>rate</b> is 1 /T, the average <b>sampling</b> <b>rate</b> of nested <b>sampling</b> is smaller than the conventional Nyquist <b>sampling</b> <b>rate.</b>|$|R
25|$|PSK31's {{symbol rate}} of 31.25Hz {{was chosen because}} a normal typing speed of about 50 words per minute {{requires}} a bit rate of about 32 bits per second, and specifically because 31.25Hz could easily be derived from the 8kHz <b>sample</b> <b>rate</b> used in many DSP systems, including those used in the computer sound cards commonly used for PSK31 operation (31.25Hz is 8kHz divided by 256, and so {{can be derived from}} 8kHz by halving the frequency eight times in succession).|$|E
25|$|A digital {{computer}} simulation model of an analog system {{such as the}} brain is an approximation that introduces random quantization errors and distortion. However, the biological neurons also suffer from randomness and limited precision, for example due to background noise. The errors of the discrete model can be made smaller than the randomness of the biological brain by choosing a sufficiently high variable resolution and <b>sample</b> <b>rate,</b> and sufficiently accurate models of non-linearities. The computational power and computer memory must however be sufficient to run such large simulations, preferably in real time.|$|E
25|$|Timestamp: (32 bits) Used {{to enable}} the {{receiver}} to play back the received samples at appropriate intervals. When several media streams are present, the timestamps are independent in each stream, {{and may not be}} relied upon for media synchronization. The granularity of the timing is application specific. For example, an audio application that samples data once every 125µs (8kHz, a common <b>sample</b> <b>rate</b> in digital telephony) would use that value as its clock resolution. The clock granularity is one of the details that is specified in the RTP profile for an application.|$|E
40|$|The {{conversion}} of complex-valued digital signals from a given <b>sampling</b> <b>rate</b> to a second, arbitrary <b>sampling</b> <b>rate,</b> with both <b>sampling</b> <b>rates</b> derived from indepen-dent clock generators, is investigated {{for the first}} time. Different efficient systems are presented and compared concerning the required computational burden. ...|$|R
40|$|In a {{long pulse}} {{discharge}} plasma parameters changes rapidly because of unpredictable unknown events. These unpredictable rapid changes in plasma parameters {{should be examined}} in detail {{in order to understand}} the properties of plasma. Normally the unknown events causes a fast changes in plasma parameters and to capture these rapid changes one need to change the <b>sampling</b> <b>rate</b> from the normal <b>sampling</b> <b>rate.</b> This requires to digitize the plasma parameters at two different <b>sampling</b> <b>rate,</b> one at slow <b>sampling</b> <b>rate</b> during the low activity period and another at fast <b>sampling</b> <b>rate</b> to capture the changes occurring at the time of unknown events. This demands for simultaneous coarse and unscheduled rapid change measurement of plasma parameters at different <b>sampling</b> <b>rates.</b> To fulfill above requirement a CAMAC digitizer module has been designed to acquire the data for the whole shot at one <b>sampling</b> <b>rate</b> and to capture the unscheduled rapid changes at higher <b>sampling</b> <b>rate</b> simultaneously. The module is capable of detecting unknown event and changes the <b>sampling</b> <b>rate</b> by ten times for rapid changes measurements. It can store 16 K samples for fast events and 32 K samples for whole shot duration. Besides, the module has some other important features, different modes of operation, a monitoring mode, a single shot mode (Pre/Post trigger acquisition) with selectable <b>sampling</b> <b>rate</b> upto I MHz and a lossless continuous acquisition mode. The module was tested for I kHz nominal <b>sampling</b> <b>rate</b> for 3. 2 seconds data and l 0 kHz at the time of event occurrence for 160 msec. data. with 8 K pre trigger samples. Keywords: CAMAC, data acquisition, steady state, digitize...|$|R
40|$|License, which permits {{unrestricted}} use, distribution, {{and reproduction}} in any medium, provided the original work is properly cited. The variable <b>sampling</b> <b>rate</b> system is encountered in many applications. When the speed information {{is derived from}} the position marks along the trajectory, one would have a speed dependent <b>sampling</b> <b>rate</b> system. The conventional fixed or multisampling rate system theory may not work in these cases because the system dynamics include the uncertainties which resulted from the variable <b>sampling</b> <b>rate.</b> This paper derived a convenient expression for the speed dependent <b>sampling</b> <b>rate</b> system. The varying <b>sampling</b> <b>rate</b> effect is then translated into multiplicative uncertainties to the system. The design then uses the popula...|$|R
25|$|In {{the domain}} of digital signal processing, the term {{interpolation}} refers {{to the process of}} converting a sampled digital signal (such as a sampled audio signal) to that of a higher sampling rate (Upsampling) using various digital filtering techniques (e.g., convolution with a frequency-limited impulse signal). In this application there is a specific requirement that the harmonic content of the original signal be preserved without creating aliased harmonic content of the original signal above the original Nyquist limit of the signal (i.e., above fs/2 of the original signal <b>sample</b> <b>rate).</b> An early and fairly elementary discussion on this subject can be found in Rabiner and Crochiere's book Multirate Digital Signal Processing.|$|E
25|$|The program, when installed, prompts {{the user}} to create a {{whitelist}} of devices that are allowed to connect to the computer via its USB ports, which it checks at a default <b>sample</b> <b>rate,</b> a rate which can be adjusted. The user may also choose what actions the computer will take if it detects a USB device not on the whitelist (by default, it shuts down and erases data from the RAM and swap file). Users need to be logged in as root. Hephaest0s cautions users they must be using at least partial disk encryption along with USBKill to fully prevent attackers from gaining access; Gizmodo suggests using a virtual machine {{that will not be}} present when the computer reboots.|$|E
25|$|A <b>sample</b> <b>rate</b> of 44.1kHz is {{commonly}} used for music reproduction, because this is also used for CD audio, the main source used for creating MP3 files. A great variety of bit rates are used on the Internet. A bit rate of 128kbit/s {{is commonly}} used, at a compression ratio of 11:1, offering adequate audio quality in a relatively small space. As Internet bandwidth availability and hard drive sizes have increased, higher bit rates up to 320kbit/s are widespread. Uncompressed audio as stored on an audio-CD has a bit rate of 1,411.2kbit/s, (16 bit/sample × 44100 samples/second × 2 channels / 1000 bits/kilobit), so the bitrates 128, 160 and 192kbit/s represent compression ratios of approximately 11:1, 9:1 and 7:1 respectively.|$|E
40|$|Abstract:- The first-order {{sampling}} of multi-band bandpass signals with arbitrary band positions is considered in this paper. Gaps between the spectral sub-bands are utilized to achieve lower <b>sampling</b> <b>rates</b> than the Nyquist. The lowest possible <b>sampling</b> <b>rate</b> {{along with other}} permissible <b>sampling</b> <b>rates</b> is identified via a unique partition of the frequency axis. With the complete identification of all the permissible <b>sampling</b> <b>rates,</b> a necessary and sufficient sampling theorem for multi-band bandpass signals is presented {{in terms of a}} series of csinc-interpolators...|$|R
40|$|The MOS-X is a recently-developed {{questionnaire}} {{used to evaluate}} the quality of artificial speech. In this experiment, participants listened to audio files produced by concatenative text-to-speech voices for the purpose of assessing the effect of Speaker and <b>Sampling</b> <b>Rate</b> on MOS-X ratings. The concatenative voices were developed from recordings of three different human speakers (code named AF, AM, and B) and produced using two different <b>sampling</b> <b>rates</b> (8 kHz and 22 kHz). Six independent groups of raters participated, one group for each combination of speaker and <b>sampling</b> <b>rate.</b> Analyses of variance indicated a significant main effect of Voice, but no significant main effect of <b>Sampling</b> <b>Rate</b> and no significant Voice by <b>Sampling</b> <b>Rate</b> interaction. The results indicate that independent groups of raters are sensitive to speaker differences in concatenative text-to-speech (TTS) voices, but not to differences in these <b>sampling</b> <b>rates...</b>|$|R
40|$|The {{variable}} <b>sampling</b> <b>rate</b> {{system is}} encountered in many applications. When the speed information {{is derived from}} the position marks along the trajectory, one would have a speed dependent <b>sampling</b> <b>rate</b> system. The conventional fixed or multisampling rate system theory may not work in these cases because the system dynamics include the uncertainties which resulted from the variable <b>sampling</b> <b>rate.</b> This paper derived a convenient expression for the speed dependent <b>sampling</b> <b>rate</b> system. The varying <b>sampling</b> <b>rate</b> effect is then translated into multiplicative uncertainties to the system. The design then uses the popular μ-synthesis process to achieve a robust performance controller design. The implementation on a BLDC motor demonstrates the effectiveness of the design approach...|$|R
25|$|Key {{selection}} criteria of a DSO (apart from input bandwidth) are the sample memory depth and <b>sample</b> <b>rate.</b> Early DSOs in the mid- to late 1990s {{only had a}} few KB of sample memory per channel. This is adequate for basic waveform display, but does not allow detailed examination of the waveform or inspection of long data packets for example. Even entry-level (<$500) modern DSOs now have 1nbsp&MB or more of sample memory per channel, and this has become the expected minimum in any modern DSO. Often this sample memory is shared between channels, and can sometimes only be fully available at lower sample rates. At the highest sample rates, the memory may be limited to a few tens of KB.|$|E
25|$|When the bandlimit is {{too high}} (or there is no bandlimit), the {{reconstruction}} exhibits imperfections known as aliasing. Modern statements of the theorem are sometimes careful to explicitly state that x(t) must contain no sinusoidal component at exactly frequency B, or that B must be strictly less than ½ the <b>sample</b> <b>rate.</b> The two thresholds, 2B and fs/2 are respectively called the Nyquist rate and Nyquist frequency. And respectively, they are attributes of x(t) and of the sampling equipment. The condition described by these inequalities is called the Nyquist criterion, or sometimes the Raabe condition. The theorem is also applicable to functions of other domains, such as space, {{in the case of}} a digitized image. The only change, in the case of other domains, is the units of measure applied to t, fs, and B.|$|E
25|$|Windows 98 {{introduced}} WDM Audio and the Kernel Audio Mixer driver (KMixer), {{which enabled}} digital mixing, routing and processing of simultaneous audio streams {{with a higher}} quality <b>sample</b> <b>rate</b> conversion as well as kernel streaming. Under WDM, DirectSound sends data to the software-based KMixer. Windows 98 Second Edition improved WDM audio support by adding DirectSound hardware buffering, DirectSound3D hardware abstraction, KMixer sample-rate conversion (SRC) for capture streams, multichannel audio support and introduction of DirectMusic. If the audio hardware supports hardware mixing (also known as hardware buffering or DirectSound hardware acceleration), DirectSound buffers directly to the rendering device. If DirectSound streams use hardware mixing, KMixer and its latency delay are bypassed. On Windows 98 and Windows Me, WDM audio drivers were preferred but compatibility with VxD driver model was preserved.|$|E
40|$|This {{thesis is}} focused on <b>sampling</b> <b>rate</b> {{conversion}} by a rational factor interpolation and decimation and <b>sampling</b> <b>rate</b> coversion by an arbitrary factor interpolation and decimation. There are described methods <b>sampling</b> <b>rate</b> conversion in time domain based on lowpass FIR linear filter and in spectral domain based on zero spectral lines. These methods are created in Matlab programming and tested on particular example. The results of this thesis are sensible parameter lowpass FIR linear filter for <b>sampling</b> <b>rate</b> conversion and discussion success rate used methods...|$|R
50|$|A lower {{value of}} n will {{also lead to}} a useful <b>sampling</b> <b>rate.</b> For example, using n = 4, the FM band {{spectrum}} fits easily between 1.5 and 2.0 times the <b>sampling</b> <b>rate,</b> for a <b>sampling</b> <b>rate</b> near 56 MHz (multiples of the Nyquist frequency being 28, 56, 84, 112, etc.). See the illustrations at the right.|$|R
40|$|Abstract—Frequency estimation/determination has {{applications}} in various areas, where the <b>sampling</b> <b>rate</b> is usually above the Nyquist rate. In some applications, it is preferred that {{the range of}} the frequencies is as large as possible for a given <b>sampling</b> <b>rate</b> and in some applications, the <b>sampling</b> <b>rate</b> is below the Nyquist rate. In both cases, frequency estimation from undersampled waveforms is needed. In this letter, we present an efficient algorithm to determine multiple frequencies from multiple undersampled waveforms with <b>sampling</b> <b>rates</b> below the Nyquist rates. Index Terms—Chinese remainder theorem, undersampling. I...|$|R
25|$|Bitrate is {{the product}} of the <b>sample</b> <b>rate</b> and number of bits per sample used to encode the music. CD audio is 44100 samples per second. The number of bits per sample also depends on the number of audio channels. CD is stereo and 16 bits per channel. So, {{multiplying}} 44100 by 32 gives 1411200—the bitrate of uncompressed CD digital audio. MP3 was designed to encode this 1411kbit/s data at 320kbit/s or less. As less complex passages are detected by MP3 algorithms then lower bitrates may be employed. When using MPEG-2 instead of MPEG-1, MP3 supports only lower sampling rates (16000, 22050 or 24000 samples per second) and offers choices of bitrate as low as 8kbit/s but no higher than 160kbit/s. By lowering the sampling rate, MPEG-2 layer III removes all frequencies above half the new sampling rate that may have been present in the source audio.|$|E
500|$|Other {{aspects of}} Lego Racers design also {{received}} mixed opinions from critics. One of Electronic Gaming Monthly's reviewers called the game's race tracks [...] "short, unimaginative and devoid of good shortcuts". Imperio called the track design [...] "simplistic and often not very difficult", but [...] "still well designed {{and a lot}} of fun to race through". Park called the game's music cheery and upbeat, while Stahl called it [...] "barely acceptable", stating that it [...] "gets irritating rather quickly", as well as calling the game's sound effects [...] "decidedly poor". Bishop said that the sound effects [...] "lack crispness", citing their low <b>sample</b> <b>rate</b> as a reason, as well as calling the game's music [...] "flat".|$|E
500|$|The Nintendo 64 {{version of}} Resident Evil 2 differs {{most from the}} other {{releases}} {{is the first of}} very few games released for the console to have FMVs despite the limited storage space on the cartridge. Over the course of twelve months and with a budget of $1million, Resident Evil 2 was ported to the console by a team lead by nine full-time and one part-time personnel from Angel Studios. Further help was provided by ten staff from Capcom Production Studio 3 and Factor 5. This version offers features that were not included on any other system, such as alternate costumes, the ability to adjust the degree of violence and to change the blood color, a randomizer to place items differently during each playthrough, and a more responsive first-person control scheme. Additionally, the port features 16 new in-game documents known as the [...] "Ex Files", written by Tetsuro Oyama. Hidden throughout the four scenarios, they reveal new information about the series' lore and connect the story of Resident Evil 2 to those of the other installments, including some that hadn't even been released yet at the time. The Nintendo 64 version adjusts its display resolution depending on the number of polygonal models currently on screen, and supports the console's Expansion Pak accessory for a maximum resolution of 640×480 during gameplay. Other visual enhancements include smoother character animations and sharper, perspective-corrected textures for the 3D models. The music of the Nintendo 64 version uses Dolby Surround, and was converted by Chris Hülsbeck, Rudolf Stember and Thomas Engel. The team reworked the sound set from the ground up to provide each instrument with a higher <b>sample</b> <b>rate</b> than on the PlayStation, thus resulting in higher-quality music. Some features from the other enhanced ports based on the Dual Shock Ver. do not appear in the Nintendo 64 version, such as the [...] "Extreme Battle" [...] minigame.|$|E
40|$|The {{monitoring}} {{of physical activity}} by acceleration sensors is very common. Smartphones and it's accessories (Smartwatch, wrist bands) are equipped with sensors and provide enough calculation power for data processing. Body worn mobile devices are recognizing various types of physical activities. The current concept consists of a very high <b>sampling</b> <b>rate,</b> the higher the <b>sampling</b> <b>rate,</b> the better the accuracy of classification. This strategy reduces the battery lifetime, especially for devices with limited physical dimensions, e. g. Smartwatches. Since <b>sampling</b> <b>rate</b> is a relevant factor for energy consumption, this work is analyzing the possibilities and performance of a very low <b>sampling</b> <b>rate</b> for physical activity recognition on Smartwatches. This work proposes the new concept of extremely low <b>sampling</b> <b>rate</b> for physical activity recognition...|$|R
40|$|The {{quantizer}} {{problem is}} first considered. The {{conditions under which}} the uniform white sequence model for the quantizer error is valid are established independent of the <b>sampling</b> <b>rate.</b> An equivalent spectral density is defined for the quantizer error resulting in an effective SNR value. This effective SNR {{may be used to}} determine quantized performance from infinitely fine quantized results. Attention is given to <b>sampling</b> <b>rate</b> considerations. <b>Sampling</b> <b>rate</b> characteristics of the digital phase-locked loop (DPLL) structure are investigated for the infinitely fine quantized system. The predicted phase error variance equation is examined {{as a function of the}} <b>sampling</b> <b>rate.</b> Simulation results are presented and a method is described which enables the minimum required <b>sampling</b> <b>rate</b> to be determined from the predicted phase error variance equations...|$|R
40|$|In a Body Sensor Network (BSN) {{activity}} recognition system, sensor {{sampling and}} communication quickly deplete battery reserves. While reducing sampling and communication saves energy, this energy savings usually {{comes at the}} cost of reduced recognition accuracy. To address this challenge, we propose AdaSense, a framework that reduces the BSN sensors <b>sampling</b> <b>rate</b> while meeting a user-specified accuracy requirement. AdaSense utilizes a classifier set to do either multi-activity classification that requires a high <b>sampling</b> <b>rate</b> or single activity event detection that demands a very low <b>sampling</b> <b>rate.</b> AdaSense aims to utilize lower power single activity event detection most of the time. It only resorts to higher power multi-activity classification to find out the new activity when it is confident that the activity changes. Furthermore, AdaSense is able to determine the optimal <b>sampling</b> <b>rates</b> using a novel Genetic Programming algorithm. Through this Genetic Programming approach, AdaSense reduces <b>sampling</b> <b>rates</b> for both lower power single activity event detection and higher power multi-activity classification. With the two datasets in the evaluation, we demonstrate that AdaSense significantly reduces BSN sensors <b>sampling</b> <b>rate</b> and outperforms existing solutions in terms of <b>sampling</b> <b>rate</b> reduction and energy savings. ...|$|R
