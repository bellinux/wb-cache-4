10|375|Public
40|$|Motivated by the {{importance}} of the clock synchronization in wireless sensor networks (WSNs), due to the packet loss, the synchronization error variance is a random variable and may exceed the designed boundary of the synchronization variance. Based on the clock synchronization state space model, this paper establishes the model of synchronization error variance analysis and design issues. In the analysis issue, assuming sensor nodes exchange clock information in the network with packet loss, we find a minimum clock information packet arrival rate in order to guarantee the synchronization precision at <b>synchronization</b> <b>node.</b> In the design issue, assuming sensor node freely schedules whether to send the clock information, we look for an optimal clock information exchange rate between <b>synchronization</b> <b>node</b> and reference node which offers the optimal tradeoff between energy consumption and synchronization precision at <b>synchronization</b> <b>node.</b> Finally, simulations further verify the validity of clock synchronization analysis and design from the perspective of synchronization error variance...|$|E
40|$|This paper {{investigates the}} {{dynamics}} of a <b>synchronization</b> <b>node</b> in isolation, and of networks of service and synchronization nodes. A <b>synchronization</b> <b>node</b> consists of M infinite capacity buffers, where tokens arriving on M distinct random input flows are stored (there is one buffer for each flow). Tokens are held in the buffers until one is available from each flow. When this occurs, a token is drawn from each buffer to form a group-token, which is instantaneously released as a synchronized departure. Under independent Poisson inputs, the output of a <b>synchronization</b> <b>node</b> is shown to converge weakly (and in certain cases strongly) to a Poisson process with rate equal to the minimum rate of the input flows. Hence synchronization preserves the Poisson property, as do superposition, Bernoulli sampling and M/M/ 1 queueing operations. We then consider networks of synchronization and exponential server nodes with Bernoulli routeing and exogenous Poisson arrivals, extending the standard Jackson network model to include synchronization nodes. It is shown that if the synchronization skeleton of the network is acyclic (i. e. no token visits any <b>synchronization</b> <b>node</b> twice although it may visit a service node repeatedly), then {{the distribution of the}} joint queue-length process of only the service nodes is product form (under standard stability conditions) and easily computable. Moreover, the network output flows converge weakly to Poisson processes. Finally, certain results for networks with finite capacity buffers are presented, and the limiting behavior of such networks as the buffer capacities become large is studied...|$|E
30|$|An {{alternative}} synchronization algorithm {{based on}} the synchronous flashing of fireflies was introduced {{in order to establish}} a global timebase that supports the implementation of a time-triggered approach {{based on the}} off-the-shelf MAC layer IEEE 802.15. 4. This allows a collision-free communication and a reduction of power consumption by at least a factor of 3. The synchronization is based on a self-organized principle with a simple calculation and provides complete scalability and graceful degradation. This is beneficial for the use in sensor networks. This has the inherent advantage, that no dedicated <b>synchronization</b> <b>node</b> is required and thus there exist no single point of failure. Furthermore, the additional rate calibration scheme allows a longer resynchronization interval and the use of cheap oscillators with high drift rates, which are usually featured in low-cost nodes.|$|E
5000|$|T0-T1: Multi-hop {{deterministic}} <b>synchronization</b> of <b>nodes</b> using cascaded beacons.|$|R
50|$|ALBEDO Telecom is {{a company}} that designs and {{manufactures}} products for the telecom industry including testers, <b>synchronization</b> <b>nodes</b> and networking devices. Typical users are R&D laboratories, Mobile and Telecom operators to verify and install the infrastructures that support any kind of applications based on voice, video and data. It is headquartered in Barcelona, Spain in the European Union.|$|R
30|$|After a node is {{synchronized}} (initially {{the mobile}} beacon only), it {{would wait for}} a random {{amount of time and}} then broadcast a synchronization message which contains the layer number and its identity to its immediate neighbors. In a cycle of <b>synchronization,</b> <b>nodes</b> that have already completed synchronization will simply drop incoming synchronization messages to reduce energy consumption.|$|R
30|$|For {{synchronization}} {{between two}} nodes A and B, node A {{would send a}} time[*]_[*]synchronize message to node B. The message would at least contain the layer number i of A and information that is needed for completing <b>synchronization.</b> <b>Node</b> B at layer i[*]+[*] 1 {{is considered to be}} synchronized after it receives the message. Here, we omit the details of message transmission as well as the specific methods that can be employed to compute the clock value using the information in a synchronization message. This simplification or abstraction would allow us to focus on the characteristics of network-wide synchronization without having to get into the details of the derivation of the clock value since there are already many algorithms that are suitable for such tasks. We also omit potential message transmission errors since techniques already exist to deal with such issues.|$|E
40|$|Great {{benefits}} {{could be}} envisioned through {{the deployment of}} wireless sensor networks {{for a wide range}} of applications, coving the domain of commercial, military and home. In this project, we work out a Moving Object Counting system, which can detect and track the movement of pedestrians and counting the corresponding number. Such a system can be applied in pedestrian traffic management, tourist's flow estimation, optimized facility management, security surveillance, etc. Our design is based on a cost-effective ultrasound sensor network. We introduce the implementation details related to our system, including sensor clustering, time <b>synchronization,</b> <b>node</b> communication, and the system architecture and deployment. We will discuss the major difficulties and challenges that we have encountered, and propose feasible solutions to them. Extensive experiments have been made, which evaluate the performance and demonstrate the efficiency of our Moving Object Counting system...|$|E
40|$|Wireless sensor {{networks}} (WSNs) {{are being}} used for observing real‐world phenomenon. It is important that sensor nodes (SNs) must be synchronized to a common {{time in order to}} precisely map the data collected by SNs. Clock synchronization is very challenging in WSNs as the sensor networks are resource constrained networks. It is essential that clock synchronization protocols designed for WSNs must be light weight i. e. SNs must be synchronized with fewer synchronization message exchanges. In this paper, we propose a clock synchronization protocol for WSNs where first of all cluster heads (CHs) are synchronized with the sink and then the cluster nodes (CNs) are synchronized with their respective CHs. CNs are synchronized with the help of time <b>synchronization</b> <b>node</b> (TSN) chosen by the respective CHs. Simulation results show that proposed protocol requires considerably fewer synchronization messages as compared with the reference broadcast synchronization (RBS) protocol and minimum variance unbiased estimation (MUVE) method. Clock skew correction mechanism applied in proposed protocol guarantees long term stability and hence decreases re‐ synchronization frequency thereby conserving more energ...|$|E
5000|$|Distributed {{synchronization}} of {{the operating}} cycle based on multi-hop deterministic <b>synchronization</b> of <b>nodes</b> using cascaded beacons. It allows to determine the sleeping period of all network nodes for energy saving.|$|R
30|$|Upon {{receiving}} a <b>synchronization</b> message, a <b>node</b> would assign itself a layer {{which is one}} layer higher than that found inside the synchronization message that it has just received. The <b>node</b> will perform <b>synchronization</b> of its internal clock if it has not done so during the current <b>synchronization</b> cycle. This <b>node</b> can thus {{be considered to be}} synchronized.|$|R
5000|$|Wlock {{controls}} <b>synchronization</b> {{with other}} <b>nodes</b> through CWS in TAC environments that supports multi instances.|$|R
40|$|Time {{synchronization}} algorithm in {{wireless sensor networks}} {{is essential}} to various applications such as object tracking, data encryption, duplicate detection, and precise TDMA scheduling. This paper describes CDRS that is a time synchronization algorithm using the Clock Drift rate and Reference Signals between two sensor nodes. CDRS is composed of two steps. At first step, the time correction is calculated using offset and the clock drift rate between the two nodes based on the LTS method. Two nodes become a synchronized state and the time variance can be compensated by the clock drift rate. At second step, the <b>synchronization</b> <b>node</b> transmits reference signals periodically. This reference signals are {{used to calculate the}} time difference between nodes. When this value exceeds the maximum error tolerance, the first step is performed again for resynchronization. The simulation results on the performance analysis show that the time accuracy of the proposed algorithm is improved, and the energy consumption is reduced 2. 5 times compared to the time synchronization algorithm with only LTS, because CDRS reduces the number o...|$|E
40|$|Abstract — Time {{synchronization}} {{is essential}} for several ad-hoc network protocols and applications, such as TDMA scheduling and data aggregation. In this paper, we propose a clusteringbased time synchronization framework for multi-hop sensor networks. We assume that relative node synchronization is sufficient, i. e., consensus on one time value is not required. Our goal is to divide the network into connected synchronization regions (nodes within 2 -hops) and perform inter-regional synchronization in O(LLSync) × Niter time, where O(LLSync) denotes {{the complexity of the}} underlying low-level synchronization technique (used for single hop synchronization), and Niter denotes the number of iterations where the low-level synchronization protocol is invoked. We propose two novel fully-distributed protocols, SYNC-IN and SYNC-NET, for regional and network synchronization, respectively, and prove that Niter is O(1) for both protocols. We exploit the tradeoff between rapid convergence (and consequently energy-efficiency) and perceived accuracy. Our framework does not require any special node capabilities (e. g., being GPS-enabled), or the presence of reference nodes in the network. Our framework is also independent of the particular clustering, inter-cluster routing, and low-level synchronization protocols. We formulate a density model for analyzing interregional synchronization, and evaluate our protocols via extensive simulations. Index Terms — Sensor networks, time <b>synchronization,</b> <b>node</b> clustering I...|$|E
40|$|Abstract—We {{analyze the}} {{transient}} and asymptotic {{behavior of a}} simple assembly-like queueing system often found as a component within a larger network. This system consists of two distinct types of items/customers arriving at separate buffers, according to independent Poisson processes, {{so as to be}} synchronized into pairs at a <b>synchronization</b> <b>node.</b> Once synchronized, a pair then queues up for service from a single server on a first-pair-in-first-pair-out basis. Service times of synchronized pairs are independently and exponentially distributed. We obtain explicit expressions for the transient and limiting values of the mean and variance of the cumulative number of synchronized pairs. When the two arrival rates are different, the process of synchronized pairs is asymptotically a Poisson process, enabling the use of an M/M/ 1 approximation. When the two arrival rates are equal, the synchronized process is not asymptotically a Poisson process, contradicting a result in [13]. However, the queue length process of synchronized pairs is still reasonably well approximated by an M/M/ 1 queueing system for low to moderately high traffic intensities. Most interestingly, by choosing equal arrival rates, both a transient and a long run benefit are obtained: the variance of the queue length process is approximately 1 3 lower than that with unequal arrival rates. Keywords: assembly-like queues, synchronization, Poisson processes, transient analysis, asymptotic approximations. ...|$|E
3000|$|... is {{the error}} in meters, {{following}} a Gaussian distribution. Attaining TDoA measurement requires <b>synchronization</b> of <b>nodes</b> n and m. Nowadays, {{one way to}} achieve this is to use high-quality atomic clock re-synchronized at every departure. In such case, [...]...|$|R
3000|$|Finally, we {{evaluate}} {{the impact of}} clock drift on the proposed scheme. Synchronization pulses are transmitted every 10 seconds to maintain <b>synchronization</b> between <b>nodes.</b> In [16], the authors have observed that the worst case clock drift of FireFly's clocks was [...]...|$|R
40|$|In {{an ad hoc}} {{sensor network}} clock {{synchronization}} is a serious issue as nodes in the sensor network have different clock drifts. One of the common solutions for the time <b>synchronization</b> among these <b>nodes</b> is the active transmission of time stamp messages. However this method consumes some resources and channel bandwidth, and is not suitable for resource constrained nodes in the sensor network. This paper presents a novel method with minimum overhead that reduces clock drift effects in the <b>synchronization</b> of <b>nodes</b> in sensor networks using relative time-slot referencing TDMA based MAC protocol...|$|R
40|$|A {{wormhole}} attack places two radio transceivers {{connected by}} a high capacity link and retransmits wireless signals from one antenna at the other. This creates a set of shortcut paths in the network, and may attract a lot of traffic to the wormhole link. The link thus gains control of a large fraction of network traffic which {{opens the door for}} more dangerous attacks afterwards. In this paper we introduce a wormhole detection and removal algorithm based on local connectivity tests. The basic idea is that the neighborhood of a wormhole contains two sets of nodes corresponding to two sides of the wormhole. The distance between these two sets is small when using paths that pass through the wormhole link, but is large when only regular network paths are considered. Thus we remove a small neighborhood that will contain potential wormhole links and check if a slightly larger neighborhood falls apart to multiple connected components. To accommodate spatial and temporal unpredictability of wireless communication links we abstract the network connectivity as an arbitrary graph so that the method does not assume any idealistic models (such as unit disk graph model). The algorithm uses purely local connectivity information, handles multiple wormhole attacks and generalizes to wireless networks deployed in 3 D. It does not suffer from typical limitations in previous work such as the requirements of special hardware, communication models, <b>synchronization,</b> <b>node</b> density etc. In simulations, our method is seen to beat {{the state of the art}} solutions, in particular for cases where previous solutions experience poor performance...|$|E
40|$|We {{describe}} a simple adaptive network of coupled chaotic maps. The network reaches a stationary state (frozen topology) for all {{values of the}} coupling parameter, although {{the dynamics of the}} maps at the nodes of the network can be non-trivial. The structure of the network shows interesting hierarchical properties and in certain parameter regions the dynamics is polysynchronous: nodes can be divided in differently synchronized classes but contrary to cluster <b>synchronization,</b> <b>nodes</b> in the same class need not be connected to each other. These complicated synchrony patterns have been conjectured to play roles in systems biology and circuits. The adaptive system we study describes ways whereby this behaviour can evolve from undifferentiated nodes. Comment: 13 pages, 17 figure...|$|R
40|$|Nodes in a {{wireless}} network transmit messages through a shared medium. Thus, a Media Access Control (MAC) protocol {{is necessary to}} regulate and coordinate medium access. For some application areas {{it is necessary to}} have a deterministic MAC protocol which can give guarantees on message delay and channel throughput. Schedule based MAC protocols, based on time <b>synchronization</b> among <b>nodes,</b> are currently used to implement deterministic MAC protocols. Time synchronization is difficult and costly, especially in energy constrained sensor networks. In this paper the f-MAC protocol is presented which can give guarantees regarding message delay and channel throughput without the requirement of time <b>synchronization</b> among <b>nodes.</b> The various trade-offs of f-MAC are analysed and discussed and application areas that would benefit from f-MAC are presented...|$|R
50|$|Common {{high-level}} functions {{should be}} clearly defined - UAVCAN defines standard services and messages for common high-level functions, such as network discovery, node configuration, node firmware update, node status monitoring (which naturally grows into a vehicle-wide health monitoring), network-wide time <b>synchronization,</b> dynamic <b>node</b> ID allocation (a.k.a. plug-and-play), etc.|$|R
30|$|Security and {{accuracy}} cannot straightforward be provided in WSNs {{to the cost}} of sending a larger number of or more frequent synchronization messages for two reasons. Firstly, these solutions impose a high energy cost. Secondly, they do not guarantee that the <b>synchronization</b> of <b>nodes</b> will remain precise between two successive resynchronizations.|$|R
30|$|Lemma 2. Any node placed farther (at higher hop-distance) {{from the}} sink <b>node</b> {{requires}} tighter <b>synchronization</b> than a <b>node</b> {{closer to the}} sink.|$|R
30|$|The <b>node</b> <b>synchronization</b> {{mechanism}} {{was evaluated}} considering the following probabilistic distribution of network delays: (1) uniform distribution, (2) Gaussian distribution, and (3) exponential distribution.|$|R
30|$|Dynamic channel {{assignments}} [14, 15], on {{the other}} hand, enforce the nodes to switch their interface dynamically from one channel to another between successive data transmissions. Therefore, they require tight <b>synchronizations</b> among <b>nodes.</b> Dynamic approaches are only used for single radio nodes working over multiple frequencies, since they cannot exploit the advantages of multi-radio networks [3].|$|R
40|$|Sensor nodes are small-size, {{low-cost}} {{embedded systems}} capable of local processing and RF communication. In a sensor network, nodes need to organize their operations to perform distributed sensing tasks, and need therefore to be time synchronized {{to a common}} reference. In this paper we present a time-synchronization approach for Wireless Sensor Networks (WSNs), denoted as Accuracy-Driven Synchronization Protocol (ADSP). ADSP {{is based on the}} “always-on ” model of time synchronization, and offers customizable accuracy level, using a novel method to reduce the transmit-to-receive time delay. The time reference is provided by a master node frequently broadcasting packets that the nodes use to synchronize themselves, and then to improve their <b>synchronization.</b> <b>Nodes</b> estimate their own clock characteristics with respect to the master node, thus keeping themselves synchronized even when the master node is not transmitting. The one-way broadcast scheme adopted by ADSP guarantees extremely low energy consumption...|$|R
5000|$|The global signals {{network is}} a simple 2-wire system {{arranged}} as a tree network. This network is used for evaluation of global conditions and <b>synchronization</b> of the <b>nodes.</b>|$|R
40|$|Energy {{conservation}} {{is one of}} the main issues of WSN research. To save energy and prolong sensor nodes lives, nodes operate in a duty-cycling work mode. Synchronous duty-cycling protocols require time synchronization in order to enable nodes to simultaneously sleep and wake up. In this paper, a method for <b>nodes</b> <b>synchronization</b> based on interval voting is proposed. The method allows to obtain consensus relation in a form of interval by means of sensor data fusion technique and apply it for <b>nodes</b> <b>synchronization,</b> thus solving a problem of choosing reference time node...|$|R
40|$|The Viterbi decoders {{currently}} {{used by the}} Deep space Network (DSN) use an algorithm for maintaining <b>node</b> <b>synchronization</b> that breaks down at bit signal-to-noise ratios (SNRs) of about 2. 0 dB. It is shown that this can become an important consideration when the effects of noisy carrier referencing are combined with the lower SNRs that are expected at Voyager 2 Uranus and Neptune encounters. Depending on the available carrier power, <b>node</b> <b>synchronization</b> losses of between 0. 85 and 1. 25 dB can be expected {{in addition to the}} radio loss...|$|R
40|$|In {{this paper}} we present an {{approach}} to the scheduling of fault-tolerant embedded systems for safety-critical applications. Processes and messages are statically scheduled, and we use process re-execution for recovering from multiple transient faults. If process recovery is performed such that the operation of other processes is not affected, we call it transparent recovery. Although transparent recovery has the advantages of fault containment, improved debugability and less memory needed to store the fault-tolerant schedules, it will introduce delays that can violate the timing constraints of the application. We propose a novel algorithm for the synthesis of fault-tolerant schedules that can handle the transparency/performance trade-offs imposed by the designer, and makes use of the fault-occurrence information to reduce the overhead due to fault tolerance. We model the application as a conditional process graph, where the fault occurrence information is represented as conditional edges and the transparent recovery is captured using <b>synchronization</b> <b>nodes.</b> 1...|$|R
30|$|Since {{the central}} entity {{performs}} all the calculations, {{there is no}} communication or ranging overhead between the nodes. The central entity can also ensure the <b>synchronization</b> between the <b>nodes</b> [22].|$|R
40|$|In this paper, we analyze {{attacks on}} {{existing}} time synchronization protocols for wireless sensor networks. We propose a secure time synchronization toolbox to counter these attacks. This toolbox includes protocols for secure pairwise and group <b>synchronization</b> of <b>nodes</b> that lie in each other’s power ranges and of nodes that {{are separated by}} multiple hops. We provide an in-depth analysis of security and energy overhead of the proposed protocols...|$|R
40|$|Communication {{networks}} are often designed and analyzed assuming tight <b>synchronization</b> among <b>nodes.</b> However, in applications that require {{communication in the}} energy-efficient regime of low signal-to-noise ratios, establishing tight <b>synchronization</b> among <b>nodes</b> in the network {{can result in a}} significant energy overhead. Motivated by a recent result showing that near-optimal energy efficiency can be achieved over the AWGN channel without requiring tight synchronization, we consider {{the question of whether the}} potential gains of cooperative communication can be achieved in the absence of synchronization. We focus on the symmetric Gaussian diamond network and establish that cooperative-communication gains are indeed feasible even with unsynchronized nodes. More precisely, we show that the capacity per unit energy of the unsynchronized symmetric Gaussian diamond network is within a constant factor of the capacity per unit energy of the corresponding synchronized network. To this end, we propose a distributed relaying scheme that does not require tight synchronization but nevertheless achieves most of the energy gains of coherent combining. Comment: 20 pages, 4 figures, submitted to IEEE Transactions on Information Theory, presented at IEEE ISIT 201...|$|R
30|$|It is {{difficult}} to implement synchronization. The trouble is that maintaining {{a wide range of}} synchronization consumes a lot of energy. But the approach presented in this paper does not require <b>synchronization</b> of all <b>nodes</b> in the entire network and only requires synchronization within the forwarding range of the sender, so it is easy to implement. Furthermore, nodes which are closer to the sink do not require to maintain <b>synchronization,</b> so these <b>nodes</b> do not need additional energy consumption, while nodes which are far away from the sink have residual energy. Using this part of energy for synchronization, the delay can be reduced without affecting the network lifetime.|$|R
40|$|A Sensor network {{generally}} {{has a large}} number of sensor nodes that are deployed at some audited site. In most sensor networks the nodes are static. Nevertheless, node connectivity is subject to changes because of disruptions in wireless communication, transmission power changes, or loss of <b>synchronization</b> between neighbouring <b>nodes,</b> so {{there is a need to}} maintain synchronization between the neighbouring nodes in order to have efficient communication. Hence even after a sensor is aware of its immediate neighbours, it must continuously maintain its view a process we call continuous neighbour discovery. In this proposed work we are maintaining <b>synchronization</b> between neighbouring <b>nodes</b> so that the sensor network will be always active...|$|R
