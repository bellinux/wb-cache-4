43|10|Public
5000|$|Many of {{the terms}} used in Scrum (e.g., <b>scrum</b> <b>master)</b> are {{typically}} written with leading capitals (i.e., <b>Scrum</b> <b>Master)</b> or as conjoint words written in camel case (i.e., ScrumMaster). To maintain an encyclopedic approach, however, this article uses normal sentence case for these terms—unless they are recognized marks (such as Certified <b>Scrum</b> <b>Master).</b>|$|E
50|$|Another common pitfall {{is for a}} <b>scrum</b> <b>master</b> {{to act as a}} contributor. While not {{prohibited}} by the Scrum methodology, the <b>scrum</b> <b>master</b> needs to ensure they have the capacity to act in the role of <b>scrum</b> <b>master</b> first and not working on development tasks. A scrum master's role is to facilitate the process rather than create the product.|$|E
50|$|Scrum is {{facilitated}} by a <b>scrum</b> <b>master,</b> {{who is accountable for}} removing impediments {{to the ability}} of the team to deliver the product goals and deliverables. The <b>scrum</b> <b>master</b> is not a traditional team lead or project manager but acts as a buffer between the team and any distracting influences. The <b>scrum</b> <b>master</b> ensures that the Scrum framework is followed. The <b>scrum</b> <b>master</b> helps to ensure the team follows the agreed processes in the Scrum framework, often facilitates key sessions, and encourages the team to improve. The role has also been referred to as a team facilitator or servant-leader to reinforce these dual perspectives.|$|E
50|$|For a Scrum {{project the}} Development Team are {{considered}} {{as people who}} are committed to the project while Product Owners, <b>Scrum</b> <b>Masters,</b> customers and executive management are considered as involved but not committed to the project.|$|R
40|$|A {{step-by-step}} tutorial-based approach. This book is {{of great}} help for agile teams who are already using or planning to use the GreenHopper tooling system to execute agile projects. It suits all roles in an agile project including system administrators, stakeholders, product owners, <b>scrum</b> <b>masters,</b> and team members. Fundamental knowledge of JIRA is essential...|$|R
30|$|Racheva et al. (2010 b) {{presented}} the conceptual model of reprioritization. It highlights the course grained description {{of decision making}} that happens at inter iteration time. The questionnaires followed by interviews with total 11 agile software development participants, i.e. project managers, developers, product owners, clients and <b>scrum</b> <b>masters.</b> The case studies of 10 projects were considered during the interviews of these experts.|$|R
50|$|One of {{the ways}} the <b>scrum</b> <b>master</b> role differs from a project manager is that the latter may have people {{management}} responsibilities and the <b>scrum</b> <b>master</b> does not. Scrum does not formally recognise the role of project manager, as traditional command and control tendencies would cause difficulties.|$|E
50|$|Having the <b>scrum</b> <b>master</b> also {{multitasking}} {{may result}} in too many context switches to be productive. Additionally, as a <b>scrum</b> <b>master</b> is responsible for ensuring roadblocks are removed so that the team can make forward progress, the benefit gained by individual tasks moving forward may not outweigh roadblocks that are deferred {{due to lack of}} capacity.|$|E
5000|$|The core {{responsibilities}} of a <b>scrum</b> <b>master</b> include (but {{are not limited}} to): ...|$|E
50|$|Ken Schwaber (born 1945) is a {{software}} developer, product manager and industry consultant. Ken worked with Jeff Sutherland to formulate the initial {{versions of the}} Scrum development process and to present Scrum as a formal process at OOPSLA'95. They have extended and enhanced Scrum at many software companies and IT organizations. Schwaber and Sutherland {{are two of the}} 17 initial signatories of the Agile Manifesto. They are co-authors of the definitive Scrum Guide, which is made available for free by Scrum.org. Today Schwaber runs Scrum.org, which provides Scrum resources, training, assessments, and certifications for <b>Scrum</b> <b>Masters,</b> <b>Scrum</b> Developers, Scrum Product Owners, and organizations using Scrum.|$|R
5000|$|Since I {{originally}} {{defined the}} Scrum of Scrums (Ken Schwaber was at IDX working with me), I can definitively say the Scrum of Scrums {{is not a}} [...] "meta Scrum". The Scrum of Scrums as I have used it is responsible for delivering the working software of all teams to the Definition of Done {{at the end of}} the sprint, or for releases during the sprint. PatientKeeper delivered to production four times per Sprint. Ancestry.com delivers to production 220 times per two-week Sprint. Hubspot delivers live software 100-300 times a day. The <b>Scrum</b> of <b>Scrums</b> <b>Master</b> is held accountable for making this work. So the Scrum of Scrums is an operational delivery mechanism.|$|R
40|$|Abstract—Though many {{warn that}} Agile at large scale is {{problematic}} {{or at least}} more challenging than in smaller projects, Agile software development seems to become the norm, also for large and complex projects. Based on literature, we constructed a conceptual model of social factors that may be of influence {{on the success of}} soft-ware development projects in general, and of Agile projects in particular. We also included project size as a candidate factor. We tested the model on a set of 40 projects from 19 organisa-tions, comprising a total of 141 project members, <b>Scrum</b> <b>Masters,</b> and product owners. We found that project size does not determine Agile project success. Rather, value congruence, degree of adoption of agile practices, and transformational leadership proved {{to be the most important}} predictors for Agile project success...|$|R
5000|$|XM uses a {{prioritized}} product backlog as {{the primary}} work input queue, where work is visualized in an open area generally on a single team Kanban Board. Every XM team has a <b>Scrum</b> <b>Master</b> and also a Product Owner, who together with the team help to ensure that Agile/Lean principles are followed. In XM the <b>Scrum</b> <b>Master</b> has some critical responsibilities, including to: ...|$|E
5000|$|Facilitation-based management: {{adopting}} agile management models, {{like the}} role of <b>Scrum</b> <b>Master,</b> to facilitate the day-to-day operation of teams.|$|E
50|$|At {{the end of}} the Sprint, Team, <b>Scrum</b> <b>Master</b> and Product Owner {{review the}} Sprint and plan {{accordingly}} for the next one.|$|E
40|$|Abstract — Though many {{warn that}} Agile at larger scale is {{problematic}} {{or at least}} more challenging than in smaller projects, Agile software development seems to become the norm, also for large and complex projects. Based on literature and qualitative interviews, we constructed a conceptual model of social factors that may be of influence {{on the success of}} software development projects in general, and of Agile projects in particular. We also included project size as a candidate success factor. We tested the model on a set of 40 projects from 19 Dutch organizations, comprising a total of 141 project members, <b>Scrum</b> <b>Masters</b> and product owners. We found that project size does not determine Agile project success. Rather, value congruence, degree of adoption of Agile practices, and transformational leadership proved {{to be the most important}} predictors for Agile project success. Index Terms — Agile Software Development, social success factors, value congruence, transformational leadership, predictive model. I...|$|R
40|$|The {{purpose of}} this thesis is to {{investigate}} organizational quality assurance through the international testing standard ISO 29119. The {{focus will be on}} how an organization carries out testing processes and designs and implements test cases. Keyword driven testing is a test composition concept in ISO 29119 and suitable for automation. This thesis will answer how keyword driven testing can facilitate the development of maintainable test cases and support test automation in an agile organization. The methodology used was a qualitative case study including semi-structured interviews and focus groups with agile business units within Scania IT. Among the interview participants were developers, test engineers, <b>scrum</b> <b>masters</b> and a unit manager. The results describe testing practices carried out in several agile business units, maintainability issues with test automation and general ideas of how test automation should be approached. Common issues with test automation were test cases failing due to changed test inputs, inexperience with test automation frameworks and lack of resources due to project release cycle. This thesis concludes that keyword driven testing has the potential of solving several maintainability issues with test cases breaking. However, the practicality and effectiveness of said potential remain unanswered. Moreover, successfully developing an automated keyword driven testing framework requires integration with existing test automation tools and considering the agile organizational circumstances...|$|R
40|$|When {{developing}} software {{a process}} for the project is a help to control the project; for the stakeholders {{to get an idea}} of what is happening and what is to come. During the last 10 - 15 years processes called agile methods have been developed. The idea of these is for the project only to plan a short iteration at a time and to include the developers in the planning of the technical development. Short iterations decrease the risk of developing out of date products. It also produces fast feedback from the customers which means that the customer early on gets to see what product is being developed and the projects gets a validation that they are developing the product the customer wanted. Teleca Sweden South in Malmö has started to use the agile software development method Scrum in two of their projects. Scrum is new for Teleca Sweden South in Malmö and they wanted feedback on how the process worked for their projects. The two projects were studied during a few months with the qualitative methods observation and interviews. Several different stakeholders in the two projects were interviewed to get a wide range of data. The two projects have used Scrum to different extents; they chose to use the practices that felt right to them. In both projects there are areas that need more work to make the process more effective, e. g. the testing, but the developers and the <b>Scrum</b> <b>Masters</b> are satisfied with what they accomplished during these first projects...|$|R
5000|$|During {{the first}} half, the whole scrum team (development team, <b>scrum</b> <b>master,</b> and product owner) selects the product backlog items they believe could be {{completed}} in that sprint ...|$|E
5000|$|At {{the lowest}} level, a role of {{business}} architect is usually {{replaced by a}} role of product owner, <b>scrum</b> <b>master,</b> business analyst who engages with the project with {{the main purpose of}} communicating architecture and promoting project's alignment with it.|$|E
50|$|Any {{impediment}} (e.g., stumbling block, risk, issue, delayed dependency, assumption proved unfounded) {{identified in}} the daily scrum should be captured by the <b>scrum</b> <b>master</b> and displayed on the team's scrum board or on a shared risk board, with an agreed person designated to working toward a resolution (outside of the daily scrum). No detailed discussions should happen during the daily scrum.|$|E
40|$|Over time, {{there has}} been a high failure rate of {{information}} systems development (ISD) projects, although Agile development has brought recent improvements. Knowledge management is also known {{to be one of the}} critical factors to Agile and project success; however, there are some knowledge transfer studies in Agile development. Therefore, the purpose of this research is to present a theoretical model examining what makes individuals successful at transferring knowledge in teams using Scrum, Agile’s most popular methodology. Twelve semi-structured interviews were conducted at two Scrum companies in Cape Town. Participants interviewed ranged from project managers and <b>Scrum</b> <b>masters</b> to software developers, business analyst and testers. The interviews were all transcribed, then analysed using thematic analysis. The findings produced new relationships between characteristics already well known to impact knowledge transfer as well as newly defined characteristics impacting knowledge transfer in Scrum teams: empathy and articulation skills of the source. The results have shown that the recipient should perceive the person wanting to transfer knowledge as having these characteristics to enable successful knowledge transfer: empathy, motivation, capability, credibility, articulate and ability to communicate enough. The contribution of this study to practice is a list of attributes for HR managers to help improve the knowledge transfer of Scrum team members. The contribution to Scrum research is a new theoretical model that suggests which characteristics a person needs to transfer knowledge successfully in Scrum teams, adapted from Joshi, Sarker and Sarker’s (2007) knowledge transfer model. This model can also be extended in the future by looking more deeply into the new relationships between constructs, such as how motivation together with capability of the source affect knowledge transfer in Scrum teams...|$|R
50|$|The {{product owner}} can cancel a sprint if necessary. The product owner may {{do so with}} input from the team, <b>scrum</b> <b>master</b> or {{management}}. For instance, management may wish the product owner to cancel a sprint if external circumstances negate {{the value of the}} sprint goal. If a sprint is abnormally terminated, {{the next step is to}} conduct a new sprint planning, where the reason for the termination is reviewed.|$|E
50|$|Every Sprint {{starts with}} a Sprint Planning Meeting and lasts for 30 days or less. In the meeting, {{prioritized}} items from Product Backlog are discussed amongst the development team, <b>Scrum</b> <b>Master</b> and the Product Owner. Development Team then discusses and presents their views regarding the feasibility of the tasks. Once decided, finalized tasks are then discussed and assigned to Development Team members. This {{is followed by the}} second phase of the meeting, which only constitutes Development Team where the team discusses the plan of work.|$|E
50|$|The scrum of scrums is a {{technique}} to operate Scrum at scale, for multiple teams working on the same product, allowing them to discuss progress on their interdependencies, focusing on how to coordinate delivering software, especially on areas of overlap and integration. Depending on the cadence (timing) of the scrum of scrums, the relevant daily scrum for each scrum team ends by designating one member as an ambassador {{to participate in the}} scrum of scrums with ambassadors from other teams. Depending on the context, the ambassadors may be technical contributors or each team's <b>scrum</b> <b>master.</b>|$|E
50|$|The {{product owner}} {{represents}} the product's stakeholders {{and the voice}} of the customer; and is accountable for ensuring that the team delivers value to the business. The product owner defines the product in customer-centric terms (typically user stories), adds them to the product backlog, and prioritizes them based on importance and dependencies. Scrum teams should have one product owner. This role should not be combined with that of the <b>scrum</b> <b>master.</b> The product owner should focus on the business side of product development and spend the majority of their time liaising with stakeholders and should not dictate how the team reaches a technical solution. This role is equivalent to the customer representative role in some other agile frameworks such as extreme programming (XP).|$|E
5000|$|Schwaber {{is one of}} {{the leaders}} of the agile {{software}} development movement. He is a founder of the Agile Alliance, and he is responsible for founding the Scrum Alliance and creating the Certified <b>Scrum</b> <b>Master</b> programs and its derivatives. Ken resigned from the Scrum Alliance in the fall of 2009 after a deep disagreement with the board regarding assessments, certification, and a developer program. He subsequently founded Scrum.org. At Scrum.org, he led the development of new courseware, assessments, and partnerships to improve the quality and effectiveness of Scrum. He has recently published and updated Scrum with Jeff Sutherland, and wrote [...] "Software in Thirty Days" [...] also with Sutherland. He and Jeff continue to manage and enhance Scrum in the Scrum Guide at www.scrumguides.org.|$|E
50|$|In technology, agile {{development}} involves teams self-managing to a {{large extent}} (though agile development is commonly still practised within a hierarchical organization, which means that certain types of decisions such as hiring, firing, and pay rises remain the prerogative of managers). In scrum, an agile methodology, team members assign work to be done among themselves, either by free choice or by consensus. The <b>scrum</b> <b>master</b> role in scrum is not a management role as such, but is a role that involves helping to remove obstacles to forward progress, and ensuring that the basic scrum framework is adhered to by all parties, inside and outside the team - both aspects of the role being more akin to facilitation than to top-down micromanagement. Agile methodologies such as scrum have also begun being used in non-technology companies and organizations.|$|E
40|$|This paper explores {{practitioner}} {{descriptions of}} agile method tailoring in large-scale offshore or outsourced enterprise projects. Specifically, tailoring of the <b>scrum</b> <b>master</b> role is investigated. The <b>scrum</b> <b>master</b> {{acts as a}} facilitator for software development teams, nurturing adherence to agile practices and removing impediments for team members. But in large projects, scrum masters often work together in geographically distributed teams. Scrum masters use sprint planning to avoid development tasks that overlap team boundaries, coordinate status and effort across teams, and integrate code bases. The study comprises 8 international companies in London, Bangalore and Delhi. Interviews with 46 practitioners were conducted between February 2010 and May 2012. A grounded theory research method was used to identify that the <b>scrum</b> <b>master</b> role comprises six activities: process anchor, stand-up facilitator, impediment remover, sprint planner, scrum of scrums facilitator, and integration anchor. This systematic description of activities in <b>scrum</b> <b>master</b> teams extends our understanding of practitioner perspectives on agile process tailoring in large enterprises. Understanding these activities will help coaches guide large scale agile teams. The research benefited in part from travel funding from the UK Deputy High Commission, Bangalore, Science and Innovation Network, and the Institute for Innovation, Design & Sustainability (IDEAS) at Robert Gordon University, UK. Accommodation and sustenance was provided by Company H {{during the data collection}} visit to Delhi, India...|$|E
40|$|Done {{at the end}} of the Sprint Not {{a simple}} demo Inspect and Adapt P. O. learns what is going on the {{development}} of the product The Team learns what is going on with the market The point is not only to show what has been done Collaboration for improving the creation process <b>Scrum</b> <b>Master</b> reports on the items that met the definition of done No cheating...|$|E
30|$|The smaller {{piece of}} the {{development}} cycle of a Scrum project is called “sprint” and is defined by iterations that can last 2 to 4  weeks, allowing the project in question to be versioned {{at the end of}} each sprint or to continue being improved in the subsequent iteration [19]. Scrum implements a framework in which activities are conducted by people that assume three core roles [20]: Product Owner, <b>Scrum</b> <b>Master,</b> and the Development Team.|$|E
40|$|Working Agile in {{software}} development has {{in recent years}} challenged the traditionalworking methods, such as the waterfall method. Within Scrum, which is a way towork Agile, {{the role of the}} product owner and the <b>Scrum</b> <b>master</b> are crucial to howan Agile team succeeds. Both product owners and Scrum masters have many areas ofresponsibility and challenges which make the roles interesting to investigate. Productowners tend to be responsible for being the link between the team that develops thesoftware and its stakeholders. It is therefore a key role within companies in order tosucceed in developing and maintaining software for customers and users. Scrummasters are responsible for facilitating Scrum and its events, as well as removing anyobstacles within the development team. The role of the <b>Scrum</b> <b>Master</b> thereforebecomes important in the application and pursuit of Scrum. Although the roles ofproduct owners and Scrum masters are central in Scrum, there have previously notbeen many studies conducted where the responsibilities and challenges for the roleshave been studied. This case study, conducted at a large Swedish IT company, describes theresponsibilities and challenges of product owners and Scrum masters compared withthe literature. The case study aims to study how product owners identifystakeholders, how they measure the value of the development team's work and howthey shape and convey the vision of the software. The study also aims studying howScrum masters ensures that Scrum is applied and followed, how they evaluate theirteam's work to improve productivity and how they facilitate the team's work. Datawas collected by interviewing ten product owners and Scrum masters, as well as byconducting observations. Both roles have proved been challenging and require great leadership skills. The roleshave been described different depending on the interviewed or observed productowner and <b>Scrum</b> <b>master.</b> The results from the case study show generally thatliterature and how the roles are in practice are in line with each other. They alsoshow that there are some areas of responsibility where product owners and Scrummasters don't think that the literature describes their reality...|$|E
30|$|The {{organizations}} and their corresponding agile teams thus vary in business domains, in organization and team size, and in country, although the Netherlands predominates. This {{is not a}} surprise, since {{the vast majority of}} the organizations we approached was based in the Netherlands in the first place. Our interviewees have in general ‘leading’ positions, such as product owner, <b>Scrum</b> <b>master,</b> or lead developer. This is mainly caused by our design, in which we favoured interviewing at least one representative with a broad view on the team and its activities.|$|E
40|$|In my thesis, I {{will focus}} on the {{processing}} and comparison of the waterfall and agile project management methods. I will describe the actual project management, what methods can be used, and what advantages or disadvantages {{can be found in the}} agile and waterfall approach. I will talk about the team members starting from the leadership roles over the <b>scrum</b> <b>master</b> to ordinary team members. The result of my work will be the answer to the question of whether the company surveyed by me is suitable for the agile project management approach...|$|E
40|$|Agile methodologies are {{at present}} {{widely used in}} industry. Many agile {{software}} development metrics are irrelevant to practitioners since they are dependent on the scope or content [Fenton and Neil, 2000]. Currently estimation {{is done by the}} team for each of the prioritized features [1] in order to commit to the number of features that can be implemented in each sprint. Each sprint is time-boxed; meaning the time to deliver is fixed. Risk in agile development is failing to deliver planned features in each sprint. There could be many reasons {{for not being able to}} deliver. Two of the reasons are discussed in this paper; one being incorrect time estimation and the other reason could be technical impediments. Actually the time taken to complete the task (feature implementation) depends on the proficiency of the development team and there has been no publication on estimation based on how and when to measure this. This is one of the gaps the research paper is trying to address. The <b>scrum</b> <b>master</b> assists the team in removing the impediments that obstructs the progress. In other words <b>scrum</b> <b>master</b> helps in facilitating productivity [2]. Hence, preparedness to resolve impediments as and when it arises is essential. This second risk is addressed by using semantic agents which is discussed in this paper...|$|E
40|$|Scrum is an {{increasingly}} common approach to software development adopted by organizations around the world. However, as organizations transition from traditional plan-driven development to agile development with Scrum, {{the question arises}} as to which Scrum role (Product Owner, <b>Scrum</b> <b>Master,</b> or Scrum Team Member) corresponds to a Project Manager, or conversely which Scrum role should the Project Managers adopt? In an attempt to answer this question, we adopted a mixed-method research approach comprising a systematic literature review and embedded case study of a commercial software development team. Our research has identified activities that comprise the <b>Scrum</b> <b>Master</b> role, and which additional roles are actually performed by Scrum Masters in practice. We found nine activities that are performed by Scrum Masters. In addition, we found that Scrum Masters also perform other roles, most importantly as Project Managers. This latter situation results in tension and conflict of interest that could {{have a negative impact}} on the performance of the team as a whole. These results point to the need to re-assess the role of Project Managers in organizations that adopt Scrum as a development approach. We hypothesize that it might be better for Project Managers to become Product Owners, as aspects of this latter role are more consistent with the traditional responsibilities of a Project Manager. Comment: 16 pages, 1 figure, PROFES 201...|$|E
