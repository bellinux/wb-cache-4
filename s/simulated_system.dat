632|6248|Public
5|$|Glenn was {{a backup}} pilot for Shepard and Grissom {{on the first}} two manned Project Mercury flights, Mercury-Redstone 3 and Mercury-Redstone 4 sub-orbital missions. Glenn was {{selected}} for Mercury-Atlas 6, NASA's first manned orbital flight, with Carpenter as his backup. Putting a man in orbit would achieve one of Project Mercury's most important goals. Shepard and Grissom had named their spacecraft Freedom 7 and Liberty Bell 7. The numeral 7 had originally been the production number of Shepard's spacecraft, but had come to represent the Mercury 7. Glenn named his spacecraft, number 13, Friendship 7, and had the name hand-painted on the side like the one on his F-86 had been. Glenn and Carpenter completed their training for the mission in January 1962, but postponement of the launch allowed them to continue rehearsing. Glenn spent 25 hours and 25 minutes in the spacecraft performing hanger and altitude test, and 59 hours and 45 minutes in the simulator. He flew 70 simulated missions and reacted to 189 <b>simulated</b> <b>system</b> failures.|$|E
25|$|A {{variety of}} {{thermostat}} algorithms {{are available to}} add and remove energy from the boundaries of a MD simulation in {{a more or less}} realistic way, approximating the canonical ensemble. Popular methods to control temperature include velocity rescaling, the Nosé-Hoover thermostat, Nosé-Hoover chains, the Berendsen thermostat, the Andersen thermostat and Langevin dynamics. The Berendsen thermostat might introduce the flying ice cube effect, which leads to unphysical translations and rotations of the <b>simulated</b> <b>system.</b>|$|E
25|$|Another way {{ergodicity}} can {{be broken}} is by the existence of nonlinear soliton symmetries. In 1953, Fermi, Pasta, Ulam and Tsingou conducted computer simulations of a vibrating string that included a non-linear term (quadratic in one test, cubic in another, and a piecewise linear approximation to a cubic in a third). They found that {{the behavior of the}} system was quite different from what intuition based on equipartition would have led them to expect. Instead of the energies in the modes becoming equally shared, the system exhibited a very complicated quasi-periodic behavior. This puzzling result was eventually explained by Kruskal and Zabusky in 1965 in a paper which, by connecting the <b>simulated</b> <b>system</b> to the Korteweg–de Vries equation {{led to the development of}} soliton mathematics.|$|E
40|$|The {{project design}} is the {{foundation}} of training, which can insure the usefulness of human resource development system. The Training Project Maintenance <b>Simulate</b> <b>System</b> of NC Machine Tools is presented based on analyzed contradiction between supply and demand. This paper introduces several scheme of Maintenance <b>Simulate</b> <b>System</b> of NC Machine Tools...|$|R
2500|$|... "virtual" [...] {{simulation}} (where actual players use <b>simulated</b> <b>systems</b> in {{a synthetic}} environment), or ...|$|R
40|$|The {{invention}} {{relates to}} {{a method for}} generating a structural surface by polishing. The method comprises the following steps: a user sets polishing parameters in a polishing <b>simulating</b> <b>system,</b> and the polishing <b>simulating</b> <b>system</b> <b>simulate</b> polishing to generate the structural surface, wherein the polishing parameters comprise a polishing strategy, surface designing parameters, processing parameters, polishing head parameters, and a ratio of a workpiece material to a polishing solution; and the polishing <b>simulating</b> <b>system</b> comprises an input module, a model-based <b>simulating</b> <b>system</b> and an output model. By means of the method for generating the structural surface by polishing, iron-containing materials and materials which are difficult to process can be processed; the capability of generating more different structural surfaces and textures which cannot be generated with other processing methods can be achieved; and the polishing process is made controllable and predictable. 本发明涉及一种利用抛光生成结构型表面的方法，用户通过在抛光仿真系统中设定抛光参数，并通过抛光仿真系统模拟抛光生成结构型表面，所述抛光参数包括：抛光策略、表面设计参数、加工参数、抛光头参数、工件材料以及抛光液的配比；所述抛光仿真系统包括：输入模块、基于模型的仿真系统以及输出模块。本发明所述的利用抛光生成结构型表面的方法可处理含铁材料和难加工材料，具有生成更多不同结构型表面及纹理的能力，而这些表面纹理用其他加工方法不可能实现，使抛光过程更具可控性与可预测性。Department of Industrial and Systems EngineeringInventor name used in this publication: 张志辉Inventor name used in this publication: 孔令豹Inventor name used in this publication: 何丽婷Inventor name used in this publication: 杜雪Inventor name used in this publication: 李荣彬Title in Traditional Chinese: 一種利用拋光生成結構型表面的方法Chin...|$|R
2500|$|The {{stability}} {{region of}} the semi-implicit method was presented by Niiranen although the semi-implicit Euler was misleadingly called symmetric Euler in his paper. The semi-implicit method models the <b>simulated</b> <b>system</b> correctly if the complex roots of the characteristic equation are within the circle shown below. For real roots the stability region extends outside the circle for which the criteria is ...|$|E
5000|$|... #Caption: An {{example of}} a WinFixer pop-up dialog box within Opera. Even if the Cancel or Close buttons were clicked to dismiss the box, it would {{redirect}} to a WinAntiVirus page anyway, featuring a <b>simulated</b> <b>system</b> scan.|$|E
50|$|Using {{boundary}} conditions {{of different types}} (fixed, elastic, viscous-elastic, etc.) {{it is possible to}} imitate different properties of surrounding medium, containing the <b>simulated</b> <b>system.</b> It is possible to model different modes of mechanical loading (tension, compression, shear strain, etc.) by setting up additional conditions at the boundaries.|$|E
40|$|There {{the purpose}} is to develop the {{multifunctional}} robotic imitator of spatial motions of movable object. The theoretical study of construction principle of robotic imitators of flight on the basis rf anthropomorthic robots with the adaptive control has been presented for the first time. The algorithms and the software of flight imitator have been developed. The adaptive algorithms of control over the motion of robot have been unparalleled. The robotic imitator of flight for the multifunctional <b>simulating</b> <b>system,</b> the transputer software <b>simulating</b> <b>system</b> have been developed. The robotic imitator of flight has been introduced in the educational process of chair of Automatic Control Systems of St. -Petersburg State Electrotechnical University. The transputer <b>simulating</b> <b>system</b> is used in this UniversityAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
50|$|Intuitively, a <b>system</b> <b>simulates</b> another <b>system</b> if it {{can match}} all of its moves.|$|R
40|$|Optimization of <b>simulated</b> <b>systems</b> is tackled by many methods, {{but most}} methods assume known environments. This article, however, {{develops}} a `robust' methodology for uncertain environments. This methodology uses Taguchi's {{view of the}} uncertain world, but replaces his statistical techniques by Response Surface Methodology (RSM). George Box originated RSM, and Douglas Montgomery recently extended RSM to robust optimization of real (non-simulated) systems. We combine Taguchi's view with RSM for <b>simulated</b> <b>systems.</b> We illustrate the resulting methodology through classic Economic Order Quantity (EOQ) inventory models, which demonstrate that robust optimization may require order quantities that differ from the classic EOQ...|$|R
50|$|Learning {{forms an}} {{integral}} part of DDM research. One of the main research activities in DDM has been to investigate using microworlds simulations tools the extent to which people are able to learn to control a particular <b>simulated</b> <b>system</b> and investigating the factors that might explain the learning in DDM tasks.|$|E
50|$|To {{minimize}} surface effects, {{the authors}} introduced {{the use of}} periodic boundary conditions. This means that the <b>simulated</b> <b>system</b> is treated as a unit cell in a lattice, and when a particle moves out of the cell, it automatically comes in through the other side (making the system a topological torus).|$|E
5000|$|The {{stability}} {{region of}} the semi-implicit method was presented by Niiranen although the semi-implicit Euler was misleadingly called symmetric Euler in his paper. The semi-implicit method models the <b>simulated</b> <b>system</b> correctly if the complex roots of the characteristic equation are within the circle shown below. For real roots the stability region extends outside the circle for which the criteria is ...|$|E
5000|$|Traditional {{economic}} theory predicts that horizontal inequality should {{not exist in}} a free market. However, horizontal inequality is observed in real and <b>simulated</b> 'free market' <b>systems.</b> The Pareto optimal economy is one traditional approach to the problem. Even in <b>simulated</b> <b>systems,</b> inequality of perfectly identical actors arises, to give [...] "the rich and poor".|$|R
5000|$|... Infra - Red Thermal Imagining Systems - Image Intensifier Tube Night Vision Systems - LASER Tank Fire Control Systems, LTFCS - Wire Guided Missiles - LASER <b>Simulating</b> <b>Systems,</b> LSS - LASER (Characteristics, Types, Elements, Civilian & Military Applications) ...|$|R
5000|$|The game aims {{to present}} {{multiple}} unscripted solutions to scenarios {{present in the}} game, using <b>simulated</b> <b>systems</b> dubbed the [...] "Improvisation Engine," [...] allowing for emergent behaviour {{with a wide range}} of player options rather than discrete puzzle solutitons.|$|R
50|$|In simulations, {{time and}} space are divided into {{discrete}} grids and the continuous differential equations of motion (such as the Navier-Stokes equation) are discretized into finite-difference equations; these discrete equations are in general unidentical to the original differential equations, so the <b>simulated</b> <b>system</b> behaves differently than the intended physical system. The amount and character of the difference depends on the system being simulated {{and the type of}} discretization that is used.|$|E
50|$|System-level {{simulation}} {{is used to}} test controllers {{connected to}} the <b>simulated</b> <b>system</b> instead of the real one.If the controller is a hardware controller like an ECU, the method is called hardware-in-the-loop. If the controller is run as a computer program on an ordinary PC, the method is called software-in-the-loop. Software-in-the-loop is faster to deploy and releases the constraint of real time imposed {{by the use of}} a hardware controller.|$|E
50|$|A {{variety of}} {{thermostat}} algorithms {{are available to}} add and remove energy from the boundaries of a MD simulation in {{a more or less}} realistic way, approximating the canonical ensemble. Popular methods to control temperature include velocity rescaling, the Nosé-Hoover thermostat, Nosé-Hoover chains, the Berendsen thermostat, the Andersen thermostat and Langevin dynamics. The Berendsen thermostat might introduce the flying ice cube effect, which leads to unphysical translations and rotations of the <b>simulated</b> <b>system.</b>|$|E
5000|$|... 1995 - The School of Dentistry was {{established}} in the University where a new <b>simulating</b> <b>system</b> was introduced first time in Georgia and the laboratory of simulated techniques {{was established}} which is unique and has no equal in Georgia.|$|R
50|$|<b>Simulated</b> Surgical <b>Systems,</b> L.L.C.|$|R
40|$|We {{propose a}} Monte Carlo (MC) {{sampling}} algorithm to <b>simulate</b> <b>systems</b> of particles interacting via very short-ranged discontinuous potentials. Such models {{are often used}} to describe protein solutions or colloidal suspensions. Most normal MC algorithms fail for such systems because, at low temperatures, they tend to get trapped in local potential-energy local minima due to the short range of the pair potential. To circumvent this problem, we have devised a scheme that changes the construction of trial moves {{in such a way}} that the potential-energy difference between initial and final states drops out of the acceptance rule for the Monte Carlo trial moves. This approach allows us to <b>simulate</b> <b>systems</b> with short-ranged attraction under conditions that were unreachable up to now...|$|R
5000|$|... kf is also {{calculated}} using molecular dynamics (MD), which simulates physical {{movements of the}} fluid particles with the Newton equations of motion (classical) and force field (from ab initio or empirical properties). For calculation of kf, the equilibrium MD with Green-Kubo relations, which express the transport coefficients in terms of integrals of time correlation functions (considering fluctuation), or nonequilibrium MD (prescribing heat flux or temperature difference in <b>simulated</b> <b>system)</b> are generally employed.|$|E
50|$|The above {{values are}} {{theoretical}} or calculated. Peak measured throughput is throughput {{measured by a}} real, implemented system, or a <b>simulated</b> <b>system.</b> The value is the throughput measured over {{a short period of}} time; mathematically, this is the limit taken with respect to throughput as time approaches zero. This term is synonymous with instantaneous throughput. This number is useful for systems that rely on burst data transmission; however, for systems with a high duty cycle this is less likely to be a useful measure of system performance.|$|E
50|$|Another way {{ergodicity}} can {{be broken}} is by the existence of nonlinear soliton symmetries. In 1953, Fermi, Pasta, Ulam and Tsingou conducted computer simulations of a vibrating string that included a non-linear term (quadratic in one test, cubic in another, and a piecewise linear approximation to a cubic in a third). They found that {{the behavior of the}} system was quite different from what intuition based on equipartition would have led them to expect. Instead of the energies in the modes becoming equally shared, the system exhibited a very complicated quasi-periodic behavior. This puzzling result was eventually explained by Kruskal and Zabusky in 1965 in a paper which, by connecting the <b>simulated</b> <b>system</b> to the Korteweg-de Vries equation {{led to the development of}} soliton mathematics.|$|E
40|$|Entropy and free-energy {{estimation}} are key in thermodynamic {{characterization of}} <b>simulated</b> <b>systems</b> ranging from spin models through polymer physics, protein structure, and drug-design. Current techniques suffer from being model specific, requiring abundant computation resources and simulation at conditions {{far from the}} studied realization. Here, we present a novel universal scheme to calculate entropy using lossless compression algorithms and validate it on <b>simulated</b> <b>systems</b> of increasing complexity. Our results show accurate entropy values compared to benchmark calculations while being computationally effective. In molecular-dynamics simulations of protein folding, we exhibit unmatched detection capability of the folded states by measuring previously undetectable entropy fluctuations along the simulation timeline. Such entropy evaluation opens a new window onto the dynamics of complex systems and allows efficient free-energy calculations...|$|R
2500|$|... "constructive" [...] {{simulation}} (where simulated players use <b>simulated</b> <b>systems</b> in {{a synthetic}} environment). Constructive simulation {{is often referred}} to as [...] "wargaming" [...] since it bears some resemblance to table-top war games in which players command armies of soldiers and equipment that move around a board.|$|R
40|$|A new {{recursive}} {{prediction error}} routine is {{compared with the}} backpropagation method of training neural networks. Results based on <b>simulated</b> <b>systems,</b> the prediction of Canadian Lynx data and the modelling of an automotive diesel engine indicate that the recursive prediction error algorithm is far superior to backpropagation...|$|R
5000|$|In Eulerian simulations, {{time and}} space are divided into a {{discrete}} grid and the continuous differential equations of motion (such as the Navier-Stokes equation) are discretized into finite-difference equations. [...] The discrete equations are in general more diffusive than the original differential equations, so that the <b>simulated</b> <b>system</b> behaves differently than the intended physical system. [...] The amount and character of the difference depends on the system being simulated {{and the type of}} discretization that is used. Most fluid dynamics or magnetohydrodynamic simulations seek to reduce numerical diffusion to the minimum possible, to achieve high fidelity — but under certain circumstances diffusion is added deliberately into the system to avoid singularities. For example, shock waves in fluids and current sheets in plasmas are in some approximations infinitely thin; this can cause difficulty for numerical codes. A simple way to avoid the difficulty is to add diffusion that smooths out the shock or current sheet. Higher order numerical methods (including spectral methods) tend to have less numerical diffusion than low order methods.|$|E
30|$|The <b>simulated</b> <b>system</b> {{consisted}} of 30 social network users for the SC platform.|$|E
30|$|The <b>simulated</b> <b>system</b> {{is assumed}} as a TDMA system with one macro cell.|$|E
40|$|We {{describe}} a Petri net based simulator, {{developed for the}} composite performance-reliability analysis of manufacturing systems. We also study the simulation based on time scale decomposition and demonstrate the speed-up. The effectiveness of the simulator is established by <b>simulating</b> <b>systems</b> with non-exponential failure and repair rates...|$|R
40|$|Digital {{computer}} program <b>simulates</b> <b>system</b> and related functions. Program is intended for, {{but not limited}} to, altitude control studies of rotating space station. Russel's method of formulating and solving motion equations for system of rigid bodies connected by movable joints is applied. Program features are listed...|$|R
5000|$|... "constructive" [...] {{simulation}} (where simulated players use <b>simulated</b> <b>systems</b> in {{a synthetic}} environment). Constructive simulation {{is often referred}} to as [...] "wargaming" [...] since it bears some resemblance to table-top war games in which players command armies of soldiers and equipment that move around a board.|$|R
