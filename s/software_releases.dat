240|2394|Public
5|$|Despite the {{popularity}} of the DISCiPLE and +D systems, most software released for them took the form of utility software. The ZX Spectrum +3 enjoyed much more success when it came to commercial <b>software</b> <b>releases</b> on floppy disk. More than 700 titles were released on 3-inch disk from 1987 to 1997.|$|E
5|$|Sheean in 2012, Rankin in 2014 and Collins is {{scheduled}} for 2018. The system can receive new <b>software</b> <b>releases</b> and hardware can be upgraded with new versions of the system regularly released with the version operated by a boat dependent on its fully cycle docking schedule.|$|E
5|$|On September 23, 2009, Nintendo {{announced}} its first price reductions for the console. Nintendo {{sold more than}} threemillion Wii consoles in the U.S. in December 2009 (setting a regional record for the month and ending nine months of declining sales), due to the price cut and <b>software</b> <b>releases</b> such as New Super Mario Bros. Wii. On January 31, 2010 the Wii became the best-selling home video-game console produced by Nintendo, with sales of over 67million units (surpassing those of the original Nintendo Entertainment System). Nintendo reported that on Black Friday 2011 over 500,000 Wii consoles were sold, making it the most successful Black Friday in company history.|$|E
40|$|Abstract. A poorly {{understood}} and underdeveloped {{part of the}} software process is <b>software</b> <b>release</b> management, which is the process through which software is made available to and obtained by its users. Complicating <b>software</b> <b>release</b> management is the increasing tendency for software to be constructed as a of systems&quot;, assembled from preexisting, independently produced, and independently released systems. Both developers and users of such software are a ected by these complications. Developers need to accurately document complex and changing dependencies among the systems constituting the software. Users will be heavily involved in the location, retrieval, and assembly process of the systems in order to appropriately con gure the software to their particular environment. In this paper we identify the issues encountered in <b>software</b> <b>release</b> management, and present an initial set of requirements for a <b>software</b> <b>release</b> management tool. We then describe a prototype of such a tool that supports both developers and users in the <b>software</b> <b>release</b> management process. ...|$|R
50|$|IDPS is free <b>software,</b> <b>released</b> {{under the}} GPL.|$|R
50|$|Polipo is free <b>software</b> <b>released</b> {{under the}} MIT License.|$|R
5|$|In 2003, Stardock {{released}} {{a remake of}} Galactic Civilizations, which was praised by reviewers who saw the game {{as a replacement for}} the Master of Orion series. In 2004 the Creative Assembly released the critically acclaimed , which has spawned many sequels. Civilization IV was {{released a}}t the end of 2005 and was considered the PC game of the year according to several reviewers, including GameSpot and GameSpy. It is now considered one of the greatest computer games in history, having been ranked the second-best PC game of all time by IGN. By 2008, the Civilization series had sold over eight million copies, followed the release of Civilization Revolution for game consoles soon after, Civilization V in 2010, and Civilization VI in 2016. Meanwhile, Stardock released , which was considered the sixth-best PC game of 2006 by GameSpy. Additionally, French developer Amplitude Studios released both Endless Space and Endless Legend. These successes have led Stardock's Brad Wardell to assert that 4X games have excellent growth potential, particularly among less hardcore players. This is in addition to the loyal base of 4X gamers who have supported free <b>software</b> <b>releases</b> such as Freeciv, FreeCol, Freeorion, Golden Age of Civilizations, and C-evo.|$|E
25|$|Agile {{software}} development involves frequent <b>software</b> <b>releases</b> with relatively small changes. Defects are revealed by user feedback.|$|E
25|$|The {{operating}} {{system is not}} located in the Pippin's onboard storage, and is instead located on the CD-ROMs {{for each of the}} Pippin's <b>software</b> <b>releases.</b> Apple could thus upgrade the {{operating system}} without having to sell new hardware to the consumer. However, because of this, once Pippin <b>software</b> <b>releases</b> ended, it became impossible to upgrade to a later operating system, or install extensions and such. The system automatically reboots whenever the CD-ROM eject button is pushed, so a user can not load the system software off one CD-ROM, and then insert another CD-ROM. Apple intended for the Pippin platform to be an appliance, and encouraged consumers to purchase a fully featured Macintosh system if they were looking for something upgradable. Bandai never upgraded its system software beyond the 7.5.2 version. Hardware enthusiasts have been able to run system software as late as Mac OS 8.0, but this can only be done on a system utilizing a developer ROM-BIOS.|$|E
50|$|SETEDIT is free <b>software</b> <b>released</b> {{under the}} GNU GPL.|$|R
50|$|Tkinter is free <b>software</b> <b>released</b> under a Python license.|$|R
50|$|YXORP is free <b>software</b> <b>released</b> {{under the}} GNU GPL.|$|R
25|$|The Release team defines and executes the {{official}} <b>software</b> <b>releases.</b> The Team {{is responsible for}} setting release schedules for {{the official}} releases. This includes release dates, deadlines for individual release steps and restrictions for code changes. The Release Team coordinates release dates with the marketing and press efforts of KDE. The release team is composed of Module Coordinators, Marketing Team liaison, {{and the people who}} actually do the work of tagging and creating the releases.|$|E
2500|$|The primary {{programming}} language {{used on the}} project is the Java {{programming language}}. To aid {{the development of the}} project, the development teams uses the integrated development environment, IntelliJ IDEA which is provided by JetBrains. Other tools used in the project include Bamboo for continuous integration and the management of <b>software</b> <b>releases.</b> Additionally, [...] is a Java profiler which helps optimise and eliminate bugs in the BioSD project.|$|E
50|$|Agile {{software}} development involves frequent <b>software</b> <b>releases</b> with relatively small changes. Defects are revealed by user feedback.|$|E
50|$|Anthy is free <b>software</b> <b>released</b> {{under the}} GNU GPL v2.|$|R
50|$|OSQA is free <b>software</b> <b>released</b> {{under the}} GNU GPL v3+.|$|R
50|$|KImageMapEditor is free <b>software</b> <b>released</b> {{under the}} GNU GPL v2+.|$|R
50|$|The {{standards}} address {{aspects of}} software architecture, program behaviour, human-computer interaction, C programming, documentation, and <b>software</b> <b>releases.</b>|$|E
5000|$|... id <b>Software</b> <b>releases</b> their legacy game engines {{under the}} GPL, while {{retaining}} proprietary ownership on their latest incarnation.|$|E
50|$|The oneM2M Partnership Project {{maintains}} a WiKi for developers {{to learn about}} the oneM2M community, <b>software</b> <b>releases</b> and collaborative development processes.|$|E
5000|$|... eAccelerator is free <b>software</b> <b>released</b> {{under the}} GNU GPL 2.0.|$|R
5000|$|... #Subtitle level 2: Games & <b>Software</b> <b>released</b> in North America ...|$|R
40|$|<b>Software</b> <b>release</b> {{management}} {{is the process}} through which software is made available to and obtained by its users. Until now, this process has been relatively straightforward. However, the emergence of component-based software is complicating <b>software</b> <b>release</b> management. Increasingly, <b>software</b> is constructed via the assembly of pre-existing, independently produced, and independently released components. Both developers and users of such software are affected by these complications. Developers need to accurately document the complex and changing dependencies among the components constituting the software. Users must be involved in locating, retrieving, and assembling components in order to appropriately bring the software into their particular environment. In this paper, we introduce the problem of release management for component-based software and discuss SRM, a prototype <b>software</b> <b>release</b> management tool we have developed that supports both developers and users in the <b>software</b> <b>release</b> management process...|$|R
50|$|The infrequency of Lynx <b>software</b> <b>releases</b> and the system's minimal {{marketing}} budget {{have been}} cited as the main factors in its commercial failure.|$|E
50|$|Controls {{are applied}} to new {{software}} releases.:For security, new <b>software</b> <b>releases</b> often require controls such as back ups, version control, and a secure implementation.|$|E
50|$|In 2006 (sub7legends.net) re-opened with {{hundreds}} of thousands of users, and has kept Sub7 alive with clean downloads and support and new <b>software</b> <b>releases.</b>|$|E
40|$|Abstract. Most {{existing}} {{studies on}} <b>software</b> <b>release</b> policies use models {{based on the}} non-homogeneous Poisson process. In this paper, we discuss a <b>software</b> <b>release</b> policy based on a state space model. The state space model has a Gamma-Gamma type invariant conditional distribution. A cost model that removes errors in software systems and risk cost due to software failure is used. The optimal release time to minimize the expected cost in every test-debugging stage is discussed. Key words and phrases: Kalman filter, self-exciting point process, open-loop-feed-back-optimal control problem, submartingale. An important problem in the software development process is deciding when to stop testing and <b>release</b> the <b>software.</b> This decision problem is called the optimal <b>software</b> <b>release</b> problem and has been studied widely. Okumoto and Goel (1980) addressed a cost-optimal <b>software</b> <b>release</b> policy that minimizes the total expected software cost...|$|R
5000|$|The {{most common}} form of non-rolling release (or {{standard}} <b>release)</b> <b>software</b> is fixed <b>release</b> <b>software,</b> where (unlike a [...] rolling release) the release is [...] and occurs at a fixed point in time. A minor <b>software</b> <b>release</b> in-between <b>software</b> versions is called a point <b>release.</b> Some <b>software</b> projects adopt a date-based (also termed a timed or scheduled release) <b>release</b> policy, where <b>software</b> is <b>released</b> on a specific predetermined date, versus others which use a state-based (or release when ready) <b>release</b> policy, where <b>software</b> is <b>released</b> once deemed by the development team to be in a release-ready state.|$|R
50|$|Both {{libraries}} {{are free}} <b>software</b> <b>released</b> under the 3-clause BSD license.|$|R
50|$|Many <b>software</b> <b>releases</b> from Apple {{have now}} been relicensed under the more liberal Apache License, such as the Bonjour Zeroconf stack, but not OpenPlay.|$|E
50|$|Release {{management}} {{is the process}} of managing, planning, scheduling and controlling a software build through different stages and environments; including testing and deploying <b>software</b> <b>releases.</b>|$|E
50|$|The {{result was}} that music {{workstations}} evolved rapidly during this period, as new <b>software</b> <b>releases</b> could add more functionality, new voice cards developed, and new input technologies added.|$|E
50|$|It is free <b>software</b> <b>released</b> {{under the}} GNU General Public License.|$|R
50|$|RealSpace is {{a global}} real estate CRM <b>software</b> <b>released</b> in 2016.|$|R
50|$|PivotX is free <b>software</b> <b>released</b> {{under the}} GNU GPL 2.0 license.|$|R
