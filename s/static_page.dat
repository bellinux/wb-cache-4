38|334|Public
2500|$|Programming {{languages}} such as Perl, Ruby, C, and Java support template processing either natively, {{or through}} add-on libraries and modules. JavaServer Pages (JSP), PHP, and Active Server Pages (ASP with VBScript, JScript or other languages) are examples, themselves, of web template engines. [...] These technologies are typically used in server-side templating systems, {{but could be}} adapted for use on a [...] "edge-side" [...] proxy or for <b>static</b> <b>page</b> generation.|$|E
5000|$|The {{traditional}} Hello world program, {{producing a}} web server that serves a <b>static</b> <b>page</b> with [...] "Hello, web!" [...] as its content, {{can be written}} in Opa as: ...|$|E
5000|$|In {{his book}} End of Ignorance, Charles Winborne {{refers to a}} <b>static</b> <b>page</b> that is ″only a text file, but one that links to {{accompanying}} files″ as a plain-vanilla web page.|$|E
25|$|<b>Static</b> <b>pages</b> {{instead of}} dynamic HTML.|$|R
50|$|In {{the design}} process, dynamic pages are often mocked-up or wireframed using <b>static</b> <b>pages.</b> The skillset {{needed to develop}} dynamic web pages is much broader than for a <b>static</b> <b>pages,</b> {{involving}} server-side and database coding as well as client-side interface design. Even medium-sized dynamic projects are thus almost always a team effort.|$|R
5000|$|At its peak, {{the site}} {{had more than}} 150 <b>static</b> <b>pages</b> {{dedicated}} to different artists.|$|R
50|$|In 2015, {{the public}} {{repository}} {{moved from a}} <b>static</b> <b>page</b> curated by the tool's developer to a new server written in MoonScript by Leaf Corcoran. Also, LuaRocks development was moved to GitHub in 2010.|$|E
50|$|The {{application}} supports <b>static</b> <b>page</b> generation (in which {{files for}} each page are updated whenever {{the content of}} the site is changed), dynamic page generation (in which pages are composited from the underlying data as the browser requests them), or {{a combination of the two}} techniques. Movable Type optionally supports LDAP for user and group management and automatic blog provisioning.|$|E
5000|$|Programming {{languages}} such as Perl, Ruby, C, and Java support template processing either natively, {{or through}} add-on libraries and modules. JavaServer Pages (JSP), PHP, and Active Server Pages (ASP with VBScript, JScript or other languages) are examples, themselves, of web template engines. These technologies are typically used in server-side templating systems, {{but could be}} adapted for use on a [...] "edge-side" [...] proxy or for <b>static</b> <b>page</b> generation.|$|E
5000|$|Base: Provides an {{interface}} {{to basic}} configuration settings, {{as well as}} the ability to create custom <b>static</b> <b>pages.</b>|$|R
5000|$|Greymatter creates <b>static</b> <b>pages.</b> Therefore, when {{an entry}} is edited, only the main page and the entry's page are rebuilt (but not the monthly or weekly archive file). While <b>static</b> <b>pages</b> are arguably quicker to load for the user, it is {{time-consuming}} {{for the author}} and resource intensive for the user to constantly rebuild files. Also, by using <b>static</b> <b>pages,</b> {{at least twice as}} much space is used on the server as is needed (the entry files, [...]cgi format, as well as individual entry pages in HTML and weekly or monthly archive logs in HTML). Besides this, sometimes rebuilding is impossible and leads to Greymatter timing out and showing a blank window (usually when there are massive numbers of entries being rebuilt, or when attempting to rebuild all files).|$|R
50|$|<b>Static</b> web <b>pages</b> are {{suitable}} for the contents that never or rarely need to be updated, though modern static site generators are changing. Maintaining large numbers of <b>static</b> <b>pages</b> as files can be impractical without automated tools, such as Static site generators described in Web template system. Any personalization or interactivity has to run client-side, which is restricting.|$|R
5000|$|Other {{programs}} previously {{heard on}} the [...] "Mix" [...] 96-7 format included [...] "American Top 40 Countdown w/ Ryan Seacrest", Backtraxx USA with Kidd Kelly and [...] "Intelligence For Your Life" [...] with John Tesh. The American Top 40 w/ Ryan Seacrest program continues to run on the HOT format on Saturday mornings. The station's website, www.hot967fm.com, exists as a <b>static</b> <b>page</b> currently with links to the station's Facebook and listener information data form to collect text messaging information likely for future promotion(s).|$|E
5000|$|When {{a website}} offers a microsummary (a {{regularly}} updated {{summary of the}} most important information on a Web page), users can create a bookmark with a [...] "Live Title". Compact enough to fit in the space available to a bookmark label, they provide more useful information about pages than <b>static</b> <b>page</b> titles, and are regularly updated with the latest information. There are several websites that can be bookmarked with Live Titles, and even more add-ons to generate Live Titles for other popular websites. Support for Live Titles was removed as of Firefox 6.|$|E
5000|$|Class 4 - This class now {{expects the}} data to be stored in a {{relational}} database, obtaining benefits of data integrity and removal of data redundancy. Relationships in the content that are presented as hyperlinks, are mapped directly to relations in the database schema. Redundancy in the data that exists in earlier classes should be removed. The sequence of presentation is also different from earlier classes. There {{is no longer the}} concept of a <b>static</b> <b>page.</b> Content can change dynamically based on users navigation and input through the content; the content may now be user specific. It is no longer possible to print a linear format of the document.|$|E
50|$|Mambo {{included}} {{features such}} as page caching to improve performance on busy sites, advanced templating techniques, and a fairly robust API. It could provide RSS feeds and automate many tasks, including web indexing of <b>static</b> <b>pages.</b>|$|R
50|$|Along with loading new items regularly, UFDC was {{optimized}} for search engine findability using <b>static</b> <b>pages</b> and adding RSS feeds in 2008. Initially, this process included creating <b>static</b> <b>pages</b> for all {{items on the}} mirror site UFDC2 (http://www.uflib.ufl.edu/ufdc2 instead of http://www.uflib.ufl.edu/ufdc) and then in November 2010 re-optimizing the site with the single URL (http://ufdc.ufl.edu/), creating RSS feeds automatically for new items loaded and for all items, and optimizing all code for faster loading. These changes were necessary because of the deep web structure of UFDC which, like so many digital library collections, has many directory levels and dynamic URLs that cause difficulty for search engines even with properly implemented sitemaps.|$|R
50|$|Tool mixing: Because the URLs of many CMSs are {{dynamically}} generated {{with internal}} parameters and reference information, {{they are often}} not stable enough for <b>static</b> <b>pages</b> and other web tools, particularly search engines, to rely on them.|$|R
5000|$|Another {{difficulty}} of definition {{is caused by}} the way such works cross artistic boundaries into the areas of music and sculpture, or can alternatively be defined as sound poetry, visual poetry, found poetry and typewriter art. Henri Chopin’s work was related to his musical treatment of the word. Kenelm Cox (1927-68) was a kinetic artist [...] "interested in the linear, serial aspects of visual experience but particularly in the process of change," [...] whose revolving machines transcended the <b>static</b> <b>page</b> in being able to express this. Ian Hamilton Finlay’s concrete poetry began on the page but then moved increasingly towards three dimensional figuration and afterwards to site-specific art in the creation of his sculpture garden at Little Sparta. The Italian Maurizio Nannucci's Dattilogrammmi experiments (1964/1965) were also transitional, preluding his move into light art.|$|E
50|$|All over Britain, Gifford {{was either}} {{hailed as the}} new Messiah or reviled by the old guard (who could never quite {{articulate}} why they were so uneasy with his work - contemptuously describing a photograph as 'an out of focus blur passing some grainy cooling towers' was about the limit of their critical evaluation). Soon popular magazines such as Railway World and Railway Magazine were offering an uncomfortable mixture of Gifford-inspired avant-garde (or what passed as avant-garde) and the traditional. By 1967, however, Gifford had left Ian Allan and devoted himself to photographing {{the final years of}} British steam virtually full-time, often in the company of his young protégé Ian Krause, a student at Harrow School of Photography (it was Krause, rather than Gifford, who was behind the 'New Approach' photographic feature that first appeared in Railway World in 1966 and continued after Gifford's departure). This association introduced Gifford to the infamous MNA (Master Neverer's Association), a group of (mostly) Midlands-based photographers centred on the legendary Paul Riley, an ex-roadie and professional hellraiser. The long overnight car journeys and inevitable ego clashes were not to Gifford's taste - he is a soft-spoken and unassuming man - and he returned to public transport and his own company for the final months of steam. He never did own a telephoto lens in steam days, although it became the hallmark of the Gifford-inspired 'New Approach' to railway photography that had featured in Railway World and reached its apotheosis in the Ian Allan album Steam Portfolio (1968). Style sometimes triumphed over substance but in the work of young photographers such as Malcolm Dunnett and Roderick Hoyle, Gifford's influence was unmistakable; in the book's <b>static</b> <b>page</b> layout, however, the absence of his subtle design skills was all too obvious.|$|E
40|$|Abstract]: A tablet PC (a {{computer}} with a special screen so a stylus can write directly into an active program) was used in a tutorial setting to record pen-strokes and audio subsequently edited as a video. Because the subject primarily involved mathematical manipulation, ordinary text-based presentations {{might not be as}} beneficial. The intention was to provide a fuller tutorial experience for external students compared to the usual <b>static</b> <b>page</b> of worked solutions, which does not allow the student to discover the deeper thought processes behind the flow of the solution. A broader range of senses can be engaged, deepening the learning process and assisting those students who tend to learn aurally. Students were surveyed regarding their impressions of how useful the videos were in conjunction with the <b>static</b> <b>page</b> of worked solutions. Also studied was the inclass learning experience due {{to the use of the}} computer instead of the traditional board...|$|E
50|$|MojoMotor was a {{lightweight}} alternative to ExpressionEngine released in July 2010, developed by EllisLab. MojoMotor {{was made to}} create easy-to-edit, brochure-like sites that use almost entirely <b>static</b> <b>pages.</b> MojoMotor was retired in November 2015 and no longer receives updates or technical support.|$|R
50|$|TUX is {{only able}} to serve <b>static</b> web <b>pages.</b>|$|R
40|$|It {{is evident}} that in the new Web era, content volume and {{services}} availabil-ity play a major role, leaving behind typical <b>static</b> <b>pages</b> which have solely text and images. The majority of the business oriented service providers are concerned for the Quality of Services (QoS), in terms of content delivery. I...|$|R
40|$|One {{metaphor for}} {{hypertext}} {{is that it}} offers a visually <b>static</b> <b>page</b> of information (which can include text, graphics, sound, and The hypertext page can also have “depth ” where it contains hyperlinks connecting to other documents or resources. Java transforms this <b>static</b> <b>page</b> metaphor into a more dynamic one. The information on a Java page on the Web does not hav visually static or limited to a pre-defined set of ways to interact with users. Users encountering Java programs can take part in wider variety of interactive behavior, limited only by the imagination and skill of the Java programmer. Java thus transforms hypertext page into a stage, complete with the chance for actors and players to appear and things to happen. And, instead of t being in the audience, a user of a Java-enabled Web browser is actively {{a part of the}} activity on this stage, changing what tran and reacting to it, and shaping the information content delivered on the Web...|$|E
40|$|The project {{addresses}} {{new building}} for habitation with surgery in Chotebor cadastral municipality, county Brod. House is a ground floor with residential loft and garage. Floor {{plan of the}} house is approximately T-shaped. Gabled roof is designed with a slope of 30 with Tondach clay tiles, roof is modern Ring beam. External walls are of brick blocks designed Heluz. The house is designed with regard to layout, safety in use, ensuring the construction of a <b>static</b> <b>page,</b> fire safety and energy savings...|$|E
40|$|A {{model for}} virtual memory in a {{distributed}} memory parallel computer is proposed. It uses a novel parallel computing operating system framework {{and leads to}} the definition of two strategies for implementing parallel virtual memory. Careful analysis and simulation results indicate that dynamic page allocation performs better for applications that exhibit some locality of reference of public data and for applications whose data space does not fit in the physical memory available. <b>Static</b> <b>page</b> allocation is more efficient in cases of poor locality and small data space (no virtual memory needed) ...|$|E
5000|$|Web {{sites with}} dynamic content can use URLs that {{generate}} pages from the server using query string parameters. These are often rewritten to resemble URLs for <b>static</b> <b>pages</b> {{on a site}} with a subdirectory hierarchy. For example, the URL to a wiki page might be: but can be rewritten as: ...|$|R
50|$|Big Medium generates public web <b>pages</b> as <b>static</b> <b>pages,</b> {{meaning that}} they are not built on the fly with every page request but just once when the page is edited. This {{approach}} scales well under very high traffic conditions but means that there are limited opportunities to personalize pages for individual users.|$|R
40|$|In this paper, we analyze some {{clustering}} algorithms {{that have}} been widely employed {{in the past to}} support the comprehension of web applications. To this end, we have defined an approach to identify <b>static</b> <b>pages</b> that are duplicated or cloned at the content level. This approach is based on a process that first computes the dissimilarity between web pages using Latent Semantic Indexing, a well known information retrieval technique, and then groups similar pages using clustering algorithms. We consider five instances of this process, each based on three variants of the agglomerative hierarchical clustering algorithm, a divisive clustering algorithm, k-means partitional clustering algorithm, and a widely employed partitional competitive clustering algorithm, namely Winner Takes All. In order to assess the proposed approach, we have used the <b>static</b> <b>pages</b> of three web applications and one static web site...|$|R
40|$|The project {{addresses}} the new residential {{building in the}} cadastral Chotebor city, county Vysočina. Jedná is a four-storey apartment building with two facilities (hairdressers, school). Apartment building has two main entrances A and B which are located in Eastern strany. Objekt the basement, flat-roofed single-shell střechou. Objekt flat is located on parcels 1228, 4466, 1221 / 1. 1227 / 1, 1223, 1260 / 1. Obvodové walls of the porotherm 30 Profi and is insulated with expanded polystyrenem. Dům is designed {{with regard to the}} disposition solutions, safety in use, fire safety, the <b>static</b> <b>page</b> and energy saving...|$|E
40|$|This {{paper is}} based upon the results of a {{heuristic}} evaluation of early design concepts for a new Royal Mail Web site. The design concepts consisted of <b>static</b> <b>page</b> mock-ups incorporating innovative Web technologies as implemented in existing Web sites. The acceptability of these design features in light of the particular constraints imposed by the Web is discussed. It is argued that reliance on innovative technologies is likely to exclude a proportion of potential customers. The paper concludes that Web designers should strive for simplicity rather than innovation, thereby making their sites accessible to the widest possible audience while still fostering positive customer perceptions...|$|E
40|$|Memory {{controllers}} {{have used}} <b>static</b> <b>page</b> closure policies {{to decide whether}} a row should be left open, open-page policy, or closed immediately, close-page policy, after the row has been accessed. The appropriate choice for a particular access can reduce the average memory latency. However, since application access patterns change at run time, <b>static</b> <b>page</b> policies cannot guarantee to deliver optimum execution time. Hybrid page policies have been investigated {{as a means of}} covering these dynamic scenarios and are now implemented in state-of-the-art processors. Hybrid page policies switch between open-page and close-page policies while the application is running, by monitoring the access pattern of row hits/conflicts and predicting future behavior. Unfortunately, as the size of DRAM memory increases, fine-grain tracking and analysis of memory access patterns does not remain practical. We propose a compact memory address-based encoding technique which can improve or maintain the performance of DRAMs page closure predictors while reducing the hardware overhead in comparison with state-of-the-art techniques. As a case study, we integrate our technique, HAPPY, with a state-of-the-art monitor, the Intel-adaptive open-page policy predictor employed by the Intel Xeon X 5650, and a traditional Hybrid page policy. We evaluate them across 70 memory intensive workload mixes consisting of single-thread and multi-thread applications. The experimental results show that using the HAPPY encoding applied to the Intel-adaptive page closure policy can reduce the hardware overhead by 5 X for the evaluated 64 GB memory (up to 40 X for a 512 GB memory) while maintaining the prediction accuracy...|$|E
50|$|Offline support helps browsers cache <b>static</b> <b>pages.</b> They depend more on HTTP {{response}} headers sent by {{web servers}} to fetch HTML, CSS and multimedia required {{to render the}} web page. If everything required to render is cached, then a page loads quickly, but even if one item is not cached then everything slows down dramatically.|$|R
50|$|The <b>static</b> HTML <b>pages</b> of JPred 2 {{are still}} {{available}} for reference.|$|R
5000|$|... #Caption: A <b>static</b> web <b>page</b> is {{delivered}} to the user exactly as stored.|$|R
