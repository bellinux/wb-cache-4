14|59|Public
5000|$|Dependable {{and secure}} systems and devices (self-testing and self {{repairing}} <b>software,</b> <b>privacy</b> ensuring technology etc.) ...|$|E
50|$|The Free <b>Software</b> <b>privacy</b> CD, Polippix, {{was started}} by and is still {{maintained}} by IT-Political Association.|$|E
50|$|In 2008 he co-founded of the Icelandic Digital Freedom Society (FSFÍ), a free <b>software,</b> <b>privacy</b> {{and digital}} rights {{organization}} in Iceland.|$|E
50|$|For writing <b>software</b> to help <b>privacy</b> online.|$|R
50|$|Reptile is a {{distributed}} content syndication {{and management}} <b>software</b> with <b>privacy</b> protection, {{written by the}} co-creator of the Jakarta Project's Jetspeed software. It's designed to allow users to securely find, share, publish and subscribe to web-based content.|$|R
40|$|While the {{importance}} of developing <b>software</b> for <b>privacy</b> and authentication on the Internet can hardly be gainsaid today, the process of bringing standards to fruition can be a long and arduous one. We have used prototyping methods to track {{the efforts of the}} Internet Engineering Task Force network security group (IPSEC), concentrating on the software challenges and advantages posed by the standards. As a result, we have some observations and useful guidelines for current and future developers of secure networking software. January 24, 1996 Department of Computer Science The University of Arizona Tucson, AZ 85721 1 This work was supported by ARPA under the grant DABT 63 - 91 -C- 0030. 2 Author's address: Department of Computer Science, University of Arizona, Tucson, AZ 85721. Email: ho@cs. arizona. edu. 1 Forward While {{the importance}} of developing <b>software</b> for <b>privacy</b> and authentication on the Internet can hardly be gainsaid today, the process of bringing standards to fruition can be a l [...] ...|$|R
40|$|We propose an {{hardware}} {{solution to}} several security {{problems that are}} difficult to solve on classical processor architectures, like licensing, electronic commerce, or <b>software</b> <b>privacy.</b> The memory management unit which provides multitasking and virtual memory support is extended and given a third purpose: to supply strong hardware security support for the software layer. The principle of this enhanced device, that we call a Security Management Unit (or SMU), is based on ciphered program execution and access control. It is composed of a pipelined block ciphering/deciphering unit, an infernal permanent memory and logic control, whose interaction is explained in this pape...|$|E
40|$|Record linkage is {{used for}} {{preparing}} sampling frames, deduplication of lists and combining information on the same object from two different databases. If the identifiers of the same objects in two different databases have error free unique common identifiers like personal identification numbers (PID), record linkage is a simple file merge operation. If the identifiers contain errors, record linkage is a challenging task. In many applications, the files have widely different numbers of observations, for example a few thousand records of a sample survey and a few million records of an administrative database of social security numbers. Available <b>software,</b> <b>privacy</b> issues and future research topics are discussed. " [author's abstract...|$|E
40|$|The {{concepts}} and methods are reviewed which {{have proven to}} be of the most value in designing and implementing the Octopus computer network, {{which is one of the}} largest concentrations of computing capability in the world. The discussion surmnarlzes design principles relating to the scope of system <b>software,</b> <b>privacy</b> and security, processor organization, file structure, network connections, hard-ware selection, programming techniques, standards, and use of resources. Differences with what appear to be widespread belief and practice are cited, including such matters as the size of the programmer staff, the significance of the privacy issue, the importance of the choice of languages and language constructions, the primary causes of system failure, and efficiency...|$|E
50|$|Amidst {{concerns}} over <b>privacy,</b> <b>software</b> countermeasures have emerged to prevent cyber-intrusion, the un-authorized act of spying, snooping, and stealing {{personally identifiable information}} or other proprietary assets (e.g. images) through cyberspace.|$|R
50|$|Usage of the node's {{network card}} MAC address for the node id {{means that a}} version 1 UUID can be tracked back to the {{computer}} that created it. Documents can sometimes {{be traced to the}} computers where they were created or edited through UUIDs embedded into them by word processing <b>software.</b> This <b>privacy</b> hole was used when locating the creator of the Melissa virus.|$|R
50|$|Kovurt Limited is a Virtual Private Network (VPN) provider, {{internet}} <b>privacy</b> <b>software</b> {{products for}} Windows and Mac desktop computers, {{as well as}} mobile devices running Blackberry, iOS, Android, and Windows Phone operating systems.|$|R
40|$|Online {{interactions}} {{provide a}} rich source of content from which reputations and communities can be created. With the proliferation of various networked devices through which people can access the digital world from an increasing variety of physical contexts, there is a new potential to utilize these reputations and communities to create interaction opportunities in the physical world. We are creating blogger bridges to enable members of a community of online journalers to safely notify others in the community of their proximity—using a method of progressive revelation via networked devices—in order to facilitate serendipitous encounters among community members who are gathered together in a particular location. We describe the kinds of communities that can support such bridges, define a mechanism for enabling progressive revelation, discuss possible technical solutions, and discuss plans for deployment and evaluation in a real community of use. Keywords Computer-supported cooperative work, human-computer interaction, ubiquitous computing, situated computing, community <b>software,</b> <b>privacy,</b> trust. 1...|$|E
40|$|Abstract. This paper {{presents}} a new security architecture for protecting software confidentiality and integrity. Different {{from the previous}} process-centric systems designed for the same purpose, the new architecture ties cryptographic properties and security attributes to memory instead of each individual user process. The advantages of such a memory centric design are many folds. First, it provides a better security model and access control on <b>software</b> <b>privacy</b> that supports both selective and mixed tamper resistant protection on software components from heterogeneous sources. Second, the new model supports and facilities tamper resistant secure information sharing in an open software system where both data and code components could be shared by different user processes. Third, the proposed security model and secure processor design allow software components protected with different security policies to inter-operate within the same memory space efficiently. Our new architectural support requires small silicon resources and its performance impact is minimal based on our experimental results using commercial MS Windows workloads and cycle based out-of-order processor simulation. ...|$|E
40|$|Secure {{processor}} architecture enables tamper-proof protec-tion {{on software}} that addresses many dicult security prob-lems such as reverse-engineering prevention, trusted com-puting, secure mobile agents {{by providing a}} secure comput-ing environment that is resistant to both physical tamper-ing and software exploits. Two essential features oered by a secure processor are software encryption for protect-ing <b>software</b> <b>privacy</b> and integrity verication for prevent-ing tampering of the protected software. Despite a number of secure processor designs have been proposed, the delicate relationship between privacy and integrity protection {{in the context of}} modern out-of-order processor design is not well understood. This paper aims to remedy this research de-ciency by evaluating dierent designs that integrate soft-ware decryption and integrity verication into an out-of-order pipeline. Our paper provides an in-depth analysis of the security and performance trade-os, implications of sev-eral designs in the context of memory fetch side-channel ex-ploits. Among the evaluated spectrum of design alternatives are (1) authentication-then-issue, (2) authentication-then-commit, (3) authentication-then-write, (4) authentication-then-fetch, and (5) authentication-then-commit + address obfuscation. Performance of various designs was evaluated using a cycle based processor model and SPEC 2000 bench-mark suite. 1...|$|E
50|$|Avira Operations GmbH & Co. KG is a German {{multinational}} {{security software}} company that provides antivirus <b>software,</b> Internet Security, <b>Privacy,</b> Identity and Performance tools for computers, smartphones, servers and networks, delivered as both software and cloud-based services.|$|R
25|$|Kaspersky's {{consumer}} software {{include the}} Antivirus, Internet Security and Total Security products. The Antivirus software includes malware protection, monitors the PC for suspicious program behavior, and warns users about potentially dangerous websites. The Internet Security <b>software</b> adds <b>privacy</b> features, parental controls, anti-phishing tools. Total Security adds parental controls, adult website filters, diagnostic tools, a Password Manager application, and other features. Kaspersky's software {{is available for}} Macs, PCs, Android, iOS, Windows Mobile, BlackBerry and Symbian.|$|R
50|$|<b>Privacy</b> <b>{{software}}</b> is software {{built to}} protect the privacy of its users. The software typically {{works in conjunction with}} Internet usage to control or limit the amount of information made available to third parties. The software can apply encryption or filtering of various kinds.|$|R
40|$|An interrelated {{group of}} {{computer}} programmes that automates multiple library operations called integrated library system”. In Pakistan, the condition concerning library software cannot {{be associated with}} the that in developed countries, it’s not satisfactory due to absence of software systems used for making modern libraries, less budget, multilingual nature of library’s collection, <b>software</b> <b>privacy</b> and absence of provision from regional vendors are the key barriers in the impressive implementations of integrated library system. The Objective {{of this paper is to}} propose an open source integrated library system implementation framework to boost the academic library standard, provide capability to resource sharing and library users can able to access the information material at any time regardless of their geographical location. This research is grounded on comprehensive literature review that includes the journal articles, conference proceedings, thesis, books and libraries websites by the help of literature review the suggestion and the recommendation will give to the library professionals about criteria of selecting the open source-ILS and how to overcome problems and challenges faced by implementation of open source-ILS. Meanwhile this study will also focus on prevailing standards in developed world for Management of libraries and providing specific directions for upbringing of academic libraries in Pakistan. ...|$|E
40|$|Recent micro-architectural {{research}} has proposed various schemes to enhance processors with additional tags to track various properties of a program. Such a technique, {{which is usually}} referred to as information flow tracking, has been widely applied to secure software execution (e. g., taint tracking), protect <b>software</b> <b>privacy</b> and improve performance (e. g., control speculation). In this paper, we propose a novel use of information flow tracking to obfuscate the whole control flow of a program with only modest performance degradation, to defeat malicious code injection, discourage software piracy and impede malware analysis. Specifically, we exploit two common features in information flow tracking: the architectural support for automatic propagation of tags and violation handling of tag misuses. Unlike other schemes that use tags as oracles to catch attacks (e. g., taint tracking) or speculation failures, we use the tags as flow-sensitive predicates to hide normal control flow transfers: the tags are used as predicates for control flow transfers to the violation handler, where the real control flow transfer happens. We have implemented a working prototype based on Itanium processors, by leveraging the hardware support for control speculation. Experimental results show that BOSH can obfuscate the whole control flow with only a mean of 26. 7 % (ranging from 4 % to 59 %) overhead on SPECINT 2006. The increase in code size and compilation time is also modest...|$|E
40|$|During {{the last}} few years, {{software}} security especially at the operating system level has been significantly improved for consumer electronics devices. However, few would argue that very {{little attention has been}} paid to software intrusiveness when it comes to preserve end-user’s privacy and security. In fact, this situation is in contrast to the security incidents leading to data leakages that are constantly on the rise. Furthermore, software developers in majority fail to offer strong warranties regarding the software they implement, meaning that they often do not bear any responsibility for software insecurities and misconfigurations. So, a major open question is whether end-users are in position to become informed and cope with the various forms of software intrusiveness threatening their private sphere as a consequence of security incident. This is especially important when using their mobile devices as they provide a fine grained access to private data sources. Note that nowadays mobile devices provide end-users equivalent or even more advanced services than the ones provided by PCs, as they incorporate a variety of sensors e. g., GPS, accelerometer, etc. that can be accessed through operating system services. In this way, mobile apps that get access to end-users’ data might invade their privacy and anonymity as a trade-off for offering the app free of charge. Moreover, end-users do not usually notice this, as in most cases such applications get access to this information “silently”. In this direction, end-users and even organizations lack the appropriate tools for accomplishing <b>software</b> <b>privacy</b> risk assessment. For instance, current risk management methodologies (e. g., CRAMM) are basically not considering software “features” in their risk models. While beneficial, these approaches in their current form can be used only for assessing a possible impact in terms of cost, as they do not assess software intrusiveness. So, there is not a way both for end-users and for organizations to use a risk assessment methodology in order to assess mobile applications intrusiveness before application “employment”. In this chapter, we study Android apps’ features that can e used to assess their intrusiveness to end-user’s private sphere, so end-users can be informed about possible privacy exposure in the direction of a mobile apps risk assessment methodology. To do so, we introduce a practical and an easily employable approach that does not require access to the apps’ original source code. We evaluate our approach using both goodware and malware. JRC. E. 3 -Cyber and Digital Citizens' Securit...|$|E
40|$|ICSEA is {{a conference}} {{dedicated}} to the advances in Software Engineering practices. It is organized into the following tracks: Advances in fundamentals for software development Advanced mechanisms for software development Advanced design tools for developing software Advanced facilities for accessing software Software performance <b>Software</b> security, <b>privacy,</b> safeness Advances in software testing Specialized software advanced applications Open source software Agile software techniques Software deployment and maintenance Software engineering techniques, metrics, and formalisms Business technology Software economics, adoption, and education Improving productivity in research on software engineerin...|$|R
50|$|Metadata {{removal tool}} or Metadata {{scrubber}} {{is a type}} of <b>privacy</b> <b>software</b> built to protect the privacy of its users by removing potentially privacy-compromising metadata from files before they are shared with others (e.g. by sending them as e-mail attachments or by posting them on the Web).|$|R
25|$|In March 2016, New Hampshire state {{representative}} Keith Ammon {{introduced a bill}} allowing public libraries to run <b>privacy</b> <b>software.</b> The bill specifically referenced Tor. The text was crafted with extensive input from Alison Macrina, {{the director of the}} Library Freedom Project. The bill was passed by the House 268–62.|$|R
40|$|In particular, {{the choice}} between OSS and {{licensed}} (Microsoft-based) software - is subject to fierce international discussion. Whereas open source software is cheaper (free) and more flexible than licensed software, Microsoft-based software is the standard technology around the world. Linux, the most accessible operating system for open source, is gaining ground despite fierce opposition from Microsoft. The documents listed below were accessed during October 2002. What can open source software do for development? [URL] Government advisory body recommends open source, by Alastair Otter in IT Web The South African government is increasing its support for open source developments and has been advised to maximise the output of its ICT budgets by decreasing {{the amount of money}} spent on licensed software. [URL] China plans software to rival Windows, by Will Knight in New Scientist China´s companies and universities are creating a new rival to Windows, based on open source software. This is mainly done to break the monopoly of Microsoft-based systems. [URL] Open IT: Govt to rewrite source code in Linux, by Sudha Nagaraj in The Economic Times (India) Following China´s lead, the Indian government is planning a countrywide drive to promote the open source operating system, Linux, as the ´platform of choice´ instead of ´proprietary´ solutions. [URL] Open source software and ASP, by Ryan Turner, and [URL] Going with open source software, by Marnie Webb, Techsoup What are Linux and open source, and what are the upsides and downsides? Two articles from 2001, but still relevant. [URL] Open source as an alternative for Africa, in the Africa ICT Policy Monitor, an initiative of the Association for Progressive Communications (APC) Explains why open source software {{is the best way to}} manage ICTs for Africa. According to the Free Software Foundation, 'Free software is matter of freedom, not price. ' [URL] Africa set to embrace Linux, by Andre Hartley, IT Web Observations by a Hewlett Packard software solutions consultant for Africa, who states that Linux and open source software can meet all of Africa´s requirements. [URL] Open source software is helping people around the globe escape the crime of <b>software</b> <b>privacy,</b> by Frederick Noronha, Linux Journal Success stories about applications of OSS in Pakistan, Africa, Malaysia, the Philippines, Thailand, and South Asia. [URL] Who said using free software was going to be easy?, by Alastair Otter in IT Web The ideals of the free software movement are becoming increasingly muddy and when supposedly ´open source´ companies talk of software patents, the dream starts to slip away. Responses from Microsoft [URL] Governments push open-source software, by Paul Festa in News. com Governments around the world are discussing the use of OSS. Microsoft is fighting it with full force. What is the history of this debate? [URL] Mircosoft?s free offer to schools, by Duncan Mcleod in Future Company Argues that South Africa should be careful when accepting Microsoft´s offers of free software. If schools want to install Linux or MacOS or Unix, they must be free to do so. [URL] Critics cautious on Microsoft software donations, by Alastair Otter in IT Web South African software experts express concern about the underlying costs of free software donations by Microsoft. [URL] Debate between open source and proprietary software becomes real for developing countries, press release by Bridges. org Comments on Microsoft´s distribution of free software in South Africa. [URL] Looking at gift computers in the mouse, by Duncan Mcleod in AllAfrica. com Advocates of free computer software have expressed concern that Microsoft is engaged in tactics in poor countries that will help it further entrench its dominant position in the industry. [URL] Bill Gates wades into open source debate, by Mike Ricciuti in News. com Microsoft Chairman Bill Gates is concerned about the ´Pac-Man-like nature´ of the license that governs the distribution of open source software. [URL] Microsoft, open source and the third world: A fair contest?, by Jack Bryar in News Forge Microsoft´s free software donations are a sign of a new trade war in Africa and Asia. ´It´s no different to a drug dealer standing outside the gates of a school and handing out drugs free to kids, to get them hooked so they have to pay for the stuff later. ´ [URL] Microsoft, Red Hat set open-source debate, in News. com Microsoft´s Senior Vice President Craig Mundie explains why Microsoft´s vision of ´shared source´ software, where the software giant makes the source code of some of its products available to customers and partners while still maintaining the intellectual property rights, is better than open source. [URL] Gates: GPL will eat your economy, but BSD´s cool, by John Lettice in The Register Essentially, if your country standardises on Linux, then you´re not going to have any IT jobs in your country, says Bill. You can never commercialise your software. The debate on open software for development is growing...|$|E
50|$|IS {{auditing}} considers all {{the potential}} hazards and controls in information systems. It focuses {{on issues like}} operations, data, integrity, <b>software</b> applications, security, <b>privacy,</b> budgets and expenditures, cost control, and productivity. Guidelines are available to assist auditors in their jobs, such as those from Information Systems Audit and Control Association.|$|R
40|$|AbstractIn this paper, the e-JIKEI Network project, {{a project}} for {{creating}} community safety with present day technology, is reviewed. With the e-JIKEI Network, each individual watches around his/her house using cameras as his/her eyes, a computer as his/her brain, and <b>software.</b> For <b>privacy</b> protection, we propose the e-JIKEI with Privacy Protection, in which people who own and manage images (the owner) {{and people who have}} the right to view the images (the viewer) are separated by the encryption of the images. In order to evaluate our concept, social experiments have been performed. The present status and future prospects have been discussed in detail...|$|R
50|$|The {{legality}} of the software used by ISPs to monitor the Internet activity of suspected illegal file sharers has itself been called into question because of concerns over the privacy issues that its use raises. Virgin Media want to use new software called Cview, which monitors activity and compares any downloaded material to a database of copyrighted material {{in order to determine}} if there has been an infringement. As of 2010 this software was being evaluated for suitability by the European Commission and Ofcom with particular attention to whether the <b>software</b> violates <b>privacy</b> or data protection directives.|$|R
50|$|Collection of device {{fingerprints}} from web clients (browser software) {{relies on}} the availability of JavaScript or similar client-side scripting language for the harvesting of a suitably large number of parameters. Two classes of users with limited client-side scripting are those with mobile devices and those running <b>privacy</b> <b>software</b> or browser extensions which block ads and trackers.|$|R
50|$|In March 2016, New Hampshire state {{representative}} Keith Ammon {{introduced a bill}} allowing public libraries to run <b>privacy</b> <b>software</b> such as Tor which specifically referenced Tor itself. The bill was crafted with extensive input from Library Freedom director Alison Macrina, and was {{the direct result of}} the Kilton Public Library imbroglio. The bill was passed by the House 268-62.|$|R
40|$|We {{describe}} SocialCircuits, {{a platform}} capable of measuring the face-to-face and phone-based communication network of a realworld community. This platform uses commodity mobile phones to measure social ties between individuals, and uses {{long and short}} term surveys to measure the shifts in individual habits, opinions, health, and friendships influenced by those ties. We also describe the flagship experiment using this platform, a year-long study of an entire university undergraduate dormitory. Lastly, we discuss {{some of the key}} challenges we met in building and deploying the platform, including mobile phone hardware and <b>software</b> selection, <b>privacy</b> considerations, community selection and recruitment, and techniques for minimizing data loss...|$|R
50|$|TRL {{researchers}} {{are responsible for}} numerous breakthroughs in sciences and engineering. The researchers have presented multiple papers at international conferences, and published numerous papers in international journals. They have {{also contributed to the}} products and services of IBM, and patent filings. TRL conducts research in microdevices, system <b>software,</b> security and <b>privacy,</b> analytics and optimization, human computer interaction, embedded systems, and services sciences.|$|R
40|$|<b>Software</b> {{security}} and <b>privacy</b> issues regularly grab headlines amid fears of identity theft, data breaches, and threats to security. Policymakers have {{responded with a}} variety of approaches to combat such risk. Suggested measures include promulgation of strict rules, enactment of open-ended standards, and, at times, abstention in favor of allowing market forces to intervene. This Note lays out the basis for understanding how both policymakers and engineers should proceed in an increasingly software-dependent society. After explaining what distinguishes software-based systems from other objects of regulation, this Note argues that policymakers should pursue standards-based approaches to regulating <b>software</b> {{security and}} <b>privacy.</b> Although engineers may be more comfortable dealing with strict rules, this Note explains why both policymakers and engineers benefit from pursuing standards over rules. The nature of software development prevents engineers from ever guaranteeing security and privacy, but with an effective regulatory standards framework complemented by engineers 2 ̆ 7 technical expertise, heightened security, and privacy protections can benefit society...|$|R
40|$|User {{interface}} designers frequently {{face the challenge}} of making software configuration options accessible to users. In this paper I use my experience designing the interface for a Platform for Privacy Preferences (P 3 P) user agent as a case study to highlight some of the challenges {{interface designers}} face when developing configuration options for security and <b>privacy</b> <b>software.</b> In addition, I discuss several approaches to addressing these challenges...|$|R
5000|$|The basic {{ideas can}} be found in A Cypherpunk's Manifesto (Eric Hughes, 1993): [...] "Privacy is {{necessary}} for an open society in the electronic age. ... We cannot expect governments, corporations, or other large, faceless organizations to grant us privacy ... We must defend our own privacy if we expect to have any. ... Cypherpunks write code. We know that someone has to write <b>software</b> to defend <b>privacy,</b> and ... we're going to write it." ...|$|R
40|$|SocialCircuits is a {{platform}} capable of measuring the face-to-face and phone-based communication network of a real-world community. This platform uses commodity mobile phones to measure social ties between individuals, and uses long- and short-term surveys {{to measure the}} shifts in individual habits, opinions, health, and friendships influenced by those ties. The flagship experiment using this platform is a yearlong study of an MIT undergraduate dormitory. Some of the key challenges met in building and deploying the platform were mobile phone hardware and <b>software</b> selection, <b>privacy</b> considerations, community selection and recruitment, and minimizing data loss. by lolanthe Chronis. Thesis (M. Eng.) [...] Massachusetts Institute of Technology, Dept. of Electrical Engineering and Computer Science, 2010. Cataloged from PDF version of thesis. Includes bibliographical references (p. 47) ...|$|R
