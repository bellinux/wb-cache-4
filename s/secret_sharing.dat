2220|1359|Public
25|$|<b>Secret</b> <b>sharing</b> schemes are {{important}} in cloud computing environments. Thus a key can be distributed over many servers by a threshold <b>secret</b> <b>sharing</b> mechanism. The key is then reconstructed when needed. <b>Secret</b> <b>sharing</b> has also been suggested for sensor networks where the links are liable to be tapped by sending the data in shares which makes {{the task of the}} eavesdropper harder. The security in such environments can be made greater by continuous changing of the way the shares are constructed.|$|E
25|$|<b>Secret</b> <b>sharing</b> is an {{important}} primitive in several protocols for secure multiparty computation.|$|E
25|$|<b>Secret</b> <b>sharing</b> {{was invented}} {{independently}} by Adi Shamir and George Blakley in 1979.|$|E
30|$|In principle, {{encoding}} is {{the process}} of generating <b>secret</b> <b>shares</b> by integrating binary value of the watermark and digital audio’s features, while decoding refers to process of revealing the original watermark message by stacking those <b>secret</b> <b>shares.</b>|$|R
5000|$|Magical Diary: <b>Secrets</b> <b>Sharing</b> / ともだち作ろう！魔法のこうかん日記 (2013/07/03) ...|$|R
5000|$|Our {{polynomial}} {{to produce}} <b>secret</b> <b>shares</b> (points) is therefore: ...|$|R
25|$|For large secrets, {{it may be}} more {{efficient}} to encrypt the secret and then distribute the key using <b>secret</b> <b>sharing.</b>|$|E
25|$|A secure <b>secret</b> <b>sharing</b> scheme {{distributes}} shares so {{that anyone}} {{with fewer than}} t shares has no extra information about the secret than someone with 0 shares.|$|E
25|$|<b>Secret</b> <b>sharing</b> (also called secret splitting) {{consists}} of methods for distributing a secret amongst {{a group of}} participants, each of whom is allocated {{a share of the}} secret. The secret can be reconstructed only when a sufficient number of shares, of possibly different types, are combined together; individual shares are of no use on their own. A <b>secret</b> <b>sharing</b> scheme is perfect if every collection of participants that does not meet the criteria for obtaining the secret, has no additional knowledge of what the secret is than does an individual with no share.|$|E
5000|$|Keyringer, {{a command}} line tool to encrypt <b>secrets</b> <b>shared</b> through Git ...|$|R
30|$|Second, {{although}} efficient {{update of}} the <b>secret</b> <b>shares</b> in all CA nodes is not trivial, some schemes have been proposed.|$|R
40|$|Abstract. We {{show how}} to {{effectively}} convert a secret-shared bit b over a prime field to another field. If initially given a random replicated <b>secret</b> <b>share</b> this conversion {{can be done by}} the cost of revealing one <b>secret</b> <b>shared</b> value. By using a pseudo-random function it is possible to convert arbitrary many bit values from one initial random replicated share. Furthermore, we generalize the conversion to handle general values of a bounded size. ...|$|R
25|$|Some {{widely known}} cryptosystems include RSA encryption, Schnorr signature, El-Gamal encryption, PGP, etc. More complex cryptosystems include {{electronic}} cash systems, signcryption systems, etc. Some more 'theoretical' cryptosystems include interactive proof systems, (like zero-knowledge proofs), systems for <b>secret</b> <b>sharing,</b> etc.|$|E
25|$|<b>Secret</b> <b>sharing</b> (also called secret splitting) {{refers to}} methods for distributing a secret amongst {{a group of}} participants, each of whom is {{allocated}} {{a share of the}} secret. The secret can be reconstructed only when a sufficient number, of possibly different types, of shares are combined together; individual shares are of no use on their own.|$|E
25|$|In {{one type}} of <b>secret</b> <b>sharing</b> scheme there is one dealer and n players. The dealer gives shares of a secret to the players, but only when {{specific}} conditions are fulfilled will the players be able to reconstruct the secret. The dealer accomplishes this by giving each player a share {{in such a way}} that any group of t (for threshold) or more players can together reconstruct the secret but no group of fewer than t players can. Such a system is called a (t,n)-threshold scheme.|$|E
3000|$|CA computes a <b>secret</b> <b>share</b> key {{for group}} {{communication}} and broadcasts through secured channel {{to the group}} members as K [...]...|$|R
50|$|This {{method is}} based on a device being able to prove that it holds a <b>secret</b> <b>shared</b> with other devices. One device authenticates another by issuing a random {{challenge}} that is responded to by modifying it with the <b>shared</b> <b>secrets</b> and multiple hashings.|$|R
40|$|Many {{distributed}} protocols {{require the}} participants to have <b>secret</b> <b>shares</b> of an RSA modulus in order to perform distributed cryptographic computations. Until recently, a trusted party was required to generate and distribute these <b>secret</b> <b>shares</b> {{before the start of}} the protocol. Recently, Boneh and Franklin introduced a protocol whereby participants could themselves generate the <b>secret</b> <b>shares</b> without revealing any information about their shares to each other. We experimentally evaluate the performance of their protocol and we recommend good choices for certain parameters of the protocol. 1 Introduction Public key cryptography has proven extremely useful for providing security in distributed protocols. The RSA cryptosystem has interesting number-theoretic properties that make it suitable for certain kinds of distributed applications. In particular, many distributed protocols require {{the participants to}} have secret "shares" of an RSA modulus in order to perform distributed cryptographic c [...] ...|$|R
25|$|A <b>secret</b> <b>sharing</b> scheme can {{secure a}} secret over {{multiple}} servers and remain recoverable despite multiple server failures. The dealer may act as several distinct participants, distributing the shares among the participants. Each share may be stored {{on a different}} server, but the dealer can recover the secret even if several servers break down {{as long as they}} can recover at least t shares; however, crackers that break into one server would still not know the secret as long as fewer than t shares are stored on each server.|$|E
25|$|The {{difficulty}} lies {{in creating}} schemes {{that are still}} secure, but do not require all n shares. For example, imagine that the Board of Directors of a company would like to protect their secret formula. The {{president of the company}} should be able to access the formula when needed, but in an emergency any 3 of the 12 board members would be able to unlock the secret formula together. This can be accomplished by a <b>secret</b> <b>sharing</b> scheme with t = 3 and n = 15, where 3 shares are given to the president, and 1 is given to each board member.|$|E
25|$|In {{one type}} of <b>secret</b> <b>sharing</b> scheme there is one dealer and n players. The dealer gives {{a share of the}} secret to the players, but only when {{specific}} conditions are fulfilled will the players be able to reconstruct the secret from their shares. The dealer accomplishes this by giving each player a share {{in such a way that}} any group of t (for threshold) or more players can together reconstruct the secret but no group of fewer than t players can. Such a system is called a -threshold scheme (sometimes it is written as an -threshold scheme).|$|E
5000|$|... #Caption: Each <b>secret</b> <b>share</b> is a plane, and {{the secret}} is {{the point at which}} three shares intersect. Two shares yield only a line intersection.|$|R
6000|$|... 'Tis true bright hours {{together}} told, And blissful {{dreams in}} <b>secret</b> <b>shared,</b> Serene or solemn, gay or bold, Still last in fancy unimpaired. [...] Keble.|$|R
40|$|The Visual {{cryptography}} scheme (VCS) is {{a secure}} method that encrypts a secret image by breaking it into shares. A distinctive property of VCS {{is that one}} can visually decode the secret image by superimposing shares without computation. The project presents an approach for embedding visual cryptographically generated image shares in the host images to provide authentication for the VC shares and makes these <b>secret</b> <b>shares</b> invisible by embedding them into host images. The <b>secret</b> <b>shares</b> generated from VC encryption are watermarked into some host images using digital watermarking. Digital watermarking is used for providing the double security of image shares. The share is embedded into the host image in frequency domain using Discrete Cosine Transform (DCT). In frequency domain, the obtained marked image must be less distorted {{when compared to the}} original image. Thus <b>secret</b> <b>shares</b> are not available for any alteration by the adversaries who try to create fake shares. Every pixel of the binary VC share is invisibly embedded into the individual block of the host image. The process of watermark extraction necessitates only the watermarked image and it does not require the original host image. The scheme provides more secure and meaningful <b>secret</b> <b>shares</b> that are robust against a number of attacks like blurring, sharpening, motion blurring etc...|$|R
2500|$|Software {{products}} from , , [...] and [...] and hardware {{products from}} [...] use <b>secret</b> <b>sharing.</b> There are libraries for <b>secret</b> <b>sharing</b> in several programming languages.|$|E
2500|$|One {{of these}} techniques, known as <b>secret</b> <b>sharing</b> made short, {{combines}} Rabin's information dispersal algorithm (IDA) with Shamir's <b>secret</b> <b>sharing.</b> [...] Data is first encrypted with a randomly generated key, using a symmetric encryption algorithm. [...] Next this data is split into N pieces using Rabin's IDA. [...] This IDA is configured with a threshold, {{in a manner}} similar to <b>secret</b> <b>sharing</b> schemes, but unlike <b>secret</b> <b>sharing</b> schemes the size of the resulting data grows by a factor of (number of fragments / threshold). [...] For example, if the threshold were 10, and the number of IDA-produced fragments were 15, the total size of all the fragments would be (15/10) or 1.5 times the size of the original input. [...] In this case, this scheme is 10 times more efficient than if Shamir's scheme had been applied directly on the data. [...] The final step in <b>secret</b> <b>sharing</b> made short is to use Shamir <b>secret</b> <b>sharing</b> to produce shares of the randomly generated symmetric key (which is typically on the order of 16–32 bytes) and then give one share and one fragment to each shareholder.|$|E
2500|$|The Chinese {{remainder}} theorem {{can also}} be used in <b>secret</b> <b>sharing,</b> for it provides us with a method to uniquely determine a number S modulo k many pairwise coprime integers , given that [...] There are two <b>secret</b> <b>sharing</b> schemes that make use of the Chinese Remainder Theorem, Mignotte's and Asmuth-Bloom's Schemes. They are threshold <b>secret</b> <b>sharing</b> schemes, in which the shares are generated by reduction modulo the integers , and the secret is recovered by essentially solving the system of congruences using the Chinese Remainder Theorem.|$|E
40|$|Abstract — Visual {{cryptography}} (VC) is {{a method}} of encrypting a <b>secret</b> image into <b>shares</b> such that stacking {{a sufficient number of}} <b>shares</b> reveals the <b>secret</b> image. <b>Shares</b> are usually presented in transparencies. Each participant holds a transparency. In this paper, we studied the cheating problem in VC by malicious adversaries. We considered the attacks of malicious adversaries who may deviate from the scheme and create fake shares, whose stacking reveals a different Secret image. This paper proposes a solution to this Cheating problem by an Invisible and Blind Watermarking scheme. This scheme not only provides Authentication for the VC shares but also makes these <b>secret</b> <b>shares</b> invisible by embedding them into not so significant Host images. Thus <b>secret</b> <b>shares</b> are not available for any alterations by the adversaries who try to create fake shares. In the propose...|$|R
3000|$|... (1 ≤l≤n), a <b>secret</b> <b>share</b> of the {{decryption}} key is computed as D_leaf_l = q_leaf_l (0) · t_i^- 1 where i is the attribute associated to leaf [...]...|$|R
40|$|In this paper, {{we propose}} an {{architecture}} for providing distributed Certificate Authority (CA) service in Mobile Ad Hoc Networks (MANET), based on threshold cryptography. We have two major contributions: 1) we {{make use of}} the cluster structure to provide CA service, and design a scheme for locating CA server nodes in MANET; 2) we provide a proactive <b>secret</b> <b>share</b> update protocol, which periodically updates CA <b>secret</b> <b>shares</b> with low system overhead. Compared with existing approaches, our CA architecture provides faster CA services to user nodes at reduced system overhead. © 2005 IEEE. published_or_final_versio...|$|R
2500|$|Common to all {{unconditionally secure}} <b>secret</b> <b>sharing</b> schemes, there are limitations: ...|$|E
2500|$|Patent {{for use of}} <b>secret</b> <b>sharing</b> for {{recovering}} PGP (and other?) pass phrases ...|$|E
2500|$|... t = 1 <b>secret</b> <b>sharing</b> is trivial. The secret {{can simply}} be {{distributed}} to all n participants.|$|E
3000|$|... b. Construct a <b>secret</b> <b>share</b> block S(x) by {{utilizing}} a codebook C {{as described in}} (3) and (4), feature type t, and a corresponding watermark pixel value w(i, j).|$|R
50|$|Surespot uses 256 bit AES-GCM {{encryption}} using keys {{created with}} 521 bit ECDH. It is a Public-key cryptography system with {{public and private}} keys {{in order to obtain}} a <b>shared</b> <b>secret.</b> The <b>shared</b> <b>secret</b> is used to exchange information securely.|$|R
40|$|The Secure message {{authentication}} {{is an important}} part of quantum cryptography. The eavesdropper gains partial knowledge on the key in cryptography. Partial knowledge has little result on the authentication part of the system. Using BB 84 protocol, the sender will generate the random number, the random number sent as a <b>secret</b> <b>shared</b> key. The <b>secret</b> <b>shared</b> key also called as “check bits”. The communication parties are getting together and then they form as a single group depending upon the category. It is proposed to share theinformation among the communicating parties using quantum ryptography without any attack...|$|R
