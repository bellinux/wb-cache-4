44|355|Public
50|$|Since an {{insertion}} into a K-D-B-tree {{may require}} the splitting of a {{page in the}} case of a page overflow, it is important to first define the <b>splitting</b> <b>operation.</b>|$|E
5000|$|Split leather is leather {{created from}} the fibrous {{part of the}} hide left once the top-grain of the rawhide has been {{separated}} from the hide. During the <b>splitting</b> <b>operation,</b> the top-grain and drop split are separated. The drop split can be further split (thickness allowing) into a middle split and a flesh split. In very thick hides, the middle split can be separated into multiple layers until the thickness prevents further splitting. Split leather then has an artificial layer applied {{to the surface of}} the split and is embossed with a leather grain (bycast leather). Splits are also used to create suede. The strongest suedes are usually made from grain splits (that have the grain completely removed) or from the flesh split that has been shaved to the correct thickness. Suede is [...] "fuzzy" [...] on both sides. Manufacturers use a variety of techniques to make suede from full-grain. A reversed suede is a grained leather that has been designed into the leather article with the grain facing away from the visible surface. It is not considered a true suede.|$|E
3000|$|Then, we {{analyze the}} {{computational}} complexity of FICTC. For a given G(V,E) with n nodes and m links, {{we use a}} adjacency list to store the network graph G(V,E). Consider the gateway node already collects all node information. FICTC mainly includes procedures of <b>splitting</b> <b>operation</b> and seeking the k [...]...|$|E
5000|$|The ideal {{solution}} for all volume production demands, via multiple robots and <b>split</b> <b>operations</b> ...|$|R
5000|$|Combine {{performs}} boolean and <b>splitting</b> <b>operations,</b> such as merging {{parts and}} subtracting parts from each other.|$|R
5000|$|Use the <b>split</b> <b>operation</b> to <b>split</b> {{the tree}} at {{the value of}} x to two sub-trees: S and T.|$|R
40|$|We {{present a}} novel {{algorithm}} for efficiently splitting deformable solids along arbitrary piecewise linear crack surfaces in cutting and fracture simulations. We propose {{the use of}} a meshless discretization of the deformation field, and a novel visibility graph for fast update of shape functions in meshless discretizations. We decompose the <b>splitting</b> <b>operation</b> into a first step where we synthesize crack surfaces as triangle meshes, and a second step where we use the newly synthesized surfaces to update the visibility graph, and thus the meshless discretization of the deformation field. The separation of the <b>splitting</b> <b>operation</b> into two steps, along with our novel visibility graph, enables high flexibility and control over the splitting trajectories, provides fast dynamic update of the meshless discretization, and facilitates an easy implementation, making our algorithm scalable, versatile, and suitable for a large range of applications, from computer animation to interactive medical simulation. 1...|$|E
40|$|Motivated by the {{phenomenon}} of contextuality in quantum physics we study a particular family of proofs of the Kochen-Specker theorem. A proof is represented by a pair consisting of a hypergraph where each vertex has even degree, called an Eulerian hypergraph, and a labeling of its vertices. If a hypergraph admits a labeling constituting a proof, we say it is magic. We are interested in determining whether a given hypergraph is magic. Working with the duals of Eulerian hypergraphs, we develop the parity minor relation, which allows us to establish a concept of minimality for the magic property. We introduce a <b>splitting</b> <b>operation</b> to show that certain hypergraphs are not magic. We combine the parity minor relation and the <b>splitting</b> <b>operation</b> in order to search for minimally magic hypergraphs whose duals are grafts, hypergraphs with one edge of size four and all other edges of size two...|$|E
40|$|Abstract—Unlike {{database}} tables, B þ-tree indexes are hierarchical {{and their}} structures {{change over time}} by node splitting operations, which may propagate changes from one node to another. The node <b>splitting</b> <b>operation</b> is difficult for the basic In-Page Logging (IPL) scheme to deal with, because it involves more than one node that may be stored separately in different flash blocks. In this paper, w...|$|E
40|$|Abstract A novel {{progressive}} geometry compression {{scheme is}} presented in the paper. In this scheme a mesh is represented as a base mesh followed by some groups of vertex <b>split</b> <b>operations</b> using an improved simplification method, in which each level of the mesh can be refined into the next level by carrying out a group of vertex <b>split</b> <b>operations</b> in any order. Consequently, the PM representation can be effectively encoded by permuting the vertex <b>split</b> <b>operations</b> in each group. Meanwhile, a geometry predicator using Laplacian operator is designed to predict each new vertex position using its neighbors. The correction is quantized and encoded using Huffman coding scheme. Experimental results show that our algorithm obtains higher compression ratios than the previous work. It is very suitable for progressive transmission of geometry models over Internet...|$|R
50|$|Proof outline: This {{requires}} maintaining {{additional information}} about the maximum weight non cluster path edge in a cluster under the Merge and <b>Split</b> <b>operations.</b>|$|R
5000|$|A {{description}} of the management practices and barriers established to prevent commingling of organic and non-organic animals in <b>split</b> <b>operations</b> with proper paperwork and list of substances used ...|$|R
40|$|This article {{communicates}} {{findings from}} a year-long constructivist teaching experiment {{about the relationship}} between four sixth-grade students ’ multiplicative structures and their construction of improper fractions. Students ’ multiplicative structures are the units coordinations that they can take as given prior to activity—i. e., the units coordinations that they have interiorized. This research indicates that the construction of improper fractions requires having interiorized three levels of units. Students who have interiorized only two levels of units may operate with fractions greater than one, but they don’t produce improper fractions. These findings call for a revision in Steffe’s hypothesis (Steffe, L. P. (2002). A new hypothesis concerning children’s fractional knowledge. Journal of Mathematical Behavior, 20, 267 – 307) that upon the construction of the <b>splitting</b> <b>operation,</b> students ’ fractional schemes can be regarded as essentially including improper fractions. While the <b>splitting</b> <b>operation</b> seems crucial in the construction of improper fractions, it is not necessarily accompanied by the interiorization of three levels of units...|$|E
40|$|We {{present a}} {{broadband}} single-mode bi-conical microfiber coupler (MFC) with a specifically designed transition region that effectively suppresses any higher-order modes {{present at the}} input fiber and provides efficient power splitting into the fundamental mode at the two output ports. As a practical example, single-mode 3 dB <b>splitting</b> <b>operation</b> over a broad spectral window (400 ~ 1700 nm) was demonstrated for a very thin taper waist (~ 1. 5 µm) MFC made from conventional telecom optical fibers...|$|E
40|$|International audienceRatschan has {{recently}} proposed a general framework for first-order formulas whose atoms are numerical constraints. It extends {{the notion of}} consistency to logical terms, but little is done {{with respect to the}} <b>splitting</b> <b>operation.</b> In this paper, we explore the potential of splitting heuristics that exploit the logical structure of disjunctive numerical constraint problems in order to simplify the problem along the search. First experiments on CNF formulas show that interesting solving time gains can be achieved by choosing the right splitting points...|$|E
3000|$|Let W denote a B-DMC with input u∈ 0, 1, output y ∈Y, and {{transition}} probabilities W(y|u). By recursively applying channel combining and <b>splitting</b> <b>operations</b> on N (N = 2 [...]...|$|R
30|$|Note {{that the}} above {{operation}} rules of Definitions 6 and 7 use ⊳ ‘locally’, {{by focusing on}} the coalitions that take part and result from the merge <b>operation</b> and <b>split</b> <b>operation.</b> Algorithm 2 summarizes the procedure that uses the merge-split rule to obtain the stable partition structure of G^l. Due to Property 1, the conduction of the split rule in Algorithm 2 can be transformed into the merge rule, if the coalition remains to be splitted is treated as a smaller grand coalition. The <b>split</b> <b>operation</b> is equivalent to the merge operation in the smaller grand coalition as long as we treat the effect of the players beyond the smaller grand coalition as a whole.|$|R
40|$|A {{progressive}} curve representation {{based on}} reverse subdivision is introduced. Multiresolution structures for common subdivision rules that have both banded reconstruction and decomposition filters are produced. Multiresolution filters are usually {{applied to the}} whole curve uniformly, while progressive curves are based on collapse and <b>split</b> <b>operations</b> {{that can be applied}} locally on any portion of a curve. In this work, firstly, small width multiresolution filters are constructed based on the reverse of the cubic B-spline subdivision. The collapse and <b>split</b> <b>operations</b> are replaced by a local decomposition and reconstruction process. Second, an efficient algorithm and data structures are presented to allow for the resulting progressive curve. Third, both a user-controlled and an automatic method to select a portion of the curve for reconstruction or decomposition are described. The technique introduced has various applications such as view-dependent rendering, flexible editing and progressive transmission...|$|R
40|$|An {{abstract}} {{context-free grammar}} {{can be viewed}} as a system of polynomial functors. The initial algebra of this functor coincides with its least fixed-point; and this fixed-point can be computed by a method of substitution using Bekìc theorem. By doing so the system of polynomial functors is transformed into a related system of regular functors. We introduce a <b>splitting</b> <b>operation</b> on algebras producing an algebra for the resulting system of regular functors from an algebra of the original system of polynomial functors. This transformation preserves the interpretation function (catamorphism). The end result is a class of (extended) abstract context-free grammars, associated with regular functors. This class seems to be well-adapted to the modular design of domain-specific embedded languages...|$|E
40|$|We {{present an}} {{incremental}} refinement algorithm for approximate compilation of constraint satisfaction models into multivalued decision diagrams (MDDs). The algorithm uses a vertex <b>splitting</b> <b>operation</b> {{that relies on}} detection of equivalent paths in the MDD. Although the algorithm is quite general, it {{can be adapted to}} exploit constraint structure by specializing the path equivalence test to particular constraints. We show how to modify the algorithm in a principled way to obtain an approximate MDD when the exact MDD is too large for practical purposes. This is done by replacing the equivalence test with a constraint-specific measure of distance. We demonstrate the value of the approach for approximate and exact MDD compilation and evaluate its benefits in one of the main MDD application domains, interactive configuration...|$|E
40|$|In this work, {{we present}} a general method for {{approximating}} nonlinear transformations of Gaussian mixture random variables. It is based on transforming the individual Gaussians with the unscented transform. The level of detail is adapted by iteratively splitting those components of the initial mixture that exhibited {{a high degree of}} nonlinearity during transformation. After each <b>splitting</b> <b>operation,</b> the affected components are re-transformed. This procedure gives more accurate results in cases where a Gaussian fit does not well represent the true distribution. Hence, it is of interest in a number of signal processing fields, ranging from nonlinear adaptive filtering to speech feature enhancement. In simulations, the proposed approach achieved a 48 -fold reduction of the approximation error, compared to a single unscented transform...|$|E
50|$|Like most RTUs, {{the group}} began a <b>split</b> <b>operation,</b> with group {{headquarters}} and the 398th Squadron at Marysville, while the 399th Squadron was at Redding Army Air Field, and the 400th moved to Oroville Army Air Field. In January {{the group and}} 398th Squadron joined the 400th at Oroville, but the 399th remained at Redding.|$|R
5000|$|Additional {{primitive}} {{operations have}} been suggested. A common mistake when typing text is transposition of two adjacent characters, formally {{characterized by an}} operation that changes [...] into [...]For the task of correcting OCR output, merge and <b>split</b> <b>operations</b> have been used which replace a single character {{into a pair of}} them or vice versa.|$|R
50|$|The company <b>splits</b> its <b>operations</b> {{into three}} divisions, Radio GB, Radio Ireland and Digital.|$|R
40|$|A nonparametric, hierarchical, {{divisive}} clustering algorithm {{based on}} the mutual nearest neighborhood concept is proposed for classification of large volume of multispectral data indenting minimum memory and computational time. To realise the reduction of memory and computational time requirements, the authors define an area of interest around each pixel to search the required k nearest neighbors necessary for initiating <b>splitting</b> <b>operation.</b> The authors have proposed a modified distance measure, which incorporates the relative position of the pixels together with their feature values {{in order to improve}} the performance of the algorithm and reduce the classification error rate. The algorithm is simple, noniterative and can be successfully applied on any image data. Simulation experiments are conducted to corroborate the efficacy of the proposed methodology in terms of time, space and error rat...|$|E
40|$|Numerical {{constraint}} solving techniques {{operate in a}} branch& prune fashion, using consistency enforcement techniques to prune the search space and splitting operations to explore it. Extensions address disjunctions of constraints as well, but usually in a restrictive case and not fitting well the branch&prune scheme. On the other hand, Ratschan has recently proposed a general framework for first-order formu-las whose atoms are numerical constraints. It extends the notion of consistency to logical terms, but little is done {{with respect to the}} <b>splitting</b> <b>operation.</b> In this paper, we explore the potential of splitting heuristics that exploit the logical structure of disjunctive numerical constraint problems in or-der to simplify the problem along the search. First experi-ments on CNF formulas show that interesting solving time gains can be achieved by choosing the right splitting points...|$|E
40|$|International audienceModel-based {{development}} for embedded system design {{has been used}} to support the increase of system's complexity. Several modeling formalisms are well matched for usage within this area. One of the goals of this work is to contribute to the usage of Petri nets as system specification language within model-based development of embedded systems having MDA proposals as a reference for the development flow. Distributed execution of the Petri net model is achieved through model partitioning into sub-modules. System decomposition is obtained through net <b>splitting</b> <b>operation.</b> Two types of implementation platforms were considered: compliant and non-compliant with zero time delay for communication between modules. Using model-checking techniques, properties associated with the execution of the distributed models in both types of platforms were compared with the execution of the initial (centralized) Petri net model...|$|E
3000|$|It is {{difficult}} to directly describe the complexity of Algorithm 2, because the termination condition of Algorithm 2 depends on the specific state of the small cell network. But we can estimate the complexity of Algorithm 2 in some extreme cases. Since the <b>split</b> <b>operation</b> can {{be treated as a}} special kind of merge operation, we only analyze the complexity of merge operation here. In the worst case where no coalition with size bigger than two is formed, the potential number of possible coalitions that should be considered is ζ _ 1 = 2 ^N_l-N_l - 1 =∑ _k= 2 ^N_l< p m a t r i x >. While in the best case where the grand coalition is formed, the potential number of possible coalitions that should be considered is ζ _ 2 =N_l - 1. So for each merge or <b>split</b> <b>operation,</b> the number of coalitions that should be considered is between ζ [...]...|$|R
40|$|A data {{structure}} is presented for the Mergeable Dictionary abstract data type, which sup-ports the following operations on {{a collection of}} disjoint sets of totally ordered data: Predecessor-Search, Split and Merge. While Predecessor-Search and Split work in the normal way, the novel operation is Merge. While in a typical mergeable dictionary (e. g. 2 - 4 Trees), the Merge operation can only be performed on sets that span disjoint intervals in keyspace, the structure here has no such limitation, and permits the merging of arbitrarily interleaved sets. Tarjan and Brown present a {{data structure}} [4] which can handle arbitrary Merge operations in O(log n) amortized time per operation if the set of operations is restricted to exclude the <b>Split</b> <b>operation.</b> In the presence of <b>Split</b> <b>operations,</b> the amortized time complexity of their structure becomes Ω(n). A data structure which supports both <b>Split</b> and Merge <b>operations</b> in O(log 2 n) amortized time per operation was given by Farach and Thorup [6]. In contrast, our data structure supports all <b>operations,</b> including <b>Split</b> and Merge, in O(log n) amortized time, thus showing that interleaved Merge operations can be supported {{at no additional cost}} vis-à-vis disjoint Merge operations. 0 a...|$|R
40|$|AbstractLet G=(V,E) be {{a simple}} graph. The NON-PLANAR DELETION problem {{consists}} in finding a smallest subset E′⊂E such that H=(V,E⧹E′) is a planar graph. The SPLITTING NUMBER problem consists in finding the smallest integer k⩾ 0, such that a planar graph H can be defined from G by k vertex <b>splitting</b> <b>operations.</b> We establish the Max SNP-hardness of SPLITTING NUMBER and NON-PLANAR DELETION problems for cubic graphs...|$|R
40|$|Abstract. Naïve-Bayes {{classifiers}} (NB) support incremental learning. However, {{the lack}} of effective incremental discretization methods has been hindering NB’s incremental learning in face of quantitative data. This problem is further {{compounded by the fact}} that quantitative data are everywhere, from temperature readings to share prices. In this paper, we present a novel incremental discretization method for NB, incremental flexible frequency discretization (IFFD). IFFD discretizes values of a quantitative attribute into a sequence of intervals of flexible sizes. It allows online insertion and <b>splitting</b> <b>operation</b> on intervals. Theoretical analysis and experimental test are conducted to compare IFFD with alternative methods. Empirical evidence suggests that IFFD is efficient and effective. NB coupled with IFFD achieves a rapport between high learning efficiency and high classification accuracy in the context of incremental learning. ...|$|E
40|$|Recent {{studies of}} high-quality, highresolution traffic have {{demonstrated}} these traffics exhibit self-similarity, which {{has implications for}} design, control and analysis of high-speed networks. Merging and splitting are basic networking operations and should be studied before we analyze {{the performance of the}} whole high speed networks. In this paper, we give the necessary and sufficient conditions for that merging of self-similar traffic streams also results in a self-similar stream, and show that splitting traffic streams of the self-similar stream are still self-similar streams by the independent <b>splitting</b> <b>operation.</b> 1. Introduction Recent traffic measurement studies at Bellcore and elsewhere have indicated the presence of features such as self-similarity, long range dependence, and heavy-tailed distributions. These studies include a collection and analysis of hundreds of millions of packets over several Ethernet LANs in a R&D environment during a 4 -years period[1], an analysis of ab [...] ...|$|E
40|$|Abstract. This {{paper is}} a {{starting}} point for a possible research line to study the theoretical aspects of the answer function for a master-slave system based on semantic schemas. We define the concept of ω-labeled tree as a binary, ordered and labeled tree with several features concerning the labels and order between the direct descendants of a node. The labeling operation of the nodes is guided by the mapping ω which defines the <b>splitting</b> <b>operation</b> for labels. An embedding operation of an ω-tree into another ω-tree is introduced. We prove that this operation is performed by means of an injective mapping. Based on this operation some binary relation between ω-labeled trees is defined. This is a reflexive and transitive relation, but is not antisymmetric. All the results proved in this paper and in [15] constitute the algebraic background of a forthcoming paper as we mention in the last section...|$|E
5000|$|In January 1943 {{the group}} and the squadrons at Drew Field moved to Sarasota Army Air Field, where the {{following}} month the group added a fourth squadron, the 440th Fighter Squadron. In August, the 440th joined the 304th at Pinellas and the group maintained a <b>split</b> <b>operation</b> at Sarasota and Pinellas until it was disbanded. [...] The group transitioned to North American P-51 Mustangs in early 1944.|$|R
40|$|We sudy the {{creation}} of nonlocal states with ultracold atoms trapped in an optical lattice. We show that these states violate Bell inequality by measuring one- and two-body correlations. Our scheme only requires beam <b>splitting</b> <b>operations</b> and global phase shifts, and can be realized within the current technology, employing single-site addressing. This proposal paves the way to study multipartite nonlocality and entanglement in ultracold atomic systems. Comment: 5 pages, 3 figure...|$|R
40|$|Usually, the {{segmentation}} algorithms {{implementing the}} <b>split</b> and merge <b>operations</b> {{are restricted to}} a split stage followed by a merge stage. In this paper, we present a new split and merge algorithm combining alternatively <b>split</b> and merge <b>operations</b> at each recursive step. This algorithm {{is based on a}} data structure called discrete map [BD 96 a]. This data structure provides an efficient framework to implement <b>split</b> and merge <b>operations...</b>|$|R
