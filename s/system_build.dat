121|3906|Public
2500|$|After Alan and Dale both {{graduated}} from college they formed an aircraft company in 1984, which they named [...] "Cirrus Design" [...] (now known as Cirrus Aircraft) in remembrance of a summer drive the brothers had {{a few years back}} where they saw cirrus clouds on the horizon and wished that they were flying. Once they formed the company, the Klapmeiers called upon Alan's old college roommate, Jeff Viken, to help out with their new design: the VK-30 (VK standing for Viken-Klapmeier). Viken was an aeronautical engineer who eventually married another aeronautical engineer, Sally Viken, and the unpaid Cirrus staff grew to four volunteers (with occasional help from the Klapmeiers' high school friend, Scott Ellenberger). The Cirrus VK-30 was a four to five-seat composite pusher with conventional wings and tail. Alan and Dale moved into the family farmhouse to be closer to the project, and began work on the airplane {{in the basement of the}} barn [...] "down where the cows were". They all pitched in with the designing and balanced that with hands-on labor. Jeff designed the airfoil while Sally designed the flap system. The four of them would finish designing a part or a <b>system,</b> <b>build</b> it, and return to designing. Experimental aircraft innovator Moulton Taylor gave the Klapmeiers and Vikens technical advice surrounding the VK-30.|$|E
2500|$|Majid Khadduri {{writes that}} under the Arabian pre-Islamic law of status, women had {{virtually}} no rights. Sharia (Islamic law), however, provided women {{with a number of}} rights. John Esposito states that the reforms affected marriage, divorce, and inheritance. Women were not accorded with such legal status in other cultures, including the West, until centuries later. The Oxford Dictionary of Islam states that the general improvement of the status of Arab women included prohibition of female infanticide, and recognizing women's full personhood. Gerhard Endress states: [...] "The social <b>system</b> ... <b>build</b> up a new system of marriage, family and inheritance; this system treated women as an individual too and guaranteed social security to her as well as to her children. Legally controlled polygamy was an important advance on the various loosely defined arrangements which had previously been both possible and current; it was only by this provision (backed up by severe punishment for adultery), that the family, the core of any sedentary society could be placed on a firm footing." [...] One hadith records that Abu Huraira reported that a person said: Allah's Messenger, who amongst the people is most deserving of my good treatment? He said: Your mother, again your mother, again your mother, then your father, then your nearest relatives according to the order (of nearness).|$|E
5000|$|Interactive <b>System</b> <b>Build</b> {{allows you}} to change the {{distribution}} and create new ISO images.|$|E
5000|$|Rafael Advanced Defense <b>Systems</b> <b>builds</b> and {{installs}} the Rafael Overhead Weapon Station and Trophy active protection system; ...|$|R
5000|$|Ansaldo STS's transit control <b>systems</b> <b>build</b> upon {{traditional}} signaling {{technology for}} a new generation of more advanced systems, i.e.: ...|$|R
50|$|The {{allocation}} {{takes place}} quickly, because the <b>system</b> <b>builds</b> {{the objects in}} advance and readily allocates them from a slab.|$|R
50|$|Anthes, R. A., 1997: Toward a New National Weather Service: An Assessment of the Advanced Weather Interactive Processing System: Operational Test and Evaluation of the First <b>System</b> <b>Build.</b> National Academies Press, Washington.|$|E
50|$|Responding to {{customer}} feedback, Solidoodle released incremental updates to the Solidoodle 3 {{over the first}} year of its operation. Solidoodle released updates to the carriage <b>system,</b> <b>build</b> plate, power supply, build platform, and mother board.|$|E
5000|$|... {{during the}} period of cold war between 1950 - 1989 there were plenty of modern {{fortification}} <b>system</b> <b>build</b> close to Bratislava. Most well known shelters were based in the Carpathian forest.Here are some of them: ...|$|E
50|$|The school {{population}} {{is divided into}} four houses. The school house <b>system</b> <b>builds</b> spirit and maintains tradition. Being part of a house ensures that girls are connected across year levels.|$|R
5000|$|SitePen, a Dojo {{consulting}} company, {{has made}} an Adobe AIR application called [...] "Dojo Toolbox" [...] using Dojo. It includes an API viewer, and a GUI to Dojo's <b>build</b> <b>system.</b> Normally, the <b>build</b> <b>system</b> is run from within Rhino, but in this AIR application the <b>build</b> <b>system</b> can be run from AIR, without use of java.|$|R
2500|$|Meson is {{replacing}} GNU <b>Build</b> <b>System</b> (autotools) as <b>build</b> automation {{tools of}} choice ...|$|R
50|$|Western Railway {{started the}} {{electrification}} of Ujjain -Indore & Dewas -Maksi {{in the period}} of 2007-08 & completed in June 2012. A trial run of a special inspection saloon was also conducted on the newly laid <b>system</b> <b>build</b> at a cost of Rs 70 crore.|$|E
50|$|A major {{redevelopment}} of the Wychall Farm estate, in {{the historic}} parish of Northfield, in the west of Kings Norton, was started in 2001. The previous housing was built using a <b>system</b> <b>build</b> approach that had exceeded its projected life-span. Bromford Housing Association have led the redevelopment.|$|E
50|$|Dr. Lycourgos Kyprianou was {{the former}} {{chairman}} of GlobalSoft and AremisSoft Corp. Also known for his pioneering work on the development of computational feature recognition. The first ever published work on features was for the original boundary representation modelling <b>system,</b> <b>BUILD,</b> and was performed by Dr. Kyprianou.|$|E
50|$|Today, Joel Lamstein leads almost 3,000 {{staff from}} three {{organizations}} in 88 countries, implementing more than 250 projects that strengthen health and educational <b>systems,</b> <b>build</b> community skills and support, and address people’s {{health care and}} literacy needs.|$|R
5000|$|The consortium’s {{response}} <b>system</b> <b>builds</b> on {{the equipment}} proven {{effective in the}} containment of the Deepwater Horizon blowout, including the Helix Fast Response System with the Q4000 intervention vessel and Helix Producer 1 from Helix Energy Solutions Group.|$|R
50|$|As {{with some}} {{previous}} HTC devices, the G2 has a NAND lock that normally prevents overwriting {{the operating system}} unless authorized by the manufacturer. Third parties have overcome this lock and custom operating <b>system</b> <b>builds</b> such as CyanogenMod are available.|$|R
50|$|The first {{published}} work on features {{was for the}} original boundary representation modelling <b>system,</b> <b>BUILD,</b> and was performed by Lyc Kyprianou. Soon other work followed based on different solid representations. Overviews on the work on features {{can be found in}} Shah et al.; Subrahmanyam and Wozny; Salomons et al.|$|E
50|$|Mobile ERP is an Enterprise Resource Planning <b>System</b> <b>build</b> {{from the}} ground up for the mobile user. The main way of using the system is through a mobile device such as a {{smartphone}} or tablet instead of location fixed computer.Just as the ERP the Mobile ERP is a suite of integrated applications—that a company can use to store and manage data from every stage of business.|$|E
50|$|A {{railroad}} junction {{was created}} by the Hearne and Brazos Valley Railway extending 16 miles connecting the International and Great Northern Railways in 1892. A flood of 1899 almost completely destroyed the tracks but were rebuilt in another location. By 1930, the Valley Junction location became part of a 2,500-mile <b>system</b> <b>build</b> by the Missouri Pacific Railway which ran from Valley Junction North through Waco to Fort Worth.|$|E
50|$|<b>Build</b> <b>systems</b> most {{similar to}} Bazel are Pants and Buck. Pants and Buck both aim for similar {{technical}} design goals as Bazel and {{were inspired by}} the Blaze <b>build</b> <b>system</b> used internally at Google. Blaze is also the predecessor to Bazel. Independently developed <b>build</b> <b>systems</b> with similar goals of efficient dependency graph analysis and automated build artifact tracking have been implemented in <b>build</b> <b>systems</b> such as tup.|$|R
5000|$|The Arch <b>Build</b> <b>System</b> (ABS) is a ports-like source {{packaging}} {{system that}} compiles source tarballs into binary packages, which are installed via pacman. The Arch <b>Build</b> <b>System</b> provides a directory tree of shell scripts, called PKGBUILDs, that enable {{any and all}} official Arch packages to be customized and compiled. Rebuilding the entire system using modified compiler flags is also supported by the Arch <b>Build</b> <b>System.</b> The Arch <b>Build</b> <b>System</b> [...] tool {{can be used to}} create custom [...] packages from third-party sources. The resulting packages are also installable and trackable via pacman.|$|R
40|$|We profile {{a system}} for search and {{analysis}} of largescale email archives. The <b>system</b> <b>builds</b> around four facets: Content-based search engine, statistical topic model, automatically inferred social networks and time-series analysis. The facets correspond to the types of information available in email data...|$|R
50|$|Members of the Lone Star College System Board of Trustees {{responded to}} a {{committee}} of citizen leaders in February when they voted unanimously to put a bond referendum in front of area voters for approval on May 11. The citizens’ committee, representing area business, education, government and civic sectors, recommended to the board that the college <b>system</b> <b>build</b> new learning facilities and infrastructure to accommodate the system’s historical growth.|$|E
50|$|Users {{interacting}} with <b>system</b> <b>build</b> up a basic concept/model of computer related objects like files, buttons, dialog box etc. They also acquire a brief {{experience of the}} properties of the objects and how to manipulate the object through its properties. Moreover, they learn how to perform actions on those objects to achieve their computing goals. Hence, a hierarchy of such objects is maintained (which represent the resource of the interface).|$|E
50|$|There {{are some}} key areas {{that must be}} defined in the WBS {{as part of the}} SDLC policy. The {{following}} diagram describes three key areas that will be addressed in the WBS in a manner established by the project manager. The diagram shows coverage spans numerous phases of the SDLC but the associated MCD has a subset of primary mappings to the SDLC phases. For example, Analysis and Design is primarily performed as part of the Acquisition and Implementation Domain and <b>System</b> <b>Build</b> and Prototype is primarily performed as part of delivery and support.|$|E
40|$|Abstract—As the <b>build</b> <b>system,</b> i. e. the {{infrastructure}} that constructs executable deliverables out of source code and other resources, tries {{to catch up}} with the ever-evolving source code base, its size and already significant complexity keep on growing. Recently, this has forced some major software projects to migrate their <b>build</b> <b>systems</b> towards more powerful <b>build</b> <b>system</b> technologies. Since at all times software developers, testers and QA personnel rely on a functional <b>build</b> <b>system</b> to do their job, a <b>build</b> <b>system</b> migration is a risky and possibly costly undertaking, yet no methodology, nor best practices have been devised for it. In order to understand the <b>build</b> <b>system</b> migration process, we empirically studied two failed and two successful attempts of <b>build</b> <b>system</b> migration in two major open source projects, i. e. Linux and KDE, by mining source code repositories and tens of thousands of developer mailing list messages. The major contributions of this paper are: (a) isolating the phases of a common methodology for <b>build</b> <b>system</b> migrations, which is similar to the spiral model for source code development (multiple iterations of a waterfall process); (b) identifying four of the major challenges associated with this methodology: requirements gathering, communication issues, performance vs. complexity of <b>build</b> <b>system</b> code, and effective evaluation of <b>build</b> <b>system</b> prototypes; (c) detailed analysis of the first challenge, i. e., requirements gathering for the new <b>build</b> <b>system,</b> which revealed that the failed migrations did not gather requirements rigorously. Based on our findings, practitioners will be able to make more informed decisions about migrating their <b>build</b> <b>system,</b> potentially saving them time and money. Keywords-build systems; maintenance; restructuring. I...|$|R
50|$|One of {{the goals}} of Bazel is to create a <b>build</b> <b>system</b> where <b>build</b> target inputs and outputs are fully {{specified}} and therefore precisely known to the <b>build</b> <b>system.</b> This allows a more accurate analysis and determination of out-of-date build artifacts in the <b>build</b> <b>system's</b> dependency graph. Making the dependency graph analysis more deterministic leads to potential improvements in build times by avoiding re-executing unnecessary build targets. Build reliability is improved by avoiding errors where build targets might depend on out-of-date input artifacts.|$|R
40|$|Learning-based anomaly {{detection}} <b>systems</b> <b>build</b> {{models of the}} expected behavior of applications by analyzing events that are generated during their normal operation. Once these models have been established, subsequent events are analyzed to identify deviations, given the assumption that anomalies usually represent evidence of an attack...|$|R
50|$|The Tech Report is a {{web site}} {{dedicated}} to covering personal computing technology and culture. The Tech Report specializes in hardware that is most relevant to home users and enthusiasts, and has excelled at analysis with prudent budgets in mind, producing quarterly <b>system</b> <b>build</b> guides at various price points, and occasional price vs. performance scatter plots. Tech Report also has an active online community and a podcast. The website is also a supporter of Stanford's Folding@home and is currently ranked 25th in total production points as of December 22nd 2016.|$|E
50|$|This {{means that}} for NTP the {{rollover}} will be invisible for most running systems, since {{they will have}} the correct time to within a very small tolerance. However, systems that are starting up need to know the date within no more than 68 years. Given the large allowed error, it is not expected that this is too onerous a requirement. One suggested method is to set the clock to no earlier than the <b>system</b> <b>build</b> date or the release date of the current version of the NTP software. Many systems use a battery-powered hardware clock to avoid this problem.|$|E
50|$|In {{the late}} 1930s, the Government {{in the city}} of Los Angeles {{undertook}} a regional transportation planning effort, forming the basis for the first and largest freeway <b>system</b> <b>build</b> in the United States. Lloyd Aldrich was the chief engineer for this project, and had a plan to create a wide expressway and transit system to link downtown Los Angeles with the suburbs. His plan was thoughtful, and it was indicative of using the ideas of the people in an effort to involve them in the very infrastructure they were using. However, his plan was quickly halted because there wasn't enough funding. As a result, the government overtook the project.|$|E
50|$|Ninja {{is a small}} <b>build</b> <b>system</b> with a {{focus on}} speed. It differs from other <b>build</b> <b>systems</b> in two major respects: it is {{designed}} to have its input files generated by a higher-level <b>build</b> <b>system,</b> and it is designed to run builds as fast as possible.|$|R
40|$|A <b>build</b> <b>system</b> {{breathes}} {{life into}} source code, as it config-ures and directs {{the construction of}} a software system from textual source code modules. Surprisingly, build languages and tools have not received considerable attention by aca-demics and practitioners, making current <b>build</b> <b>systems</b> a mysterious and frustrating resource to work with. Our dis-sertation presents a conceptual framework with tool support to recover, analyze and refactor a <b>build</b> <b>system.</b> We demon-strate the applicability of our framework by analyzing the evolution of the Linux kernel <b>build</b> <b>system</b> and the introduc-tion of AOSD technology in five legacy <b>build</b> <b>systems.</b> In all cases, we found that the <b>build</b> <b>system</b> is a complex software system of its own, trying to co-evolve in a synchronized way with the source code while working around shortcomings of the underlying build technology. Based on our findings, we hypothesize four conceptual reasons of co-evolution to guide future {{research in the area of}} <b>build</b> <b>systems.</b> 1...|$|R
40|$|<b>Build</b> <b>systems</b> specify how {{sources are}} {{transformed}} into de-liverables, and hence {{must be carefully}} maintained to ensure that deliverables are assembled correctly. Similar to source code, <b>build</b> <b>systems</b> tend to grow in complexity unless spec-ifications are refactored. This paper describes how clone de-tection can aid in quality assessments that determine if and where build refactoring effort should be applied. We gauge cloning rates in <b>build</b> <b>systems</b> by collecting and analyzing a benchmark comprising 3, 872 <b>build</b> <b>systems.</b> Analysis of the benchmark reveals that: (1) <b>build</b> <b>systems</b> tend to have higher cloning rates than other software artifacts, (2) recent build technologies {{tend to be more}} prone to cloning, espe-cially of configuration details like API dependencies, than older technologies, and (3) <b>build</b> <b>systems</b> that have fewer clones achieve higher levels of reuse via mechanisms not of-fered by build technologies. Our findings aided in refactoring a large industrial <b>build</b> <b>system</b> containing 1. 1 million lines...|$|R
