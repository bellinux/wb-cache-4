1331|10000|Public
5|$|CSG International {{has three}} {{subsidiaries}}: CSG Systems, CSG <b>Systems</b> <b>Software</b> and CSG Services. Its subsidiaries offer products and services, while the parent company, CSG Systems International Inc. is {{listed on the}} NASDAQ stock exchange. As of 2015, its largest clients were Comcast, DISH and Time Warner Cable, representing 24, 14 and 12 percent of its revenues respectively. CSG spends approximately 14 percent of its revenues on research and development. Its revenues are about 77 percent from payment processing and related services, 12 percent from software and the remainder for ongoing technical support. 85 percent of revenues are from the Americas.|$|E
25|$|Esri – a major {{geographic}} information <b>systems</b> <b>software</b> company.|$|E
25|$|In {{computer}} science, finite {{state machines}} {{are widely used}} in modeling of application behavior, design of hardware digital <b>systems,</b> <b>software</b> engineering, compilers, network protocols, {{and the study of}} computation and languages.|$|E
40|$|Abstract—Owing to {{the extreme}} {{parallelism}} and the high component failure rates of tomorrow’s exascale, high-performance computing (HPC) <b>system</b> <b>software</b> {{will need to be}} scalable, failure-resistant, and adaptive for sustained system operation and full system utilizations. Many of the existing HPC <b>system</b> <b>software</b> are still designed around a centralized server paradigm and hence are susceptible to scaling issues and single points of failure. In this article, we explore the design tradeoffs for scalable <b>system</b> <b>software</b> at extreme scales. We propose a general <b>system</b> <b>software</b> taxonomy by deconstructing common HPC <b>system</b> <b>software</b> into their basic components. The taxonomy helps us reason about <b>system</b> <b>software</b> as follows: (1) it gives us a systematic way to architect scalable <b>system</b> <b>software</b> by decomposing them into their basic components; (2) it allows us to categorize <b>system</b> <b>software</b> based on the features of these components, and finally (3) it suggests the configuration space to consider for design evaluation via simulations or real implementations. Further, we evaluate different design choices of a representative <b>system</b> <b>software,</b> i. e. key-value store, through simulations up to millions of nodes. Finally, we show evaluation results of two distributed <b>system</b> <b>software,</b> Slurm++ (a distributed HPC resource manager) and MATRIX (a distributed task execution framework), both developed based on insights from this work. We envision that the results in this article help to lay the foundations of developing next-generation HPC <b>system</b> <b>software</b> for extreme scales...|$|R
50|$|NASA's IV&V Program is {{the lead}} NASA {{organization}} for <b>system</b> <b>software</b> IV&V, and {{is responsible for the}} management of all <b>system</b> <b>software</b> IV&V efforts within the Agency. NASA's IV&V Program's role is to provide value-added service to the Agency's <b>system</b> <b>software</b> projects, primarily by appropriately performing IV&V on <b>system</b> <b>software</b> based on the cost, size, complexity, life span, risk, and consequences of failure.|$|R
50|$|<b>System</b> <b>software</b> is {{computer}} software designed to operate {{and control the}} computer hardware, {{and to provide a}} platform for running application <b>software.</b> <b>System</b> <b>software</b> includes software categories such as operating <b>systems,</b> utility <b>software,</b> device drivers, compilers, and linkers.|$|R
25|$|Loo (2017) studies how {{individual}} {{workers in}} the knowledge economy use their creativity and know-how in the advertising and IT software sectors. It examines this phenomenon across three developed countries of England, Japan and Singapore to observe global perspectives. Specifically, the study uses qualitative data from semi-structured interviews of the related professionals in the roles of creative directing and copywriting (in advertising), and <b>systems</b> <b>software</b> developing and software programme managing.|$|E
25|$|Technician Perspective (Tool Components) - Subcontractors {{work from}} shop plans that specify {{the details of}} parts or subsections. These {{correspond}} to the detailed specifications that are given to programmers who code individual modules without being concerned with the overall context or structure of the system. Alternatively, they could represent the detailed requirements for various commercial-off-the-shelf (COTS), government off-the-shelf (GOTS), or components of modular <b>systems</b> <b>software</b> being procured and implemented rather than built.|$|E
25|$|Along {{with the}} Advanced Wind Turbine Test Facility, West Texas A University {{utilizes}} the Killgore Research Center, which houses the Attebury Honors Program, Ronald E. McNair Scholars Program, and the WTAMU Academic and Research Environmental Health and Safety office, to conduct {{state of the}} art research on blood-borne pathogens, biosafety, and occupational health. WTAMU also teams up with several other institutions like the Alternative Energy Institute, Athletic Training Room and Education Laboratory, Computer Information <b>Systems</b> <b>Software</b> and Network Security Testing Lab, Cooperative Research, Education, and Extension Team (CREET), and Dryland Agricultural Institute to conduct research initiatives.|$|E
50|$|According to {{the license}} information, the Nintendo Switch's <b>system</b> <b>software</b> uses code from the FreeBSD kernel, {{similar to the}} PlayStation 4's <b>system</b> <b>software.</b> A hacker has found system calls {{to be similar to}} those of Nintendo 3DS <b>system</b> <b>software</b> but speculates that those were rewritten.|$|R
40|$|Abstract. We {{describe}} {{the use of}} MPI for writing <b>system</b> <b>software</b> and tools, an area where {{it has not been}} previously applied. By “system software ” we mean collections of tools used for system management and operations. We {{describe the}} common methodologies used for <b>system</b> <b>software</b> development, together with our experiences in implementing three items of <b>system</b> <b>software</b> with MPI. We demonstrate that MPI can bring significant performance and other benefits to <b>system</b> <b>software.</b> ...|$|R
50|$|Unnecessary <b>system</b> <b>software</b> {{should not}} be {{installed}} or configured on a <b>system.</b> <b>Software</b> which is no longer required should be removed completely, if possible.|$|R
25|$|Many {{third party}} {{operating}} {{systems have been}} developed for the C64. As well as the original GEOS, two third-party GEOS-compatible systems have been written: Wheels and GEOS megapatch. Both of these require hardware upgrades to the original C64. Several other operating systems are or have been available, including WiNGS OS, the Unix-like LUnix, operated from a command-line, and the embedded systems OS Contiki, with full GUI. Other less well known OSes include ACE, Asterix, DOS/65 and GeckOS. A version of CP/M was released, but this requires the addition of an external Z80 processor to the expansion bus. Furthermore, the Z80 processor is underclocked to be compatible with the C64's memory bus, so performance is poor compared to other CP/M implementations. C64 CP/M and C128 CP/M both suffer a lack of software; although most commercial CP/M software can run on these <b>systems,</b> <b>software</b> media is incompatible between platforms. The low usage of CP/M on Commodores means that software houses saw no need to invest in mastering versions for the Commodore disk format. The C64 CP/M cartridge is also not compatible with anything except the early 326298 motherboards.|$|E
2500|$|... 2001. The RCS Handbook: Tools for Real-Time Control <b>Systems</b> <b>Software</b> Development. Wiley.|$|E
2500|$|The 412th Test Wing plans, conducts, analyzes, {{and reports}} on all flight and ground testing of aircraft, weapons <b>systems,</b> <b>software</b> and {{components}} {{as well as}} modeling and simulation for the U.S. Air Force. [...] The Wing also oversees the base’s day-to-day operations and provides support for military, federal civilian, and contract personnel assigned to Edwards AFB.|$|E
40|$|Efficient <b>system</b> <b>software</b> {{support is}} {{essential}} for cooperating object applications in order {{to cope with the}} complexity and heterogeneity of typical scenarios in this domain. In this paper, we argue that adaptation capabilities should {{be an integral part of}} such <b>system</b> <b>software</b> and present the TinyCubus framework as one possible solution that provides the features required of <b>system</b> <b>software</b> for cooperating objects...|$|R
50|$|Multiple {{devices to}} perform code {{execution}} exist, {{such as the}} open sourced versions (e.g. PSgroove, PSfreedom). Most of these only work on PlayStation 3 <b>system</b> <b>software</b> v3.41 or lower as PlayStation’s <b>System</b> <b>Software</b> v3.42 patches the mod chip exploit on the console. The creators of PS3 Jailbreak also released PSDowngrade which enables downgrading of PlayStation 3's <b>System</b> <b>Software</b> to v3.41 (Or lower) from v3.42, v3.50, and v3.55.|$|R
5000|$|<b>System</b> <b>{{software}}</b> {{which is}} software that directly operates the computer hardware, to provide basic functionality needed by users and other software, {{and to provide}} a platform for running application <b>software.</b> <b>System</b> <b>software</b> includes: ...|$|R
2500|$|Texas {{is one of}} {{the major}} hubs in the U.S. for {{development}} of computer components, <b>systems,</b> <b>software</b> and information infrastructure. Austin, Dallas, and Houston are the major centers for this industry in Texas. The Austin area is often nicknamed [...] "Silicon Hills" [...] because of the concentration of semiconductor design companies including AMD, Cirrus Logic, Freescale Semiconductor and Silicon Labs. Dell's headquarters is located in the city's suburb, Round Rock, and major offices for Google, Facebook, EA Games, and Apple are also open in the Austin area. Austin is also the home of the Texas Advanced Computing Center at The University of Texas at Austin. Dallas is the birthplace of the integrated circuit.|$|E
2500|$|Microsoft {{had been}} accused of {{carefully}} orchestrating leaks about future versions of MS-DOS in an attempt to create what in the industry is called FUD (fear, uncertainty, and doubt) regarding DR DOS. For example, in October 1990, shortly after the release of DR DOS 5.0, and long before the eventual June 1991 release of MS-DOS 5.0, stories on feature enhancements in MS-DOS started to appear in InfoWorld and PC Week. Brad Silverberg, then Vice President of <b>Systems</b> <b>Software</b> at Microsoft and general manager of its Windows and MS-DOS Business Unit, wrote a forceful letter to PC Week (5 November 1990), denying that Microsoft was engaged in FUD tactics ("to serve our customers better, we decided to be more forthcoming about version 5.0") and denying that Microsoft copied features from DR DOS: ...|$|E
50|$|Information <b>Systems</b> <b>Software.</b>|$|E
40|$|Abstract. Based on the {{technology}} characteristics of CNC <b>system</b> <b>software,</b> the corresponding assurance measures are {{set for the}} reliability in design stage, program implementation stage and software testing stage respectively. CNC <b>system</b> <b>software</b> reliability is improved by modularizing program design and structure program design, code review and program readability, using different reliability testing methods. Finally the purpose is accomplished that the whole reliability of CNC <b>system</b> <b>software</b> is improved...|$|R
50|$|In 1992, Brown joined Sun Microsystems. He helped {{establish}} the process {{used for the}} company's <b>system</b> <b>software</b> architecture, {{and then went on}} to define the application binary interface for Solaris, Sun's principal <b>system</b> <b>software</b> product.|$|R
40|$|<b>System</b> <b>software</b> {{development}} and testing on embedded {{systems can be}} quite difficult and time consuming. In this paper, we propose a cost effective method, namely virtual testing framework {{that can be used}} easily to test the reliability of <b>system</b> <b>software.</b> The framework consists of three layers; virtual platform layer, <b>system</b> <b>software</b> layer, and test environment layer. The virtual platform layer emulates a variety of embedded hardware on which any <b>system</b> <b>software</b> can be run and is used to verify its capability in handling faults injected by the test environment layer. We use the framework to verify the reliability of the file system and FTL (flash translation layer) by injecting faults that may be found in Flash memory. We discuss experimental results that we gained using this framework to gather post-fault behavior of the <b>system</b> <b>software</b> of interest...|$|R
50|$|The National Archives of Australia (NAA) {{published}} the Functional Specifications for Electronic Records Management <b>Systems</b> <b>Software</b> (ERMS), {{and the associated}} Guidelines for Implementing the Functional Specifications for Electronic Records Management <b>Systems</b> <b>Software,</b> as exposure drafts in February 2006.|$|E
5000|$|... #Article: Comparison of {{geographic}} information <b>systems</b> <b>software</b> ...|$|E
50|$|Digital and {{analogue}} prepress <b>systems,</b> <b>software,</b> and consumables.|$|E
40|$|In this grant, we {{examined}} {{a wide range}} of techniques for constructing high-performance con# 12;gurable <b>system</b> <b>software</b> for HPC <b>systems</b> and its application to DOE-relevant problems. Overall, research and development on this project focused in three specifc areas: (1) software frameworks for constructing and deploying con# 12;gurable <b>system</b> <b>software,</b> (2) applcation of these frameworks to HPC-oriented adaptable networking software, (3) performance analysis of HPC <b>system</b> <b>software</b> to understand opportunities for performance optimization...|$|R
25|$|<b>System</b> <b>Software</b> Lab.|$|R
40|$|Run-time {{platform}} variability {{presents a}} number of challenges to the <b>system</b> <b>software</b> in order that a run-time environment is presented to applications that sufficiently masks dynamic platform variability (including fabrication variability), whilst allowing applications to tune overall system performance to exploit key aspects of dynamic energy usage and platform variability. The approach taken within the Touchmore project is to model key aspects of the platform in order that performance and variability can be understood and exploited by the <b>system</b> <b>software.</b> In turn, the <b>system</b> <b>software</b> (comprising OS and run-time) utilises the model so that aspects of variability and energy usage are abstracted from the platform, then monitored and controlled {{in order to meet}} policy goals, eg. energy minimisation. This paper documents aspects of the modeling and <b>system</b> <b>software</b> structure to show how the Touchmore project is managing energy and platform variability using customisation of the application, <b>system</b> <b>software</b> and toolchai...|$|R
50|$|Esri - a major {{geographic}} information <b>systems</b> <b>software</b> company.|$|E
50|$|The {{school is}} {{involved}} in research and application development in software engineering, spatial information systems and digital engineering, multi-media digital technology, digital art design, visualization technology, information security, software reliability, quality assurance software <b>systems,</b> <b>software</b> development tools and environment, biological information engineering, financial information <b>systems,</b> <b>software</b> development, and IC design.|$|E
5000|$|Data Delivery <b>Systems</b> (<b>Software,</b> Hardware, Communications) {{support the}} data architecture.|$|E
50|$|The {{specification}} provides several benefits. No or {{very little}} information about flash devices {{has to be}} stored in tables within <b>system</b> <b>software.</b> It is possible to use lower cost flash memory devices as they become available without rewriting <b>system</b> <b>software.</b> Adapting current <b>software</b> <b>systems</b> shall be done more easily and quickly than previously.|$|R
50|$|The PlayStation Vita <b>system</b> <b>software</b> is the {{official}} firmware and operating system for the PlayStation Vita and PlayStation TV video game consoles. It uses the LiveArea as its graphical shell. The PlayStation Vita <b>system</b> <b>software</b> has one optional add-on component, the PlayStation Mobile Runtime Package. The system is built on a Unix-base which is derived from FreeBSD and NetBSD. The current version of the <b>system</b> <b>software</b> is 3.65, which was made available on April 18, 2017.|$|R
25|$|Computer {{programs}} may be categorized along functional lines. The main functional categories are application <b>software</b> and <b>system</b> <b>software.</b> <b>System</b> <b>software</b> includes {{the operating system}} which couples computer hardware with application software. The purpose of the operating system is to provide {{an environment in which}} application software executes in a convenient and efficient manner. In addition to the operating <b>system,</b> <b>system</b> <b>software</b> includes embedded programs, boot programs, and micro programs. Application software designed for end users have a user interface. Application software not designed for the end user includes middleware, which couples one application with another. Application software also includes utility programs. The distinction between <b>system</b> <b>software</b> and application software is under debate.|$|R
