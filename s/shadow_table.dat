11|58|Public
5000|$|... #Caption: The <b>shadow</b> <b>table</b> has {{the same}} {{structure}} as the original table, but different data. The red arrow shows the movement of data to the <b>shadow</b> <b>table</b> and the green, shows the opposite.|$|E
5000|$|Modularity - The {{placement}} of data within a <b>shadow</b> <b>table</b> to make modification and {{handling of the}} data easier.|$|E
5000|$|Encapsulation - The {{placement}} of data within a <b>shadow</b> <b>table</b> {{in order to}} separate a set of data from another.|$|E
50|$|When <b>shadow</b> <b>tables</b> {{are used}} to solve current {{problems}} in today's computer/network systems, usually a combination {{of more than one}} of the aforementioned theoretical/abstract applications of <b>shadow</b> <b>tables</b> are used. The following list is a very tiny subset of all real-world applications of <b>shadow</b> <b>tables</b> and is only shown to give an example of common applications of <b>shadow</b> <b>tables.</b>|$|R
5000|$|Since <b>shadow</b> <b>tables</b> {{are such}} an {{abstract}} concept, their applications {{remain in the}} realm of computer science. Although their usage may not be specifically declared as [...] "shadow table(s)", the concept remains the same. <b>Shadow</b> <b>tables</b> are usually used in order to improve the performance, capacity, and ability of an existing computer/network system. In most applications, <b>shadow</b> <b>tables</b> are usually a carbon copy of their primary tables' structure, but with unique data.|$|R
30|$|The {{hypervisor}} uses <b>shadow</b> page <b>tables</b> {{to convert}} a guest VM physical address to an actual machine address. <b>Shadow</b> page <b>tables</b> are accessible from the hypervisor {{and can be}} manipulated easily. The introspection code can be secured from guest VM-based applications using <b>shadow</b> <b>tables</b> and Intel VT technology features. Intel's VT support and virtual memory protection {{can be used to}} secure the monitoring code.|$|R
5000|$|The {{database}} {{can send}} a <b>shadow</b> <b>table</b> that only contains the transactions involving the user that requested his/her transaction history.|$|E
5000|$|Storage - The {{storage of}} a data entry in a <b>shadow</b> <b>table</b> {{that would have}} {{normally}} been deleted or modified.|$|E
50|$|After 50 days {{using the}} <b>shadow</b> <b>table</b> {{system in the}} {{worst-case}} scenario, there would be one copy of the primary table, assuming every row in the primary table got deleted.|$|E
5000|$|Without <b>shadow</b> <b>tables,</b> {{one could}} create a program that simply saves a version of that table everyday.|$|R
5000|$|For example, <b>shadow</b> <b>tables</b> {{could be}} used in an {{efficient}} backup system that supports large data tables that rarely change.|$|R
5000|$|<b>Shadow</b> <b>tables,</b> as an {{abstract}} concept, {{have been used}} {{since the beginning of}} modern computing. However, widespread usage of the specific phrase [...] "shadow table" [...] began when relational database management systems (RDBMS) became widely used in the 1970s.|$|R
5000|$|With shadow tables, {{one could}} create an empty [...] "shadow table" [...] of that table {{and use a}} program that inserts {{a copy of a}} row into the <b>shadow</b> <b>table</b> every time that row gets deleted from the primary table.|$|E
50|$|Since shadow {{tables are}} a {{specific}} type of object in computer science, the applications vary greatly, because their application depends on what data is stored in the <b>shadow</b> <b>table</b> and how that data is used. The following is a list of general, abstract applications for shadow tables that span all real-world applications.|$|E
5000|$|Shadow Tables are {{objects in}} {{computer}} science used to improve the way machines, networks and programs handle information. [...] More specifically, a <b>shadow</b> <b>table</b> is an object that is read and written by a processor and contains data similar to (in the same format as) its primary table, which is the table it's [...] "shadowing". Shadow tables usually contain data that is relevant to the operation and maintenance of its primary table, but not within the subset of data required for the primary table to exist. Shadow tables {{are related to the}} data type [...] "trails" [...] in data storage systems. Trails are very similar to shadow tables but instead of storing identically formatted information that is different (like shadow tables), they store a history of modifications and functions operated on a table.|$|E
5000|$|<b>Shadow</b> <b>tables</b> {{are often}} used as layers between the {{end-user}} and the database. For example, if a user logs into his/her bank account and requests a history of all his/her past transactions, the database usually stores all transactions for all users in one huge table and distinguishes the parties involved in each transaction in one specific column of that table. At this point the server has two options: ...|$|R
40|$|Changes in {{the thermal}} {{radiation}} analyzer system (TRASYS) computer program are discussed. New capabilities were added while keeping intact {{the same data}} input structure. An overview of the program structure and general capabilities is given. Where appropriate, assessments are made of new features. The application of TRASYS peripheral programs and the importance they have in developing a totally integrated thermal analysis system are discussed. Form factor computations times were reduced approximately 40 percent, and the longer flux runs were reduced 50 percent when <b>shadow</b> <b>tables</b> were used...|$|R
50|$|Second Level Address Translation (SLAT), {{also known}} as nested paging, is a hardware-assisted {{virtualization}} technology which {{makes it possible to}} avoid the overhead associated with software-managed <b>shadow</b> page <b>tables.</b>|$|R
5000|$|Database Management Systems (DBMs) are {{software}} that handle the maintenance, security, and manipulation of data tables. Well known and widely used examples of DBMs are SQL Server, MySQL, Oracle and PostgreSQL. Each of these DBMs create a virtual [...] "environment" [...] in which tables of data are held {{and can be}} read and written to via {{a specific type of}} programming language known as a query language. Query languages specialize in the simple modification or retrieval of large and specific amounts of data. Most modern DBMs specifically support SQL(a specific type of query language). Using SQL, one can easily create tables that share the same structure as already existing tables. SQL can also get data written to these new tables, creating a <b>shadow</b> <b>table.</b> Shadow tables are often used with DBMs to improve efficiency by preventing redundant operations being performed by the DBM. Shadow tables are also easy to implement in most modern DBMs because they do not affect the original data, so the way the databases and applications accessing them work together is not affected, unless desired.|$|E
40|$|An enigmatic Greek {{inscription}} {{painted on}} a wall in the monastery of Bawit {{was first published in}} 1904 by the archaeologist Jean Clédat, without any translation or commentary. I offer here a new edition, using a transcription made by Clédat and kept in the Louvre, and a new interpretation of the text. The inscription is an unfinished table with 12 lines and 5 columns. The first column contains the names of the months, while the other ones have only numbers: the figures " 1 " and " 15 " are repeated several times, respectively in the 2 nd and 4 th columns. In the 3 rd and 5 th columns, the numbers increase and decrease regularly. This text appears to be a <b>shadow</b> <b>table,</b> recording the lengths of some shadow at noon on the 1 st and 15 th of each month. Comparison with similar texts from Christian Egypt shows some uncommon characteristics in the Bawit table: usually tables indicate the length of the shadow at various times of the day, the gnomon being a person, who has just to measure the length of his own shadow in feet. The Bawit <b>shadow</b> <b>table</b> records only the noon shadow and its precision is greater than in the other documents. Moreover, the gnomon was higher than a human body or it was a meridian line. The practical function of the inscription is not known. info:eu-repo/semantics/publishe...|$|E
50|$|A VMware {{research}} paper found that RVI offers up to 42% gains in performance compared with software-only (<b>shadow</b> page <b>table)</b> implementation. Tests conducted by Red Hat showed a doubling in performance for OLTP benchmarks.|$|R
5000|$|Operating system {{virtualization}} is {{the process}} of simulating the operation of a computer within another computer. This technique is useful for someone who wants to run more than one type of operating system on his/her PC concurrently. <b>Shadow</b> page <b>tables</b> are often used in simulating more than one operating system on a single set of memory and processor. A page table is used by an operating system to map the virtual memory, the actual memory used by programs and the operating system to store information, to its location on the physical memory, the hardware-specific memory stored in bytes on the RAM (Random Access Memory). [...] A <b>shadow</b> page <b>table</b> is a pseudo-page table within a computer's main page table which allows a system to run more than one kind of operating system concurrently.|$|R
40|$|Memory-mapped I/O (MMIO) tracing {{provides}} {{an effective means}} for analyzing and debugging I/O related functions since {{it allows us to}} observe and track the interplay between processors and I/O devices [1]. However, existing MMIO tracing techniques have a serious drawback in multicore systems. Current MMIO techniques commonly use a memory protection mechanism to detect access to an MMIO address area under consideration. Unfortunately, this approach may miss some I/O events and even lead to a data race condition due to inappropriate management of concurrent accesses to the MMIO address area. In this paper, we describe a novel MMIO tracing approach introducing the notion of <b>shadow</b> page <b>table.</b> We use a <b>shadow</b> page <b>table</b> to allow only one processor to have access to a MMIO address area while forbidding other processors’ access to the same MMIO address area. We show how the <b>shadow</b> page <b>table</b> approach can be efficiently implemented on a multiprocessor platform with dual core ARM Cortex A 15 CPU. This work was supported partly by Seoul Creative Human Development Program (HM 120006), and partly by the National Research Foundation of Korea(NRF) grant funded by the Korea government(MEST) (NRF- 2011 - 0015997), and partly the MSIP(Ministry of Science, ICT and Future Planning), Korea, under the C-ITRC(Convergence Information Technology Research Center) (IITP- 2015 - H 8601 - 15 - 1005) supervised by the IITP(Institute for Information & communications Technology Promotion) ...|$|R
50|$|One of {{the main}} driving factors for the {{development}} of hardware assists for the System/370 was virtual memory itself. When the guest was an operating system that itself implemented virtual memory, even non-privileged instructions could experience longer execution times - a penalty imposed by the requirement to access translation tables not used in native execution (see <b>shadow</b> page <b>tables).</b>|$|R
30|$|Other than this, for the {{execution}} of precopy method, Xen uses some data structure for effective transfer of virtual machine memory pages during virtual machine live migration. Guest page table are managed by guest itself and pointed by CR 3 register. Initially, Xen makes guest page tables read-only and when the guest tries to change or update its page table during migration, a page fault occurs. Xen employs <b>shadow</b> page <b>table</b> under the running virtual machine to log information of updated pages. It uses log of updated pages during migration. Xen also uses another bitmap named dirty log bitmap, which also contains the log of updated or dirty pages. When pages are updated during migration, the changes are propagated to both <b>shadow</b> page <b>table</b> and dirty log bitmap. Both are used to manage transferring of virtual machine pages {{at the time of}} migration and for each iteration bitmap is scanned to locate updated pages for transferring.|$|R
5000|$|A {{number of}} key data {{structures}} used by a processor need to be shadowed. Because most operating systems use paged virtual memory, and granting the guest OS {{direct access to the}} MMU would mean loss of control by the virtualization manager, some of the work of the x86 MMU needs to be duplicated in software for the guest OS using a technique known as <b>shadow</b> page <b>tables.</b> This involves denying the guest OS any access to the actual page table entries by trapping access attempts and emulating them instead in software. The x86 architecture uses hidden state to store segment descriptors in the processor, so once the segment descriptors have been loaded into the processor, the memory from which they have been loaded may be overwritten {{and there is no way}} to get the descriptors back from the processor. <b>Shadow</b> descriptor <b>tables</b> must therefore be used to track changes made to the descriptor tables by the guest OS.|$|R
40|$|To　determine　the　psychological　mechanism　on　the　effects　of　stress　reduction　following　a　physical　activities,　the　eighteen　male　students　aged　 18 - 19 　years　were　studied　the　mood　state　before　and　after　self-paced　jogging　around　the　park　(about　 2 km). 　Chinese　<b>shadow</b>　boxing,　<b>table</b>　tennis　and　lecture　class　were　investigated　as　the　control　group. 　The　mood　state　was　administered　by　Mood　Check　List　(MCL- 1) 　consisted　of　two　factors　named　pleasant　and　relaxation,　developed　on　this　study. 　 Both　of　the　pleasant　and　relaxation　scale　scores　increased　after　self-paced　jogging　significantly　(p< 0. 01). 　Only　the　pleasant　scale　score　increased　significantly　on　Chinese　<b>shadow</b>　boxing　and　<b>table</b>　tennis,　and　the　leacture　class　did　not　increased　in　any　scales. 　It　was　concluded　that　the　self-paced　jogging　was　effective　improve　the　mood　state　of　pleasant　and　ralaxation...|$|R
30|$|Nested {{virtualization}} {{of memory}} {{can be divided}} into software-based and hardware-based. Software-based nested virtualization is by extending the <b>shadow</b> page <b>table</b> and adding another layer of memory translation, while hardware-based nested virtualization makes use of the hardware feature support, which is named as EPT by Intel and NPT by AMD (McDougall and Anderson 2010). As the nested shadow page is very inefficient, we are mainly concerned with hardware-based one.|$|R
40|$|Abstract—Efficient {{virtualization}} {{of translation}} lookaside buffers (TLBs), a core component of modern hypervisors, {{is complicated by}} the concurrent, speculative walking of page tables in hardware. We give a formal model of an x 64 -like TLB, criteria for its correct virtualization, and outline the verification of a virtualization algorithm using <b>shadow</b> page <b>tables.</b> The verification is being carried out in VCC, a verifier for concurrent C code. I...|$|R
50|$|He {{wrote the}} books: The Lost Elements: The Periodic <b>Table's</b> <b>Shadow</b> Side and Chemistry and Chemists in Florence: From the Last of the Medici Family to the European Magnetic Resonance Center. Both edited in Italian and English.|$|R
50|$|Llanbedr is a {{small village}} 2 mi {{northeast}} of Crickhowell in the county of Powys in south Wales. It lies above the river known as the Grwyne Fechan just above its confluence with the Grwyne Fawr in the southern reaches of the Black Mountains range. The village lies within the <b>shadow</b> of <b>Table</b> Mountain, an outlying spur of Pen Cerrig-calch on which is perched the Iron Age hill fort of Crug Hywel.|$|R
50|$|He is {{also well}} known internationally {{as a rock}} climber, being perhaps the most {{prominent}} black climber in South Africa. Named {{after one of the}} two climbers first confirmed to reach the summit of Everest, Edmund Hillary, and living in the <b>shadow</b> of <b>Table</b> Mountain, Edmund was destined to be a climber. He had to overcome immense challenges to become one: during Apartheid he wasn’t welcome in the Mountain Club of South Africa and had to outwit authorities to climb on restricted land.|$|R
40|$|We propose an {{efficient}} framework for dynamic cloud rendering. Base {{on the proposed}} simplified lighting model, the <b>Shadow</b> Relation <b>Table</b> (SRT) and Metaball Lighting Texture Database (MLTDB) are constructed in the preprocessing, and features such as selfshadowing and light scattering can be computed quickly using table lookup at the run time. Clouds are rendered using textured billboards and alpha blending, which is further speeded up by incorporating the octree hierarchy and the hierarchical texture caching. Key words: cloud simulation, dynamic clouds rendering, cellular automata...|$|R
60|$|Then, glancing suspiciously behind her, Soa came to him, {{and made}} some {{movements}} with {{her hands in the}} <b>shadow</b> of the <b>table.</b> Next bending forward, she whispered awhile into his ear. When she had finished, her father looked up, and there were tears in his aged eyes.|$|R
60|$|She {{looked at}} the two bodies on the floor, one almost at her feet, the other just inside the doorway, now almost hidden in the <b>shadows</b> of the <b>table.</b> Then she issued her {{commands}} to the men, and fiercely she bade them pull down that barricade and take the dog alive.|$|R
60|$|We {{were all}} going to the party at Highclose. I {{happened}} to go into the kitchen about half past seven. The lamp was turned low, and Rebecca sat in the <b>shadows.</b> On the <b>table,</b> {{in the light of the}} lamp, I saw a glass vase with five or six very beautiful Christmas roses.|$|R
