0|10000|Public
30|$|Syntactic {{complexity}} {{may also}} be measured by variables such as main clause length, number of clauses, coordination and <b>subordination</b> relationships, and <b>complexity</b> <b>of</b> the noun phrases.|$|R
40|$|A {{linguistic}} analysis of five children's books, {{randomly selected from}} the "Modern Masters Books for Children " series, described the features of language found in books for beginning readers and demonstrated the value of structural analysis in reading research. Four linguistic measures were applied to each book: 1) {{the average number of}} words in a communication unit (any independent clause with its modifiers), 2) types of structural patterns within the communication units, 3) quantity and <b>complexity</b> <b>of</b> structures, and 4). movables (words, phrases, and clauses with no fixed position). Results of the study revealed that the average number of words in a communication unit ranged from 6. 99 to 12. 37; that the subject-verb-complement or subject-verb-direct object pattern appeared most frequently; that words and phrases were used most commonly as movables; and that <b>subordination</b> <b>complexities</b> were not above the children's grasp. The five books considered ware found suitable for beginning readers, but more extensive application ofi such {{linguistic analysis}} to children's literature should improv...|$|R
30|$|The time <b>complexity</b> <b>of</b> SQSI-IS {{comprises}} four factors, as follows: (1) the <b>complexity</b> <b>of</b> {{performing the}} hypothesis test, (2) the <b>complexity</b> <b>of</b> applying the linear transformation exhibited in Eq. 8, (3) the <b>complexity</b> <b>of</b> the instance selection method, and (4) the <b>complexity</b> <b>of</b> training a new quantification model.|$|R
30|$|The {{computational}} <b>complexity</b> <b>of</b> OFDM/TDM {{has been}} evaluated in [20] {{by using the}} number of the required complex multiplications of IFFT/FFT operation as the comparison metric. It has been shown that the <b>complexity</b> <b>of</b> OFDM/TDM transmitter is lower than the <b>complexity</b> <b>of</b> its receiver, while the <b>complexities</b> <b>of</b> transmitter and receiver for the conventional OFDM are almost the same. On the other hand, the total (i.e., transmitter/receiver) <b>complexity</b> <b>of</b> OFDM/TDM is larger in comparison with the <b>complexity</b> <b>of</b> the conventional OFDM [20].|$|R
3000|$|The <b>complexity</b> <b>of</b> the {{proposed}} MESF scheduling scheme is mostly that <b>of</b> the <b>complexity</b> <b>of</b> sorting servers by their energy efficiency. Without {{knowledge of the}} server energy profile, the <b>complexity</b> <b>of</b> the algorithm {{is based on the}} sorting <b>complexity</b> <b>of</b> the servers energy profiles, which is O(m [...]...|$|R
30|$|The time <b>complexity</b> <b>of</b> {{the average}} {{recommendation}} trust vector calculation is O(m*n). n {{is the number}} of recommendation nodes, and m {{is the number of}} security event type. The time <b>complexity</b> <b>of</b> the correlation coefficient calculation is O(m*n). The time <b>complexity</b> <b>of</b> the malicious node detection is O(n). The time <b>complexity</b> <b>of</b> the final recommendation trust calculation is O(m*n). Therefore, the time <b>complexity</b> <b>of</b> the indirect trust evaluation method is O(m*n).|$|R
40|$|In this paper, {{we study}} the state <b>complexities</b> <b>of</b> two {{particular}} combinations of operations: catenation combined with union and catenation combined with intersection. We {{show that the}} state <b>complexity</b> <b>of</b> the former combined operation is considerably less than the mathematical composition <b>of</b> the state <b>complexities</b> <b>of</b> catenation and union, while the state <b>complexity</b> <b>of</b> the latter one {{is equal to the}} mathematical composition <b>of</b> the state <b>complexities</b> <b>of</b> catenation and intersection...|$|R
40|$|The {{syntactic}} <b>complexity</b> <b>of</b> {{a regular}} language is the cardinality of its syntactic semigroup. The syntactic <b>complexity</b> <b>of</b> a subclass of regular languages is the maximal syntactic <b>complexity</b> <b>of</b> languages in that subclass, {{taken as a}} function <b>of</b> the state <b>complexity</b> <b>of</b> these languages. We study the syntactic <b>complexity</b> <b>of</b> star-free regular languages, that is, languages that can be constructed from finite languages using union, complement and concatenation. We find tight upper bounds on the syntactic <b>complexity</b> <b>of</b> languages accepted by monotonic and partially monotonic automata. We introduce "nearly monotonic" automata, which accept star-free languages, and find a tight upper bound on the syntactic <b>complexity</b> <b>of</b> languages accepted by such automata. We conjecture that this bound is also an upper bound on the syntactic <b>complexity</b> <b>of</b> star-free languages. Comment: 17 pages, 6 figures, 3 table...|$|R
30|$|Similarly, {{the time}} <b>complexity</b> <b>of</b> finding {{relative}} orientation consistency is O(N 2 +T). The time <b>complexity</b> <b>of</b> fusion of features is O(1) {{as there are}} only three features to be combined. The time <b>complexity</b> <b>of</b> key frame selection is O(T). Thus, the overall time <b>complexity</b> <b>of</b> the system is O(N 2 +T)+O(N 2 +T)+O(T)=O(N 2 +T).|$|R
30|$|The time <b>complexity</b> <b>of</b> the {{approach}} proposed {{in this article}} consists of two parts, namely the time <b>complexity</b> <b>of</b> the primary recognition and the time <b>complexity</b> <b>of</b> the advanced recognition.|$|R
3000|$|The {{computational}} <b>complexity</b> <b>of</b> AM 2 CP (Algorithm 1) {{depends on}} the time <b>complexity</b> <b>of</b> computing σ(·), which further {{depends on the}} time <b>complexity</b> <b>of</b> computing the influence propagation [...]...|$|R
40|$|The trellis <b>complexity</b> <b>of</b> causal and noncausal interleavers are studied via the {{introduction}} of the input-output interleaver code. The "average" <b>complexity</b> <b>of</b> a uniform interleaver is computed. The trellis <b>complexity</b> <b>of</b> a turbo code is then tied to the <b>complexity</b> <b>of</b> the constituent interleaver. A procedure <b>of</b> <b>complexity</b> reduction by coordinate permutation is also presented, together with some examples of its application...|$|R
30|$|The {{computational}} <b>complexity</b> <b>of</b> {{a motion}} estimation technique {{can be determined}} by three factors: (1.) search algorithm, (2.) cost function, and (3.) search range parameter p. Actually, we can reduce the <b>complexity</b> <b>of</b> the motion estimation algorithms by reducing the <b>complexity</b> <b>of</b> the applied search algorithm and/or the <b>complexity</b> <b>of</b> the selected cost function.|$|R
3000|$|... has the <b>complexity</b> <b>of</b> order O(M 2 B)[*]+[*]O(M 2)[*]=[*]O(M 2 B). In the subspace-based MMSE detector, the EVD of the {{autocorrelation}} matrix has the <b>complexity</b> <b>of</b> O(M 2 B)[*]+[*]O(M 2 K), and the <b>complexity</b> <b>of</b> {{the projection}} of the desired signature waveform onto signal subspace is O(M 2). Thus, the final <b>complexity</b> <b>of</b> the subspace-based MMSE is of order O(M 2 B). The computation of the VDL detector has the <b>complexity</b> <b>of</b> O(M 2 B). Besides, in the MMSE-ICA, the computational <b>complexities</b> <b>of</b> autocorrelation matrix, prior subspace estimation, pre-whitening of the received data, and each unit-gain-based ICA iteration are O(M 2 B), O(M 2 K), O(MK), and O(KB), respectively. Thus, the final <b>complexity</b> <b>of</b> the MMSE-ICA is of order O(M 2 B).|$|R
50|$|Riham AlTawy and Amr M. Youssef {{describe}} a meet-in-the-middle {{attack on the}} 5-round reduced Kuznyechik which allows to recover the key with time <b>complexity</b> <b>of</b> 2140, memory <b>complexity</b> <b>of</b> 2153, and data <b>complexity</b> <b>of</b> 2113.|$|R
40|$|The <b>complexity</b> <b>of</b> motion {{planning}} algorithms highly {{depends on}} the <b>complexity</b> <b>of</b> the robot's free space. Theoretically, the <b>complexity</b> <b>of</b> the free space can be very high, resulting in bad worst-case time bounds for motion planning algorithms. In practice, the <b>complexity</b> <b>of</b> the free space tends to be {{much smaller than the}} worstcase complexity. Motion planning algorithms with a running time that is determined by the <b>complexity</b> <b>of</b> the free space therefore become feasible in practical situations. We show tha...|$|R
5000|$|The <b>complexity</b> <b>of</b> {{the system}} being modeled. The size (<b>complexity)</b> <b>of</b> the M&S environment.|$|R
40|$|Thapper and Zivny [STOC' 13] {{recently}} classified the <b>complexity</b> <b>of</b> VCSP for all finite-valued constraint languages. However, the <b>complexity</b> <b>of</b> VCSPs for constraint languages {{that are}} not finite-valued remains poorly understood. In this paper we study the <b>complexity</b> <b>of</b> two such VCSPs, namely Min-Cost-Hom and Min-Sol. We obtain a full classification for the <b>complexity</b> <b>of</b> Min-Sol on domains that contain at most three elements and for the <b>complexity</b> <b>of</b> conservative Min-Cost-Hom on arbitrary finite domains. Our results answer a question raised by Takhanov [STACS' 10, COCOON' 10]...|$|R
50|$|The <b>complexity</b> <b>of</b> {{executing}} an algorithm with a human-assisted Turing {{machine is}} given by a pair , where the first element represents the <b>complexity</b> <b>of</b> the human's part and the second element is the <b>complexity</b> <b>of</b> the machine's part.|$|R
5000|$|In {{a growing}} array, the amortized time <b>complexity</b> <b>of</b> all deque {{operations}} is O(1). Additionally, the time <b>complexity</b> <b>of</b> random access by index is O(1); {{but the time}} <b>complexity</b> <b>of</b> insertion or deletion in the middle is O(n).|$|R
40|$|The {{syntactic}} <b>complexity</b> <b>of</b> {{a regular}} language is the cardinality of its syntactic semigroup. The syntactic <b>complexity</b> <b>of</b> a subclass {{of the class}} of regular languages is the maximal syntactic <b>complexity</b> <b>of</b> languages in that class, taken as a function <b>of</b> the state <b>complexity</b> n <b>of</b> these languages. We study the syntactic <b>complexity</b> <b>of</b> R- and J-trivial regular languages, and prove that n! and floor of [e(n- 1) !] are tight upper bounds for these languages, respectively. We also prove that 2 ^{n- 1 } is the tight upper bound on the state <b>complexity</b> <b>of</b> reversal of J-trivial regular languages. Comment: 17 pages, 5 figures, 1 tabl...|$|R
30|$|The <b>complexity</b> <b>of</b> the GICO {{algorithm}} {{is lower than}} the <b>complexity</b> <b>of</b> the CES algorithm.|$|R
30|$|The <b>complexities</b> <b>of</b> the direct, RBS and UOV-R {{attacks were}} {{discussed}} by Petzoldt et al. [16], and we follow their data regarding the <b>complexities</b> <b>of</b> these attacks. In particular, the <b>complexities</b> <b>of</b> {{the direct and}} UOV-R attacks are equivalent.|$|R
30|$|The line-seru {{conversion}} is a two-stage decision process, i.e., seru {{formation and}} seru load (Yu et al. 2012, 2014). Therefore, the <b>complexity</b> <b>of</b> line-seru conversion should be clarified {{by combining the}} <b>complexity</b> <b>of</b> seru formation with the <b>complexity</b> <b>of</b> seru load.|$|R
40|$|The notion <b>of</b> the <b>complexity</b> <b>of</b> {{performing}} an {{inductive inference}} is defined. Some {{examples of the}} tradeoffs between the <b>complexity</b> <b>of</b> performing an inference and {{the accuracy of the}} inferred result are presented. An axiomatization of the notion <b>of</b> the <b>complexity</b> <b>of</b> inductive inference is developed and several results are presented which both resemble and contrast with results obtainable for the axiomatic computational <b>complexity</b> <b>of</b> recursive functions...|$|R
40|$|The linear <b>complexity</b> <b>of</b> {{a matrix}} {{is a measure}} of the number of additions, subtractions, and scalar multiplications {{required}} to multiply that matrix and an arbitrary vector. In this paper, we define the linear <b>complexity</b> <b>of</b> a graph to be the linear <b>complexity</b> <b>of</b> any one of its associated adjacency matrices. We then compute or give upper bounds for the linear <b>complexity</b> <b>of</b> several classes of graphs. ...|$|R
40|$|This {{paper is}} a {{continuation}} of our research work on state <b>complexity</b> <b>of</b> combined operations. Motivated by applications, we study the state <b>complexities</b> <b>of</b> two particular combined operations: catenation combined with star and catenation combined with reversal. We show that the state <b>complexities</b> <b>of</b> both of these combined operations are considerably less than the compositions <b>of</b> the state <b>complexities</b> <b>of</b> their individual participating operations. Comment: In Proceedings DCFS 2010, arXiv: 1008. 127...|$|R
40|$|In {{this thesis}} we {{identify}} the <b>complexity</b> <b>of</b> the conjugacy problem of automorphisms of regular trees. We expand {{on the results}} of Kechris, Louveau, and Friedman on the <b>complexities</b> <b>of</b> the isomorphism problem of classes of countable trees. We see in nearly all cases that the <b>complexity</b> <b>of</b> isomorphism of subtrees of a given regular countable tree {{is the same as the}} <b>complexity</b> <b>of</b> conjugacy of automorphisms of the same tree, though we present an example for which this does not hold...|$|R
40|$|AbstractThe linear <b>complexity</b> <b>of</b> {{sequences}} {{is one of}} {{the important}} security measures for stream cipher systems. Recently, in the study of vectorized stream cipher systems, the joint linear <b>complexity</b> <b>of</b> multisequences has been investigated. By using the generalized discrete Fourier transform for multisequences, Meidl and Niederreiter determined the expectation of the joint linear <b>complexity</b> <b>of</b> random N-periodic multisequences explicitly. In this paper, we study the expectation and variance of the joint linear <b>complexity</b> <b>of</b> random periodic multisequences. Several new lower bounds on the expectation of the joint linear <b>complexity</b> <b>of</b> random periodic multisequences are given. These new lower bounds improve on the previously known lower bounds on the expectation of the joint linear <b>complexity</b> <b>of</b> random periodic multisequences. By further developing the method of Meidl and Niederreiter, we derive a general formula and a general upper bound for the variance of the joint linear <b>complexity</b> <b>of</b> random N-periodic multisequences. These results generalize the formula and upper bound of Dai and Yang for the variance <b>of</b> the linear <b>complexity</b> <b>of</b> random periodic sequences. Moreover, we determine the variance of the joint linear <b>complexity</b> <b>of</b> random periodic multisequences with certain periods...|$|R
30|$|The time <b>complexity</b> <b>of</b> Algorithm  2 is O(m^ 1.5). The space <b>complexity</b> <b>of</b> Algorithm  2 is O(n+m).|$|R
3000|$|Finally, {{we compare}} the {{computational}} <b>complexity</b> <b>of</b> our proposed scheme and TRS scheme. For {{the sake of}} notational simplicity, we evaluate how the computational <b>complexity</b> <b>of</b> both schemes scale {{with the number of}} nodes M. In our proposed scheme, the <b>complexity</b> <b>of</b> the opportunistic relay selection is O(M). The <b>complexity</b> order <b>of</b> obtain f [...]...|$|R
30|$|Subsequently, the <b>complexity</b> (T(W)) <b>of</b> line-seru {{conversion}} {{with the}} different scheduling rules can be clarified {{by combining the}} <b>complexity</b> <b>of</b> seru formation (F(W)) with the <b>complexity</b> <b>of</b> seru load (S).|$|R
50|$|The {{computational}} <b>complexity</b> <b>of</b> one {{sweep of}} forward accumulation {{is proportional to}} the <b>complexity</b> <b>of</b> the original code.|$|R
30|$|The path {{selection}} algorithm has the computational <b>complexity</b> <b>of</b> O (N^H_), where Hmax is {{the maximum number}} of hops for each selected path [1]. The computational <b>complexity</b> <b>of</b> the traffic distribution algorithm is negligible [1]. The transmission scheduling algorithm has the <b>complexity</b> <b>of</b> O(N 2). Thus, the total <b>complexity</b> <b>of</b> the scheme is O (N^H_ + N^ 2), which is pseudo-polynomial. Thus, our scheme is practical for WPANs.|$|R
40|$|In this paper, we are {{concerned}} with the study on metric spaces with <b>complexity</b> <b>of</b> the smallest infinite ordinal number. We give equivalent formulations of the definition of metric spaces with <b>complexity</b> <b>of</b> the smallest infinite ordinal number and prove that the exact <b>complexity</b> <b>of</b> the finite product of wreath product is the smallest infinite ordinal number. Consequently, we obtain the <b>complexity</b> <b>of</b> (ZwrZ) wrZ is w+ 1. Comment: 9 page...|$|R
40|$|AbstractWe present binary {{deterministic}} finite automata of n {{states that}} meet the upper bound 2 n on the state <b>complexity</b> <b>of</b> reversal. The automata have a single final state and are one-cycle-free-path automata; thus the witness languages are deterministic union-free languages. This result allows us to describe a binary language such that the nondeterministic state <b>complexity</b> <b>of</b> the language and of its complement is n and n+ 1, respectively, while the state <b>complexity</b> <b>of</b> the language is 2 n. Next, we show that if the nondeterministic state <b>complexity</b> <b>of</b> a language and of its complement is n, then the state <b>complexity</b> <b>of</b> the language cannot be 2 n. We also provide lower and upper bounds on the state <b>complexity</b> <b>of</b> such a language...|$|R
