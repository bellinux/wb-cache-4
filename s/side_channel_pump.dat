3|3259|Public
5000|$|Regenerative pumps utilize vortex {{behavior}} of the fluid (air). The construction is based on hybrid concept of centrifugal pump and turbopump. Usually it consists of several sets of perpendicular teeth on the rotor circulating air molecules inside stationary hollow grooves like multistage centrifugal pump. They can reach to 1×10−5 mbar (0.001 Pa)(when combining with Holweck pump) and directly exhaust to atmospheric pressure. Examples of such pumps are Edwards EPX [...] (technical paper [...] ) and Pfeiffer OnTool™ Booster 150. It is sometimes referred as <b>side</b> <b>channel</b> <b>pump.</b> Due to high pumping rate from atmosphere to high vacuum and less contamination since bearing can be installed at exhaust side, this type of pumps are used in load lock in semiconductor manufacturing processes.|$|E
50|$|Most turbopumps have a Holweck pump (or {{molecular}} drag pump) {{as their}} last stage {{to increase the}} maximum backing pressure (exhaust pressure) to about 1-10 mbar. Theoretically, a centrifugal pump, a <b>side</b> <b>channel</b> <b>pump,</b> or a regenerative pump {{could be used to}} back to atmospheric pressure directly, but currently there is no commercially available turbopump that exhausts directly to atmosphere. In most cases, the exhaust is connected to a mechanical backing pump (usually called roughing pump) that produces a pressure low enough for the turbomolecular pump to work efficiently. Typically, this backing pressure is below 0.1 mbar and commonly about 0.01 mbar. The backing pressure is rarely below 10−3 mbar (mean free path ≈ 70 mm) because the flow resistance of the vacuum pipe between the turbopump and the roughing pump becomes significant.|$|E
40|$|LectureSide channel pumps {{typically}} {{are used in}} applications with low specific speed. The ratio of the low flow and high head tends to result in this niche product, located in between the classical displacement and centrifugal pumps, but uniting the advantages of both. ?Best experience {{in the design of}} these multistage ring section pumps is in using bearing bushings in the stages that are lubricated by the pumping media itself. This guarantees them to be low in service and maintenance time and cost and the pump has no need for another lubricant which contaminates the pumped media. The side channel pumps are a good solution for use with low density (below 5. 8 lb/gal / 700 kg/m 3), and low viscosity hydrocarbons (lower than 4. 3 e- 8 lbf s/in 2 / 0. 3 cP), e. g. in fracking applications or petro- chemical use. The investigated <b>side</b> <b>channel</b> <b>pump</b> is able to generate and handle high pressures at low flows, but in a number of hydrocarbon applications with low viscosities, low NPSH-values or with relatively high percentage of entrained gas, some material failure in the bearings is discovered. ?The working principle of the pump and the performance characteristic is briefly explained. One of those characteristics is a highly transient pulsating pressure, resulting in high forces on the shaft and the impeller. The reasons for the pulsation and some methods to deal with the resulting forces are shown and explained. The high radial load, together with the low viscosity, could lead to an overload of the standard bearings and material failure. New journal bearings have to be designed. Some other possible solutions and ways to deal with the high forces are shown. ?The head and efficiency curves are tested on a test rig and the results are compared to numerical investigations. The pulsations and the force are determined in numerical investigations. The NPSH-value is measured and an optimized NPSH-impeller is designed and manufactured using Rapid-Prototyping. The newly manufactured impeller is compared to the original design, manufactured in two different ways (sand casting and investment casting). ?In the end, a modified pump, ready for the use in hydrocarbon-processing and fracking applications with amounts of gas and a low NPSH requirement is presented and the characteristics are tested on a test-rig, applying affinity laws...|$|E
50|$|Centrifugal pumps with an {{internal}} suction stage {{such as water}} jet <b>pumps</b> or <b>side</b> <b>channel</b> <b>pumps</b> are also classified as self-priming pumps.|$|R
40|$|Abstract: The {{quality of}} mesh {{generation}} {{is very important}} for the computational simulation of the double <b>channel</b> <b>pump.</b> According to the special characteristics of the double <b>channel</b> <b>pump,</b> there exist a great amount of poor-quality elements, most of which are so called Sliver elements, generated by the tetrahedral mesh generation algorithms of Advancing Front Technique (AFT) and Delaunay Triangulation. By studying the type, distribution and reason of the badly shaped elements, a method to eliminate these Sliver elements was proposed. Then this method was combined with advanced optimization-based smoothing, Laplacian smoothing and swapping optimization to optimize the tetrahedral mesh. The computer language C++ is applied to develop the algorithms. Computational experiments of a double <b>channel</b> <b>pump</b> shown that the worst elements can be removed and the whole quality can be improved noticeably. After comparing the result of numerical simulation with that of the experiment, it is believed that the tetrahedral mesh optimization algorithm can satisfy the computational simulation of the double <b>channel</b> <b>pump...</b>|$|R
40|$|Abstract. We {{show that}} a {{randomized}} addition-subtraction chains countermeasure against <b>side</b> <b>channel</b> attacks is vulnerable to SPA attack, a kind of <b>side</b> <b>channel</b> attack, under distinguishability between addition and doubling. A <b>side</b> <b>channel</b> attack is an attack that takes advantage of information leaked during execution of a cryptographic procedure. The randomized addition-subtraction chains countermeasure has been proposed by Oswald-Aigner, and is a random decision inserted into computations. However, its immunity to <b>side</b> <b>channel</b> attacks is still controversial. As for timing attack, a kind of <b>side</b> <b>channel</b> attack, the randomized addition-subtraction chains countermeasure is also vulnerable. Moreover, compared with other countermeasures against <b>side</b> <b>channel</b> attacks, the randomized addition-subtraction chains countermeasure, after being improved to prevent <b>side</b> <b>channel</b> attacks, is much slower...|$|R
40|$|When {{it comes}} to {{cryptographic}} software, <b>side</b> <b>channels</b> are an often-overlooked threat. A <b>side</b> <b>channel</b> is any observable side effect of computation that an attacker could measure and possibly influence. Crypto is especially vulnerable to <b>side</b> <b>channel</b> attacks because of its strict requirements for absolute secrecy. In the software world, <b>side</b> <b>channel</b> attacks have sometimes been dismissed as impractical. However, new system architecture features, such as larger cache sizes and multicore processors, have increased the prevalence of <b>side</b> <b>channels</b> and quality of measurement available to an attacker. Software developers {{must be aware of}} the potential for <b>side</b> <b>channel</b> attacks and plan appropriately. History o...|$|R
40|$|Hardware <b>side</b> <b>channel</b> {{vulnerabilities}} {{have been}} studied {{for many years in}} embedded silicon-security arena including SmartCards, SetTop-boxes, etc. However, because various recent security activities have goals of improving the software isolation properties of PC platforms, software <b>side</b> <b>channels</b> have become a subject of interest. Recent publications discussed cache-based software <b>side</b> <b>channel</b> vulnerabilities of AES and RSA. Thus, following the classical approach [...] - a new <b>side</b> <b>channel</b> vulnerability opens a new mitigation research path [...] - this paper starts to investigate e#cient mitigations to protect AES-software against <b>side</b> <b>channel</b> vulnerabilities. First, we will present several mitigation strategies to harden existing AES software against cache-based software <b>side</b> <b>channel</b> attacks and analyze their theoretical protection...|$|R
40|$|<b>Side</b> <b>channel</b> {{attacks are}} {{non-invasive}} attacks in which adversaries gain confidential information by passively observing the target computing device. Sensor nodes {{are particularly vulnerable}} to <b>side</b> <b>channel</b> attacks {{due to the lack}} of protective physical shielding and their deployment in open environments. As sensor nodes are increasingly being deployed in safety critical applications such as power grid, volcano monitoring, and even military applications, protecting sensor nodes from <b>side</b> <b>channel</b> attacks is critical. However, <b>side</b> <b>channel</b> attacks on sensor nodes have not been investigated in previous work. In this paper, we present a taxonomy of <b>side</b> <b>channel</b> attacks on sensor nodes. For each type of the attacks, we provide guidelines and approaches to thwart the attack. We also propose a new technique, called process obfuscation, which can be used as a countermeasure for a variety of <b>side</b> <b>channel</b> attacks on sensor nodes. Furthermore, to demonstrate the feasibility of <b>side</b> <b>channel</b> attacks, we conducted electromagnetic leakage attacks, a type of <b>side</b> <b>channel</b> attack, on popular Tmote-sky sensor nodes using commercially available equipment. 1...|$|R
40|$|Power <b>side</b> <b>channel</b> {{is a very}} {{important}} category of <b>side</b> <b>channels,</b> which can be exploited to steal confidential information from a computing system by analyzing its power consumption. In this paper, we demonstrate the existence of various power <b>side</b> <b>channels</b> on popular mobile devices such as smartphones. Based on unprivileged power consumption traces, we present a list of real-world attacks that can be initiated to identify running apps, infer sensitive UIs, guess password lengths, and estimate geo-locations. These attack examples demonstrate that power consumption traces {{can be used as a}} practical <b>side</b> <b>channel</b> to gain various confidential information of mobile apps running on smartphones. Based on these power <b>side</b> <b>channels,</b> we discuss possible exploitations and present a general approach to exploit a power <b>side</b> <b>channel</b> on an Android smartphone, which demonstrates that power <b>side</b> <b>channels</b> pose imminent threats to the security and privacy of mobile users. We also discuss possible countermeasures to mitigate the threats of power <b>side</b> <b>channels.</b> Comment: Published as a conference paper at Internetware 2015. Please cite this paper as: "Lin Yan, Yao Guo, Xiangqun Chen, Hong Mei. A Study on Power <b>Side</b> <b>Channels</b> on Mobile Devices. The Seventh Asia-Pacific Symposium on Internetware (Internetware 2015), Wuhan, China. " Bibtex Link: [URL]...|$|R
40|$|Abstract. —Numerous {{artificial}} <b>side</b> <b>channels</b> {{have been}} constructed in British Columbia and the Pacific Northwest to compensate for habitat loss from floodplain development. We reviewed data from published studies on natural and restored <b>side</b> <b>channel</b> habitats to determine how design features influence productive capacity for juvenile coho salmon Oncorhynchus kisutch. Average density and biomass of coho salmon parr were significantly higher in stream-type <b>side</b> <b>channels</b> (3. 4 parr/m 2 and 8. 01 g/m 2, respectively) than in pond-type <b>side</b> <b>channels</b> (0. 8 parr/m 2 and 2. 37 g/m 2). Although total parr biomass was three times higher in stream-type <b>side</b> <b>channels,</b> average parr weight was 47 % lower, suggesting greater density-dependent limitation of growth from higher recruitment of juveniles to stream-type habitats. Parr abundance declined from late summer to early spring in both <b>side</b> <b>channel</b> types but appeared to decrease more quickly in stream-type <b>side</b> <b>channels,</b> suggesting greater self-thinning in stream-type habitat from mortality or immigration to slower pond or main-stem habitat as fish sought lower velocities for overwintering. Fish density in a single off-channel complex that contained both stream and pond habitats (fish were able to move between habitats) was also higher in stream habitats, although fish were significantly larger in pond habitats than in stream habitats. Parr density in stream-type <b>side</b> <b>channels</b> was constant with increasing channel size, whereas density in pond-type <b>side</b> <b>channels</b> was a decreasing function of <b>side</b> <b>channel</b> area. Smolt production data were more limited an...|$|R
40|$|Master of ArtsDepartment of GeographyMelinda DanielsThe US Army Corps of Engineers (USACE) {{has begun}} <b>side</b> <b>channel</b> {{restoration}} projects on the Missouri River {{as part of}} the Missouri River Recovery Program. The USACE acquires land on the Missouri River needed to develop fish and wildlife habitat. There is a need to prioritize which land to purchase on the Missouri River. High priority land would be areas that had <b>side</b> <b>channels</b> and can be constructed to restore ecosystems to a more natural state. Much of the river has since been dammed, straightened, and channelized starting heavily in the mid 1890 ’s, and historical <b>side</b> <b>channels</b> have been eliminated, leaving little information to guide USACE efforts to restore them. My thesis documents the historical distribution of <b>side</b> <b>channels</b> on the Missouri River between St. Louis and Kansas City and explores the relationships between <b>side</b> <b>channel</b> location and a variety of potential driving variables, including channel sinuosity, valley width, valley slope and the presence of large confluences. This is the first know study to document the historical extent of <b>side</b> <b>channels</b> on a major river system, and it is also the first to quantitatively explore driving variables of <b>side</b> <b>channel</b> formation. The historical analysis revealed abundant <b>side</b> <b>channels</b> in the late 1800 ’s, with a dramatic decline into the early 1920 ’s as engineering works on the river began in earnest. Results also show that high channel sinuosity and the presence of a large confluences are the two variables most correlated with <b>side</b> <b>channel</b> formation. Based on documented frequencies and locations of historical <b>side</b> <b>channels,</b> recommendations for specific <b>side</b> <b>channel</b> restoration opportunities are also highlighted...|$|R
40|$|<b>Side</b> <b>channels</b> are {{unintended}} indirect {{flows of}} infor-mation revealed by physical executions {{of a computer}} program. Examples of <b>side</b> <b>channels</b> include program’s running time, cache behaviour, power consumption, etc. An attacker who observes such unintended flows may reconstruct secrets e. g., private cryptographic keys, and this makes <b>side</b> <b>channels</b> a severe security vulnerability. Among different types of <b>side</b> <b>channels,</b> timing side-channels are particularly dangerous since they can be exploited remotely over computer net-works, {{and this has been}} demonstrated by breaking for instance SSL and TLS protocols. Transactional branching [BRW 06] is one of the tech-niques for removing timing <b>side</b> <b>channels</b> from the soft-ware. It allows one to automatically transform a vul...|$|R
40|$|International audienceMalicious {{third-party}} applications can leak {{personal data}} {{stored in the}} Android system by exploiting <b>side</b> <b>channels.</b> TaintDroid uses a dynamic taint analysis mechanism to control the manipulation of private data by third-party apps. However, TaintDroid does not propagate taint in <b>side</b> <b>channels.</b> An attacker can exploit this limitation to get private data. For example, Sarwar et al. present <b>side</b> <b>channel</b> class of attacks using a medium that might be overlooked by the taint-checking mechanism to extract sensitive data in Android system. In this paper, we enhance the TaintDroid system and we propagate taint in <b>side</b> <b>channels</b> using formal policy rules. To {{evaluate the effectiveness of}} our approach, we analyzed 100 free Android applications. We found that these applications use different <b>side</b> <b>channels</b> to transfer sensitive data. We successfully detected that 35 % of them leaked private information through <b>side</b> <b>channels.</b> Also, we detected Sarwar et al. <b>side</b> <b>channel</b> attacks. Our approach generates 9 % of false positives. The overhead given by our approach is acceptable in comparison to the one obtained by TaintDroid (9 % overhead) ...|$|R
3000|$|In this study, {{our goal}} is to point out a salient missing link in RFID {{security}} protocols, namely, the back-end server (or the database) role and potential pitfalls or <b>side</b> <b>channels</b> in RFID system realization. In <b>side</b> <b>channel</b> analysis, an attacker utilizes some legitimate function queries in order to collect the corresponding responses of a cryptographic system while it is functioning in a normal mode. If those responses reveal some unwanted information about the secrecy or privacy, this leakage is called <b>side</b> <b>channel</b> information and these responses are called <b>side</b> <b>channels.</b> In this respect, careless deployments of [...] "secure" [...] RFID authentication protocols are not exceptions and subject to <b>side</b> <b>channel</b> attacks.|$|R
3000|$|... where X_S(t)∈C^M_ul× 1 is the side-channel vector signal, H_S∈C^N_dl× M_ul is {{the channel}} matrix of the <b>side</b> <b>channel,</b> and Z_dl(t)∈C^N_dl× 1 is the Gaussian noise {{added to the}} <b>side</b> <b>channel</b> which {{contains}} i.i.d. CN(0,W) entries. Note that the noise variance of each entry in the <b>side</b> <b>channel</b> is W times larger than that in the main-channel.|$|R
40|$|Cloud {{computing}} {{provides an}} effective business {{model for the}} deployment of IT infrastructure, platform, and software services. Often, facilities are outsourced to cloud providers and this offers the service consumer virtualization technologies without the added cost burden of development. However, virtualization introduces serious threats to service delivery such as Denial of Service (DoS) attacks, Cross-VM Cache <b>Side</b> <b>Channel</b> attacks, Hypervisor Escape and Hyper-jacking. One {{of the most sophisticated}} forms of attack is the cross-VM cache <b>side</b> <b>channel</b> attack that exploits shared cache memory between VMs. A cache <b>side</b> <b>channel</b> attack results in <b>side</b> <b>channel</b> data leakage, such as cryptographic keys. Various techniques used by the attackers to launch cache <b>side</b> <b>channel</b> attack are presented, as is a critical analysis of countermeasures against cache <b>side</b> <b>channel</b> attacks. Comment: ISBN# 978 - 0 - 646 - 95337 - 3 Presented at the Australasian Conference on Information Systems 2015 (arXiv: 1605. 01032...|$|R
40|$|Testing {{cryptographic}} implementations for <b>side</b> <b>channel</b> leakage is {{a difficult}} and im-portant problem. The techniques used to uncover <b>side</b> <b>channel</b> leakage are more involved than the usual methodologies of software testing, for example sometimes involving phys-ical measurements of hardware. As such, {{it is difficult to}} work this sort of analysis into the usual software testing process. To this end we have developed the <b>side</b> <b>channel</b> pro-filer. This is an extensible framework for capturing dynamic execution of cryptographic code and applying <b>side</b> <b>channel</b> analysis regardless of underlying architecture. This tool can be used to selectively emulate different hardware components, or apply other <b>side</b> <b>channel</b> leakage criteria. We also demonstrate how the tool can be used to analyze an implementation of näıve square and multiply modular exponentiation. ...|$|R
40|$|The {{traditional}} {{model of}} cryptography examines {{the security of}} cryptographic primitives as mathematical functions. This approach {{does not account for}} the physical side effects of using these primitives in the real world. A more realistic model employs the concept of a <b>side</b> <b>channel.</b> A <b>side</b> <b>channel</b> is a source of information that is inherent to a physical implementation of a primitive. Research done in {{the last half of the}} 1990 s has shown that the information transmitted by <b>side</b> <b>channels,</b> such as execution time, computational faults and power consumption, can be detrimental to the security of ciphers like DES and RSA. This thesis surveys the techniques of <b>side</b> <b>channel</b> cryptanalysis presented in [30], [10], and [31] and shows how <b>side</b> <b>channel</b> information can be used to break implementations of DES and RSA. Some specific techniques covered include the timing attack, differential fault analysis, simple power analysis and differential power analysis. Possible defenses against each of these <b>side</b> <b>channel</b> attacks are also discussed...|$|R
40|$|Abstract. We {{introduce}} new methods for detecting control-flow <b>side</b> <b>channel</b> attacks, transforming C source code to eliminate such attacks, and checking that the transformed code {{is free of}} control-flow <b>side</b> <b>channels.</b> We model control-flow <b>side</b> <b>channels</b> with a program counter transcript, in which {{the value of the}} program counter at each step is leaked to an adversary. The program counter transcript model captures a class of <b>side</b> <b>channel</b> attacks that includes timing attacks and error disclosure attacks. Further, we propose a generic source-to-source transformation that produces programs provably secure against control-flow <b>side</b> <b>channel</b> attacks. We implemented this transform for C together with a static checker that conservatively checks x 86 assembly for violations of program counter security; our checker allows us to compile with optimizations while retaining assurance the resulting code is secure. We then measured our technique’s effect on the performance of binary modular exponentiation and real-world implementations in C of RC 5 and IDEA: we found it has a performance overhead of at most 5 × and a stack space overhead of at most 2 ×. Our approach to <b>side</b> <b>channel</b> security is practical, generally applicable, and provably secure against an interesting class of <b>side</b> <b>channel</b> attacks. ...|$|R
40|$|Abstract. Hardware <b>side</b> <b>channel</b> {{vulnerabilities}} {{have been}} studied {{for many years in}} embedded silicon-security arena including SmartCards, SetTop-boxes, etc. However, because various recent security activities have goals of improving the software isolation properties of PC platforms, software <b>side</b> <b>channels</b> have become a subject of interest. Recent publications discussed cache-based software <b>side</b> <b>channel</b> vulnerabilities of AES and RSA. Thus, following the classical approach — a new <b>side</b> <b>channel</b> vulnerability opens a new mitigation research path — this paper starts to investigate efficient mitigations to protect AES-software against <b>side</b> <b>channel</b> vulnerabilities. First, we will present several mitigation strategies to harden existing AES software against cache-based software <b>side</b> <b>channel</b> attacks and analyze their theoretical protection. Then, we will present a performance and security evaluation of our mitigation strategies. For ease of evaluation we measured the performance of our code against the performance of the openSSL AES implementation. In addition, we also analyzed our code under various existing attacks. Depending on the level of the required <b>side</b> <b>channel</b> protection, the measured performance loss of our mitigations strategies versus openSSL (respectively best assembler) varies between factors of 1. 35 (2. 66) and 2. 85 (5. 83) ...|$|R
40|$|The EM <b>side</b> <b>channel</b> {{analysis}} {{is a very}} effective technique to attack cryptographic systems due to its non invasive nature and capability to launch an attack even with limited resources. The EM leakage from devices can give information about computations on the processor, which can in turn reveal the internal state of the algorithm. For security sensitive algorithms, these EM radiations can be exploited by the adversary to extract secret key dependent operations hence EM <b>side</b> <b>channel</b> must be studied for evaluating the security of these algorithms. Modern embedded devices composed of System-on-Chip architectures are considered hard targets for EM <b>side</b> <b>channel</b> analysis mainly due to their complex architecture. This thesis explores the viability of EM <b>side</b> <b>channel</b> attacks on such targets. There is a comprehensive literature overview of EM <b>side</b> <b>channel</b> analysis followed by a practical <b>side</b> <b>channel</b> attack on a SoC device using well know cryptographic library OpenSSL. The attack successfully extracts the secret key dependent operation {{which can be used}} to retrieve the private key in security protocols such as TLS and SSH. The thesis concludes, with practical single trace attacks, that cryptographic implementations can still be broken using EM <b>side</b> <b>channel</b> analysis, and a complex nature of the device have no significant effect when combined with signal processing methods for extracting <b>side</b> <b>channel</b> information, hence the cryptographic software implementations must address these issues...|$|R
40|$|Over {{the past}} two decades, several microarchitectural <b>side</b> <b>channels</b> have been {{exploited}} to create sophisticated security attacks. Solutions to this problem have mainly focused on fixing the source of leaks either by limiting {{the flow of information}} through the <b>side</b> <b>channel</b> by modifying hardware, or by refactoring vulnerable software to protect sensitive data from leaking. These solutions are reactive and not preventative: while the modifications may protect against a single attack, they do nothing to prevent future <b>side</b> <b>channel</b> attacks that exploit other microarchitectural <b>side</b> <b>channels</b> or exploit the same <b>side</b> <b>channel</b> in a novel way. In this paper we present a general mitigation strategy that focuses on the infrastructure used to measure <b>side</b> <b>channel</b> leaks rather than the source of leaks, and thus applies to all known and unknown microarchitectural <b>side</b> <b>channel</b> leaks. Our approach is to limit the fidelity of fine grain timekeeping and performance counters, making it difficult for an attacker to distinguish between different microarchitectural events, thus thwarting attacks. We demonstrate the strength of our proposed security modifications, and validate that our changes do not break existing software. Our proposed changes require minor – or in some cases, no – hardware modifications and do not result in any substantial performance degradation, yet offer the most comprehensive protection against microarchitectural <b>side</b> <b>channels</b> to date. ...|$|R
40|$|<b>Side</b> <b>channel</b> {{construction}} {{is a common}} intervention applied to increase the river's conveyance capacity and to increase its ecological value. Past modelling efforts suggest two mechanisms affecting the morphodynamic change of a side channel: 1) a difference in channel slope between the <b>side</b> <b>channel</b> and the main channel and 2) bend flow just upstream of the bifurcation. The objective {{of this paper is}} to assess the conditions under which <b>side</b> <b>channels</b> generally aggrade or degrade and to assess the characteristic time scales of the associated morphological change. We use a one-dimensional bifurcation model to predict the development of <b>side</b> <b>channel</b> systems and the characteristic time scale for a wide range of conditions. We then compare these results to multitemporal aerial images of four <b>side</b> <b>channel</b> systems. We consider the following mechanisms at the bifurcation to be important for <b>side</b> <b>channel</b> development: sediment diversion due to the bifurcation angle, sediment diversion due to the transverse bed slope, partitioning of suspended load, mixed sediment processes such as sorting at the bifurcation, bank erosion, deposition due to vegetation, and floodplain sedimentation. There are limitations to using a one-dimensional numerical model asit can only account for these mechanisms in a parameterized manner, but the model reproduces general behaviour of the natural <b>side</b> <b>channels</b> until floodplain forming processes become important. The main result is a set of stability diagrams with key model parameters that can be used to assess the development of a <b>side</b> <b>channel</b> system and the associated time scale, which will aid in the future design and maintenance of <b>side</b> <b>channel</b> systems...|$|R
40|$|Abstract In {{order to}} provide {{security}} the electronic devices and their execution systems contain implementations of cryptographic algorithms. This paper explains basic level of <b>side</b> <b>channel</b> attacks and their countermeasure. These countermeasures show the way, how to trounce the <b>side</b> <b>channel</b> attacks and describe an efficient approach to overcome the <b>side</b> <b>channel</b> attacks. Based on this approach, the paper analyzes functions over many other countermeasure...|$|R
40|$|Abstract. In [17], Lubicz and Robert {{generalized}} the Tate pairing {{over any}} abelian variety and more precisely over Theta functions. The {{security of the}} new algorithms {{is an important issue}} for the use of practical cryptography. <b>Side</b> <b>channel</b> attacks are powerful attacks, using the leakage of information to reveal sensitive data. The pairings over elliptic curves were sensitive to <b>side</b> <b>channel</b> attacks. In this article, we study the weaknesses of the Tate pairing over Theta functions when submitted to <b>side</b> <b>channel</b> attacks. Key words: pairing based cryptography, Theta function, <b>side</b> <b>channel</b> attacks, differential power analysis, fault attacks. ...|$|R
40|$|Abstract. This work {{presents}} a novel algorithm {{to quantify the}} rela-tion between three factors that characterize a <b>side</b> <b>channel</b> adversary: the amount of observed <b>side</b> <b>channel</b> leakage, the workload of full key recovery, and its achievable success rate. The proposed algorithm {{can be used by}} security evaluators to derive a realistic bound on the capabilities of a <b>side</b> <b>channel</b> adversary. Furthermore, it provides an optimal strat-egy for combining subkey guesses to achieve any predefined success rate. Hence, it can be used by a <b>side</b> <b>channel</b> adversary to determine whether observed leakage suffices for key recovery before expending computation time. The algorithm is applied to a series of <b>side</b> <b>channel</b> measurements of a microcontroller AES implementation and simulations. A compari-son to related work shows that the new algorithm improves on existing algorithms in several respects...|$|R
40|$|Abstract. For {{the last}} ten years, <b>side</b> <b>channel</b> {{research}} has focused on extracting data leakage with the goal of recovering secret keys of em-bedded cryptographic implementations. For about the same time it has been known that <b>side</b> <b>channel</b> leakage contains information about many other internal processes of a computing device. In this work we exploit <b>side</b> <b>channel</b> information to recover large parts of the program executed on an embedded processor. We present the first complete methodology to recover the program code of a microcontroller by evaluating its power consumption only. Besides well-studied methods from <b>side</b> <b>channel</b> analysis, we apply Hidden Markov Models to exploit prior knowledge about the program code. In addition to quantifying the potential of the created <b>side</b> <b>channel</b> based disassembler, we highlight its diverse and unique application scenarios. ...|$|R
40|$|<b>Side</b> <b>channels</b> {{have been}} {{constructed}} in the Dutch river system to reduce flood risk and to increase the ecological value of the river. Some of these <b>side</b> <b>channels</b> show large aggradation and therefore require regular maintenance. Grain size measurements of the deposited sediment show that {{the bed of the}} <b>side</b> <b>channel</b> contains much finer sediment (0. 2 - 0. 3 mm) than the bed of the main channel (1 - 2 mm). This suggest that sorting occurs at the bifurcation of the <b>side</b> <b>channel</b> which likely affects the equilibrium state and the time scale of the <b>side</b> <b>channel</b> development. The objective is to reproduce the morphodynamic development with a 2 D numerical model that allows for sorting processes. The dimensions of the system are based on the Waal River in the Netherlands...|$|R
40|$|Ischemic {{brain damage}} {{represents}} {{a major source}} of morbidity and mortality in westernized society and poses a significant financial burden on the health care system. To date, few effective therapies have been realized to treat stroke and promising avenues have not proven clinically useful. Recent evidence, however, suggests that <b>channels,</b> <b>pumps,</b> and ionic exchangers are involved in CNS ischemia and ischemic stroke, but the potential contribution of these channels for curing stroke is far less understood than for many other normal and pathological conditions. New Strategies in Stroke Intervention: Ionic <b>Channels,</b> <b>Pumps,</b> and Transporters analyzes the roles played by targets in stroke development and the potential action of drugs modulating these proteins. This book provides a groundbreaking review of these ionic <b>channels,</b> <b>pumps,</b> and transporters as regulators of neuronal ionic homeostasis, providing a better understanding of ischemic brain disorders and the new pharmacological avenues for a cure. It will be a useful tool for researchers working in this field, and any student interested in the physiological, pathophysiological, and pharmacological features of stroke damag...|$|R
40|$|Recent {{studies have}} shown a range of co-residency <b>side</b> <b>channels</b> {{that can be used}} to extract private {{information}} from cloud clients. Unfortunately, addressing these <b>side</b> <b>channels</b> often requires de-tailed attack-specific fixes that require significant modifications to hardware, client virtual machines (VM), or hypervisors. Further-more, these solutions cannot be generalized to future <b>side</b> <b>channels.</b> Barring extreme solutions such as single tenancy which sacrifices the multiplexing benefits of cloud computing, such <b>side</b> <b>channels</b> will continue to affect critical services. In this work, we present Nomad, a system that offers vector-agnostic defense against known and future <b>side</b> <b>channels.</b> Nomad envisions a provider-assisted VM migration service, applying the moving target defense philosophy to bound the information leakage due to <b>side</b> <b>channels.</b> In design-ing Nomad, we make four key contributions: (1) a formal model to capture information leakage via <b>side</b> <b>channels</b> in shared cloud deployments; (2) identifying provider-assisted VM migration as a robust defense for arbitrary side channels; (3) a scalable online VM migration heuristic that can handle large datacenter workloads; and (4) a practical implementation in OpenStack. We show that No-mad is scalable to large cloud deployments, achieves near-optimal information leakage subject to constraints on migration overhead, and imposes minimal performance degradation for typical cloud applications such as web services and Hadoop MapReduce...|$|R
40|$|Part 4 : Operating System and Firmware SecurityInternational audienceMalicious {{third-party}} applications can leak {{personal data}} {{stored in the}} Android system by exploiting <b>side</b> <b>channels.</b> TaintDroid uses a dynamic taint analysis mechanism to control the manipulation of private data by third-party apps [9]. However, TaintDroid does not propagate taint in <b>side</b> <b>channels.</b> An attacker can exploit this limitation to get private data. For example, Sarwar et al. [2] present <b>side</b> <b>channel</b> class of attacks using a medium that might be overlooked by the taint-checking mechanism to extract sensitive data in Android system. In this paper, we enhance the TaintDroid system and we propagate taint in <b>side</b> <b>channels</b> using formal policy rules. To {{evaluate the effectiveness of}} our approach, we analyzed 100 free Android applications. We found that these applications use different <b>side</b> <b>channels</b> to transfer sensitive data. We successfully detected that 35 % 35...|$|R
40|$|At {{the cutting}} edge of today's {{security}} research and development, the SHA- 3 competition evaluates a new secure hashing standard in succession to SHA- 2. The five remaining candidates of the SHA- 3 competition are BLAKE, Grøstl, JH, Keccak, and Skein. While the main focus was on the algorithmic security of the candidates, a <b>side</b> <b>channel</b> analysis has only been performed for BLAKE and Grøstl [1]. In order to equally evaluate all candidates, we identify <b>side</b> <b>channel</b> attacks on JH-MAC, Keccak-MAC, and Skein-MAC and demonstrate the applicability of the attacks by attacking their respective reference implementation. Additionally, we revisit the <b>side</b> <b>channel</b> analysis of Grøstl and introduce a profiling based <b>side</b> <b>channel</b> attack, which emphasizes the importance of <b>side</b> <b>channel</b> resistant hash functions by recovering the input to the hash function using only the measured power consumption...|$|R
40|$|This master thesis deals {{about the}} issues of chip cards’ <b>side</b> <b>channels.</b> <b>Side</b> <b>channels</b> are new method in cryptanalysis. Unlike {{classical}} cryptanalysis, which looks for weaknesses of mathematical structure of algorithms, <b>side</b> <b>channel’s</b> analysis use weaknesses of physical implementation of these algorithms. First part describes chip cards, their usage a security. There is mentioned the issue of cryptographic algorithms and their implementation on smart cards. There are described well-known <b>side</b> <b>channels</b> and examples of their abuse. Practical part of this thesis is focused on a proposal of a laboratory task, which demonstrates power-based <b>side</b> <b>channel</b> attack on smart card. There is designed laboratory workplace for this task, software for measurement and analysis is implemented in development tool LabVIEW. In the last part is this attack realized, the target of this attack is a standard SIM card...|$|R
40|$|In 1996 a <b>side</b> <b>channel</b> was {{excavated}} on 629 {{hectares of}} former agricultural land at Upper Hamburg Bend on the Missouri River in Otoe County, NE. This {{was the first}} <b>side</b> <b>channel</b> constructed on the Missouri River {{in an attempt to}} restore lost aquatic habitat. The initial design was for an approximately 4, 200 m long <b>side</b> <b>channel</b> to be constructed with a 3 m bottom width. Development ofthe site was to be dependent on flows diverted from the main channel of the river with a final projected top width of 61 m. The <b>side</b> <b>channel</b> was completed in the spring, and shortly thereafter the site was subjected to a series of flood events. The <b>side</b> <b>channel</b> has been subjected to periods of both high and low water since opening. We documented physical changes at the site with the aid of aerial photography, acoustic Doppler current profiler (ADCP) surveys, and topographic surveys. By 2010 the <b>side</b> <b>channel</b> was 4, 342 m long with a mean top width of 89. 5 m. Channel development has occurred during periods of high and low water. ADCP surveys established that mean depths and velocities have increased since 2001. An increase in the amount of discharge through the <b>side</b> <b>channel</b> since 2001 has resulted in the loss of some of the shallower and lower velocity habitats. Modifications to the site may be necessary to reverse this loss of shallow, slow water habitat that the <b>side</b> <b>channel</b> was designed to provide. Although new off-channel aquatic habitat has been created, channel development has been impacted by the presence of rock control structures throughout the site. Reducing the number of control structures to the minimum necessary to prohibit the <b>side</b> <b>channel</b> from impacting adjacent properties may allow the continued restoration of lost alluvial processes through the ongoing process of bend development and migration...|$|R
40|$|Agency, Japan. Relations of the {{interfacial}} tension and viscous force in micro gas-liquid counter-current flow The micro gas-liquid counter-current flows were formed in a microchip having a deep <b>side</b> <b>channel</b> and a shallow <b>side</b> <b>channel</b> {{as illustrated in}} Figure S 1. The width and depth of the deep channel are 210 µm and 80 µm, respectively, while those of the shallow channel are 170 µm and 11 µm, respectively. The channel wall of the shallow <b>side</b> <b>channel</b> was modified with ODS. 1 Water flows in the deep <b>side</b> <b>channel</b> and air flows in the shallow <b>side</b> <b>channel.</b> The micro gas-liquid counter-current flow is expected to form when the hydrodynamic pressure is lower than critical Laplace pressure (Figure S 1). The hydrodynamic pressure and Laplace pressure are induced by pressure-driven water flow and {{interfacial tension}}, respectively. In order to verify this hypothesis, the dependence of water flow rates on air flow rates Vair where water flow was leaked from the deep <b>side</b> <b>channel</b> to the shallow <b>side</b> <b>channel</b> was examined. The results are presented in Figure S 2, where the water leakage flow rate (in µL min units) was converted to a pressure difference ∆P by utilizing the Hagen-Poiseuille relationship. The solid line in Figure S 2 indicates theoretical value calculated from the Young-laplace equation as follows. (...|$|R
