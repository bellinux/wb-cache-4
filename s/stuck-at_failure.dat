1|4|Public
40|$|We {{propose a}} StochAstic Fault {{diagnosis}} AlgoRIthm, called Safari, which trades off guarantees of computing minimal diagnoses for computational efficiency. We empirically demonstrate, using the 74 XXX and ISCAS 85 suites of benchmark combinatorial circuits, that Safari achieves several orders-of-magnitude speedup over two well-known deterministic algorithms, CDA ∗ and HA ∗, for multiple-fault diagnoses; further, Safari can compute {{a range of}} multiple-fault diagnoses that CDA ∗ and HA ∗ cannot. We also prove that Safari is optimal {{for a range of}} propositional fault models, such as the widely-used weak-fault models (models with ignorance of abnormal behavior). We discuss the optimality of Safari in a class of strong-fault circuit models with <b>stuck-at</b> <b>failure</b> modes. By modeling the algorithm itself as a Markov chain, we provide exact bounds on the minimality of the diagnosis computed. Safari also displays strong anytime behavior, and will return a diagnosis after any non-trivial inference time. 1...|$|E
40|$|Abstract — As {{the feature}} size of {{transistors}} gets smaller, fabricating them becomes challenging. Manufacturing process follows various corrective design-for-manufacturing (DFM) steps to avoid shorts/opens/bridges. However, {{it is not}} possible to completely eliminate the possibility of such defects. The bridging defects and inline resistances (due to poor contact/open defects) pose obstruction to the switching node and manifest themselves as <b>stuck-at</b> <b>failures</b> under a strict timing constraint. On the other hand, shorts with Vdd or Vss completely block the node from switching. If spare units are not present to replace the defective parts, then such failures cause yield loss. In this paper, we present a fault tolerant technique to leverage the redundancy present in high speed regular circuits such as Kogge-Stone Adder (KSA). Due to its regularity and speed, KSA is widely used in ALU design. In KSA, the carries are computed fast by computing them in parallel. Our technique is based on the fact tha...|$|R
40|$|AbstractThis paper {{describes}} research {{carried out}} using a quadded logic cell (QLC) structure {{with the purpose}} of creating a fault tolerant strategy for stuck-at faults. In order to create the tolerant built-in behaviour, the basic logic elements must have resilience against transistor level <b>stuck-at</b> <b>failures.</b> To achieve this, we add fine-grained redundancy to the transistor structure of the individual logic gates. In our research NAND gates which are been used throughout the QLC design. Simulation data shows that the chosen enhanced NAND gate structure can cope with single random stuck-at fault and if not indicates it through a distinct current indication. The QLC design contains four individual logic units which can be configured to perform four different types of two input logic functions. The QLC contains an interconnection structure that links three logic units to form a logic structure with four inputs and one output. This fixed internal structure revolves clockwise in four steps in a “round-robin” time redundancy scheme to create a set number of results. Through a majority voting a combined overall output result gets generated. Individual comparison of each clock cycle result against the voted result reveals the cycle and logic unit combination in which the faulty result has been generated. In this case alteration of the individual logic unit configuration has been used to generate another set of results for pattern mapping to identify the single logic unit within the QLC. After identification a self-initiated logic unit replacement with a spare unit happens. An additional detection method based on power rail grading of the individual logic units is devised to enable built-in classification of the stuck-at fault occurring within the unit and subsequently to trigger self-repair. These features are intended to be self-coordinated without requiring outside influence, making this resulting design capable of autonomous self-healing under specific failure conditions...|$|R
40|$|One of {{the primary}} draw-backs of the core-based design {{paradigm}} is the limited knowledge of the internal structure and organization of the cores which is provided to the users. This problem is particularly critical {{from the point of}} view of testing, since it forces the designers to rely on the test patterns provided by the core vendors. As a solution that avoids the use of scan-based techniques, we present a test methodology which provides the following capabilities: Test generation for a system containing cores, and testability estimation and improvement of the system components. The methodology can be applied to designs consisting of an arbitrary interconnection of modules, some of which may be cores. Our approach relies on a fault model which allows the identification of an accurate correspondence between functional and <b>stuck-at</b> sources of <b>failure.</b> In addition, a functional DfT technique reduces the design to a feedback-free interconnection eventually improving the testability of so [...] ...|$|R

