0|3055|Public
50|$|Apple {{produces}} the operating system, the computer hardware, the accompanying drivers, AirPort Wi-Fi base <b>stations,</b> and <b>configuration</b> and <b>management</b> software, simplifying Wi-Fi integration, set-up, and maintenance (including security updates). The built-in <b>configuration</b> and <b>management</b> is integrated throughout {{many of the}} operating system's applications and utilities. Mac OS X has Wi-Fi support, including WPA2, and ships with drivers for all of Apple’s current and past AirPort Extreme and AirPort cards. Many third-party manufacturers make compatible hardware along with the appropriate drivers which work with Mac OS X’s built-in <b>configuration</b> and <b>management</b> software. Other manufacturers distribute their own software.|$|R
40|$|AbstractIn this paper, {{first the}} basis of the <b>Configuration</b> <b>Management</b> is defined. Next, how <b>Configuration</b> <b>Management</b> is practiced in {{aerospace}} industry is explored. Further, the current challenges of CM in Aerospace industries are discussed with a brief review of the strategic actions taken by aerospace industry to implement <b>Configuration</b> <b>Management.</b> Last, current trends in <b>Configuration</b> <b>Management</b> are explored...|$|R
40|$|Based on {{the static}} {{structure}} of Lyee programs, a <b>configuration</b> <b>management</b> concept for Lyee software projects is presented. After describing a modularization concept which {{is vital for}} <b>configuration</b> <b>management,</b> the <b>configuration</b> <b>management</b> concept itself is elaborated by showing the involved elements and procedures. Finally, {{the structure of the}} actual <b>configuration</b> <b>management</b> tool is presented and discussed...|$|R
50|$|ANSI/EIA-649 was {{developed}} in 1994, when the Electronic Industries Alliance’s (EIA) G-33 Committee on Data and <b>Configuration</b> <b>Management</b> initiated a task to develop an industry <b>Configuration</b> <b>Management</b> standard. Their goal was to address overall requirements, principles, and best practices in <b>configuration</b> <b>management</b> without mandating the use of specific terminology or approaches on how <b>configuration</b> <b>management</b> (CM) should be implemented in any particular environment.|$|R
40|$|The <b>Configuration</b> <b>Management</b> Plan for the Tank Farm Contractor {{describes}} <b>configuration</b> <b>management</b> {{the contractor}} uses {{to manage and}} integrate its technical baseline with the programmatic and functional operations to perform work. The <b>Configuration</b> <b>Management</b> Plan for the Tank Farm Contractor supports {{the management of the}} project baseline by providing the mechanisms to identify, document, and control the technical characteristics of the products, processes, and structures, systems, and components (SSC). This plan is one of the tools used to identify and provide controls for the technical baseline of the Tank Farm Contractor (TFC). The <b>configuration</b> <b>management</b> plan is listed in the management process documents for TFC as depicted in Attachment 1, TFC Document Structure. The <b>configuration</b> <b>management</b> plan is an integrated approach for control of technical, schedule, cost, and administrative processes necessary to manage the mission of the TFC. <b>Configuration</b> <b>management</b> encompasses the five functional elements of: (1) <b>configuration</b> <b>management</b> administration, (2) <b>configuration</b> identification, (3) configuration status accounting, (4) change control, and (5) <b>configuration</b> <b>management</b> assessments...|$|R
40|$|AbstractÐEven {{though the}} number and variety of {{available}} <b>configuration</b> <b>management</b> systems has grown rapidly {{in the past few}} years, the need for new <b>configuration</b> <b>management</b> systems still remains. Driving this need are the emergence of situations requiring highly specialized solutions, the demand for management of artifacts other than traditional source code and the exploration of entirely new research questions in <b>configuration</b> <b>management.</b> Complicating the picture is the trend toward organizational structures that involve personnel working at physically separate sites. We have developed a testbed to support the rapid development of <b>configuration</b> <b>management</b> systems. The testbed separates <b>configuration</b> <b>management</b> repositories �i. e., the stores for versions of artifacts) from <b>configuration</b> <b>management</b> policies �i. e., the procedures, according to which the versions are manipulated) by providing a generic model of a distributed repository and an associated programmatic interface. Specific <b>configuration</b> <b>management</b> policies are programmed as unique extensions to the generic interface, while the underlying distributed repository is reused across different policies. In this paper, we describe the repository model and its interface and present our experience in using a prototype of the testbed, called NUCM, to implement a variety of <b>configuration</b> <b>management</b> systems. Index TermsÐConfiguration <b>management,</b> <b>configuration</b> <b>management</b> policies, distributed <b>configuration</b> <b>management,</b> policy programming, peer-to-peer, version control. ...|$|R
40|$|This article {{presents}} a <b>configuration</b> <b>management</b> concept for software projects using Lyee methodology. To illustrate this concept, an introduction in <b>configuration</b> <b>management</b> is given. Then, {{the structure of}} Lyee programs is defined by sets and their dependencies. From this structure, the actual <b>configuration</b> <b>management</b> concept is deduced and discussed by rendering the structure for an existing <b>configuration</b> <b>management</b> testbed and describing the involved key players {{as well as the}} necessary procedures...|$|R
40|$|Résumé [...] iv Introduction [...] 1 The Essence of DaSC <b>Configuration</b> <b>Management</b> [...] . 2 DaSC <b>Configuration</b> <b>Management</b> in Harmony [...] . 4 Support Tools for DaSC [...] . 6 How DaSC Differs from Traditional <b>Configuration</b> <b>Management</b> [...] 9 No Check-out [...] . 9 Long Developer Assi [...] ...|$|R
40|$|<b>Configuration</b> <b>management,</b> {{a process}} {{developed}} to control change in complex information technology-based systems, has attracted an increasing {{amount of attention}} from the transportation engineering community. As the intelligent transportation systems (ITS) program accelerates, and transportation departments develop and operate increasingly complex transportation management systems, the need for <b>configuration</b> <b>management</b> grows. This research effort examines the need for <b>configuration</b> <b>management</b> within transportation management systems by exploring the foundations of <b>configuration</b> <b>management,</b> analyzing the key functions of transportation management, surveying transportation officials, and conducting a case study to examine the <b>configuration</b> <b>management</b> process used by the Georgia Department of Transportation. Smith and Smith Page...|$|R
5000|$|November 1981 - December 1985 <b>Configuration</b> <b>Management</b> Officer and Chief, <b>Configuration</b> <b>Management</b> Division, Automated Systems Program Office, Gunter AFB Ala.|$|R
40|$|Adapting <b>Configuration</b> <b>Management</b> for Agile Teams {{provides}} very tangible approaches on how <b>Configuration</b> <b>Management</b> {{with its}} practices and infrastructure {{can be adapted}} and managed in order to directly benefit agile teams. Written by Mario E. Moreira, author of Software <b>Configuration</b> <b>Management</b> Implementation Roadmap, columnist for CM Crossroads online community and writer for the Agile Journal, this unique book provides concrete guidance on tailoring CM for Agile projects without sacrificing the principles of <b>Configuration</b> <b>Management...</b>|$|R
40|$|A <b>configuration</b> <b>management</b> {{concept is}} {{presented}} for software projects using Lyee methodology. To show this concept, an introduction in <b>configuration</b> <b>management</b> is given. Then, {{the structure of}} Lyee programs is redefined by sets and their dependencies. From this redefined structure, the actual <b>configuration</b> <b>management</b> concept is derivated and discussed...|$|R
40|$|The goal of {{this thesis}} is to analyze <b>Configuration</b> <b>management</b> process in a chosen {{organization}} through ITIL Best Practices Library and provide a redesign based on collected materials. Analyzes cover <b>Configuration</b> <b>management</b> and partially Change management processes whose are tightly connected with each other. In theoretical part I focus on general description of analyzed process, its modeling and modeling tools. Next chapters follow up with ITIL Best Practices Library version 3 and CMS (<b>Configuration</b> <b>Management</b> System) usability as a federated system for <b>Configuration</b> <b>management</b> process. In practical part I focus on current state of <b>Configuration</b> <b>management</b> process in analyzed organization and provide advantages and disadvantages. Those are input for redesign of <b>Configuration</b> <b>management</b> process. In {{the end of my}} thesis I compare the original and current redesigned solution and provide a set of advantages and disadvantages coming from this change...|$|R
40|$|Even {{though the}} number and variety of {{available}} <b>configuration</b> <b>management</b> systems has grown rapidly {{in the past few}} years, the need for new <b>configuration</b> <b>management</b> systems still remains. Driving this need are the emergence of situations requiring highly specialized solutions, the demand for management of artifacts other than traditional source code and the exploration of entirely new research questions in <b>configuration</b> <b>management.</b> Complicating the picture is the trend toward organizational structures that involve personnel working at physically separate sites. We have developed a testbed to support the rapid development of <b>configuration</b> <b>management</b> systems. The testbed separates <b>configuration</b> <b>management</b> repositories (i. e., the stores for versions of artifacts) from <b>configuration</b> <b>management</b> policies (i. e., the procedures, according to which the versions are manipulated) by providing a generic model of a distributed repository and an associated programmatic interface. Specific <b>configuration</b> <b>management</b> policies are programmed as unique extensions to the generic interface, while the underlying distributed repository is reused across different policies. In this paper, we describe the repository model and its interface and present our experience in using a prototype of the testbed, called NUCM, to implement a variety of <b>configuration</b> <b>management</b> systems...|$|R
40|$|Abstract: A metainformatics {{symposium}} {{provides an}} excellent opportunity to explore, discuss and investigate how <b>configuration</b> <b>management</b> techniques and principles can be expanded into new fields and how it itself can incorporate techniques from other fields. 1. Software <b>Configuration</b> <b>Management</b> For a long time Software <b>Configuration</b> <b>Management</b> (SCM) has been considered a...|$|R
40|$|Distributed <b>configuration</b> <b>management</b> is {{intended}} to support the activities of projects that span multiple sites. NUCM is a testbed that we are developing to help explore the issues of distributed <b>configuration</b> <b>management.</b> NUCM separates <b>configuration</b> <b>management</b> repositories (i. e., the stores for versions of artifacts) from <b>configuration</b> <b>management</b> policies (i. e., the procedures according to which the versions are manipulated) by providing a generic model of a distributed repository and an associated programmatic interface. Specific <b>configuration</b> <b>management</b> policies are programmed as unique extensions to the generic interface, but the underlying distributed repository is reused across di#erent policies. In this paper, we describe the repository model and its interface, discuss their implementation in NUCM, and present how NUCM {{has been used to}} implement several, rather di#erent, <b>configuration</b> <b>management</b> policies. This work {{was supported in part by}} the Air Force Materiel Command, Rome La [...] ...|$|R
5000|$|ISO20000 {{does not}} {{recognise}} <b>Configuration</b> <b>Management</b> System (CMS) or Service Knowledge Management System (SKMS), {{and so does}} not certify anything beyond <b>Configuration</b> <b>Management</b> Database (CMDB).|$|R
50|$|<b>Configuration</b> <b>Management</b> Version Control (CMVC) is a {{software}} package {{that serves as}} an object repository, and performs software version control, <b>configuration</b> <b>management,</b> and change management functions.|$|R
40|$|This thesis has {{developed}} a Dynamic <b>Configuration</b> <b>Management</b> Framework and implemented a prototype using Puppet Enterprise to support evaluation of the suitability of said framework. The field of research in <b>Configuration</b> <b>Management,</b> specifically in the High Performance Computing Application area for Cloud infrastructures is still under developed and this research contributes greatly to that field of research, serving as a stepping stone for future work to be done. The results from {{the implementation of the}} prototype demonstrates an overwhelming increase in efficiency and reliability of <b>Configuration</b> <b>Management</b> of 77 % to 81 %, and 89 % to 100 % respectively. This assures the framework of two facts. Firstly, the proof that the use of the framework proposed and the <b>Configuration</b> <b>Management</b> tool has a positive effect on efficiency, and secondly, that the reliability of the system <b>Configuration</b> <b>Management</b> increases when compared to a traditional style of <b>Configuration</b> <b>Management,</b> that is - the manual or semi-scripted process. This thesis demonstrates the feasibility on the investment for a <b>Configuration</b> <b>Management</b> tool in use with distributed infrastructure such as the Cloud. The framework proposed also serves as a guideline and process chart for <b>Configuration</b> <b>Management</b> of dynamic packages and High Performance Computing application requirements...|$|R
40|$|This {{document}} {{describes the}} system <b>configuration</b> <b>management</b> activities performed {{in support of}} the Windows Calorimeter Control (WinCal) system, in accordance with Site procedures based on Institute of Electrical and Electronic Engineers (IEEE) Standard 828 - 1990, Standard for Software <b>Configuration</b> <b>Management</b> Plans (IEEE 1990) and IEEE Standard 1042 - 1987, Guide to Software <b>Configuration</b> <b>Management</b> (IEEE 1987) ...|$|R
40|$|Resource Management {{systems have}} been {{attempting}} to undertake automated <b>configuration</b> <b>management.</b> Automated <b>configuration</b> <b>management</b> involves considering user requirements, operator constraints and technical constraints of the system to create a suitable configuration, {{and to create a}} workflow to deploy it. In this article we propose a policy-based model that we have used for automating these <b>configuration</b> <b>management</b> aspects. 1...|$|R
40|$|Abstract. IETF's NETCONF WG {{has taken}} efforts in {{standardizing}} <b>configuration</b> <b>management</b> protocol, which allows high interoperability of <b>configuration</b> <b>management.</b> In addition to interoperability, high performance is also required in <b>configuration</b> <b>management,</b> but many researches have often discarded the performance aspect of it. In order {{to fill that}} void, this paper proposes methods to improve performance with layers of NETCONF. It demonstrates and compares the performance evaluations to verify {{the efficiency of the}} proposed methods. This evaluation {{can be used as a}} guideline to effectively implement NETCONF. Moreover, it also demonstrates the process of performance evaluation of <b>configuration</b> <b>management.</b> 1 Introduction 1 The network <b>configuration</b> <b>management</b> sets up operation values of devices that constitute the network and collects and analyzes the values. For example, it sets up routing parameters of routers or security values of firewalls and monitors the values. A centralized server manages various remote devices for <b>configuration</b> <b>management...</b>|$|R
40|$|<b>Configuration</b> <b>management,</b> as a {{discipline}} for supporting software development, {{has been around for}} half a century and has evolved into standard practice within traditional software development processes. One of the key purposes of <b>configuration</b> <b>management</b> is to control changes made to the software product. Agile development methods are becoming increasingly popular and claim to embrace change. These methods put emphasis on responsiveness to change rather than controlling change. How can these contradicting methodologies co-exist in the one and same project? This paper investigates the integration of <b>configuration</b> <b>management</b> and agile methods by introducing the concept of Lean <b>Configuration</b> <b>Management,</b> and shows how this can support an increased return on investment of the software project. While traditional <b>configuration</b> <b>management</b> evolves around controlling changes of a forecasted plan, lean <b>configuration</b> <b>management</b> is about handling changes in an adaptive way as well as supporting the values of agile development and lean principles...|$|R
50|$|Surround SCM is a {{software}} <b>configuration</b> <b>management</b> application developed by Seapine Software. In 2008 Surround SCM won a Jolt Award in the Change and <b>Configuration</b> <b>Management</b> category.|$|R
40|$|Network {{providers}} are challenged by new requirements for fast and error-free service turn-up. Existing approaches to <b>configuration</b> <b>management</b> such as CLI scripting, device-specific adapters, and entrenched commercial tools are {{an impediment to}} meeting these new requirements. Up until recently, {{there has been no}} standard way of configuring network devices other then SNMP and SNMP is not optimal for <b>configuration</b> <b>management.</b> The IETF has released NETCONF and YANG which are standards focusing on <b>Configuration</b> <b>management.</b> We have validated that NETCONF and YANG greatly simplify the <b>configuration</b> <b>management</b> of devices and services and still provide good performance. Our performance tests are run in a cloud managing 2000 devices. Our work can help existing vendors and service providers to validate a standardized way to build <b>configuration</b> <b>management</b> solutions. ...|$|R
40|$|Software <b>configuration</b> <b>management</b> (SCM or CM) is a {{key element}} of any {{software}} development project. A software engineering environment should not only provide support for software products and software processes in general, but also pay attention to high level software engineering concepts like <b>configuration</b> <b>management.</b> In this paper, we present an overview of our approach to software engineering environments and demonstrate how <b>configuration</b> <b>management</b> can be achieved in such environments with minimal effort by codifying a <b>configuration</b> <b>management</b> model. Issues addressed include the structures and consistency of CM components and their relationships, the definition and activation of CM operations, and the definition of presentation views that facilitate CM activities. keywords: Software <b>configuration</b> <b>management,</b> software engineering environments and tools, software documents, document representation, document manipulation and document presentation...|$|R
40|$|There {{are several}} current {{theoretical}} models used to discuss <b>configuration</b> <b>management,</b> including aspects, closures, and promises. We examine how these models relate to one another, {{and develop a}} overall theoretical framework within which to discuss <b>configuration</b> <b>management</b> solutions. We apply this framework to classify the capabilities of current tools, and develop requirements {{for the next generation}} of <b>configuration</b> <b>management</b> tools...|$|R
40|$|The {{accomplished}} {{analysis of}} scientific publications and research shows the deficient {{disclosure of the}} process for Projects <b>Configuration</b> <b>Management</b> that has the conclusive meaning of their success. There has been used the system approach for the disclosure of the process structure for Projects <b>Configuration</b> <b>Management.</b> There have been signed out two typical parts of projects – project and technological, and organization and technical (management). The essence of four main processes, which are in projects, has been discovered. They are Product <b>Configuration</b> <b>Management,</b> Project <b>Configuration</b> <b>Management,</b> the forming of product configurations, the forming of configurations for material and technical and energetic resources. There have been determined process models of Product <b>Configuration</b> <b>Management</b> and Project <b>Configuration</b> <b>Management.</b> Connections which {{are in the process}} of the concordance models for project and technological works with product configuration models, and configuration models of the project and technological structures and material and technical (energetic) resources with models of appropriate works, have been discovered. Configuration basis of products, the configuration of the project and technological structures, and the configuration of material and technical and energetic resources together with connections which provide their management, from the process structure of Project <b>Configuration</b> <b>Management...</b>|$|R
5000|$|STANAG 4427 is NATO’s {{agreement}} {{on how to}} do <b>configuration</b> <b>management</b> on defense systems. Edition 1 was originally promulgated in 1997 and updated with Edition 2 in 2007. The first iteration of the Standardization Agreement was entitled Introduction of Allied <b>Configuration</b> <b>Management</b> Publications (ACMPs), and it called on ratifying nations to use seven NATO publications (ACMP 1-7) as the agreed upon contractual clauses for <b>configuration</b> <b>management.</b>|$|R
40|$|Existing {{software}} <b>configuration</b> <b>management</b> systems embody a {{wide variety}} of policies for how artifacts can evolve. New policies continue to be introduced. Without a clean separation of <b>configuration</b> <b>management</b> policies from <b>configuration</b> <b>management</b> mechanisms, it is difficult to understand the policies as well as difficult to reason about how they relate. We introduce a formal foundation for specifying <b>configuration</b> <b>management</b> policies by viewing the policies in terms of graph transformation systems. Not only are we able to precisely capture the semantics of individual policies, we can, for the first time, describe formal properties of the relationship between policies...|$|R
40|$|In an {{ever more}} globalized world, there are many {{advantages}} from doing distributed development. However, geographically distributed development is generally recognized as being much more challenging than traditional co-located development and therefore companies are often hesitant to “go distributed”. <b>Configuration</b> <b>management</b> is a basic service that provides the infrastructure for projects and organizations. In this paper, we analyse the role that <b>configuration</b> <b>management</b> can play {{in the context of}} distributed software development. From a <b>configuration</b> <b>management</b> point of view {{a good part of the}} challenges from distributed development can be dealt with by applying traditional <b>configuration</b> <b>management</b> concepts and techniques, many challenges can be alleviated by extended support from <b>configuration</b> <b>management</b> – and then there is a group of challenges left that will have to be dealt with in other ways...|$|R
40|$|This thesis {{deals with}} <b>Configuration</b> <b>Management,</b> {{one of the}} most {{important}} process from ITIL framework. The main purpose of the thesis is not only to describe <b>Configuration</b> <b>Management,</b> but also to identify ITIL and its importance within IT service management. Those goals are reached in the first part of the thesis. The second part contains analysis of <b>Configuration</b> <b>Management</b> process in organization which aims to provide IT services. After the analysis the main components of the process are compared to ITIL best practices. The purpose of the analysis is to provide an example of how can <b>Configuration</b> <b>Management</b> be run in a large organization and also to identify possible weaknesses within the process. In order to eliminate these weaknesses in the second part of the thesis author propose ways to optimize <b>Configuration</b> <b>Management</b> process...|$|R
5000|$|<b>Configuration</b> <b>Management.</b> <b>Configuration</b> <b>management</b> {{helps with}} {{identifying}} the source code for all features {{that have been}} completed to date and to maintain a history of changes to classes as feature teams enhance them.|$|R
40|$|The {{objectives}} {{of this procedure}} are to determine through review of the <b>configuration</b> <b>management</b> and change control program, whether: 01. 01 The licensee or certificate holder has established an effective <b>configuration</b> <b>management</b> system to evaluate, implement, and track each permanent plant modification to the site which could affect safety. 01. 02 The licensee or certificate holder’s <b>configuration</b> <b>management</b> system ensures that permanent plant modifications do not degrade the performance capabilities of items relied on for safety (IROFS) or other safety controls {{that are part of}} the safety design base. 01. 03 The licensee or certificate holder’s <b>configuration</b> <b>management</b> system effectively identifies and resolves the effects of permanent plant modifications to IROFS and other safety controls, processes, equipment, computer programs, and activities of personnel. 88071 - 02 INSPECTION REQUIREMENTS 02. 01 Programmatic Review. This procedure will be performed if, based on the results of an inspection performed according to Inspection Procedure 88070, Plant Safety Modifications, it was determined that there were programmatic or significant noncompliance issues with the licensee or certificate holder’s performance due to the <b>configuration</b> <b>management</b> and change control program. 88071. 03 INSPECTION GUIDANCE 03. 01 Programmatic Review. If the inspection performed according to Inspection Procedure 88070, Plant Safety Modifications, determined that a programmatic review of the licensee or certificate holder’s <b>configuration</b> <b>management</b> system and change control program was necessary, the following inspection guidance should be used: a. <b>Configuration</b> <b>Management.</b> 1. <b>Configuration</b> <b>Management</b> Program. The licensee or certificate holder should have a well developed and documented <b>configuration</b> <b>management</b> program for generation and retention of documents that define the establishment and maintenance of the plant Integrated Safety Analysis (ISA...|$|R
40|$|Even {{though the}} number and variety of {{available}} <b>configuration</b> <b>management</b> systems has grown rapidly {{in the past few}} years, the need for new <b>configuration</b> <b>management</b> systems still remains. Driving this needare the emergence of situations requiring highly specialized solutions, the demand for management of artifacts other than traditional sourcecode, and the exploration of wholely new research questions in <b>configuration</b> <b>management.</b> Complicating the picture is the trend towardorganizational structures that involve personnel working at physically separate sites. We have developed a testbedtosupport the rapid development of <b>configuration</b> <b>management</b> systems. The testbedseparates <b>configuration</b> <b>management</b> repositories (i. e., the stores for versions of artifacts) from <b>configuration</b> <b>management</b> policies (i. e., the procedures according to which the versions are manipulated) by providing a generic model of a distributedrepository and an associatedprogrammatic interface. Specific <b>configuration</b> <b>management</b> policies areprogrammedas unique extensions to the generic interface, while the underlying distributedrepository is reused across different policies. In this paper, we describe the repository model and its interface, and present our experienceinusingaprototype of the testbed, called NUCM, to implement a variety of <b>configuration</b> <b>management</b> systems. This work was supported in part bytheAirForce Materiel Command, Rome Laboratory, and the Advanced Research Projects Agency under Contract Numbers F 30602 - 94 -C- 0253 and F 30602 - 98 - 2 - 0163. The content of the information does not necessarily reflect the position or the policy of the Government and no official endorsement should be inferred. ...|$|R
40|$|Context: <b>Configuration</b> <b>management</b> {{is one of}} the {{important}} support processes within IT. <b>Configuration</b> <b>management</b> is involved in IT phases such as design, development, test and deployment. Stream overview as an important document for communication with teams; it helps people to determining the project strategy. Stream overview generator can {{play an important role in}} <b>configuration</b> <b>management.</b> Objective: This thesis will identify the gap in <b>configuration</b> <b>management.</b> The master thesis project consists of finding a solution to visualize and maintain project stream overview. The research report is valuable to people involved in <b>configuration</b> <b>management</b> who want to improve the work process. Method: Concerning the <b>configuration</b> <b>management</b> in real industry, the research study has been carried out with case study methodology. This thesis was performed at the IXR (Interventional X-Ray) department in Philips healthcare. Results: The necessary visual elements are defined, and the stream overview generator was created based on the research results. The stream overview generator allows configuration managers to create and maintain the stream overview. Conclusion: The stream overviews for planning propose is essential to have a good solution. The proposed model of stream overview generator shows how to deal with the issues on planning and maintaining the stream overview in the <b>configuration</b> <b>management</b> process...|$|R
