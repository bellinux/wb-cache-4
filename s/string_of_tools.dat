1|10000|Public
40|$|As {{competitive}} environments {{become more}} complex, demands for flexible strategic management increase and responses become {{more dependent on}} information technology. Computer Supported Meeting Environments (CSMEs) {{have been successful in}} reducing the time needed for meetings and supporting strategic management processes. Because of its toolkit structure, a CSME is an information technology that allows for process flexibility. Metaplanning expert systems can support the decision to use a specific <b>string</b> <b>of</b> <b>tools</b> for each different client in each different meeting, particularly in strategic management. To develop an appropriate metaplanning expert system and to improve effectiveness and efficiency of using CSME for strategic planning, it is critical to assess both the user competence assumptions and the effectiveness of such system. The purpose of this dissertation is to assess the impact the user's interpretive competence (context sensitivity) and inductive competence (analog awareness) have on the selection of GroupSystems tools and to validate an expert system prototype developed to support the selection of GroupSystems tools in relation to types of user and use. Given the novelty and the interdisciplinary nature of this effort, the initial study is developed to test for differences in relation to interpretive and inductive effects, evaluate individual characteristics, and increase our understanding of the variables at play. The subjects were students in a capstone MBA business policy class. No significant differences were found in relation to context sensitivity. Analog awareness was found to {{have a significant impact on}} the decision of choosing a divergent tool and a people oriented convergent tool. The second study defines, develops, and validates a metaplanning expert system prototype. The prototype can be adapted to other process/stages focused domains that could use a string of GroupSystems tools. The main module of the prototype captures a group profile based on divergence/convergence factors associated with the group and the documentation produced by the CSME. No significant differences were found between facilitators and non-facilitators. Subjects (MIS PhD students) who used the prototype to answer to environmental analysis, strategy formulation, and strategy evaluation test cases scored, significantly better than those who have not used the system...|$|E
50|$|The {{tool string}} {{at the bottom}} of the coil is often called the bottom hole {{assembly}} (BHA). It can range from something as simple as a jetting nozzle, for jobs involving pumping chemicals or cement through the coil, to a larger <b>string</b> <b>of</b> logging <b>tools,</b> depending on the operations.|$|R
5000|$|A major {{application}} of petrophysics is in studying reservoirs for the hydrocarbon industry. Petrophysicists are employed to help reservoir engineers and geoscientists understand the rock {{properties of the}} reservoir, particularly how pores in the subsurface are interconnected, controlling the accumulation and migration of hydrocarbons. [...] Some of the key properties studied in petrophysics are lithology, porosity, water saturation, permeability and density. A key aspect of petrophysics is measuring and evaluating these rock properties by acquiring well log measurements - in which a <b>string</b> <b>of</b> measurement <b>tools</b> are inserted in the borehole, core measurements - in which rock samples are retrieved from subsurface, and seismic measurements. These studies are then combined with geological and geophysical studies and reservoir engineering to give a complete picture of the reservoir.|$|R
40|$|The {{purpose of}} this book is to {{introduce}} string theory without assuming any background in quantum field theory. Part I of this book follows the development of quantum field theory for point particles, while Part II introduces <b>strings.</b> All <b>of</b> the <b>tools</b> and concepts that are needed to quantize strings are developed first for point particles. Thus, Part I presents the main framework of quantum field theory and provides for a coherent development of the generalization and application of quantum field theory for point particles to strings. Part II emphasizes the quantization <b>of</b> the bosonic <b>string.</b> The purpose <b>of</b> this book is to introduce string theory without assuming any background in quantum field theory. Part I of this book follows the development of quantum field theory for point particles, while Part II introduces <b>strings.</b> All <b>of</b> the <b>tools</b> and concepts that are needed to quantize strings are developed first for point particles. Thus, Part I presents the main framework of quantum field theory and provides for a coherent development of the generalization and application of quantum field theory for point particles to strings. Part II emphasizes the quantization of the bosonic str...|$|R
40|$|We {{study the}} time and query {{complexity}} of approximation algorithms that access only a minuscule fraction of the input, focusing on two classical sources of problems: combinatorial graph optimization and manipulation <b>of</b> <b>strings.</b> The <b>tools</b> we develop find applications outside of the area of sublinear algorithms. For instance, we obtain a more efficient approximation algorithm for edit distance and distributed algorithms for combinatorial problems on graphs that run in a constant number of communication rounds...|$|R
40|$|AbstractUsing {{the finite}} element method, {{attempting}} {{to solve the}} serious drilling tools failure in gas drilling, this paper modelled the transient response <b>of</b> <b>string</b> vibration, and worked out the distribution regularity of the transient stress at two different drilling states: gas and mud drilling. Research shows that the stress fluctuation in gas drilling is greater than that in mud drilling; the alternate stress under such two drilling conditions has the same value relationship as those of stress fluctuation. The string vibration level is gradually increasing from the head {{to the bottom of}} the well Thus it is easier to cause the drill string fatigue failure. Such mechanism analysis, which explains the cause <b>of</b> <b>string</b> <b>tools</b> failure, provides guidance in drilling string design optimization...|$|R
2500|$|Thus a [...] "sentence" [...] is a <b>string</b> <b>of</b> symbols, and a theorem is a <b>string</b> <b>of</b> <b>strings</b> <b>of</b> symbols.|$|R
5000|$|... where u is a <b>string</b> <b>of</b> i uniformly random bits, s is a <b>string</b> <b>of</b> l uniformly random bits, and y is a <b>string</b> <b>of</b> l+1 uniformly random bits.|$|R
40|$|Decision {{procedures}} {{have long been}} a fixture in program analysis, and reasoning about string constraints {{is a key element}} in many program analyses and testing frameworks. Recent work on string analysis has focused on providing decision procedures that model string operations. Separating string analysis from its client applications has important and familiar benefits: it enables the independent improvement <b>of</b> <b>string</b> analysis <b>tools</b> and it saves client effort. We present a constraint solving algorithm for equations over string variables. We focus on scalability with regard {{to the size of the}} input constraints. Our algorithm performs an explicit search for a satisfying assignment; the search space is constructed lazily based on an automata representation of the constraints. We evaluate our approach by comparing its performance with that <b>of</b> existing <b>string</b> decision procedures. Our prototype is, on average, several orders of magnitude faster than the fastest existing implementation...|$|R
40|$|The {{present study}} was {{conducted}} to search 200 million digits of π and 1 million digits of e for some pieces of numerically expressed information on ruminant agriculture. The results obtained were as follows. Pieces of numerically expressed information that were found in digits of π were as follows: (1) a <b>string</b> <b>of</b> data on weather condition, (2) a <b>string</b> <b>of</b> data on forage production related to growth days, (3) a <b>string</b> <b>of</b> data on correlation analysis between digestibility and lignin content of forages, (4) a <b>string</b> <b>of</b> data on digestibility improvement by ammonia treatment, (5) a <b>string</b> <b>of</b> data on silage fermentation characteristics of forages, (6) a <b>string</b> <b>of</b> data on forage protein degradation in the rumen, (7) a <b>string</b> <b>of</b> data on basic growth analysis of ruminants, (8) a <b>string</b> <b>of</b> data on economic aspects of ruminant agriculture, (9) a <b>string</b> <b>of</b> data on complementary bases related to DNA structure, (10) a <b>string</b> <b>of</b> data on bases for primers related to the detection study on rumen microbes. Pieces of numerically expressed information that were found in digits of e were as follows: (11) a <b>string</b> <b>of</b> data on bases encoding amino acids. It was suggested that some pieces of numerically expressed information on ruminant agriculture were found in digits ofπ and e...|$|R
40|$|The {{complement}} to decomposition in scientific research is composition. In human language computing, composition {{is achieved by}} way of semantic association and the generation <b>of</b> <b>strings</b> <b>of</b> entities. That generation <b>of</b> <b>strings</b> takes place progressively: e. g., <b>strings</b> <b>of</b> symbols (words), <b>strings</b> <b>of</b> <b>strings</b> (sentences), <b>strings</b> <b>of</b> <b>strings</b> <b>of</b> <b>strings</b> (paragraphs), etc. The mathematical (topological, graph-theoretic) analysis of Roget 2 ̆ 7 s Thesaurus (1962) has opened a door onto a broad vista of potential achievements {{in such areas as}} artificial intelligence and expert systems, through the analysis of concept association, or concept composition...|$|R
30|$|The {{overhead}} for pattern <b>string</b> copy <b>of</b> network data. The pattern <b>string</b> <b>of</b> STRFINDUNI is read during initialization, and {{the pattern}} <b>string</b> <b>of</b> network data {{is stored in}} the form of memory copy. However, the pattern <b>string</b> <b>of</b> network data in MWM is only carried out by the pointer passing, reducing the overhead of application for memory and copy.|$|R
40|$|AbstractComputing in the {{traditional}} sense involves inputs with <b>strings</b> <b>of</b> numbers and symbols rather than words, where words mean probability distributions over input alphabet, and are different from the words in classical formal languages and automata theory. In this paper our goal is to deal with probabilistic finite automata (PFAs), probabilistic Turing machines (PTMs), and probabilistic context-free grammars (PCFGs) by inputting <b>strings</b> <b>of</b> words (probability distributions). Specifically, (i) we verify that PFAs computing <b>strings</b> <b>of</b> words can be implemented by means <b>of</b> calculating <b>strings</b> <b>of</b> symbols (Theorem 1); (ii) we elaborate on PTMs with input <b>strings</b> <b>of</b> words, and particularly demonstrate by describing Example 2 that PTMs computing <b>strings</b> <b>of</b> words may not be directly performed through only computing <b>strings</b> <b>of</b> symbols, i. e., Theorem 1 may not hold for PTMs; (iii) we study PCFGs and thus PRGs with input <b>strings</b> <b>of</b> words, and prove that Theorem 1 does hold for PCFRs and PRGs (Theorem 2); a characterization of PRGs in terms of PFAs, and the equivalence between PCFGs and their Chomsky and Greibach normal forms, {{in the sense that the}} inputs are <b>strings</b> <b>of</b> words, are also presented. Finally, the main results obtained are summarized, and a number of related issues for further study are raised...|$|R
40|$|The family Corivdae, which {{includes}} crows and ravens, contains arguably {{some of the}} most intelligent species the animal kingdom has to offer. Separated from primates by at least 252 million years of evolution, birds bear striking physiological differences from mammals, while displaying similar intellectual abilities. This apparent convergent evolution of intelligence sheds light on what could possibly be a universal phenomenon. While many excellent studies show the abilities of corvids, the majority of them test only captive subjects. This study tested the capabilities of both captive and wild ravens, from three different species. The first portion of the study tested which of the four solutions offered wild ravens would choose when solving a Multi-Access Box. The second portion of the study tested the performance of wild and captive ravens when solving a Multi-Latch Box. The nine raven subjects were split into four different levels of enculturation based on their known histories. Two wild common ravens (Corvus corax) {{on the campus of the}} University of Arizona were level 1, four wild common ravens in the parking lot of a United States Forest Service parking lot were level 2, two captive and trained Chihuahuan ravens (Corvus cryptoleucus) from the Raptor Free Flight program at the Arizona-Sonora Desert Museum comprised level 3, and one captive and trained white-necked raven (Corvus albicollis) made level 4. It is possible to run trials with completely wild and free birds. It was found that ravens prefer direct methods of obtaining food, such as opening doors and pulling <b>strings,</b> instead <b>of</b> <b>tool</b> use. It was also found that while the relationship between enculturation level and success solving a puzzle was not linear, captive birds were the best solvers. The data given here suggest that captivity, training and enrichment history, and enculturation should all be considered when performing cognitive studies with animals...|$|R
40|$|Abstract. A de Bruijn {{sequence}} is a circular binary <b>string</b> <b>of</b> length 2 n that contains each binary <b>string</b> <b>of</b> length n exactly once as a substring. A maximum-density de Bruijn {{sequence is}} a circular binary <b>string</b> <b>of</b> length () () () () n n n n + + + · · · + that contains each binary <b>string</b> <b>of</b> length n with density 0 1 2 m (number of 1 s) between 0 and m, inclusively. In this paper we efficiently generate maximum-density de Bruijn sequences for all values of n and m. When n = 2 m + 1 our result gives a “complement-free de Bruijn sequence ” {{which is a}} circular binary <b>string</b> <b>of</b> length 2 n− 1 that contains each binary <b>string</b> <b>of</b> length n or its complement exactly once as a substring...|$|R
40|$|International audienceIn {{this work}} we {{consider}} the problem <b>of</b> <b>tool</b> path planning for low [...] cost FDM printers when using multiple filaments. Our method is based on three components which together reduce most of the defects found in such prints. Our algorithm first optimizes the orientation (azimuth angle) of the print so as to minimize defects. It then builds a rampart in close proximity of the model. This captures most <b>of</b> the <b>strings</b> <b>of</b> plastic oozing from idle extruders. Finally, we optimize for navigation paths minimizing the apparition of defects...|$|R
40|$|Format: J-Peg; Size: 551 KB; Dimensions: 1112 x 1545 pixels; Resolution: 300 ppiA betrothed girl (inkhehli), Nomlandu, {{as shown}} by her hairstyle also called inkhehli. Beadwork: 1) White beads (ubuhlalu - means bead or beads) round neck; 2) Long <b>string</b> <b>of</b> muti-coloured beads (amaxube - means a mixture <b>of</b> things); 3) <b>String</b> <b>of</b> beads worn bandolier style (ucu lobuhlalu - means a single <b>string</b> <b>of</b> beads); 4) <b>String</b> <b>of</b> beads worn around the belly (ucu lobuhlalu - means a single <b>string</b> <b>of</b> beads); 5) Wristlets (ingusha); 6) Armlets above elbows (ubusengi); 7) Waistband (isifociya - fibre belt worn by women). Leather skirt (isidwaba). Nocombotshe, Msinga district, KwaZulu-Natal Province, South Afric...|$|R
5000|$|... #Caption: Stick {{figure of}} 1.75 meters {{standing}} next to a violin <b>string</b> <b>of</b> [...]33 meters and a long <b>string</b> instrument <b>string</b> <b>of</b> 10 meters.|$|R
50|$|In {{morphological}} parsing, {{an example}} would be inputting a <b>string</b> <b>of</b> letters into the FST, the FST would then output a <b>string</b> <b>of</b> morphemes.|$|R
50|$|The term byte string usually {{indicates}} a general-purpose <b>string</b> <b>of</b> bytes, rather than <b>strings</b> <b>of</b> only (readable) characters, <b>strings</b> <b>of</b> bits, or such. Byte strings often imply that bytes can take any value and any {{data can be}} stored as-is, meaning {{that there should be}} no value interpreted as a termination value.|$|R
40|$|A Thai written text is a <b>string</b> <b>of</b> symbols without {{explicit}} {{word boundary}} markup. A method for a development <b>of</b> a segmentation <b>tool</b> from a corpus of already segmented text is described. The methodology {{is based on}} the technology of competing patterns, evolved from algorithm for English hyphenation...|$|R
5000|$|In his testimony, [...] Joan Lluís Vives {{explains}} the Jeu de Paume comparing the <b>strings</b> <b>of</b> the racquet from that game, played in Paris with drones gut <b>of</b> the sixth <b>string</b> <b>of</b> a guitar. {{the demands of}} a tennis racket stringing regard to the determine the <b>strings</b> <b>of</b> animal intestine are well suited for this use.|$|R
5000|$|The {{approximate}} {{center of}} the wind farm is located about 17 mi west-southwest of Walla Walla, Washington [...] The project consists <b>of</b> two separate <b>strings</b> <b>of</b> 28 and 10 turbines respectively. The center <b>of</b> the western <b>string</b> <b>of</b> 28 turbines is located at about [...] The center <b>of</b> the eastern <b>string</b> <b>of</b> 10 turbines is located at about [...]|$|R
6000|$|... 'The music {{increased}} continually, {{sounding like}} the <b>strings</b> <b>of</b> harps tuned to a forgotten scale, {{and having a}} resonance as searching as the <b>strings</b> <b>of</b> the 'cello.|$|R
40|$|The two {{previous}} papers {{in this series}} introduced a class <b>of</b> infinite binary <b>strings,</b> called two-pattern strings, that constitute a significant generalization of, and include, the much-studied Sturmian <b>strings.</b> The class <b>of</b> two-pattern <b>strings</b> is a union of a sequence of increasing (with respect to inclusion) subclasses T Pλ <b>of</b> two-pattern <b>strings</b> <b>of</b> scope λ, λ = 1, 2, · · ·. Prefixes <b>of</b> two-pattern <b>strings</b> are interesting from the algorithmic point of view (their recognition, generation, and computation of repetitions and near-repetitions) and since they include prefixes of the Fibonnaci and the Sturmian strings, they merit investigation of how many finite two-pattern <b>strings</b> <b>of</b> a given size there are among all binary <b>strings</b> <b>of</b> the same length. In this paper we first consider the frequency fλ(n) of occurrence <b>of</b> two-pattern <b>strings</b> <b>of</b> length n and scope λ among all <b>strings</b> <b>of</b> length n on {a, b}: we show that limn→ ∞ fλ(n) = 0, but that for <b>strings</b> <b>of</b> lengths n ≤ 2 λ, two-pattern <b>strings</b> <b>of</b> scope λ constitute more than one-quarter <b>of</b> all <b>strings.</b> Since the class <b>of</b> Sturmian <b>strings</b> is a subset of two-patter...|$|R
50|$|Normal tuning is eeE-aaA-ddD-ggG, {{with one}} <b>string</b> <b>of</b> each course tuned {{similarly}} to the corresponding <b>string</b> <b>of</b> the four-string bass, {{and the remaining}} two strings tuned to the octave.|$|R
5000|$|By an AEP-related argument, given a channel, length [...] <b>strings</b> <b>of</b> source symbols , {{and length}} [...] <b>strings</b> <b>of</b> channel outputs , we can define a jointly typical {{set by the}} following: ...|$|R
40|$|AbstractThe {{previous}} {{paper in}} this series introduced a class <b>of</b> infinite binary <b>strings,</b> called two-pattern strings, that constitute a significant generalization of, and include, the much-studied Sturmian <b>strings.</b> The class <b>of</b> two-pattern <b>strings</b> is a union of a sequence of increasing (with respect to inclusion) subclasses Tλ <b>of</b> two-pattern <b>strings</b> <b>of</b> scope λ, λ= 1, 2,…. Prefixes <b>of</b> two-pattern <b>strings</b> are interesting from the algorithmic point of view (their recognition, generation, and computation of repetitions and near-repetitions) and since they include prefixes of the Fibonacci and the Sturmian strings, they merit investigation of how many finite two-pattern <b>strings</b> <b>of</b> a given size there are among all binary <b>strings</b> <b>of</b> the same length. In this paper we first consider the frequency fλ(n) of occurrence <b>of</b> two-pattern <b>strings</b> <b>of</b> length n and scope λ among all <b>strings</b> <b>of</b> length n on {a,b}: we show that limn→∞fλ(n) = 0, but that for <b>strings</b> <b>of</b> lengths n⩽ 2 λ, two-pattern <b>strings</b> <b>of</b> scope λ constitute more than one-quarter <b>of</b> all <b>strings.</b> Since the class <b>of</b> Sturmian <b>strings</b> is a subset <b>of</b> two-pattern <b>strings</b> <b>of</b> scope 1, it was natural to focus {{the study of the}} substring complexity <b>of</b> two-pattern <b>strings</b> to those <b>of</b> scope 1. Though preserving the aperiodicity <b>of</b> the Sturmian <b>strings,</b> the generalization to two-pattern strings greatly relaxes the constrained substring complexity (the number of distinct substrings of the same length) <b>of</b> the Sturmian <b>strings.</b> We derive upper and lower bounds on C 1 (k) (the number of distinct substring of length k) <b>of</b> two-pattern <b>strings</b> <b>of</b> scope 1, and we show that it can be considerably greater than that <b>of</b> a Sturmian <b>string.</b> In fact, we describe circumstances in which limk→∞(C 1 (k) −k) =∞...|$|R
40|$|The {{previous}} {{paper in}} this series introduced a class <b>of</b> infinite binary <b>strings,</b> called two-pattern strings, that constitute a significant generalization of, and include, the much-studied Sturmian <b>strings.</b> The class <b>of</b> two-pattern <b>strings</b> is a union of a sequence of increasing (with respect to inclusion) subclasses TλTλ <b>of</b> two-pattern <b>strings</b> <b>of</b> scope λ, λ= 1, 2,…λ= 1, 2,…. Prefixes <b>of</b> two-pattern <b>strings</b> are interesting from the algorithmic point of view (their recognition, generation, and computation of repetitions and near-repetitions) and since they include prefixes of the Fibonacci and the Sturmian strings, they merit investigation of how many finite two-pattern <b>strings</b> <b>of</b> a given size there are among all binary <b>strings</b> <b>of</b> the same length. In this paper we first consider the frequency fλ(n) fλ(n) of occurrence <b>of</b> two-pattern <b>strings</b> <b>of</b> length n and scope λ among all <b>strings</b> <b>of</b> length n on {a,b}{a,b}: we show that limn→∞fλ(n) = 0 limn→∞fλ(n) = 0, but that for <b>strings</b> <b>of</b> lengths n⩽ 2 λn⩽ 2 λ, two-pattern <b>strings</b> <b>of</b> scope λ constitute more than one-quarter <b>of</b> all <b>strings.</b> Since the class <b>of</b> Sturmian <b>strings</b> is a subset <b>of</b> two-pattern <b>strings</b> <b>of</b> scope 1, it was natural to focus {{the study of the}} substring complexity <b>of</b> two-pattern <b>strings</b> to those <b>of</b> scope 1. Though preserving the aperiodicity <b>of</b> the Sturmian <b>strings,</b> the generalization to two-pattern strings greatly relaxes the constrained substring complexity (the number of distinct substrings of the same length) <b>of</b> the Sturmian <b>strings.</b> We derive upper and lower bounds on C 1 (k) C 1 (k) (the number of distinct substring of length k) <b>of</b> two-pattern <b>strings</b> <b>of</b> scope 1, and we show that it can be considerably greater than that <b>of</b> a Sturmian <b>string.</b> In fact, we describe circumstances in which limk→∞(C 1 (k) −k) =∞limk→∞(C 1 (k) −k) =∞...|$|R
50|$|A theorem is {{a symbol}} or <b>string</b> <b>of</b> symbols which is derived by using a formal system. The <b>string</b> <b>of</b> symbols is a logical {{consequence}} of the axioms and rules of the system.|$|R
5000|$|Chiotis’ {{answer was}} rather unexpected; “Mrs. Callas, please explain to Princess Grace that the <b>strings</b> <b>of</b> an {{electric}} guitar vibrate due to electricity, while the <b>strings</b> <b>of</b> a bouzouki vibrate through the heart.” ...|$|R
5000|$|... 1 National Match Course {{consisting}} of one 10-shot slow fire string at 50 yards, two 5-shot <b>strings</b> <b>of</b> timed fire at 25 yards, and two 5-shot <b>strings</b> <b>of</b> rapid fire at 25 yards.|$|R
50|$|Also {{note that}} this only applies to <b>strings</b> <b>of</b> b−1 bits at the {{beginning}} of a code word. Longer <b>strings</b> <b>of</b> identical bits are permitted as long as they straddle a code word boundary.|$|R
50|$|Over {{a period}} <b>of</b> time, <b>strings</b> <b>of</b> Christmas lights {{found their way}} into use in places other than Christmas trees. Soon, <b>strings</b> <b>of</b> lights adorned mantles and doorways inside homes, and ran along the rafters, roof lines, and porch {{railings}} of homes and businesses. In recent times, many city skyscrapers are decorated with long mostly-vertical <b>strings</b> <b>of</b> a common theme, and are activated simultaneously in Grand Illumination ceremonies.|$|R
30|$|Once recognized, the Unicode <b>strings</b> <b>of</b> {{the true}} {{characters}} are concatenated {{to form the}} Unicode <b>string</b> <b>of</b> the complete ligature which is written to a text file in UTF- 8 after verification from a lexicon.|$|R
25|$|Inexpensive <b>strings</b> <b>of</b> {{beads and}} toys {{have been thrown}} from floats to parade-goers {{since at least the}} late 19th century. Until the 1960s, the most common form was multi-colored <b>strings</b> <b>of</b> glass beads made in Czechoslovakia.|$|R
