0|526|Public
40|$|The {{emerging}} markets {{have become a}} new growth opportunity for multinational corporations (MNCs). This {{could be attributed to}} the stagnation of growth within the developed markets and the emergence of strong economic growth within {{emerging markets}}. Yet, MNCs have varying levels of success due to overlooking of certain components lacking in emerging markets, such as infrastructure. Furthermore, the <b>strategic</b> planning and <b>execution</b> <b>frameworks</b> utilised by MNCs are based on assumptions that are valid for the developed markets, but not always for the emerging markets. The objective of this research was to determine if there is a link between the application of specific interrelated principles for defining and executing strategy, defined by Raina (2010), and the financial success of MNCs when entering the emerging markets. The research found that there is clear evidence that if certain of the principles are applied by MNCs when entering the emerging markets, there is evidence of greater financial success. The research concluded that the interrelated strategic principles are a valuable framework to deliver financial success for MNCs entering the emerging markets. Dissertation (MBA) [...] University of Pretoria, 2012. Gordon Institute of Business Science (GIBS) unrestricte...|$|R
5000|$|O’Reilly, C., Caldwell, D., Chatman, J., Lapiz, M., and Self, W. (2010). How Leadership matters: The {{effects of}} {{leadership}} alignment on <b>strategic</b> <b>execution.</b> The Leadership Quarterly.21 (1): 104-113.|$|R
40|$|The {{purpose of}} this article is to explore the most {{effective}} print advertising strategy in terms of message strategy and <b>execution</b> <b>framework</b> for young men in India. Young men (n = 400) watched 20 advertisements in which message strategy and <b>execution</b> <b>framework</b> were manipulated in a 2 × 10 completely crossed factorial design and were asked to rate their attention, comprehension, retention, attitudes and purchase motivation about these advertisements. Results suggest that cognitive message strategy along with comparison as <b>execution</b> <b>framework</b> is the most effective for young men. Findings are then discussed...|$|R
5000|$|Investigation Modules: <b>Execution</b> <b>framework</b> {{for testing}} NDS {{databases}} on target hardware ...|$|R
5000|$|Cloud2Sim leverages Hazelcast as a {{distributed}} <b>execution</b> <b>framework</b> for CloudSim cloud simulations.|$|R
30|$|Pig [20]: A {{high-level}} {{data flow}} language and <b>execution</b> <b>framework</b> for parallel computation.|$|R
5000|$|Triton is an {{open-source}} Pin-based concolic <b>execution</b> <b>framework</b> for x86 and x86-64 binaries.|$|R
5000|$|Cloud2Sim extends CloudSim {{to execute}} on {{multiple}} distributed servers, by leveraging Hazelcast distributed <b>execution</b> <b>framework.</b>|$|R
5000|$|... ∂u∂u {{exploits}} Hazelcast as its distributed <b>execution</b> <b>framework</b> {{for near}} duplicate detection in enterprise data solutions.|$|R
5000|$|... {{coarse-grained}} interoperability, {{referring to}} the nesting of different workflow systems {{in order to achieve}} <b>execution</b> <b>frameworks</b> interoperability; and ...|$|R
30|$|Our {{experimental}} {{validation of}} approach does {{not rely on}} simulations. We use an <b>execution</b> <b>framework</b> that runs on real parallel hardware, for example, the SCC we used in our experiments. This <b>execution</b> <b>framework</b> has been built into the lightweight parallel execution layer (LPEL) middleware, since it already provided a load-balancing dynamic scheduler. Our experimental evaluation indicates that our DVFS strategy for RSPs can significantly reduce energy consumption, even to a half.|$|R
40|$|Abstract. Verificationsystems, test generators, debuggers, and compilers offten {{implement}} a symbolic <b>execution</b> <b>framework.</b> We {{have identified a}} small set of features in ANSI C, MISRA C, and C 0 that may require special treatment or special considerations when migrating a symbolic <b>execution</b> <b>framework</b> for Java to a framework for a C dialect. For some of these language features we have developed symbolic execution rules that are implemented in the KeY-System. ...|$|R
40|$|Domain {{scientists}} synthesize different {{data and}} computing resources {{to solve their}} scientific problems. Making use of distributed execution within scientific workflows is a growing and promising way to achieve better execution performance and efficiency. This paper presents a high-level distributed <b>execution</b> <b>framework,</b> which is designed based on the distributed execution requirements identified within the Kepler community. It also discusses mechanisms to make the presented distributed <b>execution</b> <b>framework</b> easy-to-use, comprehensive, adaptable, extensible and efficient...|$|R
5000|$|MEDIator {{data sharing}} {{synchronization}} platform for medical image archives leverages Infinispan as its distributed in-memory storage, {{as well as}} distributed <b>execution</b> <b>framework.</b>|$|R
40|$|MapReduce is a {{programming}} {{model for}} developing scalable parallel applications for processing large data sets, an <b>execution</b> <b>framework</b> {{that supports the}} programming model and coordinates the execution of programs and an implementation of the programming model and the <b>execution</b> <b>framework.</b> The goal of the thesis is to analyse MapReduce and to use it on two examples of recommender systems. The goal is achieved by developing the computation with MapReduce successfully. At first the programming model and the <b>execution</b> <b>framework</b> are analysed and three implementations for MapReduce: Hadoop MapReduce, MongoDB and MapReduce-MPI Library are compared. It is discovered that Hadoop MapReduce is the most suitable implementation for developing the selected examples of recommender systems as it provides fault tolerance and data reproduction which ensure reliability. Then the selected examples of recommender systems are developed using Cloudera QuickStart VM which is a one node Hadoop cluster...|$|R
30|$|The {{proposed}} Code <b>Execution</b> <b>Framework</b> (CEF) {{will support}} scientists {{to work together}} on the same study during all data preparation and data analysis steps, which could be executed recursively.|$|R
30|$|The rest of {{the paper}} is {{organized}} as follows. Section ‘Background and related work’ gives some background information about problem solving environments, parallel execution services, cloud environments, and workflow management systems. The usage of the CEF {{can be seen in}} Section ‘Usage of the Code <b>Execution</b> <b>Framework</b> within different PSEsFramework within different PSEs.́ In Section ‘Code <b>Execution</b> <b>Framework</b> (CEF) concept’ the CEF is specified and all involved components are defined. Section ‘Implementation’ describes the the prototype implementation. Section ‘Performance tests’ contains the performance results. At the end the open problems and our future work are described in Section ‘Open problems and future work and future work’.|$|R
30|$|In this article, {{we focus}} on the {{development}} of an <b>execution</b> <b>framework</b> that provides lightweight DVFS support for reactive stream processing systems (RSPS). RSPs are a common form of embedded control systems, operating in direct response to inputs from their environment. At the <b>execution</b> <b>framework,</b> {{we focus on}} support for many-core scheduling for parallel execution of concurrent programs. We provide a DVFS strategy for RSPs that is simple and lightweight, to be used for dynamic adaptation of the power consumption at runtime. The simplicity of the DVFS strategy became possible by the sole focus on the application domain of RSPs. The presented DVFS strategy does not require specific assumptions about the message arrival rate or the underlying scheduling method.|$|R
40|$|Machine {{learning}} {{applications are}} increasingly deployed {{not only to}} serve predictions using static models, but also as tightly-integrated components of feedback loops involving dynamic, real-time decision making. These applications pose {{a new set of}} requirements, none of which are difficult to achieve in isolation, but the combination of which creates a challenge for existing distributed execution frameworks: computation with millisecond latency at high throughput, adaptive construction of arbitrary task graphs, and execution of heterogeneous kernels over diverse sets of resources. We assert that a new distributed <b>execution</b> <b>framework</b> is needed for such ML applications and propose a candidate approach with a proof-of-concept architecture that achieves a 63 x performance improvement over a state-of-the-art <b>execution</b> <b>framework</b> for a representative application. Comment: 6 pages, 3 figure...|$|R
40|$|Legacy program {{execution}} system, {{which is}} necessary for Grid to enable users to reuse all legacy programs without reengineering source codes, is still an open problem. We propose General Running Service (GRS) as a legacy program <b>execution</b> <b>framework</b> to solve {{two of the most}} important problems, shielding heterogeneousness of all kinds target system and exactly configuring complex execution environments required by legacy program. In this paper, we first abstract the task model of grid task as the core of our <b>execution</b> <b>framework,</b> following with some conceptions of GRS are provided including application deployment, JSDL job submission and target system adapter. And then the detail of GRS implementation in ChinaGrid Support Platform (CGSP) is provided. Furthermore, the performance of GRS through comparing with GRAM of GT 4 is also evaluated...|$|R
50|$|Cameo Simulation Toolkit {{provides}} {{the first in}} the industry extendable model <b>execution</b> <b>framework</b> based on OMG fUML and W3C SCXML standards. It extends MagicDraw to validate system behavior by executing, animating, and debugging UML 2.0 State machines and Activity models in the context of realistic mock-ups of the intended user interface.|$|R
40|$|We {{describe}} {{and analyze the}} use of a remote <b>execution</b> <b>framework</b> to implement Mobile Code-enhanced Remote Procedure Calls (McRPCs). This uses mobile code to implement a variation of remote procedure call (RPC) which enhances performance for some applications that are latency-bound. The McRPC remote <b>execution</b> <b>framework</b> includes relatively straightforward modifications to standard RPC servers and the addition of untrusted remote execution engines. The untrusted remote execution service permits mobile code to use its CPU, memory, and network in a restricted manner; no accesses to other local resources are permitted. Nevertheless, this sandbox allows latencybound computations to improve performance by using McRPCs in lieu of standard RPCs. The use of McRPCs trades privacy of the client computation and total resource usage for decreased time-tocompletion. While privacy may be lost, no compromise is made on the correctness of the computed results. ...|$|R
50|$|Muskel also {{provides}} non-functional {{features such as}} Quality of Service (QoS); security between task pool and interpreters; and resource discovery, load balancing, and fault tolerance when interfaced with Java / Jini Parallel Framework (JJPF), a distributed <b>execution</b> <b>framework.</b> Muskel {{also provides}} support for combining structured with unstructured programming and recent research has addressed extensibility.|$|R
40|$|This paper {{describes}} the program <b>execution</b> <b>framework</b> {{being developed by}} the Grid Application Development Software (GrADS) Project. The goal of this framework is to provide good resource allocation for Grid applications and to support adaptive reallocation if performance degrades because {{of changes in the}} availability of Grid resources. At the heart of this strategy is the notion of a configurable object program, which contains, in addition to application code, strategies for mapping the application to different collections of resources and a resource selection model that provides an estimate of the performance of the application on a specific collection of Grid resources. This model must be accurate enough to distinguish collections of resources that will deliver good performance from those that will not. The GrADS <b>execution</b> <b>framework</b> also provides a contract monitoring mechanism for interrupting and remapping an application execution when performance falls below acceptable levels...|$|R
40|$|International audienceThis paper {{presents}} a symbolic <b>execution</b> <b>framework</b> devoted to system models, recursively defined by interconnecting component models. Our concern {{is to allow}} one to explicitly define interaction rules between components, while taking into account those rules at the symbolic execution phase. The paper introduces a small set of primitives dedicated to this purpose, together with their associated symbolic execution rules...|$|R
40|$|The Data Activated Liu Graph Engine - DALiuGE - is an <b>execution</b> <b>framework</b> for {{processing}} large astronomical datasets at a scale {{required by the}} Square Kilometre Array Phase 1 (SKA 1). It includes an interface for expressing complex data reduction pipelines consisting of both data sets and algorithmic components and an implementation run-time to execute such pipelines on distributed resources. By mapping the logical view of a pipeline to its physical realisation, DALiuGE separates the concerns of multiple stakeholders, allowing them to collectively optimise large-scale data processing solutions in a coherent manner. The execution in DALiuGE is data-activated, where each individual data item autonomously triggers the processing on itself. Such decentralisation also makes the <b>execution</b> <b>framework</b> very scalable and flexible, supporting pipeline sizes ranging from less than ten tasks running on a laptop to {{tens of millions of}} concurrent tasks on the second fastest supercomputer in the world. DALiuGE has been used in production for reducing interferometry data sets from the Karl E. Jansky Very Large Array and the Mingantu Ultrawide Spectral Radioheliograph; and is being developed as the <b>execution</b> <b>framework</b> prototype for the Science Data Processor (SDP) consortium of the Square Kilometre Array (SKA) telescope. This paper presents a technical overview of DALiuGE and discusses case studies from the CHILES and MUSER projects that use DALiuGE to execute production pipelines. In a companion paper, we provide in-depth analysis of DALiuGE's scalability to very large numbers of tasks on two supercomputing facilities. Comment: 31 pages, 12 figures, currently under review by Astronomy and Computin...|$|R
40|$|Leadership is a {{key element}} in the {{successful}} <b>execution</b> of any <b>strategic</b> plan. It is important to recognize differing perceptions concerning performance of leadership practices across cultures. This study compares leadership practices between the USA and Chile, using the LPI-Self questionnaire developed by Kouzes & Posner (1993) as the instrument for data collection. The results of the study show that significant differences do exist among MBA respondents in the respective countries with Chilean respondents scoring higher than USA respondents on all practice dimensions. The results are of value in understanding how leadership differences impact <b>strategic</b> <b>execution</b> within an organization...|$|R
40|$|Abstract—The {{development}} of Web applications based on Service Oriented Architectures (SOA) is {{challenged by the}} lack of support to the specification of explicit context adaptation policies. As an answer to this issue, we present the Context Aware Workflow <b>Execution</b> <b>framework</b> (CAWE), which enriches SOA with (a) context-aware workflow management; (b) dialog management capabilities supporting the adaptation of the interaction with the individual user, and (c) context-dependent User Interface generation. I...|$|R
40|$|Abstract. The main {{characteristics}} of the Space Mission Operations domain and of the systems currently used for Planning & Scheduling in this domain are briefly introduced. A critique of these systems and a new proposal is presented. We show how this domain challenge the current AI Planning, Scheduling & <b>Execution</b> <b>framework</b> and how this challenge has focus the research done during this first year {{as well as our}} future research plans...|$|R
40|$|The {{number of}} Android based {{smartphones}} is growing rapidly. They are increasingly used for security critical private and business applications, such as online banking or to access corporate networks. This makes them {{a very valuable}} target for an adversary. Up to date, significant or large scale attacks have failed, but attacks are becoming more sophisticated and successful. Thus, security {{is of paramount importance}} for both private and corporate users. In this paper, we give an overview of {{the current state of the}} art of Android security and present our extensible automated exploit <b>execution</b> <b>framework.</b> First, we provide a summary of the Android platform, current attack techniques, and publicly known exploits. Then, we introduce our extensible exploit <b>execution</b> <b>framework</b> which is capable of performing automated vulnerability tests of Android smartphones. It incorporates currently known exploits, but can be easily extended to integrate future exploits. Finally, we discuss how malware can propagate to Android smartphones today and in the future, and which possible threats arise. For example, device-to-device infections are possible if physical access is given...|$|R
40|$|Programming models {{based on}} dynamic {{multithreading}} enable convenient expression of irregular parallel applications by providing high-level {{features such as}} object-oriented programming, a global object name space, and elective concurrency. Despite these programmability advantages, such mod-els have not gained widespread use because they are challenging to implement efficiently on scalable parallel machines due to their dynamic, irregular thread structure (e. g., granularity variations) and un-predictable data access patterns. In this dissertation, we present an <b>execution</b> <b>framework</b> consisting of novel run-time mechanisms that overcome these challenges. The framework separates concerns of local and parallel efficiency, enabling mechanisms to be independently developed and optimized for each. Local efficiency tech-niques, hybrid stack-heap execution and pull messaging, support low-overhead thread management and communication that deliver performance conditioned upon run-time locality and load balance. Parallel efficiency techniques, view caching and a hierarchical load balancing framework, exploit knowledge of application behavior to create good locality and load balance situations at run time, achieving perform-ance robust over computation irregularity. The <b>execution</b> <b>framework</b> has been implemented in the Illinois Concert System, targeting the ICC+...|$|R
50|$|Hadoop {{implements}} a distributed {{data processing}} scheduling and <b>execution</b> environment and <b>framework</b> for MapReduce jobs. Hadoop includes a distributed file system called HDFS which is analogous to GFS in the Google MapReduce implementation. The Hadoop execution environment supports additional {{distributed data processing}} capabilities which are designed to run using the Hadoop MapReduce architecture. These include HBase, a distributed column-oriented database which provides random access read/write capabilities; Hive which is a data warehouse system built on top of Hadoop that provides SQL-like query capabilities for data summarization, ad hoc queries, and analysis of large datasets; and Pig - a high-level data-flow programming language and <b>execution</b> <b>framework</b> for data-intensive computing.|$|R
30|$|The {{performance}} test shows the time improvements while executing a CPU-intensive mathematical calculation. The transfer overhead mainly {{depends on the}} infrastructure used (e.g., local Eucalyptus or Amazon EC 2), the processing speed depends on the VM-type used (e.g., CPU and available memory). If a given calculation can be parallelized by invoking the same method with different parameter sets, the provided easy to use Code <b>Execution</b> <b>Framework</b> will reduce the total execution time rapidly.|$|R
50|$|In September 2005, Miller {{became the}} Assistant Director for Public Affairs at the FBI in Washington, D.C.. In this position, he was tasked with {{overseeing}} the FBI's {{internal and external}} communications, including relations with the news media and handling of fugitive publicity, community relations, and other communications support. Miller also established an Employee Communications Unit to build stronger internal communications to the bureau's 31,000 employees. Among his collateral duties was {{to serve on the}} <b>Strategic</b> <b>Execution</b> Team (SET) to establish performance measurement standards for intelligence operations across the FBI's 56 field offices. The system, adapted from the CompStat process used by major police departments, is overseen by FBI Director Robert Mueller.|$|R
50|$|Although {{strategic}} {{control is a}} general management topic rather than a proscriptive tool, its reliance on feedback on organisational performance {{has resulted in a}} long association with performance management tools such as the balanced scorecard and its derivatives such as the Performance Prism, and with related strategy implementation / <b>execution</b> <b>frameworks</b> such as the ACME framework, the five step process that proposed by Hrebiniak and Joyce., or the approach proposed by Kaplan and Norton in 2001.|$|R
40|$|This book {{constitutes}} the thoroughly refereed {{proceedings of the}} 4 th International Conference on Mobile Wireless Middleware, Operating Systems, and Applications, Mobilware 2011, held in London, UK, in June 2011. The 21 revised full papers presented were carefully reviewed and selected from numerous contributions. The papers are organized in topical sections on mobile systems in education, SOC for mobile Apps (SOC), networking platforms (NW), mobile <b>execution</b> <b>frameworks</b> (MFW), mobile cloud (MC) and distributed execution, and mobile sensor networks...|$|R
