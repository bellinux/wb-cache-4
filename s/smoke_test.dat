60|248|Public
5|$|The two-player {{game has}} the players {{engaged in a}} dogfight between two spaceships set against the {{backdrop}} of a randomly generated background starfield. The game was developed to meet three precepts: to use as much of the computer's resources as possible, to be consistently interesting and therefore have every run be different, and to be entertaining and therefore a game. The game was a multiplayer game because the computer had no resources left over to handle controlling the other ship. After the game's initial development, members of the TMRC worked to improve the game, adding an accurate starfield and a gravitational body, and spread it to the couple dozen other institutions with a PDP-1, a process which continued over the next few years. As the computer was uncomfortable to use for extended periods of time, Kotok and Saunders created a detached control device, essentially an early gamepad. Spacewar was reportedly used as a <b>smoke</b> <b>test</b> by DEC technicians on new PDP-1 systems before shipping, since it was the only available program that exercised every aspect of the hardware. Although the game was widespread for the era, it was still very limited in its direct reach: the PDP-1 was priced at US$120,000 and only 55 were ever sold, many without a monitor, which prohibited Spacewar or any game of the time from reaching beyond a narrow, academic audience. Russell has been quoted as saying that the aspect of the game that he was most pleased with was the number of other programmers it inspired to write their own games.|$|E
5|$|Beginning in {{the summer}} of 1962 and {{continuing}} over the next few years, members of the PDP-1 programming community at MIT, including Russell and the other Hingham Institute members, began to spread out to other schools and employers such as Stanford University and DEC, and as they did they spread the game to other universities and institutions with a PDP-1 computer. As a result, Spacewar was perhaps the first video game to be available outside a single research institute. Over the next decade, programmers at these other institutions began coding their own variants, including features such as allowing more ships and players at once, replacing the hyperspace feature with a cloaking device, space mines, and even a first-person perspective version played on two screens that simulates each pilot's view out of the cockpit. Some of these Spacewar installations also replicated Kotok and Saunders' gamepad. According to a second-hand account heard by Russell while working at DEC, Spacewar was reportedly used as a <b>smoke</b> <b>test</b> by DEC technicians on new PDP-1 systems before shipping {{because it was the only}} available program that exercised every aspect of the hardware. Although the game was widespread for the era, it was still very limited in its direct reach: the PDP-1 was priced at US$120,000 and only 55 were ever sold, most without a monitor and many of the remainder to secure military locations or research labs with no free computer time, which prevented the original Spacewar from reaching beyond a narrow, academic audience. Though some later DEC models, such as the PDP-6, came with Spacewar pre-loaded, the audience for the game remained very limited; the PDP-6, for example, sold only 23 units.|$|E
25|$|Fire Safety - CFEES is {{involved}} in the development of automatic fire and explosion detection and suppression systems for armoured vehicles, and water mist based fire protection Systems for various applications. It also develops lightweight fire protection clothing. A <b>smoke</b> <b>test</b> tunnel for creating fire signatures under various conditions has been installed.|$|E
50|$|Plumbing <b>smoke</b> <b>tests</b> {{are also}} used to find places where pipes will spill fluid, and to check {{sanitary}} sewer systems for places where ground water and storm runoff can enter. <b>Smoke</b> <b>testing</b> is particularly useful {{in places such as}} ventilated sanitary sewer systems, where completely sealing the system is not practical.|$|R
5000|$|... #Subtitle level 2: <b>Smoke</b> <b>testing</b> in {{electronics}} and electrical engineering ...|$|R
5000|$|... #Caption: <b>Smoke</b> <b>testing</b> a {{sanitary}} sewer produces visible smoke at a residence in Springdale, Arkansas ...|$|R
5000|$|... #Caption: MOD-0, <b>smoke</b> <b>test,</b> {{downwind}} rotor configuration, 1982 ...|$|E
50|$|The {{plumbing}} industry {{started using}} the <b>smoke</b> <b>test</b> in 1875.|$|E
50|$|Occasionally, test suites {{are used}} to group similar test cases together. A system might have a <b>smoke</b> <b>test</b> suite that {{consists}} only of smoke tests or a test suite for some specific functionality in the system. It may also contain all tests and signify if a test should {{be used as a}} <b>smoke</b> <b>test</b> or for some specific functionality.|$|E
50|$|<b>Smoke</b> <b>testing</b> {{performed}} {{on a particular}} build {{is also known as}} a build verification test.|$|R
5000|$|... #Caption: A {{sanitary}} sewer manhole in Springdale, Arkansas with smoke coming {{out as a}} result of <b>smoke</b> <b>testing</b> for leaks ...|$|R
50|$|Other {{local exhaust}} devices are <b>smoke</b> <b>tested</b> to {{determine}} if the contaminants they are designed to remove are being adequately captured by the hood.|$|R
5000|$|... is also {{convenient}} as {{a simple}} <b>smoke</b> <b>test</b> on a newly installed, or freshly-updated system.|$|E
50|$|A <b>smoke</b> <b>test</b> {{may be used}} as an {{acceptance}} test prior to introducing a build of software to the main testing process.|$|E
50|$|The main {{keywords}} {{to present}} this standard are correctional facility; detention facility; detention security; fire test; hardware; impact test; locks; and <b>smoke</b> <b>test.</b>|$|E
3000|$|... 1969 Gibson publishes {{paper on}} {{application}} of aircraft to bushfire control and Petersen develops {{an approach to}} <b>smoke</b> <b>testing</b> of detection systems in telephone exchanges.|$|R
50|$|When <b>smoke</b> <b>testing</b> a {{sanitary}} sewer system {{it is helpful}} to partially block off the section of sewer to be tested. This can be done by using a sand bag {{on the end of a}} rope. The sand bag is lowered into the manhole and swung into position to partially block lines. Completely blocking the line can cause water to back up and prevent smoke from escaping through defects. <b>Smoke</b> <b>testing</b> may not be done after rain or when ground water is unusually high as this may also prevent detection of defects.|$|R
50|$|One {{can perform}} <b>smoke</b> <b>tests</b> either {{manually}} or using an automated tool. In {{the case of}} automated tools, the process that generates the build will often initiate the testing.|$|R
5000|$|A <b>smoke</b> <b>test</b> {{is used as}} an {{acceptance}} test prior to introducing a new build to the main testing process, i.e., before integration or regression.|$|E
50|$|A <b>smoke</b> <b>test</b> is {{a method}} for {{determining}} if there is sufficient customer demand for a given value proposition of a product or service to justify building the actual product or service.|$|E
50|$|From annual {{maintenance}} and chimney sweeping to stove installations and industrial boiler cleaning, Blocage and Nest Removal, Camera Surveys, Smoke/Pressure Testing and BS5871 Gas <b>Smoke</b> <b>Test.</b> They also {{carry on the}} old tradition of attending Weddings for good luck.|$|E
50|$|A {{smoke bomb}} is a {{firework}} designed to produce smoke upon ignition. Smoke bombs are useful to airsoft games, paintball games, self-defense and pranks. They {{are also used}} in <b>smoke</b> <b>tests.</b>|$|R
40|$|An {{experimental}} {{program has}} been undertaken to compare hot <b>smoke</b> <b>tests</b> with more realistic fire scenarios. Polyurethane and wood crib are used as the fuel for more realistic cases {{in a series of}} experiments conducted in two warehouses. Seven hot <b>smoke</b> <b>tests,</b> five polyurethane and two wood crib fire tests have been carried out in these large buildings. To demonstrate repeatability, four hot smoke and three polyurethane tests have been done in the smaller building, and three hot <b>smoke</b> <b>tests,</b> two polyurethane and two wood crib tests in the larger building. Flame and gas temperatures, radiation and total heat fluxes, gas velocity, species concentration and mass lost rate have been measured. Video recordings are used to monitor smoke lowering. As an example, the fire scenario in the second building is illustrated in Figure 1 along with the ceiling vents. The warehouse is 55. 2 m in length and 13 m in height with ceiling openings located in the double-pitched (not shown) ceiling. The width is 30. 2 m. In Figure 2, heat release rate calculations are shown for one of the polyurethan...|$|R
50|$|<b>Smoke</b> <b>testing</b> {{consists}} of minimal attempts {{to operate the}} software, designed {{to determine whether there}} are any basic problems that will prevent it from working at all. Such tests can be used as build verification test.|$|R
5000|$|A daily {{build and}} <b>smoke</b> <b>test</b> is among {{industry}} best practices. Smoke testing is also done by testers before accepting a build for further testing. Microsoft claims that after code reviews, [...] "smoke testing {{is the most}} cost-effective method for identifying and fixing defects in software".|$|E
50|$|Fire Safety - CFEES is {{involved}} in the development of automatic fire and explosion detection and suppression systems for armoured vehicles, and water mist based fire protection Systems for various applications. It also develops lightweight fire protection clothing. A <b>smoke</b> <b>test</b> tunnel for creating fire signatures under various conditions has been installed.|$|E
50|$|The {{main feature}} of this tool {{is the ability to}} {{completely}} automatically generate reasonable (in most, but unfortunately not all, cases) input arguments for every API function straight from the library header files. The tool {{can be used as a}} <b>smoke</b> <b>test</b> or fuzzer for a library API to catch serious problems like crashes or program hanging.|$|E
50|$|<b>Smoke</b> <b>tests</b> {{frequently}} run quickly, {{often in}} the order of a few minutes, giving the benefit of quicker feedback and faster turnaround than the running of full test suites, which can take hours - or even days.|$|R
50|$|The term {{derives from}} Eric Ries lean startup {{methodology}} {{and is based}} on <b>smoke</b> <b>testing</b> in a software context. Instead of testing a software product for early fundamental flaws, a business model is tested for the most common flaw: lack of customer demand.|$|R
30|$|A {{test that}} verifies whether a {{component}} {{is up and}} running do not necessarily need to exercise edge-cases of this component specification. Single invocation {{with a set of}} minimum assertions are enough in practise to detect issues caused by a problem at the architecture level, such as a missing dependency. Such <b>tests,</b> referred as <b>smoke</b> <b>tests</b> by engineers are often used to check the validity of fresh deployments. They differ from integration tests, which are specifically designed to exercise specific transaction in the system. Regarding web components, tools such as Selenium for instance, enable QA engineers to quickly automate these simple testing tasks at the GUI level. Such tools are good solutions {{for the development of the}} needed <b>smoke</b> <b>tests.</b>|$|R
50|$|On CPAN, Tang {{initiated}} over 100 Perl projects between June 2001 and July 2006, {{including the}} popular Perl Archive Toolkit (PAR), a cross-platform packaging and deployment tool for Perl 5. {{she is also}} responsible for setting up <b>smoke</b> <b>test</b> and digital signature systems for CPAN. In October 2005, she was a speaker at O'Reilly Media's European Open Source Convention in Amsterdam.|$|E
50|$|When using smoke machines, {{a common}} test is {{to fill the}} venue to the full {{capacity}} with smoke {{to see if there}} are any smoke detectors still live, or if there are any leaks of smoke from the venue sufficient to set off detectors in other parts of the venue being tested. This practice is known as a <b>smoke</b> <b>test.</b>|$|E
50|$|In woodwind {{instrument}} repair, a <b>smoke</b> <b>test</b> involves plugging {{one end of}} {{an instrument}} and blowing smoke into the other to test for leaks. Escaping smoke reveals improperly seated pads and faulty joints (i.e. leaks). After this test the instrument is cleaned to remove nicotine and other deposits left by the smoke. Due to tobacco smoke being used, this test may be hazardous {{to the health of}} the technician in the long run.|$|E
5000|$|Described in {{a repair}} manual {{written in the}} 1930s. <b>smoke</b> <b>testing</b> is {{considered}} obsolete, [...] {{and is no longer}} used by reputable technicians. The usual alternative to smoke is to place a bright light inside the instrument then check for light appearing around pads and joints.|$|R
50|$|<b>Smoke</b> <b>testing</b> {{refers to}} various classes of tests of systems, usually {{intended}} {{to determine whether}} they are ready for more robust testing. The expression probably was first used in plumbing in referring to tests for the detection of cracks, leaks or breaks in closed systems of pipes.|$|R
40|$|Abstract- <b>Smoke</b> <b>testing</b> is an {{end-to-end}} testing which {{determine the}} stability of new build by checking the crucial functionality of the application under test and used as criteria of accepting the new build for detailed testing. Index Terms- Software testing, acceptance testing, agile, build, regression testing, sanity testing I...|$|R
