8|16|Public
2500|$|An {{experimental}} line, with a sixth return wire, was run {{between the}} Euston terminus and Camden Town station of the London and North Western Railway on 25 July 1837. The actual distance {{was only one}} and a half-mile (2.4km), but <b>spare</b> <b>wire</b> had been inserted in the circuit to increase its length. It {{was late in the}} evening before the trial took place. Mr Cooke was in charge at Camden Town, while Mr Robert Stephenson and other gentlemen looked on; and Wheatstone sat at his instrument in a dingy little room, lit by a tallow candle, near the booking-office at Euston. Wheatstone sent the first message, to which Cooke replied, and 'never' said Wheatstone, 'did I feel such a tumultuous sensation before, as when, all alone in the still room, I heard the needles click, and as I spelled the words, I felt all the magnitude of the invention pronounced to be practicable beyond cavil or dispute.' ...|$|E
50|$|The body is {{fitted with}} unsplinterable glass and dipping {{headlamp}} reflectors. The car's <b>spare</b> <b>wire</b> wheel and folding luggage grid are carried at the back.|$|E
5000|$|... "Clean-cut {{beauty in}} the modern trend". [...] "Entirely new frontal design {{including}} a longer bonnet and new-shaped radiator and rear panelling". Syncromesh on all but first gear. Flush direction indicators with automatic return. Bumpers are fitted fore and aft. The <b>spare</b> <b>wire</b> wheel and its tyre are now carried in the boot and the luggage platform on the door can be swivelled to one side. Dip and switch of the headlamps is controlled by a foot button. The Jackall four-wheel hydraulic jacks, workable from inside the car, will raise all four wheels at once or {{the front and back}} ones in pairs. The brakes are of Girling type.|$|E
40|$|Abstract—We {{propose to}} {{partition}} links in a network-on-chip into multiple segments and use <b>spare</b> <b>wires</b> {{at the level}} of each segment to address permanent errors due to manufacturing or wearout defects. Because different segments of the <b>spare</b> <b>wires</b> address different errors from different segments, the proposed reconfigurable link structure can tolerate a larger number of errors with a reduced number of <b>spare</b> <b>wires.</b> The proposed self-repairing segmented link structure is implemented and simulated in Verilog and verified on a Virtex 5 FPGA. Experimental results on area, power consumption, delay, and reliability show that the optimal link is achieved when the link is partitioned into two segments. I...|$|R
5000|$|<b>Spare</b> <b>wires</b> {{and/or a}} {{screwdriver}} {{to connect the}} power source to the ignition and starter wires ...|$|R
40|$|Abstract—The {{yield and}} cost of a {{multi-core}} chip improve significantly through the addition of some spare cores in the system [1]. In this paper, we model the manufacturing and service cost of an NoC with <b>spare</b> <b>wires</b> and routers as well as spare cores. We apply our analysis on an exemplary 9 -core processor and on an Intel 80 -core processor [2], and show that a spare scheme can significantly improve the reliability, reduce the cost, and substitute for the burn-in process. Keywords-SoC; NoC; yield analysis; cost optimization; spare-enhanced resiliency; distributed redundancy; burn-in elimination I...|$|R
50|$|Elastic Interface repair {{involves}} a <b>spare</b> <b>wire</b> that {{is built into}} the bus interface in the connection module that has the same topology and characteristics {{of the rest of the}} nets in the bus. It includes hardware that is able to switch from the bad net in the interface to the spare net (as of now, this operation must be supported by the original manufacturer of the EI bus connector). The connection module is tested at several different process corners such as low and high temperature and low and high voltages. When a net on the interface is known to be bad, the spare net is used on the bus for testing and the bad net is not tested. When the bus does not have a defect, the spare net is tested with the functional nets. In the original design specification for the EI spare, the wire was driven with a constant zero when not used.|$|E
5000|$|An {{experimental}} line, with a sixth return wire, was run {{between the}} Euston terminus and Camden Town station of the London and North Western Railway on 25 July 1837. The actual distance {{was only one}} and a half-mile (2.4 km), but <b>spare</b> <b>wire</b> had been inserted in the circuit to increase its length. It {{was late in the}} evening before the trial took place. Mr Cooke was in charge at Camden Town, while Mr Robert Stephenson and other gentlemen looked on; and Wheatstone sat at his instrument in a dingy little room, lit by a tallow candle, near the booking-office at Euston. Wheatstone sent the first message, to which Cooke replied, and 'never' said Wheatstone, 'did I feel such a tumultuous sensation before, as when, all alone in the still room, I heard the needles click, and as I spelled the words, I felt all the magnitude of the invention pronounced to be practicable beyond cavil or dispute.'In spite of this trial, however, the directors of the railway treated the 'new-fangled' invention with indifference, and requested its removal. In July 1839, however, it was favoured by the Great Western Railway, and a line erected from the Paddington station terminus to West Drayton railway station, a distance of thirteen miles (21 km). Part of the wire was laid underground at first, but subsequently all of it was raised on posts along the line. Their circuit was eventually extended to [...] in 1841, and was publicly exhibited at Paddington as a marvel of science, which could transmit fifty signals a distance of 280,000 miles per minute (7,500 km/s). The price of admission was a shilling (£0.05), and in 1844 one fascinated observer recorded the following: ...|$|E
40|$|According to the ITRS predictions, {{controlling}} manufacturing yield {{is going}} to be a challenging task in future technologies. The effective yield of future FPGA architectures considering configurable logic blocks, switch boxes, connection boxes and routing segments is estimated in this paper. The results show that some degree of redundancy for logic blocks, routing and switch boxes is necessary. However, no more than one spare logic block per cluster, and at most one <b>spare</b> <b>wire</b> is required to obtain a satisfactory effective yield. The results also indicate that it is beneficial to increase logic cluster size of future FPGA architectures for better yield. 1...|$|E
40|$|Abstract-For a {{reconfigurable}} architecture, {{the harvest}} rate is the expected percentage of defect-free processors {{that can be}} connected into the desired topology. In this paper, we give an analytical estimation for the harvest rate of reconfigurable multipipelines based on the following model: There are n pipelines each with m stages, where each stage of a pipeline is defective with identical independent probability 0. 5 and <b>spare</b> <b>wires</b> are provided for reconfiguration. By formulating the &quot;shifting &quot; reconfiguration as weighted chains in a partial ordered set, we prove when n...|$|R
50|$|On the inbound {{flight to}} Malaga the aircraft’s left engine fuel {{advisory}} light became illuminated, indicating a possible {{defect in the}} fuel shut-off valve. On landing, Jet2.com arranged for a spare valve to be fitted but the problem remained. It was not possible for the problem to be resolved before the airport shut for the evening. The following day engineers discovered a wiring defect in the fuel valve circuit which required repairing. As a result Jet2.com sent a specialist engineer and <b>spare</b> <b>wiring</b> from its hangar at Leeds Bradford airport. In the meantime Jet2.com decided to bring another aircraft from Glasgow to take passengers from Malaga to Manchester.|$|R
40|$|We propose link {{structures}} for NoC that have properties for tolerating efficiently transient, intermittent and permanent errors. The protection against transient errors is realized using Hamming coding and interleaving for error detection and retransmission as the recovery method. We introduce two approaches for tackling the intermittent and permanent errors. In the first approach, <b>spare</b> <b>wires</b> are introduced together with reconfiguration circuitry. The other approach uses time redundancy, the transmission is {{split into two}} parts, where the data is doubled. In both structures the presence of permanent or intermittent errors is monitored by analysing previous error syndromes. The links are based on self-timed signaling in which the handshake signals are protected using triple modular redundancy. 1...|$|R
40|$|Abstract—Aggressive MOS {{transistor}} size scaling substan-tially {{increase the}} probability of faults in NoC links due to manufacturing defects, process variations, and chip wire-out effects. Strategies have been proposed to tolerate faulty wires by replacing them with spare ones or by partially using the defective links. However, these strategies either suffer from high area and power overheads, or significantly increase the average network latency. In this paper, we propose a novel flit serialization method, which divides the links and flits into several sections, and serializes flit sections of adjacent flits to transmit them on all available fault-free link sections to avoid the complete waste of defective links bandwidth. Experimental results indicate that our method reduces the la-tency overhead significantly and enables graceful performance degradation, when compared with related partially faulty link usage proposals, and saves area and power overheads by up to 29 % and 43. 1 %, respectively, when compared with <b>spare</b> <b>wire</b> replacement methods. Keywords-Networks-on-Chip; partially faulty link usage; permanent error; flit serialization; I...|$|E
40|$|International audienceThree-dimensional (3 D) {{integration}} is an emerging technology that enables Systems-on-Chip (3 D SoCs) to achieve higher performance at lower power dissipation. In 3 D SoCs, the cumulated {{effects of the}} intra-die and inter-die interconnect parametric variations lead to high fault rates. In this paper, a fault resilient scheme for inter-die and intra-die communication in 3 D SoCs is proposed. <b>Spare</b> <b>wire</b> insertion and error correction codes ensure resilience against permanent and transient faults, respectively. In very-deep sub-micron (VDSM) technologies, single error correction (SEC) capabilities are not enough to ensure the desired reliability levels. In the proposed link, multi-error correction capabilities are achieved by block / interleaved SEC codes. After the interconnect tests, faulty wires are replaced by functional spares, such that the block/interleaved code-words are transmitted only on functional wires. Increasing the wire noise sensitivity and the inter-wire coupling leads to higher error rate. Thus, the codeword size increases and the link area and power overheads go up to ~ 30 %. For high interconnect defect rates the overheads due the configuration logic lead go up to ~ 300 %...|$|E
40|$|Abstract In an on-chip network, roughly 80 % of the {{communication}} faults are transient [9]. Different fault tolerance approaches such as Forward Error Control (FEC), Automatic Repeat Query (ARQ), and multi-path routing have been used and compared in literature for reliable on-chip transmission [15 - 17]. These approaches tolerate transient faults, but they become ineffective {{in the presence of}} permanent faults. Permanent faults on wires occur both during manufacturing and in the field, causing yield degradation and service costs respectively. The overall system cost can be reduced by adding some <b>spare</b> <b>wires</b> per each link of the network to replace the defective wires [15, 18]. Nevertheless, an in-field diagnosis mechanism is required to locate the defective wire and initiates the wire replacement. We propose a comprehensive solution for end-to-end (e 2 e) error correction and online defect diagnosis for on-chip networks. For e 2 e error correction, we propose an interleaved error-locality-aware code that efficiently corrects both random and burst errors. We demonstrate that for 64 -bit wide network links, interleaving four of the proposed code, 2 G 4 L(26, 16), each of which supports 16 -bit data, can correct as many as two random errors or 16 adjacent errors. In order to maintain the error correction capability of the Error Correcting Code (ECC) for transient and intermittent errors, we further propose an e 2 e data gathering and online diagnosis approach that locates the defective wires and replaces them with the <b>spare</b> <b>wires</b> embedded in the network. Our analytical and experimental studies show that under heavy noise, high escape rate, uncertainty about routing, and many other harmful effects, the diagnostic data collected by the proposed approach are accurate enough for the purpose of passive diagnosis. 1...|$|R
40|$|As device sizes shrink, FPGAs are {{increasingly}} prone to manufacturing defects. The ability to tolerate multiple defects is anticipated {{to be very}} important at 45 nm and beyond. One possible approach to this growing problem is to add redundancy to create a defect-tolerant FPGA architecture. Using area, delay and yield metrics, this paper compares two redundancy strategies: a coarse-grain approach using spare rows and columns and a fine-grain approach using <b>spare</b> <b>wires.</b> For low defect levels and large array sizes, the coarse-grain approach offers a lower area overhead, but it is relatively intolerant to an increase in defect count. In contrast, the fine-grain approach has a fixed overhead of up to 50 %, but the architecture can tolerate an increasing number of defects as array size grows. To achieve a similar level of yield recovery, the coarse-grain approach requires an area overhead in excess of 100 %. ...|$|R
5000|$|..... IBM's most robust error {{correction}} to date {{can be found}} in the memory subsystem. A new redundant array of independent memory (RAIM) technology is being introduced to provide protection at the dynamic random access memory (DRAM), dual inline memory module (DIMM), and memory channel level. Three full DRAM failures per rank can be corrected. DIMM level failures, including components such as the controller application specific integrated circuit (ASIC), the power regulators, the clocks, and the board, can be corrected. Memory channel failures such as signal lines, control lines, and drivers/receivers on the MCM can be corrected. Upstream and downstream data signals can be spared using two <b>spare</b> <b>wires</b> on both the upstream and downstream paths. One of these signals can be used to spare a clock signal line (one upstream and one downstream). Together these improvements are designed to deliver System z's most resilient memory subsystem to date.|$|R
40|$|Future process nodes {{have such}} small feature sizes {{that there will}} be an {{increase}} in the number of manufacturing defects per die. For large FPGAs, it will be critical to tolerate multiple defects [6]. We propose a number of changes to the detailed routing architecture of island-style FPGAs to tolerate multiple random, distributed interconnect defects without re-routing and with minimal impact on signal timing. Our scheme is a user option prebuilt into an architecture, requiring + 11 % area for additional multiplexers. Unused (<b>spare)</b> <b>wiring</b> tracks are also needed, bringing total overhead to 24 % to tolerate stuck-at or open faults, or 34 % to include bridging. User circuits that do not fully stress the routing network already have these tracks freely available. The delay penalty is programmable: 5 – 10 % if defect rates are expected to be sufficiently low, but can be as high as 25 % if defect rates are high. Our schemes can tolerate more than 10 interconnect defects for large array sizes of 128 × 128. Unlike row/column redundancy schemes, our schemes are scalable: they naturally tolerate more defects as the FPGA array size increases. This work is the first detailed analysis of fine-grained defect-tolerant schemes in FPGAs. 1...|$|R
50|$|There is a {{simplification}} to this {{which is}} sometimes {{used in the}} case where {{there is only one}} 16-bit (wide) device connected to one or more 8-bit (narrow) devices. Then it is possible to wire all the eight spare data bits and the ninth parity bit together and to terminate them with a single resistor circuit to TERMPOWER. So {{in the case of a}} differential SCSI bus, it is possible to terminate all 18 <b>spare</b> signal <b>wires</b> with just one resistor. This method is not considered good practice, but has been successfully used in some SCSI products.|$|R
40|$|In this article, we {{describe}} RQNoC, a service-oriented Network-on-Chip (NoC) resilient to permanent faults. We characterize the network resources {{based on the}} particular service that they support and, when faulty, bypass them, allowing the respective traffic class to be redirected. We propose two alternatives for service redirection, each having different advantages and disadvantages. The first one, Service Detour, uses longer alternative paths through resources of the same service to bypass faulty network parts, keeping traffic classes isolated. The second approach, Service Merge, uses resources of other services providing shorter paths but allowing traffic classes to interfere with each other. The remaining network resources that are common for all services employ additional mechanisms for tolerating faults. Links tolerate faults using additional <b>spare</b> <b>wires</b> combined with a flit-shifting mechanism, and the router control is protected with Triple-Modular-Redundancy (TMR). The proposed RQNoC network designs are implemented in 65 nm technology and evaluated in terms of performance, area, power consumption, and fault tolerance. Service Detour requires 9 % more area and consumes 7. 3 % more power compared to a baseline network, not tolerant to faults. Its packet latency and throughput {{is close to the}} fault-free performance at low-fault densities, but fault tolerance and performance drop substantially for 8 or more network faults. Service Merge requires 22 % more area and 27 % more power than the baseline and has a 9 % slower clock. Compared to a faultfree network, a Service Merge RQNoC with up to 32 faults has increased packet latency up to 1. 5 to 2. 4 × and reduced throughput to 70 % or 50 %. However, it delivers substantially better fault tolerance, having a mean network connectivity above 90 % even with 32 network faults versus 41 % of a Service Detour network. Combining Serve Merge and Service Detour improves fault tolerance, further sustaining a higher number of network faults and reduced packet latency...|$|R
40|$|Technology scaling has {{proceeded}} into {{dimensions in}} which the reliability of manufactured devices is becoming endangered. The reliability decrease {{is a consequence of}} physical limitations, relative increase of variations, and decreasing noise margins, among others. A promising solution for bringing the reliability of circuits back to a desired level is the use of design methods which introduce tolerance against possible faults in an integrated circuit. This thesis studies and presents fault tolerance methods for network-onchip (NoC) which is a design paradigm targeted for very large systems-onchip. In a NoC resources, such as processors and memories, are connected to a communication network; comparable to the Internet. Fault tolerance in such a system can be achieved at many abstraction levels. The thesis studies the origin of faults in modern technologies and explains the classification to transient, intermittent and permanent faults. A survey of fault tolerance methods is presented to demonstrate the diversity of available methods. Networks-on-chip are approached by exploring their main design choices: the selection of a topology, routing protocol, and flow control method. Fault tolerance methods for NoCs are studied at different layers of the OSI reference model. The data link layer provides a reliable communication link over a physical channel. Error control coding is an efficient fault tolerance method especially against transient faults at this abstraction level. Error control coding methods suitable for on-chip communication are studied and their implementations presented. Error control coding loses its effectiveness in the presence of intermittent and permanent faults. Therefore, other solutions against them are presented. The introduction of <b>spare</b> <b>wires</b> and split transmissions are shown to provide good tolerance against intermittent and permanent errors and their combination to error control coding is illustrated. At the network layer positioned above the data link layer, fault tolerance can be achieved with the design of fault tolerant network topologies and routing algorithms. Both of these approaches are presented in the thesis together with realizations in the both categories. The thesis concludes that an optimal fault tolerance solution contains carefully co-designed elements from different abstraction level...|$|R
2500|$|On 23 March, Trigger (now in the able {{hands of}} Commander Frederick J. [...] "Fritz" [...] Harlfinger II (Class of 1935), and still with [...] "Ned" [...] Beach as exec) {{headed for the}} Palau Islands on her ninth war patrol. In the early morning of 8 April, she {{contacted}} a convoy of approximately 20 large ships with an estimated 25 escorts, and closed to attack. When she raised her periscope, she saw a destroyer [...] away firing at the scope and attempting to ram. The submarine loosed four torpedoes at the convoy and went deep as several more escorts joined the attack. On her way down, she heard four explosions. Trigger ran at [...] or more for 17 hours as six escorts dogged her trail and rained down numerous depth charges. Six exploded extremely close. When the submarine surfaced, her forward torpedo room was flooded to her deck plates, and the hull air induction and most compartments were in about the same condition. The bow planes, trim pump, sound gear, and both radars were all dead. Her radio antenna was grounded, and the submarine could not transmit. The crew spent the next four days making repairs [...] "by use of <b>spares,</b> baling <b>wire,</b> and considerable ingenuity." ...|$|R
40|$|On January 14, 2004, the President of the United States {{unveiled}} {{a new vision}} for robotic and human exploration of space entitled, "A Renewed Spirit of Discovery". As stated by the President in the Vision for Space Exploration (VSE), NASA must " [...] . implement a sustained and affordable human and robotic program to explore {{the solar system and}} beyond " and " [...] . develop new technologies and harness the moon's abundant resources to allow manned exploration of more challenging environments. " A key to fulfilling the goal of sustained and affordable human and robotic exploration will be the ability to use resources that are available at the site of exploration to "live off the land" instead of bringing everything from Earth, known as In-Situ Resource Utilization (ISRU). ISRU can significantly reduce the mass, cost, and risk of exploration through capabilities such as: mission consumable production (propellants, fuel cell reagents, life support consumables, and feedstock for manufacturing & construction); surface construction (radiation shields, landing pads, walls, habitats, etc.); manufacturing and repair with in-situ resources (<b>spare</b> parts, <b>wires,</b> trusses, integrated systems etc.); and space utilities and power from space resources. On January 27 th, 2004 the President's Commission on Implementation of U. S. Space Exploration Policy (Aldridge Committee) was created and its final report was released in June 2004. One of the report's recommendations was to establish special project teams to evaluate enabling technologies, of which "Planetary in situ resource utilization" was one of them. Based on the VSE and the commission's final report, NASA established fifteen Capability Roadmap teams, of which ISRU was one of the teams established. From Oct. 2004 to May 2005 the ISRU Capability Roadmap team examined the capabilities, benefits, architecture and mission implementation strategy, critical decisions, current state-of-the-art (SOA), challenges, technology gaps, and risks of ISRU for future human Moon and Mars exploration. This presentation will provide an overview of the ISRU capability, architecture, and implementation strategy examined by the ISRU Capability Roadmap team, along with a top-level review of ISRU benefits, resources and products of interest, and the current SOA in ISRU processes and systems. The presentation will also highlight the challenges of incorporating ISRU into future missions and the gaps in technologies and capabilities that need to be filled to enable ISRU...|$|R

