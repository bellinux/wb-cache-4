35|319|Public
50|$|Tracks are {{subdivided}} into blocks (or sectors, pages) (see: <b>Storage</b> <b>block</b> and Virtual page).|$|E
50|$|File-based {{replication}} is replicating files at {{a logical}} level rather than replicating at the <b>storage</b> <b>block</b> level. There {{are many different}} ways of performing this. Unlike with storage-level replication, the solutions almost exclusively rely on software.|$|E
50|$|Storage {{systems can}} provide either block {{accessed}} storage, or file accessed <b>storage.</b> <b>Block</b> access is typically delivered over Fibre Channel, iSCSI, SAS, FICON or other protocols. File access is often provided using NFS or SMB protocols.|$|E
5000|$|... {{physical}} storage object identifies free <b>storage</b> <b>blocks</b> in memory ...|$|R
5000|$|Storage alignment, which aligns virtual {{filesystem}} <b>blocks</b> with hypervisor <b>storage</b> <b>blocks</b> {{and physical}} disk blocks for improved {{read and write}} performance in virtual environments ...|$|R
50|$|NoLimits 2 was {{released}} on 10 January 2014. As well as features from the original simulator, NoLimits 2 also includes transfer tracks, <b>storage</b> <b>blocks,</b> greatly improved graphics and more.|$|R
50|$|Croghan Island Mill is a {{historic}} saw mill complex and concrete dam located near Croghan in Lewis County, New York. The mill complex consists of three blocks; the mill building main block, cold <b>storage</b> <b>block,</b> and office block. The main block is a five-by-three-bay, -story gable-roofed structure sheathed in clapboard, approximately 30 feet by 56 feet in size. The cold <b>storage</b> <b>block</b> is a 1-story, gable-roofed addition to {{the north side of}} the main block. The office block is a -story, shed-roofed addition projecting south of the main block. The complex also includes the wheel house and flume box in a -story ell projecting off the main block. The concrete dam was built in 1906 and has an approximately 2-story drop.|$|E
50|$|Global knives have a {{distinctive}} appearance with black dimples {{present on the}} handle and on one model of their <b>storage</b> <b>block.</b> Contrary to popular belief, Global Knives are made out of 2 pieces of metal and TIG welded together at the handle. With the handle being hollow and filled with sand.|$|E
50|$|Memory (storage) in System/360 is {{addressed}} {{in terms of}} 8-bit bytes. Various instructions operate on larger units called halfword (2 bytes), fullword (4 bytes), doubleword (8 bytes), quad word (16 bytes) and 2048 byte <b>storage</b> <b>block,</b> specifying the leftmost (lowest address) of the unit. Within a halfword, fullword, doubleword or quadword, low numbered bytes are more significant than high numbered bytes; this is {{sometimes referred to as}} big-endian. Many uses for these units require aligning them on the corresponding boundaries. Within this article the unqualified term word refers to a fullword.|$|E
5000|$|Data {{coming in}} is stored into [...] "lining space" [...] before it hits real <b>storage</b> <b>blocks.</b> On SSD disks lining space is {{provided}} using NVRAM {{which is not}} cost efficient.|$|R
50|$|The calculators {{includes}} program {{capacity of}} 26 kilobytes. This is divided among <b>storage</b> <b>blocks</b> for programs, statistics, matrices, lists, static and dynamic graphs and their associated settings, functions, recursions, equations, financial data, and variables (all {{of which are}} global). These can be cleared individually or completely in the MEM menu.|$|R
3000|$|... 6 Memory {{generators}} do {{not allow}} all possible values for memory sizes or for bank boundaries: for instance, a memory generator may yield <b>storage</b> <b>blocks</b> with only a multiple of 16 bytes. Although our framework can take into account such kind of constraints, these tests aim to illustrate the algorithms, so no such constraint is imposed.|$|R
5000|$|The company carries {{products}} that provide block, parallel file and object <b>storage.</b> <b>Block</b> storage devices store data in chunks {{with a maximum}} fixed length. Parallel file systems spread the data across more than one storage device to provide redundancy and increase performance. Object file systems separate the file metadata information {{from the rest of}} the file data and store them in separate devices. The Lustre and Spectrum Scale file system is an example of a parallel file system and is supported by DDN’s products, and the InfiniBand communications link is supported by some DDN systems.|$|E
50|$|OpenStack Block Storage (Cinder) {{provides}} persistent block-level {{storage devices}} {{for use with}} OpenStack compute instances. The block storage system manages the creation, attaching and detaching of the block devices to servers. Block storage volumes are fully integrated into OpenStack Compute and the Dashboard allowing for cloud users to manage their own storage needs. In addition to local Linux server storage, it can use storage platforms including Ceph, CloudByte, Coraid, EMC (ScaleIO, VMAX, VNX and XtremIO), GlusterFS, Hitachi Data Systems, IBM Storage (IBM DS8000, Storwize family, SAN Volume Controller, XIV Storage System, and GPFS), Linux LIO, NetApp, Nexenta, Nimble Storage, Scality, SolidFire, HP (StoreVirtual and 3PAR StoreServ families) and Pure <b>Storage.</b> <b>Block</b> storage is appropriate for performance sensitive scenarios such as database storage, expandable file systems, or providing a server with access to raw block level storage. Snapshot management provides powerful functionality for backing up data stored on block storage volumes. Snapshots can be restored or {{used to create a}} new block storage volume.|$|E
5000|$|The {{hard disk}} drives with [...] "NAS" [...] in their name are {{functionally}} {{similar to other}} drives but may have different firmware, vibration tolerance, or power dissipation {{to make them more}} suitable for use in RAID arrays, which are sometimes used in NAS implementations. For example, some NAS versions of drives support a command extension to allow extended error recovery to be disabled. In a non-RAID application, it may be important for a disk drive to {{go to great lengths to}} successfully read a problematic <b>storage</b> <b>block,</b> even if it takes several seconds. In an appropriately configured RAID array, a single bad block on a single drive can be recovered completely via the redundancy encoded across the RAID set. If a drive spends several seconds executing extensive retries it might cause the RAID controller to flag the drive as [...] "down" [...] whereas if it simply replied promptly that the block of data had a checksum error, the RAID controller would use the redundant data on the other drives to correct the error and continue without any problem. Such a [...] "NAS" [...] SATA hard disk drive can be used as an internal PC hard drive, without any problems or adjustments needed, as it simply supports additional options and may possibly be built to a higher quality standard (particularly if accompanied by a higher quoted MTBF figure and higher price) than a regular consumer drive.|$|E
40|$|In this paper, we analyse {{and compare}} the {{techniques}} of algorithmic <b>blocking</b> and (<b>storage</b> <b>blocking</b> with) lookahead for distributed memory LU, LLT and QR factorizations. Concepts and some useful properties of a simplied model of lookahead are explored, including the minimal degree of lookahead required for optimal performance. Issues {{in the implementation of}} lookahead are discussed, which are more involved for the cases of LLT and QR factorizations. It is also explained how hybrid algorithmic blocking and lookahead techniques can be implemented. Implications for parallel linear algebra library design are also discussed. Results are given on the Fujitsu AP 1000 and AP+ multicomputers, which have relatively high communication to computation to speeds. The results indicate that both methods are superior to <b>storage</b> <b>blocking</b> (without lookahead). They also indicate that for such machines, the hybrid method is optimal for smaller matrices, due to savings in communication startups. For larger [...] ...|$|R
40|$|A {{block is}} the basic unit of storage space in {{container}} terminals. This study proposes two methods for optimizing the block size, by considering the throughput requirements of yard cranes (YCs) and the <b>block</b> <b>storage</b> requirements. To estimate the YC performance, cycle-time models of various handling operations of YCs are analytically derived. Two types of container yards are examined: those with blocks that are laid out parallel to the quay and those laid out vertical to the quay. Design of <b>storage</b> <b>blocks</b> Yard cranes Cycle times Container terminals Transportation...|$|R
50|$|Storage in such is {{organised}} as blocks. This emulates {{the type}} of behaviour seen in traditional disk or tape <b>storage.</b> <b>Blocks</b> are identified by an arbitrary and assigned identifier by which they may be stored and retrieved, but this has no obvious meaning in terms of files or documents. A filesystem must be applied {{on top of the}} block-level storage to map 'files' onto a sequence of blocks.|$|R
30|$|Due to {{physical}} limitation of HDDs, {{there have been}} recent efforts to incorporate flash based high-speed, non-volatile secondary memory devices, known as SCMs in data centers. Despite superior random performance of SCMs (or SSDs) over HDDs, replacing disks with SCMs completely for data center deployments doesn’t seem to be feasible economically as well as due to other associated issues discussed briefly in “Secondary <b>storage</b> (<b>block</b> device) characteristics” section [1, 9].|$|E
40|$|Module {{integrated}} converters (MICs) {{have been}} under rapid development for single-phase grid-tied photovoltaic applications. The capacitive energy storage implementation for the double-line-frequency power variation represents a differentiating factor among existing designs. This paper introduces a new topology that places the energy <b>storage</b> <b>block</b> in a series-connected path with the line interface block. This design provides independent control over the capacitor voltage, soft-switching for all semiconductor devices, and full four-quadrant operation with the grid. The proposed approach is analyzed and experimentally demonstrated...|$|E
40|$|Abstract: The present paper {{discusses}} the implementations of sparse matrix-vector products, which are crucial for high performance solutions of large-scale linear equations, on a PC-Cluster. Three storage formats for sparse matrices compressed row <b>storage,</b> <b>block</b> compressed row storage and sparse block compressed row storage are evaluated. Although using BCRS format reduces the execution time but the improvement {{may be limited}} because of the extra work from filled-in zeros. We show {{that the use of}} SBCRS not only improves the performance significantly but reduces matrix storage also. Keywords: Matrix-vector product, compressed storage formats, sparse matrix data structures, locality of matrix, parallel matrix computation, and block-based compressed storage. ...|$|E
40|$|Transistors {{consist of}} {{lower number of}} atoms with every {{technology}} generation. Such atoms may be displaced due to the stress caused by high temperature, frequency and current, leading to failures. NBTI (negative bias temperature instability) {{is one of the}} most important sources of failure affecting transistors. NBTI degrades PMOS transistors whenever the voltage at the gate is negative (logic input “ 0 ”). The main consequence is a reduction in the maximum operating frequency and an increase in the minimum supply voltage of storage structures to cope for the degradation. Many PMOS transistors affected by NBTI can be found in both combinational and <b>storage</b> <b>blocks</b> since they observe a “ 0 ” at their gates most of the time. This paper proposes and evaluates the design of Penelope, an NBTI-aware processor. We propose (i) generic strategies to mitigate degradation in both combinational and <b>storage</b> <b>blocks,</b> (ii) specific techniques to protect individual blocks by applying the global strategies, and (iii) a metric to assess the benefits of reduced degradation and the overheads in performance and power...|$|R
5000|$|HP Cloud <b>Block</b> <b>Storage</b> enables {{organizations}} to store data from HP Cloud Compute instances {{for as long}} as needed. HP Cloud <b>Block</b> <b>Storage</b> is ideal for applications requiring frequent read/write access such as web applications.|$|R
40|$|Network on Chip is {{efficient}} on-chip communication architecture for {{system on}} chip architectures. It enables the integration {{of a large number}} of computational and <b>storage</b> <b>blocks</b> on a single chip. The router is the basic element of NoC. The router architecture can be used for building a NoC with standard topology with low latency and high speed. In this paper, we implement and analyze a 3 x 3 mesh network configuration with routers which can support simultaneous routing requests, with blocking and non blocking inputs...|$|R
40|$|Abstract—We {{forecast}} that {{proper handling}} of unreliable storage blocks (e. g., “bad block management ” in solid-state drives) will remain critical for future systems built with advanced and emerging memory technologies. This paper {{argues that the}} conventional block retirement and sparing approach—a block is retired {{as soon as it}} shows faulty behavior—is overly conservative and inefficient. We observe that {{it is highly unlikely that}} all faulty bits in a <b>storage</b> <b>block</b> manifest errors. Consequently, we propose data dependent sparing, a relaxed block retirement and sparing approach that recycles faulty storage blocks. At small management cost and with less than 1 % sparing, data dependent sparing achieves the same lifetime as the conventional approach with 20 % sparing...|$|E
40|$|Solid-state devices (SSDs) {{have the}} {{potential}} to replace traditional hard disk drives (HDDs) as the de facto storage medium. Unfortunately, there are several decades of spinning-media assumptions embedded in the software stack as an “unwritten contract ” [20]. In this paper, we revisit these system-level assumptions in light of SSDs and find that several of them are invalidated by SSDs, breaking the unwritten contract and resulting in poor performance and lifetime. The underlying cause is the incorrect division of labor between file systems and <b>storage.</b> <b>Block</b> management must be removed from the file system and delegated to the SSD to prevent further accumulation of storage-specific assumptions. We find that object-based storage is an appropriate way to achieve this. ...|$|E
30|$|In this section, {{we first}} briefly present the working of the Linux I/O stack in “Linux I/O stack” section {{followed}} by the additional features of the OS block layer in “OS block layer: additional features” section. In “Secondary <b>storage</b> (<b>block</b> device) characteristics” section, we discuss the physical characteristics of secondary storage devices like HDDs and SCMs used in modern data centers. “Hadoop MapReduce: working and workload characteristics” and “Requirements from a block I/O scheduler in Big Data deployments” sections discuss the I/O workload characteristics of Hadoop deployments and the requirements from a I/O scheduler in such environments, respectively. “Issues with current I/O schedulers” section describes the working of the current state-of-the-art Linux disk schedulers deployed in shared Big Data infrastructure.|$|E
50|$|The Storwize V7000 Unified {{combines}} two head units running IBM Storwize File Module Software {{with the}} IBM Storwize V7000 <b>block</b> <b>storage</b> system. It {{is described as}} unified storage because it simultaneously implements NAS protocols (such as SMB and NFS) and <b>block</b> <b>storage.</b> It leverages IBM Spectrum Scale software capabilities.|$|R
40|$|NBTI {{is one of}} {{the most}} {{important}} sources of failure affecting transistors. NBTI degrades PMOS transistors whenever the voltage at the gate is negative (logic input “ 0 ”). Memory cells of <b>storage</b> <b>blocks</b> (e. g., register files) observe a “ 0 ” in the input of one of the two inverters at least 50 % of the time. This paper proposes a new memory-cell design for highly-ported structures consisting in a number of NAND gates arranged in a ring-manner that allows reducing the maximum degradation ratio due to NBTI below 50 %. 1...|$|R
30|$|All {{components}} of the web application share an Azure data platform consisting of an SQL database (structured data tables), Cloud Tables (loosely associated data tables), and Blob <b>Storage</b> (<b>blocks</b> of unstructured data). The application database contains data from over 4  million wells, including well logs, reservoir properties, field measurements, drilling, completion, and production records. The majority of the data is saved in the Blob to reduce cost. Metadata are created and saved in the SQL database to help query and search through Cloud Tables and Blob Storage to find and locate {{a specific type of}} data in a time-efficient manner.|$|R
40|$|Abstract: The {{concept of}} energy saving {{management}} {{system based on}} intelligent agent and embedded technology is represented here. This system is designed for management of hybrid renewable energy system (HRES). For testing of suggested approach the prototype grid of energy consumption, production and storage was designed. This grid contains energy consumption block, production block, inner <b>storage</b> <b>block,</b> external supplier block, local data acquisition modules and embedded controller (EC). The design of management system is presented: hardware level with input/output device, embedded controller and super-controller devices. The formalization of intelligent agents for both side is represented next. Internal agents are autonomic agent, local agent seller (LAS) and local agent buyer (LAB). LAS and LAB agents use forecast methods for generation o...|$|E
30|$|There {{is a huge}} {{industrial}} and academic focus to incorporate NVMe’s (SSDs) into data-centers, with developments such as NVMe Express utilizing PCIe bus technology and NVMe over RDMA Fabrics for point-to-point interconnect [3, 12]. Though hard drives wont be replaced by NVMe devices (SSDs) in the near future, more prominently due to SSD’s high TCO (cost/GB, write amplification, lifespan) [24], lack of consistent software stack (fabrics, interface and media characteristics) as well as non-uniform workload performance characteristics [1, 3, 9] (refer to “Secondary <b>storage</b> (<b>block</b> device) characteristics” section). A hybrid approach with heterogeneous tiers of storage such as those having HDDs and SCMs coupled with workload aware tiering to balance cost, performance and capacity have become increasingly popular [4, 23]. Multi-tier storage environment deal with how data is managed between heterogeneous tiers of storage in enterprise data-center environment.|$|E
40|$|For the {{wireless}} communication, IEEE 802. 11 {{is one of}} the protocols available. The IEEE 802. 11 b uses the medium access control layer (MAC) for wireless local area network. These wireless local area networks use Carrier Sense multiple access with collision avoidance (CSMA/CS) for the MAC layer. But only the MAC layer for transmitter is considered here for simulation. So, the Wi-Fi transmitter module is divided into 5 blocks i. e. Data Unit Interface block, Controller block, Pay Load Data Storage, MAC Header Register block and Data Processing block. In this paper we consider only the simulation of MAC header register blocks. So, other blocks i. e. Data unit interface block, Controller block, pay load Data <b>Storage</b> <b>block</b> & Data Processing block are not discussed further in this paper. A field programmable gate array (FPGA) device has been used as the hardware implementation platform. The proposed MAC-layer hardware is implemented with Xilinx xcv 300 e Virtex E FPG...|$|E
50|$|In {{computer}} operating systems, mkfs is {{a command}} used to format a <b>block</b> <b>storage</b> device {{with a specific}} filesystem. The command is part of UNIX and UNIX-like operating systems. In UNIX, a <b>block</b> <b>storage</b> device must be formatted with a file system {{before it can be}} mounted and accessed through the operating system's filesystem hierarchy.|$|R
5000|$|CompactFlash Revision 5.0 (2010) added {{a number}} of features, {{including}} 48-bit addressing (supporting 128 Petabyte of <b>storage),</b> larger <b>block</b> transfers of up to 32 Megabytes, quality-of-service and video performance guarantees, and other enhancements ...|$|R
50|$|As a result, LIO {{provides}} a generalized model to export <b>block</b> <b>storage.</b>|$|R
