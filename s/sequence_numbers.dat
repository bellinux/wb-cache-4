383|6275|Public
25|$|Estrogen {{receptor}} alpha and beta show significant overall sequence homology, {{and both}} are composed of five domains designated A/B through F (listed from the N- to C-terminus; amino acid <b>sequence</b> <b>numbers</b> refer to human ER).|$|E
25|$|The data {{transfer}} protocol, RTP, facilitates {{the transfer of}} real-time data. Information provided by this protocol include timestamps (for synchronization), <b>sequence</b> <b>numbers</b> (for packet loss and reordering detection) and the payload format which indicates the encoded format of the data.|$|E
25|$|An RTP sender {{captures the}} {{multimedia}} data, then encodes, frames and transmits it as RTP packets with appropriate timestamps and increasing <b>sequence</b> <b>numbers.</b> Depending on the RTP profile in use, the sender may set the Payload Type field. The RTP receiver captures the RTP packets, detects missing packets, and may reorder packets. It decodes the frames {{according to the}} payload format and presents the stream to its user.|$|E
5000|$|The {{received}} <b>sequence</b> <b>number</b> is {{the last}} <b>sequence</b> <b>number</b> received by this sender.|$|R
5000|$|S: <b>Sequence</b> <b>number</b> bit. Set to 1 if a <b>sequence</b> <b>number</b> is present.|$|R
50|$|If the SYN flag is set (1), {{then this}} is the initial <b>sequence</b> <b>number.</b> The <b>sequence</b> <b>number</b> of the actual first data byte and the {{acknowledged}} number in the corresponding ACK are then this <b>sequence</b> <b>number</b> plus 1.|$|R
25|$|Enter {{the modern}} OEIS A {{number of the}} sequence, with the letter A and with or without zero-padding. As of 2006, the old M and N <b>sequence</b> <b>numbers</b> will yield the proper result as search strings, e.g., a search for M0422 will {{correctly}} bring up , the number of entries in nth row of Pascal's triangle not divisible by 3 (M0422 in the book The Encyclopedia of Integer Sequences) and not , concatenation of numbers from n down to 1.|$|E
25|$|Sequence number: (16 bits) The {{sequence}} number is incremented by {{one for each}} RTP data packet sent and {{is to be used}} by the receiver to detect packet loss and to restore packet sequence. The RTP does not specify any action on packet loss; it is left to the application to take appropriate action. For example, video applications may play the last known frame in place of the missing frame. According to , the initial value of the {{sequence number}} should be random to make known-plaintext attacks on encryption more difficult. RTP provides no guarantee of delivery, but the presence of <b>sequence</b> <b>numbers</b> makes it possible to detect missing packets.|$|E
2500|$|Another {{important}} vulnerability {{is present}} in the last step in the authentication scheme when TLS / SSL are not used: the redirect-URL from the Identity Provider to the Relying Party. The problem with this redirect is the fact that anyone who can obtain this URL (e.g. by sniffing the wire) can replay it and get logged into the site as the victim user. Some of the Identity Providers use nonces (number used once) to allow a user to log into the site once and fail all the consecutive attempts. The nonce solution works if the user is the first one to use the URL. However a fast attacker who is sniffing the wire can obtain the URL and immediately reset a user's TCP connection (as an attacker is sniffing the wire and knows the required TCP <b>sequence</b> <b>numbers)</b> and then execute the replay attack as described above. Thus nonces only protect against passive attackers but cannot prevent active attackers from executing the replay attack. [...] Use of TLS/SSL in the authentication process eliminates this risk.|$|E
5000|$|<b>Sequence</b> <b>number</b> flag(S): a 1-bit {{value that}} states {{whether there is}} a <b>Sequence</b> <b>Number</b> {{optional}} field.|$|R
50|$|When A sends a message, it resends it continuously, {{with the}} same <b>sequence</b> <b>number,</b> until it {{receives}} an acknowledgment from B that contains the same <b>sequence</b> <b>number.</b> When that happens, A complements (flips) the <b>sequence</b> <b>number</b> and starts transmitting the next message.|$|R
5000|$|Transmission <b>sequence</b> <b>number</b> (TSN) : The <b>sequence</b> <b>number</b> for {{the entire}} DATA stream (used in {{fragmentation}} for reassembly).|$|R
50|$|A {{means of}} {{comparing}} two <b>sequence</b> <b>numbers</b> i1 and i2 (the unsigned integer representations of <b>sequence</b> <b>numbers</b> s1 and s2) is presented.|$|E
5000|$|... #Caption: TCP <b>sequence</b> <b>numbers</b> {{and receive}} windows behave {{very much like}} a clock. The receive window shifts each time the {{receiver}} receives and acknowledges a new segment of data. Once it runs out of <b>sequence</b> <b>numbers,</b> the sequence number loops back to 0.|$|E
5000|$|DCCP has {{the option}} {{for very long}} (48-bit) <b>sequence</b> <b>numbers</b> {{corresponding}} to a packet ID, rather than a byte ID as in TCP. The long length of the <b>sequence</b> <b>numbers</b> aims to guard against [...] "some blind attacks, such as the injection of DCCP-Resets into the connection".|$|E
25|$|Numbering {{subsequent}} Application {{records with}} a <b>sequence</b> <b>number</b> and using this <b>sequence</b> <b>number</b> {{in the message}} authentication codes (MACs).|$|R
5000|$|S: <b>Sequence</b> <b>number</b> bit. Set to 1 if a <b>sequence</b> <b>number</b> is supplied, {{indicating}} a PPTP GRE data packet.|$|R
5000|$|Numbering {{subsequent}} Application {{records with}} a <b>sequence</b> <b>number</b> and using this <b>sequence</b> <b>number</b> {{in the message}} authentication codes (MACs).|$|R
5000|$|... #Caption: <b>Sequence</b> <b>numbers</b> modulo 4, with wr=1. Initially, nt=nr=0 ...|$|E
50|$|Specifies whether 3 or 7 bit <b>sequence</b> <b>numbers</b> are in use.|$|E
5000|$|... usn: Update <b>Sequence</b> <b>Numbers</b> (as in Microsoft AD, not yet released) ...|$|E
50|$|The {{protocol}} may be initialized {{by sending}} bogus messages and acks with <b>sequence</b> <b>number</b> 1. The first message with <b>sequence</b> <b>number</b> 0 {{is a real}} message.|$|R
50|$|It is a ten-digit {{number with}} the format DDMMYY-SSSS, where DDMMYY is {{the date of}} birth and SSSS is a <b>sequence</b> <b>number.</b> The first digit of the <b>sequence</b> <b>number</b> encodes the century of birth (so that centenarians are {{distinguished}} from infants), and the last digit of the <b>sequence</b> <b>number</b> is odd for males and even for females.|$|R
5000|$|Stream <b>sequence</b> <b>number</b> : Identifier of the <b>sequence</b> <b>number</b> for {{the message}} in this stream. If a message is {{fragmented}} then this value is maintained for all fragments.|$|R
5000|$|So, if {{we simply}} re-cast <b>sequence</b> <b>numbers</b> as 2's {{complement}} integers, and allow {{there to be}} one more sequence number considered [...] "less than" [...] than there are <b>sequence</b> <b>numbers</b> considered [...] "greater than", {{we should be able}} to use simple signed arithmetic comparisons instead of the logically incomplete formula proposed by the RFC.|$|E
5000|$|Many {{communication}} protocols apply serial number arithmetic to packet <b>sequence</b> <b>numbers</b> in their {{implementation of a}} sliding window protocol. Some versions of TCP use [...] protection against wrapped <b>sequence</b> <b>numbers</b> (PAWS). PAWS applies the same serial number arithmetic to packet timestamps, using the timestamp {{as an extension of}} the high-order bits of the sequence number.|$|E
5000|$|It {{is easy to}} {{see that}} the signed {{interpretation}} of the <b>sequence</b> <b>numbers</b> are in the correct order, so long as we [...] "rotate" [...] the sequence number in question so that its 0 matches up with the sequence number we are comparing it against. It turns out that this is simply done, using an unsigned subtraction, and simply interpreting the result as a signed two's complement number. The result is the signed [...] "distance" [...] between the two <b>sequence</b> <b>numbers.</b> Once again, if i1 and i2 are the unsigned binary representations of the <b>sequence</b> <b>numbers</b> s1 and s2, the distance from s1 to s2 is: ...|$|E
30|$|Calculate all the {{elements}} of the pseudorandom <b>sequence</b> <b>number</b> in (xi[*]×[*] 256)[*]mod[*] 256, and then convert the calculated result into binary, thereby obtaining a binary M[*]×[*]N long <b>sequence</b> <b>number.</b>|$|R
5000|$|All <b>sequence</b> <b>number</b> {{arithmetic}} {{must deal}} with [...] "wrapping" [...] of <b>sequence</b> numbers; the <b>number</b> 2N−1 is equidistant in both directions, in [...] <b>sequence</b> <b>number</b> terms. In our math, they are both considered to be [...] "less than" [...] each other: ...|$|R
5000|$|<b>Sequence</b> <b>Number</b> (32 bits) : A monotonically {{increasing}} <b>sequence</b> <b>number</b> (incremented by 1 {{for every}} packet sent) {{to protect against}} replay attacks. There is a separate counter kept for every security association.|$|R
50|$|<b>Sequence</b> <b>numbers</b> may be {{reserved}} on completion of form VRT15A and payment of €1,000.|$|E
50|$|This is {{obviously}} true for any two <b>sequence</b> <b>numbers</b> with distance of 0x8000 between them.|$|E
5000|$|In mathematics, Padovan polynomials are a {{generalization}} of Padovan <b>sequence</b> <b>numbers.</b> These polynomials are defined by: ...|$|E
50|$|The CPR {{number is}} a ten-digit number with the format DDMMYY-SSSS, where DDMMYY is {{the date of}} birth and SSSS is a <b>sequence</b> <b>number.</b> The first digit of the <b>sequence</b> <b>number</b> encodes the century of birth (so that centenarians are {{distinguished}} from infants, 0-4 in odd centuries, 5-9 in even centuries), and the last digit of the <b>sequence</b> <b>number</b> is odd for males and even for females.|$|R
50|$|The Identifier and <b>Sequence</b> <b>Number</b> {{can be used}} by {{the client}} to match the reply with the request that caused the reply. In practice, most Linux systems use a unique {{identifier}} for every ping process, and <b>sequence</b> <b>number</b> is an increasing number within that process. Windows uses a fixed identifier, which varies between Windows versions, and a <b>sequence</b> <b>number</b> that is only reset at boot time.|$|R
30|$|The RREQ {{messages}} {{generated by}} the reactive routing protocol {{as well as all}} the broadcast messages are generated with a <b>sequence</b> <b>number.</b> The <b>sequence</b> <b>number</b> helps a receiving node to detect the message whether it is new or it is a copy of a previous message. In this way, the receiving nodes maintain a table to associate the <b>sequence</b> <b>number</b> and the sources which are employing them. Thus, a receiving node only pays attention to the messages with a <b>sequence</b> <b>number</b> which is higher than the one stored for the source. In order to implement this behavior properly when managing multiple routing protocols, in GREENIE, a source just uses one <b>sequence</b> <b>number</b> which is incremented either by the reactive or the proactive routing protocol when a broadcast message needs to be generated.|$|R
