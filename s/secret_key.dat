4330|1393|Public
25|$|Using the Euclidean algorithm, one can {{efficiently}} {{recover the}} <b>secret</b> <b>key</b> d if {{one knows the}} factorization of N. By having the <b>secret</b> <b>key</b> d, one can efficiently factor the modulus of N.|$|E
25|$|While this in {{principle}} can work, {{it is extremely}} difficult to build the hardware to protect the <b>secret</b> <b>key</b> against a sufficiently determined adversary. Many such systems have failed in the field. Once the <b>secret</b> <b>key</b> is known, building a version of the hardware that performs no checks is often relatively straightforward. In addition user verification provisions are frequently subject to attack, pirate decryption being among the most frequented ones.|$|E
25|$|Message {{authentication}} codes (MACs) {{are much}} like cryptographic hash functions, except that a <b>secret</b> <b>key</b> {{can be used}} to authenticate the hash value upon receipt; this additional complication blocks an attack scheme against bare digest algorithms, and so has been thought worth the effort.|$|E
30|$|On {{the other}} hand, the {{watermarking}} algorithms are classified also as: the methods which require the original information and <b>secret</b> <b>keys</b> for extracting watermark are called private watermark algorithms. The methods which require the watermark information and <b>secret</b> <b>keys</b> are called semiprivate or semiblind algorithms, and ones which need <b>secret</b> <b>keys</b> {{rather than the}} original information are called blind watermark algorithms.|$|R
50|$|The Diffie-Hellman {{values are}} used to {{generate}} an ephemeral shared secret. From this temporary <b>secret</b> <b>keys</b> are derived identically by both peers. In the initialise response, a token is also returned to reference these <b>secret</b> <b>keys</b> in subsequent continuation messages.|$|R
30|$|Zhang et al. {{proposed}} an anonymous on-demand routing protocol, MASK, for MANET [31]. In MASK, nodes authenticate their neighboring nodes without revealing their identities to establish pairwise <b>secret</b> <b>keys.</b> By utilizing the <b>secret</b> <b>keys,</b> MASK achieves routing and forwarding task without disclosing {{the identities of}} participating nodes.|$|R
25|$|Coppersmith's attack {{describes}} {{a class of}} cryptographic attacks on the public-key cryptosystem RSA based on the Coppersmith method. Particular applications of the Coppersmith method for attacking RSA include cases when the public exponent e is small or when partial knowledge of the <b>secret</b> <b>key</b> is available.|$|E
25|$|In 2007, Hawking and his {{daughter}} Lucy published George's <b>Secret</b> <b>Key</b> to the Universe, a children's book designed to explain theoretical physics in an accessible fashion and featuring characters {{similar to those in}} the Hawking family. The book was followed by sequels in 2009, 2011 and 2014.|$|E
25|$|For {{problems}} with all four properties, {{the time for}} a quantum computer to solve this will be proportional to the square root of the number of inputs. It can be used to attack symmetric ciphers such as Triple DES and AES by attempting to guess the <b>secret</b> <b>key.</b>|$|E
40|$|We {{propose a}} quantum {{authentication}} protocol that is robust against {{the theft of}} <b>secret</b> <b>keys.</b> In the protocol, disposable quantum passwords prevent impersonation attacks with stolen <b>secret</b> <b>keys.</b> The protocol also prevents the leakage of secret information of a certification agent. Comment: 18 pages, 4 figure...|$|R
50|$|In KP-ABE, users' <b>secret</b> <b>keys</b> are {{generated}} {{based on an}} access tree that defines the privileges scope of the concerned user, and data are encrypted over a set of attribute. However, CP-ABE uses access trees to encrypt data and users' <b>secret</b> <b>keys</b> {{are generated}} over a set of attribute.|$|R
40|$|Abstract. In this paper, a {{new digital}} {{watermarking}} method based on vector quantization (VQ) is proposed. In contrast with conventional VQ-based watermarking schemes, {{the mean of}} sub-blocks is used to train the VQ codebook. In addition, the Anti-Gray Coding (AGC) technique is employed to enhance the robustness of the proposed watermarking scheme. In this scheme, the <b>secret</b> <b>keys</b> are used to hide the associated information between the original image and the watermark. Then the set of <b>secret</b> <b>keys</b> will be registered to a trusted third party for future verification. Thus, the original image remains unchanged after the watermark is melted into the set of <b>secret</b> <b>keys.</b> Experimental {{results show that the}} watermark can survive various possible attacks. Besides that, the size of the <b>secret</b> <b>keys</b> can be reduced. Key words: vector quantization, digital watermarking, pseudo-gray coding, anti-gray coding. 1...|$|R
25|$|Quantum key {{distribution}} (QKD) is a secure communication method which implements a cryptographic protocol involving components of quantum mechanics. It enables two parties {{to produce a}} shared random <b>secret</b> <b>key</b> known only to them, which can then be used to encrypt and decrypt messages. It is often incorrectly called quantum cryptography, {{as it is the}} best-known example of a quantum cryptographic task.|$|E
25|$|Differential {{cryptanalysis}} is {{a general}} form of cryptanalysis applicable primarily to block ciphers, but also to stream ciphers and cryptographic hash functions. In the broadest sense, it {{is the study of}} how differences in information input can affect the resultant difference at the output. In the case of a block cipher, it refers to a set of techniques for tracing differences through the network of transformation, discovering where the cipher exhibits non-random behavior, and exploiting such properties to recover the <b>secret</b> <b>key</b> (cryptography key).|$|E
25|$|In public-key cryptosystems, {{the public}} key may be freely distributed, while its paired private key must remain secret. In a public-key {{encryption}} system, the public key {{is used for}} encryption, while the private or <b>secret</b> <b>key</b> is used for decryption. While Diffie and Hellman could not find such a system, they showed that public-key cryptography was indeed possible by presenting the Diffieâ€“Hellman key exchange protocol, a solution that is now widely used in secure communications to allow two parties to secretly agree on a shared encryption key.|$|E
50|$|By definition, BYOE <b>secret</b> <b>keys</b> {{are brought}} to the Cloud {{computing}} provider, hence actual security of BYOE is far from its perceived security. <b>Secret</b> <b>keys</b> are copied over to the Cloud environment, and providers may leak them or hand them over to government agencies at their own discretion, sometimes even without notifying the data owner.|$|R
5000|$|It {{requires}} distributing <b>secret</b> <b>keys</b> to each host {{which must}} make updates.|$|R
5000|$|Paperkey {{a command}} line tool {{to back up}} OpenPGP <b>secret</b> <b>keys</b> on paper ...|$|R
25|$|Blowfish's key {{schedule}} starts by initializing the P-array and S-boxes with values {{derived from}} the hexadecimal digits of pi, which contain no obvious pattern (see nothing up my sleeve number). The <b>secret</b> <b>key</b> is then, byte by byte, cycling the key if necessary, XORed with all the P-entries in order. A 64-bit all-zero block is then encrypted with the algorithm as it stands. The resultant ciphertext replaces P1 and P2. The same ciphertext is then encrypted again with the new subkeys, and the new ciphertext replaces P3 and P4. This continues, replacing the entire P-array and all the S-box entries. In all, the Blowfish encryption algorithm will run 521 times to generate all the subkeys - about 4KB of data is processed.|$|E
25|$|Symmetric-key cryptosystems use {{the same}} key for {{encryption}} and decryption of a message, though a message or group of messages may have a different key than others. A significant disadvantage of symmetric ciphers is the key management necessary to use them securely. Each distinct pair of communicating parties must, ideally, share a different key, and perhaps each ciphertext exchanged as well. The number of keys required increases as {{the square of the}} number of network members, which very quickly requires complex key management schemes to keep them all consistent and secret. The difficulty of securely establishing a <b>secret</b> <b>key</b> between two communicating parties, when a secure channel does not already exist between them, also presents a chicken-and-egg problem which is a considerable practical obstacle for cryptography users in the real world.|$|E
25|$|The task of distributing a <b>secret</b> <b>key</b> {{could be}} {{achieved}} even when the particle (on which the secret information, e.g. polarization, has been encoded) does not traverse through the quantum channel using a protocol developed by Tae-Gon Noh. Here Alice generates a photon which randomly takes either path (a) or path (b). Path (a) stays inside Alice's secure device and path (b) goes to Bob. By rejecting the photons that Bob receives and only accepting the ones he doesn't receive, Bob & Alice can set up a secure channel, i.e. Eve's attempts to read the counterfactual photons would still be detected. This protocol uses the quantum phenomenon whereby {{the possibility that a}} photon can be sent has an effect even when it isn't sent. So-called interaction-free measurement also uses this quantum effect, as for example in the bomb testing problem, whereby you can determine which bombs are not duds without setting them off, except in a counterfactual sense.|$|E
5000|$|Nitrokey's {{security}} is not dependent upon <b>secret</b> <b>keys</b> stored centrally with the device manufacturer.|$|R
3000|$|Unicast {{encrypted}} messages (pairwise <b>secret</b> <b>keys)</b> {{that each}} gateway {{sent to the}} nodes within its cluster [...]...|$|R
50|$|SCIMP {{provided}} encryption, perfect {{forward secrecy}} and message authentication. It also handled negotiating the shared <b>secret</b> <b>keys.</b>|$|R
25|$|However, other {{cryptographic}} algorithms do {{not appear}} to be broken by those algorithms. Some public-key algorithms are based on problems other than the integer factorization and discrete logarithm problems to which Shor's algorithm applies, like the McEliece cryptosystem based on a problem in coding theory. Lattice-based cryptosystems are also not known to be broken by quantum computers, and finding a polynomial time algorithm for solving the dihedral hidden subgroup problem, which would break many lattice based cryptosystems, is a well-studied open problem. It has been proven that applying Grover's algorithm to break a symmetric (<b>secret</b> <b>key)</b> algorithm by brute force requires time equal to roughly 2n/2 invocations of the underlying cryptographic algorithm, compared with roughly 2n in the classical case, meaning that symmetric key lengths are effectively halved: AES-256 would have the same security against an attack using Grover's algorithm that AES-128 has against classical brute-force search (see Key size). Quantum cryptography could potentially fulfill some of the functions of public key cryptography.|$|E
25|$|Public-key {{cryptography}} {{can also}} be used for implementing digital signature schemes. A digital signature is reminiscent of an ordinary signature; they both have the characteristic of being easy for a user to produce, but difficult for anyone else to forge. Digital signatures {{can also be}} permanently tied to the content of the message being signed; they cannot then be 'moved' from one document to another, for any attempt will be detectable. In digital signature schemes, there are two algorithms: one for signing, in which a <b>secret</b> <b>key</b> is used to process the message (or a hash of the message, or both), and one for verification, in which the matching public key is used with the message to check the validity of the signature. RSA and DSA are two of the most popular digital signature schemes. Digital signatures are central to the operation of public key infrastructures and many network security schemes (e.g., SSL/TLS, many VPNs, etc.).|$|E
25|$|Chaos {{theory has}} been used for many years in cryptography. In the past few decades, chaos and {{nonlinear}} dynamics have been used in the design of hundreds of cryptographic primitives. These algorithms include image encryption algorithms, hash functions, secure pseudo-random number generators, stream ciphers, watermarking and steganography. The majority of these algorithms are based on uni-modal chaotic maps and a big portion of these algorithms use the control parameters and the initial condition of the chaotic maps as their keys. From a wider perspective, without loss of generality, the similarities between the chaotic maps and the cryptographic systems is the main motivation for the design of chaos based cryptographic algorithms. One type of encryption, <b>secret</b> <b>key</b> or symmetric key, relies on diffusion and confusion, which is modeled well by chaos theory. Another type of computing, DNA computing, when paired with chaos theory, offers a way to encrypt images and other information. Many of the DNA-Chaos cryptographic algorithms are proven to be either not secure, or the technique applied is suggested to be not efficient.|$|E
30|$|The hash vector is {{protected}} with <b>secret</b> <b>keys.</b> The proposed image hash {{may be used}} for image security-related applications.|$|R
40|$|Wireless {{networks}} are capable solutions for many industrial and commercial applications. However, a wireless node endures {{with lots of}} constraints such as low computation ability, little memory, partial energy resources and so on. In secure communication, different numbers of end devices are used to share the information between wireless devices and also are protected {{with the help of}} crypto algorithm and <b>secret</b> <b>keys.</b> The <b>secret</b> <b>keys</b> play a very important role than the algorithm, to ensure the security of the information between different numbers of users. When members of a group need to accept the similar information security and are permitted to dynamically join or leave the group, security entails not only sharing of a secret among lots of users but also be worried with security services like confidentiality, integrity of information as the connection changes. Whenever the system changes, the system manager is responsible to change the <b>secret</b> and supporting <b>keys</b> and to send back the updated keys to the group members. These different numbers of <b>secret</b> <b>keys</b> used in the end devices are generated using software and hardware techniques. In this study the different numbers of <b>secret</b> <b>keys</b> are generated using hardware. LPC 2148 are used to generate the random <b>secret</b> session <b>key</b> with real time parameters, event driven circuits and temperature measurement unit. In all the scenarios, the randomness, issues in hardware are analyzed and discussed...|$|R
5000|$|MIsmartApp {{enabling}} {{to offer}} or sell memory space for additional applications of 3rd parties {{without the need}} to share <b>secret</b> <b>keys</b> ...|$|R
2500|$|RFC 2845, <b>Secret</b> <b>Key</b> Transaction Authentication for DNS (TSIG) ...|$|E
2500|$|The Book Of Hiram: Freemasonry, Venus and the <b>Secret</b> <b>Key</b> to the Life of Jesus. Element Books Ltd. (25 January 2004).|$|E
2500|$|The {{public key}} in the RSA system is [...] a tuple of {{integers}} , where N {{is the product of}} two [...] primes p and q. The <b>secret</b> <b>key</b> is given by an integer d satisfying equivalently, the <b>secret</b> <b>key</b> may be given by [...] and [...] if the Chinese remainder theorem is used to improve the speed of decryption, see CRT-RSA. Encryption of a message M produces the ciphertext [...] which can be decrypted using [...] by computing [...]|$|E
40|$|Problem statement: In {{this study}} we propose a group re-keying {{protocol}} based on modular polynomial arithmetic over Galois Field GF(2 n). Common secure group communications requires encryption/decryption for group re-keying process, especially when a group member is leaving the group. Approach: This study proposes <b>secret</b> <b>keys</b> multiplication protocol based on modular polynomial arithmetic (SKMP), which {{eliminates the need for}} the encryption/decryption during the group re-keying. Results: The implementation based on modular polynomial arithmetic over Galois Field GF(2 n) offers fast re-keying process (about 50 % faster than <b>Secret</b> <b>Keys</b> Multiplication Protocol (SKM) for 128 bit key) and compact key size representation against other <b>secret</b> <b>keys</b> multiplication protocols. Conclusion: With SKMP group re-keying is handled more efficiently through modular polynomial arithmetic manipulation rather than the expensive encryption/encryption which need to be done on every membership change...|$|R
5000|$|The {{requester}} and responder send {{a sequence}} of arbitrary HTTP messages, quoting the token as {{a reference to the}} <b>secret</b> <b>keys</b> employed.|$|R
40|$|In this paper, we {{undertake}} {{experiments to}} assess the feasi-bility of generating common <b>secret</b> <b>keys</b> between two body-worn devices using the near-body channel. Deriving <b>secret</b> <b>keys</b> using the wireless channel is a practical and lightweight alternative to public-key key-agreement approaches. Our re-sults indicate that key generation is good for dynamic sce-narios where communicating devices are placed in non-line-of-sight positions on the body. Furthermore, we enhance existing key generation mechanisms by proposing a ltering method to reduce bit mismatch...|$|R
