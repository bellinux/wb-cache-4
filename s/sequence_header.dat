4|24|Public
5000|$|<b>Sequence</b> <b>header</b> must {{be present}} at the {{beginning}} of every GOP ...|$|E
5000|$|The maximum {{bit rate}} {{value in the}} <b>sequence</b> <b>header</b> of the MPEG-2 video stream is 19.4 Mbit/s for {{broadcast}} television, and 38.8 Mbit/s for the [...] "high data rate" [...] mode (e.g., cable television). The actual MPEG-2 video bit rate will be lower, since the MPEG-2 video stream must fit inside a transport stream.|$|E
40|$|Abstract. According to the {{characteristics}} of AVS video data, a RTP encapsulation method based on frame type is proposed. When the video data is encapsulated by the RTP protocol, different types of video data such as <b>sequence</b> <b>header,</b> sequence end, I frame, P frame and B frame are encapsulated with different method. Under the limit of maximum transmission unit (MTU), sequence headers, sequence ends and I frames are encapsulated individually to reduce the packet length and protect the important data. While multiple P frames and B frames are encapsulated into one RTP packet to reduce the quantity of the RTP packets and decrease the overload of link. Simulation results show that, compared to the frame-based encapsulation method, the proposed method can reduce the packet loss rate of the video data effectively and {{improve the quality of}} video service...|$|E
50|$|Three words {{immediately}} {{follow the}} start <b>sequence</b> in the <b>header.</b> The first word {{after the start}} sequence is the Data Identifier or DID, followed by either a Secondary Data Identifier (SDID) or a Data Block Number (DBN), followed by a Data Count (DC). After the Data Count word are 0 - 255 (inclusive) User Data Words (UDW), followed by a Checksum (CS) word.|$|R
50|$|Jay Jay the Jet Plane is an American childrens {{television}} series {{based at the}} fictional Tarrytown Airport. It has 73 episodes. The series is centered {{on a group of}} aircraft who live in the fictional city of Tarrytown. The episodes are commonly distributed in 25-minute-long (as without commercials) pairs, with one <b>header</b> <b>sequence</b> and one end credits for each pair. Each episode contains one or more songs.|$|R
50|$|The {{terminating}} chunk is {{a regular}} chunk, with the exception that its length is zero. It {{is followed by the}} trailer, which consists of a (possibly empty) <b>sequence</b> of entity <b>header</b> fields. Normally, such header fields would be sent in the message's header; however, it may be more efficient to determine them after processing the entire message entity. In that case, it is useful to send those headers in the trailer.|$|R
40|$|A {{software}} system for image processing, HIPS, {{was developed for}} use in a UNIX environment. It includes a small set of subroutines which primarily deals with a standardized descriptive image <b>sequence</b> <b>header,</b> and an ever-growing library of image transformation tools in the form of UNIX “filters. ” Programs have been developed for simple image transformations, filtering, convolution, Fourier and other transform processing, edge detection and line drawing manipulation, simulation of digital compression and transmission, noise generation, and image statistics computation. The system has the useful feature that images are self-documenting to the extent that each image as stored in the system includes a history of the transformations that have been applied to that image. Although it has been used primarily with a Grinnell image processor, the bulk of the system is machine-independent. The system has proven itself a highly flexible system, both as an interactive research tool, and for more production-oriented tasks. It is both easy to use, and quickly adapted and extended to new uses. 1...|$|E
50|$|Channel {{utilization}} {{is instead}} a term {{related to the}} use of the channel disregarding the throughput. It counts not only with the data bits but also with the overhead that makes use of the channel. The transmission overhead consists of preamble <b>sequences,</b> frame <b>headers</b> and acknowledge packets. The definitions assume a noiseless channel. Otherwise, the throughput would not be only associated to the nature (efficiency) of the protocol but also to retransmissions resultant from quality of the channel. In a simplistic approach, channel efficiency can be equal to channel utilization assuming that acknowledge packets are zero-length and that the communications provider will not see any bandwidth relative to retransmissions or headers. Therefore, certain texts mark a difference between channel utilization and protocol efficiency.|$|R
40|$|The vast {{increase}} in the number of sequenced genomes has irreversibly changed the landscape of the biological sciences and has spawned the current post-genomic era of research. Genomic data have illuminated many adaptation and survival strategies between species and their habitats. Moreover, the analysis of prokaryotic genomic sequences is indispensible for understanding the mechanisms of bacterial pathogens and for subsequently developing effective diagnostics, drugs, and vaccines. Computational strategies for the annotation of genomic sequences are driven by the inference of function from reference genomes. However, the effectiveness of such methods is bounded by the fractional diversity of known genomes. Although metagenomes can reconcile this limitation by offering access to previously intangible organisms, harnessing metagenomic data comes with its own collection of challenges. Since the sequenced environmental fragments of metagenomes do not equate to discrete and fully intact genomes, this prevents the conventional establishment of orthologous relationships that are required for functional inference. Furthermore, the current surge in metagenomic data sets requires the development of compression strategies that can effectively accommodate large data sets that are comprised of multiple sequences and a greater proportion of auxiliary data, such as <b>sequence</b> <b>headers.</b> While modern hardware can provide vast amounts of inexpensive storage for biological databases, the compression of nucleotide sequence data is still of paramount importance in order to facilitate fast search and retrieval operations through a reduction in disk traffic. To address the issues of inference and orthology a novel protocol was developed for the prediction of functional interactions that supports data sources that lack information about orthologous relationships. To address the issue of database inundation, a compression protocol was designed that can differentiate between sequence data and auxiliary data, thereby offering reconciliation between sequence specific and general-purpose compression strategies. By resolving these and other challenges, it becomes possible to extend the potential utility of the emerging field of metagenomics...|$|R
5000|$|SMFs {{are created}} as an export format of {{software}} sequencers or hardware workstations. They organize MIDI messages into {{one or more}} parallel tracks, and timestamp the events {{so that they can}} be played back in <b>sequence.</b> A <b>header</b> contains the arrangement's track count, tempo and which of three SMF formats the file is in. A type 0 file contains the entire performance, merged onto a single track, while type 1 files may contain any number of tracks that are performed in synchrony. Type 2 files are rarely used and store multiple arrangements, with each arrangement having its own track and intended to be played in sequence.Microsoft Windows bundles SMFs together with Downloadable Sounds (DLS) in a Resource Interchange File Format (RIFF) wrapper, as RMID files with a [...] extension. RIFF-RMID has been deprecated in favor of Extensible Music Files (XMF).|$|R
40|$|We propose in {{this paper}} a new {{algorithm}} for estimating the synchronization parameters (frequency offsets and delays) of multiple users in a MC-CDMA system targeted for broadband LMDS applications. The proposed algorithm exploits the code properties in the frequency domain to perform delay estimation, whereas {{it is based on}} the insertion of an appropriate <b>header</b> <b>sequence</b> to estimate the frequency offset in the time domain. Simulation results show that the algorithm obtains accurate estimates with modest computational complexity, and is robust to the presence of multiple-access interference. ...|$|R
30|$|Message formats may {{encapsulate}} sequences (e.g., lists or maps) {{of values}} of the same type. In some cases, the application may have requirements {{on the presence of}} a value, at a certain position. For example, the Regonline protocol requires that all requests except Login contain a session identifier provided as an HTTP header with the key ApiToken. The extract annotation allows making this requirement explicit with respect to the structure of the message by removing the specific field from the <b>headers</b> <b>sequence,</b> and reattaching it as a field at a higher level of the tree format.|$|R
50|$|An {{example of}} how ARINC 818 transmits color XGA {{provides}} a good overview. XGA RGB requires ~141M bytes/s of data transfer (1024 pixels x 3 bytes per pixel x 768 lines x 60 Hz). Adding the protocol overhead and blanking time, a standard link rate of 2.125Gbit/s is required. ARINC 818 “packetizes” video images into Fibre Channel frames. Each FC frame begins with a 4 byte ordered set, called an SOF (Start of Frame), and ends with an EOF (End of Frame), additionally, a 4 byte CRC is included for data integrity. The payload of the first FC frame in a <b>sequence</b> contains embedded <b>header</b> data that accompanies each video image.|$|R
50|$|Caption blocks are {{inserted}} {{after the}} <b>sequence</b> and GOP <b>headers,</b> so each block is {{for one second}} of video which would end up being one or two long lines or three to four short lines of text. Also that means if the caption_block_count is greater than 30 then the block contains both interleaved caption fields and one could devise the framing rate from the caption_block_count. However since the data is grouped together the framing rate will almost always be 30/1.001, unlike the ATSC method that inserts one byte pair for each field after the picture header making framing rates of 24/1.001 possible for HD content. Since when a decoder does a 3:2 pull-down for NTSC output the captions will remain in sync.|$|R
40|$|Increasingly {{advances}} in file carving, memory analysis and network forensics requires {{the ability to}} identify the underlying type of a file given only a file fragment. Work to date on this problem has relied on identification of specific byte <b>sequences</b> in file <b>headers</b> and footers, {{and the use of}} statistical analysis and machine learning algorithms taken {{from the middle of the}} file. We argue that these approaches are fundamentally flawed because they fail to consider the inherent internal structure in widely used file types such as PDF, DOC, and ZIP. We support our argument with a bottom-up examination of some popular formats and an analysis of TK PDF files. Based on our analysis, we argue that specialized methods targeted to each specific file type will be necessary to make progress in this area. 1...|$|R
30|$|The {{elementary}} concept at the NAL {{level is}} the NAL unit (NALU). An AVC NALU contains a header {{followed by a}} raw byte <b>sequence</b> payload. This <b>header</b> is made of a unique byte and includes a field to identify the type of NALU. A complete picture can be segmented into multiple NALUs, each carrying usually a coded slice or control information. The set of NALUs needed to decode a complete picture is called access unit. AVC introduces a special type of access unit called instantaneous decoding refresh (IDR), which can be identified through the inspection of the NALU <b>header.</b> A <b>sequence</b> of access units starting with an IDR can be decoded independent of any previous pictures in the bitstream. The maximum NALU size can be configured as a parameter of the encoder {{in order to be}} adjusted to the maximum transmission unit (MTU).|$|R
40|$|A {{system and}} method for data {{synchronization}} in Passive Optical Networks are disclosed. According to an embodiment, the present invention provides {{a method for}} providing upstream data synchronization in an optical communication network. The method includes sending data from an Optical Network Unit. The data includes a first data frame, which includes a <b>header</b> <b>sequence,</b> a synchronization segment, and a data segment. The synchronization segment includes 66 bits, which includes a first number of bits having nonzero values and a second number of bits having a value of zero. The first number {{is different from the}} second number. The method further includes receiving at least the first data frame by an Optical Line Terminal. The method also includes processing the first data frame. The method additionally includes selecting a first segment of the first data frame, the first segment including 66 bit...|$|R
40|$|Systematic Approaches to Digital Forensics EngineeringRefereed Conference PaperIncreasingly {{advances}} in file carving, memory analysis and network forensics requires {{the ability to}} identify the underlying type of a file given only a file fragment. Work to date on this problem has relied on identification of specific byte <b>sequences</b> in file <b>headers</b> and footers, {{and the use of}} statistical analysis and machine learning algorithms taken {{from the middle of the}} file. We argue that these approaches are fundamentally flawed because they fail to consider the inherent internal structure in widely used file types such as PDF, DOC, and ZIP. We support our argument with a bottom-up examination of some popular formats and an analysis of TK PDF files. Based on our analysis, we argue that specialized methods targeted to each specific file type will be necessary to make progress in this area...|$|R
2500|$|Xu's {{choice of}} {{sections}} appears {{in large part}} to have been driven by the desire to create an unbroken, systematic <b>sequence</b> among the <b>headers</b> themselves, such that each had a natural, intuitive relationship (e.g., structural, semantic or phonetic) with the ones before and after, {{as well as by the}} desire to reflect cosmology. In the process, he included many section headers that are not considered ones today, such as 炎 (yán [...] "flame") and 熊 (xióng [...] "bear"), which modern dictionaries list under the 火 or 灬 (huǒ [...] "fire") heading. He also included as section headers all the sexagenary cycle characters, that is, the ten Heavenly Stems and twelve Earthly Branches. As a result, unlike modern dictionaries which attempt to maximize the number of characters under each section header, 34 Shuowen headers have no characters under them, while 159 have only one each. From a modern lexicographical perspective, Xu's system of 540 headings can seem [...] "enigmatic" [...] and [...] "illogical". For instance, he included the singular section header 409 惢 (ruǐ [...] "doubt"), with only one rare character (ruǐ 繠 [...] "stamen"), instead of listing it under the common header 408 心 (xīn [...] "heart; mind").|$|R
40|$|For the S 1 A family, only {{sequences}} {{consisting of}} a single protease domain were included. Positions were truncated {{to the structure of}} rat trypsin (PDB 3 TGI), yielding a final alignment of 1470 sequences and 223 positions that includes the digestive enzymes (e. g. trypsin, chymotrypsin, elastase), the immune cell proteases (tryptases, chymases, kallikreins, and granzymes), the coagulation enzymes (e. g. thrombin, factor X), the snake venom proteases, and the haptoglobins, non-catalytic members of the family that have evolved to bind free hemoglobin (Kurosky et al., 1980). Sequences were annotated with regard to catalytic specificity through examination of <b>sequence</b> file <b>headers</b> and literature survey, and {{for the purposes of this}} work, were binned into the following categories: “trypsin”, “chymotrypsin”, “kallikreins”, “tryptases”, “chymases”, and “granzymes”. The granzymes were further subdivided into the major types occurring in the alignment: “a”, “k”, “b”, and “m”. All sequences that did not unambiguously fall into these categories were declared “NA ” for not annotated. For the PDZ domain family, the alignment consisted of 240 sequences and 92 positions after truncation to the structure of the third PDZ domain of rat PSD 95 (PDB 1 BE 9). For the PAS family, the alignment consisted of 1104 sequences and 123 positions after truncation to the structure of A. sativa LOV 2 (PDB 2 V 0 W). For SH 2, 582 sequences and 79 positions after truncation to the Syp SH 2 domain (PDB 1 AYA). For SH 3, 492 sequences and 52 positions after truncation to the Abl SH 3 domain (PDB 2 ABL). B. Correlation Analysis This section provides a short summary of the calculations used for the statistical coupling analysis. The supplementary discussion (section II) provides more detail, rationale, and further discussion regarding these methods. 1. Positional conservation: The conservation of an amino acid a at position i in a multiple sequence alignment is defined by Di (a), the divergence (or relative entropy) of the observed frequency of a at i (fi (a)) from the background frequency of a in all proteins (q(a)) (Cover and Thomas, 2006) ...|$|R
40|$|A {{method and}} {{apparatus}} for logging current-voltage (I-V) characteristic d of a solar cell module (10) in two modes using a portable instrument. One mode controls the load current through a circuit (36) in 256 equal intervals while voltage is measured from open circuit {{to at least}} halfway into the knee of the curve and the other mode controls the load voltage through a circuit (34) in 256 equal intervals from the lowest voltage measurement possible (short circuit) to at least halfway into the knee of the curve, under control of a microcomputer (12). All measurements are packed by discarding each measurement that is within 0. 5 % of the value predicted from two previous measurements, except every ninth (9 th) measurement which is retained. The remaining data is further packed into a memory block of a detachable storage medium (14) by recording the data points in <b>sequence</b> following a <b>header</b> containing data common to all points, with each point having {{the value of the}} controlled parameter recorded as the number of increments from the previous point recorded followed by the measured value. The detachable storage medium is preferably a solid state device for reliability, and is transferable to a playback terminal which unpacks the data for analysis and display...|$|R
40|$|ITC/USA 2005 Conference Proceedings / The Forty-First Annual International Telemetering Conference and Technical Exhibition / October 24 - 27, 2005 / Riviera Hotel & Convention Center, Las Vegas, NevadaThe {{telemetry}} industry anticipates {{the tremendous}} potential value of adding full networking capability to telemetry systems. However, {{much of this}} potential can be realized while working with legacy equipment. By adding modules that interface transparently to existing equipment, continuous telemetry data can be encapsulated in discrete packets for over the air transmission. Packet fields can include <b>header,</b> <b>sequence</b> number and bytes for error detection and correction. The RF packet is transmitted without gaps through a standard serial interface and rate adjusted for the packet overhead – effectively making packetization transparent to a legacy system. The receiver unit performs packet synchronization, error correction, extraction of stream quality metrics and re-encapsulation of the payload data into an internet protocol (IP) packet. These standard packets can then be sent over the existing network transport system to the range control center. At the range control center, the extracted stream quality metrics are used to select the best telemetry source in real-time. This paper provides a general discussion of the path to a fully realized, packet-based telemetry network and a brief but comprehensive overview of the Hypernet system architecture as a case study...|$|R
40|$|Abstract—Packet {{classification}} is an {{enabling technology}} for {{next generation network}} services and often a performance bottle-neck in high-performance routers. The performance and capacity of many classification algorithms and devices, including TCAMs, depend upon properties of filter sets and query patterns. Despite the pressing need, no standard performance evaluation tools or filter sets are publicly available. In response to this problem, we present ClassBench, a suite of tools for benchmarking packet classification algorithms and devices. ClassBench includes a Filter Set Generator that produces synthetic filter sets that accurately model the characteristics of real filter sets. Along with varying {{the size of the}} filter sets, we provide high-level control over the composition of the filters in the resulting filter set. The tool suite also includes a Trace Generator that produces a <b>sequence</b> of packet <b>headers</b> to exercise packet classification algorithms with respect to a given filter set. Along with specifying the relative size of the trace, we provide a simple mechanism for controlling locality of reference. While we have already found ClassBench to be very useful in our own research, we seek to eliminate the significant access barriers to realistic test vectors for researchers and initiate a broader discussion to guide the refinement of the tools and codification of a formal benchmarking methodology. (The ClassBench tools are publicly available at the following site...|$|R
40|$|When {{data traffic}} in a {{wireless}} network is bursty, {{small amounts of}} data sporadically become available for transmission, at times that are unknown at the receivers, and an extra amount of energy must be spent at the transmitters to overcome this lack of synchronization between the network nodes. In practice, pre-defined <b>header</b> <b>sequences</b> are used {{with the purpose of}} synchronizing the different network nodes. However, in networks where relays must be used for communication, the overhead required for synchronizing the entire network may be very significant. In this work, we study the fundamental limits of energy-efficient communication in an asyn-chronous diamond network with two relays. We formalize the notion of relay synchronization by saying that a relay is synchronized if the conditional entropy of the arrival time of the source mes-sage given the received signals at the relay is small. We show that the minimum energy-per-bit for bursty traffic in diamond networks is achieved with a coding scheme where each relay is either synchronized or not used at all. A consequence of this result is the derivation of a lower bound to the minimum energy-per-bit for bursty communication in diamond networks. This bound allows us to show that schemes that perform the tasks of synchronization and communication separately (i. e., with synchronization signals preceding the communication block) can achieve the minimum energy-per-bit to within a constant fraction that ranges from 2 in the synchronous case to 1 in the highly asynchronous regime. ...|$|R
40|$|Due to the {{importance}} {{and complexity of the}} packet classification problem, a myriad of algorithms and resulting implementations exist. The performance and capacity of many algorithms and classification devices, including TCAMs, depend upon properties of the filter set and query patterns. Unlike microprocessors in the field of computer architecture, there are no standard performance evaluation tools or techniques available to evaluate packet classification algorithms and products. Network service providers are reluctant to distribute copies of real filter sets for security and confidentiality reasons, hence realistic test vectors are a scarce commodity. The small subset of the research community who obtain real filter sets either limit performance evaluation to the small sample space or employ ad hoc methods of modifying those filter sets. In response to this problem, we present ClassBench, a suite of tools for benchmarking packet classification algorithms and devices. ClassBench includes a Filter Set Generator that produces synthetic filter sets that accurately model the characteristics of real filter sets. Along with varying the size of the filter sets, we provide high-level control over the composition of the filters in the resulting filter set. The tools suite also includes a Trace Generator that produces a <b>sequence</b> of packet <b>headers</b> to exercise the synthetic filter set. Along with specifying the relative size of the trace, we provide a simple mechanism for controlling locality of reference in the trace. While we have already found ClassBench to be very useful in our own research, we seek to initiate a broader discussion and solicit input from the community to guide the refinement of the tools and codification of a formal benchmarking methodology...|$|R
40|$|An example dataset {{containing}} B-cell receptor (BCR) gene sequences. This dataset {{is intended}} to be used for testing software tools developed to annotate (i. e. map Variable, Diversity and Joining segments) and perform clonal analysis of BCR sequencing data. Sequencing: Libraries prepared using 5 'RACE from PBMCs of a healthy donor. Input molecules were tagged with unique molecular identifiers (UMIs). Sequencing was ran on MiSeq, 300 + 300 bp reads. Contents: The dataset contains both raw sequencing reads and high-quality consensus sequences assembled using unique molecular tagging (UMI) approach. Consensus assembly corrects for sequencing errors and eliminates sequencing artifacts. 	age_ig_s 7 _R 1. fastq. gz and age_ig_s 7 _R 2. fastq. gz contain raw reads 	age_ig_s 7 _R 1. t 10. cf. fastq. gz and age_ig_s 7 _R 2. t 10. cf. fastq. gz contain consensus sequences All files contain an UMI tag <b>sequence</b> in their <b>header,</b> in form UMI:NNNN:QQQQ where N is the base character and Q is the quality character (for assembled consensuses the total number of reads is given instead of Q string). Note that consensus sequences were assembled using only raw sequences that correspond to UMI tags supported by at least 10 sequencing reads. That means that consensus sequence files contain a subset of all UMI tags found in raw sequences. Thus, if one wants to assess software performance on raw sequencing reads using assembled consensus sequences as a high-quality data standard, raw sequencing reads should be filtered to contain only those UMI tags that are present in consensus sequence file. Citations: The whole dataset was used to benchmark MiXCR software and was originally referenced in Bolotin DA, et al. MiXCR: software for comprehensive adaptive immunity profiling Nature methods 12 (5) : 380 - 381, 2015. Data pre-processing was carried out using MIGEC software, Shugay M et al. Towards error-free profiling of immune repertoires. Nature Methods 11 (6) : 653 - 655, 2014. Contributors: The dataset was generated in Prof. Chudakov lab (Adaptive Immunity Group in Masaryk University, Brno and Genomics of Adaptive Immunity Lab in Institute of Bioorganic Chemistry, Moscow). Sample preparation and sequencing was performed by Dr. Olga Britanova and Dr. Maria Turchaninova. Raw sequencing reads were pre-processed and uploaded by Dr. Mikhail Shugay...|$|R
40|$|A unique all-optical 1 x 2 self-routed switch is introduced. This switch routes {{an optical}} packet from one input {{to one of}} two {{possible}} outputs. The header and payload are transmitted separately in the system, and the header bits are processed in parallel thus increasing the switching speed as well as reducing the amount of buffering required for the payload. A 1 x 2 switching operation is analysed and a switching ratio of up to 14 dB is obtained. The objective of the research was to investigate a unique all-optical switch. The switch works by processing the optical bits in a header packet which contains the destination address for a payload packet. After the destination address is processed the optical payload packet gets switched {{to one of two}} outputs depending on the result of the optical header processing. All-optical packet switching in the optical time domain was accomplished by making use of all-optical parallel processing of an optical packet header. This was demonstrated in experiments in which a three bit parallel processing all-optical switching node was designed, simulated and used to successfully demonstrate the concept. The measure of success that was used in the simulated experiments was the output switching ratio, which is the ratio between the peak optical power of a high bit at the first output and the peak optical power of a high bit at the second output. In all experimental results the worst case scenario was looked at, which means that if there was any discrepancy in the peak value of the output power then the measurement’s minimum/maximum value was used that resulted in a minimum value for the switching ratio. The research resulted in an optical processing technique which took an optical bit sequence and delivered a single output result which was then used to switch an optical payload packet. The packet switch node had two optical fibre inputs and two optical fibre outputs. The one input fibre carried the header packet and the other input fibre carried the payload packet. The aim was to switch the payload packet to one of the two output fibres depending on the bit <b>sequence</b> within the <b>header</b> packet. Also only one unique address (<b>header</b> bit <b>sequence)</b> caused the payload packet to exit via one of the outputs and all the other possible addresses caused the payload packet to exit via the other output. The physical configuration of the all-optical switches in the parallel processing structure of the switching node determined for which unique address the payload packet would exit via a different output than when the address was any of the other possible combinations of sequences. Only three Gaussian shaped bits were used in the header packet at a data rate of 10 Gbps and three Gaussian shaped bits in the payload packet at a data rate of 40 Gbps, but in theory more bits can be used in the payload packet at a decreased bit length to increase throughput. More bits can also be used in the header packet {{to increase the number of}} addresses that can be reached. In the simulated experiments it was found that the payload packet would under most circumstances exit both outputs, and at one output it would be much larger than at the other output (where it was normally found to be suppressed when compared to the other output’s optical power). The biggest advantage of this method of packet-switching is that it occurs all-optically, meaning that there is no optical to electronic back to optical conversions taking place in order to do header processing. All of the header processing is done optically. One of the disadvantages is that the current proposed structure of the all-optical switching node uses a Cross-Gain Modulator (XGM) switch which is rather expensive because of the Semiconductor Optical Amplifier (SOA). In this method of packet-switching the length of the payload packet cannot exceed the length of one bit of the header packet. This is because the header processing output is only one header bit length long and this output is used to switch the payload packet. Thus any section of the payload packet that is outside this header processing output window will not be switched correctlyDissertation (MEng (Electronic Engineering)) [...] University of Pretoria, 2007. Electrical, Electronic and Computer Engineeringunrestricte...|$|R

