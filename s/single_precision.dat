638|279|Public
25|$|Any integer with {{absolute}} value less than 224 can be exactly {{represented in the}} <b>single</b> <b>precision</b> format, and any integer {{with absolute}} value less than 253 can be exactly represented in the double precision format. Furthermore, {{a wide range of}} powers of 2 times such a number can be represented. These properties are sometimes used for purely integer data, to get 53-bit integers on platforms that have double precision floats but only 32-bit integers.|$|E
25|$|In one typical usage scenario, {{the system}} will load the SPEs with small {{programs}} (similar to threads), chaining the SPEs together to handle each step in a complex operation. For instance, a set-top box might load programs for reading a DVD, video and audio decoding, and display, and the data would be passed off from SPE to SPE until finally ending up on the TV. Another possibility is to partition the input data set and have several SPEs performing {{the same kind of}} operation in parallel. At 3.2GHz, each SPE gives a theoretical 25.6 GFLOPS of <b>single</b> <b>precision</b> performance.|$|E
25|$|The arithmetical {{difference}} between two consecutive representable floating-point numbers {{which have the}} same exponent is called a unit in the last place (ULP). For example, {{if there is no}} representable number lying between the representable numbers 1.45a70c22hex and 1.45a70c24hex, the ULP is 2×16−8, or 2−31. For numbers with a base-2 exponent part of 0, i.e. numbers with an absolute value higher than or equal to 1 but lower than 2, an ULP is exactly 2−23 or about 10−7 in <b>single</b> <b>precision,</b> and exactly 2−53 or about 10−16 in double precision. The mandated behavior of IEEE-compliant hardware is that the result be within one-half of a ULP.|$|E
40|$|A {{design of}} a {{reciprocal}} unit based on Newton-Raphson approximation is described and implemented. We present two different designs for <b>single</b> <b>precisions</b> where {{one of them is}} extremely fast but the trade-off is an increase in area. The solution behind the fast design is that the design is fully redundant. ...|$|R
40|$|Deformation {{monitoring}} {{is typically}} undertaken with point-wise surveying techniques, such as total station or GPS. Terrestrial laser scanners (TLS) offer {{an opportunity to}} collect dense 3 D point data over an object or surface of interest. The <b>single</b> point <b>precision</b> of medium to long-range TLSs varies from ± 2 mm to ± 25 mm, depending on the instrument model and observation conditions. However, the theoretical precision of a surface derived from spatially dense point cloud data is substantially higher than the <b>single</b> point <b>precision.</b> This paper presents results from two experiments designed to explore the achievable precision of TLSs for surface deformation measurement. In each experiment, it was shown that the TLS systems were able to measure vertical deflection at six to 12 times better than their advertised <b>single</b> point <b>precision.</b> In one test, a TLS (<b>single</b> point <b>precision</b> of ± 6 mm) achieved an accuracy of ± 0. 5 mm (RMS). 1...|$|R
50|$|Arithmetic {{instructions}} {{except for}} compares have a four-cycle latency. <b>Single</b> and double <b>precision</b> divides have latencies of 14 and 20 cycles, respectively; and <b>single</b> and double <b>precision</b> square-roots have latencies of 14 and 23 cycles, respectively.|$|R
25|$|TS (transfer to storage): Store {{register}} A at {{the specified}} memory address. TS also detects, and corrects for, overflows {{in such a}} way as to propagate a carry for multi-precision add/subtract. If the result has no overflow (leftmost 2 bits of A the same), nothing special happens; if there is overflow (those 2 bits differ), the leftmost one goes the memory as the sign bit, register A is changed to +1 or −1 accordingly, and control skips to the second instruction following the TS. Whenever overflow is a possible but abnormal event, the TS was followed by a TC to the no-overflow logic; when it is a normal possibility (as in multi-precision add/subtract), the TS is followed by CAF ZERO (CAF = XCH to fixed memory) to complete the formation of the carry (+1, 0, or −1) into the next higher-precision word. Angles were kept in <b>single</b> <b>precision,</b> distances and velocities in double precision, and elapsed time in triple precision.|$|E
500|$|Since this {{algorithm}} {{relies heavily}} on the bit-level representation of single-precision floating point numbers, a short overview of this representation is provided here. In order to encode a non-zero real number [...] as a <b>single</b> <b>precision</b> float, {{the first step is}} to write [...] as a normalized binary number: ...|$|E
2500|$|... (Note: 	Parallel {{processing}} such as two simultaneous <b>single</b> <b>precision</b> {{operations is}} permitted without additional execution time.) ...|$|E
2500|$|... for [...] and [...] are {{for example}} [...] [...] Where the same {{calculation}} {{is done with}} <b>single</b> digit <b>precision,</b> the result would normally be [...] But , ...|$|R
5000|$|... is a one-letter code {{denoting}} {{the type}} of numerical constants used. , [...] stand for real floating point arithmetic respectively in <b>single</b> and double <b>precision,</b> while [...] and [...] stand for complex arithmetic with respectively <b>single</b> and double <b>precision.</b> The newer version, LAPACK95, uses generic subroutines in order to overcome the need to explicitly specify the data type.|$|R
5000|$|... 3 ½ Hp <b>single</b> {{cylinder}} <b>Precision</b> engine (also {{a special}} TT version with 3 ¾ Hp which is {{claimed to be}} the first single-cylinder machine to achieve a speed of 60 mph with a sidecar).|$|R
2500|$|... {{will give}} a result of 16331239353195370.0. [...] In <b>single</b> <b>precision</b> (using the tanf function), {{the result will be}} −22877332.0.|$|E
2500|$|The {{sum of the}} {{exponent}} bias (127) and the exponent (1) is 128, so this {{is represented}} in <b>single</b> <b>precision</b> format as ...|$|E
2500|$|Double {{precision}} (decimal64) and quadruple precision (decimal128) decimal floating-point formats. These formats, {{along with}} the <b>single</b> <b>precision</b> [...] (decimal32) format, are intended for performing decimal rounding correctly.|$|E
5000|$|All {{classes that}} use {{floating}} point arithmetic are implemented in <b>single</b> and double <b>precision.</b>|$|R
50|$|The car had {{single seat}} {{bodywork}} {{and was very}} narrow. Power came from a <b>single</b> cylinder <b>Precision</b> engine rated at 3½ horsepower and drive was to the rear wheels via a friction transmission. Very few were made.|$|R
5000|$|... {{provides}} various integer sizes, {{as well as}} <b>single</b> {{and double}} <b>precision</b> floating point real and complex numbers.|$|R
2500|$|By {{the same}} token, an {{attempted}} computation of sin(π) will not yield zero. [...] The {{result will be}} (approximately) 0.1225 in double precision, or −0.8742 in <b>single</b> <b>precision.</b>|$|E
2500|$|For example, the non-representability of 0.1 and 0.01 (in binary) {{means that}} the result of {{attempting}} to square 0.1 is neither 0.01 nor the representable number closest to it. [...] In 24-bit (<b>single</b> <b>precision)</b> representation, 0.1 (decimal) was given previously as e=−4; s=110011001100110011001101, which is ...|$|E
2500|$|<b>Single</b> <b>precision,</b> usually used to {{represent}} the [...] "float" [...] type in the C language family (though this is not guaranteed). This is a binary format that occupies 32 bits (4 bytes) and its significand has a precision of 24 bits (about 7 decimal digits).|$|E
50|$|Francisco Bangoy International Airport (Tugpahanang Pangkalibutan sa Francisco Bangoy, Paliparang Pandaigdig ng Francisco Bangoy), {{also known}} as Davao International Airport , is the main airport serving Davao City in the Philippines. It is the busiest airport {{on the island of}} Mindanao. The airport has a <b>single</b> 3,000-meter <b>precision</b> runway.|$|R
30|$|Evaluating {{the impact}} of five data layouts on the {{computational}} efficiency of three versions of GPU-accelerated IDW interpolation on <b>single</b> and/or double <b>precision.</b>|$|R
50|$|Minifloats with 16 bits are half-precision numbers (opposed to <b>single</b> {{and double}} <b>precision).</b> There are also minifloats with 8 bits or even fewer.|$|R
2500|$|The LINPACK single node compute {{benchmark}} {{results in}} a mean <b>single</b> <b>precision</b> performance of 0.065GFLOPS and a mean double precision performance of 0.041GFLOPS for one Raspberry Pi Model-B board. A cluster of 64 Raspberry Pi ModelB computers, labeled [...] "Iridis-pi", achieved a LINPACK HPL suite result of 1.14GFLOPS (n=10240) at 216watts for c. US$4000.|$|E
2500|$|In the IEEE binary {{interchange}} formats {{the leading}} 1 {{bit of a}} normalized significand is not actually stored in the computer datum. [...] It is called the [...] "hidden" [...] or [...] "implicit" [...] bit. [...] Because of this, <b>single</b> <b>precision</b> format actually has a significand with 24 bits of precision, double precision format has 53, and quad has 113.|$|E
2500|$|While the {{exponent}} can {{be positive}} or negative, in binary formats it is stored as an unsigned number {{that has a}} fixed [...] "bias" [...] added to it. Values of all 0s in this field are reserved for the zeros and subnormal numbers; values of all 1s are reserved for the infinities and NaNs. The [...] exponent range for normalized numbers is [...] for <b>single</b> <b>precision,</b> [...] for double, or [...] for quad. Normalized numbers exclude subnormal values, zeros, infinities, and NaNs.|$|E
5000|$|... strictfp, {{a keyword}} in the Java {{programming}} language that restricts arithmetic to IEEE 754 <b>single</b> and double <b>precision</b> to ensure reproducibility across common hardware platforms.|$|R
50|$|The car had a {{lightweight}} single seat body and was {{powered by a}} <b>Precision,</b> <b>single</b> cylinder, 3½ hp engine driving the rear wheels by belts. It cost GBP65.|$|R
50|$|The PPU is {{enhanced}} in the PowerXCell 8i processor {{to be able}} to make <b>single</b> cycle double <b>precision</b> floating point operations, tailored for high performance computing in supercomputers.|$|R
2500|$|The PS3 {{uses the}} Cell microprocessor, {{which is made}} up of one 3.2GHz PowerPC-based [...] "Power Processing Element" [...] (PPE) and six {{accessible}} Synergistic Processing Elements (SPEs). A seventh runs in a special mode and is dedicated to aspects of the OS and security, and an eighth is a spare to improve production yields. PlayStation 3's Cell CPU achieves a theoretical maximum of 230.4 GFLOPS in <b>single</b> <b>precision</b> floating point operations and up to +15GFLOPS double precision using iterative refinement for the solution of linear equations.|$|E
2500|$|PPE {{consists}} of three main units: Instruction Unit (IU), Execution Unit (XU) and vector/scalar execution unit (VSU). IU contains L1 instruction cache, branch prediction hardware, instruction buffers and dependency checking login. XU contains integer execution units (FXU) and load-store unit (LSU). VSU contains all of the execution resources for FPU and VMX. [...] Each PPE can complete two double precision operations per clock cycle using a scalar fused-multiply-add instruction, which translates to 6.4GFLOPS at 3.2GHz; or eight <b>single</b> <b>precision</b> operations per clock cycle with a vector fused-multiply-add instruction, which translates to 25.6GFLOPS at 3.2GHz.|$|E
2500|$|As {{an example}} of the second method, take the common add-and-shift {{algorithm}} for multiplication. Instead of shifting partial products to the left as is done with pencil and paper, the accumulated product is shifted right, into a second register that will eventually hold the least significant half of the product. Since the least significant bits are not changed once they are calculated, the additions can be <b>single</b> <b>precision,</b> accumulating in the register that will eventually hold the most significant half of the product. In the following example, again multiplying 6 by 5, the two registers and the extended sign bit are separated by [...] "|": ...|$|E
50|$|PLplot 5.9 is {{available}} by checking a {{box on the}} Project Options Libraries/Tools window. Bindings are available for both <b>single</b> and double <b>precision,</b> from FORTRAN 77 or Fortran 95 or for calling from Microsoft WIN32.|$|R
40|$|International audienceGiven floating-point {{arithmetic}} with t-digit base-β significands {{in which}} all arithmetic operations are performed as if calculated to infinite precision and rounded to a nearest representable value, we prove that the product of complex values z_ 0 and z_ 1 can be computed with maximum absolute error z_ 0 z_ 11 / 2 β^ 1 - t√(5). In particular, this provides relative error bounds of 2 ^- 24 √(5) and 2 ^- 53 √(5) for IEEE 754 <b>single</b> and double <b>precision</b> arithmetic respectively, provided that overflow, underflow, and denormals do not occur. We also provide the numerical worst cases for IEEE 754 <b>single</b> and double <b>precision</b> arithmetic...|$|R
50|$|Numbers were {{represented}} in ones' complement, <b>single</b> and double <b>precision.</b> The TRIM assembly source code used octal numbers {{as opposed to}} more common hexadecimal because the 18-bit words are evenly divisible by 3, but not by 4.|$|R
