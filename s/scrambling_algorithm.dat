38|18|Public
50|$|The Common <b>Scrambling</b> <b>Algorithm</b> (or CSA) is the {{encryption}} algorithm {{used in the}} DVB digital television broadcasting for encrypting video streams.|$|E
50|$|One {{well-known}} {{example of}} a system employing such Hook IP is the DVB Common <b>Scrambling</b> <b>Algorithm</b> DVB-CSA, which though standardised by ETSI, includes secret patented elements that are only licensed to approved Conditional access systems vendors who agree to maintain the secrecy and integrity of the algorithm in their chip designs.|$|E
5000|$|The ISDB {{specification}} {{describes a}} lot of (network) interfaces, but most importantly the Common Interface for Conditional Access System (CAS). While ISDB has examples of implementing various kinds of CASes, in Japan CAS called [...] "B-CAS" [...] is used. (ARIB STD-B25) defines the Common <b>Scrambling</b> <b>Algorithm</b> (CSA) system called MULTI2 required for (de-)scrambling television.|$|E
40|$|This paper {{provides}} a tutorial and survey of digital fingerprinting and video <b>scrambling</b> <b>algorithms</b> based on partial encryption. Necessary design tradeoffs for algorithm development are highlighted for multicast communication environments. We also propose a novel architecture for joint fingerprinting and decryption that holds promise {{for a better}} compromise between practicality and security for emerging digital rights management applications. Keywords—Digital fingerprinting tutorial, digital video encryption survey, joint fingerprinting and decryption (JFD), video scrambling. I...|$|R
40|$|Abstract. In this paper, {{multiple}} blind watermark algorithm {{based on}} wavelet packet transform (WPT) and two-dimensional chaos image scramble is put forward. In the sub-images of WPT, multiple watermarks are embedded and distilled blindly. Meantime, the image contrast enhancement to hidden information before hand can improve its robustness effectively. In {{order to improve}} the security, two-dimensional chaos image <b>scramble</b> <b>algorithm</b> is designed. Experimental {{results show that the}} multiple blind watermark algorithm has good invisibleness, security and robustness to common image processing and noise attack...|$|R
40|$|Recently, {{an image}} <b>scrambling</b> {{encryption}} <b>algorithm</b> of pixel bit based on chaos map was proposed. Considering the algorithm {{as a typical}} binary image scrambling/permutation algorithm exerting on plaintext of size M× (8 N), this paper proposes a novel optimal method to break it with some known/chosen-plaintexts. The spatial complexity and computational complexity of the attack are only O(32 · MN) and O(16 · n_ 0 · MN) respectively, where n_ 0 {{is the number of}} known/chosen-plaintexts used. The method can be easily extended to break any permutation-only encryption scheme exerting on plaintext of size M× N and with L different levels of values. The corresponding spatial complexity and computational complexity are only O(MN) and O(_L(MN) · MN) respectively. In addition, some specific remarks on the performance of the image <b>scrambling</b> encryption <b>algorithm</b> are presented. Comment: 11 pages, 6 figure...|$|R
50|$|The {{conditional}} access system (DVB-CA) defines a Common <b>Scrambling</b> <b>Algorithm</b> (DVB-CSA) and a physical Common Interface (DVB-CI) for accessing scrambled content. DVB-CA providers develop their wholly proprietary {{conditional access}} systems with reference to these specifications. Multiple simultaneous CA systems can be assigned to a scrambled DVB program stream providing operational and commercial flexibility for the service provider.|$|E
50|$|A DVB {{receiver}} {{may have}} one or two slots implementing the Common Interface (CI). The CI uses the conditional-access module (PCMCIA) connector and conforms to the Common <b>Scrambling</b> <b>Algorithm</b> (CSA), the normative that specifies that such a receiver must be able to accept DES (Data Encryption Standard) keys in intervals of some milliseconds, and use them to decode private channels according to a specific algorithm.|$|E
50|$|Under the Digital Video Broadcasting (DVB) standard, {{conditional}} access system (CAS) standards are defined in the specification documents for DVB-CA ({{conditional access}}), DVB-CSA (the common <b>scrambling</b> <b>algorithm)</b> and DVB-CI (the Common Interface). These standards define a method by which one can obfuscate a digital-television stream, with access provided only to those with valid decryption smart-cards. The DVB specifications for conditional access {{are available from the}} standards page on the DVB website.|$|E
30|$|In {{order to}} enhance the {{robustness}} and security of the watermark, before embedding the watermark into the digital image, we first use the Arnold <b>scrambling</b> encryption <b>algorithm</b> to preprocess the watermark. Arnold transform is an encryption technique based on the combination of pixel displacement and matrix transformation, which can be encrypted by changing the position or gray value of pixels, so {{that even if the}} attacker extracts the watermark, the original watermark image cannot be obtained if the encryption method or encryption key is not known.|$|R
40|$|Multimedia {{scrambling}} technologies {{ensure that}} multimedia content is only used by authorized users by transforming multimedia data into an unintelligible format. This paper introduces a new P-recursive sequence and two multimedia <b>scrambling</b> <b>algorithms</b> {{based on the}} P-recursive sequence. The P-recursive sequence is a more generalized sequence which can derive many well-known sequences such as the P-Fibonacci sequence, the P-Lucas sequence and P-Gray code. The algorithms {{can be used to}} scramble two or three dimensional multimedia data in one step. Electronic signatures, grayscale images and three-color-component images are all examples of 2 -D & 3 -D multimedia data which can utilize these algorithms. Furthermore, a security key parameter p may be chosen as different or the same values for each dimensional component of the multimedia data. Experiments show that the presented <b>algorithms</b> can <b>scramble</b> multimedia data at different levels of security by partially or fully encrypting multimedia data. They also have been demonstrated in the experiments to show good performance in known-plain text attack and common image attacks such as data loss, Gaussian noise, and Salt Pepper noise. The scrambled multimedia data can be completely reconstructed only by using the correct security keys. Keywords: multimedia scrambling, P-recursive sequence, P-Fibonacci sequence, P-Lucas sequence, P-Gray Code. 1...|$|R
40|$|Image {{scrambling}} {{is used to}} make images visually unrecognizable {{such that}} unauthorized users have difficulty decoding the scrambled image to access the original image. This article presents two new image <b>scrambling</b> <b>algorithms</b> based on Fibonacci p-code, a parametric sequence. The first algorithm works in spatial domain and the second in frequency domain (including JPEG domain). A parameter, p, {{is used as a}} security-key and has many possible choices to guarantee the high security of the scrambled images. The presented algorithms can be implemented for encoding/decoding both in full and partial image scrambling, and can be used in real-time applications, such as image data hiding and encryption. Examples of image scrambling are provided. Computer simulations are shown to demonstrate that the presented methods also have good performance in common image attacks such as cutting (data loss), compression and noise. The new scrambling methods can be implemented on grey level images and 3 -color components in color images. A new Lucas p-code is also introduced. The scrambling images based on Fibonacci p-code are also compared to the scrambling results of classic Fibonacci number and Lucas p-code. This will demonstrate that the classical Fibonacci number is a special sequence of Fibonacci p-code and show the different scrambling results of Fibonacci p-code and Lucas p-code...|$|R
50|$|Packet over SONET/SDH, {{abbreviated}} POS, is {{a communications}} protocol for transmitting packets {{in the form}} of the Point to Point Protocol (PPP) over SDH or SONET, which are both standard protocols for communicating digital information using lasers or light emitting diodes (LEDs) over optical fibre at high line rates. POS is defined by RFC 2615 as PPP over SONET/SDH. PPP is the Point to Point Protocol that was designed as a standard method of communicating over point-to-point links. Since SONET/SDH utilises point-to-point circuits, PPP is well suited for use over these links. Scrambling is performed during insertion of the PPP packets into the SONET/SDH frame to solve various security attacks including denial-of-service attacks and the imitation of SONET/SDH alarms. This modification was justified as cost-effective because the <b>scrambling</b> <b>algorithm</b> was already used by the standard used to transport ATM cells over SONET/SDH. However, scrambling can optionally be disabled to allow a node to be compatible with another node that uses the now obsoleted RFC 1619 version of Packet over SONET/SDH which lacks the scrambler.|$|E
30|$|It {{is known}} that a {{cellular}} automaton (CA) {{can be used to}} encrypt images efficiently [6 – 11], and using an image <b>scrambling</b> <b>algorithm</b> can make the entire encryption system safer and more reliable [12 – 14]. In computer science and mathematics, the Josephus problem is a theoretical problem related to a certain counting-out game [15]. The <b>scrambling</b> <b>algorithm</b> becomes {{an important part of the}} entire encryption system if the particular periodic characteristics of the algorithm are based on a Josephus ring [16 – 18].|$|E
30|$|To {{analyze the}} {{security}} of the entire encryption algorithm intuitively [21 – 25], we took 1 [*]×[*] 104 pixel points of each experimental image as samples. Next, we should demonstrate that using the <b>scrambling</b> <b>algorithm</b> can improve {{the security of}} the entire encryption algorithm.|$|E
40|$|Abstract. Two image {{generating}} algorithms {{based on}} square partial scrambling are raised to implement micro-pits with approximate uniformity distribution of YAG laser texturing roll. Micro-pits can be uniformly distributed {{to ensure the}} area-uniformity of the micro-pits distribution. Micro-pits can be partial scrambled and optimized according to the evaluation standard to ensure the direction-uniformity of the micro-pits distribution. Partial <b>scrambling</b> image generating <b>algorithms</b> based on square-aligned-array arrangement and square-staggered-array arrangement are both effective image generating algorithms of uniformity distribution. The latter is more effective...|$|R
40|$|Encryption {{algorithm}} {{of traditional}} cryptology has strong safety, {{but the effect}} of encrypting images is not good. Digital image scrambling means that a digital image {{is transformed into a}} chaotic image which has no evident significance, but the operator can reconstruct the chaotic image into the original image by using the specific <b>algorithm.</b> Image <b>scrambling</b> encryption technology based on chaos theory makes use of chaotic signal to encrypt image data flow, which has the advantages of high safety, rapid encryption speed, large key space and good scrambling effect. The paper studies invalid-key and quasi invalid-key existed in chaotic sequence which is generated by Logistic map, and proposes image <b>scrambling</b> encryption <b>algorithm</b> based on mixed and chaotic sequence. The algorithm has a good robustness for the JPEG compression with the fixed coefficient, and a good fragileness for the illegal manipulation. </span...|$|R
40|$|Abstract:- The {{security}} {{problem of}} speech communication {{has always been}} a demanding problem in military and business areas. A common approach to realizing end-to-end security is the use of a scrambler. Most of the scramblers are based on permutation of speech signals in the time domain and/or frequency domain. On the other hand, descramblers are used to eavesdrop information from scrambled speech signals. In this paper we propose a new approach to implement a descrambler. We treat the descrambling problem as a puzzle solving problem. In this considered puzzle problem, each piece is a rectangular-shaped gray scaled image puzzle. We propose two different methods to assemble puzzles. While the first method is based on human heuristics, the second method is based on the Ant Colony System (ACS) algorithm. Sixty scambled images were used to test the proposed methods. Key-Words:- puzzle, speech <b>scrambling,</b> optimization <b>algorithm,</b> ant colony system, swarm intelligence...|$|R
30|$|This paper {{proposes a}} new image <b>scrambling</b> <b>algorithm</b> based on the {{periodic}} characteristics of the Josephus ring. The algorithm composes the pretreatment part of the entire image encryption system and scrambles the rows and columns of the plain image. The Josephus <b>scrambling</b> <b>algorithm</b> is adjustable by using three kinds of parameters: step, m 0, and n. Different values affect {{the size of the}} periodic value of the Josephus ring. In this paper, we focus on the method of determining the period of the Josephus cycle when the parameters are set and the Josephus rule space under arbitrary parameters. Because the Josephus ring is a mathematical problem, we analyze it using the group theory of modern algebra. After the Josephus scrambling, the plain image is encrypted. Because a CA is suitable for image encryption, the encryption part adopts a CA encryption algorithm using a one-dimensional, four-neighbor CA, which has chaotic behavior at the rules of 9 d 62 (hex). Finally, the number of pixels change rate, the unified averaged changed intensity test, and correlation detection are carried out on the experimental results. The results show that the use of the Josephus <b>scrambling</b> <b>algorithm</b> greatly improves the security of the entire encryption system.|$|E
3000|$|... [...]), both {{of which}} are the core of the Josephus <b>scrambling</b> <b>algorithm</b> and {{guarantee}} the reversibility and rule space complexity of that algorithm. Different selections of m 0 and step also have a direct impact. To obtain a general conclusion, we encrypted experimental group images with the Josephus scrambling treatment and a control group of images without it. Both image groups used the cameraman, Lena, and other standard images. Then we did NPCR and UACI tests and correlation detection for two sets of samples. The experimental data show that compared with the control group, the images encrypted with Josephus scrambling had better randomness and higher NPCR values; the lower p value also shows the reliability of the experimental results. Therefore, we found that the Josephus <b>scrambling</b> <b>algorithm</b> can improve the randomness of image enciphering and the reliability of an encryption system.|$|E
40|$|This {{specification}} {{describes a}} Basic Interoperable Scrambling System (BISS-E) {{for use on}} digital contribution circuits (satellite, DSNG, etc.) which use MPEG- 2 compression, the DVB-S modulation scheme and the DVB Common <b>Scrambling</b> <b>Algorithm</b> with fixed keys. BISS-E uses encrypted Session Keys and allows centrally-managed Conditional Access. Tech 3292 rev. 2 BISS-E — TECHNICAL SPECIFICATIONTech 3292 rev. 2...|$|E
40|$|Abstract—In {{order to}} {{validate}} user requirements, tests are often conducted on real data. However, developments and tests {{are more and}} more outsourced, leading companies to provide external staff with real confidential data. A solution to this problem is known as Data <b>Scrambling.</b> Many <b>algorithms</b> aim at smartly replacing true data by false but realistic ones. However, nothing has been developed to automate the crucial task of the detection of the data to be scrambled. In this paper we propose an innovative approach- and its implementation as an expert system- to achieve the automatic detection of the candidate attributes for scrambling. Our approach is mainly based on semantic rules that determine which concepts have to be scrambled, and on a linguistic component that retrieves the attributes that semantically correspond to these concepts. Since attributes can not be considered independently from each other we also address the challenging problem of the propagation of the scrambling among the whole database. An important contribution of our approach is to provide a semantic modelling of sensitive data. This knowledge is made available through production rules, operationalizing the sensitive data detection. Keywords-data privacy; semantic rule; sensitive data; I...|$|R
40|$|Test {{phase is}} a crucial step in Information System design. It is a first real {{validation}} of user requirements. In order tomaximize their effectiveness, tests are often conducted onreal data. However developments and tests are more and moreoutsourced, leading companies to provide external staff withreal confidential data. A {{solution to this problem}} is known asData <b>Scrambling.</b> Many <b>algorithms</b> aim at smartly replacingtrue data by false but realistic ones. However nothing hasbeen developed to automate the crucial task of the detectionof the data to be scrambled. In this paper we propose aninnovative approach - and its implementation as an expertsystem - to achieve the automatic detection of the candidateattributes for scrambling. Our approach is mainly based onsemantic rules that determine which concepts have to bescrambled, and on a linguistic component that retrieves theattributes that semantically correspond to these concepts. Since attributes can not be considered independently fromeach other we also address the challenging problem of thepropagation of the scrambling among the whole database. An important contribution of our approach is to providea semantic modelling of sensitive data. This knowledge ismade available through production rules, operationalizing thesensitive data detection...|$|R
40|$|International audienceInterference between macro and femtocells is an {{important}} issue for the development of CDMA 2000 femtocell networks. More specifically, the reverse link signal of a macro UserEquipment may generate an unacceptable level of interference at the femto Base Station. To avoid this situation, interference mitigation techniques could be implemented. All the proposed techniques require to know the state of the scrambling code of the interferer in the reverse link. Unfortunately, it depends on the code mask of the terminal which is unknown by the femto BS. The femto BS has to estimate blindly the state of the <b>scrambling</b> code. An <b>algorithm</b> which performs a blind identification of the scrambling code of a CDMA 2000 reverse link transmission is proposed in this article. This gives the possibility to implement interference cancelation algorithm at the femto BS...|$|R
3000|$|... is <b>{{scrambling}}</b> <b>algorithm,</b> K is scrambling key, and || is {{a binding}} symbol {{which makes the}} correspondence between marking identity and true identity. A signature can achieve certification while scrambling can ensure the anonymity of entity. As regard to legal authentication in distributed anonymous condition, it can be achieved {{in the way of}} zero-knowledge [26]. Details will be ignored in terms of the article length limit.|$|E
40|$|The Common <b>Scrambling</b> <b>Algorithm</b> (CSA) is used {{to encrypt}} streams of video data in the Digital Video Broadcasting (DVB) system. The {{algorithm}} cascades a stream and a block cipher, apparently for a larger security margin. In this paper {{we set out to}} analyze the block cipher and the stream cipher separately and give an overview of how they interact with each other. We present a practical attack on the stream cipher...|$|E
40|$|Image {{scrambling}} is {{an important}} technique in digital image encryption and digital image watermarking. This paper's main purpose is to research how to scramble image by space-bit-plane operation (SBPO). Based on analyzing traditional bit operation of individual pixels image scrambling method, this paper proposed a new <b>scrambling</b> <b>algorithm.</b> The new <b>scrambling</b> <b>algorithm</b> combined with SBPO and chaotic sequence. First, every eight pixels from different areas of image were selected according to chaotic sequence, and grouped {{together to form a}} collection. Second, the SBPO was performed in every collection and built eight pixels of the image with new values. The scrambling image was generated when all pixels were processed. In this way, the proposed algorithm transforms drastically the statistical characteristic of original image information, so, it increases the difficulty of an unauthorized individual to break the encryption. The simulation results and the performance analysis show that the algorithm has large secret-key space, high security, fast scrambling speed and strong robustness, and is suitable for practical use to protect the security of digital image information over the Internet...|$|E
40|$|CSA is {{utilized}} {{in almost every}} scrambled digital television channel. The MPEG streams are encoded by this using an 8 -byte seed and that is {{needed in order to}} descramble the channels as well. This seed normally is obtained by a second algorithm; this second algorithm can be any common standard for <b>scrambling.</b> This second <b>algorithm</b> is only needed to get the seed for the CSA. This means that if you know the seed, then {{you will be able to}} descramble the any channel. The task becomes finding the seed. This seed is 64 -bit which means there are 10 19 different values. We propose to implement the CSA algorithm using C. We will assume that the seed is not created from another algorithm, but rather, it is given. We plan on using a block cipher to encrypt and decrypt the data. We will create an interface that will enable the user to enter plaintext values and will output encrypted values. This interface will also be able to decrypt encrypted values...|$|R
40|$|The {{purpose of}} this paper is to devise optimal {{algorithms}} for parsing linguistic structures that contain P 2 (Wackernagel) clitics. Since many languages that have P 2 clitics also allow <b>scrambling,</b> any <b>algorithms</b> for parsing P 2 clitics must also contain <b>algorithms</b> for parsing <b>scrambled</b> structures. Most of the energy of this paper, however, will be focused on P 2 parsing. Although many languages have P 2 clitics. I have focused most of my attention on Native American languages (with some exceptions). There is one major reason for this: languages of the Americas are almost entirely ignored by the computational and parsing literature, which focuses on languages of the Indo-European language family (and almost always on English, at that). By doing so, researchers deprive themselves of data and linguistic structural diversity that can help in devising more widely applicable parsing algorithms. This is a computational paper, the intention of which is to develop parsing procedures. Little attention will be paid to a specific syntactic /morphological theory, nor will much attention be paid to the form of the output. These are concerns that can be addressed in a later stage of parser design. What is an "optimal" parsing algorithm? I shall define the optimality of a given solution by the criteria in (1) below: (1) 1) The optimal solution is one which uses devices and formalisms whose generative capacity is as low as possible on the Chomsky hierarchy. 2) The optimal solution uses as few "rules" or "devices" as possible. Obviously, it will be necessary to strike a balance between these two criteria. For this reason, the issue of optimality may be somewhat lexìbìe, depending on how much weight is given to each criterion. The most optimal solutions might require the power of context -sensitive rules, but these may be used in concert with context -free or even finite-state rules...|$|R
40|$|Abstract – The {{purpose of}} the cell search {{algorithm}} in UMTS is to estimate the spreading code of the serving base-station and its corresponding timing offset. The search procedure consists of 3 sequential and distinct stages: (1) slot-boundary synchronization, (2) frame-boundary synchronization with code-group identification, and (3) <b>scrambling</b> code identifica-tion. <b>Algorithms</b> that have appeared in literature for cell search have confined the “code-time ” estimation in each stage to a single hypothesis. Furthermore, these algorithms have neither considered the benefits of oversampling, nor the det-rimental effects of non-ideal sampling that may arise due to clock jitter and/or residual frequency offset. In this paper, we study the performance benefits of esti-mating multiple “code-time ” hypotheses in each stage of the cell-search process. In addition, we also study the effect of oversampling and non-ideal sampling. Our results indicate that, {{in the presence of}} non-ideal sampling, performance im-proves significantly if the received signal is oversampled by a factor of 4 or more. We also show that estimating 4 “code-time ” hypotheses instead of 1 in the cell-search stages reduces the search-time (i. e. the code-acquisition time) considerably, in particular at low SINR. I...|$|R
40|$|The Common <b>Scrambling</b> <b>Algorithm</b> Stream Cipher (CSASC) is a shift {{register}} based stream cipher designed to encrypt digital video broadcast. CSA-SC produces a {{pseudo-random binary sequence}} {{that is used to}} mask the contents of the transmission. In this paper, we analyse the initialisation process of the CSA-SC keystream generator and demonstrate weaknesses which lead to state convergence, slid pairs and shifted keystreams. As a result, the cipher may be vulnerable to distinguishing attacks, time-memory-data trade-off attacks or slide attacks...|$|E
40|$|The aim {{of speech}} {{scrambling}} algorithms is to transform clear speech into an unintelligible signal {{so that it}} is difficult to decrypt it in the absence of the key. Most of the existing speech scrambling algorithms tend to retain considerable residual intelligibility in the scrambled speech and are easy to break. Typically, a speech <b>scrambling</b> <b>algorithm</b> involves permutation of speech segments in time, frequency or time-frequency domain or permutation of transform coefficients of each speech block. The time-frequency algorithms have given very low residual intelligibility and have attracted much attention. We first study the uniform filter bank based time-frequency <b>scrambling</b> <b>algorithm</b> with respect to the block length and number of channels. We use objective distance measures to estimate the departure of the scrambled speech from the clear speech. Simulations indicate that the distance measures increase as we increase the block length and the number of chan­nels. This algorithm derives its security only from the time-frequency segment permutation and it has been estimated that the effective number of permutations which give a low residual intelligibility is much less than the total number of possible permutations. In order to increase the effective number of permutations, we propose a time-frequency <b>scrambling</b> <b>algorithm</b> based on wavelet packets. By using different wavelet packet filter banks at the analysis and synthesis end, we add an extra level of security since the eavesdropper has to choose the correct analysis filter bank, correctly rearrange the time-frequency segments, and choose the correct synthesis bank to get back the original speech signal. Simulations performed with this algorithm give distance measures comparable to those obtained for the uniform filter bank based algorithm. Finally, we introduce the 2 -channel perfect reconstruction circular convolution filter bank and give a simple method for its design. The filters designed using this method satisfy the paraunitary properties on a discrete equispaced set of points in the frequency domain...|$|E
40|$|Abstract. The Common <b>Scrambling</b> <b>Algorithm</b> (CSA) is used {{to encrypt}} streams of video data in the Digital Video Broadcasting (DVB) system. The {{algorithm}} uses {{a combination of a}} stream and a block cipher, apparently for a larger security margin. However these two algorithms share a common key. In this paper we present a fault attack on the block cipher which can be launched without regarding the stream cipher part. This attack allows us to reconstruct the common key and thus breaks the complete Algorithm...|$|E
40|$|In this paper, {{we study}} the various steps {{involved}} in the cell search process and an attempt has made to simulate them. When the received signal was correlated with the Primary Synchronization Code (PSC) sequences generated at the mobile station (MS), some peak values were obtained and the maximum of those peak values was displayed as the slot value for that particular frame. In frame synchronization process, a Fast Hadamard Transformer (FHT) was used to match arbitrary Secondary Synchronization Code (SSC) sequence with the frames and 16 values were obtained. In code synchronization process, the 16 values obtained are match with the values generated at the MS and the max of those values will be taken. The simulations designed satisfy most of {{the requirements of the}} parameters mentioned in the 3 GPP specifications. The purpose of the cell search algorithm in UMTS is to estimate the spreading code of the serving base-station and its corresponding timing offset. The search procedure consists of 3 sequential and distinct stages: (1) slot-boundary synchronization, (2) frame-boundary synchronization with code-group identification, and (3) <b>scrambling</b> code identification. <b>Algorithms</b> that have appeared for cell search have confined the “code-time ” estimation in each stage to a single hypothesis. In this paper, we also study the performance benefits of estimating multiple “code-time ” hypotheses in each stage of the cell-search process. The main objectives {{of this paper is to}} construct a model using MATLAB to illustrate the working of the various processes involved in cell search and to analyze the difference between the results of system model...|$|R
40|$|Sensitivity {{analysis}} (SA) is {{a procedure}} for studying how sensitive are the output results of large-scale mathematical models to some uncertainties of the input data. The models {{are described as}} a system of partial differential equations. Often such systems contain {{a large number of}} input parameters. Obviously, {{it is important to know}} how sensitive is the solution to some uncontrolled variations or uncertainties in the input parameters of the model. Algorithms based on analysis of variances technique (ANOVA) for calculating numerical indicators of sensitivity and computationally efficient Monte Carlo integration techniques have recently been developed by the authors. They have been successfully applied to sensitivity studies of air pollution levels calculated by the Unified Danish Eulerian Model (UNI-DEM) with respect to several important input parameters. In this paper a comprehensive theoretical and experimental study of the Monte Carlo algorithm based on symmetrised shaking of Sobol sequences has been done. It has been proven that this algorithm has an optimal rate of convergence for functions with continuous and bounded second derivatives in terms of probability and mean square error. Extensive numerical experiments with Monte Carlo, quasi-Monte Carlo (QMC) and <b>scrambled</b> quasi-Monte Carlo <b>algorithms</b> based on Sobol sequences are performed to support the theoretical studies and to analyze applicability of the algorithms to various classes of problems. The numerical tests show that the Monte Carlo algorithm based on symmetrised shaking of Sobol sequences gives reliable results for multidimensional integration problems under consideration. Comment: available in O. P. Iliev et al. (eds.), Numerical Solution of Partial Differential Equations: Theory, Algorithms, and Their Applications, Springer Proceedings in Mathematics&Statistics 45, Springer Science+Business Media, New York, 2013, 137 - 15...|$|R
30|$|Genetic {{algorithms}} are search based algorithms {{which have}} higher probability {{of finding a}} global optimum as they use potential solutions and probabilistic transition rules to create a set of new solutions. Genetic <b>algorithms</b> <b>scramble</b> the candidate solutions of the optimized algorithm as a string of characters which are usually binary digits. Genetic algorithms consider random strings to form inhabitants and updates iteratively in search of good solutions, which consider each iteration as a generation. A typical genetic algorithm requires a genetic representation of the solution domain and a fitness function to evaluate the solution domain. Once the genetic representation and the fitness function are defined, a GA proceeds to initialize a population of solutions and then to improve it through repetitive application of the mutation, crossover, inversion and selection operators. In order to attain the accuracy with a four bit coding, approximately 1 / 16 th of the search space is needed. If the string length is increased by one, the accuracy increases exponentially to 1 / 32 th of the search space. Taking the initial population size of an algorithm as N it considers the random strings as a variable Then compute the probability of each string derivative into the reproducing pool, by dividing with population size N. A fitness function F is derived and used in successive genetic operations Fang et al. (2003). The fitness of each discrete individual in the population is assessed through the cost function and new-fangled individuals are generated by using genetic operators (Changyu et al. 2007; Gupta and Sexton 1999). The genetic operators are involved in creating a list of solutions which perform various operations. In the crossover operation, new strings are produced by swapping information among strings in the reproducing pool. In single point cross over, two strings in the reproducing pool are selected at random and some portions of the strings are exchanged between the strings. The reproduction operator chooses noble strings and the crossover operator recombines noble strings together to optimistically create an improved sub-string (Varnamkhasti et al. 2012; Ozcelik and Erzulumla 2006). The mutation operator varies a string locally to optimistically create a novel string. In every cycle, new population is generated, estimated and verified for termination. The generational process is repeated until a termination condition has been reached. Common terminating conditions {{are said to be}} met when the solution is found that satisfies minimum criteria, when a fixed number of generations have been reached, or when allocated budget (computation time/money) has been reached. Other conditions for termination could be when the highest ranking solution’s fitness is reaching or has reached a plateau such that successive iterations no longer produce better results or by manual. If the termination criterion is not met, the population is iteratively operated by the above three operators and estimated.|$|R
