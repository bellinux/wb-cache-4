159|1350|Public
25|$|Most recently, Parkin has {{proposed}} {{and is working}} on a novel storage class memory device, The Magnetic Racetrack memory, which could replace both hard disk drives and many forms of conventional solid <b>state</b> <b>memory.</b> His research interests also include spin transistors and spin-logic devices that may enable a new generation of low-power electronics.|$|E
2500|$|In 2011, {{researchers}} at the University of Pittsburgh announced {{the development of a}} single-electron transistor, 1.5 nanometers in diameter, made out of oxide based materials. Three [...] "wires" [...] converge on a central [...] "island" [...] that can house one or two electrons. Electrons tunnel from one wire to another through the island. Conditions on the third wire result in distinct conductive properties including the ability of the transistor to act as a solid <b>state</b> <b>memory.</b> Nanowire transistors could spur the creation of microscopic computers.|$|E
2500|$|The SanDisk SDMX1 (including SDMX1-1024, -512, and -256—reflecting {{capacity}} in MB), {{also known as}} the SanDisk Digital Audio Player, is a low-end solid <b>state</b> <b>memory</b> MP3 player. It was SanDisk's first personal media player, and the only one not to carry the Sansa brand. It can handle MP3, WMA and the protected WMA DRM files. It cannot play seamlessly, and imposes a non-configurable fade {{at the beginning and end}} of each file. There is a microphone for low-fidelity (8 kHz) voice recording, and there is a built in FM radio. The SanDisk SDMX1 is powered by a single AAA battery that gives around 15 hours of continuous playback. The dimensions are 75.2mm x 32.8mm x 20.8mm and weighing under [...] Its release date was January 11, 2006.|$|E
2500|$|SPD (Serial Presence Detect), from JEDEC {{standard}} No. 21-C (JESD21C: JEDEC configurations for solid <b>state</b> <b>memories)</b> ...|$|R
40|$|I {{analyze the}} effects of memory {{limitations}} on the endogenous learning behavior of an agent in a standard two-armed bandit problem. An infinitely lived agent chooses each period between two alternatives with unknown types, to maximize discounted payo¤s. The agent can experiment with each alternative and receive payoffs that are partially informative about its type. The agent does not recall past actions or payo¤s. Instead, the agent has {{a finite number of}} <b>memory</b> <b>states</b> as in Wilson (2004) : he can condition his actions only on the <b>memory</b> <b>state</b> he is currently in, and he can update his <b>memory</b> <b>state</b> depending on the payoff received. I …find that the inclination to choose the currently better alternative does not constrain learning in the limit as discounting vanishes. Even though uncertainties are independent, the agent optimally holds correlated beliefs across <b>memory</b> <b>states.</b> Optimally, <b>memory</b> <b>states</b> re‡ect the magnitude of the relative ranking of alternatives. After a high payoff from one of the alternatives, the agent optimally moves to a <b>memory</b> <b>state</b> with more pessimistic beliefs on the other, even though no information abou...|$|R
50|$|The {{standard}} JESD21-C: Configurations for Solid <b>State</b> <b>Memories</b> {{is maintained}} by JEDEC committee JC41. This committee consists of members from manufacturers of microprocessors, memory ICs, memory modules, and other components, {{as well as}} component integrators, such as video card and personal computer makers. Standard 21 is published in loose-leaf binder format to accommodate frequent updates.|$|R
50|$|IBM's {{design of}} the single-level storage was {{originally}} conceived and pioneered by Frank Soltis in the late 1970s {{as a way to}} build a transitional implementation to computers with 100% solid <b>state</b> <b>memory.</b> The thinking at the time was that disk drives would become obsolete, and would be replaced entirely with some form of solid <b>state</b> <b>memory.</b> i5/OS was designed to be independent of the form of hardware memory used for secondary storage. This has not come to be, however, because while solid <b>state</b> <b>memory</b> has become exponentially cheaper, disk drives have also become similarly cheaper; thus, the price ratio in favour of disk drives continues: very much higher capacities than solid <b>state</b> <b>memory,</b> very much slower to access, and much less expensive.|$|E
5000|$|Manual {{display and}} {{modifications}} of the system's <b>state</b> (<b>memory</b> and processor) ...|$|E
5000|$|... a function, f, {{of fixed}} length that permutes or {{transforms}} the <b>state</b> <b>memory</b> ...|$|E
5000|$|... {{contains}} {{basic information}} about a process including its run <b>state</b> and <b>memory</b> usage.|$|R
40|$|I {{am working}} on two projects: (1) {{providing}} system support for querying large graphs (e. g. social networks) on {{a cluster of}} machines, and (2) reconfiguring replicated databases autonomically. Recent research includes the following: � Mitigating I/O peaks through write off-loading [OSDI’ 08]. � Employing solid <b>state</b> <b>memories</b> in enterprise storage systems [EuroSys’ 09]. � Providing strong consistency in replicated databases [ICDE’ 10]...|$|R
5000|$|Donated an 80-bed hostel in Ibogun, Ogun <b>State</b> in <b>memory</b> of his mother, Mr. Ramotu Ibironke Babalakin.|$|R
5000|$|The R {{portion of}} the <b>state</b> <b>memory</b> is the first r bits of output ...|$|E
5000|$|DECSYSTEM-2060: ECL {{processor}} with 2k words of cache {{and up to}} 4096 kilowords of solid <b>state</b> <b>memory</b> ...|$|E
50|$|The V200 {{is a type}} of Seeburg Corporation jukebox dated from 1955. The {{first with}} solid <b>state</b> <b>memory.</b>|$|E
40|$|I {{analyze the}} e¤ects of memory {{limitations}} on the endogenous learning behavior of an agent in a standard two-armed bandit problem. An in 8 ̆ 5 nitely lived agent chooses each period between two alternatives with unknown types, to maximize discounted payo¤s. The agent can experiment with each alternative and receive payo¤s that are partially informative about its type. The agent does not recall past actions or payo¤s. Instead, the agent has a 8 ̆ 5 nite number of <b>memory</b> <b>states</b> as in Wilson (2004) : he can condition his actions only on the <b>memory</b> <b>state</b> he is currently in, and he can update his <b>memory</b> <b>state</b> depending on the payo ¤ received. I nd that the inclination to choose the currently better alternative does not con-strain learning in the limit as discounting vanishes. Even though uncertainties are independent, the agent optimally holds correlated beliefs across <b>memory</b> <b>states.</b> Op-timally, <b>memory</b> <b>states</b> reect {{the magnitude of the}} relative ranking of alternatives. After a high payo ¤ from one of the alternatives, the agent optimally moves to a mem-ory state with more pessimistic beliefs on the other, even though no information abou...|$|R
40|$|We {{describe}} a general technique {{that allows for}} an ideal transfer of quantum correlations between light fields and metastable states of matter. The technique is based on trapping quantum states of photons in coherently driven atomic media, in which the group velocity is adiabatically reduced to zero. We discuss possible applications such as quantum <b>state</b> <b>memories,</b> generation of squeezed atomic states, preparation of entangled atomic ensembles and quantum information processing...|$|R
40|$|This paper {{makes the}} idea of memory {{shadowing}} (Bryant and Velev, 1997) applicable to symbolic ternary simulation. Memory shadowing, an extension of Burch and Dill 2 ̆ 7 s (1994) pipeline verification method to the bit level, is a technique for providing on-the-fly identical initial <b>memory</b> <b>state</b> to two different memory execution sequences. We also present an algorithm which compares the final <b>states</b> of two <b>memories</b> for ternary correspondence, {{as well as an}} approach for generating efficiently the initial <b>state</b> of <b>memories.</b> These techniques allow us to verify that a pipelined circuit has behavior corresponding to that of its unpipelined specification by simulating two symbolic ternary execution sequences and comparing their <b>memory</b> <b>states.</b> Experimental results show the potential of the new idea...|$|R
5000|$|These binary {{numbers are}} stored on {{recording}} media {{such as a}} hard drive, optical drive or in solid <b>state</b> <b>memory.</b>|$|E
50|$|Certain denial-of-service attacks bombard the {{firewall}} {{with thousands}} of fake connection packets {{in an attempt to}} overwhelm it by filling its connection <b>state</b> <b>memory.</b>|$|E
50|$|Transformer Read Only Storage (TROS) was {{a type of}} ROM used in the 1960s {{and early}} 1970s before solid <b>state</b> <b>memory</b> devices were developed.|$|E
6000|$|... [105]: Muñoz, part inedit. Las Casas {{says the}} fleet {{consisted}} of thirty-two sail. He <b>states</b> from <b>memory,</b> however; Muñoz from documents.|$|R
5000|$|Load (ld) {{and store}} (st) {{commands}} refer {{to one of}} several distinct <b>state</b> spaces (<b>memory</b> banks), e.g. ld.param.There are eight state spaces: ...|$|R
50|$|One of {{the most}} {{important}} functions of memory is the ability to use learned information to make predictions in future planning. Adaptive <b>memory</b> <b>states</b> that <b>memory</b> was created and developed by the process of natural selection, so many components of memory systems were important for long-term planning, the importance of which is central to ensuring survival and the passing of genes.|$|R
50|$|The {{left-hand}} {{side of the}} phone also houses the Memory Stick PRO Duo slot for external solid <b>state</b> <b>memory,</b> which is protected by a flexible rubber cover.|$|E
50|$|The <b>state</b> <b>memory</b> {{is divided}} into two {{sections}}: one of size r (the bitrate) and the other of size c (the capacity). These sections are denoted R and C respectively.|$|E
5000|$|Another metaphor {{describes}} the <b>state</b> <b>memory</b> as an [...] "entropy pool", with input [...] "poured into" [...] the pool, and the transformation function {{referred to as}} [...] "stirring the entropy pool".|$|E
5000|$|Test Completeness: Each {{processing}} function φ must be executable for {{at least}} one input, with respect to all <b>memory</b> <b>states.</b> This ensures that there are no deadlocks, where the machine is blocked by the current <b>state</b> of <b>memory.</b> To ensure test completeness, the domain of a function φ may be extended with special test inputs that are only used during testing.|$|R
30|$|In addition, a <b>memory</b> <b>state</b> {{feedback}} controller with input constraints yields less conservative sufficient conditions {{in terms of}} LMIs and allows for a wider feasible region of numerical optimization [13]. In [14], a new stabilization condition for T-S fuzzy systems with time delay was obtained by the <b>memory</b> <b>state</b> {{feedback controller}}. In [15], <b>memory</b> <b>state</b> feedback control for singular systems with multiple internal incommensurate constant point delays was demonstrated. In [16], analysis and synthesis of memory-based fuzzy sliding mode controllers were discussed.|$|R
40|$|There is {{evidence}} that biological synapses have only a fixed number of discrete weight <b>states.</b> <b>Memory</b> storage with such synapses behaves quite differently from synapses with unbounded, continuous weights as old memories are automatically overwritten by new memories. We calculate the storage capacity of discrete, bounded synapses in terms of Shannon information. For optimal learning rules, we investigate how information storage depends {{on the number of}} synapses, the number of synaptic states and the coding sparseness. Comment: 5 pages, 2 figure...|$|R
50|$|TXE4A {{dispensed}} with Dimond rings and used solid <b>state</b> <b>memory.</b> This allowed for changes to exchange data i.e. customer {{information to be}} made by keyboard instead of by laboriously threading jumpers through Dimond rings.|$|E
5000|$|More complex {{function}} blocks {{are to be}} built from these E elements. He shows {{how to use these}} E elements to build circuits for addition, subtraction, multiplication, division and square root, as well as two <b>state</b> <b>memory</b> blocks and control circuits. He does not use Boolean logic terminology.|$|E
50|$|Flash {{memory is}} a form of solid <b>state</b> <b>memory.</b> It was invented in the 1980s by the Toshiba company.Flash memory is a {{particular}} type of EEPROM (Electrically Erasable Programmable Read Only Memory). It is a non-volatile memory. It retains the stored information without requiring a power source. It is called solid <b>state</b> <b>memory</b> because it has no moving parts. Flash memory is different from the regular EEPROM. In case of EEPROM data are erased one byte at a time which makes it much slower. On the other hand, data stored in flash memory can be erased in blocks. That is why it gets its name “flash memory” because the chip is organized {{in such a way that}} a block of memory cells can be erased at a single time or “flash”.|$|E
25|$|These {{are found}} in analog {{phosphor}} storage oscilloscopes. These are distinct from digital storage oscilloscopes which rely on solid <b>state</b> digital <b>memory</b> to store the image.|$|R
40|$|We {{report on}} a source of ultranarrow-band photon pairs {{generated}} by widely nondegenerate cavity-enhanced spontaneous down-conversion. The source {{is designed to be}} compatible with Pr 3 + solid <b>state</b> quantum <b>memories</b> and telecommunication optical fibers, with signal and idler photons close to 606 nm and 1436 nm, respectively. Both photons have a spectral bandwidth around 2 MHz, matching the bandwidth of Pr 3 + doped quantum memories. This source is ideally suited for long distance quantum communication architectures involving solid <b>state</b> quantum <b>memories.</b> Comment: 5 pages, 5 figure...|$|R
40|$|The paper {{describes}} a general-system for design of oceanographic instruments [...] The system uses a standard mechanical housing and a v~riety of compatible electronic units {{which can be}} plugged into the hausing in a few seconds. Data are recorded on solid <b>state</b> <b>memories</b> and transfered to different readout devices via optocoupling through the sealed instrument to p. By re ad ing da ta directly in to a microproce s sor, process ed data may be presented in the field within minutes. Details of the system are presented in the Poster Session...|$|R
