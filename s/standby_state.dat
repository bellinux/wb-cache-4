51|12|Public
5000|$|BM Start-Up: {{mainstream}} major generation units {{maintained in}} either an energy readiness or hot <b>standby</b> <b>state.</b>|$|E
50|$|In the 1990s, the 65C816 (as {{well as its}} antecedent, the 65C02) was {{converted}} to a fully static core, which {{made it possible to}} completely stop the processor clock without losing data in any of the registers. This feature, along with the use of asynchronous static RAM, made it possible to produce designs that used minimal power when in a <b>standby</b> <b>state.</b>|$|E
50|$|Project Kal-El (Tegra 3), {{patented}} by NVIDIA, {{was the first}} SoC (System on Chip) to implement this new vSMP technology. This technology not only reduces mobile power consumption during active <b>standby</b> <b>state,</b> but also maximizes quad core performance during active usage for intensive mobile applications. Overall this technology addresses the need for increase in battery life performance during active and standby usage by reducing the power consumption in mobile processors.|$|E
40|$|As {{technology}} scales, subthreshold {{leakage currents}} grow exponentially {{and become an}} increasingly large component of total power disscation. CAD tools to help model and manage subthreshold leakage currents will be needed for developing ultra low power and high performance integrated circuits. This paper gives an overview of current research to control leakage currents, {{with an emphasis on}} areas where CAD improvements will be needed. The first part of the paper explores techniques to model subthreshold leakage currents at the device, circuit, and system levels. Next, circuit techniques such as source biasing, dual Vt partitioning, MTCMOS, and VTCMOS are described. These techniques reduce leakage currents during <b>standby</b> <b>states</b> and minimize power consumption. This paper also explores ways to reduce total active power by limiting leakage currents and optimally trading off between dynamic and leakage power components...|$|R
40|$|This paper investigates a new TDMA-based MAC, called C-MAC (MAC using Chinese {{remainder}} theorem), proto-col {{with low}} power consumption while maintaining low packet latency for large-scale cluster-based WSNs. To offer {{low power consumption}}, each node (cluster mem-ber/RFD) and coordinator (cluster head/FFD) to be ac-tive (transmit/receive) and sleep (<b>standby)</b> <b>states</b> based on the time-slot schedule of Chinese remainder theorem. To provide low packet latency, our C-MAC protocol provides an adaptive time-slot scheme to distributively and dynam-ically wake up time slots for the burst data transmission in a duty cycle, where the wake-up time slots {{are based on the}} Chinese remainder theorem to avoid the time slot collision between different clusters. Finally, simulation re-sults illustrate our performance achievements to verify that C-MAC performs better than existing TDMA-based MAC protocols, BMA and EMAC, in terms of power consump-tion and average packet latency...|$|R
40|$|This {{dissertation}} proposes an ultra-low power {{design methodology}} called bit-wise MTNCL for bit-wise pipelined asynchronous circuits, which combines multi-threshold CMOS (MTCMOS) with bit-wise pipelined NULL Convention Logic (NCL) systems. It provides the leakage power advantages of an all high-Vt implementation with a reasonable speed penalty {{compared to the}} all low-Vt implementation, and has negligible area overhead. It was enhanced to handle indeterminate <b>standby</b> <b>states.</b> The original MTNCL concept was enhanced significantly by sleeping Registers and Completion Logic as well as Combinational circuits to reduce area, leakage power, and energy per operation. This dissertation also develops an architecture that allows NCL circuits to recover from a Single Event Upset (SEU) or Single Event Latchup (SEL) fault without any data loss. Finally, an accurate throughput derivation formula for pipelined NCL circuits was developed, {{which can be used}} for static timing analysis...|$|R
5000|$|... 16S is a {{supersonic}} {{wind tunnel}} {{that can be}} configured for Mach numbers from 1.5 to 4.750. The test section is also 16-foot-square and 40-foot long. The facility can simulate unit Reynolds numbers from approximately 0.1 to 2.4 million per foot or altitude conditions from 43,000 to 154,000 feet. Currently 16S is in the <b>standby</b> <b>state.</b> [...] 16S ran again {{for the first time}} in more than 10 years on May 7, 2015, after an 18 month return to service effort.|$|E
50|$|Soft cooling is the {{practice}} of utilizing software {{to take advantage of}} CPU power saving technologies to minimize energy use. This is done using halt instructions to turn off or put in <b>standby</b> <b>state</b> CPU subparts that aren't being used or by underclocking the CPU. While resulting in lower total speeds, this can be very useful if overclocking a CPU to improve user experience rather than increase raw processing power, since it can prevent the need for noisier cooling. Contrary to what the term suggests, it is not a form of cooling but of reducing heat creation.|$|E
5000|$|On April 23, 1948, Lynn H. Korndorff, the President of Federal Shipbuilding and Drydock Company {{announced}} that the US Navy had agreed to purchase facilities at Kearny for around $2,375,000 ($ today), its depreciated book value. The Navy planned to hold the facility in a <b>standby</b> <b>state</b> for potential emergency reactivation. The New York Times regarded this sale price to be [...] "astounding low". In July 1948, Federal's large floating dry dock was towed 1,700 miles in 19 days to Gulf Shipbuilding Corporation's Chickasaw, Alabama shipyard, which had been constructed during World War I by U.S. Steel, parent of Federal SB&DD.|$|E
30|$|We can notice {{from the}} above {{equations}} that the more the hard disk is in idle mode (y ≃ 1), the higher is the probability that it will remain in <b>standby</b> and sleep <b>states.</b>|$|R
40|$|A central {{question}} in designing server farms today {{is how to}} efficiently provision the number of servers to extract the best performance under unpredictable demand patterns while not wasting energy. While one would like to turn servers off when they become idle to save energy, the large setup cost (both, in terms of setup time and energy penalty) needed to switch the server back on can adversely affect performance. The problem is made more complex {{by the fact that}} today’s servers provide multiple sleep or <b>standby</b> <b>states</b> which trade off the setup cost with the power consumed while the server is ‘sleeping’. With so many controls, finding the optimal server farm management policy is an almost intractable problem – How many servers should be on at any given time, how many should be off, and how many should be in some sleep state? In this paper, we employ the popular metric of Energy-Response time Product (ERP) to capture the energy-performance tradeoff, and present the first theoretical results on the optimality of server farm management policies. For a stationary demand pattern, we prove that there exists a very small, natural class of policies that always contains the optimal policy for a single server, and conjecture it to contain a near-optimal policy for multi-server systems. For time-varying demand patterns, we propose a simple, traffic-oblivious policy and provide analytical and empirical evidence for its near-optimality...|$|R
25|$|On January20–22, the {{governors}} of eleven states and the mayor of Washington, D.C. {{declared a state of}} emergency in anticipation of significant snowfall and blizzard conditions. Approximately 103million people were affected by the storm, with 33million people under blizzard warnings. More than 13,000flights were cancelled in relation to the storm, with effects rippling internationally. Thousands of National Guardsmen were placed on <b>standby</b> and <b>states</b> deployed millions of gallons of brine and thousands of tons of road salt to lessen the storm's effect on roadways. A travel ban was instituted for New York City and Newark, New Jersey for January23–24. The storm was given various unofficial names, including Winter Storm Jonas and Snowzilla.|$|R
50|$|GLBP elects one AVG (Active Virtual Gateway) {{for each}} group. Other group members act as backup {{in case of}} AVG failure. In case {{there are more than}} two members, the second best AVG is placed in the <b>Standby</b> <b>state</b> and all other members are placed in the Listening state. This is {{monitored}} using hello and holdtime timers, which are 3 and 10 seconds by default. The elected AVG then assigns a virtual MAC address to each member of the GLBP group, including itself, thus enabling AVFs (Active Virtual Forwarders). Each AVF assumes responsibility for forwarding packets sent to its virtual MAC address. There could be up to four AVFs at the same time.|$|E
30|$|Subsystem A (crystallization): It {{consists}} of two units connected in parallel, one operative {{and the other in}} a cold <b>standby</b> <b>state.</b> The complete failure of the system will occur when more than one unit fail at a time.|$|E
40|$|A {{transponder}} {{that may}} be used as an RFID tag includes a passive circuit to eliminate the need for an "always on" active RF receiving element to anticipate a wake-up signal for the balance of the transponder electronics. This solution allows the entire active transponder to have all circuit elements in a sleep (<b>standby)</b> <b>state,</b> thus drastically extending battery life or other charge storage device life. Also, a wake-up solution that reduces total energy consumption of an active transponder system by allowing all non-addressed transponders to remain in a sleep (<b>standby)</b> <b>state,</b> thereby reducing total system or collection energy. Also, the transponder and wake-up solution are employed in an asset tracking system...|$|E
30|$|In psychology, {{there is}} a {{capacity}} limit in working memory. Early studies suggested that a maximum of 7 items can be maintained in working memory without causing confusion Miller, (1956), but later studies argued for a smaller capacity of about 4 chunks in young adults, and fewer in children and elderly Cowan, (2001). In our model, it seems that an unlimited number of objects can be stored as <b>standby</b> (de-synchronized <b>state).</b> However, the reliability of information processing would become poor with increasing memory load. This is because the error correction mechanism (Section 3.4) is just a random binding of Memory Units. When more objects are stored, the probability of getting a correct binding would decrease exponentially.|$|R
50|$|On January 20-22, the {{governors}} of eleven states and the mayor of Washington, D.C. {{declared a state of}} emergency in anticipation of significant snowfall and blizzard conditions. Approximately 103 million people were affected by the storm, with 33 million people under blizzard warnings. More than 13,000 flights were cancelled in relation to the storm, with effects rippling internationally. Thousands of National Guardsmen were placed on <b>standby</b> and <b>states</b> deployed millions of gallons of brine and thousands of tons of road salt to lessen the storm's effect on roadways. A travel ban was instituted for New York City and Newark, New Jersey for January 23-24. The storm was given various unofficial names, including Winter Storm Jonas and Snowzilla.|$|R
40|$|Research {{supported}} by an NSF CCR- 0615262 grant. The views and conclusions contained {{in this document}} {{are those of the}} authors and should not be interpreted as A central question in designing server farms today is how to efficiently provision the number of servers to handle unpredictable demand patterns, so as to extract the best performance while not wasting energy. While one would like to turn servers off when they become idle to save energy, the large setup cost (both, in terms of setup time and energy penalty) needed to switch the server back on can adversely affect performance. The problem is made more complex by the fact that today’s servers provide multiple sleep or <b>standby</b> <b>states</b> which trade off the setup cost with the power consumed while the server is ‘sleeping’. With so many controls, finding the optimal server pool management policy is an almost intractable problem – How many servers should be on at any given time, how many should be off, and how many should be in some sleep state? In this paper, we analyze server farm management policies, and prove that it suffices to consider a small, natural class of policies to guarantee near-optimal behavior. We employ the popular metric of Energy-Response time Product (ERP) to capture the energy-performance tradeoff, and present the first theoretical results on the optimality of server farm policies under both stationary and timevarying demand patterns. We find that there exists a very small set of natural policies that always contains the optimal policy for a single server, and a near-optimal policy for multi-server systems, for a stationary demand pattern. We also consider server farm management policies for time-varying demand patterns and propose a robust, traffic-oblivious policy which is asymptotically optimal a...|$|R
30|$|In Fig.  2, {{when the}} speech {{recognition}} function unit recognizes the word “Hello,” the system transits from state 1 to state 10. Next, the “motion start” command (MOTION_ADD) and the “speech synthesis start” command (SYNTH_START) are output and transition to state 12 occurs. Until the playing of the synthesized speech is finished, the system remains in <b>standby</b> <b>state</b> (state 12), {{and when the}} “speech synthesis end” event (SYNTH_EVENT_STOP) occurs, the system transitions to state 1.|$|E
30|$|Equation (19) is used {{to compute}} the {{reliability}} of the urea synthesis system, where P 0 (t) is the probability of the system working with full capacity, P 1 (t) and P 6 (t) are the probability of the system working under cold <b>standby</b> <b>state</b> and P 2 (t), P 3 (t), P 4 (t), P 5 (t), P 7 (t) and P 8 (t) are the probability of the system working with reduced capacity.|$|E
40|$|In a CMOS {{combinational logic}} circuit, the {{subthreshold}} leakage current in the <b>standby</b> <b>state</b> {{depends on the}} state of the inputs. In this paper we present a new approach to identify the minimum leakage set of input vectors (MLS). Applying a vector in the MLS is known as Input Vector Control (IVC), and has proven to be very useful in reducing gate oxide leakage and sub-threshold leakage in standby mode of operation. The approach presented here is based on Implicit Enumeration of integer-valued decision diagrams. Since the search space for minimum leakage vector increases exponentially with the number of primary inputs, the enumeration is done with respect to the minimum balanced cut of the digraph representation of the circuit. To reduce the switching power dissipated when the inputs are driven to a given state (during entry into and exit from the <b>standby</b> <b>state),</b> we extend the MLS algorithm to compute a bounded leakage set (BLS). Given a bound of standby leakage, we present an algorithm for computing minimal switching cost partial input vectors such that the leakage of the circuit is always less than the upper bound...|$|E
40|$|Abstract—The Host Identity Protocol (HIP) {{has been}} {{specified}} by the IETF as a new solution for secure host mobility and multihoming in the Internet. HIP uses self-certifying publicprivate key pairs in combination with IPsec to authenticate hosts and protect user data. While there are three open-source HIP implementations, little experience is available with running HIP on lightweight hardware such as a mobile phone. Limited computational power and battery lifetime of lightweight devices raise concerns if HIP can be used there at all. This paper describes the porting process of HIP on Linux (HIPL) and OpenHIP implementations to Symbian OS, as well as performance measurements of HIP over WLAN using Nokia E 51 and N 80 smartphones. We found that with 1024 -bit keys, the HIP base exchange with a server varies from 1. 68 to 3. 31 seconds {{depending on whether the}} mobile phone is in <b>standby</b> or active <b>state</b> respectively. After analyzing HIP performance in different scenarios we make conclusions and recommendations on using IP security on lightweight hardware clients. I...|$|R
2500|$|In {{regards to}} performance, PC Magazine {{described}} the Priv as having [...] " [...] like [...] that's been throttled down after some gaming", noting that its AnTuTu scores {{were lower than}} those of the Nexus 6P and Samsung Galaxy S6. It also noted that while it wasn't [...] "technically" [...] unresponsive, [...] "there are some complex animations and missed touch or typing inputs that might make you feel like it is". The Wall Street Journal felt that the Priv felt [...] "inexcusably slow" [...] at times, reporting instances of slow or unresponsive apps. The battery life was praised, with The Wall Street Journal remarking that it [...] "outran" [...] the Nexus 5X, 6P and iPhone 6S, while PC Magazine credited its aggressive suppression of background activity as improving its <b>standby</b> battery life, <b>stating</b> that it survived a weekend of use with 25% capacity still remaining. In contrast, The Verge and Ars Technica claimed they were unable to reach the device's advertised battery life. PC Magazine praised the Priv's call quality, noting that it had a clear microphone and [...] "delivers very loud maximum speakerphone and earpiece volume with zero distortion or wobble." [...] The Priv's rear-facing camera was criticized for having autofocus issues and for producing washed-out images with poor contrast and low-light performance.|$|R
40|$|Edge {{devices such}} as desktop and laptop {{computers}} constitute {{a majority of the}} devices connected to the Internet today. Peer-to-Peer (P 2 P) file-sharing applications generally require edge devices to maintain network presence whenever possible to enhance the robustness of the file-sharing network, which in turn can lead to considerable wastage of energy. We show that energy can be saved by permitting edge devices to enter into <b>standby</b> <b>state</b> and still maintain network connectivity by proxying protocols in the Network Interface Card (NIC). 1...|$|E
40|$|This paper {{describes}} a new GaAs MESFET structure, differential cross-coupled FET logic (DC/sup 2 /FL), which {{is compatible with}} DCFL, DPTL and DCVS circuits. It can be efficiently used in delay-insensitive asynchronous circuits and self-timed rings, {{as well as in}} synchronous ones. When combined with the aforementioned differential structures, it offers attractive power savings without performance degradation. As an example, a fully functional 8 -bit ripple carry adder has been designed and fabricated, verifying the expected very low power dissipation during the <b>standby</b> <b>state...</b>|$|E
40|$|Field Programmable Gate Arrays (FPGAs) {{are widely}} used to {{implement}} special purpose processors. FPGAs are economically cheaper for low quantity production because its function can be directly reprogrammed by end users. In this project designing a reconfigurable low power Asynchronous FPGA cells are done. FPGAs consume high dynamic and standby power. In {{order to reduce the}} standby power the autonomous fine grain power gating method is used. The autonomous fine grain power gating method has lookup table which is controlled by sleep controller and sleep transistor. In the successive logic block if the data arrives to the first logic block, the next logic block goes to active state. Suppose if the data not arrives to the first logic block than the next logic block goes to <b>standby</b> <b>state</b> and remain in this state until it reaches threshold time. After reaching threshold time the logic block goes to sleep state from <b>standby</b> <b>state.</b> In this sleep state the logic block power goes OFF. Hence the power consumption of the FPGA becomes reduced. The proposed architecture used in both fine grain as well as coarse grain structure. The circuit is simulated using Xilinx tool. Power reduction is achieved by selectively setting the functional units into a low leakage mode when they are inactive...|$|E
40|$|ISBN: 078033504 XIn this work, a {{novel and}} {{straightforward}} enable/disable GaAs MESFET Differential Logic (EMDL) structure is presented. EMDL {{is compatible with}} DCFL and some reported MESFET differential logic families, like DPTL, DCVS and DC/sup 2 /FL. No power dissipation during the <b>standby</b> <b>state,</b> fewer transistors per logic function and noise immunity are its more interesting features. The EMDL can be efficiently applied in both synchronous and asynchronous designs. EMDL iterative network micropipeline applications are detailed. An 8 -bit ripple carry adder was successfully fabricated and tested verifying the EMDL functionality and performance characteristics...|$|E
40|$|A {{method for}} {{reducing}} the power consumption in a state retaining circuit during a standby mode is disclosed comprising, in an active state, providing a regular power supply (VDD) and a standby power supply (VDD STANDBY) to the state retaining circuit; for a transition from an active state to a <b>standby</b> <b>state,</b> decreasing the regular power supply to ground level and maintaining the standby power supply (VDD STANDBY) thus providing the circuit elements (36, 142, 78, 85) of the state retaining circuit with enough power for retaining the state during standby mode; and for a transition from the <b>standby</b> <b>state</b> to the active state, increasing the regular power supply (VDD) from its ground level to its active level. A circuit {{for reducing the}} power consumption in a state retaining circuit during a standby mode is disclosed comprising a control unit (1) providing at least one control signal; a data input unit (3) providing at least one input signal; a data output unit (7) providing at least one output signal; a data storage unit (5) for holding {{the state of the}} circuit during an a standby mode; a regular power supply supplying power to the data storage unit (5) during an active mode; and a standby power supply supplying power to at least a part of the data storage unit (5) during the active mode and the standby mode...|$|E
30|$|The low-red {{state is}} {{considered}} as the start state, since the charging operation will start slowly and it adapts a conservative approach concerning the grid stability. The {{transition to the}} end state occurs whenever the driver unplugs the vehicle or the battery is fully charged (equals SoC = 100). If the desired SoCend (defined by the end user) is reached, the FSM transits to the charging <b>standby</b> <b>state</b> (gray state). Within this state the Smart Charger can react on critical grid situations using the still plugged EV, only in case the ’PQ-Indic’ value is positive red-colored, hence requires increase of charging power capacity.|$|E
40|$|Abstract — Parallel disk systems {{consume a}} {{significant}} amount of energy due to the large number of disks. To design economically attractive and environmentally friendly parallel disk systems, in this paper we design and evaluate an energy-aware prefetching strategy for parallel disk systems consisting of a small number of buffer disks and large number of data disks. Using buffer disks to temporarily handle requests for data disks, we can keep data disks in the low-power mode as long as possible. Our prefetching algorithm aims to group many small idle periods in data disks to form large idle periods, which in turn allow data disks to remain in the <b>standby</b> <b>state</b> to save energy. To achieve this goal, we utilize buffer disks to aggressively fetch popular data from regular data disks into buffer disks, thereby putting data disks into the <b>standby</b> <b>state</b> for longer time intervals. A centrepiece in the prefetcing mechanism is an energy-saving prediction model, based on which we implement the energy-saving calculation module that is invoked in the prefetching algorithm. We quantitatively compare our energy-aware prefetching mechanism against existing solutions, including the dynamic power management strategy. Experimental results confirm that the buffer-disk-based prefetching can significantly reduce energy consumption in parallel disk systems by up to 50 percent. In addition, we systematically investigate the energy efficiency impact that varying disk power parameters has on our prefetching algorithm. Keywords-storage systems; energy-efficiency;prefetching I...|$|E
40|$|Advancements in {{technology}} enable integration {{of a large}} number of cores on a single silicon die. At the same time, aggressive technology scaling has an ever-increasing adverse impact on the lifetime reliability of such large integrated circuits. In this work, we model the lifetime reliability of homogeneous manycore systems using a load-sharing nonrepairable k-out-of-n:G system with general failure distributions for embedded cores. In manycore systems, an embedded core can be in operational, cold standby, or warm <b>standby</b> <b>state</b> depending on system redundancy schemes and their workloads. We then use the proposed model to analyze the impact of different redundant schemes and configurations on the lifetime reliability of manycore systems. 1...|$|E
40|$|Abstract—In the literature, some schemes were {{proposed}} to combine Multi-Threshold CMOS (MTCMOS) with asynchronous circuits to reduce standby power consumption. However, {{all of these}} can only be applied to asynchronous circuits in which the values of all signals can be determined in the <b>standby</b> <b>state.</b> As a result, their applications are limited. To solve this problem, this paper develops standby power reduction techniques which not only combine MTCMOS with asynchronous circuits, but also {{can be applied to}} asynchronous circuits with indeterminate standby states. Compared to asynchronous circuits implemented with all regular threshold transistors, the proposed implementation has significantly less standby power, reasonable speed penalty, and negligible area overhead. Keywords-asynchronous circuits; Multi-Threshold CMOS (MTCMOS); NULL Convention Logic (NCL...|$|E
30|$|When t < 2.0 s, power {{terminals}} outputs in AC and DC MGs were Pp,ac = 1.0 and Pp,dc = 1.0, and the DC-AC and DC-DC interlinking converters of MGs {{were both in}} <b>standby</b> <b>state.</b> At t = 2.0 s, the unified control of DC-AC and DC-DC was enabled, with initial power dispatch settings to be P_IC,ac^* = 0.1 and P_IC,dc^* = − 0.2. The slack terminal in the medium-voltage DC bus (referred to the DC-AC converter between the MVDC and AC distribution system) became unavailable at t = 3 s. From the simulation results, via the proposed control, the MVDC transferred stably to mutual support of AC and DC MGs (Mode 3) from Mode 1, without communication, and without controller switching.|$|E
40|$|System {{performance}} measures of a repairable system are studied from a Bayesian viewpoint with {{different types of}} priors assumed for unknown parameters, in which the system consists of two active components and one warm standby. There is a failure probability q that switches from <b>standby</b> <b>state</b> to active state. Time-to-failure of components {{is assumed to be}} an exponential distribution. The reboot time and repair time are also exponential distributions. When time-to-failure, time-to-repair and reboot time are with uncertain parameters, a Bayesian assessing is adopted to evaluate system {{performance measures}}. Monte Carlo simulation is used to derive the posterior distribution for the steady-state availability and the mean time-to-system failure. Some numerical experiments are performed to illustrate the results derived in this article...|$|E
40|$|Abstract—Microprocessor {{performance}} has been improved {{by increasing the}} capacity of on-chip caches. However, the performance gain comes {{at the price of}} static energy consumption due to subthreshold leakage current in cache memory arrays. This paper compares three techniques for reducing static energy consumption in on-chip level- 1 and level- 2 caches. One technique employs low-leakage transistors in the memory cell. Another technique, power supply switching, can be used to turn off memory cells and discard their contents. A third alternative is dynamic threshold modulation, which places memory cells in a <b>standby</b> <b>state</b> that preserves cell contents. In our experiments, we explore the energy and performance tradeoffs of these techniques. We also investigate the sensitivity of microprocessor performance and energy consumption to additional cache latency caused by leakage-reduction techniques. Index Terms—Dual-, gated-, leakage current, low-power design, multithreshold-CMOS (MTCMOS), power-consumptio...|$|E
40|$|Abstract. Mechanical {{seal leakage}} of {{centrifugal}} pumps (especially hot oil pumps) {{is the main}} fault reason of the petrochemical equipments. The fuction of the sealing flush system is to maintain the mechanical shaft seal function correctly. The misconduct of flush system settings will directly lead {{to the failure of}} mechanical seal. In this paper, the problems are analyzed for the present mechanical seal flushing system. When the centrifugal pump is in a <b>standby</b> <b>state,</b> flushing system may not provide normal flush flow in self flush plan. This may lead to surface fouling of the hot mechanical shaft seal, resulting in seal failure. Our research focus on solving these problems. The way is to change the source of flush fluid, that is to change the flush plan to external flush plan or toChange the fluid pipe position...|$|E
