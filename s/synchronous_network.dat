146|413|Public
25|$|Scientists have {{identified}} some intrinsic neuronal properties that {{play an important}} role in generating membrane potential oscillations. In particular, voltage-gated ion channels are critical in the generation of action potentials. The dynamics of these ion channels have been captured in the well-established Hodgkin–Huxley model that describes how action potentials are initiated and propagated by means of a set of differential equations. Using bifurcation analysis, different oscillatory varieties of these neuronal models can be determined, allowing for the classification of types of neuronal responses. The oscillatory dynamics of neuronal spiking as identified in the Hodgkin–Huxley model closely agree with empirical findings. In addition to periodic spiking, subthreshold membrane potential oscillations, i.e. resonance behavior that does not result in action potentials, may also contribute to oscillatory activity by facilitating synchronous activity of neighboring neurons. Like pacemaker neurons in central pattern generators, subtypes of cortical cells fire bursts of spikes (brief clusters of spikes) rhythmically at preferred frequencies. Bursting neurons have the potential to serve as pacemakers for <b>synchronous</b> <b>network</b> oscillations, and bursts of spikes may underlie or enhance neuronal resonance.|$|E
50|$|In telecommunication, a {{mesochronous}} {{network is}} a network {{in which the}} clocks run with the same frequency but unknown phases. Compare <b>synchronous</b> <b>network.</b>|$|E
5000|$|This market {{includes}} PTP and Sync-E testers, WAN emulators to {{find out}} the tolerance of the <b>synchronous</b> <b>network</b> under heavy traffic condition and PTP/SybcE network clocks to deliver SyncE and PTP timing services ...|$|E
40|$|In {{this paper}} we present two {{protocols}} for asynchronous Byzantine Quorum Systems (BQS) built {{on top of}} reliable channels [...] -one for self-verifying data {{and the other for}} any data. Our protocols tolerate Byzantine failures with fewer servers than existing solutions by eliminating nonessential work in the write protocol and by using read and write quorums of different sizes. Since engineering a reliable network layer on an unreliable network is difficult, two other possibilities must be explored. The first is to strengthen the model by allowing <b>synchronous</b> <b>networks</b> that use time-outs to identify failed links or machines. We consider running synchronous and asynchronous Byzantine Quorum protocols over <b>synchronous</b> <b>networks</b> and conclude that, surprisingly, "self-timing" asynchronous Byzantine protocols may offer significant advantages for many <b>synchronous</b> <b>networks</b> when network time-outs are long. We show how to extend an existing Byzantine Quorum protocol to eliminate its dependency on reliable networking and to handle message loss and retransmission explicitly...|$|R
30|$|In addition, for leader {{election}} problem, many existing papers {{considered the}} lower bound of time complexity and message complexity in the static <b>synchronous</b> <b>networks.</b>|$|R
50|$|It also {{defines a}} serial data format, {{consisting}} of a start bit, 7 bit ASCII (least significant bit first), a parity bit (even for asynchronous <b>networks,</b> odd for <b>synchronous</b> <b>networks),</b> and a stop bit.|$|R
50|$|In {{computer}} science, a synchronizer is an algorithm {{that can}} be used to run a synchronous algorithm on top of an asynchronous processor network, so enabling the asynchronous system to run as a <b>synchronous</b> <b>network.</b>|$|E
5000|$|In telecommunications, a <b>synchronous</b> <b>network</b> is {{a network}} in which clocks are {{controlled}} to run, ideally, at identical rates, {{or at the}} same mean rate with a fixed relative phase displacement, within a specified limited range.|$|E
5000|$|Storage: Because VDI users require <b>synchronous</b> <b>network</b> {{access to}} their {{centralized}} desktop, performance can be significantly impacted {{by the type of}} back end storage. Because Mirage clients run a local instance of the centrally stored desktop, storage is only accessed when synchronization is required. Secondary storage, including lower cost SATA drives, are adequate.|$|E
40|$|This paper summarises the {{outcomes}} of research that recorded and interpreted change in pre-service teachers' pedagogical beliefs when immersed in unique <b>synchronous</b> <b>networked</b> collaboration. The pre-service teachers {{were involved in the}} design and implementation of <b>synchronous</b> <b>networked</b> tasks, supported by the theoretical and pragmatic application of 'informed' Information and Communications Technology (ICT) integration. The pre-service teachers' use of digital technology graduated from a didactic, broadcast delivery of information to more constructivist strategies that involved interaction, collaboration and 'good' learning. Moreover, the pre-service teachers gained competencies during a 12 -week programme that {{led to the development of}} a suggested framework for ICT task development able to effectively promote and support improvements in learning...|$|R
50|$|Outside of the Americas and Australia, most AM radio {{broadcasting}} {{was in the}} form of <b>synchronous</b> <b>networks</b> of government-operated stations, operating with hundreds, even thousands of kilowatts of power. Still, the lower powered stations and occasional trans-oceanic signal were popular DX targets.|$|R
50|$|Wide area <b>synchronous</b> <b>networks</b> improve {{reliability}} and permit the pooling of resources, they can level out the load, which reduces the required generating capacity, allow more environmentally friendly {{power to be}} employed, can permit more diverse power generation schemes, and can permit economies of scale.|$|R
50|$|Wide area {{synchronous}} networks {{cannot be}} formed {{if the two}} networks to be linked are running at different frequencies or have significantly different standards. For example in Japan, for historical reasons, {{the northern part of}} the country operates on 50 Hz, whereas the southern part uses 60 Hz. This makes it impossible to form a single <b>synchronous</b> <b>network,</b> and this was problematic when the Fukushima Daiichi plant melted down.|$|E
50|$|Scientists have {{identified}} some intrinsic neuronal properties that {{play an important}} role in generating membrane potential oscillations. In particular, voltage-gated ion channels are critical in the generation of action potentials. The dynamics of these ion channels have been captured in the well-established Hodgkin-Huxley model that describes how action potentials are initiated and propagated by means of a set of differential equations. Using bifurcation analysis, different oscillatory varieties of these neuronal models can be determined, allowing for the classification of types of neuronal responses. The oscillatory dynamics of neuronal spiking as identified in the Hodgkin-Huxley model closely agree with empirical findings. In addition to periodic spiking, subthreshold membrane potential oscillations, i.e. resonance behavior that does not result in action potentials, may also contribute to oscillatory activity by facilitating synchronous activity of neighboring neurons. Like pacemaker neurons in central pattern generators, subtypes of cortical cells fire bursts of spikes (brief clusters of spikes) rhythmically at preferred frequencies. Bursting neurons have the potential to serve as pacemakers for <b>synchronous</b> <b>network</b> oscillations, and bursts of spikes may underlie or enhance neuronal resonance.|$|E
5000|$|In the [...] "overlay", or [...] "superstructure" [...] meaning, a super grid is a {{very long}} {{distance}} equivalent of a wide area <b>synchronous</b> <b>network</b> capable of large-scale transmission of renewable electricity. In some conceptions, a transmission grid of HVDC transmission lines forms a layer that is distinctly separate {{in the way that}} a superhighway system is separate from the system of city streets and regional highways. In more conventional conceptions such as the proposed unification of the synchronous European grid UCTE and the IPS/UPS system of the CIS, such a mega grid is no different from typical wide area synchronous transmission systems where electricity takes an ad-hoc transit route directly through local utility transmission lines or HVDC lines as required.Studies for such continental sized systems report there are scaling problems as a result of network complexity, transmission congestion, and the need for rapid diagnostic, coordination and control systems. Such studies observe that transmission capacity would need to be significantly higher than current transmission systems in order to promote unimpeded energy trading across distances unbounded by state, regional or national, or even continental borders.As a practical matter, it has become necessary to incorporate smart grid features such as wide area sensor networks (WAMS) into even modest sized regional grids in order to avert major power outages such as the Northeast Blackout of 2003. Dynamic interactions between power generation groups are increasingly complex, and transient disturbances that cascade across neighboring utilities can be sudden, large and violent, accompanied by abrupt changes in the network topology as operators attempt to manually stabilize the network.|$|E
40|$|Abstract: : The paper {{addresses}} {{the idea of}} utilization of Erlang formulas in asynchronous ATM and IP networks. Based on the common properties of <b>synchronous</b> and asynchronous <b>networks</b> we have proposed the utilization of Erlang formulas not only for <b>synchronous</b> <b>networks,</b> but also for asynchronous networks. It is possible to describe traffic in asynchronous networks by calculation of following parameters – loss, link utilization and bandwidth. We present some simulation results from Matlab...|$|R
50|$|However, as a {{transport}} mechanism, IP {{presents a}} number of challenges {{that need to be}} addressed by the Chief Engineer before migrating away from <b>synchronous</b> <b>networks.</b> These issues are not insurmountable, and, if correctly and intelligently implemented; the use of IP will greatly assist a radio station’s efficiency.|$|R
40|$|Abstract. In {{this paper}} we survey some results {{concerning}} {{the impact of}} faulty environments on the solvability and complexity of communica-tion tasks. In particular, we focus on deterministic models of faults in <b>synchronous</b> <b>networks,</b> and show how different variations of the model influence the performance bounds of broadcasting algorithms. ...|$|R
30|$|The {{approach}} {{based on}} <b>synchronous</b> <b>network</b> [44]. The description above is mainly about asynchronous network. Another type of network is <b>synchronous</b> <b>network,</b> {{in which each}} node follows the same clock frequency, so that the nodes wake up only {{at the time they}} take to work, while sleeping at other times. In such methods, nodes only need to be awake at time slots for work, thus saving energy effectively. However, such methods require precise synchronization, which limits the scalability of the system. Because the synchronization in a large-scale network is a very difficult task, in the wireless sensor networks, most applications still adopt asynchronous operation. Thus, each node only needs to select its own working slots independently without synchronization, which can increase its applicability. But in general, when using asynchronous operation mode, the performance of wireless sensor networks is not as good as <b>synchronous</b> <b>network.</b>|$|E
30|$|In conclusion, {{the main}} reason for the delay is the {{asynchronous}} operation of the node, which causes the forwarding nodes to be in the sleep state when the sender has data to transmit. Although the delay will be effectively reduced when using <b>synchronous</b> <b>network,</b> the maintenance cost of <b>synchronous</b> <b>network</b> has also reduced the development of its application. Therefore, this paper proposes a scheme of partial synchronization, which reduces the cost and operation difficulty of synchronization effectively and reduces the delay effectively. At the same time, partial synchronization between the sender and its forwarding set is the difference between this and other similar scheme.|$|E
40|$|In {{this thesis}} we {{developed}} a desynchronization design flow in the goal of easing the de- velopment effort of distributed embedded systems. The starting point of this design flow is a network of synchronous components. By transforming this <b>synchronous</b> <b>network</b> into a dataflow process network (DPN), we ensures important properties that are difficult or theoretically impossible to analyze directly on DPNs are preserved by construction. In particular, both deadlock-freeness and buffer boundedness can be preserved after desyn- chronization. For the correctness of desynchronization, {{we developed a}} criteria consisting of two properties: a global property that demands the correctness of the <b>synchronous</b> <b>network,</b> {{as well as a}} local property that requires the latency-insensitivity of each local synchronous component. As the global property is also a correctness requirement of synchronous systems in general, we take this property as an assumption of our desyn- chronization. However, the local property is in general not satisfied by all synchronous components, and therefore needs to be verified before desynchronization. In this thesis we developed a novel technique for the verification of the local property that can be carried out very efficiently. Finally we developed a model transformation method that translates a set of synchronous guarded actions – an intermediate format for synchronous systems – to an asynchronous actor description language (CAL). Our theorem ensures that one passed the correctness verification, the generated DPN of asynchronous pro- cesses (or actors) preserves the functional behavior of the original <b>synchronous</b> <b>network.</b> Moreover, by the correctness of the <b>synchronous</b> <b>network,</b> our theorem guarantees that the derived DPN is deadlock-free and can be implemented with only finitely bounded buffers...|$|E
40|$|We {{develop an}} {{algebraic}} theory of <b>synchronous</b> dataflow <b>networks.</b> First, a basic algebraic theory of networks, called BNA (Basic Network Algebra), is introduced. This theory captures the basic algebraic properties of <b>networks.</b> For <b>synchronous</b> dataflow <b>networks,</b> it is subsequently extended with additional constants for the branching connections that occur between {{the cells of}} <b>synchronous</b> dataflow <b>networks</b> and axioms for these additional constants. We also give two models of the resulting theory, the one based on stream transformers and the other based on processes as considered in process algebra. Comment: 24 page...|$|R
50|$|As {{discovered}} in the California electricity crisis, there can be strong incentives among some market traders to deliberately create congestion and poor management of generation capacity on an interconnection network to artificially inflate prices. Increasing transmission capacity and expanding the market by uniting with neighboring <b>synchronous</b> <b>networks</b> make such manipulations more difficult.|$|R
50|$|While this {{arrangement}} has {{worked well for}} many years, it requires broadcasters to allocate considerable amounts from their budget for the ongoing operational costs of the Telco services. With the advent of IP technology, broadcasters {{have been looking at}} minimizing these operational costs by replacing their existing <b>synchronous</b> <b>networks</b> with packetized ones.|$|R
40|$|We {{study the}} interplay of network {{connectivity}} and perfectly se-cure message transmission under the corrupting influence of gen-eralized Byzantine adversaries. It is known that in the thresh-old adversary model, where the Byzantine adversary can corrupt upto any t among the n players (nodes), perfectly secure commu-nication among any pair of players is possible {{if and only if}} the underlying <b>synchronous</b> <b>network</b> is (2 t + 1) -connected. Strictly generalizing these results to the non-threshold setting, we show that perfectly secure communication among any pair of players is possible if and only if the union of no two sets in the adver-sary structure is a vertex cutset of the <b>synchronous</b> <b>network.</b> The computation and communication complexities of the transmis-sion protocol are polynomial {{in the size of the}} network and the maximal basis of the adversary structure...|$|E
40|$|The {{synchronizer}} is {{a simulation}} methodology for simulating a <b>synchronous</b> <b>network</b> by an asynchronous one, thus enabling {{the execution of}} a synchronous algorithm on an asynchronous network. Previously known synchronizers require each processor in the entire network G(V; E) to participate in each pulse of the synchronization process. As a result, the communication overhead of existing synchronizers depends linearly on the number n of the network nodes. This paper presents a novel type of synchronizer, whose overhead is only poly-logarithmically dependent on n. This synchronizer can also be realized with polylog(n) space. This polylog-overhead synchronizer is based on involving only the "relevant" portions of the network in the synchronization process. 1 Introduction 1. 1 Motivation The synchronizer is a simulation methodology introduced in [Awe 85 a] for simulating a <b>synchronous</b> <b>network</b> by an asynchronous one, thus enabling the execution of a synchronous algorithm on an asynchronous netwo [...] ...|$|E
40|$|SummaryNeurons {{generated}} from {{pluripotent stem cells}} (PSCs) self-organize into functional neuronal assemblies in vitro, generating <b>synchronous</b> <b>network</b> activities. Intriguingly, PSC-derived neuronal assemblies develop spontaneous activities that are independent of external stimulation, suggesting the presence of thus far undetected intrinsically active neurons (IANs). Here, by using mouse embryonic stem cells, we provide evidence {{for the existence of}} IANs in PSC-neuronal networks based on extracellular multielectrode array and intracellular patch-clamp recordings. IANs remain active after pharmacological inhibition of fast synaptic communication and possess intrinsic mechanisms required for autonomous neuronal activity. PSC-derived IANs are functionally integrated in PSC-neuronal populations, contribute to <b>synchronous</b> <b>network</b> bursting, and exhibit pacemaker properties. The intrinsic activity and pacemaker properties of the neuronal subpopulation identified herein may be particularly relevant for interventions involving transplantation of neural tissues. IANs may be a key element in the regulation of the functional activity of grafted as well as preexisting host neuronal networks...|$|E
40|$|This paper {{describes}} buffering of {{a gateway}} interconnecting asynchronous to <b>synchronous</b> <b>networks</b> in a B-ISDN Customer Switching System. Buffering strategies {{have been achieved}} utilising efficient queuing methods and simulating dynamic relaying of multimegabyte data specified for Class C and Class D type ATM services from asynchronous to <b>synchronous</b> <b>networks.</b> Autonomous objects were modelled utilising interactive features of object oriented programming. Parameters such as interarrival rate, capacity bandwidth of networks {{and the number of}} receiving peer entity terminals were studied as to their independent and combined effect on maximum buffer size. To provide optimal services with a finite size buffer a trade off between interarrival rate, capacity bandwidth, % Load and efficient queuing algorithms would be required. 1. INTRODUCTION The Broadband - Integrated Services Digital Network (B-ISDN) is anticipated to provide ATM services across residential areas, commercial areas, states, [...] ...|$|R
40|$|AbstractWe {{provide a}} short {{notation}} for processes with parallel inputs and outputs. With this specification format <b>synchronous</b> <b>networks</b> or grid protocols {{can be specified}} in a straightforward way. For a certain class of connected networks we prove a correctness theorem that characterizes I/O behavior. We illustrate our approach by an example on the approximation of a one-dimensional wave equation...|$|R
50|$|The {{transport}} networks for ATM are well standardized fiber optic (SDH/Sonet, i.e. STM-1/OC-3 or higher) or copper cable (PDH, i.e. E1/T1/JT1 or higher bandwidth fixed lines) based <b>synchronous</b> <b>networks</b> with built-in redundancy and OAM-related network features which Ethernet networks never had originally (in {{order to keep}} things simple) but are sorely missed in metro Ethernet standard networks.|$|R
40|$|This paper {{presents}} a simple local algorithm for load balancing in a distributed network. The algorithm makes no assumption {{about the structure}} of the network. It can be executed on a <b>synchronous</b> <b>network</b> with fixed topology, a <b>synchronous</b> <b>network</b> with dynamically changing topology, or an asynchronous network. It works quickly and balances well when the network has an expansion property. In particular, we show that in an n-node networkwith maximumdegree d whose live edges, at every time step, form a ¯-expander, the algorithm will balance the load to within an additive O(d log n=¯) term in O(Δ log(nΔ) =¯) time, where Δ is the initial imbalance. The algorithm improves upon previous approaches that yield O(n) time bounds in dynamic and asynchronous networks. 1 Introduction One of the most fundamental problems to solve on a parallel computer or distributed network is to balance the load or work that must be performed among the various processors. This paper analyzes a sim [...] ...|$|E
40|$|This paper {{considers}} {{unconditionally secure}} protocols for reliable broadcast among {{a set of}} n players, {{some of which may}} be corrupted by an active (Byzantine) adversary. In the standard model with a complete, <b>synchronous</b> <b>network</b> of pairwise authentic communication channels among the players, broadcast is achievable if and only if the number of corrupted players is less than n= 3. We show that, by extending this model only by the existence of a broadcast channel among three players, global broadcast is achievable if and only if the number of corrupted players is less than n= 2. Moreover, for this an even weaker primitive than broadcast among three players is sufficient. All protocols are efficient. 1 Introduction Broadcast is a fundamental problem in fault-tolerant distributed computing. With respect to the standard model of a <b>synchronous</b> <b>network</b> of pairwise authentic channels, many protocols have been proposed and a large number of results have been published concerning bounds on fault [...] ...|$|E
40|$|AbstractSynchronizers and arbiters are {{important}} components of any Globally Asynchronous, Locally <b>Synchronous</b> <b>network.</b> They contribute to latency, {{because of the}} synchronization time required for reliability, and to metastability delay in the arbiters. Simple models of metastability have served us well up to now, but more recently work on the characterisation of deep metastability has demonstrated effects in commonly used components that {{may need to be}} taken into account...|$|E
40|$|We {{present a}} logical {{framework}} for the verification of <b>synchronous</b> <b>networks</b> in an assert-commit style. It {{is based on the}} known observation that the Hoare rule for sequential composition is sound and complete for parallel composition as well. The calculus we develop inside the framework is extremely simple, based on just one propositional tautology. Nevertheless, it is powerful enough to analyze the common proof strategies (monolithic, forward and backward) applied in automated verification of such networks. This analysis leads to an incremental verification method, based on successive construction of the weakest pre-conditions, in which the backward proof is driven by the property being verigied. In the case of ginite <b>synchronous</b> <b>networks</b> this construction can be carried out via simple manipulations on circuits, and circuit optimizers can be used incrementally to simplify the complexity of such backward proofs. The method should hopefully be applicable in verification of software synchronous systems, since the current compilers for synchronous languages generate quite redundant circuits...|$|R
40|$|Abstract. In <b>synchronous</b> <b>networks,</b> {{protocols}} {{can achieve}} security guarantees {{that are not}} possible in an asynchronous world: they can simultaneously achieve input completeness (all honest parties’ inputs {{are included in the}} computation) and guaranteed termination (honest parties do not “hang” indefinitely). In practice truly <b>synchronous</b> <b>networks</b> rarely exist, but synchrony can be emulated if channels have (known) bounded latency and parties have loosely synchronized clocks. The widely-used framework of universal composability (UC) is inherently asynchronous, but several approaches for adding synchrony to the framework have been proposed. However, we show that the existing proposals do not provide the expected guarantees. Given this, we propose a novel approach to defining synchrony in the UC framework by introducing functionalities exactly meant to model, respectively, bounded-delay networks and loosely synchronized clocks. We show that the expected guarantees of synchronous computation can be achieved given these functionalities, and that previous similar models can all be expressed within our new framework. ...|$|R
40|$|This paper formalizes the two {{notions of}} "comparison based process" and of `process {{isomorphism}} up-to process identifiers. " The Key Lemma is proven {{which states that}} comparison based processes which are isomorphic up-to PIds behave very similarly, if the PIds in the processes in their enviromnents are what is called order equivalent. Key words and phases: leader election, <b>synchronous</b> <b>networks,</b> comparison based processes, isomorphic processes, process identifiers, communication complexity...|$|R
