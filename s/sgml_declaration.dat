10|1|Public
25|$|XML is {{a profile}} of an ISO {{standard}} SGML, and most of XML comes from SGML unchanged. From SGML comes the separation of logical and physical structures (elements and entities), the availability of grammar-based validation (DTDs), the separation of data and metadata (elements and attributes), mixed content, the separation of processing from representation (processing instructions), and the default angle-bracket syntax. Removed were the <b>SGML</b> <b>declaration</b> (XML has a fixed delimiter set and adopts Unicode as the document character set).|$|E
5000|$|For example, if OMITTAG YES is {{specified}} in the <b>SGML</b> <b>Declaration</b> (enabling the OMITTAG feature), and the DTD includes the following declarations: ...|$|E
50|$|SGML generalizes and {{supports}} {{a wide range}} of markup languages as found in the mid 1980s. These ranged from terse Wiki-like syntaxes to RTF-like bracketed languages to HTML-like matching-tag languages. SGML did this by a relatively simple default reference concrete syntax augmented with a large number of optional features that could be enabled in the <b>SGML</b> <b>Declaration.</b> Not every SGML parser can necessarily process every SGML document. Because each processor's System Declaration can be compared to the document's <b>SGML</b> <b>Declaration</b> it is always possible to know whether a document is supported by a particular processor.|$|E
5000|$|An entity {{declaration}} {{may have a}} literal value, or may have some combination of an optional [...] identifier, which allows SGML parsers to process an entity's string referent as a resource identifier, and an optional [...] identifier, which identifies the entity independent of any particular representation. In XML, a subset of <b>SGML,</b> an entity <b>declaration</b> {{may not have a}} [...] identifier without a [...] identifier.|$|R
50|$|An SGML {{document}} may {{be composed}} from many entities (discrete pieces of text). In SGML, the entities and element types {{used in the}} document may be specified with a DTD, the different character sets, features, delimiter sets, and keywords are specified in the <b>SGML</b> <b>Declaration</b> to create the concrete syntax of the document.|$|E
50|$|Tag {{omission}} is {{an optional}} feature to minimize an SGML document. Whenever a tag can be implicitly anticipated by the parser from {{the structure of}} the document, the tag can be omitted.The tag omission feature can be generally enabled or disabled in the <b>SGML</b> <b>Declaration.</b> The Document Type Definition is used to enable or disable the tag for a specific tag.|$|E
50|$|SGML has {{features}} {{for reducing the}} number of characters required to mark up a document, which must be enabled in the <b>SGML</b> <b>Declaration.</b> SGML processors need not support every available feature, thus allowing applications to tolerate many types of inadvertent markup omissions; however, SGML systems usually are intolerant of invalid structures. XML is intolerant of syntax omissions, and does not require a DTD for validation.|$|E
50|$|When an {{external}} entity references a complete SGML document, {{it is known}} in the calling document as an SGML document entity. An SGML document is a text document with SGML markup defined in an SGML prologue (i.e., the DTD and subdocuments). A complete SGML document comprises not only the document instance itself, but also the prologue and, optionally, the <b>SGML</b> <b>declaration</b> (which defines the document's markup syntax and declares the character encoding).|$|E
50|$|XML is {{a profile}} of an ISO {{standard}} SGML, and most of XML comes from SGML unchanged. From SGML comes the separation of logical and physical structures (elements and entities), the availability of grammar-based validation (DTDs), the separation of data and metadata (elements and attributes), mixed content, the separation of processing from representation (processing instructions), and the default angle-bracket syntax. Removed were the <b>SGML</b> <b>declaration</b> (XML has a fixed delimiter set and adopts Unicode as the document character set).|$|E
50|$|SGML {{uses the}} term {{validation}} for both recognition and generation. XML does not use the grammar (DTD) to change delimiter maps or to inform the parse modes, and does not allow tag omission; consequently, XML validation of elements is not active {{in the sense that}} SGML validation is active. SGML without a DTD (e.g. simple XML), is a grammar or a language; SGML with a DTD is a metalanguage. SGML with an <b>SGML</b> <b>declaration</b> is, perhaps, a meta-metalanguage, since it is a metalanguage whose declaration mechanism is a metalanguage.|$|E
5000|$|Aside {{from the}} {{different}} opening declarations for a document, the differences between an HTML 4.01 and XHTML 1.0 document—in each of the corresponding DTDs—are largely syntactic. The underlying syntax of HTML allows many shortcuts that XHTML does not, such as elements with optional opening or closing tags, and even empty elements which must not have an end tag. By contrast, XHTML requires all elements to have an opening tag and a closing tag. XHTML, however, also introduces a new shortcut: an XHTML tag may be opened and closed within the same tag, by including a slash {{before the end of}} the tag like this: [...] The introduction of this shorthand, which is not used in the <b>SGML</b> <b>declaration</b> for HTML 4.01, may confuse earlier software unfamiliar with this new convention. A fix for this is to include a space before closing the tag, as such: [...]|$|E

