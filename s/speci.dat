4980|0|Public
2500|$|The METARs {{for both}} Tegel and Schönefeld {{airports}} showed [...] and NOSIG, the latter element was criticised by the BFU. At 17:50, this METAR was issued at Tegel Airport: EDDT 04001KT CAVOK 30/17 Q1002 A2959 0998 2947 NOSIG. At the time, the cold front was [...] south west of Tegel, and had moved [...] {{in the previous}} hour. The BFU was {{of the opinion that}} NOSIG should not have been in the METAR, and that a <b>SPECI</b> would have been required. At 18:20, a new METAR was issued at Tegel: EDDT VRB01KT 9999 FEW040CB SCT120 BKN260 29/17 Q1002 A2959 0998 2947 TEMPO 27025G55KT 2000 +TSRA BKN009 BKN015CB COMMENTS: OCNL LTNG AND CB SW OF STN. This METAR was issued two minutes before Flight 850 began its approach to Tegel.|$|E
2500|$|The {{severe weather}} {{phenomenon}} that affected Kinshasa {{and its surrounding}} areas {{at the time of}} the accident was a fast moving and severe [...] "Squall Line". The Approach path and Kinshasa airfield were probably covered by inclement weather {{at the time of the}} accident. The fast movement of the [...] "Squall Line" [...] can also be visualized by the fact that the weather information provided to the crew at 12:49 by Kinshasa ATC stated [...] of visibility while the weather report (<b>SPECI)</b> at 13:00 reported a visibility of only [...] The accident occurred at 12:56 So, during the interim period of ten minutes, a rapid change in weather had taken place but the same was not conveyed to the crew by the ATC. The ATC did report a significant change in surface winds to the crew at 12:55 when it reported that surface winds had become 280 degrees, [...] The crew merely acknowledged this by saying [...] "copied, copied‟ and probably did not correlate this significant change in surface winds with the state of the storm over the airfield.|$|E
50|$|WXXM 1.0 was {{introduced}} in 2007, representing METAR, <b>SPECI,</b> TAF, SIGMET and other ICAO information as specified in International Civil Aviation Organization (ICAO) Annex III.|$|E
50|$|WXXM 2.0 was {{released}} in 2014 as a major update. WXXM 2.0 removed data products that are authoritatively represented by ICAO in IWXXM 1.0 (METAR, <b>SPECI,</b> TAF, SIGMET) and incorporated IWXXM 1.0 design approaches.|$|E
50|$|IWXXM 1.0 was {{introduced}} in October 2013, representing METAR, <b>SPECI,</b> TAF and SIGMET formats as specified in International Civil Aviation Organization (ICAO) Annex III, Amendment 76. IWXXM became an optional format for the bilateral exchange of weather reports in November 2013 when the amendment became applicable. The seventeenth WMO Congress approved IWXXM 1.1, a WMO standard data representation {{to be included in}} the new Volume I.3 of WMO-No. 306, Manual on Codes.|$|E
50|$|A trend type {{forecast}} (TTF) {{also known}} simply as a trend, is an aviation weather forecast written by a real person on location at a major airport or military base. A TTF is a professionally considered forecast for weather over a two-hour period, {{and is based on}} an actual weather report, such as a METAR or <b>SPECI</b> and appended to the end of it.A TTF is similar to or sometimes in addition to a TAF, a terminal aerodrome forecast, but during the TTF's validity period is considered superior to a TAF.|$|E
50|$|METARs {{typically}} {{come from}} airports or permanent weather observation stations. Reports are generated once {{an hour or}} half-hour, but if conditions change significantly, a report known as a special (<b>SPECI)</b> may be issued. Some METARs are encoded by automated airport weather stations located at airports, military bases, and other sites. Some locations still use augmented observations, which are recorded by digital sensors, encoded via software, and then reviewed by certified weather observers or forecasters prior to being transmitted. Observations may also be taken by trained observers or forecasters who manually observe and encode their observations prior to transmission.|$|E
50|$|METAR code is {{regulated}} by the World Meteorological Organization in consort with the International Civil Aviation Organization. In the United States, the code is given authority (with some U.S. national differences from the WMO/ICAO model) under the Federal Meteorological Handbook No. 1 (FMH-1), which {{paved the way for}} the U.S. Air Force Manual 15-111 on Surface Weather Observations, being the authoritative document for the U.S. Armed Forces. A very similar code form to the METAR is the <b>SPECI.</b> Both codes are defined at the technical regulation level in WMO Technical Regulation No. 49, Vol II, which is copied over to the WMO Manual No. 306 and to ICAO Annex III.|$|E
5000|$|It is {{important}} to note that freely available educational resources are not necessarily OER. Many educational resources made available on the Internet are geared to allowing online access to digitised educational content, but the materials themselves are restrictively licensed. Often, this is not intentional. Educators are generally not familiar with copyright law in their own jurisdictions, never mind internationally. International law and national laws of nearly all nations, and certainly of all those who have signed onto the World Intellectual Property Organization (WIPO), restrict all content under strict copyright (unless the copyright owner <b>speci</b> cally releases it under an open licence). In order for educational resources to be OER, they must have an open licence. The Creative Commons licence is the most widely used licensing framework internationally used for OER.|$|E
5000|$|The METARs {{for both}} Tegel and Schönefeld {{airports}} showed [...] and NOSIG, the latter element was criticised by the BFU. At 17:50, this METAR was issued at Tegel Airport: EDDT 04001KT CAVOK 30/17 Q1002 A2959 0998 2947 NOSIG. At the time, the cold front was 30 km south west of Tegel, and had moved 100 km {{in the previous}} hour. The BFU was {{of the opinion that}} NOSIG should not have been in the METAR, and that a <b>SPECI</b> would have been required. At 18:20, a new METAR was issued at Tegel: EDDT VRB01KT 9999 FEW040CB SCT120 BKN260 29/17 Q1002 A2959 0998 2947 TEMPO 27025G55KT 2000 +TSRA BKN009 BKN015CB COMMENTS: OCNL LTNG AND CB SW OF STN. This METAR was issued two minutes before Flight 850 began its approach to Tegel.|$|E
50|$|ESD {{concerns}} {{the core of}} teaching and learning and should not be considered as an add-on to the existing curriculum. Mainstreaming ESD requires integrating sustainability topics into the curricula, but also sustainability-related intended learning outcomes.“Curricula need to ensure that all children and young people learn not just foundation skills, but also transferable skills such as critical thinking, problem solving, advocacy and con ict resolution, to help them become responsible global citizens” (UNESCO, 2014c: 36). From the development of sustainability curricula it is expected to “improve the capacity of our education systems to prepare people to pursue sustainable development."Reviews of official curriculum documents show that “many countries now include sustainability and/ or environmental themes as one of the general goals of education”. In primary and secondary education most {{progress has been made in}} curriculum development towards ESD. “Close to 40% of Member States indicate that their greatest achievement over the DESD has been the integration of ESD into formal curricula, with another fth describing <b>speci</b> c school projects as being their most important contributions to ESD”.|$|E
5000|$|The {{severe weather}} {{phenomenon}} that affected Kinshasa {{and its surrounding}} areas {{at the time of}} the accident was a fast moving and severe [...] "Squall Line". The Approach path and Kinshasa airfield were probably covered by inclement weather {{at the time of the}} accident. The fast movement of the [...] "Squall Line" [...] can also be visualized by the fact that the weather information provided to the crew at 12:49 by Kinshasa ATC stated 8000 m of visibility while the weather report (<b>SPECI)</b> at 13:00 reported a visibility of only 500 m. The accident occurred at 12:56 So, during the interim period of ten minutes, a rapid change in weather had taken place but the same was not conveyed to the crew by the ATC. The ATC did report a significant change in surface winds to the crew at 12:55 when it reported that surface winds had become 280 degrees, [...] The crew merely acknowledged this by saying [...] "copied, copied‟ and probably did not correlate this significant change in surface winds with the state of the storm over the airfield.|$|E
5000|$|A {{universal}} access transceiver is a data link intended {{to serve the}} majority of the general aviation community. The data link is approved in the Federal Aviation Administration's [...] "final rule" [...] for use in all airspace except class A (above 18,000 ft. MSL). UAT is intended to support not only ADS-B, but also flight information service - broadcast (FIS-B), traffic information service - broadcast (TIS-B), and, if required in the future, supplementary ranging and positioning capabilities. [...] Due to the set of standards required for this rule, it is seen as the most effective application for general aviation users. UAT will allow aircraft equipped with [...] "out" [...] broadcast capabilities to be seen by any other aircraft using ADS-B In technology as well as by FAA ground stations. Aircraft equipped with ADS-B In technology {{will be able to see}} detailed altitude and vector information from other ADS-B Out equipped aircraft as well as FIS-B and TIS-B broadcasts. The FIS-B broadcast will allow receiving aircraft to view weather and flight service information including AIRMETs, SIGMETs, METARs, <b>SPECI,</b> national NEXRAD, regional NEXRAD, D-NOTAMs, FDC-NOTAMs, PIREPs, special use airspace status, terminal area forecasts, amended terminal aerodrome forecasts (TAFs), winds and temperature aloft. [...] These broadcasts serve to provide early adopters of the technology with benefits as an incentive for more pilots to use the technology before 2020. Aircraft receiving traffic information through the TIS-B service will see other aircraft in a manner that is similar to how all aircraft will be seen after they have equipped by 2020. The availability of a non-subscription weather information service, FIS-B, provides general aviation users with a useful alternative to other monthly or annual fee-based services.|$|E
40|$|Casl is an {{expressive}} <b>speci</b> cation {{language that}} {{has been designed to}} supersede many existing algebraic <b>speci</b> cation languages and provide a standard. Casl consists of several layers, including basic (unstructured) <b>speci</b> cations, structured <b>speci</b> cations and architectural <b>speci</b> cations (the latter are used to prescribe the structure of implementations) ...|$|E
40|$|This paper {{reports on}} an eort to {{increase}} the reliability of JavaCard-based smart cards by means of formal <b>speci</b> cation and veri cation of JavaCard source code. As a rst step, formal interface <b>speci</b> cations, written in the <b>speci</b> cation language JML, {{have been developed for}} all the classes that make up the JavaCard API. These <b>speci</b> cations are " {{in the sense that they}} are incomplete and specify only some aspects of the API, but they already provide a useful addition to the existing informal API <b>speci</b> cations. Moreover, the fact that these <b>speci</b> cation are written in a formal language makes them amenable to tool support, for veri cation purposes. As an illustration, the JML <b>speci</b> cations of the APDU (Application Protocol Data Unit) class in the JavaCard API are discussed in detail...|$|E
40|$|Many di erent {{notions of}} property&quot;, and many di erent methods of verifying such properties, arise {{naturally}} in programming. We present a general framework of <b>Speci</b> cation Structures for combining di erent notions and methods in a coherent fashion. We then apply {{the idea of}} <b>speci</b> cation structures to concurrency {{in the setting of}} Interaction Categories. As a <b>speci</b> c example, a certain <b>speci</b> cation structur...|$|E
40|$|A set of CASE tools is {{described}} for developing formal requirements <b>speci</b> cations {{expressed in the}} SCR (Software Cost Reduction) tabular notation. The tools include an editor for building the <b>speci</b> cations, a consistency checker for testing the <b>speci</b> cations for consistency with a formal requirements model, a simulator for symbolically executing the <b>speci</b> cations, and a veri er for checking that the <b>speci</b> cations satisfy selected application properties. As background, the SCR method for specifying requirements is reviewed, and a formal requirements model is introduced. Examples are presented to illustrate the tools. ...|$|E
40|$|This report {{gives an}} {{overview}} of a mathematical <b>speci</b> cation for the Mach kernel, version 3. 0. The <b>speci</b> cation describes a legal Mach kernel state and requirements on kernel requests. The <b>speci</b> cation admits implementations in which kernel requests execute concurrently. This is important since Mach is designed to run on multi-processor systems. The <b>speci</b> cation technique {{can be applied to}} other kernels, and to object-oriented systems in general...|$|E
40|$|Abstract. We derive the <b>speci</b> cation of {{a primary}} {{partition}} and a partitionable fail-aware node membership service in a top-down fashion. The derived <b>speci</b> cations are fail-aware {{in the sense that}} each client of a membership server can learn if the server currently provides its standard semantics or an exception semantics because too many failures have occurred. We rst propose the <b>speci</b> cation of an ideal membership service and then transform this ideal <b>speci</b> cation step by step to derive the two fail-aware <b>speci</b> cations that are implementable in timed asynchronous systems. In each step we address an implementation problem orachange in the system/failure model. ...|$|E
40|$|Abstract. Default {{reasoning}} {{has become}} an important topic in software engineering. In particular, defaults {{can be used to}} revise <b>speci</b> cations, to enhance reusability of existing systems, and to allow a more economic description of systems. In this paper we develop a framework for default <b>speci</b> cations of reactive systems. We present a formalisation of non-monotonicity in temporal logic based on the notion of default institution. Default institutions were de ned as an extension of institutions in order to allow partial reuse of existing modules. The semantics of defaults is given by a (generalised) distance between interpretations. In this way, by de ning a pre-order between temporal morphisms and using temporal logic as a <b>speci</b> cation language, we getaway of handling defaults in <b>speci</b> cations of reactive systems. We illustrate the developed formalism with an example in which a <b>speci</b> cation is reused, but where the new behaviour contradicts the initial <b>speci</b> cation. In this example, the initial <b>speci</b> cation is seen as a default to which exceptions are added. ...|$|E
40|$|We use an {{existing}} formal software developement method called B {{in order to}} build and verify <b>speci</b> cations of a communication channel, cryptographic functions and security properties. We show on an example how these basic <b>speci</b> cations may be combined in order to write abstract <b>speci</b> cations of cryptographic protocols and to verify their security. ...|$|E
40|$|In {{this paper}} we de ne a novel {{technique}} for the <b>speci</b> cation of agent protocols in Multi-Agent-Systems. This technique addresses {{a number of}} shortcomings of previous Electronic Institution based <b>speci</b> cations. In particular, we relax the static <b>speci</b> cation of agent protocols as statebased diagrams and allow protocols to be de ned and disseminated in a exible manner during agent interaction. Our exible <b>speci</b> cation is derived from process algebra and thus forms a sound basis for the veri cation of such systems...|$|E
40|$|The {{synthetic}} control (SC) {{method has}} been recently proposed {{as an alternative}} method to estimate treatment e ects in comparative case studies. Abadie et al. [2010] and Abadie et al. [2015] argue {{that one of the}} advantages of the SC method is that it imposes a data-driven process to select the comparison units, providing more transparency and less discretionary power to the researcher. However, an important limitation of the SC method is that it does not provide clear guidance on the choice of predictor variables used to estimate the SC weights. We show that such lack of <b>speci</b> c guidances provides signi cant opportunities for the researcher to search for <b>speci</b> cations with statistically signi cant results, undermining one of the main advantages of the method. Considering six alternative <b>speci</b> cations commonly used in SC applications, we calculate in Monte Carlo simulations the probability of nding a statistically signi cant result at 5 % in at least one <b>speci</b> cation. We nd that this probability can be as high as 13 % (23 % for a 10 % signi cance test) when there are 12 pre-intervention periods and decay slowly with the number of pre-intervention periods. With 230 pre-intervention periods, this probability is still around 10 % (18 % for a 10 % signi cance test). We show that the <b>speci</b> cation that uses the average pre-treatment outcome values to estimate the weights performed particularly bad in our simulations. However, the <b>speci</b> cation-searching problem remains relevant even when we do not consider this <b>speci</b> cation. We also show that this <b>speci</b> cation-searching problem is relevant in simulations with real datasets looking at placebo interventions in the Current Population Survey (CPS). In order to mitigate this problem, we propose a criterion to select among SC di erent <b>speci</b> cations based on the prediction error of each <b>speci</b> cations in placebo estimation...|$|E
40|$|Holdups {{arise in}} {{bilateral}} trade when <b>speci</b> c investments are involved and contracting is incomplete. <b>Speci</b> c investments, which create more value inside a relationship or a transaction than outside, render market forces unreliable in disciplining the parties not to behave opportunistically. Contracts {{could be used}} to correct opportunism if investment-related information can be <b>speci</b> ed. That is often di cult, though. 1 Th...|$|E
40|$|Abstract. Normal {{class-based}} code inheritance across component boundaries {{creates a}} dependency between the involved components. To avoid this, a <b>speci</b> cation of the inherited class {{must be part}} of the respective component's contract and the inheriting class must be <b>speci</b> ed with reference to this <b>speci</b> cation only. With this, inheritance can be replaced by object composition without sacri cing the possibility of static analysis, yet being more exible. ...|$|E
40|$|Abstract. In {{the present}} paper, a {{methodology}} is presented which enables {{the implementation of}} the Action Notation formalism based on a formal and modular <b>speci</b> cation. As a result, an interpreter and debugger is automatically generated which allows the visualization of an Action Notation program execution and the inspection of all semantic identities in terms of the given formal <b>speci</b> cation. These results are based on several new concepts. At rst, a formal description of Action Notation is provided by means of Montages. Montages are a semi-visual formalism for the <b>speci</b> cation of syntax and semantics of programming languages. Moreover, the structuring of Action Notation via facets is re ned and used to de ne a new <b>speci</b> cation architecture that ensures the required modularity. The tool support for Montages (Gem-Mex) automatically generates a prototypical implementation from the language's Montages <b>speci</b> cation. ...|$|E
40|$|In this paper, {{we address}} the {{following}} question: given a <b>speci</b> c placement of wireless nodes in physical {{space and a}} <b>speci</b> c trac workload, what is the maximum throughput that can be supported by the resultant network? Unlike previous work that has focused on computing asymptotic performance bounds under assumptions of homogeneity or randomness in the the network topology and/or workload, we work with any given network and workload <b>speci</b> ed as inputs...|$|E
40|$|This paper {{presents}} a methodology for software analysis and design and an associated graph-based representation. The methodology addresses the <b>speci</b> cation of both static and dynamic aspects of an application. The representation includes object-oriented data modeling features. The <b>speci</b> cations are modular, reusable, and adaptive { that is repercussions from underlying model modi cations are limited. There is a straightforward process for generating code {{to implement the}} <b>speci</b> cations in an object-oriented target language...|$|E
40|$|The <b>speci</b> cation for the File Transfer Protocol (FTP) {{assumes that}} the {{underlying}} network protocols use a 32 -bit network address and a 16 -bit transport address (<b>speci</b> cally IP version 4 and TCP). With the deployment of version 6 of the Internet Protocol, network addresses {{will no longer be}} 32 -bits. This paper <b>speci</b> es extensions to FTP that will allow the protocol to work over a variety of network and transport protocols...|$|E
40|$|In {{this paper}} we present Structured VDM (SVDM), a {{combination}} of Structured Analysis (SA) and the Vienna Development Method (VDM). Using this method, the designer is able to {{move back and forth}} between an SA graphical <b>speci</b> cation and a VDM textual <b>speci</b> cation. In this way the most appropriate notation for explaining the <b>speci</b> cation to people with a di erent background can be selected. An overview of the methodological aspects of the approach isgiven. ...|$|E
40|$|The feature {{interaction}} problem {{occurs when}} {{the addition of a}} new feature to a system disrupts the existing services and features. This paper describes a tabular notation for specifying the functional behavior of features. It also describes how four classes of feature interactions can be detected when features are <b>speci</b> ed in this new notation. Our goal is to develop a tool that can automatically analyze feature <b>speci</b> cations and detect interactions at the <b>speci</b> cation stage of development...|$|E
40|$|TFL, the Task Formal Language, {{has been}} {{developed}} for integrating the static and dynamic aspects of Knowledge Based Systems. This paper focuses on the formal <b>speci</b> cation of dynamic behaviour. Although fundamental in Knowledge Based System, the strategic reasoning was rather neglected until now by the existing formal <b>speci</b> cations. Most languages were generally more focused on the domain and problem-solving knowledge <b>speci</b> cation than on the control. The formalisation presented here di ers from previous ones in several aspects. First, a di erent representation of dynamic knowledge is proposed: TFL is based on Algebraic Data Types, as opposed to dynamic or temporal logic. Second, dynamic strategic reasoning is emphasised, whereas existing languages only o er to specify algorithmic control. Then, TFL does not only provide the <b>speci</b> cation of the problem-solving knowledge of the object system, but also of its strategic knowledge. Finally, the dynamic knowledge of the meta-system itself is also <b>speci</b> ed. Moreover, modularisation is another important feature of the presented language. ...|$|E
40|$|Graph-based <b>speci</b> cation formalisms for Access Control (AC) {{policies}} {{combine the}} advantages of an intuitive visual framework with a rigorous semantical foundation. A security policy framework <b>speci</b> es a set of (constructive) rules to build the system states and sets {{of positive and negative}} (declarative) constraints to specify wanted and unwanted substates. Models for AC (e. g. role-based, lattice-based or an access control list) have been <b>speci</b> ed in this framework elsewhere. Here we address the problem of inconsistent policies within this framework...|$|E
40|$|Stepwise re nement {{transforms}} {{an abstract}} <b>speci</b> cation {{into a more}} deterministic concrete <b>speci</b> cation. Ultimately one arrives at a <b>speci</b> cation that is implementable. At the various stages in the re nement process decisions are made that determine how the nal implementation operates. Dierent implementations can be compared {{with respect to their}} expected performance within their environment. In this sense re nement poses an optimisation problem. We present a B-based language and a tool that can assist in solving this optimisation problem...|$|E
40|$|Abstract: To date, the SCR (Software Cost Reduction) {{requirements}} {{method has}} been used in industrial environments to specify the requirements of many practical systems, including control systems for nuclear power plants and avionics systems. This paper describes the use of the SCR method to specify the requirements of the Light Control System (LCS), the subject of a case study at the Dagstuhl Seminar on Requirements Capture, Documentation, and Validation in June 1999. It introduces a systematic process for constructing the LCS requirements <b>speci</b> cation, presents the <b>speci</b> cation of the LCS in the SCR tabular notation, discusses the tools that we applied to the LCS <b>speci</b> cation, and concludes with a discussion of a number of issues that arose in developing the <b>speci</b> cation...|$|E
40|$|Software {{development}} using formal methods {{is believed}} to be a process of successive re nements from abstract <b>speci</b> cations into concrete <b>speci</b> cations. Re nement rules may be used to demonstrate that the concrete <b>speci</b> cations satisfy the corresponding abstract ones. However, there are serious limitations of the re nement rules in both theory and in practical applications. This paper rst uses examples to demonstrate the limitations, and then proposes a new software development model for improvement based on our experience. The limitations include that (1) the re nement rules are not su cient to guarantee that a re ned <b>speci</b> cation (or concrete <b>speci</b> cation) satisfy the user's real requirements if it satis es the abstract <b>speci</b> cation, (2) the existing re nement rules are not always applicable in theory during the successive re nements, (3) the re nement rules are di cult to be applied e ectively in practice due to various kinds of uncertainties and resource constraints. The proposed model suggests that system development using formal methods should be divided into two phases: a static development phase and a dynamic development phase, the whole process in each phase involving requirements analysis. In order to suit the new model, the existing re nement rules are modi ed...|$|E
