50|52|Public
2500|$|Arithmetic: ADD, SUB, MULU (unsigned multiply), MULS (signed multiply), DIVU, DIVS, NEG (additive negation), and CMP (a sort of {{comparison}} done by subtracting the arguments {{and setting the}} <b>status</b> <b>bits,</b> but did not store the result) ...|$|E
5000|$|The Status field {{contains}} one byte of Channel <b>status</b> <b>bits,</b> indicating conditions {{detected by}} the channelPoOps, and one byte of Unit <b>status</b> <b>bits,</b> indicating conditions detected by the I/O unitPoOps. There is {{no distinction between}} conditions detected by the control unit and conditions detected by the device.|$|E
50|$|Not mapped {{into the}} address space is a 12-bit program counter and an {{associated}} hardware stack (four or six levels deep, depending on model). There {{are only two}} <b>status</b> <b>bits</b> (carry and zero), and they are banked based on processor mode, with separate <b>status</b> <b>bits</b> for normal, interrupt and non-maskable interrupt operation.|$|E
50|$|Dying Gasp is {{referenced}} {{in section}} 7.1.2.5.3 of ITU-T Recommendation G.991.2 (12/2003) as the Power <b>Status</b> <b>bit.</b>|$|R
3000|$|... i + 1 in {{the reverse}} path sends a M-ERROR {{message to the}} source then sets the <b>status</b> <b>bit</b> of guilty node N [...]...|$|R
5000|$|... Instruction Transfer Register (ITR), 33 bits (32 {{instruction}} {{plus one}} <b>status</b> <b>bit)</b> used to execute processor instructions {{while in a}} special [...] "Debug Mode" [...] (see below) ...|$|R
50|$|RISC-V {{does not}} cause {{exceptions}} on arithmetic errors, including overflow, underflow, subnormal and divide by zero. Instead, both integer and floating-point arithmetic produce reasonable default values and set <b>status</b> <b>bits.</b> Divide-by-zero can be discovered by a single branch after the division. The <b>status</b> <b>bits</b> can be tested by an operating system or periodic interrupt.|$|E
50|$|In later {{implementations}} these <b>status</b> <b>bits</b> {{evolved to}} keep up with growing memory sizes and gained insights.|$|E
5000|$|The first {{computer}} with this architecture was the B5000. in that implementation, {{the meaning of}} the various <b>status</b> <b>bits</b> was: ...|$|E
50|$|The {{occurrence}} of an underflow may set a ('sticky') <b>status</b> <b>bit,</b> raise an exception, at the hardwarelevel generate an interrupt, or may cause {{some combination of}} these effects.|$|R
50|$|The 6545 may {{be set to}} work in linear 14 {{bit mode}} using a <b>status</b> <b>bit.</b> On the 6845 the same thing {{requires}} adjustment of the character height.|$|R
5000|$|As stated {{before there}} is one channel <b>status</b> <b>bit</b> in each subframe, making one 192 bit word for each channel in each block. This 192 bit word is usually {{presented}} as 192/8 = 24 bytes. The contents of the channel status word are completely different between the AES3 and S/PDIF standards, although they agree that the first channel <b>status</b> <b>bit</b> (byte 0 bit 0) distinguishes between the two. In the case of AES3, the standard describes in detail how the bits have to be used. Here is {{a summary of the}} channel status word: ...|$|R
5000|$|Type II SmartNet systems uses <b>status</b> <b>bits</b> {{for special}} {{transmissions}} such as Emergency, Patches, DES/DVP encrypted transmissions, and Multiselects on Motorola Trunking systems. Motorola Trunking radios directly interpret these <b>status</b> <b>bits</b> for their special functions, therefore no difference is noticed by the user. Some Scanners may interpret these special talkgroup <b>status</b> <b>bits</b> as different talkgroups entirely. Below is the conversion chart for these special status bits: [...] Dec ID + # Usage ------------------------------------------------------- ID+0 Normal Talkgroup ID+1 All Talkgroup ID+2 Emergency ID+3 Talkgroup patch to another ID+4 Emergency Patch ID+5 Emergency multi-group ID+6 Not assigned ID+7 Multi-select (initiated by dispatcher) ID+8 DES Encryption talkgroup ID+9 DES All Talkgroup ID+10 DES Emergency ID+11 DES Talkgroup patch ID+12 DES Emergency Patch ID+13 DES Emergency multi-group ID+14 Not assigned ID+15 Multi-select DES TG ...|$|E
5000|$|... 34 bits are not {{encrypted}} : a 28-bit serial number, 4 bits of button information, and 2 <b>status</b> <b>bits</b> (repeat and {{low battery}} indicators).|$|E
50|$|A BT.656 {{data stream}} is a {{sequence}} of 8-bit or 10-bit Word (computer architecture), transmitted {{at a rate of}} 27 Mword/s. Horizontal scan lines of video pixel data are delimited in the stream by 4-byte long SAV (Start of Active Video) and EAV (End of Active Video) code sequences. SAV codes also contain <b>status</b> <b>bits</b> indicating line position in a video field or frame. Line position in a full frame can be determined by tracking SAV <b>status</b> <b>bits,</b> allowing receivers to 'synchronize' with an incoming stream.|$|E
2500|$|The MIPS {{architecture}} supports one to 64 {{entries in}} the TLB. [...] The number of TLB entries is configurable at CPU configuration before synthesis. [...] TLB entries are dual. [...] Each TLB entry maps a virtual page number (VPN2) to either one of two page frame numbers (PFN0 or PFN1), depending on the least significant bit of the virtual address that {{is not part of}} the page mask. [...] This bit and the page mask bits are not stored in the VPN2. [...] Each TLB entry has its own page size, which can be any value from [...] to [...] in multiples of four. [...] Each PFN in a TLB entry has a caching attribute, a dirty and a valid <b>status</b> <b>bit.</b> [...] A VPN2 has a global <b>status</b> <b>bit</b> and an OS assigned ID which participates in the virtual address TLB entry match, if the global <b>status</b> <b>bit</b> is set to zero. [...] A PFN stores the physical address without the page mask bits.|$|R
50|$|The MIPS {{architecture}} supports one to 64 {{entries in}} the TLB. The number of TLB entries is configurable at CPU configuration before synthesis. TLB entries are dual. Each TLB entry maps a virtual page number (VPN2) to either one of two page frame numbers (PFN0 or PFN1), depending on the least significant bit of the virtual address that {{is not part of}} the page mask. This bit and the page mask bits are not stored in the VPN2. Each TLB entry has its own page size, which can be any value from 1 KB to 256 MB in multiples of four. Each PFN in a TLB entry has a caching attribute, a dirty and a valid <b>status</b> <b>bit.</b> A VPN2 has a global <b>status</b> <b>bit</b> and an OS assigned ID which participates in the virtual address TLB entry match, if the global <b>status</b> <b>bit</b> is set to zero. A PFN stores the physical address without the page mask bits.|$|R
30|$|In the TBUT, each node {{is issued}} with a token at its inception. The token {{consists}} of three fields: NodeID, status, and reputation. NodeID {{is assumed to be}} unique and deemed to be beyond manipulation; status is a single-bit flag. Initially, the <b>status</b> <b>bit</b> is preset to zero indicating a green flag. Initially, reputation value is zero, i.e., positive. The token with a green flag and positive reputation is a permit issued to each node, which confers it the freedom to participate in all network activities. Each node in order to participate in any network activity, say Route Request RREQ, has to announce its token <b>status</b> <b>bit</b> and reputation value. If token <b>status</b> <b>bit</b> is “ 1 ” indicating a “red flag,” protocol does not allow the node to participate in any network activity. Similarly, if reputation value is “− 1 ” indicating a “negative reputation,” the protocol does not allow the node to participate in any network activity. Our study does not depend on the exact mobile node structure of the networks. For the sake of the result explanation, it will be assumed that the network consists of approximately 100 mobile nodes span in the flat space (i.e., its span size is roughly 1 km 2) and that there are roughly 20 mobile nodes per service area region [7].|$|R
5000|$|Therefore, if a user was {{transmitting}} a multi-select call on talkgroup 1808, the trunktracker {{would actually}} receive those transmissions on 1815. Some common uses of these <b>status</b> <b>bits</b> are as follows: ...|$|E
50|$|Anything that is {{read and}} written can be renamed. While the {{general-purpose}} and floating-point registers are discussed the most, flag and status registers or even individual <b>status</b> <b>bits</b> are commonly renamed as well.|$|E
5000|$|Arithmetic: ADD, SUB, MULU (unsigned multiply), MULS (signed multiply), DIVU, DIVS, NEG (additive negation), and CMP (a sort of {{comparison}} done by subtracting the arguments {{and setting the}} <b>status</b> <b>bits,</b> but did not store the result) ...|$|E
40|$|This {{document}} {{describes a}} mechanism for signaling the active and standby status of redundant Pseudowires (PWs) between their termination points. A set of Redundant PWs is configured between Provider Edge (PE) nodes in single-segment pseudowire (SS-PW) applications or between Terminating Provider Edge (T-PE) nodes in Multi-Segment Pseudowire (MS-PW) applications. In order for the PE/T-PE nodes to indicate the preferred PW to use for forwarding PW packets to one another, a new <b>status</b> <b>bit</b> is defined. This bit indicates a Preferential Forwarding status with a value of active or standby for each PW in a redundant set. In addition, a second <b>status</b> <b>bit</b> is defined to allow peer PE nodes to coordinate a switchover operation of the PW. Finally, this document updates RFC 4447 by adding details to {{the handling of the}} PW <b>status</b> code <b>bits</b> in the PW Status TLV. Status of This Memo This is an Internet Standards Track document. This document {{is a product of the}} Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
30|$|The rows of {{the array}} {{represent}} strings (of bits) in a population, and the columns represent the (the <b>status</b> <b>bit</b> {{of the condition}} of availability) available channel numbers which will be assigned. There are P strings for a population and each string has Q (possible states) channels which are {{the total number of}} available channels in the system Q[*]<[*]K.|$|R
50|$|In serial {{communication}} contexts, parity is usually generated and checked by interface hardware (e.g., a UART) and, on reception, the result {{made available to}} the CPU (and so to, for instance, the operating system) via a <b>status</b> <b>bit</b> in a hardware register in the interface hardware. Recovery from the error is usually done by retransmitting the data, the details of which are usually handled by software (e.g., the operating system I/O routines).|$|R
5000|$|... Debug Communications Channel (DCC), 34 bits (one long {{data word}} plus two <b>status</b> <b>bits)</b> used for {{bidirectional}} data {{transfer to the}} core. This is used both in debug mode, and possibly at runtime when talking to debugger-aware software.|$|E
50|$|Group 2 format {{instructions}} {{test for}} internal {{conditions of the}} J and Kaccumulator registers, manipulate the overflow and flag <b>status</b> <b>bits</b> andprovide complement, increment and negation operations on the J and K accumulatorregisters. Bits 9, 10 and 11 select the condition to be tested.|$|E
50|$|The Pep/7 Computer Simulation (also {{known as}} Pep7) {{is a virtual}} machine {{that is used by}} professors of schools and colleges to explain and simplify the lowest level of {{computing}} (machine language). True to its name, Pep/7 has seven registers and four <b>status</b> <b>bits.</b>|$|E
30|$|The Monitor {{provides}} the Link Prediction with relevant measurement data (e.g., signal quality and messages concerning upcoming changes in link availability) {{that needs to}} be processed to predict future link quality for each of the interfaces. Measurements concerning the available bandwidth and the round trip time are given to the Application Interface. The tunnel up/down <b>status,</b> <b>bit</b> error rate (BER), packet loss, round trip time etc are signaled to the Admission Control (see Section 4.3. 5).|$|R
40|$|Abstract. In this paper, {{we present}} a new MAC {{protocol}}, called Low-Latency MAC (LL-MAC) protocol for muti-hop Wireless Sensor Networks. The LL-MAC is designed for the object tracking applications such as animal invasion, flight detection and wild animal detection. In these applications, the object appearance event does not occur frequently. But when an event occurs, many measured data by sensor nodes {{should be sent to}} a sink node as soon as possible. LL-MAC uses duty cycling contention-based MAC protocol. The operational cycle is divided into four periods: Sync, carrier sensing, Data, and Sleep. The Sleep period will be increased to send more packets by sender node when a target object appearance occurs. And a <b>status</b> <b>bit</b> in PION packet is used to indicate target appearance by the sender node. If this <b>status</b> <b>bit</b> is set to 1, all nodes know an object appearance and adjust their Sleep period to two times longer. After sending data packets, the sender node goes into sleep mode and wake ups again in two times slot times to send more data. Results showed that our LL-MAC protocol outperformed other protocols in terms of data packet delivery delay...|$|R
5000|$|The 32 bytes from 0x00-0x1F memory-map the 8 {{registers}} R0-R7. 8 bytes {{are used}} at a time; 2 program <b>status</b> word <b>bits</b> select between four possible banks, ...|$|R
50|$|The {{carry bit}} {{can be set}} or complemented by {{specific}} instructions. Conditional-branch instructions test the various flag <b>status</b> <b>bits.</b> The flags can be copied as a group to the accumulator. The A accumulator and the flags together are called the PSW register, or program status word.|$|E
50|$|An {{equivalent}} {{definition of}} the DST <b>status</b> <b>bits</b> is that bit 57 is set if DST will be in effect at 24:00Z, {{the end of the}} current UTC day. Bit 58 is set if DST was in effect at 00:00Z, the beginning of the current UTC day.|$|E
50|$|The Arithmetic and Logic Unit is {{responsible}} for performing boolean operations (and, or, not, nand, nor, xor, xnor) and also for performing integer addition and subtraction. Besides the result, the ALU typically provides <b>status</b> <b>bits</b> such as {{whether or not the}} result was 0, or if an overflow occurred.|$|E
5000|$|Handling: If it is {{anticipated}} that overflow may occur and when it happens detected and other processing done. Example: {{it is possible to}} add two numbers each two bytes wide using just a byte addition in steps: first add the low bytes then add the high bytes, but if it is necessary to carry out of the low bytes this is arithmetic overflow of the byte addition and it necessary to detect and increment the sum of the high bytes. CPUs generally have a way of detecting this to support addition of numbers larger than their register size, typically using a <b>status</b> <b>bit.</b>|$|R
5000|$|The PDP-6 {{supported}} {{time sharing}} {{through the use}} of a <b>status</b> <b>bit</b> selecting between two operating modes ("Executive" [...] and [...] "User", with access to I/O, etc., being restricted in the latter), and a single relocation/protection register which allowed a user's address space to be limited to a set section of main memory (a second relocation/protection register for shareable [...] "high segments" [...] was added on the PDP-10). The main operating system used on the machine was an early version of what later became TOPS-10, and several sites made custom versions of the system, which was available in source code form. MIT's ITS operating system also began on the PDP-6.|$|R
50|$|A status register, flag register, or {{condition}} code register {{is a collection}} of <b>status</b> flag <b>bits</b> for a processor. An example is the FLAGS register of the x86 architecture or flags in a program status word (PSW) register.|$|R
