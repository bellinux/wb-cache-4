13|22|Public
50|$|On October 29, 1923, {{he began}} {{service to the}} Office of the State Architect and Engineer as designer, field superintendent, estimator, and <b>specification</b> <b>writer.</b> After leaving state service, he was a partner with {{the father and son}} team of Charles L. Inscho and C. Curtiss Inscho at the frim of Inscho, Brand & Inscho in Columbus.|$|E
5000|$|... 'For {{the past}} several years I have written Product Specifications for digital {{computers}} and related peripheral gear. The engineering design is done by engineers. The Product Specification forms a [...] "contract" [...] between engineering and marketing to assure that both interested parties know what is to be built. Because the engineer may be too optimistic as to what he can produce and what reliability he can achieve, and because marketing wants the moon for zero dollars, the product <b>specification</b> <b>writer</b> is needed as a negotiator.' ...|$|E
50|$|During Shirley's {{junior year}} at the University of Oklahoma, she became engaged and decided to change her degree to professional-writing in order to {{graduate}} faster. A short time later, Shirley and her fiancé split up. She {{went to work as}} a <b>specification</b> <b>writer</b> for McDonnell Aircraft for about a year and eventually decided to return to OU to complete her engineering degree. She graduated from University of Oklahoma with a BS in Aerospace and Mechanical Engineering in 1965, and from the University of Southern California with a MS in Aerospace Engineering.|$|E
50|$|Off the field, McKay was a <b>specifications</b> <b>writer</b> at General Motors Ltd., Diesel Division.|$|R
50|$|CSI {{was formed}} in March 1948 by various <b>specification</b> <b>writers</b> in {{government}} agencies to develop standards {{for the quality of}} construction specifications.|$|R
50|$|The Java Unified Expression Language is {{a special}} purpose {{programming}} language mostly used in Java web applications for embedding expressions into web pages.The Java <b>specification</b> <b>writers</b> and expert groups of the Java web-tier technologies have worked on a unified expression language which was first included in the JSP 2.1 specification (JSR-245), and later specified by itself in JSR-341, part of Java EE 7.|$|R
50|$|Despite {{the fact}} that Roth's sons, Julian and Richard, had joined the firm many years earlier, {{it was not until}} 1947 that the firm's name was changed to Emery Roth & Sons, {{approximately}} one year before Roth's death. Julian (1901-1992) specialized in construction costs and building materials and technology, while Richard (1904-1987) was named the firm's principal architect. In the 1950s and 1960s Emery Roth & Sons became the most influential architectural firm in New York and contributed substantially in changing the appearance of Midtown and Lower Manhattan. In that particular period of time Emery Roth & Sons designed dozens of speculative office buildings, mostly with curtain wall facades, which soon became a ubiquitous feature of the city. Beginning in the mid-1960s, the firm was also hired as associate architects in large-scale projects like the Pan Am Building (1963), the World Trade Center (1966-1973) and the Citicorp Center (1977). In the early 1960s, Richard Roth's son, Richard Roth, Jr. (b. 1933) became the third generation to join the firm, eventually rising to chief architect CEO and shareholder. As the firm expanded and diversified over six decades, it remained a family business through the 1990s. In 1988 Richard Roth Jr's daughter Robyn Roth-Moise joined the firm as comptroller. Richard Roth Jr's son Richard Lee Roth joined the firm in 1982 and became the chief <b>specification</b> <b>writer</b> for Emery Roth & Sons. Both retired from the firm when Richard Roth Jr retired and was replaced as the company's CEO in 1993 by Robert Sobel, Roth's cousin. But only three years later, in 1996, the firm ceased to operate, apparently because of financial distress. Emery's great-grandson Richard Lee Roth currently works in the architectural profession and resides in South Florida.|$|E
40|$|This {{document}} {{provides a}} guideline specification useful for developing project specifications for roller compacted concrete (RCC) as an exposed RCC pavement surface, {{that may or}} may not be diamond ground for smoothness and/or texture. RCC as a base/subbase layers is not covered in this specification. The information is also not wholly applicable for non-pavement applications such as backfills, dams or liners. This guideline should not be used as a specification reference in contract documents. An owner, engineer or contractor must consider the available options and apply these guidelines to create specifications for specific local projects. This document references appropriate material standards, test methods and specifications of American Association of State Highway and Transportation Officials (AASHTO), ASTM International (ASTM), and Canadian Standards Association (CSA). These references assume that the contractor and the engineer will use the most up-to-date and applicable standards or methods that are in effect when bids are solicited for the project. It also assumes that the <b>specification</b> <b>writer</b> will choose the standard or test most suitable for their agency/project. Footnotes accompany many of specification provisions herein. These added details describe reasoning for certain specification features, as well as provide considerations and important information for the <b>specification</b> <b>writer...</b>|$|E
40|$|Developing a {{compiler}} for ASF+SDF {{has been}} a challenging task. The compilation of ASF+SDF is performed using an intermediate language μASF, an abstract syntax representation of ASF+SDF. Although ASF+SDF is quite simple to use, it provides a number of features which have an unclear semantics. By means {{of a number of}} examples in μASF and a more mathematical notation a number of these semantic issues are clarified. These examples are helpful for both the compiler designer and the <b>specification</b> <b>writer...</b>|$|E
5000|$|... buildingSMART Canada, the Canadian {{chapter of}} buildingSMART International, works in {{partnership}} with all Canadian AECOO community stakeholders including Canadian associations of architects, engineers, <b>specification</b> <b>writers,</b> contractors as well as public and private owners, government and industry. It creates standards and supports programmes and tools to ensure that Canada will be successful in its movement towards a better built environment supported through open and internationally compatible standards for BIM.|$|R
5000|$|The {{firm had}} {{a staff of}} 300-400 people in the 1930s, {{including}} about 40 secretaries, stenographers, typists, and file clerks. There were around 175 architectural designers and draftsmen, 80-90 mechanical and electrical engineers, 40-50 field superintendents, and about 30 <b>specification</b> <b>writers.</b> The chief administrator was Albert Kahn and his assistants were his brothers Julius, Moritz and Louis. The staff was increased to 600 people {{at the time of}} World War II. The firm ramped up for war plants to make tanks and other war related equipment.|$|R
40|$|The {{industry}} {{related to}} Trenchless Excavation Construction (TEC) is seeing wide spread expansion. Technological {{developments in the}} last twenty years have been applied to TEC and now allow the installation of underground utility lines under previously developed properties and in difficult soil conditions. Large municipalities and industrial owners have greatly benefited from projects constructed using TEC. The Naval Facilities Engineering Command (NAVFAC) is the construction and maintenance arm of the Navy and manages projects world wide. It is governed in is contracting by the Federal Acquisition Regulations (FAR) which among many things attempts to encourage fair and equitable administration of contracts. The FAR does this by restricting proprietary language and actions in government contracts and also by focusing contracts on final products versus construction methodology. Since TEC is new, unfamiliar, and is often viewed to be a methodology and not a final product, NAVFAC's <b>specification</b> <b>writers</b> have been concerned about addressing TEC in their contracts. The purpose of this research project is to give NAVFAC designers and <b>specification</b> <b>writers</b> a Guide <b>Specification</b> that allows for TEC, provides them a comparison project that shows how TEC may be utilized, and also to make them aware of the basic concepts of TEC via a NAVFAC magazine article. [URL]...|$|R
40|$|Specifications {{are often}} the most {{important}} part of the construction contract. However, as designers, we often just assume that the <b>specification</b> <b>writer</b> will "get the job done". The project management team must view specifications as an important portion of the project and the <b>specification</b> <b>writer</b> as an equal member of the team from the very start of the project. During November, I assumed the duties as Acting Chief of Engineering and Construction Division. One of the additional hats that came with those duties is the Corps Dam Safety Officer. I had a good initial meeting with the Headquarters Dam Safety Committee and am looking forwarded to meeting the Division and District Dam Safety Officers during scheduled visits to the field. The work in the dam safety area gives me the opportunity to see both organizations (Engineering and Construction, and Operations) working together in this important area of public safety and resource management. Also, dam safety represents one of the areas of the overall national infrastructure that will have to be addressed during the coming decade. It is important that we seek opportunities to become the Nation's Engineer team of choice to help bring our infrastructure into the 21 st Century. As we enter the Holiday Season, I wish each of you and your families a Happy Holiday Season and a Prosperous New Year. The coming year, 2000, will bring us changes of the same magnitude that face...|$|E
40|$|In {{the highly}} dynamic markets in which {{software}} customers operate, {{it is crucial}} that the software development process is able to incorporate the customers in the feedback loop, supporting the evolution of specifications and ensuring that software is according to the customers’ requirements. A specification language frequently used for this purpose is Gherkin — a very simple language with three main keywords: Given, When, Then. The semantics of these keywords are loosely defined as given some precondition, when a particular event occurs, then some postcondition is expected to hold. Other than these three keywords, the <b>specification</b> <b>writer</b> can use natural language and it is then up to the developer to translate the specification into executable tests. peer-reviewe...|$|E
40|$|This paper {{presents}} {{an extension of}} propositional dynamic database logic in which the <b>specification</b> <b>writer</b> can specify arbitrary database transactions declaratively. Since declaratively specified transactions are under-specified, the specification must be supplemented with a frame assumption about what does not change {{as the result of}} a transaction. In addition, static database constraints imply preconditions, also called qualifications, that must be satisfied for a transaction to occur and static constraints may imply derived updates for a transaction (also called ramifications). We solve these problems by defining preferences over Kripke structures and showing how these can be used to define an intended semantics that, for each declarative transaction specification, selects a unique meaning for each transaction. In particular, the intended semantics formalizes a frame assumption and selects qualifications and ramifications for each specification. The notion of preferential entailmen [...] ...|$|E
5000|$|Version control scheme: it has {{a version}} scheme built into it that allows the DNG <b>specification,</b> DNG <b>writers,</b> and DNG readers, to evolve at their own paces.|$|R
50|$|Emma (née Gruetzke) Brunson (1887-1980) was an American architect. Brunson was {{probably}} born in St. Paul, Minnesota. Nothing {{is known of}} her education and training, however, {{she worked as a}} drafter and <b>specifications</b> <b>writer</b> for Augustus F. Gauger for 15 years before she opened her own firm in 1920. She became a registered architect on December 23, 1921, soon after the enactment of the Minnesota law requiring registration for architects and engineers. She did primarily residential work until her retirement in 1968. Brunson died in St. Paul, Minnesota in 1980.|$|R
30|$|The third step is {{requirements}} specification. This step {{is creating}} or changing requirements documentation {{based on the}} elicitation and analysis. The documentation can be in form of electronic document or internal web pages of the company, for example. The specification acts as the first and foremost vehicle in communicating requirements to system developers who use it {{as the basis for}} design and verification. For this reason, it is important that there is a common understanding among all stakeholders about the semantics of the specification. The best approach to foster this understanding and reduce misinterpretations is to force <b>specification</b> <b>writers</b> to utilize disciplined and well-defined templates, meta-models when writing the requirements document.|$|R
40|$|A central {{formalism}} in the Language Development Laboratory (LDL; [Rie 92]) are GSFs (Grammars of Syntactical Functions) - {{a kind of}} attribute grammars (AGs) {{which are}} closely related to logic programs since GSFs can be regarded as parameterized context-free grammars with relations associated with the rules. LDL supports the formal definition of programming and special purpose languages where the automatic derivation of prototype interpreters is supported due to an implementational model based on logic programming. Here, we want to present a metaprogramming -like approach to the language design (specification) which supports the attachment of semantic aspects to a specification as well as the modification and composition of given fragments. The <b>specification</b> <b>writer</b> is supported by a type system. The approach is currently incorporated into the system LDL. The motivation for this operation-oriented style of specification is given by the need for extensibility of specifications (i. e. [...] ...|$|E
40|$|It {{may not be}} {{reproduced}} in part or in its entirety for sale or profit. This document, when {{used as the basis}} of a specification, has significant legal and financial ramifications on the outcome of a construction project. By adopting this specification, in part or in its entirety, the user accepts all liability related to its use. INSTRUCTIONS TO THE SPECIFICATION WRITER: The following document is intended as a general specification to guide the writing of a project-specific specification. Each project is unique and it is required that the specification be developed accordingly. DO NOT USE THE FOLLOWING SPECIFICATION WITHOUT MAKING IMPORTANT ADJUSTMENTS to reflect local conditions, regulations, market standards, project schedules and local and regional practices. The following are specific items that need to be addressed. 1. General instructions to use this specification: These instructions are intended to guide the <b>specification</b> <b>writer</b> (the specifier) through the process of editing this document into an Irrigation specification. Be sure to delete these instructions before issuing the specifications. Note that there is a watermark on each page identifying this as a draft specification. Be sure to delete this watermark before issuing this document. The watermark is found under the “Insert ” pull down in the tool bar...|$|E
40|$|Use of this document: The {{following}} specification {{has been}} {{prepared by the}} Urban Tree Foundation and is copyrighted 2014. Permission is granted for use of this material for individual use or use by your organization to prepare specifications. It may not be reproduced in part or in its entirety for sale or profit; however {{it can be used}} as part of a package of services you provide for specific landscape projects. This document, when used as the basis of a specification, has significant legal and financial ramifications on the outcome of a construction project. By adopting this specification, in part or in its entirety, the user accepts all liability related to its use. INSTRUCTIONS TO THE SPECIFICATION WRITER: The following document is intended as a general specification to guide the writing of a project-specific specification. Each project is unique and it is required that the specification be developed accordingly. DO NOT USE THE FOLLOWING SPECIFICATION WITHOUT MAKING IMPORTANT ADJUSTMENTS to reflect local conditions, regulations, market standards, project schedules and local and regional practices. The following are specific items that need to be addressed. 1. General instructions for using this specification: These instructions are intended to guide the <b>specification</b> <b>writer</b> (the specifier) through the process of editing this document into a Planting Soil specification. Be sure t...|$|E
40|$|The paper {{discusses}} the applications of Heat Recovery Steam Generator Simulation. Consultants, plant engineers and plant developers can evaluate the steam side performance of HRSGs and {{arrive at the}} optimum system which matches {{the needs of the}} process plant, cogeneration or combined cycle plant. There is no need to design the HRSG per se and hence simulation is a valuable tool for anyone interested in evaluating the HRSG performance even before it is designed. It can also save a lot of time for <b>specification</b> <b>writers</b> as they need not guess how the steam side performance will vary with different gas/steam parameters. A few examples are given to show how simulation methods can be applied to real life problems...|$|R
40|$|The growing social {{awareness}} {{with regard to}} sustainable construction and energy efficiency in buildings is leading <b>specifications</b> <b>writers</b> and end users {{to take into account}} new construction solutions. However, the introduction of these construction solutions into the market is slow and difficult owing to the limitations of the recognised thermal simulation tools, which do not allow estimations to be made when integrating innovative systems, and to the difficulty of validating their efficiency in actual buildings before marketing them. The present study analyses the energy efficiency of a ventilated façade made up of near-infrared reflective ceramic tiles, by integrating a mathematical model validated in the CIES Living Lab experimental building in Castellón into the EnergyPlus program...|$|R
40|$|The {{goal of this}} Creative Project was {{to write}} a model text on the {{principles}} and practices of specifications writing for landscape architecture students. The goals of the text were to provide: 1) {{an overview of the}} principles and practices of specifications writing as advocated by the Construction Specifications Institute; 2) examples of contract documents used by the landscape architect; and 3) a source of reference information specifically for landscape architects. The text consists of nine chapters. Each chapter begins with a set of goals, followed by the text content, and ends with a set of review questions. The text contains figures and appendices which provide examples and sources of information useful to <b>specifications</b> <b>writers.</b> Department of Landscape ArchitectureThesis (M. L. A. ...|$|R
40|$|Software systems inevitably {{contain a}} large amount of {{repeated}} artifacts at different level of abstraction [...] -from ideas, requirements, designs, algorithms to implementation. This dissertation focuses on analyzing software repetitiveness at implementation code level and leveraging the derived knowledge for easing tasks in software maintenance and evolution such as program comprehension, API use, change understanding, API adaptation and bug fixing. The guiding philosophy of this work is that, in a large corpus, code that conforms to specifications appears more frequently than code that does not, and similar code is changed similarly and similar code could have similar bugs that can be fixed similarly. We have developed different representations for software artifacts at source code level, and the corresponding algorithms for measuring code similarity and mining repeated code. Our mining techniques bases on the key insight that code that conforms to programming patterns and specifications appears more frequently than code that does not. Thus, correct patterns and specifications can be mined from large code corpus. We also have built program differencing techniques for analyzing changes in software evolution. Our key insight is that similar code is likely changed in similar ways and similar code likely has similar bug(s) which can be fixed similarly. Therefore, learning changes and fixes from the past can help automatically detect and suggest changes/fixes to the repeated code in software development. Our empirical evaluation shows that our techniques can accurately and efficiently detect repeated code, mine useful programming patterns and API specifications, and recommend changes. It can also detect bugs and suggest fixes, and provide actionable insights to ease maintenance tasks. Specifically, our code clone detection tool detects more meaningful clones than other tools. Our mining tools recover high quality programming patterns and API preconditions. The mined results have been used to successfully detect many bugs violating patterns and specifications in mature open-source systems. The mined API preconditions are shown to help API <b>specification</b> <b>writer</b> identify missing preconditions in already-specified APIs and start building preconditions for the not-yet-specified ones. The tools are scalable which analyze large systems in reasonable times. Our study on repeated changes give useful insights for program auto-repair tools. Our automated change suggestion approach achieves top- 1 accuracy of 45 %- 51 % which relatively improves more than 200 % over the base approach. For a special type of change suggestion, API adaptation, our tool is highly correct and useful...|$|E
50|$|In 1894, {{after taking}} a course at The Art Institute of Chicago, he became an {{independent}} architect. Shortly thereafter, Waid submitted two designs for buildings at Monmouth College (Illinois). Having moved to New York City by 1898, Waid and an associate submitted the winning design in a competition for the Long Island College Hospital in Brooklyn, New York where they acted as their own draftsmen and <b>specification</b> <b>writers.</b> When that job was completed, they opened a small office on Fifth Avenue in New York City and were also appointed architect for the Board of Foreign Missions of the Presbyterian Church, which had offices in the same building. This led to his design of hospitals in Alaska and Puerto Rico as well as schools in the western United States and Cuba.|$|R
50|$|All {{versions}} of the specification remain valid, {{in the sense that}} DNG files conforming to old versions should still be read and processed by DNG readers capable of processing later versions. DNG has a version scheme built into it that allows the DNG <b>specification,</b> DNG <b>writers,</b> and DNG readers, to evolve at their own paces. Each version of the specification describes its compatibility with previous versions.|$|R
50|$|Standardizing the {{presentation}} of such information improves communication among all parties involved in construction projects. That helps the project team deliver structures to owners according to their requirements, timelines, and budgets. An indication of the widespread acceptance of MasterFormat is that the ASTM standard for sustainability assessment of building products relies on MasterFormat to organize the data. MasterFormat is an integral component of the SpecsIntact system. SpecsIntact (Specifications Kept Intact), is an automated specification processing system for preparing certain government facility construction projects using standard master specifications, called Master Text or Masters, supplied by each of three government agencies. SpecsIntact {{was developed by the}} National Aeronautics and Space Administration (NASA) and designed for use by engineers, architects, interior designers, <b>specification</b> <b>writers,</b> project managers and construction managers. The Naval Facilities Engineering Command (NAVFAC) and the Army Corps of Engineers (USACE) has also adopted SpecsIntact as their standard specifications system, greatly facilitating the effort to standardize construction specifications throughout these agencies. These services utilize MasterFormat from UFGS (United Facilities Guide Specification) sections found on the Whole Building Design Guide website.|$|R
40|$|Modern science {{relies on}} the {{availability}} of resources accessible over the web. Each resource uses its own format, among other things because science is highly dynamic and tasks change frequently. In other words, format multiplicity is a fact of life. Data interoperability {{relies on the}} presence of wrappers. The C 2 M project aims to build a system that supports quick and easy generation of lightweight wrappers by providing a language in which formats can be specified. Because the project was originally aimed at chemical applications, the name “C 2 M��? is a chemical formula-like abbreviation of “chemical configurable middleware��?. For reasons of exposition, we will be looking at a simple chemical format in this paper. C 2 M can be succesfully applied in other domains as well. The C 2 M language has been designed to be easy to learn and use, yet it is sufficiently formal to allow unambiguous description of formats. There is a provision for including documentation, and in fact <b>specification</b> <b>writers</b> are encouraged to do so copiously. Underlying the design of the C 2 M language is the intuition {{that there is such a}} thing as language ergonomics...|$|R
5000|$|Starting around 1990, a {{new style}} of writing about testing began to {{challenge}} what had come before. The seminal work {{in this regard is}} widely considered to be Testing Computer Software, by Cem Kaner. Instead of assuming that testers have full access to source code and complete <b>specifications,</b> these <b>writers,</b> including Kaner and James Bach, argued that testers must learn to work under conditions of uncertainty and constant change. Meanwhile, an opposing trend toward process [...] "maturity" [...] also gained ground, {{in the form of the}} Capability Maturity Model. The agile testing movement (which includes but is not limited to forms of testing practiced on agile development projects) has popularity mainly in commercial circles, whereas the CMM was embraced by government and military software providers.|$|R
40|$|Graduation date: 1982 This {{dissertation}} {{addresses the}} problem of how best to share purchasing specifications among the community colleges of the State of Oregon. In order for Oregon's community college administrators who are responsible for the acquisition of goods and services for vocational and other programs to perform successfully, it requires the development and continual maintenance of specifications. The objectives of the study were: 1. To determine the usefulness of specification information sharing between public purchasing officials. 2. To help identify how best to share specification information. 3. To make recommendations about methods to share specifications. The thirteen 'community colleges of Oregon do not currently have a structural means to exchange purchasing specification information. Research shows that <b>specification</b> <b>writers</b> often spend time doing work that has already been done well by others. To address this problem, it was necessary to accomplish the following: 1. Conduct a literature search to determine the methods utilized for specification sharing. 2. Survey the attitudes of public purchasing managers in the Pacific Northwest to help determine how best to share specification information. 3 Develop and field test a Purchasing Specification Information Sharing Model utilizing purchasing administrators in the thirteen Oregon Community Colleges. The findings were: (1) Officials were divided as to their opinions whether specification sharing had enabled them to identify and develop more meaningful specifications for the acquisition of goods and services. (2) There was generally a willingness to pay postage costs involved in updating and maintaining a specification sharing effort between community colleges. (3) There was not a consensus concerning whether the listing should be restructured to identify specifications required. (4) The majority {{of the respondents indicated that}} a rotation among the community colleges of the Oregon Community College Association should take the lead in continuing the specification sharing efforts. The research documented a need for information exchange and tested a model for possible specification sharing...|$|R
40|$|My theisis {{focuses on}} the {{typology}} and method of formation of characters in Hryhir Ťuťunnyk's prose, the Ukrainian writer {{of the second half}} of the 20 th century. First I outlined the category of the literary characters and its separate parts in prosaic text, then I analysed the opinions of individual literary theorists and the compiled development in chronological order of characters in the prose of the 19 th and 20 th centuries. The Development of characters is the subject of the chapter 3. This part tackles only Ukrainian literature of the 19 th and 20 th centuries. First I focus on the <b>specification</b> of <b>writers</b> and their typology and formation of characters, and in the prose beginning from 1917 on I tried to make a sketch of individual types of characters. In the chapter 4 and 5, the literary process and period during which the author wrote his work is introduced, and a list of Tutunnyk's prose in chronological order is provided. In the chapter 6 I focus on the typology of Tutunnyk's characters that appear in author's prosaic work. Tutunnyk's character formation method and detailed anylysis of the characters properties is tackled in the chapter 7. I focus on the author's method of depicting the character's appearance, nature, name, inner monologue, dialogue, memories, retrospective, he/she and I form way of [...] ...|$|R
40|$|This paper {{serves as}} a {{statement}} accompanying a capstone project for a degree in Information: Science and Technology. It details the work that went into creating the web page dedicated to helping <b>specifications</b> and codes <b>writers</b> to calculate fire resistance ratings of concrete masonry unit (CMU) walls. It briefly examines what a CMU wall is and the calculations {{that are involved in}} calculating fire-resistance ratings. The paper delves into how the site itself works, what the user can expect to see when first accessing the page and how to follow the steps {{in order to get the}} correct output. Without getting too technical, the paper also describes the four programming languages that were involved with coding the web page and what they handle in accordance with the page’s design and implementation. Finally, the paper concludes with an appendix containing the URL that will lead the reader to the web calculator and provides some practice problems that will allow the reader to test the calculator’s abilities...|$|R
40|$|Esta pesquisa, contribuindo para os estudos em Literatura Comparada, evidencia a correlação entre Literatura e Artes Plásticas, que tem sido vista desde a Antigüidade quando ícones da analogia entre o verbal e o pictórico deixaram suas marcas na correspondência entre as artes. Tal correlação atravessou vários períodos da História e {{continua}} presente em inúmeras pesquisas, na época contemporânea. Este trabalho examina a especificação teórica de vários escritores relacionados ao tema e enfoca principalmente as formas como Pedro Nava (1903 - 1984) utilizou os artifícios verbal e pictórico ao lidar com duas artes distintasThis research, as {{a contribution}} to the studies in Comparative Literature, makes evident a correlation between Literature and Plasticart. It has been seen since Antiquity when icons of the analogy between word and image left their marks in the arts correspondence. Such correlation has passed through several History periods and has been present in a number of researches in the contemporary age. This work examines the theoretical <b>specification</b> of several <b>writers</b> in relation to the theme and focuses mainly on the ways as Pedro Nava (1903 - 1984) made use of verbal and pictorial devices in dealing with two different art...|$|R
40|$|The {{constraint}} diagram {{language was}} designed to be used in conjunction with the unified modelling language (UML), primarily for placing formal constraints on software models. In particular, constraint diagrams play a similar role to the textual object constraint language (OCL) in that they can be used for specifying system invariants and operation contracts {{in the context of a}} UML model. Unlike the OCL, however, constraint diagrams can be used independently of the UML. In this paper, we illustrate a range of intuitive and counter-intuitive features of constraint diagrams and highlight some (potential) expressiveness limitations. The counter-intuitive features are related to how the individual pieces of syntax interact. A generalized version of the constraint diagram language that overcomes the illustrated counter-intuitive features and limitations is proposed. In order to discourage <b>specification</b> readers and <b>writers</b> from overlooking certain semantic information, the generalized notation allows this information to be expressed more explicitly than in the non-generalized case. The design of the generalized notation takes into account five language design principles which are discussed in the paper. We provide a formalization of the syntax and semantics for generalized constraint diagrams. Moreover, we establish a lower bound on the expressiveness of the generalized notation and show that they are at least as expressive as constraint diagrams...|$|R

