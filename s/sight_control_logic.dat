0|3678|Public
40|$|Abstract — In this paper, {{we propose}} an {{efficient}} LSDM lighting <b>control</b> <b>logic</b> design on lighting control system. The proposed LSDM lighting <b>control</b> <b>logic</b> is designed {{according to the}} operating conditions by the divide as the signal control part for I/O data bus and the timer/counter part for clock signal control. Also, the <b>control</b> <b>logic</b> is transmitted to MCU through a data bus by the environmental information detected from each sensor node. The propose LSDM lighting <b>control</b> <b>logic</b> was measured to power loss rate of the <b>control</b> <b>logic</b> in order to demonstrate the efficiency by applied to the control system. And it was proves that be effective to overall power consumption reduction...|$|R
50|$|<b>Control</b> <b>logic</b> can {{be modeled}} using a state diagram, {{which is a}} form of {{hierarchical}} state machine. These state diagrams can also be combined with flow charts to provide a set of computational semantics for describing complex <b>control</b> <b>logic.</b> This mix of state diagrams and flow charts is illustrated in the figure on the right, which shows the <b>control</b> <b>logic</b> for a simple stopwatch. The <b>control</b> <b>logic</b> takes in commands from the user, as represented by the event named “START”, but also has automatic recurring sample time events, as represented by the event named “TIC”.|$|R
40|$|The <b>control</b> <b>logic</b> {{implemented}} in {{building automation systems}} (BAS) has {{a significant impact on}} the overall energy demand of the building. However, information on the <b>control</b> <b>logic,</b> if documented, is often concealed from further data integration and reuse in heterogeneous information silos using disparate data formats. In particular, existing data formats and information models offer limited support to describe <b>control</b> <b>logic</b> explicitly. Ontology-based modeling of the <b>control</b> <b>logic</b> of BAS can potentially result in a versatile source of information for information-driven processes to further increase the performance of technical equipment in a building. Therefore, we present a novel information model, CTRLont, which allows to formally specify the domain of <b>control</b> <b>logic</b> in BAS. We demonstrate the usefulness of the novel information model by using it as a knowledge base for automating rule-based verification of designed <b>control</b> <b>logic</b> in BAS. We successfully apply the methodology to a simple control of an air handling unit and indicate a number of future steps...|$|R
40|$|In {{the present}} global economy the {{manufacturing}} industry {{is faced with}} the challenges {{that need to be}} overcome in order to remain competitive and avoid outsourcing. One of the challenges is the efficient development of the <b>control</b> <b>logic</b> for the distributed control systems that are often used to control the manufacturing equipment in the industry. Formal methods are mathematical frameworks that might be useful for overcoming that challenge. The <b>control</b> <b>logic</b> is often developed using the IEC 61131 standard that is focused on programming languages for non-distributed control systems. However, the new IEC 61499 standard provides the communication support as well as the programming units, i. e. function blocks, that are aimed at the <b>control</b> <b>logic</b> development for the distributed control systems. In the thesis, it is shown that the unclear specification of the function block scheduling order in the IEC 61499 might result in the <b>control</b> <b>logic</b> not being portable across IEC 61499 implementations. Therefore, the block scheduling order has to be considered during the <b>control</b> <b>logic</b> development. As a consequence, the developers might lose the focus on the high-level <b>control</b> <b>logic</b> that may result in the time-consuming development. The thesis presents contributions that may help the automatic formal model generation of the IEC 61499 <b>control</b> <b>logic,</b> assuming different block scheduling orders. The generated formal models may be used for verification of the <b>control</b> <b>logic</b> behavior using the algorithms of the framework called supervisory control theory (SCT). A synthesis algorithm from the SCT is used in the thesis for calculation of all deadlock free block scheduling orders from the automatically generated formal models. The contributions may help developers to concentrate on the high-level <b>control</b> <b>logic</b> since {{they may be able to}} use the formal methods to reduce the possible impact that the block scheduling orders, used in different IEC 61499 implementations, might have on the correctness of their <b>control</b> <b>logic.</b> Therefore, the developers may receive some benefits of the formal methods for the efficient development of the IEC 61499 <b>control</b> <b>logic</b> for the distributed control systems...|$|R
40|$|DE 102008035654 A 1 UPAB: 20090222 NOVELTY - The method {{involves}} determining {{a change}} in a configuration of a system, and testing whether the changed configuration {{of the system is}} retrievably stored, where the configuration of system is associated with a proper configuration of <b>control</b> <b>logic</b> of the system. The configuration of <b>control</b> <b>logic</b> that is associated with the changed configuration of system is retrieved, if the changed configuration of system is stored for the system. The <b>control</b> <b>logic</b> is adjusted to the changed configuration of the system. DETAILED DESCRIPTION - An INDEPENDENT CLAIM is also included for a computer program with a program code for executing a method for adjusting a <b>control</b> <b>logic</b> of a system. USE - Method for adjusting a <b>control</b> <b>logic</b> of a system e. g. materials handling equipment, transportation system, vehicle, or support system for elderly/disabled persons. ADVANTAGE - The method allows retrieval of the configuration of <b>control</b> <b>logic</b> that is associated with the changed configuration of system, if the changed configuration of system is stored for the system, and adjusts the <b>control</b> <b>logic</b> to the changed configuration of the system, thus enabling adding, removal or change of a unit of the system in a simple manner...|$|R
40|$|A system (100) {{comprising}} read means (112) {{for reading}} content data and <b>control</b> <b>logic</b> {{data from a}} storage medium (101), the <b>control</b> <b>logic</b> data being uniquely linked to the storage medium (101), processing means (113 - 117), for processing the content data and feeding the processed content data to an output, and control means (120) for executing the <b>control</b> <b>logic</b> data and for controlling the processing means (113 - 117) {{in accordance with the}} <b>control</b> <b>logic</b> data being executed. The link is preferably realized by variations in a physical parameter of the storage medium (101) that exhibit a modulation pattern representing a necessary parameter for obtaining access to the <b>control</b> <b>logic</b> data. Alternatively, the link is realized by an integrated circuit (201) on the storage medium (101) which contains the necessary parameter. The necessary parameter may comprise a decryption key or authentication data...|$|R
40|$|A {{design study}} of {{adaptive}} <b>control</b> <b>logic</b> suitable for implementation in modern airborne digital flight computers was conducted. Both explicit controllers which directly utilize parameter identification and implicit controllers {{which do not}} require identification were considered. Extensive analytical and simulation efforts resulted in the recommendation of two explicit digital adaptive flight controllers. Interface weighted least squares estimation procedures with <b>control</b> <b>logic</b> were developed using either optimal regulator theory or with <b>control</b> <b>logic</b> based upon single stage performance indices...|$|R
40|$|Abstract—in this paper, {{we propose}} an {{efficient}} LSDM lighting <b>control</b> <b>logic</b> {{design for a}} lighting control system. The proposed LSDM lighting <b>control</b> <b>logic</b> is designed according to the operating conditions by dividing them into the signal control part for the I/O data bus and the timer/counter part for the clock signal control. Also, the <b>control</b> <b>logic</b> is transmitted to the MCU through a data bus based on the environmental information provided by each sensor node. The power dissipation rate of the proposed LSDM lighting <b>control</b> <b>logic</b> was measured in order to demonstrate {{the efficiency of the}} applying the control system. In addition, it was demonstrated that the proposed design is effective for the reduction of overall power consumption...|$|R
40|$|Abstract [...] Much {{attention}} has been directed to {{different aspects of the}} design of pipelines [1, 2, 3, 4]. Design of the <b>control</b> <b>logic</b> of non-linear pipelines has however, been considered as a subsidiary issue in that an RTL description for such logic can easily be obtained from a behavioral description, with the use of widely available synthesis tools. But, as the complexity of a nonlinear pipeline increases, so does the complexity of the <b>control</b> <b>logic.</b> The complexity may be to an extent that obtaining even a behavioral description for the <b>control</b> <b>logic</b> is rendered difficult. This paper focuses on further automating the development of systems consisting of non-linear or multi-function pipelines by proposing an algorithmic technique for obtaining a behavioral description for the <b>control</b> <b>logic</b> of such pipelines. A simplified C++ implementation that produces a VHDL description of the <b>control</b> <b>logic</b> is then presented to clarify the algorithm. Experimental results that reveal connections between the nature of pipeline functions and the complexity of the <b>control</b> <b>logic,</b> obtained by utilization of the algorithm, are also presented. Consideration of these results can reduce the design space exploration of such pipelines to a more practically feasible subspace. I...|$|R
50|$|<b>Control</b> <b>logic</b> is a {{key part}} of a {{software}} program that controls the operations of the program. The <b>control</b> <b>logic</b> responds to commands from the user, and it also acts on its own to perform automated tasks that have been structured into the program.|$|R
40|$|We {{present and}} study a Modal Access <b>Control</b> <b>Logic</b> (M-ACL) to specify and reason about access control policies. We {{identify}} canonical properties of well-known access control axioms. We provide a Hilbert-style proof-system and we prove soundness, completeness and decidability of the logic. We present a sound and complete embedding of Modal Access <b>Control</b> <b>Logic</b> into First-Order Logic. We show {{how to use}} SPASS theorem prover to reason about access control policies expressed as formulas of Modal Access <b>Control</b> <b>Logic,</b> and we compare our logic with existing ones...|$|R
40|$|Time loss due {{to traffic}} {{congestion}} {{is much greater}} under the over-saturated condition than under the under-saturated condition. So is the effect when signal control is improved. However, the <b>control</b> <b>logic</b> for the over-saturated signalized network has not been established at present time. So {{the purpose of this}} paper is to try to construct the real-time <b>control</b> <b>logic</b> for the coordinated signal system under the over-saturated conditions. Especially, paying attention to the coordination between a critical intersection and the adjacent upstream intersection, the <b>control</b> <b>logic</b> of green split and offset is described...|$|R
50|$|System {{emulation}} reduces {{safety hazards}} and equipment damage during installation. Mistakes in the <b>control</b> <b>logic</b> and testing blunders are discovered using a model, not the live system.An emulation model contains more detail than the design phase simulation model. The simulation scenarios which exercised the system design may be rerun in emulation mode {{to verify that}} the detailed design and <b>control</b> <b>logic</b> implementation meet system production requirements. If it does not, it is far easier and less costly to modify the design or the <b>control</b> <b>logic</b> before the system is installed.|$|R
40|$|Clock gating is one {{of useful}} {{techniques}} to reduce the dynamic power consumption of synchronous sequential circuits. To reduce the power consumption of clock tree, previous work has shown that clock <b>control</b> <b>logic</b> should be synthesized in the high-level synthesis stage. However, previous work may suffer from a large circuit area overhead on the clock <b>control</b> <b>logic.</b> In this paper, we present an ILP (integer linear programming) formulation to consider both the clock tree and the clock <b>control</b> <b>logic.</b> Our optimization goal {{is not only to}} conform to the constraint on the overall power consumption, but also to minimize the area overhead of clock <b>control</b> <b>logic.</b> Compared with previous work, benchmark data show that our approach can greatly reduce the circuit area overhead under the same constraint on the overall power consumption...|$|R
50|$|Catapult C {{supports}} both algorithmic and <b>control</b> <b>logic</b> synthesis.|$|R
40|$|Abstract. A design {{method of}} data {{acquisition}} and data storage buffer <b>control</b> <b>logic</b> in the quadrupole mass spectrometry was proposed. The <b>control</b> <b>logic</b> builds a high-speed built-in FIFO memory on FPGA to buffer of mass spectrometry data. FIFO storage capacity of 16 K bytes and simultaneous {{reading and writing}} speed of 60 Mbps were realized by <b>control</b> <b>logic</b> system. The data acquisition and storage buffer system had been used on the Quadrupole Mass Spectrometry and Quadrupole Ion Trap Mass Spectrometry to reduce the single scanning time of MS analysis. A higher sensitivity had been obtained by increasing the scanning rate of mass spectrometer...|$|R
40|$|This study {{examines}} {{the performance and}} adaptability of Artificial Neural Network (ANN) -based thermal control strategies for diverse thermal properties of building envelope conditions applied to residential buildings. The thermal performance using two non-ANN-based <b>control</b> <b>logics</b> and two predictive ANN-based <b>control</b> <b>logics</b> was numerically tested using simulation software after validation. The performance tests were conducted for a two-story single-family house for various envelope insulation levels and window-to-wall ratios on the envelopes. The percentages of the period within the targeted ranges for air temperature, humidity and PMV, and the magnitudes of the overshoots and undershoots outside of the targeted comfort range were analyzed for each <b>control</b> <b>logic</b> scheme. The results revealed that the two predictive <b>control</b> <b>logics</b> that employed thermal predictions of the ANN models achieved longer periods of thermal comfort than the non-ANN-based models {{in terms of the}} comfort periods and the reductions of the magnitudes of the overshoots and undershoots. The ANN-based models proved their adaptability through accurate control of the thermal conditions in buildings with various architectural variables. The ANN-based predictive control methods demonstrated their potential to create more comfortable thermal conditions in single-family homes compared to non-ANN based <b>control</b> <b>logics...</b>|$|R
40|$|A logic {{designed}} {{for the purpose of}} representing and reasoning about access policies is called an access <b>control</b> <b>logic.</b> One of the objectives of access <b>control</b> <b>logics</b> is to understand the semantics meaning and proof theory of domain-specific connectives like A says s and A cansay f from SecPAL [3]. Other motives for studying access contro...|$|R
50|$|Logic {{analysis}} {{evaluates the}} equations, algorithms, and <b>control</b> <b>logic</b> {{of the software}} design.|$|R
5000|$|... #Caption: Navigation system (RNS-E) with MMI <b>control</b> <b>logic</b> in an Audi A3 8P ...|$|R
50|$|DDC {{is often}} used to control the HVAC (heating, ventilating, and air conditioning) devices such as valves via {{microprocessors}} using software to perform the <b>control</b> <b>logic.</b> Such systems receive analog and digital inputs from the sensors and devices installed in the HVAC system and, according to the <b>control</b> <b>logic,</b> provide analog or digital outputs to control the HVAC system devices.|$|R
40|$|Brushless {{tachometer}} generates signals {{for moving}} large and varying loads precisely. Stepper waveform generator sends short {{sequence of pulses}} to instruct <b>control</b> <b>logic</b> circuit to perform its function-that is, to select proper windings and directions of excitation to drive and damp motor. <b>Control</b> <b>logic</b> circuit bases decisions on following logic signals, derived from tachometer: rate direction, rate threshold, and position...|$|R
40|$|<b>Control</b> <b>logic</b> and the on-body radio {{transmitter}} is investigated. The <b>control</b> <b>logic</b> capability and studied methods for implementing the on-body {{portion of the}} logic in a small package are improved. A small low power, on-body transmitter was designed, developed, and tested with a wrist-strap antenna to extend the one-way communication system developed during Phase 1 to a two-way communication system...|$|R
40|$|We {{intend to}} study the impact of <b>control</b> <b>logic</b> on the RT-kvel design space of a class of digital systems. Such an enhance-ment of the design space is more {{accurate}} than several prm”-OUSIYreported approaches since <b>control</b> <b>logic</b> has a sz”gnijicant impact on the total cost and petiormance of the circuit. We present a datapath synthesis j?amework that is hierarchical in nature; and thus allows the <b>control</b> <b>logic</b> overheads to be factored in hierarchically as well. We introduce hierarchy into the system dynamically by identifying regularity; as such, the proposed method is specijc to the sa”gnallimageprocess-ing domain of application. The impact of <b>control</b> <b>logic</b> is studied with respect to two well known mo&ls of FShf’s used in hierarchical systems- the localized model (where each hierarchical sub-unit has its own controller) and the central-ized mo&l (where the FSM’S are all centrally located). We demonstrate how regukzrt”ty facilitates such a study {{through the use of}} realistic area-delay estimators that lead us to better understanding of the RT design space. ...|$|R
40|$|Automated {{design of}} {{processor}} architectures {{has traditionally been}} focused on the clocked pipeline organisation consisting of a fairly standard datapath and <b>control</b> <b>logic.</b> As the area of processor design automation is becoming increasingly inclusive of system paradigms that are heterogeneous in terms of timing, such as multiclock and asynchronous circuits, {{there is a need for}} appropriate models and associated synthesis algorithms. This paper approaches the problem of designing <b>control</b> <b>logic</b> for a processor using Conditional Partial Order Graphs (CPOGs). The new method allows composing a large set of microarchitectural algorithms (instructions) into a compact relational form, which opens way for various transformation and optimisation procedures leading to an e cient implementation of <b>control</b> <b>logic.</b> In this paper we present a CPOG-based design methodology, demonstrate its application to synthesis of <b>control</b> <b>logic</b> and datapath for an asynchronous microprocessor. Our approach is compared with synchronous and asynchronous BALSA-based designs it terms of power and performance using Altera FPGA platform...|$|R
40|$|In a VAV (variable air volume) system, the {{set point}} of the static {{pressure}} (usually measured at 213 downstream of the main supply air duct) is maintained by modulating the fan speed or inlet guide vane position. The set {{point of the}} static pressure is often set at a constant value, which is adequate to provide design flow to each room. This method consumes more fan power than necessary under partial load conditions. The fan speed or inlet guide vane can also be controlled based on the maximum damper position of the terminal boxes. This method is called air volume <b>control</b> <b>logic.</b> Under this <b>control</b> <b>logic,</b> terminal box airflow requirements are met with reduced static pressure. Fan power consumption is minimized. However, the actual system performance also depends on other factors, such as inaccurate temperature or flow sensors, faulty control valves, unbalanced loads, etc. This paper discusses the existing air volume <b>control</b> <b>logic,</b> its reliability and an improved air volume <b>control</b> <b>logic...</b>|$|R
5000|$|... 4,038,497, July 26, 1977 - Hardwired <b>Control</b> <b>Logic</b> and Automatic Path Finding Set Up and Release.|$|R
40|$|Abstract Garg and Abadi {{recently}} {{proved that}} prominent access <b>control</b> <b>logics</b> {{can be translated}} in a sound and complete way into modal logic S 4. We have previously outlined how normal multimodal logics, including monomodal logics K and S 4, can be embedded in simple type theory and we have demonstrated that the higher-order theorem prover LEO-II can automate reasoning in and about them. In this paper we combine these results and describe a sound (and complete) embedding of different access <b>control</b> <b>logics</b> in simple type theory. Employing this framework we show that the off the shelf theorem prover LEO-II {{can be applied to}} automate reasoning in and about prominent access <b>control</b> <b>logics.</b> ...|$|R
40|$|The need to {{increase}} renewable energy sources deployment and to reduce consumption of fossil fuels {{has led to the}} diffusion of small-scale DG (Distributed Generation) systems, which may be effectively integrated in micro-grids. The role of <b>control</b> <b>logic</b> in defining microgrid performances and reliability is predominant and can be improved by using advanced <b>control</b> <b>logics</b> such as the ones based on MPC (Model Predictive Control). In a previous paper, a MPC logic, based on the use of weather forecasts to improve the performances, has been applied to the analysis of power management in a domestic micro-grid system composed by: PV (Photovoltaic panels), FC (Fuel Cells) and a battery pack; in that case, the system was not affected by real uncertainties. In this paper the same system has been considered for domestic microgrid applications. The system <b>control</b> <b>logic</b> has been implemented by assuming real weather forecast as input data. DMPC and SMPC (Deterministic and Stochastic Model Predictive Control) concepts have been applied to the system and results have been compared to both MPC and to a standard RBC (Rule Based <b>Control)</b> <b>logic.</b> The impact of forecast uncertainties has been evaluated showing the advantages of a stochastic approach. In that case, the SMPC showed encouraging performances compared to standard <b>control</b> <b>logics,</b> primarily in terms of primary energy savings and downsizing potential of the power-delivering subsystems using programmable energy sources...|$|R
5000|$|... 2000US6131140 - Integrated {{cache memory}} with system <b>control</b> <b>logic</b> and {{adaptation}} of RAM bus to a cache pinout ...|$|R
40|$|A starter circuit {{particularly}} {{suitable for}} a plasma of an ion engine for a spacecraft includes a power supply having an output inductor with a tap. A switch is coupled to the tap. The switch has a control input. A pulse <b>control</b> <b>logic</b> circuit is coupled to said control input, said pulse <b>control</b> <b>logic</b> circuit <b>controlling</b> said switch to an off state to generate a high voltage discharge...|$|R
40|$|The <b>control</b> <b>logic</b> for an Orbital Maneuvering Vehicle (OMV) Simulation {{system is}} developed. In order that better {{control over the}} vehicle can be exercised, several {{modifications}} to the vehicle are suggested. The need of better position feedback leads {{to the development of}} an alternative simpler but more reliable navigation system which is also discussed. The <b>control</b> <b>logic</b> is presented in pseudocode form, and can be implemented in FORTRAN and/or MACRO II...|$|R
50|$|The {{real time}} {{simulator}} may be connected {{directly to the}} automated system's programmable controllers and computers. The model {{is used as a}} replacement for the physical equipment. Thus, the <b>control</b> <b>logic</b> and system software can be exhaustively tested in a laboratory environment instead of on the plant floor. The <b>control</b> <b>logic</b> can be stress tested under full operational loading to verify that the system will meet production requirements.|$|R
50|$|The {{model of}} the {{physical}} system is constructed separately from the <b>control</b> <b>logic</b> being tested. The {{model of the}} physical system is passive and makes no decisions. The physical model reacts to the decisions made by the <b>control</b> <b>logic</b> {{in the same manner}} as the real system would.An emulation model will operate in both emulation and simulation modes with the addition of the control strategy to the model.|$|R
40|$|Abstract—As {{business}} environments {{are rapidly}} changing, the manufacturing {{system must be}} reconfigured to adapt to various customer needs. In order {{to cope with this}} challenge, it is quintessential to test industrial <b>control</b> <b>logic</b> rapidly and easily in the design time, and monitor operational behavior in the run time of automated manufacturing system. Proposed integrated model for virtual prototyping and operational monitoring of industrial <b>control</b> <b>logic</b> is to improve limitations of current ladder programming practices and general discrete event simulation method. Each plant layout model using HMI package and object-oriented <b>control</b> <b>logic</b> model is designed independently and is executed simultaneously in integrated manner to reflect design practices of automation system in the design time. <b>Control</b> <b>logic</b> is designed and executed using UML activity diagram without considering complicated control behavior to deal with current trend of reconfigurable manufacturing. After the physical installation, layout model of virtual prototype constructed in the design time is reused for operational monitoring of system behavior during run time. Keywords—automated manufacturing system, HMI, monitoring, object-oriented, PLC, virtual prototypin...|$|R
40|$|Deadlock in multithreaded {{programs}} is {{an increasingly important}} problem as ubiquitous multicore architectures force parallelization upon an ever wider range of software. This paper presents a theoretical foundation for dynamic deadlock avoidance in concurrent programs that employ conventional mutual exclusion and synchronization primitives (e. g., multithreaded C/Pthreads programs). Beginning with control flow graphs extracted from program source code, we construct a formal model {{of the program and}} then apply Discrete Control Theory to automatically synthesize deadlockavoidance <b>control</b> <b>logic</b> that is implemented by program instrumentation. At run time, the <b>control</b> <b>logic</b> avoids deadlocks by postponing lock acquisitions. Discrete Control Theory guarantees that the program instrumented with our synthesized <b>control</b> <b>logic</b> cannot deadlock. Our method furthermore guarantees that the <b>control</b> <b>logic</b> is maximally permissive: it postpones lock acquisitions only when necessary to prevent deadlocks, and therefore permits maximal runtime concurrency. Our prototype for C/Pthreads scales to real software including Apache, OpenLDAP, and two kinds of benchmarks, automatically avoiding both injected and naturally occurring deadlocks while imposing modest runtime overheads. Categories and Subject Descriptors D. 3. 3 [Programming Languages]: Language Constructs and Features—Concurrent programmin...|$|R
