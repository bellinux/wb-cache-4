863|10000|Public
5|$|The Department of Civil Aviation {{performed}} {{tests on}} {{parts of the}} DC-4 fuel <b>system.</b> <b>Tests</b> on the engine fuel system showed that when the engine boost pump was operating, a vortex formed in the engine fuel tank. If {{a small amount of}} water was present, this vortex held the water in suspension and prevented it from entering the engine. The tests also showed that when the boost pump was turned off, the vortex dissipated and any water would soon find its way into the engine. Investigators believed this might explain why all engines were operating normally during the takeoff but at least one engine began to run roughly around the time the engine boost pumps would be turned off.|$|E
5|$|During that period, general {{relativity}} remained {{something of a}} curiosity among physical theories. It was clearly superior to Newtonian gravity, being consistent with special relativity and accounting for several effects unexplained by the Newtonian theory. Einstein himself had shown in 1915 how his theory explained the anomalous perihelion advance of the planet Mercury without any arbitrary parameters (""). Similarly, a 1919 expedition led by Eddington confirmed {{general relativity}}'s prediction for the deflection of starlight by the Sun during the total solar eclipse of May 29, 1919, making Einstein instantly famous. Yet the theory entered the mainstream of theoretical physics and astrophysics only with the developments between approximately 1960 and 1975, {{now known as the}} golden age of general relativity. Physicists began to understand the concept of a black hole, and to identify quasars as one of these objects' astrophysical manifestations. Ever more precise solar <b>system</b> <b>tests</b> confirmed the theory's predictive power, and relativistic cosmology, too, became amenable to direct observational tests.|$|E
25|$|BP-14 with {{environmental}} control <b>system</b> <b>tests,</b> Oct. 22-29, 1964, consisted of Command Module 14, Service Module 3, Launch Escape System 14, and Saturn Launch Adapters.|$|E
40|$|<b>System</b> <b>testing</b> is {{the last}} phase before the product is {{delivered}} for customer use and thus represents the last opportunity for verifying that the system functions correctly and as desired by customers. <b>System</b> <b>test</b> is time consuming in that it involves configuring and testing multiple complete, integrated systems (including hardware, operating system, and cooperating and co-existing applications) that are representative of a subset of customer environments. As a result, prioritizing the execution order of <b>system</b> <b>test</b> cases to maximize <b>system</b> <b>test</b> effectiveness would be beneficial. We are developing a statistical test case prioritization model that uses static metrics and system failure data {{with the goal of}} improving <b>system</b> <b>test</b> effectiveness. 1...|$|R
40|$|To {{ensure the}} {{reliability}} and performance of a new system, it must be verified or validated in some manner. Currently, testing is the only resonable technique available for doing this. Part of this testing process is the high level <b>system</b> <b>test.</b> <b>System</b> <b>testing</b> is considered with respect to operating systems and in particular UNIX. This consideration results {{in the development and}} presentation of a good method for performing the <b>system</b> <b>test.</b> The method includes derivations from the system specifications and ideas for management of the <b>system</b> <b>testing</b> project. Results of applying the method to the IBM System/ 9000 XENIX operating <b>system</b> <b>test</b> {{and the development of a}} UNIX test suite are presented...|$|R
40|$|A set of <b>system</b> <b>testing</b> {{standards}} {{to be used}} in the development of all C software within the NASA/PC Research and Development Project is established. Testing will be considered in two phases: the program testing phase and the <b>system</b> <b>testing</b> phase. The objective of these standards is to provide guidelines for the planning and conduct of program and software <b>system</b> <b>testing...</b>|$|R
25|$|By {{the time}} of the Montreal Protocol, it was {{realised}} that deliberate and accidental discharges during <b>system</b> <b>tests</b> and maintenance accounted for substantially larger volumes than emergency discharges, and consequently halons were brought into the treaty, albeit with many exceptions.|$|E
25|$|During {{the first}} few months of testing of the new {{signalling}} system, there had been numerous occasions of major service disruptions, lasting up to 3 hours long. In light of the re-signalling <b>system</b> <b>tests,</b> SMRT has advised commuters to plan for longer traveling time on the line.|$|E
25|$|We {{will use}} the first to obtain the {{predictions}} of Nordström's theory for the four classic solar <b>system</b> <b>tests</b> of relativistic gravitation theories (in the ambient field of an isolated spherically symmetric object), and we {{will use the}} second to compare gravitational radiation in Nordström's theory and in Einstein's general theory of relativity.|$|E
40|$|This {{research}} has explored {{the relationship between}} <b>system</b> <b>test</b> complexity and tacit knowledge. It is proposed {{as part of this}} thesis, that the process of <b>system</b> <b>testing</b> (comprising of test planning, test development, test execution, test fault analysis, test measurement, and case management), is directly affected by both complexity associated with the <b>system</b> under <b>test,</b> and also by other sources of complexity, independent of the <b>system</b> under <b>test,</b> but related to the wider process of <b>system</b> <b>testing.</b> While a certain amount of knowledge related to the <b>system</b> under <b>test</b> is inherent, tacit in nature, and therefore difficult to make explicit, it has been found that a significant amount of knowledge relating to these other sources of complexity, can indeed be made explicit. While the importance of explicit knowledge has been reinforced by this research, there has been a lack of evidence to suggest that the availability of tacit knowledge to a test team is of any less importance to the process of <b>system</b> <b>testing,</b> when operating in a traditional software development environment. The sentiment was commonly expressed by participants, that even though a considerable amount of explicit knowledge relating to the system is freely available, that a good deal of knowledge relating to the <b>system</b> under <b>test,</b> which is demanded for effective <b>system</b> <b>testing,</b> is actually tacit in nature (approximately 60 % of participants operating in a traditional development environment, and 60 % of participants operating in an agile development environment, expressed similar sentiments). To cater for the availability of tacit knowledge relating to the <b>system</b> under <b>test,</b> and indeed, both explicit and tacit knowledge required by <b>system</b> <b>testing</b> in general, an appropriate knowledge management structure needs to be in place. This would appear to be required, irrespective of the employed development methodology...|$|R
40|$|Two-volume {{edition of}} the papers of the {{symposium}} is described. It is divided into six sections - parts, materials, management, <b>system</b> <b>testing,</b> component design, and <b>system</b> <b>test.</b> Material presented focuses attention on problems created by the increased complexity of technology and long-term mission requirements...|$|R
40|$|The {{objective}} is to provide management visibility relative to the roles of simulation and propulsion <b>system</b> <b>testing</b> for future development programs through assessment of current propulsion related simulation capabilities and review of contributions from propulsion <b>system</b> <b>test</b> programs. The presentation is represented by viewgraphs...|$|R
25|$|The thermal {{protection}} system was inspected with the Shuttle Robotic Arm/Orbiter Boom Sensor System (OBSS) and the voluminous data downlinked for analysis. The orbital maneuvering system pods were inspected for tile damage or protruding tiles. The extravehicular mobility units were checked {{in addition to}} the rendezvous <b>system</b> <b>tests</b> and centerline camera installation. In preparation for the docking, the docking ring was extended.|$|E
25|$|Rails 5.1 was {{released}} on April 27, 2017, introducing JavaScript integration changes (management of JavaScript dependencies from NPM via Yarn, optional compilation of JavaScript using Webpack, and a rewrite of Rails UJS to use vanilla JavaScript instead of depending on jQuery), <b>system</b> <b>tests</b> using Capybara, encrypted secrets, parameterized mailers, direct & resolved routes, and a unified form_with helper replacing the form_tag/form_for helpers.|$|E
25|$|In June 2000, Lockheed won the Engineering and Manufacturing Development (EMD) {{contract}} {{to turn the}} design into a mobile tactical army fire unit. Flight tests of this system resumed with missile characterization and full <b>system</b> <b>tests</b> in 2006 at White Sands Missile Range, then moved to the Pacific Missile Range Facility. The Interceptor was led through development and initial production by Tory Bruno, who later became CEO of United Launch Alliance.|$|E
40|$|<b>System</b> <b>testing</b> is {{concerned}} with <b>testing</b> an entire <b>system</b> based on its specifications. In the context of object-oriented, UML development, this means that <b>system</b> <b>test</b> requirements are derived from UML analysis artifacts such as use cases, their corresponding sequence and collaboration diagrams, class diagrams, and possibly Object Constraint Language (OCL) expressions across all these artifacts. Our goal here is to support the derivation of functional <b>system</b> <b>test</b> requirements, which will be transformed into test cases, test oracles, and test drivers once we have detailed design information. In this paper, we describe a methodology in a practical way and illustrate it with an example. In this context, we address testability and automation issues, as {{the ultimate goal is}} to fully support <b>system</b> <b>testing</b> activities with high-capability tools...|$|R
30|$|PCoE {{training}} dataset {{is used for}} <b>system</b> training whereas <b>test</b> dataset is used for <b>system</b> <b>test</b> and RUL estimation.|$|R
40|$|The {{performances}} of three existing high pressure oxygen mechanical impact <b>test</b> <b>systems</b> were <b>tested</b> at two different <b>test</b> sites. The <b>systems</b> from one <b>test</b> site were fabricated {{from the same}} design drawing, whereas the <b>system</b> <b>tested</b> at the other site was of different design. Energy delivered to the test sample for each <b>test</b> <b>system</b> was evaluated and compared. Results were compared to the reaction rates obtained...|$|R
25|$|Jill Stein, internist at Simmons College Health Center and {{resident}} of Lexington, Massachusetts was the Green Party nominee for Governor. She campaigned against requiring that students pass the Massachusetts Comprehensive Assessment <b>System</b> <b>tests</b> to graduate high school, and {{in support of}} clean air and bilingual education. After being excluded from the first debate, Stein and Independent candidate Barbara Johnson sued the media organizers of the debate. Middlesex Superior Court Judge Linda Giles ruled against Stein and Johnson, stating that the state's campaign finance laws {{do not apply to}} the press organizing political debates and that the invitations to Shannon O'Brien and Mitt Romney did not constitute a campaign contribution.|$|E
25|$|Robonaut2 was {{initially}} {{designed as a}} prototype to be used on Earth. For its journey to the ISS, R2 received a few upgrades. Outer skin materials were exchanged to meet the ISS's strict flammability requirements. Shielding was added to reduce electromagnetic interference and onboard processors were upgraded to increase R2's radiation tolerance. The original fans were replaced with quieter ones to accommodate the station's restrictive noise environment, and the power system was rewired to run on the station's direct current <b>system.</b> <b>Tests</b> were conducted {{to make sure the}} robot could both endure the harsh conditions in space and exist in it without doing damage. R2 also underwent vibration testing that simulated the conditions it would experience during its launch onboard Discovery.|$|E
25|$|Tests {{of general}} {{relativity}} on the largest scales are not nearly so stringent as Solar <b>System</b> <b>tests.</b> The earliest such test was prediction and discovery of {{the expansion of the}} universe. In 1922, Alexander Friedmann found that Einstein equations have non-stationary solutions (even {{in the presence of the}} cosmological constant). In 1927, Georges Lemaître showed that static solutions of the Einstein equations, which are possible in the presence of the cosmological constant, are unstable, and therefore the static universe envisioned by Einstein could not exist (it must either expand or contract). Lemaître made an explicit prediction that the universe should expand. He also derived a redshift-distance relationship, which is now known as the Hubble Law. Later, in 1931, Einstein himself agreed with the results of Friedmann and Lemaître. The expansion of the universe discovered by Edwin Hubble in 1929 was then considered by many (and continues to be considered by some now) as a direct confirmation {{of general relativity}}. In the 1930s, largely due to the work of E. A. Milne, it was realised that the linear relationship between redshift and distance derives from the general assumption of uniformity and isotropy rather than specifically from general relativity. However the prediction of a non-static universe was non-trivial, indeed dramatic, and primarily motivated by general relativity.|$|E
25|$|One T-39A {{modified}} {{for electronic}} <b>systems</b> <b>testing.</b>|$|R
5000|$|Functional <b>testing</b> {{differs from}} <b>system</b> <b>testing</b> in that {{functional}} testing [...] "verifies a program by checking it against ... design document(s) or specification(s)", while <b>system</b> <b>testing</b> [...] "validates a program by checking {{it against the}} published user or system requirements" [...] (Kaner, Falk, Nguyen 1999, p. 52).|$|R
5000|$|ATEC {{completed}} a Core Engine (High Pressure <b>system</b> only) <b>test</b> in mid-2011 and recently completed Gas Generator (both High and Low Pressure <b>systems)</b> <b>testing</b> in January 2012.|$|R
2500|$|The {{last four}} lines in this table list the {{so-called}} four classic solar <b>system</b> <b>tests</b> of relativistic theories of gravitation. [...] Of the three theories {{appearing in the}} table, only general relativity is {{in agreement with the}} results of experiments and observations in the solar system. [...] Nordström's theory gives the correct result only for the Pound–Rebka experiment; not surprisingly, Newton's theory flunks all four relativistic tests.|$|E
2500|$|The radar {{operator}} {{must be able}} to optimize system settings and detect divergences between an ARPA system and reality. [...] Information obtained from radar and ARPA has to be treated with scrutiny: over reliance on these systems has sunk ships. [...] The officer must understand system performance. Examples include limitations and accuracy, tracking capabilities and limitations, and processing delays, and the use of operational warnings and <b>system</b> <b>tests.</b>|$|E
50|$|PTK Visby is the {{designation}} of the formation doing <b>system</b> <b>tests</b> and readying the ships for active service within the Swedish Navy. The formation is under the 3rd Naval Warfare Flotilla but takes its orders from the FMV. The <b>system</b> <b>tests</b> are taking a long time partly because of funding issues {{and partly because of}} the novel and cutting-edge nature of the platform.|$|E
50|$|IELTS - International English Language <b>Testing</b> <b>System</b> <b>test.</b>|$|R
5000|$|Digital {{electronics}} and embedded <b>system</b> <b>testing</b> and debugging ...|$|R
5000|$|Photosynthesis Experiment and <b>System</b> <b>Testing</b> and Operation (PESTO) ...|$|R
50|$|Dynamic {{analysis}} {{is in contrast}} to static testing. Unit tests, integration tests, <b>system</b> <b>tests</b> and acceptance tests use dynamic testing.|$|E
5000|$|... 1963: Apollo launch escape <b>system</b> <b>tests</b> {{with the}} Little Joe II began at White Sands Launch Complex 36 (ended 1966).|$|E
50|$|BP-14 with {{environmental}} control <b>system</b> <b>tests,</b> Oct. 22-29, 1964, consisted of Command Module 14, Service Module 3, Launch Escape System 14, and Saturn Launch Adapters.|$|E
5000|$|... #Subtitle level 2: Minuteman Inertial Guidance <b>System</b> <b>testing</b> ...|$|R
50|$|The test {{strategy}} {{describes the}} test level to be performed. There are primarily {{three levels of}} testing: unit testing, integration <b>testing,</b> and <b>system</b> <b>testing.</b> In most software development organizations, the developers are responsible for unit testing. Individual testers or test teams are responsible for integration and <b>system</b> <b>testing.</b>|$|R
50|$|<b>System</b> <b>testing</b> of {{software}} or hardware is testing conducted on a complete, integrated system {{to evaluate the}} system's compliance with its specified requirements. <b>System</b> <b>testing</b> falls {{within the scope of}} black-box testing, and as such, should require no knowledge of the inner design of the code or logic.|$|R
