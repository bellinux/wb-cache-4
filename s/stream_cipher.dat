1371|637|Public
25|$|In cryptography, a <b>stream</b> <b>cipher</b> is a {{symmetric}} key cipher where plaintext bits are {{combined with a}} pseudorandom cipher bit stream, typically by an exclusive-or (xor) operation. In a <b>stream</b> <b>cipher</b> the plaintext digits are encrypted one at a time, and the transformation of successive digits varies during the encryption. Also known as a state cipher, the <b>stream</b> <b>cipher</b> was invented in 1917 by Gilbert Sandford Vernam at Bell Labs.|$|E
25|$|Because RC4 is a <b>stream</b> <b>cipher,</b> {{it is more}} {{malleable}} than common block ciphers. If {{not used}} together with a strong message authentication code (MAC), then encryption is vulnerable to a bit-flipping attack. The cipher is also vulnerable to a <b>stream</b> <b>cipher</b> attack if not implemented correctly.|$|E
25|$|Symmetric key ciphers are {{implemented}} as either block ciphers or stream ciphers. A block cipher enciphers input in blocks of plaintext {{as opposed to}} individual characters, the input form used by a <b>stream</b> <b>cipher.</b>|$|E
50|$|Table compares {{implementations}} of {{the various}} <b>stream</b> <b>ciphers.</b> <b>Stream</b> <b>ciphers</b> are defined as using plain text digits that are combined with a pseudorandom <b>cipher</b> digit <b>stream.</b> <b>Stream</b> <b>ciphers</b> are typically faster than block ciphers and may have lower hardware complexity, but may be more susceptible to attacks.|$|R
50|$|In <b>stream</b> <b>ciphers,</b> IVs {{are loaded}} into the keyed {{internal}} secret state of the cipher, after which a number of cipher rounds are executed prior to releasing the first bit of output. For performance reasons, designers of <b>stream</b> <b>ciphers</b> try to keep that number of rounds as small as possible, but because determining the minimal secure number of rounds for <b>stream</b> <b>ciphers</b> is not a trivial task, and considering other issues such as entropy loss, unique to each cipher construction, related-IVs and other IV-related attacks are a known security issue for <b>stream</b> <b>ciphers,</b> which makes IV loading in <b>stream</b> <b>ciphers</b> a serious concern and a subject of ongoing research.|$|R
40|$|<b>Stream</b> <b>ciphers</b> {{have the}} {{reputation}} {{to be very}} efficient when implemented in hardware, much more efficient than any block cipher. However, although plenty of papers and books claim it, few results of hardware implementations of <b>stream</b> <b>ciphers</b> are available. In this paper, we provide FPGA implementation results of recent <b>stream</b> <b>ciphers</b> in order to evaluate their actual hardware efficiency. In addition, we compare these results with those of standard block ciphers (AES, 3 DES, Rijndael, Misty 1, [...] .). The selected <b>stream</b> <b>ciphers</b> are LILI-II, Helix and SNOW 2. 0 and the implementation platform is a Virtex-II FPGA from Xilinx. On {{the basis of these}} results, it may be argued that while present <b>stream</b> <b>ciphers</b> allow us to obtain e±cient implementations, they are not overwhelm- ingly more efficient than block ciphers. In general, their efficiency is compara- ble. However, <b>stream</b> <b>ciphers</b> are made of arguably low cost primitives which could provide really compact designs if correctly combined together...|$|R
25|$|RC4 as a <b>stream</b> <b>cipher</b> {{is immune}} to BEAST attack. Therefore, RC4 was widely {{used as a}} way to {{mitigate}} BEAST attack on the server side. However, in 2013, researchers found more weaknesses in RC4. Thereafter enabling RC4 on server side was no longer recommended.|$|E
25|$|An {{analysis}} of version 2 of the DRM scheme in Windows Media Audio revealed {{that it was}} {{using a combination of}} elliptic curve cryptography key exchange, the DES block cipher, a custom block cipher dubbed MultiSwap (for MACs only), the RC4 <b>stream</b> <b>cipher,</b> and the SHA-1 hashing function.|$|E
25|$|In cryptography, RC4 (Rivest Cipher 4 {{also known}} as ARC4 or ARCFOUR meaning Alleged RC4, see below) is a <b>stream</b> <b>cipher.</b> While {{remarkable}} for its simplicity and speed in software, multiple vulnerabilities have been discovered in RC4, rendering it insecure. It is especially vulnerable when {{the beginning of the}} output keystream is not discarded, or when nonrandom or related keys are used. Particularly problematic uses of RC4 have led to very insecure protocols such as WEP.|$|E
40|$|Abstract—In {{this paper}} the FPGA {{implementations}} for four <b>stream</b> <b>ciphers</b> are presented. The two <b>stream</b> <b>ciphers,</b> MUGI and SNOW 2. 0 are recently {{adopted by the}} International Organization for Standardization ISO/IEC 18033 - 4 : 2005 standard. The other two <b>stream</b> <b>ciphers,</b> MICKEY 128 and TRIVIUM have been submitted and are under consideration for the eSTREAM, the ECRYPT (European Network of Excellence for Cryptology) Stream Ciphe...|$|R
50|$|Symmetric key ciphers can {{be divided}} into block <b>ciphers</b> and <b>stream</b> <b>ciphers.</b> Block ciphers operate on fixed-length groups of bits, called blocks, with an unvarying transformation. <b>Stream</b> <b>ciphers</b> encrypt {{plaintext}} digits one at a time on a continuous stream of data and the transformation of successive digits varies during the encryption process.|$|R
40|$|Abstract- To {{enhance the}} {{security}} and reliability of the widely-used <b>stream</b> <b>ciphers,</b> a 2 -D and a 3 -D mesh-knight Algorithm Based Fault Tolerant (ABFT) schemes for <b>stream</b> <b>ciphers</b> are developed which can be universally applied to RC 4 and other <b>stream</b> <b>ciphers.</b> Based on the ready-made arithmetic unit in <b>stream</b> <b>ciphers,</b> the proposed 2 -D ABFT scheme is able to detect and correct any simple error, and the 3 -D mesh-knight ABFT scheme is capable of detecting and correcting up to three errors in an n 2 -data matrix with liner computation and bandwidth overhead. The proposed schemes provide one-to-one mapping between data index and check sum group so that error can be located and recovered by easier logic and simple operations...|$|R
25|$|In 2005, Andreas Klein {{presented}} {{an analysis of}} the RC4 <b>stream</b> <b>cipher</b> showing more correlations between the RC4 keystream and the key. Erik Tews, Ralf-Philipp Weinmann, and Andrei Pychkine used this analysis to create aircrack-ptw, a tool which cracks 104-bit RC4 used in 128-bit WEP in under a minute. Whereas the Fluhrer, Mantin, and Shamir attack used around 10 million messages, aircrack-ptw can break 104-bit keys in 40,000 frames with 50% probability, or in 85,000 frames with 95% probability.|$|E
25|$|A WMA file is in most {{circumstances}} {{contained in}} the Advanced Systems Format (ASF), a proprietary Microsoft container format for digital audio or digital video. The ASF container format specifies how metadata about the file is to be encoded, similar to the ID3 tags used by MP3 files. Metadata may include song name, track number, artist name, and also audio normalization values. This container can optionally support digital rights management (DRM) {{using a combination of}} elliptic curve cryptography key exchange, DES block cipher, a custom block cipher, RC4 <b>stream</b> <b>cipher</b> and the SHA-1 hashing function. See Windows Media DRM for further information.|$|E
25|$|A GSM {{transmission}} is organised as sequences of bursts. In a typical channel {{and in one}} direction, one burst is sent every 4.615 milliseconds and contains 114 bits available for information. A5/1 is used to produce for each burst a 114 bit sequence of keystream which is XORed with the 114 bits prior to modulation. A5/1 is initialised using a 64-bit key together with a publicly known 22-bit frame number. Older fielded GSM implementations using Comp128v1 for key generation, had 10 of the key bits fixed at zero, resulting in an effective key length of 54 bits. This weakness was rectified {{with the introduction of}} Comp128v2 which yields proper 64 bits keys. When operating in GPRS / EDGE mode, higher bandwidth radio modulation allows for larger 348 bits frames, and A5/3 is then used in a <b>stream</b> <b>cipher</b> mode to maintain confidentiality.|$|E
40|$|Abstract. In {{this paper}} we discuss power {{analysis}} of <b>stream</b> <b>ciphers.</b> In such attacks, one measures the power consumption of the algorithm and tries to extract the secret key from these measurements. Power at-tacks have been mounted against block ciphers and public key algorithms but not yet against <b>stream</b> <b>ciphers.</b> In this paper we give a theoretical framework that shows that power analysis of <b>stream</b> <b>ciphers</b> with resyn-chronization mechanism is feasible and describe possible attack method-ologies against A 5 / 1 and E 0. ...|$|R
40|$|Abstract. This paper {{describes}} some {{attacks on}} word-oriented <b>stream</b> <b>ciphers</b> that use a linear feedback shift register (LFSR) and a non-linear filter. These attacks rely on exploiting linear relationships corresponding to multiples {{of the connection}} polynomial that define the LFSR. Keywords: <b>stream</b> <b>ciphers,</b> cryptanalysis, SOBER, t-class, SSC-II. ...|$|R
50|$|Design and {{implementation}} of self synchronizing <b>stream</b> <b>ciphers.</b>|$|R
25|$|Without the use {{of these}} machines, the Allies would have been {{deprived}} of the very valuable intelligence that was obtained from reading the vast quantity of encrypted high-level telegraphic messages between the German High Command (OKW) and their army commands throughout occupied Europe. Details of their existence, design, and use were kept secret well into the 1970s. Winston Churchill personally issued an order for their destruction into pieces no larger than a man's hand, to keep secret that the British were capable of cracking Lorenz SZ cyphers (from German rotor <b>stream</b> <b>cipher</b> machines) during the oncoming cold war. Two of the machines were transferred to the newly formed GCHQ and the others were destroyed. As a result, the machines were not included in many histories of computing. A reconstructed working copy of one of the Colossus machines is now on display at Bletchley Park.|$|E
2500|$|Addition of the ChaCha20 <b>stream</b> <b>cipher</b> {{with the}} Poly1305 [...] message {{authentication}} code ...|$|E
2500|$|A5/1 is a <b>stream</b> <b>cipher</b> used {{to provide}} over-the-air {{communication}} privacy in the GSM cellular telephone standard. [...] It is one of seven algorithms which were specified for GSM use. It was initially kept secret, but became public knowledge through leaks and reverse engineering. A number of serious weaknesses in the cipher have been identified.|$|E
40|$|The <b>stream</b> <b>ciphers</b> are an {{important}} tool for providing information security in the present communication and computer networks. Due to this reason our paper describes a multicore computer system for design of <b>stream</b> <b>ciphers</b> based on the so - named random feedback shift registers (RFSRs). The interest to this theme is inspired by the following facts. First, the RFSRs are a relatively new type of <b>stream</b> <b>ciphers</b> which demonstrate a significant enhancement of the crypto - resistance in a comparison with the classical <b>stream</b> <b>ciphers.</b> Second, the studding {{of the features of}} the RFSRs is in very initial stage. Third, the theory of the RFSRs seems to be very hard, which leads to the necessity RFSRs to be explored mainly by the means of computer models. The paper is organized as follows. First, the basics of the RFSRs are recalled. After that, our multicore computer system for design of <b>stream</b> <b>ciphers</b> based on RFSRs is presented. Finally, the advantages and possible areas of application of the computer system are discussed. ...|$|R
50|$|In modern cryptography, self-synchronizing <b>stream</b> <b>ciphers</b> are autokey ciphers.|$|R
5000|$|... #Subtitle level 2: Babbage-and-Golic {{tradeoff}} {{attack on}} <b>stream</b> <b>ciphers</b> ...|$|R
2500|$|It is noteworthy, however, that RC4, being a <b>stream</b> <b>cipher,</b> was for {{a period}} of time the only common cipher that was immune to the 2011 BEAST attack on TLS 1.0. [...] The attack {{exploits}} a known weakness in the way cipher block chaining mode is used with all of the other ciphers supported by TLS 1.0, which are all block ciphers.|$|E
2500|$|RC4 {{generates a}} {{pseudorandom}} stream of bits (a keystream). As with any <b>stream</b> <b>cipher,</b> {{these can be}} used for encryption by combining it with the plaintext using bit-wise exclusive-or; decryption is performed the same way (since exclusive-or with given data is an involution). (This is similar to the Vernam cipher except that generated pseudorandom bits, rather than a prepared stream, are used.) To generate the keystream, the cipher makes use of a secret internal state which consists of two parts: ...|$|E
2500|$|Stream ciphers, in {{contrast}} to the 'block' type, create an arbitrarily long stream of key material, which is combined with the plaintext bit-by-bit or character-by-character, somewhat like the one-time pad. In a <b>stream</b> <b>cipher,</b> the output stream is created based on a hidden internal state that changes as the cipher operates. That internal state is initially set up using the secret key material. RC4 is a widely used stream cipher; see [...] Block ciphers can be used as stream ciphers; see Block cipher modes of operation.|$|E
5000|$|... #Subtitle level 2: Linear {{feedback}} shift register-based <b>stream</b> <b>ciphers</b> ...|$|R
50|$|Symmetric-key {{encryption}} can {{use either}} <b>stream</b> <b>ciphers</b> or block ciphers.|$|R
40|$|Chaotic and {{classical}} (binary) <b>stream</b> <b>ciphers</b> are compared {{with respect to}} their cryptographical properties. Possible synchronization schemes, algebraic and analytical properties as well as design and implementation aspects are discussed. For two example classes with similar system structures it is shown that chaotic <b>stream</b> <b>ciphers</b> can achieve a higher level of complexity than classical binary systems due to the algebraic properties of the system structure. 1. INTRODUCTION In recent years applications of chaotic systems in communications and cryptography have attracted much attention. Several methods for hiding information in broadband signals, such as chaotic masking [1] and the inverse system approach [2], have been developed. From the cryptographical point of view realizations of these principles might be considered as asymptotically self-synchronizing or as dead-beat self-synchronizing <b>stream</b> <b>ciphers.</b> The aim {{of this paper is to}} compare chaotic {{and classical}} <b>stream</b> <b>ciphers.</b> First, [...] ...|$|R
2500|$|Unlike {{a modern}} <b>stream</b> <b>cipher</b> (such {{as those in}} eSTREAM), RC4 does not take a {{separate}} nonce alongside the key. [...] This means that if a single long-term key {{is to be used}} to securely encrypt multiple streams, the protocol must specify how to combine the nonce and the long-term key to generate the stream key for RC4. [...] One approach to addressing this is to generate a [...] "fresh" [...] RC4 key by hashing a long-term key with a nonce. However, many applications that use RC4 simply concatenate key and nonce; RC4's weak key schedule then gives rise to related key attacks, like the Fluhrer, Mantin and Shamir attack (which is famous for breaking the WEP standard).|$|E
50|$|The BEAR and LION block ciphers {{were invented}} by Ross Anderson and Eli Biham by {{combining}} a <b>stream</b> <b>cipher</b> and a cryptographic hash function. The algorithms use {{a very large}} variable block size, {{on the order of}} 213 to 223 bits or more. Both are 3 round generalized (alternating) Feistel ciphers, using the hash function and the <b>stream</b> <b>cipher</b> as round functions. BEAR uses the hash function twice with independent keys, and the <b>stream</b> <b>cipher</b> once. LION uses the <b>stream</b> <b>cipher</b> twice and the hash function once. The inventors proved that an attack on either BEAR or LION that recovers the key would break both the <b>stream</b> <b>cipher</b> and the hash.|$|E
50|$|The {{primitive}} can be {{used both}} as a hash function and a <b>stream</b> <b>cipher.</b> The <b>stream</b> <b>cipher</b> uses a 256-bit key {{and the performance of}} the cipher is very good reaching 2 cycles per byte.|$|E
40|$|In 1980 Hellman {{introduced}} a general technique for breaking arbitrary block ciphers with N possible keys in time T and memory M related by the tradeoff curve TM 2 = N 2 for 1 T N. Recently, Babbage and Golic {{pointed out that}} a different TM = N tradeoff attack for 1 T D is applicable to <b>stream</b> <b>ciphers,</b> where D {{is the amount of}} output data available to the attacker. In this paper we show that {{a combination of the two}} approaches has an improved time/memory/data tradeoff for <b>stream</b> <b>ciphers</b> of the form TM 2 D 2 = N 2 for any D 2 T N. In addition, we show that <b>stream</b> <b>ciphers</b> with low sampling resistance have tradeoff attacks with fewer table lookups and a wider choice of parameters. Keywords: Cryptanalysis, <b>stream</b> <b>ciphers,</b> time/memory tradeoff attacks. ...|$|R
40|$|Abstract. In {{this paper}} {{we present a}} general {{framework}} {{for the application of}} the ideas of differential cryptanalysis to <b>stream</b> <b>ciphers.</b> We demonstrate that some differences in the key (or the initial state or the plaintext) are likely to cause predicted differences in the key stream or in the internal state. These stream differences can then be used to analyze the internal state of the cipher and retrieve it efficiently. We apply our proposed ideas to <b>stream</b> <b>ciphers</b> of various designs, e. g., regularly clocked LFSRs, irregularly clocked LFSRs such as A 5 / 1, and permutation-based <b>stream</b> <b>ciphers</b> such as RC 4...|$|R
40|$|Feedback with Carry Shift Registers (FCSRs) are a {{promising}} alternative to LFSRs {{in the design}} of <b>stream</b> <b>ciphers.</b> The previous constructions based on FCSRs were dedicated to hardware applications [3]. In this paper, we will describe X-FCSR a family of software oriented <b>stream</b> <b>ciphers</b> using FCSRs. The core of the system is composed of two 256 -bits FCSRs. We propose two versions: X-FCSR- 128 and X-FCSR- 256 which output respectively 128 and 256 bits at each iteration. We study the resistance of our design against several cryptanalyses. These <b>stream</b> <b>ciphers</b> achieve a high throughput and are suitable for software applications (6. 3 cycles/byte) ...|$|R
