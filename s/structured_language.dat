156|5014|Public
25|$|Syntax {{highlighting}} is {{a feature}} of text editors that are used for programming, scripting, or markup languages, such as HTML. The feature displays text, especially source code, in different colors and fonts according to the category of terms. This feature facilitates writing in a <b>structured</b> <b>language</b> such as a programming language or a markup language as both structures and syntax errors are visually distinct. Highlighting {{does not affect the}} meaning of the text itself; it is intended only for human readers.|$|E
2500|$|For [...] (1984), {{director}} Leonard Nimoy and writer-producer Harve Bennett {{wanted the}} Klingons to speak a <b>structured</b> <b>language</b> instead of random gibberish, and so commissioned a full language, {{based on the}} phrases Doohan had originated, from Marc Okrand, who had earlier constructed four lines of Vulcan dialogue for [...]|$|E
2500|$|XML was {{compiled}} by {{a working group}} of eleven members, supported by a (roughly) 150-member Interest Group. Technical debate {{took place on the}} Interest Group mailing list and issues were resolved by consensus or, when that failed, majority vote of the Working Group. A record of design decisions and their rationales {{was compiled}} by Michael Sperberg-McQueen on December 4, 1997. James Clark served as Technical Lead of the Working Group, notably contributing the empty-element [...] "<empty/>" [...] syntax and the name [...] "XML". Other names that had been put forward for consideration included [...] "MAGMA" [...] (Minimal Architecture for Generalized Markup Applications), [...] "SLIM" [...] (<b>Structured</b> <b>Language</b> for Internet Markup) and [...] "MGML" [...] (Minimal Generalized Markup Language). The co-editors of the specification were originally Tim Bray and Michael Sperberg-McQueen. Halfway through the project Bray accepted a consulting engagement with Netscape, provoking vociferous protests from Microsoft. Bray was temporarily asked to resign the editorship. This led to intense dispute in the Working Group, eventually solved by the appointment of Microsoft's Jean Paoli as a third co-editor.|$|E
40|$|In this paper, {{we propose}} a new {{language}} model, namely, a dependency <b>structure</b> <b>language</b> model, for information retrieval {{to compensate for the}} weakness of bigram and trigram language models. The dependency <b>structure</b> <b>language</b> model is based on the Chow Expansion theory and the dependency parse tree generated by a dependency parser. So, longdistance dependencies can be handled by the dependency <b>structure</b> <b>language</b> model. We carried out some experiments to verify the proposed model. In our experiments, the dependency structure model gives a better performance than recently proposed language models and the Okapi BM 25 method, and the dependency structure is more effective than bigram in language modeling for information retrieval. Key words <b>Language</b> model, dependency <b>structure</b> <b>language</b> model, dependency parse tree, Chow Expansion, long-distance dependencies 1...|$|R
5000|$|... {{hypermedia}} document <b>structuring</b> <b>language</b> {{and application}} resources ...|$|R
50|$|Most free-form <b>languages</b> {{are also}} <b>structured</b> {{programming}} <b>languages,</b> which is sometimes thought {{to go along}} with the free-form syntax: Earlier imperative programming languages such as Fortran 77 used particular columns for line numbers, which many <b>structured</b> <b>languages</b> don't use or need.|$|R
50|$|The {{mission of}} The International Multisensory <b>Structured</b> <b>Language</b> Education Council (IMSLEC) is to {{accredit}} quality training courses for the professional preparation of multisensory <b>structured</b> <b>language</b> education specialists.|$|E
5000|$|Advocating high {{professional}} {{standards in the}} preparation of Multisensory <b>Structured</b> <b>Language</b> specialists - clinicians and teachers.|$|E
50|$|The Middle School Program (MSP, ages 11-13) offers <b>structured</b> <b>language</b> {{learning}} in English as an Additional Language, French, and Italian, and a Musical Theater course. MSP {{is designed to}} challenge students academically and socially and includes a variety of sports, activities, and travel opportunities.|$|E
5000|$|Language and experience. In: Dynamic <b>structure.</b> <b>Language</b> as an open system. Prague : Litteraria pragensia, 2007. p. 27-35[...]|$|R
5000|$|Ahoy! called PROMAL for the Commodore 64 [...] "one of the best" [...] <b>structured</b> <b>languages.</b> It {{concluded}} [...] "As {{an introduction}} to <b>structured</b> programming <b>languages</b> and {{as an alternative to}} BASIC, PROMAL is well worth the time needed to learn it and the $49.95 to purchase it".|$|R
5000|$|<b>Language</b> <b>Structure</b> and <b>Language</b> Dynamics in South Asia (Select {{papers from}} the SALA XVIII) ...|$|R
50|$|Such avatars {{can also}} be powered by a digital {{conversation}} which provides a little more structure than those using NLP, offering the user options and clearly defined paths to an outcome. This kind of avatar {{is known as a}} <b>Structured</b> <b>Language</b> Processing or SLP Avatar.|$|E
50|$|This was a <b>structured</b> <b>language</b> {{allowing}} complex {{programs to}} be built, free from BASIC's Spaghetti code while being near {{as fast as}} compiled languages. Not only was about 10 times faster than BASIC, it also allowed easy implementation of machine code routines, if needed for a particular critical task.|$|E
50|$|The Jupiter Ace was {{the first}} of its class to use a very fast <b>structured</b> <b>language,</b> free of {{spaghetti}} code, without the need to be loaded or even bought. The language was also the first (and only) adapted to use a cassette tape recorder (without the disk/tape drives of highly priced systems).|$|E
5000|$|... "While {{the newer}} <b>structured</b> <b>languages</b> such as PASCAL are enjoying an unusual popularity, {{particularly}} in educational institutions, the workhorse language {{of scientists and}} engineers is still FORTRAN. FORTRAN can be argued for as the only truly transportable language; when going from site to site, FORTRAN is always expected to be available. Since {{this is not true}} of ALGOL, PASCAL, ADA or other <b>structured</b> <b>languages,</b> there is a good motivation for users and authors of code which may be transported to write in FORTRAN." ...|$|R
40|$|The {{concept of}} channel {{capacity}} is applicable and {{useful in the}} study of <b>languages</b> with <b>structures</b> more general than those generated by the finite state channels discussed in Information Theory. A technique has been developed in this paper whereby the channel capacity of a class of phrase <b>structure</b> <b>languages</b> can be calculated. It has been shown that certain self-embedding phrase <b>structure</b> <b>languages</b> can be described by means of a finite machine whose symbols are the transformations of the phrase structure grammar...|$|R
5000|$|The {{scope of}} ISO/IEC JTC 1/SC 34 is as follows. Standardization {{in the field}} of {{document}} <b>structures,</b> <b>languages</b> and related facilities for the description and processing of compound and hypermedia documents, including: ...|$|R
5000|$|Xu, Peng; Ahmad Emami and Frederick Jelinek (2003). [...] "Training Connectionist Models for the <b>Structured</b> <b>Language</b> Model". In Michael Collins and Mark Steedman, eds. EMNLP '03 Proceedings of the 2003 {{conference on}} Empirical methods in natural {{language}} processing. East Stroudsburg, Penn.: Association for Computational Linguistics. pp. 160-167[...] [...] (won [...] "best paper" [...] award) ...|$|E
50|$|Because it is a <b>structured</b> <b>{{language}}</b> {{based on}} XML, POSXML is {{a language that}} is constantly evolving, new commands and instructions {{can be added to}} your library at any time. Initially, the language had only two dozen basic commands to create a functional application on a POS terminal, using few resources: only the basic display (LCD), keypad, magnetic card reader and printer.|$|E
50|$|For Star Trek III: The Search for Spock (1984), {{director}} Leonard Nimoy and writer-producer Harve Bennett {{wanted the}} Klingons to speak a <b>structured</b> <b>language</b> instead of random gibberish, and so commissioned a full language, {{based on the}} phrases Doohan had originated, from Marc Okrand, who had earlier constructed four lines of Vulcan dialogue for Star Trek II: The Wrath of Khan.|$|E
50|$|The {{language}} supports subroutines and nested modules. All {{variables are}} lexically scoped at the subroutine or module level, but unlike most <b>structured</b> <b>languages,</b> ICI allows the current scope {{to be adjusted}} (Tcl also allows this, for example).|$|R
50|$|<b>Structured</b> <b>languages</b> exist {{which are}} not free-form, such as ABC, Curry, Haskell, Python and others. Many of these use some variant of the {{off-side}} rule, in which indentation, rather than keywords or braces, is used to group blocks of code.|$|R
40|$|In this paper, we {{describe}} how database instructors can teach Relational Algebra and <b>Structured</b> Query <b>Language</b> together through programming. Students write query programs consisting of sequences of Relational Algebra operations vs. <b>Structured</b> Query <b>Language</b> SELECT statements. The query programs {{can then be}} run interactively, allowing students to compare the results of Relational Algebra and equivalent <b>Structured</b> Query <b>Language</b> commands. In this way, students better understand both Relational Algebra and Structured Query Languageâ€”by writing code and watching it run...|$|R
50|$|IS-Basic {{adheres to}} the ANSI BASIC standard. It is a fully <b>structured</b> <b>language</b> whose wide {{set of control}} {{structures}} includes multi-line IF...THEN...ELSE, SELECT...CASE, DO...LOOP with WHILE and UNTIL conditions at the begin and/or end of the loop, and EXIT LOOP statement. Procedures and functions can have both reference and value parameters, and local variables. Errors and other exceptions are handled with exception handlers.|$|E
50|$|SuperPascal is a block <b>structured</b> <b>language,</b> {{with the}} same basic syntax as Pascal. A program {{consists}} of a header, global variable definitions, function or procedure definitions and a main procedure. Functions and procedures consists of blocks, where a block {{is a set of}} statements. Statements are separated by semicolons, as opposed to languages like C or Java, where they are terminated by semicolons.|$|E
50|$|The school {{continues}} to serve students from preschool through eighth grade. The preschool curriculum consists of Bible lessons, reading readiness, math, science, language Development, and socialization. At the kindergarten level adds handwriting {{and a more}} <b>structured</b> <b>language</b> arts program. From first grade through middle school, the students are presented classes in Bible, reading, social studies, math, science, and language arts.|$|E
40|$|AbstractRegular {{directed}} node-label controlled graph grammars (RDNLC grammars for short) {{originated from}} {{the need for an}} elegant mathematical description of dependence graph languages (related to trace <b>languages)</b> and event <b>structure</b> <b>languages</b> (related to Petri nets). In this framework various complexity problems concerning dependence graph <b>languages</b> and event <b>structure</b> <b>languages</b> can be reduced to complexity problems concerning RDNLC languages, i. e., the graph languages generated by RDNLC grammars. It is known that the membership problem for RDNLC languages is NP-complete. This paper investigates various natural restrictions on RDNLC languages and RDNLC grammars and their influence on the complexity of the membership problem. In particular, it is demonstrated that these restrictions lead to logarithmic space recognition algorithms...|$|R
50|$|HyTime (Hypermedia/Time-based <b>Structuring</b> <b>Language)</b> is a markup {{language}} that is an application of SGML. HyTime defines a set of hypertext-oriented element types that, in effect, supplement SGML and allow SGML document authors to build hypertext and multimedia presentations in a standardized way.|$|R
5000|$|Scheme {{inherits}} its {{block structure}} from earlier block <b>structured</b> <b>languages,</b> particularly ALGOL. In Scheme, blocks are implemented by three binding constructs: , [...] and [...] For instance, the following construct creates a block {{in which a}} symbol called [...] is bound to the number 10: ...|$|R
50|$|Its {{stronger}} {{appeal was}} both delivering a <b>structured</b> <b>language</b> allowed complex programs to be built, free from BASIC's Spaghetti code, and being nearly {{as fast as}} the compiled languages loaded by more expensive computers. Forth programs tend to be more memory-efficient than the bigger programs; as they become bigger, they reuse more previously-defined code. Its starting base memory was equivalent to 2kB up to 4kB in a more common system.|$|E
50|$|Syntax {{highlighting}} is {{a feature}} of text editors that are used for programming, scripting, or markup languages, such as HTML. The feature displays text, especially source code, in different colors and fonts according to the category of terms. This feature facilitates writing in a <b>structured</b> <b>language</b> such as a programming language or a markup language as both structures and syntax errors are visually distinct. Highlighting {{does not affect the}} meaning of the text itself; it is intended only for human readers.|$|E
50|$|Concordion {{specifications}} {{are written}} in Markdown, HTML or Excel and then instrumented with special links, attributes or comments respectively. When the corresponding test fixture class is run, Concordion interprets the instrumentation to execute the test. Rather than forcing product owners to specify requirements in a specially <b>structured</b> <b>language,</b> Concordion lets you write them in normal language using paragraphs, tables and proper punctuation. This makes the specifications much more natural to read and write, and helps everyone to understand and agree about what a feature is supposed to do.|$|E
50|$|SUPRA for SQL (<b>structured</b> query <b>language)</b> (1989).|$|R
2500|$|Scheme {{inherits}} its {{block structure}} from earlier block <b>structured</b> <b>languages,</b> particularly ALGOL. [...] In Scheme, blocks are implemented by three binding constructs: let, let* and letrec. [...] For instance, the following construct creates a block {{in which a}} symbol called var is bound to the number 10: ...|$|R
50|$|Lapis {{includes}} a template vocabulary to assist editing {{several kinds of}} <b>structured</b> <b>languages.</b> One such language is HTML. Lapis {{includes a}} Web browser view that allows its multiple edit feature to work on web pages in a WYSIWYG way, through automatic matching of the underlying HTML tags.|$|R
