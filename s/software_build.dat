110|900|Public
2500|$|Some {{people who}} use {{simulator}} software, especially flight simulator <b>software,</b> <b>build</b> their own simulator at home. Some people—to further the realism of their homemade simulator—buy used cards and racks that run the same software used by the original machine. [...] While this involves solving the problem of matching hardware and software—and the problem that hundreds of cards plug into many different racks—many still find that solving these problems is well worthwhile. Some are so serious about realistic simulation that they will buy real aircraft parts, like complete nose sections of written-off aircraft, at aircraft boneyards. This permits people to simulate a hobby that {{they are unable to}} pursue in real life.|$|E
2500|$|Rage was {{originally}} intended to have a 'Teen' rating, but ended up receiving an 'M' instead. The Windows PC and Xbox 360 versions ship on three dual-layer DVD discs, while the PlayStation 3 version ships on one Blu-ray Disc. John Carmack has revealed that an uncompressed <b>software</b> <b>build</b> of Rage is one terabyte in size. The PS3, Windows and OS X versions use OpenGL as the graphics API. While a Linux version is speculated, {{there has been no}} confirmation of an official build. Timothee Besset had stated that he would try to make GNU/Linux builds for Rage much as he had done in the past, and was expected sometime in 2012 but he resigned his position at id Software. John Carmack has since revealed on Twitter that there are [...] "no plans for a native Linux client". However, the game is playable on GNU/Linux via the Wine compatibility layer.|$|E
5000|$|Buildout - <b>software</b> <b>build</b> tool {{designed}} to handle Python package dependencies ...|$|E
5000|$|... • Full {{development}} of AESA electronic warfare capability remains deferred to later <b>software</b> <b>builds.</b>|$|R
50|$|BuildIT {{is a free}} Windows GUI {{software}} product that allows <b>software</b> developers, <b>build</b> coordinators or managers to create an automated, repeatable process for <b>software</b> <b>builds.</b> It has built-in support for integrating various development tools into the build process. Projects are stored as XML to facilitate storage in version control systems.|$|R
50|$|BuildIT {{can also}} be used to {{automate}} any sequence of tasks and not just for consistent <b>software</b> <b>builds,</b> but for anything that is repetitive like a frequent backup.|$|R
50|$|JFugue {{has been}} used to play music when a <b>software</b> <b>build</b> fails or succeeds.|$|E
50|$|Makefiles {{originated}} on Unix-like {{systems and}} are still a primary <b>software</b> <b>build</b> mechanism in such environments.|$|E
50|$|The <b>software</b> <b>build</b> tool CMake {{switched}} from a custom markup language to reStructuredText in version 3.0 for its documentation.|$|E
50|$|Visual <b>Build</b> is GUI <b>software</b> for Windows {{that enables}} <b>software</b> {{developers}} and <b>build</b> masters {{to create an}} automated, repeatable process for <b>software</b> <b>builds.</b> It has built-in support for integrating various development tools into the build process. Projects are stored as XML to facilitate storage in version control systems.|$|R
50|$|All products, {{that are}} {{produced}} according to such quality management systems, {{can refer to}} a specific DMR {{that was used to}} produce it. The DMR will specify exactly what plastic moulds to use, what <b>software</b> <b>builds</b> to install etc.|$|R
25|$|The laptop design {{specification}} goals are consumption of about 2W of power during normal use, {{far less than}} the 10W to 45W of conventional laptops. With build 656, power consumption is between 5 and 8 watts measured on G1G1 laptop. Future <b>software</b> <b>builds</b> are expected to meet the 2-watt target.|$|R
50|$|Release {{management}} {{is the process}} of managing, planning, scheduling and controlling a <b>software</b> <b>build</b> through different stages and environments; including testing and deploying software releases.|$|E
5000|$|... papaya CMS is a <b>software</b> <b>build</b> {{up from a}} very modular concept, {{to use it as}} {{framework}} for special applications beside the typical tasks of a content management system.|$|E
50|$|Build {{automation}} is {{the process}} of automating the creation of a <b>software</b> <b>build</b> and the associated processes including: compiling computer source code into binary code, packaging binary code, and running automated tests.|$|E
5000|$|Apache Archiva [...] "repository {{management}} <b>software</b> a <b>build</b> artifact repository" ...|$|R
50|$|The laptop design {{specification}} goals are consumption of about 2 W of power during normal use, {{far less than}} the 10 W to 45 W of conventional laptops. With build 656, power consumption is between 5 and 8 watts measured on G1G1 laptop. Future <b>software</b> <b>builds</b> are expected to meet the 2-watt target.|$|R
5000|$|Model-Builder: Interactive (GUI-based) <b>software</b> to <b>build,</b> simulate, {{and analyze}} ODE models.|$|R
50|$|With {{the release}} of <b>software</b> <b>build</b> 1.6 on January 8, 2014, Oxwall officially {{announced}} the support of its in-house Mobile Browser Version, optimized for performance in major mobile browsers currently available on the market.|$|E
5000|$|<b>Software</b> <b>build</b> scripts such as Unix Make, Node npm install, php composer, Twitter bower install, or Apache Ant. They need to {{know what}} files have changed so only the correct files need to be recompiled.|$|E
50|$|The build loop is {{designed}} to run as a daemon process, which periodically checks the revision control system for changes to the codebase, builds if necessary, and publishes a notice regarding {{the status of the}} <b>software</b> <b>build.</b>|$|E
40|$|We {{describe}} {{our effort}} in extending this work beyond the initial software contruction. Our area of focus is determining {{the rate of}} fault injection over a sequence of successive builds, first observing that software faults may be seen to fall into two distinct classes some faults are incorporated during the initial coding effort, while others are added in successive <b>software</b> <b>builds...</b>|$|R
40|$|The U. S. Naval Research Laboratory {{develops}} {{and maintains}} a freely available IPv 6 and IP Security distribution. All of the <b>software</b> <b>builds</b> and runs on BSD/OS, FreeBSD, NetBSD, and OpenBSD, {{and a growing}} portion of the <b>software</b> <b>builds</b> and runs on Linux. Each of the four BSDs has evolved significantly from their original 4. 4 BSD-Lite ancestor, and increasingly more of that evolution is along divergent paths. Linux shares no significant ancestry with the BSDs, but is still a POSIX system, which means {{that many of the}} same high-level facilities are available even though their implementation might be completely different. This paper discusses many of the differences and many of the similarities we encountered in the internals of these systems. It also discusses the techniques and glue software that we developed for isolating and abstracting the differences so that we could build a significant base of system code that is portable between all five systems. 1 Introduction 1. 1 History The U [...] . ...|$|R
40|$|Before <b>software</b> {{engineering}} <b>builds</b> and installations can {{be implemented}} into software and/or systems integrations in military and aerospace programs, a comprehensive understanding of the software development life cycle is required. Covering all the development life cycle disciplines, Effective Methods for Software and Systems Integration explains how to select and apply a life cycle that promotes effective and efficient software and systems integration. The book defines time-tested methods for systems engineering, software design, <b>software</b> engineering informal/formal <b>builds,</b> <b>software</b> engineer...|$|R
50|$|In {{software}} development, {{a neutral}} build is a <b>software</b> <b>build</b> {{that reflects the}} current state of the source code checked into the source code version control system by the developers, and done in a neutral environment (an environment not used for development).|$|E
50|$|The plugin {{interfaces}} are behind-the-scenes programs thatintegrate Perforce client functionality into third-party software.Perforce plugins {{are available}} fordesktop environments, software development tools, digital asset development tools, <b>software</b> <b>build</b> tools, code review systems, defect tracking systems, office automation tools, SQL clients, and FTP clients.|$|E
5000|$|NAnt is a {{free and}} open source {{software}} tool for automating <b>software</b> <b>build</b> processes. It is similar to Apache Ant, but targeted at the [...]NET environment rather than Java. The name NAnt {{comes from the fact}} that the tool is Not Ant.|$|E
50|$|SouthLake is {{creating}} a STEM lab by beginning with LEGO Education <b>software</b> and <b>build</b> sets.|$|R
5000|$|Several {{companies}} {{used the}} ISODE <b>software</b> to <b>build</b> successful commercial {{products and services}} including (alphabetical order): ...|$|R
50|$|In June 2013, DNAnexus {{started a}} program to help <b>software</b> {{developers}} <b>build</b> applications {{that can be used}} on its platform.|$|R
5000|$|Some {{users of}} the iPhone 4S {{reported}} issues with the SIM card in iOS 5, being given error messages about [...] "Invalid SIM" [...] and [...] "SIM Failure". Apple released a second <b>software</b> <b>build</b> of the 5.0.1 update designed to fix SIM card issues.|$|E
50|$|Under good {{software}} testing practice, schema migrations {{can be performed}} on test databases {{to ensure that their}} schema is compatible to the source code. To streamline this process, a schema migration tool is usually invoked as a part of an automated <b>software</b> <b>build</b> as a prerequisite of the automated testing phase.|$|E
50|$|There is {{sometimes}} a fourth, unpublished number which denotes the <b>software</b> <b>build</b> (as used by Microsoft). Adobe Flash is a notable case where a four-part version number is indicated publicly, as in 10.1.53.64. Some companies also include the build date. Version numbers may also include letters and other characters, such as Lotus 1-2-3 Release 1a.|$|E
500|$|The {{development}} {{history and}} the source code of earlier <b>software</b> <b>builds</b> are not well documented, because the developers didn't want to distribute the source code until they considered the browser to be stable. [...] In version 0.95, support for inline JPEG images was added. In version 0.96, support was added for the FTP, NNTP, and Gopher protocols, as well as experimental support for CSS. In Arena 0.98 Dave Beckett added full PNG support.|$|R
50|$|Signpost's online {{presence}} management aims to help {{local businesses}} to update, verify, and enhance their business information {{on social and}} mobile listings such as Google+, Facebook, and Yelp. Their <b>software</b> <b>builds</b> customer profiles by capturing every email, phone call, and credit card transaction. By using the customer data for each contact, the software automatically follows up with each customer in a personalized way encouraging new customers, repeat business, getting five star reviews, and referrals.|$|R
5000|$|The {{development}} {{history and}} the source code of earlier <b>software</b> <b>builds</b> are not well documented, because the developers didn't want to distribute the source code until they considered the browser to be stable. [...] In version 0.95, support for inline JPEG images was added. In version 0.96, support was added for the FTP, NNTP, and Gopher protocols, as well as experimental support for CSS. In Arena 0.98 Dave Beckett added full PNG support.|$|R
