0|526|Public
40|$|This Master's Thesis {{describes}} {{methods of}} software certification {{and development of}} airborne systems, focusing on software testing and verification during project's life cycle. Thesis includes also designed software <b>verification</b> <b>plan</b> for concrete application according to RTCA/DO- 178 B. Another part of thesis illustrates the exemplary realization of tests according to designed <b>verification</b> <b>plan.</b> At the close we describe the options of applying the designed <b>verification</b> <b>plan</b> and evaluation of its results...|$|R
40|$|Aerospace {{systems are}} subject to many {{stringent}} performance requirements to be verified with low risk. This report investigates <b>verification</b> <b>planning</b> using conditional approaches vice the standard classical statistical methods, and usage of historical surrogate data for requirement validation and in <b>verification</b> <b>planning.</b> The example used in this report to illustrate {{the results of these}} investigations is a proposed mission assurance requirement with the concomitant maximum acceptable verification risk for the NASA Constellation Program Orion Launch Abort System (LAS). This report demonstrates the following improvements: 1) <b>verification</b> <b>planning</b> using conditional approaches vice classical statistical methods results in plans that are more achievable and feasible; 2) historical surrogate data can be used to bound validation of performance requirements; and, 3) incorporation of historical surrogate data in <b>verification</b> <b>planning</b> using conditional approaches produces even less costly and more reasonable <b>verification</b> <b>plans.</b> The procedures presented in this report may produce similar improvements and cost savings in verification for any stringent performance requirement for an aerospace system...|$|R
40|$|This {{as-built}} <b>verification</b> <b>plan</b> {{outlines the}} methodology and responsibilities {{that will be}} implemented during the as-built field verification activity for the Canister Storage Building (CSB) MCO HANDLING MACHINE (MHM). This as-built <b>verification</b> <b>plan</b> covers THE ELECTRICAL PORTION of the CONSTRUCTION PERFORMED BY POWER CITY UNDER CONTRACT TO MOWAT. The as-built verifications will be performed in accordance Administrative Procedure AP 6 - 012 - 00, Spent Nuclear Fuel Project As-Built <b>Verification</b> <b>Plan</b> Development Process, revision I. The results of the verification walkdown will be documented in a verification walkdown completion package, approved by the Design Authority (DA), and maintained in the CSB project files...|$|R
40|$|In today's fast-paced {{electronics}} market, time {{to first}} pass, fully functional silicon {{is the ultimate}} determinant of financial success. Functional verification typically ends up being the most unbounded problem in the flow. While teams struggle with verification, {{the root cause of}} this struggle is the lack of a comprehensive <b>verification</b> <b>plan</b> and automation of the verification process that leverages the plan. This paper describes the problem and presents an approach to <b>verification</b> <b>planning</b> that leads to a high quality plan. It concludes with an example of verification automation, specifically highlighting the connection to an executable <b>verification</b> <b>plan.</b> Author Biography Andrew Piziali is an industry veteran design verification engineer with 22 years experience verifying mainframes, supercomputers and microprocessors with StorageTek, Amdahl, Evans and Sutherland, Convex Computer, Cyrix, Texas Instruments, Transmeta, Verisity and Cadence Design Systems. Having an avid interest in coverage-driven verification, in 2004 he authored the book Functional Verification Coverage Measurement and Analysis. Andrew is currently employed by Cadence Design Systems as a verification application specialist, focusing on <b>verification</b> <b>planning</b> and coverage analysis. ...|$|R
40|$|A {{compilation}} of analyses generated {{during the development}} of the electron-proton spectrometer for the Skylab program is presented. The data documents the analyses required by the electron-proton spectrometer <b>verification</b> <b>plan.</b> The <b>verification</b> <b>plan</b> was generated to satisfy the ancillary hardware requirements of the Apollo Applications program. The certification of the spectrometer requires that various tests, inspections, and analyses be documented, approved, and accepted by reliability and quality control personnel of the spectrometer development program...|$|R
40|$|Biomass is a P-band Synthetic Aperture Radar {{satellite}} mission {{proposal to}} estimate the biomass on a global scale. In support of the studies connected to this mission a Biomass end-to-end simulator has been developed for ESA. The Modules <b>Verification</b> <b>Plan</b> for the Product Generation Module (PGM) describes the individual steps of how to verify the algorithmic implementation of the PGM. The <b>verification</b> <b>plan</b> defines procedures and required inputs and outputs, which have to be produced for the Modules Verification Report...|$|R
40|$|Functional {{verification}} consumes {{more than}} 70 % {{of the labor}} invested in today’s SoC designs. Yet, even with such a large investment in verification, there’s more risk of functional failure at tapeout than ever before. The primary {{reason is that the}} design team does not know where they are, in terms of functional correctness, relative to the tapeout goal. They lack a functional verification map for reference that employs coverage as its primary element. Coverage, in the broadest sense, is responsible for measuring verification progress across a plethora of metrics and for helping engineers assess their location relative to design completion. [1] The map to be referenced must be created by the design team upfront, so they know not only where they are starting from-specification but no implementationbut also where they are going: fully functional first silicon. The metrics of the map must be chosen for their utility: RTL written, software written, features, properties, assertion count, simulation count, failure rate, and coverage closure rate. The map is the <b>verification</b> <b>plan,</b> an executable natural language document [2],[3] that defines the scope of the verification problem and its solution. The scope of the problem is defined by implicit and explicit coverage models. [1] The solution to the verification problem is described by the methodology employed to achieve full coverage: dynamic and static verification. Simulation (dynamic) contributes to coverage closure through RTL execution. Formal analysis (static) contributes to coverage closure through proven properties. By annotating the <b>verification</b> <b>plan</b> with these (and other) progress metrics, it becomes a live, executable document that directs the design team to their goal. Most <b>verification</b> <b>planning</b> today lacks the rigor required to recognize the full scope of the verification problem faced by the design team. The {{reason for this is that}} substantial effort is required to write a thorough <b>verification</b> <b>plan.</b> If that plan is obsolete as soon as it is written, the effort is not justified. However, by transforming the <b>verification</b> <b>plan</b> into an active specification that controls the <b>verification</b> process, the <b>planning</b> effort is more than justified. This article illustrates the application of an executable <b>verification</b> <b>plan</b> to a processor-based SoC...|$|R
5000|$|Iraq {{says that}} it {{considers}} the Monitoring and <b>Verification</b> <b>Plans</b> adopted by Resolution 715 to be unlawful, and states {{that it is not}} ready to comply with the Resolution.|$|R
30|$|FPGA is a {{platform}} to implement hardware in the gate level abstraction. Since the designs are executed in parallel, {{speed of the}} FPGA implementation of any system is higher than speed of its software implementation. Furthermore, FPGAs are reconfigurable device, minimizing time-to-market, and <b>simplifying</b> <b>verification</b> and debugging [17]. So, FPGA {{is one of the}} best platforms to implement a real time such as driver drowsiness system.|$|R
40|$|This Master's thesis {{reports the}} <b>{{verification}}</b> <b>planning</b> and <b>verification</b> process of a Verilog RTL model. Modern verification techniques like constrained randomization, assertions, functional coverage analysis and object orientation are demonstrated on an AES RTL model. The {{work of this}} thesis was naturally divided in three phases: First, a phase of literature studies {{to get to know}} the basics of verification. Second, the creation of a <b>verification</b> <b>plan</b> for the selected module. Third, implementation of the testbench, and simulation tasks. The <b>verification</b> <b>plan</b> created states the goals for the simulation. It also states plans for details about the testbench, like architecture, stimuli generation, random- ization, assertions, and coverage collection. The implementation was done using the SystemVerilog language. The testbench was simulated using the Synopsys VCS ver- ification software. During simulation, coverage metrics were analyzed to track the progress and completeness of the simulation. Assertions were analyzed to check for errors in the behavior during simulation. The analysis carried out revealed high code coverage for the simulations, and no major errors in the verified module. </p...|$|R
3000|$|Proof: see Appendix A. 6 Proof of Lemma 5.1. To <b>simplify</b> the <b>verification</b> phase we can {{identify}} thresholds τ [...]...|$|R
40|$|Approved {{afforestation}} and reforestation baseline methodology AR-AM 0002 “Restoration of degraded lands through afforestation/reforestation” This methodology {{is based}} on the draft CDM-AR-PDD “Moldova Soil Conservation Project ” whose baseline study, monitoring and <b>verification</b> <b>plan</b> and project design document were prepared by th...|$|R
40|$|Approved {{afforestation}} and reforestation baseline methodology AR-AM 0004 “Reforestation or afforestation of land {{currently under}} agricultural use” This methodology {{is based on the}} draft CDM-AR-PDD “Reforestation around Pico Bonito National Park, Honduras”, whose baseline study, monitoring and <b>verification</b> <b>plan</b> and project design documen...|$|R
40|$|In 2007 the TerraSAR-X {{the first}} German Radar {{satellite}} for scientific and commercial applications will be launched. The {{project is a}} public-private partnership between DLR and EADS Astrium GmbH. TerraSAR-X consists of a high resolution Synthetic Aperture Radar (SAR) at X-Band. The radar antenna is based on active phased array technology that operating in multiple SAR modes (Stripmap, ScanSAR and Spotlight) with various polarizations. The highly advanced instrument allows the active configuration of many different instrument parameters and settings. The pre-launch activities for the TerraSAR-X system include the preparation of a <b>verification</b> <b>plan</b> to be accomplished during the commissioning phase. The aim of this plan is to define a procedure including all sub-systems to ensure optimum end-products (SAR images). The procedure involves tasks such as calibration, characterization/verification of SAR-instrument, SAR system performance, orbit and attitude as well as product verification. Due to the complexity and re-configurability of the system {{it is not possible}} to verify all possible combinations and settings. This makes the <b>verification</b> <b>plan</b> construction and the scheduling of the individual activities a non-trivial task requiring expertise for both the complete system and detailed sub-system level. The paper starts by introducing the areas covered by the system <b>verification</b> <b>plan.</b> These are combined in a block diagram for the basic SAR product verification flow. A detailed description of the philosophy behind the system <b>verification</b> <b>plan</b> is given. This is crucial to ensure proper interaction and to avoid conflicts during the detailed planning. The overall system <b>verification</b> <b>plan</b> is used to derive the verification matrix which identifies the tasks required for SAR System and Product release during the commissioning phase. Specifically one bottom level outcome of this matrix are the commissioning phase data take and their sequence of acquisition. However, the matrix is also a driver for the development of the tools required for the evaluation/analysis of the data take measurements. The paper will present both the verification matrix as well as the overall commissioning phase schedule. First results and trends of the TerraSAR-X commissioning phase with respect to SAR system and SAR products verification will be presented. The paper gives an insight and is intended to be a valuable reference for the development of system verification strategies of state-of-the-art and future SAR systems. ...|$|R
40|$|Draft {{afforestation}} and reforestation baseline methodology AR-AM 00 xx “Reforestation or afforestation of land {{currently under}} agricultural use” This methodology {{is based on the}} draft CDM-AR-PDD “Reforestation around Pico Bonito National Park, Honduras”, whose baseline study, monitoring and <b>verification</b> <b>plan</b> and project design documen...|$|R
40|$|Draft Approved {{afforestation}} and reforestation baseline methodology AR-AM 00 ## “Restoration of degraded lands through afforestation/reforestation” This methodology {{is based}} on the draft CDM-AR-PDD “Moldova Soil Conservation Project ” whose baseline study, monitoring and <b>verification</b> <b>plan</b> and project design document were prepared by th...|$|R
40|$|Efficient {{implementations}} of DPLL {{with the}} addition of clause learning are the fastest complete satisfiability solvers and can handle many significant real-world problems, such as <b>verification,</b> <b>planning,</b> and design. Despite its importance, little is known of the ultimate strengths and limitations of the technique...|$|R
40|$|In 2007 TerraSAR-X, {{the first}} German Radar {{satellite}} for scientific and commercial applications, will be launched. The {{project is a}} public-private partnership between DLR and EADS Astrium GmbH. TerraSAR-X consists of a high resolution Synthetic Aperture Radar (SAR) at X-Band. The radar antenna is based on active phased array technology operating in multiple SAR modes (Stripmap, ScanSAR and Spotlight) with various polarizations. The highly advanced instrument allows the active configuration of many different instrument parameters and settings. The pre-launch activities for the TerraSAR-X system include the preparation of a <b>verification</b> <b>plan</b> to be accomplished during the commissioning phase. The aim of this plan is to define a procedure including all sub-systems to ensure optimum end-products (SAR images). The procedure involves tasks such as calibration, characterization/verification of 1) SAR-instrument, 2) SAR system performance, and 3) orbit and attitude determination, as well as 4) product verification. Due to the complexity and re-configurability of the system {{it is not possible}} to verify all possible combinations and settings. This makes the <b>verification</b> <b>plan</b> construction and the scheduling of the individual activities a non-trivial task requiring expertise for both the complete system and detailed sub-system level. The paper starts by introducing the areas covered by the system <b>verification</b> <b>plan.</b> These are combined in a block diagram for the basic SAR product verification flow. A detailed description of the philosophy behind the system <b>verification</b> <b>plan</b> is given. This is crucial to ensure proper interaction and to avoid conflicts during the detailed planning. The overall system <b>verification</b> <b>plan</b> is used to derive the verification matrix which identifies the tasks required for SAR System and Product release during the commissioning phase. Specifically, the bottom level outcome of this matrix are the commissioning phase data take and their sequence of acquisition. However, the matrix is also a driver for the development of the tools required for the evaluation/analysis of the data take measurements. The paper will present both the verification matrix as well as the overall commissioning phase schedule. First results and trends of the TerraSAR-X commissioning phase with respect to SAR system and SAR products verification will be presented. The paper gives an insight and is intended to be a valuable reference for the development of system verification strategies of state-of-the-art and future SAR systems. ...|$|R
40|$|Draft {{revision}} to the approved {{afforestation and reforestation}} {{baseline and}} monitoring methodology AR-AM 0007 “Afforestation and Reforestation of Land Currently Under Agricultural or Pastoral Use” This methodology {{is based on the}} draft CDM-AR-PDD “Chocó-Manabí Corridor Reforestation and Conservation Carbon Project ” whose baseline study, monitoring and <b>verification</b> <b>plan</b> and project desig...|$|R
40|$|Details how to {{optimize}} a <b>verification</b> <b>plan</b> and an environment, {{and how to}} get results effectively. This book on Effective Functional Verification, presents case studies with analysis of proposed improvements. It discusses various subjects on how {{to get the most out}} of a verification environment. It also contains some tool specific guidelines...|$|R
50|$|The {{hardware}} design and hardware verification {{need to be}} done independently. The {{hardware design}}er works to ensure the design of the hardware will meet the defined requirements. Meanwhile, the verification engineer will generate a <b>verification</b> <b>plan</b> which will allow for testing the hardware to verify that it meets all of its derived requirements.|$|R
40|$|Biomass is a P-band Synthetic Aperture Radar {{satellite}} mission {{proposal to}} estimate the biomass on a global scale. In support of the studies connected to this mission a Biomass end-to-end simulator has been developed for ESA. The System <b>Verification</b> <b>Plan</b> describes the system tests and the scientific validation tests for the whole simulator chain. ...|$|R
40|$|The {{prototype}} flight {{structural design}} and verification concept developed for TOPEX/Poseidon is presented. The structural configuration, design requirements, <b>verification</b> <b>plan,</b> analysis, and system level testing are described. The principal {{goal of the}} mission is to observe and measure ocean currents via radio altimetry, for enhanced knowledge {{of the interaction between}} the atmosphere and ocean...|$|R
30|$|We {{close this}} section {{with a new}} example of the {{applicability}} of Kiguradze and Partsvania’s results. Notice how our Proposition  1.1 <b>simplifies</b> the <b>verification</b> of condition (H 4) in Corollary  1.1.|$|R
40|$|Various {{aspects of}} the Galileo {{spacecraft}} inertial balance are described. Attention {{is given to the}} Galileo spacecraft and mission description, the attitude and articulation control and figure of merit requirements, the inertial balance test and <b>verification</b> <b>plan,</b> and the error analysis. Particular consideration is given to aerodynamic effects and the ballasting technique known as asymmetric tank fill...|$|R
40|$|We have {{verified}} several {{versions of}} the CPS transformation in Isabelle/HOL. In our verification we adopted first-order abstract syntax with variable names so that the formalization is close to that of hand-written proofs and compilers. To simplify treatment of fresh variables introduced by the transformation, we introduced abstract syntax parameterized {{with the type of}} variables. We also found that the standard formalization of α-equivalence was cumbersome for theorem provers and reformulated α-equivalence as a syntax-directed deductive system. To <b>simplify</b> <b>verification</b> of the CPS transformation on the language extended with let-expressions, it was essential to impose that variables are uniquely used in a program...|$|R
40|$|Draft {{revision}} to the approved {{afforestation and reforestation}} {{baseline and}} monitoring methodology AR-AM 0006 “Afforestation/Reforestation with Trees Supported by Shrubs on Degraded Land” (Version 03) This methodology {{is based on the}} draft CDM-AR-PDD “Afforestation for Combating Desertification in Aohan County, Northern China ” whose baseline study, monitoring and <b>verification</b> <b>plan</b> and project design document were prepared by the Institute of Forest Ecology an...|$|R
40|$|Test {{results show}} that the Owens-Illinois Sunpak TM Model SEC 601 {{air-cooled}} collector meets the national standards and codes as defined in the Subsystem Peformance Specification and <b>Verification</b> <b>Plan</b> of NASA/MSFC, dated October 28, 1976. The program calls for the development, fabrication, qualification and delivery of an air-cooled solar collector for solar heating, combined heating and cooling, and/or hot water systems...|$|R
5000|$|Gregory Delawie [...] (born 1957) is a United States diplomat. Since mid 2015, he {{has been}} the US Ambassador to Kosovo. Previously served as the Deputy Assistant Secretary for <b>Verification,</b> <b>Planning,</b> and European Security in the State Department’s Bureau of Arms Control, Verification and Compliance. He also served as Deputy Chief of Mission, U.S. Embassy Embassy Zagreb, Croatia and Berlin, Germany ...|$|R
5000|$|Online Poverty Database (1998) [...] This {{database}} centralizes {{all information}} concerning the urban poor. It <b>simplifies</b> the <b>verification</b> process so all types of assistance can be recorded so the Ministry of Rural Development can take action.|$|R
40|$|Biomass is a P-band Synthetic Aperture Radar {{satellite}} mission {{proposal to}} estimate the biomass on a global scale. In support of the studies connected to this mission a Biomass end-to-end simulator has been developed for ESA. The Modules Verification Test Report for the Product Generation Module (PGM) provides test results of the verification of the algorithmic implementation of the PGM according to the Modules <b>Verification</b> <b>Plan...</b>|$|R
40|$|Heat {{exchangers}} {{were developed}} {{for use in}} a solar heating and cooling system installed in a single family dwelling. Each of the three exchangers consisted of a heating and cooling module and a submersed electric water heating element. Information necessary to evaluate the preliminary design of the heat exchanger is presented in terms of the development and <b>verification</b> <b>plans,</b> performance specifications, installation and maintenance, and hazard analysis...|$|R
40|$|The {{structural}} test {{unit of the}} electron-proton spectrometer was tested to a random vibration spectra and to a sinusoidal resonant search {{to comply with the}} requirements of a <b>verification</b> <b>plan</b> for the spectrometer. The test item consisted of mass simulated electronic and printed circuit boards mounted in a flight type electronic housing. The arrangement, center of gravity, and weight were as proposed for flight units...|$|R
40|$|Abstract Integrating formal program {{verification}} {{into mainstream}} software development {{has proven to}} be quite challenging, due to the level of abstract mathematical machinery needed. Although there have been some successes, most existing methods do not adequately support the mechanical verification of generic programs. This thesis seeks to fill this gap by presenting a formalisation and implementation of a category theory inspired approach to generic program specification. Theorems to <b>simplify</b> <b>verification</b> of generic programs are developed along with a formal framework for reasoning. The result is theorem proving support based on type quantification and type operator variables in HOL, HOL 2 P. This is demonstrated by the verification the Yoenda Lemma...|$|R
40|$|Abstract. This paper {{presents}} a method which <b>simplifies</b> <b>verification</b> of deeply embedded functional programs. We present a technique by which proof-certified equations describing {{the effect of}} functional programs (shallow embeddings) can be automatically extracted from their operational semantics. Our method {{can be used in}} reverse, i. e. from shallow to deep embeddings, and thus for implementing certifying code synthesis: we have implemented a tool which maps HOL functions to equivalent Lisp functions, for which we have a verified Lisp runtime. A key benefit, in both directions, is that the verifier does not need to understand the operational semantics that gives meanings to the deep embeddings. ...|$|R
40|$|Springer International Publishing Switzerland 2016. Our {{language}} Cogent <b>simplifies</b> <b>verification</b> {{of systems}} software using a certifying compiler, which produces a {{proof that the}} generated C code is a refinement of the original Cogent program. Despite the fact that Cogent itself contains a number of refinement layers, the semantic gap between even {{the lowest level of}} Cogent semantics and the generated C code remains large. In this paper we close this gap with an automated refinement framework which validates the compiler’s code generation phase. This framework makes use of existing C verification tools and introduces a new technique to relate the type systems of Cogent and C...|$|R
