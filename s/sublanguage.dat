482|235|Public
25|$|Some Lisp dialects {{provide an}} {{extensive}} <b>sublanguage</b> for describing Loops. An early example {{can be found}} in Conversional Lisp of Interlisp. Common Lisp provides a Loop macro which implements such a <b>sublanguage.</b>|$|E
25|$|Joins {{are closely}} related to a closure {{operation}} that maps formal languages to antimatroids, where the closure of a language L is the intersection of all antimatroids containing L as a <b>sublanguage.</b> This closure has as its feasible sets the unions of prefixes of strings in L. In terms of this closure operation, the join is the closure of the union of the languages of A and B.|$|E
2500|$|In the R5RS {{standard}} {{and also in}} later reports, the syntax of Scheme can easily be extended via the macro system. The R5RS standard introduced a powerful hygienic macro system that allows the programmer to add new syntactic constructs to the language using a simple pattern matching <b>sublanguage</b> (R5RS sec 4.3). [...] Prior to this, the hygienic macro system had been relegated to an appendix of the R4RS standard, as a [...] "high level" [...] system alongside a [...] "low level" [...] macro system, {{both of which were}} treated as extensions to Scheme rather than {{an essential part of the}} language. Report on the Algorithmic Language Scheme |author=William Clinger and Jonathan Rees, editors |url=http://www.cs.indiana.edu/scheme-repository/R4RS/r4rs_toc.html |journal=ACM Lisp Pointers |volume=4 |issue=3 |pages=1–55 |year=1991 |accessdate=2012-08-09 |postscript=}} ...|$|E
40|$|This paper {{concerns}} {{supervisory control}} of largescale modular discrete event systems (DES) with partial observations and general (indecomposable) specification languages. Recently {{we have found}} new methods for computing supremal controllable <b>sublanguages</b> and supremal normal <b>sublanguages</b> independently. Unfortunately, these methods are difficult to put simply together for computation of supremal controllable and normal <b>sublanguages.</b> Therefore, we propose first a new method for computation of supremal controllable <b>sublanguages</b> that {{can be viewed as}} a complete observation counterpart of a method we have developed for supremal normal <b>sublanguages.</b> These can be put together in a procedure for computing optimal <b>sublanguages,</b> which avoids building of the global plant. Unlike our previous results, we present both necessary and sufficient structural conditions for modular control synthesis to equal global control synthesis for partially observed modules and general (indecomposable) specification languages...|$|R
25|$|The {{issue of}} whether <b>sublanguages</b> should be {{included}} remains unsettled. Proponents of it argue that with all <b>sublanguages</b> removed, it will result in an impoverished view of language. Since language {{is made up of}} lexicons, grammar and a wide array of different <b>sublanguages,</b> they should be included. However, it is not until recently that it became a viable option. Striking a middle ground by including some <b>sublanguages</b> is contentious because it’s an arbitrary issue of which to include and which not.|$|R
40|$|In large {{software}} projects often multiple modeling {{languages are}} used in order to cover the different domains and views of the application and the language skills of the developers appropriately. Such "multi-modeling" raises many methodological and semantical questions, ranging from semantic consistency of the models written in different <b>sublanguages</b> to the correctness of model transformations between the <b>sublanguages.</b> We provide a first formal basis for answering such questions by proposing semantically well-founded notions of a multimodeling language and of semantic correctness for model transformations. In our approach, a multi-modeling language consists {{of a set of}} <b>sublanguages</b> and correct model transformations between some of the <b>sublanguages.</b> The abstract syntax of the <b>sublanguages</b> is given by MOF meta-models. The semantics of a multi-modeling language is given by associating an institution, i. e., an appropriate logic, to each of its <b>sublanguages.</b> The correctness of model transformations is defined by semantic connections between the institutions...|$|R
2500|$|Initially, Unreal Engine 3 only {{supported}} Windows, PlayStation 3, and Xbox 360 platforms, while iOS (first demonstrated with Epic Citadel) and Android {{were added}} later in 2010, with Infinity Blade {{being the first}} iOS title and Dungeon Defenders the first Android title. OS X support was added in 2011. The same year {{it was announced that}} the engine would support Adobe Flash Player 11 through the Stage 3D hardware-accelerated APIs and that it was being used in two Wii U games, [...] and [...] Windows 8 and Windows RT support was added in 2012. In 2013, Epic teamed-up with Mozilla to bring Unreal Engine 3 to HTML5. Using the asm.js <b>sublanguage</b> and Emscripten compiler, they were able to port the engine to JavaScript and WebGL in four days.|$|E
50|$|Some Lisp dialects {{provide an}} {{extensive}} <b>sublanguage</b> for describing Loops. An early example {{can be found}} in Conversional Lisp of Interlisp. Common Lisp provides a Loop macro which implements such a <b>sublanguage.</b>|$|E
50|$|Graph Rewriting and Transformation (GReAT) is a Model Transformation Language (MTL) for Model Integrated Computing {{available}} in the GME environment. GReAT has a rich pattern specification <b>sublanguage,</b> a graph transformation <b>sublanguage</b> and a high level control-flow <b>sublanguage.</b> It {{has been designed to}} address the specific needs of the model transformation area. The GME environment {{is an example of a}} Model Driven Engineering (MDE) framework.|$|E
40|$|Abstract. In large {{software}} projects often multiple modeling {{languages are}} used in order to cover the different domains and views of the application and the lan-guage skills of the developers appropriately. Such “multi-modeling ” raises many methodological and semantical questions, ranging from semantic consistency of the models written in different <b>sublanguages</b> to the correctness of model transfor-mations between the <b>sublanguages.</b> We provide a first formal basis for answer-ing such questions by proposing semantically well-founded notions of a multi-modeling language and of semantic correctness for model transformations. In our approach, a multi-modeling language consists {{of a set of}} <b>sublanguages</b> and syntax of the <b>sublanguages</b> is given by MOF meta-models. The semantics of a multi-modeling language is given by associating an institution, i. e., an appropri-ate logic, to each of its <b>sublanguages.</b> The correctness of model transformations is defined by semantic connections between the institutions. ...|$|R
40|$|We present three {{algorithms}} for supervisor synthesis in discrete-event systems. In {{all cases}} the desired {{language is not}} both controllable and observable. To allow supervisor synthesis, we approximate the desired language with languages that are controllable and observable. These languages are contained in the desired language, and are `large' in some sense. We note that there exists algorithms for calculating `maximal' <b>sublanguages</b> of this kind, but in general they are nonunique as well as computationally prohibitive. On the other hand, there exist algorithms that synthesize unique `normal' <b>sublanguages,</b> but these often are poor approximations to the desired language (i. e. they are very small <b>sublanguages).</b> The first algorithm, proposed by Kumar, realizes a controllable and observable language that he denoted CO(K). CO(K) represents a conservative attempt to extend normal <b>sublanguages,</b> by disabling events that potentially lead to `illegal' strings (strings that result in non-observabi [...] ...|$|R
40|$|Supremal {{controllable}} {{and normal}} <b>sublanguages</b> {{have been shown}} {{to play an important role}} in supervisor synthesis. In this paper, we discuss the computation of supremal controllable and normal <b>sublanguages.</b> We derive formulas for both supremal controllable <b>sublanguages</b> and supremal normal <b>sublanguages</b> when the languages involved are closed. As a result, those languages can be computed without applying recursive algorithms. We also discuss the computational aspects of these formulas. 1. INTRODUCTION In supervisory control, discrete event systems are modeled by controlled automata, and their behaviors described by the associated formal languages [1]- [3], [5]-[17] Control is exercised by a supervisor, whose action is to enable or disable events so that the controlled system generates some prespecified desired language. The subset of all events that can be selectively disabled by the supervisor is the set of controllable events. The supervisor may also be constrained to observe only even [...] ...|$|R
50|$|The term <b>sublanguage</b> {{has also}} {{sometimes}} {{been used to}} denote a computer language that is a subset of another language. For instance, ALGOL 68S was a subset of ALGOL 68 designed {{to make it possible}} to write a single-pass compiler for this <b>sublanguage.</b> A <b>sublanguage</b> may be restricted syntactically (it accepts a subgrammar of the original language), and/or semantically (the set of possible outcomes for any given program is a subset of the possible outcomes in the original language).|$|E
50|$|The same {{restriction}} {{was made}} in the official <b>sublanguage,</b> ALGOL 68S.|$|E
50|$|A <b>sublanguage</b> is {{a subset}} of a language. Sublanguages occur in natural language, {{computer}} language, and relational databases.|$|E
5000|$|In {{mathematical}} logic, various <b>sublanguages</b> of {{set theory}} are decidable. [...] These include: ...|$|R
40|$|Abstract: Coalgebraic methods {{provide new}} results and {{insights}} for modular supervisory control of discrete-event systems (DES), where the overall system {{is composed of}} subsystems that are themselves partially observed DES. It {{is well known that}} the computation of supremal normal <b>sublanguages</b> is computationally very difficult. The attention of this paper is focused on complex distributed systems that are composed {{of a large number of}} small subsystems that are combined in a modular fashion. Conditions are derived under which supremal normal <b>sublanguages</b> commute with synchronous product, i. e. the computation of supremal normal <b>sublanguages</b> can be done locally. The coinduction proof principle is used to obtain our main result...|$|R
2500|$|Specific decidable <b>sublanguages</b> of {{set theory}} {{investigated}} in the 1980s through today.(Cantone et al., 2001) ...|$|R
50|$|The JBOL modules {{library for}} the jq {{language}} contains a full implementation for the SNOBOL pattern matching <b>sublanguage.</b>|$|E
5000|$|In Informatics, natural {{language}} processing, and machine translation, a <b>sublanguage</b> {{is the language}} of a restricted domain, particularly a technical domain. In mathematical terms, [...] "a subset of the sentences of a language forms a <b>sublanguage</b> of that language if it is closed under some operations of the language: e.g., if when two members of a subset are operated on, as by and or because, the resultant {{is also a member of}} that subset" [...] (Z. S. Harris Language and Information, Columbia U. Press, 1988, p. 34).|$|E
50|$|Integrity {{constraints}} {{specific to}} a particular relational data base must be definable in the relational data <b>sublanguage</b> and storable in the catalog, not in the application programs.|$|E
50|$|To date {{there have}} been at least 70 augmentations, extensions, derivations and <b>sublanguages</b> of Algol 60.|$|R
40|$|This paper proposes an {{algorithm}} for on-line control {{based on}} a supervisor under complete observation. It is shown that DES's controlled by the proposed on-line controller generate maximally controllable and observable <b>sublanguages</b> which include the supremal normal <b>sublanguages.</b> Moreover, computational complexity of the proposed algorithm is polynomial {{with respect to the}} numbers of the unobservable events and the state of the supervisor under complete observation...|$|R
50|$|Gigatl (Hihatl) and Chamalal proper (with Gadyri, Gakvari, Tsumada and Kwenkhi dialects) are {{considered}} to be <b>sublanguages.</b>|$|R
5000|$|In addition, BS12 {{was ahead}} of SQL in {{supporting}} user-defined functions and procedures, using a computationally complete <b>sublanguage,</b> triggers, and a simple [...] "call" [...] interface for use by application programs, all in its very first release in 1982.|$|E
50|$|Natural {{language}} combines nested {{and ordered}} metalanguages. In a natural language {{there is an}} infinite regress of metalanguages, each with more specialized vocabulary and simpler syntax. Designating the language now as L0, the grammar of the language is a discourse in the metalanguage L1, which is a <b>sublanguage</b> nested within L0. The grammar of L1, which has {{the form of a}} factual description, is a discourse in the metametalanguage L2, which is also a <b>sublanguage</b> of L0. The grammar of L2, which has the form of a theory describing the syntactic structure of such factual descriptions, is stated in the metametametalanguage L3, which likewise is a <b>sublanguage</b> of L0. The grammar of L3 has the form of a metatheory describing the syntactic structure of theories stated in L2. L4 and succeeding metalanguages have the same grammar as L3, differing only in reference. Since all of these metalanguages are sublanguages of L0, L1 is a nested metalanguage, but L2 and sequel are ordered metalanguages. Since all these metalanguages are sublanguages of L0 they are all embedded languages with respect to the language as a whole.|$|E
5000|$|In {{his work}} on <b>sublanguage</b> analysis, Harris showed how the <b>sublanguage</b> for a {{restricted}} domain can have a pre-existent external metalanguage, expressed in sentences in the language but outside of the <b>sublanguage,</b> {{something that is not}} available to language as a whole. In the language as a whole, restrictions on operator-argument combinability can only be specified in terms of relative acceptability, {{and it is difficult to}} rule out any satisfier of an attested sentence-form as nonsense, but in technical domains, especially in sublanguages of science, metalanguage definitions of terms and relations restrict word combinability, and the correlation of form with meaning becomes quite sharp. It is perhaps of interest that the test and exemplification of this in The Form of Information in Science (1989) vindicates in some degree the Sapir-Whorf hypothesis. It also expresses Harris's lifelong interest in the further evolution or refinement of language in context of problems of social amelioration (e.g., [...] "A Language for International Cooperation" [...] 1962, [...] "Scientific Sublanguages and the Prospects for a Global Language of Science" [...] 1988), and in possible future developments of language beyond its present capacities.|$|E
40|$|This paper {{explores the}} use of {{weighted}} cusums, a technique found in authorship attribution studies, {{for the purpose of}} identifying <b>sublanguages.</b> The technique, and its relation to standard cusums (cumulative sum charts) is first described, and the formulae for calculations given in detail. The technique compares texts by testing for the incidence of linguistic 'features' of a superficial nature, e. g. proportion of 2 - and 3 -letter words, words beginning with a vowel, and so on, and measures whether two texts differ significantly in respect of these features. The paper describes an experiment in which 14 groups of three texts each representing different <b>sublanguages</b> are compared with each other using the technique. The texts are first compared within each group to establish that the technique can identify the groups as being homogeneous. The texts are then compared with each other, and the results analysed. Taking the average of seven different tests, the technique is able to distinguish the <b>sublanguages</b> in only 43 % of the case. But if the best score is taken, 79 % of pairings can be distinguished. This is a better result, and the test seems able to quantify the difference between <b>sublanguages...</b>|$|R
40|$|AbstractThis paper formulates {{a signed}} real measure for <b>sub{{languages}}</b> of regular languages {{based on the}} principles of automata theory and real analysis. The measure provides total ordering on the controlled behavior of a finite-state automaton plant under different supervisors. Total variation of the measure serves as a metric for the infinite-dimensional vector space of the <b>sublanguages</b> of a regular language over the finite field GF(2). The computational complexity of the language measure is of polynomial order in the number of plant states...|$|R
40|$|Matching of {{concepts}} against patterns {{is a new}} inference task in Description Logics, which was originally motivated by applications of the Classic system. Consequently, the work on this problem was until now mostly concerned with <b>sublanguages</b> of the Classic language, which {{does not allow for}} existential restrictions. Motivated by an application in chemical process engineering, which requires a description language with existential restrictions, this paper investigates the matching problem in Description Logics with existential restrictions. It turns out that existential restrictions make matching more complex in two respects. First, whereas matching in <b>sublanguages</b> of Classic is polynomial, deciding the existence of matchers is an NP-complete problem in the presence of existential restrictions. Second, whereas in <b>sublanguages</b> of Classic solvable matching problems have a unique least matcher, {{this is not the case}} for languages with existential restrictions. Thus, it is not [...] ...|$|R
50|$|The XSLT 2.0 and XQuery 1.0 {{standards}} {{were developed by}} separate working groups within W3C, working together to ensure a common approach where appropriate. They share the same data model, type system, and function library, and both include XPath 2.0 as a <b>sublanguage.</b>|$|E
50|$|XPath 2.0 {{is used as}} a <b>sublanguage</b> of XSLT 2.0, and it is also {{a subset}} of XQuery 1.0. All three {{languages}} share the same data model (the XDM), type system, and function library, and were developed together and published on the same day.|$|E
5000|$|The do dialect {{interpreted}} by the [...] function, is an expression-oriented <b>sublanguage</b> of the data exchange dialect. The main semantic unit of the language is the expression. In contrast to imperative programming languages descending from ALGOL, the do dialect has neither keywords, nor statements.|$|E
40|$|AbstractThe {{complete}} lattice of monotonic predicate transformers is {{interpreted as a}} command language with a weakest precondition semantics. This command lattice contains Dijkstra's guarded commands as well as miracles. It also permits unbounded nondeterminism and angelic nondeterminism. The language is divided into <b>sublanguages</b> using criteria of demonic and angelic nondeterminism, termination and absence of miracles. We investigate dualities between the <b>sublanguages</b> {{and how they can}} be generated from simple primitive commands. The notions of total correctness and refinement are generalized to the command lattice...|$|R
40|$|Among Zellig Harris's {{numerous}} {{contributions to}} linguistics {{his theory of}} the <b>sublanguages</b> of science probably ranks among the most underrated. However, not only has this theory led to some exhaustive and meaningful applications {{in the study of}} the grammar of immunology language and its changes over time, but it also illustrates the nature of mathematical relations between chunks or subsets of a grammar and the language as a whole. This becomes most clear when dealing with the connection between metalanguage and language, as well as when reflecting on operators. This paper tries to justify the claim that the <b>sublanguages</b> of science stand in a particular algebraic relation to the rest of the language they are embedded in, namely, that of right ideals in a ring. Comment: Keywords: Zellig Sabbetai Harris, Information Structure of Language, <b>Sublanguages</b> of Science, Ideal Numbers, Ernst Kummer, Ideals, Richard Dedekind, Ring Theory, Right Ideals, Emmy Noether, Order Theory, Marshall Harvey Ston...|$|R
50|$|Although {{the actual}} {{language}} of the BookWorld is English, there are also other Great Libraries that are apparently completely other languages. The actual <b>sublanguages</b> of each BookWorld, however, are regarded as fonts.|$|R
