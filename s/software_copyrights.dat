17|349|Public
5000|$|... #Subtitle level 3: History of <b>software</b> <b>copyrights</b> in the United States ...|$|E
50|$|As of 2016, commercialization {{efforts in}} UW Bioengineering have yielded 1,437 patents filed, 391 patents issued, 4 <b>software</b> <b>copyrights,</b> 99 active {{licences}} and 807 invention disclosures. 36 existing start-up companies {{have benefited from}} the intellectual property generated by the department.|$|E
50|$|Created in 2005, Hisense Mobile Communications Technology Co Ltd has {{its roots}} in the Hisense Mobile Communications Research Institute, an R&D team created in 2000. Holding a total of 233 patents, 64 inventions and 116 <b>software</b> <b>copyrights,</b> its {{products}} include mobile handsets, Linux OS smart phones, wireless modules, PC cards and industry customized terminals.|$|E
50|$|Article 4 The Applicant of <b>software</b> <b>copyright</b> {{should be}} the <b>software</b> <b>copyright</b> owner {{as well as the}} natural person, legal person, or other {{organization}} that owns copyright through inheritance, endorsement.|$|R
5000|$|... 2. Served as a {{basis to}} provide {{protection}} of lawAccording to related decree of the Council, “copyright administrative department should standardize and strengthen system on <b>software</b> <b>copyright</b> registration, encourage <b>software</b> <b>copyright</b> registration, and provide special protection in law to the registered software”. For instance, when copyright piracy happened, certificate of <b>software</b> <b>copyright</b> registration be used as proof without examination; in addition, it serves {{as a basis}} in law for national copyright administrative department to against piracy.|$|R
5000|$|... 1. Completed {{application}} form of <b>software</b> <b>copyright</b> registration; ...|$|R
50|$|Standard key generation, where product {{keys are}} {{generated}} mathematically, {{is not completely}} effective in stopping copyright infringement of software, as these keys can be distributed. The overall effectiveness of product keys in enforcing <b>software</b> <b>copyrights</b> requires further study. In addition, with improved communication from {{the rise of the}} Internet, more sophisticated attacks on keys such as cracks (removing the need for a key) and product key generators have become common.|$|E
50|$|EtherDrive is a {{brand name}} for storage area network devices based upon the ATA over Ethernet (AoE) protocol. It was {{registered}} with the United States Patent and Trademark Office in 2004. The word was invented by Brantley Coile as a portmanteau of the words Ethernet and disk drive. EtherDrive was a trademark by Coraid from 2002 until 2015 when it was purchased by The Brantley Coile Company {{as part of the}} purchase of Coraid's <b>software</b> <b>copyrights,</b> trademarks and trade secrets in May 2015.|$|E
5000|$|Brand's {{attribution}} of will to an abstract human construct (information) {{has been adopted}} within {{a branch of the}} cyberpunk movement, whose members espouse a particular political (anarchist) viewpoint. The construction of the statement takes its meaning beyond the simple judgmental observation, [...] "Information should be free" [...] by acknowledging that the internal force or entelechy of information and knowledge makes it essentially incompatible with notions of proprietary <b>software,</b> <b>copyrights,</b> patents, subscription services, etc. They believe that information is dynamic, ever-growing and evolving and cannot be contained within (any) ideological structure.|$|E
5000|$|The Napster file trading <b>software</b> <b>copyright</b> {{infringement}} appeal.|$|R
50|$|<b>Software</b> <b>copyright</b> is the {{extension}} of copyright law to machine-readable software. While many of the legal principles and policy debates concerning <b>software</b> <b>copyright</b> have close parallels in other domains of copyright law, {{there are a number}} of distinctive issues that arise with software. This article will primarily focus on topics particular to software.|$|R
5000|$|Other rights: i.e. other rights {{enjoyed by}} the <b>software</b> <b>copyright</b> owner.|$|R
50|$|Shanghai-Branch Information Technology Co., Ltd. (MXCHIP) is a {{focus on}} {{embedded}} wireless module products and Internet companies, the company has more than 20 <b>software</b> <b>copyrights</b> and patents in wireless networking protocols and RF technology, in {{the years of the}} development process, and the world's top semiconductor manufacturers Broadcom, STMicroelectronics, Foxconn, and so close to launch a series of embedded Wi-Fi, ZigBee, BTLE, NFC and other products for networking applications to provide a complete short-range wireless network access solutions, at present, product has been successfully applied to bulk white goods, telemedicine, smart grid, intelligent transportation and other fields, and services customers worldwide up to more than 800.|$|E
5000|$|... 1995 and 1996 were {{profitable}} {{years for}} Safari {{with the success}} of publishing such titles as Highway Hunter and Seek and Destroy coupled with the shareware model and advertising provided by Epic MegaGames. In 1997, Epic MegaGames bought out Safari entirely absorbing their publishing facilities into the company. Several more popular titles published by Safari continued to be sold via the rebranded Safari Software on the Epic Games website; however, in 2001, due to limited demand, Epic stopped selling them directly. Epic Classics http://www.epicclassics.com, a division of Epic Games, still sells Seek and Destroy. All <b>software</b> <b>copyrights</b> of games published by Safari are still held by Epic Games.|$|E
50|$|There is {{a plethora}} of {{websites}} which allow small creators or indies to 'borrow' assets to implement them in-game. The model of granting access and permission to use these assets differs across websites and can range from an upfront payment to a portion of profits (if the assets are used commercially). This {{is not an issue}} with large Video game publishers like EA, Activision, Sony etc. but when these self-contained companies create large and detailed worlds, most assets they create end up being one-time use, creating a limited public (and in turn privately available) pool of resources/assets and if some other company wants to use the same assets, they have to be created again, wasting skills and time, but this is a standard complaint across <b>software</b> <b>copyrights</b> (as source code is usually not given out to the public).|$|E
2500|$|An {{article on}} <b>software</b> <b>copyright</b> law that {{discusses}} the [...] "Open Letter to Hobbyists".|$|R
5000|$|Vault Corp. v. Quaid Software Ltd., a 1988 case on {{the extent}} of <b>software</b> <b>copyright</b> ...|$|R
40|$|Protecting <b>{{software}}</b> <b>copyright</b> {{has been}} an issue since the late 1970 ’s, and software license validation has been a primary method employed {{in an attempt to}} minimise software piracy and protect <b>software</b> <b>copyright.</b> This paper presents a novel method for decentralised peer-to-peer software license validation using cryptocurrency blockchain technology to ameliorate software piracy, and to provide a mechanism for all software developers to protect their copyrighted works...|$|R
40|$|Refereed papers {{submitted}} {{but not yet}} published: 0 • Refereed papers published: 6 • Unrefereed {{reports and}} articles: 0 • Books or parts thereof submitted but not yet published: 0 • Books or parts thereof published: 1 • Patents filed but not yet granted: 0 • Patents granted (include <b>software</b> <b>copyrights)</b> :...|$|E
40|$|Clouds are on {{the horizon}} for <b>software</b> <b>copyrights.</b> The open source {{movement}} is actively trying to turn copyright into “copyleft. ” Courts {{around the world are}} reshaping the first sale doctrine, notably the European Court of Justice in UsedSoft v. Oracle not to mention the United States Court of Appeals for the Ninth Circuit in Autodesk v. Vernor. Software manufacturers are fleeing from distribution models toward service models—into the cloud. A perfect storm for <b>software</b> <b>copyrights</b> is brewing. The cloud promises to enable software publishers to place their code outside both the framework of copyright exhaustion under the first sale doctrine and the “distribution trigger” in open source code license terms. Users’ inability, in the cloud context, to directly access the underlying software threatens to exert various side effects, notably affecting software interoperability. New kids on the block lose the ability to reverse engineer hosted software. Established platform providers gain the ability to prevent interoperability, based on laws prohibiting interference with computers and technical protection measures. These developments risk upsetting the delicate balance between exclusive rights for copyright owners and access privileges for the public—a balance that courts and legislatures have carefully established over the years—in order to foster creativity and innovation. With unprecedented pressure on traditional distribution models, how will copyright law cope? In our Article, we attempt to illuminate the immediate path ahead, discuss possible answers, and pose more questions...|$|E
40|$|Government Code Section 3543. 1 (b) 1. 0 The District {{owns and}} {{operates}} computer and electronic communication systems that support the District’s mission of providing instruction and support services to students. Employees and students who use District computers and networks and the information they contain, and related resources, {{have a responsibility to}} not abuse those resources and to respect the rights of others. The Chancellor shall establish procedures that provide guidelines to students and staff for the appropriate use of information technologies. The procedures shall include that users must respect <b>software</b> <b>copyrights</b> and licenses, respect the integrity of computer-based information resources, refrain from seeking to gai...|$|E
50|$|The {{association}} {{published a}} range of auditing tools and provided information on <b>software</b> <b>copyright</b> and license compliancy.|$|R
5000|$|The AFL {{makes clear}} what {{software}} is being licensed by including a statement following the <b>software's</b> <b>copyright</b> notice; ...|$|R
50|$|The POSAR test, a {{recently}} devised forensic procedure for establishing <b>software</b> <b>copyright</b> infringement cases, {{is an extension}} or an enhancement of the AFC test. POSAR, with its added features and additional facilities, offers something more to the legal and the judicial domain than what the AFC test offers. These additional features and facilities make the test {{more sensitive to the}} technical and legal requirements of <b>software</b> <b>copyright</b> infringement.|$|R
40|$|Most {{software}} developers do not oppose all <b>software</b> <b>copyrights.</b> There is broad support for basic copyright protection of computer programs which prohibits directly copying computer programs without the author 2 ̆ 7 s permission. Nearly all commercial software is copyrighted, and most programmers agree that such protection {{is necessary in}} order for software development to be profitable. However, software patents and 2 ̆ 2 look and feel 2 ̆ 2 copyrights go well beyond this to prohibit other programmers from independently writing even programs {{that are similar to}} the protected program. Such constraints are strongly resented by many in the software development community who long for the good old days when they were free to write whatever programs they wanted without fear of lawsuits...|$|E
40|$|The {{widespread}} use of the Internet makes software piracy and unauthorized modification easier and more frequent. Among the many techniques developed for protecting <b>software</b> <b>copyrights</b> is software watermarking which embeds secret messages into software to identify its owners and developers. While digital watermarking for media such as video, audio, and text is a popular research field, software watermarking is still a relatively new scientific area. The key concepts in software watermarking are informal; some are even confusing. Formalizing these fundamental terms would facilitate the research in this field. In this paper, we formally define the following concepts involved in embedding watermarks into and extracting watermarks from a program in software watermarking: embedding, set of candidate watermarks, representative set, representative degree, extracting, extractability, blindly extractability, and representative extracting. Through the concepts of the representative sets and the representative degree of an embedding algorithm and a program, we characterize the intrinsic property of an extractable embedding algorithm for software watermarking. Furthermore, {{the concept of the}} representative extracting algorithm is used to show the best thing we can get for a general software watermarking embedding algorithm...|$|E
40|$|Due to the {{widespread}} software copyright violations (piracy, reverse engineering and tampering), significant {{efforts have been}} made to protect applications from host attacks. With the advent of open operating systems like Linux, it is has become even easier for adversaries to hack the OS and inflict such attacks. As a result, it is becoming increasingly difficult to trust OS for protecting <b>software</b> <b>copyrights.</b> Recently, an eXecution Only Memory (XOM) architecture has been proposed to support copy and tamper resistant software, where the program and data are stored in encrypted format outside the CPU boundary and decrypted just before being executed by the CPU. XOM uses a memory integrity verification scheme that can protect it against spoofing and splicing attacks but cannot protect it against replay attacks. In this report, we present an efficient memory-integrity verification scheme called Dynamic-Trees (or D-Trees), which eliminates these kinds of attacks and provides an efficient implementation. Dtrees create a recursive tree structure with multiple root nodes and eliminates many short-comings (higher latency for updates and limited arity) in Merkle trees. This report also presents a brief survey of existing schemes proposed to improve Merkle trees and their relative advantages and disadvantages...|$|E
40|$|Bhattathiripad, Vinod Polpaya. (2014). Judiciary-Friendly Forensics of <b>Software</b> <b>Copyright</b> Infringement. Hershey, PA: IGI Global, 273 pages. ISBN: 978 - 1466658042. Print/e-book: US $ 195. 90. Each chapter: US$ 37. 50. Reviewed by Pedro Luís Próspero Sanchez, University of Sao Paulo Judiciary-Friendly Forensics of <b>Software</b> <b>Copyright</b> Infringement {{is a book}} by Dr. Vinod Polpaya Bhattathiripad, {{published}} by IGI-Global {{as part of its}} Research Essentials series. The book discusses the forensics of <b>software</b> <b>copyright</b> infringement and highlights theoretical, functional, and procedural matters in the investigation of <b>copyright</b> infringement of <b>software</b> products, as well as the development of forensic technologies to detect and avoid software piracy. It is of interest to software forensic experts, lawyers in the field of <b>copyright</b> infringement, judges, <b>software</b> professionals, and students...|$|R
50|$|Article 3 This {{regulation}} is applicable to registration of <b>software</b> <b>copyright,</b> exclusive license contract, {{as well as}} transfer contract.|$|R
5000|$|... 5. Served as {{tangible}} income if corporation {{goes into}} bankruptcyCopyright is considered as “invisible asset”, and the invisible asset will not disappear when corporation goes into bankruptcy, the vitality {{and value of}} invisible asset is still in existence, and tangible fund be obtain {{in the process of}} transference or auction.According to regulation of computer <b>software</b> <b>copyright</b> registration: the time for registration of a <b>software</b> <b>copyright</b> refers to the 30 working days after the receipt date.|$|R
40|$|The {{violation}} {{of intellectual property}} rights (IPR) is a transnational economic and legal problem. This problem could have a solution path when we solve the question: ¿why there is {{violation of}} IPR? The main target {{of this paper is}} to solve the last question applied to IPR in Latin- America. In order to solve the question the author analyses how has evolved the economic theory of IPR violation showing that the traditional market variables do not fulfill the ways to explain the violation of IPR. That is why the author proposes that it is necessary to include in the economic explanation model the educational, cultural and institutional context which has not been taken in to account in order to build a coherent exposition of the problem. As a development of the theory, the author apply his theoretical assumption to the <b>software</b> <b>copyrights.</b> Then, the author demonstrates econometrically that it’s possible to build an alternative model to explain software piracy taking in to account the educational, cultural and institutional context. The results suggest that education, culture and institutions matter in the development of IPR protection policy, therefore the design of a country’s economic and legal policy must be subject to it’s educational, cultural and institutional context. law and economics, intellectual property, violation, culture, education, software,...|$|E
40|$|Synthetic {{biologists}} {{aim to make}} biology a true engineering discipline. In {{the same}} way that electrical engineers rely on standard capacitors and resistors, or computer programmers rely on modular blocks of code, synthetic biologists wish to create an array of modular biological parts that can be readily synthesized and mixed together in different combinations. Synthetic biology has already produced important results, including more accurate AIDS tests and the possibility of unlimited supplies of previously scarce drugs for malaria. Proponents hope to use synthetic organisms to produce not only medically relevant chemicals but also a large variety of industrial materials, including ecologically friendly biofuels such as hydrogen and ethanol. The relationship of synthetic biology to intellectual property law has, however, been largely unexplored. Two key issues deserve further attention. First, synthetic biology, which operates at the confluence of biotechnology and computation, presents a particularly revealing example of a difficulty that the law has frequently faced over the last 30 years – the assimilation of a new technology into the conceptual limits around existing intellectual property rights, with possible damage to both in the process. There is reason to fear that tendencies {{in the way that the}} law has handled software on the one hand and biotechnology on the other could come together in a 2 ̆ 2 perfect storm 2 ̆ 2 that will impede the potential of the technology. Second, synthetic biology raises with remarkable clarity an issue that has seemed of only theoretical interest until now. It points out a tension between different methods of creating 2 ̆ 2 openness 2 ̆ 2. On the one hand, we have intellectual property law 2 ̆ 7 s insistence that certain types of material remain in the public domain, outside the world of property. On the other, we have the attempt by individuals to use intellectual property rights to create a 2 ̆ 2 commons, 2 ̆ 2 just as developers of free and open source software use the leverage of <b>software</b> <b>copyrights</b> to impose requirements of openness on future programmers, requirements greater than those attaching to a public domain work...|$|E
50|$|He use {{to write}} and give {{conferences}} about commons theory, peer production, open education, free <b>software,</b> <b>copyright</b> law and access to knowledge both in Spanish and English.|$|R
50|$|Article 27 The {{contents}} of software registration announcement includes:1. Registration of software copyright;2. Registered items on <b>software</b> <b>copyright</b> contract;3. Information on invoke of software registration;4. Other items.|$|R
50|$|Sungale is an {{innovative}} company, and it possesses 31 patents and <b>software</b> <b>copyright</b> in digital technology. It seems {{that every year}} the company is introducing new products.|$|R
50|$|The Broderbund v. Unison (1986) {{case was}} an early <b>software</b> <b>copyright</b> case that {{attempted}} to apply U.S. copyright law to {{the look and feel}} presented by a software product.|$|R
