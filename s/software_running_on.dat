835|10000|Public
25|$|Slice is {{a digital}} media player which also uses a Compute Module as its heart. It was crowd-funded in an August 2014 Kickstarter campaign. The <b>software</b> <b>running</b> <b>on</b> Slice {{is based on}} Kodi.|$|E
25|$|A {{computer}} being secure {{depends on}} a number of technologies working properly. A modern operating system provides access to a number of resources, which are available to <b>software</b> <b>running</b> <b>on</b> the system, and to external devices like networks via the kernel.|$|E
25|$|In many languages, {{words can}} appear in many {{different}} forms, but only the undeclined or unconjugated form appears as the headword in most dictionaries. Dictionaries are most commonly found {{in the form of}} a book, but some newer dictionaries, like StarDict and the New Oxford American Dictionary are dictionary <b>software</b> <b>running</b> <b>on</b> PDAs or computers. There are also many online dictionaries accessible via the Internet.|$|E
30|$|Each node of the DFG {{represents}} a specific {{task in the}} application. For each task there can be up to three different implementations: Hardware implementations (HW) placed in the FPGA, <b>Software</b> implementations <b>running</b> <b>on</b> the master processor (MS), and another <b>Software</b> implementation <b>running</b> <b>on</b> the slave processor (SL).|$|R
30|$|WiMAX Demodulator: WiMAX IQSignal <b>software</b> {{application}} <b>running</b> <b>on</b> {{a stand-alone}} pc.|$|R
5000|$|Polygon Cruncher <b>software</b> is <b>running</b> <b>on</b> Windows {{operating}} system. It {{is available}} as a plugin for: ...|$|R
25|$|IoT {{suffers from}} {{platform}} fragmentation {{and lack of}} technical standards {{a situation where the}} variety of IoT devices, in terms of both hardware variations and differences in the <b>software</b> <b>running</b> <b>on</b> them, makes the task of developing applications that work consistently between different inconsistent technology ecosystems hard. Customers may be hesitant to bet their IoT future on a proprietary software or hardware devices that uses proprietary protocols that may fade or become difficult to customize and interconnect.|$|E
25|$|Apple did {{not develop}} the iPod {{software}} entirely in-house, instead using PortalPlayer's reference platform {{based on two}} ARM cores. The platform had rudimentary <b>software</b> <b>running</b> <b>on</b> a commercial microkernel embedded operating system. PortalPlayer had previously been working on an IBM-branded MP3 player with Bluetooth headphones. Apple contracted another company, Pixo, to help design and implement the user interface under the direct supervision of Steve Jobs. As development progressed, Apple continued to refine the software's look and feel. Starting with the iPod Mini, the Chicago font was replaced with Espy Sans. Later iPods switched fonts again to Podium Sans—a font similar to Apple's corporate font, Myriad. Color display iPods then adopted some Mac OS X themes like Aqua progress bars, and brushed metal meant to evoke a combination lock. In 2007, Apple modified the iPod interface again {{with the introduction of}} the sixth-generation iPod Classic and third-generation iPod Nano by changing the font to Helvetica and, in most cases, splitting the screen in half by displaying the menus on the left and album artwork, photos, or videos on the right (whichever was appropriate for the selected item).|$|E
25|$|Kernel-mode {{rootkits}} {{run with}} the highest operating system privileges (Ring 0) by adding code or replacing portions of the core operating system, including both the kernel and associated device drivers. Most operating systems support kernel-mode device drivers, which execute with the same privileges as the operating system itself. As such, many kernel-mode rootkits are developed as device drivers or loadable modules, such as loadable kernel modules in Linux or device drivers in Microsoft Windows. This class of rootkit has unrestricted security access, but {{is more difficult to}} write. The complexity makes bugs common, and any bugs in code operating at the kernel level may seriously impact system stability, leading to discovery of the rootkit. One of the first widely known kernel rootkits was developed for Windows NT 4.0 and released in Phrack magazine in 1999 by Greg Hoglund. Kernel rootkits can be especially difficult to detect and remove because they operate at the same security level as the operating system itself, and are thus able to intercept or subvert the most trusted operating system operations. Any software, such as antivirus <b>software,</b> <b>running</b> <b>on</b> the compromised system is equally vulnerable. In this situation, no part of the system can be trusted.|$|E
50|$|<b>Software</b> {{applications}} <b>running</b> <b>on</b> desktops, corporate servers, mobile {{devices and}} embedded devices are all {{at risk from}} subversion.|$|R
5000|$|Openmoko: A {{complete}} Open Source Cell phone <b>software</b> stack <b>running</b> <b>on</b> open hardware. FIC is manufacturing {{the first}} OpenMoko phone.|$|R
30|$|In this section, the {{proposed}} method is presented {{and applied to}} evaluating <b>software</b> applications <b>running</b> <b>on</b> the NXP LPC 2106, an ARM 7 TDMI-S-based architecture [19].|$|R
500|$|The {{animation}} in South Park: Bigger, Longer & Uncut {{was created}} in 3D using Alias|Wavefront (now the Alias Systems Corporation) PowerAnimator <b>software,</b> <b>running</b> <b>on</b> Silicon Graphics O2 and Octane workstations. Characters and individual scene elements were designed with both texture mapping and shading that, when rendered, resemble 2D paper cut-out stop-motion animation. The artists at South Park Studios (at the time, called South Park Productions) used a multiprocessor SGI Origin 2000 and 31 multiprocessor Origin 200 servers (with 1.14 terabytes of storage) for both rendering and asset management. Backgrounds, characters and other items could be saved separately or as fully composited scenes, with speedy access later. [...] "By creating flat characters and backgrounds in a 3D environment, {{we are able to}} add textures and lighting effects that give the film a cut-out construction paper stop-motion style which would have taken many more months if done traditionally," [...] said Gina Shay, line producer of the film. The animation team, beginning with season five, began using Maya instead of PowerAnimator. The studio now runs a 120-processor render farm that can produce 30 or more shots an hour. As the show's visual quality has substantially improved in recent seasons, the animation of South Park: Bigger, Longer, & Uncut {{is a prime example of}} the show's old, cruder, even more primitive animation style. In the audio commentary on the 2009 Blu-ray reissue of the film, Stone and Parker take ample time to criticize how [...] "bad and time consuming" [...] the animation was during the era. IGN described the animation as [...] "fall somewhere within the middle ground—not quite cardboard cutouts, but not quite fully computerized either." [...] Nate Boss, in a review of the Blu-ray reissue for High-Def Digest, commented, [...] "There is no comparing the two, as the movie has a classic (for South Park, at least) animated feel, so full of the cut-outs we have grown to love, while the newer seasons sport a more computer processed feel." [...] The film, unlike the television series (at the time), was animated in widescreen (...) [...] [...] "Although the 'primitive' animation of South Park is supposedly a joke, it's really a secret weapon," [...] said [...] Stephanie Zacharek of Salon. [...] "The simplicity of Parker and Stone's technique is what makes it so effective." ...|$|E
2500|$|On {{top of the}} Linux kernel, {{there are}} the middleware, {{libraries}} and APIs written in C, and application <b>software</b> <b>running</b> <b>on</b> an application framework which includes Java-compatible libraries. [...] Development of the Linux kernel continues independently of other Android's source code bases.|$|E
2500|$|On September 13, 2006, Felten and {{graduate}} students Ariel Feldman and Alex Halderman discovered severe security flaws in a Diebold Election Systems (now Premier Election Solutions) voting machine. Their findings claimed, [...] "Malicious <b>software</b> <b>running</b> <b>on</b> a single voting machine can steal votes with little if any risk of detection. The malicious software can modify all of the records, audit logs, and counters kept by the voting machine, so that even careful forensic examination of these records will find nothing amiss." ...|$|E
50|$|SimulationX is a CAE <b>software</b> {{application}} <b>running</b> <b>on</b> Microsoft Windows for {{the physical}} simulation of technical systems developed and sold by ESI ITI GmbH in Dresden, Germany.|$|R
5000|$|... #Caption: Screenshot of {{the open}} source ClamWin {{antivirus}} <b>software</b> <b>running</b> in Wine <b>on</b> Ubuntu Linux ...|$|R
50|$|Sometimes, these {{techniques}} are mixed. For example, a VPN appliance might contain a limited access <b>software</b> firewall <b>running</b> <b>on</b> Linux, with an encryption ASIC {{to speed up}} VPN access.|$|R
2500|$|The {{relationship}} between Android and Chrome OS became more substantial at Google I/O 2014, where developers presented a demo demonstrating native Android <b>software</b> <b>running</b> <b>on</b> Chrome OS through a Native Client. In October 2015, The Wall Street Journal reported that Chrome OS would be folded into Android {{so that a}} single OS would result by 2017. The resulting OS will be Android, {{but it will be}} expanded to run on laptops. Google responded that while the company has [...] "been working on ways to bring together the best of both operating systems, there's no plan to phase out Chrome OS." ...|$|E
2500|$|The Privacy Policy lists {{many types}} of {{information}} they collect and store, including other <b>software</b> <b>running</b> <b>on</b> a user's computer ("programs installed or in use"). Malwarebytes says they collect [...] "name, email address, mailing address, or phone number... company name, company size, business type... Internet protocol (IP) addresses, browser type, Internet service provider (ISP), referring/exit pages, the files viewed on our site ... operating system, date/time stamp, and/or clickstream data ... type of device you use, operating system version, and the unique device identifier... language... 32- or 64-bit... Information from the Windows Security/Action Center, including security settings and programs installed or in use... license... If it represents a console system, the number of seats being managed by that installation of the console Endpoint domain information... organization to which the IP address is licensed, if any".|$|E
2500|$|Android {{has another}} {{operating}} system, Trusty OS, within it, {{as a part}} of [...] "Trusty" [...] "software components supporting a Trusted Execution Environment (TEE) on mobile devices." [...] "Trusty and the Trusty API are subject to change. [...] Applications for the Trusty OS can be written in C/C++ (C++ support is limited), and they have access to a small C library. [...] All Trusty applications are single-threaded; multithreading in Trusty userspace currently is unsupported. [...] Third-party application development is not supported in" [...] the current version, and <b>software</b> <b>running</b> <b>on</b> the OS and processor for it, run the [...] "DRM framework for protected content. [...] There are many other uses for a TEE such as mobile payments, secure banking, full-disk encryption, multi-factor authentication, device reset protection, replay-protected persistent storage, wireless display ("cast") of protected content, secure PIN and fingerprint processing, and even malware detection." ...|$|E
50|$|While {{historically}} Pivotal CRM {{is primarily}} implemented as <b>software</b> product <b>running</b> <b>on</b> customer premises, {{it was later}} marketed as software as a service, on Microsoft Azure and Amazon Web Services.|$|R
50|$|Freescale has a {{range of}} {{partners}} providing real-time operating systems and <b>software</b> solutions <b>running</b> <b>on</b> the i.MX processors, such as Trinity Convergence, Adeneo, Thundersoft, Intrinsyc, Wind River Systems, QNX, Green Hills and Mentor Graphics.|$|R
50|$|The FluidFS <b>software</b> layer <b>running</b> <b>on</b> the NAS Appliance {{creates a}} single name-space to the users, {{offering}} access via Server Message Block (SMB) and Network File System (NFS). It also includes features to prevent data-loss or corruption and uses caching to increase performance.|$|R
2500|$|Android has {{suffered}} from [...] "fragmentation", {{a situation where the}} variety of Android devices, in terms of both hardware variations and differences in the <b>software</b> <b>running</b> <b>on</b> them, makes the task of developing applications that work consistently across the ecosystem harder than rival platforms such as iOS where hardware and software varies less. For example, according to data from OpenSignal in July 2013, there were 11,868 models of Android device, numerous different screen sizes and eight Android OS versions simultaneously in use, while the large majority of iOS users have upgraded to the latest iteration of that OS. Critics such as Apple Insider have asserted that fragmentation via hardware and software pushed Android's growth through large volumes of low end, budget-priced devices running older versions of Android. They maintain this forces Android developers to write for the [...] "lowest common denominator" [...] to reach as many users as possible, who have too little incentive {{to make use of the}} latest hardware or software features only available on a smaller percentage of devices. However, OpenSignal, who develops both Android and iOS apps, concluded that although fragmentation can make development trickier, Android's wider global reach also increases the potential reward.|$|E
50|$|In 1975, BBN {{introduced}} IMP <b>software</b> <b>running</b> <b>on</b> the Pluribus multi-processor. These {{appeared in}} a few sites. In 1981, BBN introduced IMP <b>software</b> <b>running</b> <b>on</b> its own C/30 processor product.|$|E
5000|$|NCS/1 network control <b>software</b> <b>running</b> <b>on</b> a Sun Microsystems {{computer}} ...|$|E
50|$|An insider may {{attempt to}} steal {{property}} or information for personal gain, or to benefit another organization or country. The {{threat to the}} organization could also be through malicious <b>software</b> left <b>running</b> <b>on</b> its computer systems by former employees, a so-called Logic bomb.|$|R
5000|$|Some {{authorities}} (e.g. the U.S. Federal Communications Commission (FCC)) {{require that}} the entire <b>software</b> stack <b>running</b> <b>on</b> a device which communicates with the cellular network must be certified. Separating the BP into a different component allows reusing them without having to certify the full AP.|$|R
40|$|A logic-based {{computer}} control system is in development at CEBAF. This Unix/C language <b>software</b> package, <b>running</b> <b>on</b> a distributed, hierarchical system of workstation and supervisory minicomputers, interfaces to hardware via CAMAC. Software aspects to be covered are ladder logic, interactive database generation, networking, and graphic user interfaces...|$|R
5000|$|... #Subtitle level 3: Using Android <b>software</b> <b>running</b> <b>on</b> Sailfish OS ...|$|E
5000|$|Home brew robot <b>software</b> <b>running</b> <b>on</b> the {{consumer}} robotic platform Spykee ...|$|E
5000|$|... #Caption: A {{screenshot}} of Mixxx DJ <b>software</b> <b>running</b> <b>on</b> Mac OS X ...|$|E
30|$|Server and hardware: We use {{the same}} amount of {{physical}} energy analyzers as in scenario A. The GridVis <b>software</b> is <b>running</b> <b>on</b> the server of EI and saves the grid data in a MYSQL database on the same server. The test application, which requests data over the RESTful web service, is <b>running</b> <b>on</b> the Server of IM.|$|R
5000|$|The SIDcog is a <b>software</b> SID {{emulator}} <b>running</b> <b>on</b> the Parallax Propeller. All three channels can be emulated {{on one of}} the Propeller's eight COG's.|$|R
50|$|Example uses {{include a}} company that might prevent a list of <b>software</b> from <b>running</b> <b>on</b> its network, a school that might prevent access {{to a list of}} web sites from its computers, or a {{business}} that wants to ensure their computer users are not choosing easily guessed, poor passwords.|$|R
