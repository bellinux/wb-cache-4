3|8637|Public
50|$|SECS-II {{messages}} are sent as structured binary data. It {{is a very}} efficient means to package information across a network without wasting bandwidth. When using the SECS-I standard, RS-232 serial communication, the message size is limited to 7995148 bytes (about 8 MB). When using the HSMS standard, TCP/IP network communication, the maximum message size is limited to 4294967295 bytes (about 4.3 GB). The structure of each standard SECS-II message {{is defined by the}} SEMI E5 SECS-II standard. A message can be a <b>simple</b> <b>data</b> <b>element,</b> such as a binary response or an ASCII string. A message can also be a complex list structure with multiple levels of lists in the hierarchy. The SECS-II standard limits a single element within a SECS-II message to 16777215 bytes (about 16.5 MB).|$|E
40|$|A basic {{element in}} a society's {{information}} infrastructure is a well-formed system of addresses and corresponding high-quality address data, pinpointing and labeling in human language all locations where people live, work, shop etc. Using properly geo-referenced address data, every citizen, enterprise, institution or public authority {{will be able}} to "twist " their own address-related data from tabular data into spatial information. The potential of a <b>simple</b> <b>data</b> <b>element</b> that can release this "spatial power " is enormous, because thousands of private and public databases and base registers have reference to address information. This paper is based on the experiences of work on standardization, datamodeling, legislation and geo-coding in the field of address data in Denmark and in the other Nordic countries. In these countries, the system of addresses and address data are developed on the basis of public street gazetteers, property and building registers, and detailed base maps. Here, {{as well as in the}} UK and in a number of other European countries, addresses are basically represented as individual, geo-referenced points, as "roof-top " or "doorstep” addresses. Even though the situation in the United States is somewhat different, we believe that a general lesson could be taken from our experiences, considerations and proposals. We will discuss the properties and characteristics of the “address " as a common spatial and administrative object which must play a key role in today's "Spatial Information Society". We will argue for the need of a consistent data model that puts the address entity (or object) in focus, whenever we manage address data or address-related data. Futhermore we will demonstrate the advantages and drawbacks of the “roof-top ” address approach. 1. Characteristics of the address as a reference system In the geographical world you distinguish between reference systems based on co-ordinates and reference systems based on identifiers. Addresses belong in the last category, which means that for instance the address “Rentemestervej 8, DK 2400 Copenhagen” identifies a particular (more or less well-defined) location without use of geographical coordinates...|$|E
40|$|It {{is widely}} {{accepted}} that the address issue {{is of great}} importance {{in the world of}} Geographic Information (GI). Experience shows that the availability of full cover address data of a reasonable quality is often the key element that can “open up the world of GI”. Using properly geo-referenced address data, every citizen, enterprise, institution or public authority will be able to "twist " their own address-related data from simple tabular data into multidimensional, spatial information. As thousands of private and public databases and registers carry references to address information, the potential of a <b>simple</b> <b>data</b> <b>element</b> that can release this "spatial superpower", is enormous. A well-formed, public address system contributes to the physical infrastructure of a modern society, enabling ordinary people, postal services, rescue teams and utility companies etc. to navigate without coordinates. Proper address data can- likewise- contribute to the information infrastructure, pinpointing and labeling, in human language, all locations where people live, work, shop, entertain and educate themselves. Public address data is in many countries seen as a natural part of society’s core data, on which a more sophisticated spatial infrastructure can be built. Summary Section one of this paper describes the particular properties which characterize the address and the address system as a spatial reference system. The use of addresses as administrative keys in public administration in Denmark will be covered as a case story. Section two will discuss the need for a consistent data model, when public authorities as well as private enterprises are managing address data, as well present some considerations and suggestions on how to model the address on a conceptual level. Section three will illustrate different methods of using addresses as georeferences in a geographic information system (GIS). Finally, section four will sum up some of the requirements which a modern society must meet in the management of addresses and address data to accumulate the greatest possible benefit. 1. Characteristics of the address as a reference system In the geographical world you distinguish between reference systems based on coordinates an...|$|E
30|$|When {{publishing}} data, it {{is important}} to use structured representations wherever possible, rather than free-text fields. This is so users - including applications - can understand the data semantically and take decisions based upon it. Some seemingly <b>simple</b> <b>data</b> <b>elements</b> - such as “opening hours” for a museum - can be surprisingly complex. Free-text will be difficult for an application to understand - and can easily be language-dependent (for instance days of the week) in ways that can defeat multi-language applications and users.|$|R
5000|$|The {{data model}} also {{specifies}} the value space and datatype {{for each of}} the <b>simple</b> <b>data</b> <b>elements.</b> The value space defines the restrictions, if any, on the data that can be entered for that element. For many elements, the value space allows any string of Unicode character to be entered, whereas other elements entries must be drawn from a declared list (i.e. a controlled vocabulary) or must be in a specified format (e.g. date and language codes). Some element datatypes simply allow a string of characters to be entered, and others comprise two parts, as described below: ...|$|R
40|$|In {{information}} visualization, as {{the volume}} {{and complexity of the}} data increases, researchers require more powerful visualization tools that enable them to more effectively explore multidimensional datasets. In this paper, we discuss the general utility of a novel visualization spreadsheet framework. Just as a numerical spreadsheet enables exploration of numbers, a visualization spreadsheet enables exploration of visual forms of information. We show that the spreadsheet approach facilitates certain information visualization tasks that are more difficult using other approaches. Unlike traditional spreadsheets, which store only <b>simple</b> <b>data</b> <b>elements</b> and formulas in each cell, a visualization spreadsheetcell canhold an entire complex data set, selection criteria, viewing specifications, and other information needed for a full-fledged information visualization. Similarly, inter-cell operations are far more complex, stretching beyond simple arithmetic and string operations to encompass a ran [...] ...|$|R
40|$|Abstract—Current {{methods for}} annotating {{biomedical}} data resources rely on <b>simple</b> mappings between <b>data</b> <b>elements</b> and {{the contents of}} a variety of biomedical ontologies and controlled vocabularies. Here we point out that such simple mappings are inadequate for large-scale multiscale, multidomain integrative “virtual human” projects. For such integrative challenges, we describe a “composite annotation” schema that is simple yet sufficiently extensible for mapping the biomedical content of a variety of data sources and biosimulation models to available biomedical ontologies...|$|R
40|$|The authors {{consider}} {{the description of}} a systolic algorithm to solve the connected-component problem. It is executed in a ring topology with N processors, requiring O(Nlog N) time {{without regard to the}} graph's sparsity. The algorithm-partitioning issue is also addressed, indicating how to optimally map the computations into fixed-size rings or linear arrays. The proposed algorithm leads to <b>simple</b> processing <b>elements,</b> <b>data</b> addressing, and control. These points make the systolic array highly implementable. Peer ReviewedPostprint (published version...|$|R
40|$|The {{objective}} {{behind the}} Twin Sort technique is to sort {{the list of}} unordered <b>data</b> <b>elements</b> efficiently and to allow efficient and <b>simple</b> arrangement of <b>data</b> <b>elements</b> within the <b>data</b> structure with optimization of comparisons and iterations in the sorting method. This sorting technique effectively terminates the iterations {{when there is no}} need of comparison if the elements are all sorted in between the iterations. Unlike Quick sort, Merge sorting technique, this new sorting technique is based on the iterative method of sorting <b>elements</b> within the <b>data</b> structure. So it will be advantageous for optimization of iterations when {{there is no need for}} sorting elements. Finally, the Twin Sort technique is more efficient and simple method of arranging <b>elements</b> within a <b>data</b> structure and it is easy to implement when comparing to the other sorting technique. By the introduction of optimization of comparison and iterations, it will never allow the arranging task on the ordered elements. Comment: core computer algorithm, 3 pages, conferenc...|$|R
40|$|We use a power {{expansion}} {{representation of}} plane elasticity complex potentials due to Kolossov and Muskhelishvili, {{to compute the}} elastic fields induced by a localized plastic deformation event. Far from its center, the dominant contributions correspond to first order singularities of quadrupolar and dipolar symmetry which can be associated respectively to pure deviatoric and pure volumetric plastic strain of an equivalent circular inclusion. Constructing holomorphic functions from the displacement field and its derivatives, {{it is possible to}} define path independent Cauchy integrals which capture the amplitudes of these singularities. Analytical expressions and numerical tests on <b>simple</b> finite <b>element</b> <b>data</b> are presented. The development of such numerical tools is of direct interest for the identification of local structural reorganizations which are believed to be the key mechanisms for plasticity of amorphous materials...|$|R
50|$|In data {{management}} and database analysis, a data domain refers {{to all the}} values which a <b>data</b> <b>element</b> may contain. The rule for determining the domain boundary may be as <b>simple</b> as a <b>data</b> type with an enumerated list of values.|$|R
5000|$|The {{component}} <b>data</b> <b>element</b> separator and <b>data</b> <b>element</b> separator are the [...] "first level" [...] and [...] "second level" [...] separators of <b>data</b> <b>elements</b> {{within a}} message segment. Referring {{to them as}} + and : for brevity, the + separates top-level or composite <b>data</b> <b>elements,</b> and : separates second-level <b>data</b> <b>elements</b> nested within composite <b>data</b> <b>elements.</b> Trailing empty (or null) <b>data</b> <b>elements</b> and their leading separators are omitted to reduce message size.|$|R
50|$|Part 7 {{provides}} RDF mappings of {{the different}} MLR entities introduced in the MLR framework: <b>Data</b> <b>element</b> specifications, resource classes, <b>data</b> <b>elements,</b> application profiles, MLR records and <b>data</b> <b>element</b> group specifications. It also provides an OWL 2 DL ontology for the resource classes and <b>data</b> <b>element</b> specifications.|$|R
50|$|DICOM uses three {{different}} <b>data</b> <b>element</b> encoding schemes. With explicit value representation (VR) <b>data</b> <b>elements,</b> for VRs {{that are not}} OB, OW, OF, SQ, UT, or UN, the format for each <b>data</b> <b>element</b> is: GROUP (2 bytes) ELEMENT (2 bytes) VR (2 bytes) LengthInByte (2 bytes) Data (variable length). For the other explicit <b>data</b> <b>elements</b> or implicit <b>data</b> <b>elements,</b> see section 7.1 of Part 5 of the DICOM Standard.|$|R
50|$|In metadata, a <b>data</b> <b>element</b> {{definition}} {{is a human}} readable phrase or sentence associated with a <b>data</b> <b>element</b> within a <b>data</b> dictionary that describes the meaning or semantics of a <b>data</b> <b>element.</b>|$|R
50|$|A {{semantic}} mapper processes {{on a list}} of <b>data</b> <b>elements</b> in {{the source}} namespace. The semantic mapper will successively translate the <b>data</b> <b>elements</b> from the source namespace to the destination namespace. The mapping does not necessarily need to be a one-to-one mapping. Some <b>data</b> <b>elements</b> may map to several <b>data</b> <b>elements</b> in the destination.|$|R
40|$|Figure 3 - A {{summary of}} the <b>data</b> <b>elements</b> {{mentioned}} by the different researcher types, showing which <b>data</b> <b>elements</b> researchers had in common and which were unique. This {{does not mean that}} any particular <b>data</b> <b>element</b> is not of interest to another group, only that it did not arise in the series of interviews. Details of these <b>data</b> <b>elements</b> {{can be found in the}} supplementary information. The full list of common <b>data</b> <b>elements</b> is listed in Table 2...|$|R
40|$|The {{main goal}} of this {{research}} is to determine mapping of Iran MARC <b>data</b> <b>elements</b> to Functional Requirement for Bibliographic Records (FRBR) model group one entities and attributes. FRBR group one entities are work, expression, manifestation and item and each one has special attributes. Therefore all fields and <b>data</b> <b>elements</b> of Iran MARC were examined via comparative method to the entities and attributes of the first group. In first segment a table was made and all of the <b>data</b> <b>elements</b> were mapped based on similar research conducted on MARC 21 by U. S Congress Library. Research findings showed that from the total of 1558 <b>data</b> <b>elements</b> that exist in Iran MARC, 531 <b>data</b> <b>elements</b> are manifestation, 73 <b>data</b> <b>elements</b> are Work y, 65 <b>data</b> <b>elements</b> are expression and 33 <b>data</b> <b>elements</b> are Item. Totally 702 <b>data</b> <b>elements</b> in Iran MARC(45. 05 %) have adaption capability. Among attributes of every entity, the Form of work for Work entity, language of Expression attribute for expression, Manifestation identifier attribute for Manifestation and Item identifier for item entity have the major frequency in Iran MARC structure and totally 692 <b>data</b> <b>elements</b> (44. 41 %) adopted this pattern...|$|R
40|$|An object {{tracking}} {{technique is}} provided which, given: (i) a potentially large data set; (ii) {{a set of}} dimensions along which the data has been ordered; and (iii) a set of functions for measuring the similarity between <b>data</b> <b>elements,</b> a set of objects are produced. Each of these objects is defined by a list of <b>data</b> <b>elements.</b> Each of the <b>data</b> <b>elements</b> on this list contains {{the probability that the}} <b>data</b> <b>element</b> is part of the object. The method produces these lists via an adaptive, knowledge-based search function which directs the search for high-probability <b>data</b> <b>elements.</b> This serves {{to reduce the number of}} <b>data</b> <b>element</b> combinations evaluated while preserving the most flexibility in defining the associations of <b>data</b> <b>elements</b> which comprise an object...|$|R
5000|$|... 3.3.51 <b>data</b> <b>element</b> {{representation}} classthe {{class of}} {{representation of a}} <b>data</b> <b>element</b> ...|$|R
50|$|A Representation Term may {{be thought}} of as an {{attribute}} of a <b>data</b> <b>element</b> in a metadata registry that classifies the <b>data</b> <b>element</b> according to the type of data stored in the <b>data</b> <b>element.</b>|$|R
50|$|While each <b>data</b> <b>element</b> has a {{specified}} meaning and format, the standard also includes some general purpose <b>data</b> <b>elements</b> and system- or country-specific <b>data</b> <b>elements</b> which vary enormously in use and form from implementation to implementation.|$|R
50|$|A <b>data</b> <b>element</b> {{definition}} is a required property when adding <b>data</b> <b>elements</b> to a metadata registry.|$|R
50|$|Metadata {{registries}} {{frequently have}} a formal <b>data</b> <b>element</b> submission, approval and publishing approval process. Each <b>data</b> <b>element</b> should {{be accepted by}} a data stewardship team and reviewed before <b>data</b> <b>elements</b> are published. After publication change control processes should be used.|$|R
50|$|Note that a {{registered}} <b>data</b> <b>element</b> is any <b>data</b> <b>element</b> that already exists within a metadata registry.|$|R
5000|$|Distinct - The {{definition}} should differentiate a <b>data</b> <b>element</b> {{from other}} <b>data</b> <b>elements.</b> This process is called disambiguation.|$|R
40|$|A method, {{system and}} {{computer}} program product for supporting concurrent updates to a shared <b>data</b> <b>element</b> group while preserving group integrity on behalf {{of one or more}} readers that are concurrently referencing group <b>data</b> <b>elements</b> without using locks or atomic instructions. Two or more updaters may be invoked to generate new group <b>data</b> <b>elements.</b> Each new <b>data</b> <b>element</b> created by the same up dater is assigned a new generation number that is different than a global generation number associated with the <b>data</b> <b>element</b> group and which allows a reader of the <b>data</b> <b>element</b> group to determine whether the new <b>data</b> <b>element</b> is a correct version for the reader. The new generation numbers are different for each up dater and assigned according to an order in which the updaters respectively begin update operations. The global generation number is updated so that when all of the up daters have completed <b>data</b> <b>element</b> update processing, the global generation number will correspond to the new generation number that is associated with the last of the up daters to begin update operations...|$|R
50|$|<b>Data</b> <b>element</b> to <b>data</b> <b>element</b> mapping is {{frequently}} complicated by complex transformations that require one-to-many and many-to-one transformation rules.|$|R
5000|$|... {{is greater}} than each <b>data</b> <b>element</b> in [...] and {{less than or equal}} to each <b>data</b> <b>element</b> in [...]|$|R
40|$|Controlled medical terminologies {{that have}} been {{developed}} to describe terms utilized in the field of Radiation Oncology, include SNOMED-CT and DICOM-RT. However, a literature review has failed to provide evidence that the coverage and the level of granularity of these nomenclatures have satisfied the needs of radiation oncologists. Indeed most investigations conclude that the coverage is generally unsatisfactory. Fur-thermore, {{there is no evidence that}} an objective specification of the specialist medical terms used in Radiation Oncology has been developed. We report the development of a Specialist Medical Vocabu-lary for Radiation Oncology using an objective and systematic method of discovery of <b>data</b> <b>elements</b> published in the Radia-tion Oncology literature. The importance of the <b>data</b> <b>elements</b> to radiation oncologists is judged according to the criterion that a submitted report has been deemed worthy of publica-tion. Within the time period of discovery, 97 articles were retrieved and, during the analysis of 80 articles, 622 individual <b>data</b> <b>elements</b> and 2392 instances of use were found. Infrequent <b>data</b> <b>elements</b> comprised the majority of individual <b>data</b> <b>elements</b> (54 %), and frequently used <b>data</b> <b>elements</b> were a minority (27 individual <b>data</b> <b>elements</b> with 10 or more in-stances of use). However these 10 <b>data</b> <b>elements</b> comprised 49. 5 % of the total <b>data</b> <b>elements</b> found...|$|R
5000|$|... #Subtitle level 3: Count the Input <b>Data</b> <b>Element</b> Types, the <b>Data</b> entity Types Referenced, and the Output <b>Data</b> <b>Element</b> Types ...|$|R
50|$|The {{result of}} this is a {{catalogue}} of sorts, in which related <b>data</b> <b>element</b> concepts are grouped by a high-level concept and an object class, and <b>data</b> <b>elements</b> grouped by a shared <b>data</b> <b>element</b> concept. Strictly speaking, this is not a hierarchy, even if it resembles one.|$|R
5000|$|Universal <b>Data</b> <b>Element</b> Framework Forum - {{merged with}} Open Platform 3.0 in 2015; {{now known as}} O-DEF (Open <b>Data</b> <b>Element</b> Framework) ...|$|R
50|$|<b>Data</b> <b>elements</b> are the {{individual}} fields carrying the transaction information. There {{are up to}} 128 <b>data</b> <b>elements</b> specified in the original ISO 8583:1987 standard, and up to 192 <b>data</b> <b>elements</b> in later releases. The 1993 revision added new definitions, deleted some, while leaving the message format itself unchanged.|$|R
40|$|A {{method for}} storing a vector of process <b>data</b> <b>elements</b> (D 1,..., D 8) {{that have a}} size of n bits from a {{register}} file (RF) into a memory (M) is described. The memory is arranged for storage of a vector of storage <b>data</b> <b>elements</b> in locations (M 1,..., M 5) having a size of m bits, wherein m 2 ̆ 6 gt;n. The method comprises the steps of: exchanging bits (S 2) between process <b>data</b> <b>elements</b> in the vector stored in mutually subsequent register elements, the exchanging resulting in a vector of modified <b>data</b> <b>elements</b> (DmI,..., Dm 8), shuffling (S 3) groups of k subsequent bits in the resulting vector, [...] storing (S 4) the resulting shuffled vector of modified <b>data</b> <b>elements</b> as a vector of storage <b>data</b> <b>elements</b> in the memory (M) ...|$|R
50|$|<b>Data</b> <b>elements</b> are {{frequently}} assigned to data stewards or data stewardship {{teams that are}} responsible for the maintenance of individual <b>data</b> <b>elements.</b>|$|R
