203|293|Public
25|$|Any search {{strategy}} {{can be used}} to search this space. Prolog uses a sequential, last-in-first-out, backtracking strategy, in which only one alternative and one <b>sub-goal</b> is considered at a time. Other search strategies, such as parallel search, intelligent backtracking, or best-first search to find an optimal solution, are also possible.|$|E
50|$|At every <b>sub-goal</b> (reached {{after passing}} through about four cities), a {{power-up}} can be chosen, the three being: Hi-Power Engine, Special Turbo, and Super Grip Tires. If the CPU opponent reaches the <b>sub-goal</b> before the player, {{at the next}} race, the driver's girlfriend will move to the opponent's car. He can still win the girl back if he beats the CPU opponent to the next <b>sub-goal.</b> If the player beats the opponent with the girl in hand, a 1,000,000 point bonus is given. Also, the girl kisses the driver {{in front of his}} CPU opponent. If the player reaches the final checkpoint, in the process, the player will pass the CPU opponent and the ending scene is played.|$|E
5000|$|These {{two main}} goals are {{associated}} with several sub-goals. The list below identifies the two main goals and their associated <b>sub-goal</b> as posited by Collins and Stevens (1981): ...|$|E
30|$|Jardim et al. [20] {{proposed}} a dynamic decomposition hierarchical RL method. This method {{is based on}} the idea that to reach the goal, the learner must pass through closely connected states (<b>sub-goals).</b> The <b>sub-goals</b> can be detected by intersecting several paths that lead to the goal while the agent is interacting with the environment. Temporal abstractions (options) can then be identified using the <b>sub-goals.</b> A drawback of this method is that it requires multiple simulations to define the <b>sub-goals.</b> In addition, this method is time consuming and cannot easily be applied to large learning problems.|$|R
5000|$|... 3) Outcomes {{is a list}} of 5 overall goals, {{each with}} 2-5 <b>sub-goals.</b> Each of those <b>sub-goals</b> has a list of things that the child could have done to meet the overall goal, serving as an easy {{reference}} for teachers (see example structure below): ...|$|R
50|$|<b>Sub-goals</b> are {{developed}} to diagnose and address students' errors and misconceptions.|$|R
5000|$|Tier 2: if one {{of these}} Advisors is triggered, it proposes a sub-problem, or an ordered set of actions, {{achieving}} a <b>sub-goal</b> in solving the overall problem (such as moving around one obstacle in a maze). If no tier 2 advisor is triggered, move to last tier.|$|E
50|$|Any search {{strategy}} {{can be used}} to search this space. Prolog uses a sequential, last-in-first-out, backtracking strategy, in which only one alternative and one <b>sub-goal</b> is considered at a time. Other search strategies, such as parallel search, intelligent backtracking, or best-first search to find an optimal solution, are also possible.|$|E
50|$|A typical time {{management}} {{game is a}} progression of levels, each of which sets a goal and a time limit for the player. In a level, the player would set priorities (or immediate actions) for actors {{in order to satisfy}} appearing sub-goals that can be represented e.g. as clients who want service or planes that need to land. In some games, you can set queues of up to several consecutive actions. The actors will then do the actions in the order set by player with their speed. Usually, if the action is performed too late, a <b>sub-goal</b> is failed. The goal of a level is typically to complete enough sub-goals within a given time limit. Between the levels, the players would upgrade their actors using game currency earned in the level, e.g. make them move faster, make clients wait longer before failing a <b>sub-goal,</b> serve more clients simultaneously.|$|E
30|$|Check if the {{services}} offered by agents {{are used by}} other <b>sub-goals.</b> If they are used by other <b>sub-goals,</b> check if the agents are collaborative. If not, intimate the planner that compatible agents are not available. If they are collaborative, request the agent identified for its services. The formal query statements associated is shown in Listings  3 and 4.|$|R
5000|$|... {{a set of}} {{priority}} rules for adding goals and <b>sub-goals</b> to the agenda." [...] (p. 47) ...|$|R
5000|$|... 4. To prove both {{of these}} <b>sub-goals,</b> the {{inference}} engine sees that {{both of these}} <b>sub-goals</b> were given as initial facts. Therefore, the conjunction is true: Fritz croaks and Fritz eats fliestherefore the antecedent of rule #1 is true and the consequent must be true: Fritz is a frogtherefore the antecedent of rule #3 is true and the consequent must be true: Fritz is green ...|$|R
5000|$|Determine {{the next}} level of {{sub-goals}} by breaking down the overall goal. A <b>sub-goal</b> for the above example might be [...] "open the climate menu". This provides more information about how to accomplish the task; however, it can still be broken down into smaller units, which will describe the individual operations (performed via the visual, manual or cognitive modes) that need to be performed.|$|E
50|$|Target {{space is}} a linear {{subspace}} of free space which denotes {{where we want}} the robot to move to. In global motion planning, target space is observable by the robot's sensors. However, in local motion planning, the robot cannot observe the target space in some states. To solve this problem, the robot goes through several virtual target spaces, {{each of which is}} located within the observable area (around the robot). A virtual target space is called a <b>sub-goal.</b>|$|E
5000|$|Regular {{feedbacks}} {{are essential}} for Hackers model to guaranty purposefully behaviour. He talks about control loops.At the lowest level the first triangle shows the classical circular processes. G is a goal or <b>sub-goal</b> and T1-T4 describe the single operations, transformations or actions which are needed to reach the goal. [...] Although the number of operations shown are just an example. Depending on many aspects, like complexity of the task, the number of operations on each level can vary.|$|E
50|$|An {{agenda is}} {{developed}} prioritizing how students' errors and misconception well be address using the <b>sub-goals</b> developed.|$|R
40|$|We {{introduce}} a novel data structure, the Interaction Net-work, for representing interaction-data from open problem solving environment tutors. We show how using network community detecting techniques {{are used to}} identify <b>sub-goals</b> in problems in a logic tutor. We then use those com-munity structures to generate high level hints between <b>sub-goals.</b> The preliminary results show that using network anal-ysis techniques are promising for exploring and understand-ing user data from open problem solving environments. 1...|$|R
50|$|TOTEs {{are often}} nested within other TOTEs, since {{as a means}} to meet a goal, they are {{applicable}} to <b>sub-goals</b> too.|$|R
5000|$|Define {{plans to}} {{describe}} how to perform the operations in each <b>sub-goal</b> level of the hierarchy. In the fan speed example, the two operations {{will have to be}} performed in series, one after the other. The plan will instruct the user to [...] "perform 1, then 2". Operations can also be performed in parallel, and in this case the plan would instruct the user to [...] "perform 1 and 2 together". Numbers should be assigned to the different levels in the hierarchy.|$|E
5000|$|In 2015, the United Nations and {{its member}} states {{agreed on a}} new {{sustainable}} development agenda to promote prosperity and reduce poverty, putting forward 17 Sustainable Development Goals (SDGs) to be achieved by 2030. [...] SDG 2 aims to “End hunger, achieve food security and improved nutrition, and promote sustainable agriculture”. <b>Sub-goal</b> 2.2. aims to “by 2030 end all forms of malnutrition, including achieving by 2025 the internationally agreed targets on stunting and wasting in children under five years of age, and address the nutritional needs of adolescent girls, pregnant and lactating women, and older persons”.|$|E
50|$|Each {{level in}} the HTA should be {{numbered}} according to its hierarchical level: The overall goal is the highest hierarchical level and should be numbered 0. The first <b>sub-goal</b> in the hierarchy will be 1, also with plan 1. Further levels just extend this system - third hierarchical level: 1.1, fourth hierarchical level: 1.1.1, and so on. A HTA can be represented in list or diagram form. In list form lines should be indented to denote the different hierarchical levels. In diagram form each operation should be placed within a box and links should be made between them: a lower hierarchical level should branch from underneath a higher level operation. Plans should be written next to the branches to describe {{the way in which}} the branched operations should be carried out.|$|E
30|$|Some {{goals are}} not related to others (G 01, G 02, G 03, G 07, G 11, G 12, G 13 and G 14). Most of these goals (G 03, G 07, G 11, G 12, G 13 and G 14) address test aspects and could be <b>sub-goals</b> of a general test-related goal. However, none of the goals {{identified}} in the study represents such a generalized goal. Thus, we did not relate them as <b>sub-goals</b> of others.|$|R
40|$|This paper {{studies the}} problem how to {{discover}} the hierarchies and subtasks automatically during learning process. It {{can be divided into}} three steps. Firstly, it uses FCM algorithm based on weighted grid density to classify state spaces. Secondly, it uses unique direction value to find <b>sub-goals</b> set. Finally, it creates the set of options with experience replay. Experimental result shows it can discover <b>sub-goals</b> automatically and quickly which can help agent find an optimal path from start point to end point...|$|R
50|$|Proof-number search (short: PN search) is a {{game tree}} search {{algorithm}} invented by Victor Allis, with applications mostly in endgame solvers, but also for <b>sub-goals</b> during games.|$|R
40|$|In many domains, {{the task}} can be {{decomposed}} into {{a set of}} independent subgoals. Often, such tasks are too complex to be learned using standard techniques such as Reinforcement Learning. The complexity {{is caused by the}} learning system having {{to keep track of the}} status of all sub-goals concurrently. Thus, if the solution to one <b>sub-goal</b> is known when another <b>sub-goal</b> is in some given state, the known solution must be relearned when the status of the other <b>sub-goal</b> changes. This dissertation presents a modular approach to reinforcement learning that takes advantage of task decomposition to avoid unnecessary relearning. In the modular approach, modules are created to learn each <b>sub-goal.</b> Each module receives only those inputs relevant to its associated <b>sub-goal,</b> and can therefore learn without being affected by the state of other sub-goals. Furthermore, each module searches a much smaller space than that defined by all inputs considered together, thereby greatly reducing learning time. Si [...] ...|$|E
30|$|The {{adjacent}} clusters/modules are merged {{based on}} the following procedure. A module score or a cluster score is defined for each module group in a workflow [45] based on distances of module element pairs contained in the module group. The workflow score {{is defined as the}} sum of the module group scores. A greedy strategy is adopted which merges two adjacent module groups with best workflow score. This process continues until only a predefined number of module groups remain. The adjacent cluster components are merged if these identified <b>sub-goal</b> nodes corresponding to the clusters are the same. A concept of role of macro action is applicable where this macro action satisfies a <b>sub-goal</b> and where a reward function may be used which is particular to the sub-topic <b>sub-goal.</b> The roles corresponding to the macro actions satisfies the same sub-topic or <b>sub-goal</b> role and have correlated topic models describing the connected event nodes present in the <b>sub-goal</b> or sub-topic cluster. This role can be interpreted as the semantic role or users of the same role having the same or similar “structural signatures” or users having a trusted group [41] role corresponding to the sub-topic cluster associated with tracking a particular topic or sub-topic or <b>sub-goal</b> of the story. All agents associated with a macro action may be interpreted as playing an informing role to the evaluating agent associated with the sub-topic <b>sub-goal</b> agent. As a consequence of merging of clusters, a hierarchical clustering of sub-topic <b>sub-goal</b> nodes is achieved where <b>sub-goal</b> nodes inferred from recursively defined merged clusters may indicate split or merge points in the goal topic or whole story description. Here a merging of clusters may aim at forming a merged cluster which have nodes in the merged cluster of similar Q values or Reward values as calculated from application of Eq.  16. The actions connecting the sub-topic <b>sub-goal</b> nodes of finally produced clusters are the macro actions on which the Q Learning procedure is re-applied. The distance measure defined on agent roles and trust links in combination with the reward based Q value approach produces a clustering where every cluster has nodes with same or similar agent roles [64].|$|E
40|$|Abstract—The {{cooperation}} of several robots {{are needed for}} complex tasks. The cooperation methods for multiple robots generally require exact goal or <b>sub-goal</b> positions. However, {{it is difficult to}} direct the goal or <b>sub-goal</b> positions to multiple robots for the sake of cooperation with each other. Planning algorithms will reduce the burden for this purpose. In this paper, we propose a multi-agent planning algorithm based on a random sampling method. This method doesn’t require the exact <b>sub-goal</b> positions nor the times at which cooperation occurs. The effectiveness of this approach is empirically shown by simulation results. Index Terms—RRT, path planning, cooperation, multi-agent. I...|$|E
40|$|Updated the SNAP Board on May 18 with {{a formal}} presentation. Began {{discussions with the}} Cultural Resources Team to {{integrate}} cultural resource science within in the Science and Research Strategy. Refined the science proposal peer-review process and developed a conceptual graphic to communicate the process with Science and Research Team members. Facilitated the selection of interagency goals, <b>sub-goals,</b> and related monitoring and science questions by Science and Research Team. Began planning of an all-agency resource management workshop intended to validate interagency science goals and <b>sub-goals,</b> and assist in the prioritization of questions...|$|R
40|$|The {{bachelor}} thesis aims {{to analyze}} the participation of Czechoslovak and later Czech and Slovak units operating in the territory of former Yugoslavia within the UNPROFOR mission. The core goal si to compare a contribution of separated units after the breakup of Czechoslovakia occurred. The research focuses on contribution in fulfillment of UNPROFOR <b>sub-goals,</b> because of there are not reliable benchmarks for measuring success of particular missions's segmants. These <b>sub-goals</b> are based on Diehl and Druckman's method of assessment peace operations published in the Evaluating Peace Operation. Powered by TCPDF (www. tcpdf. org...|$|R
5000|$|... 3. Since {{this goal}} is a {{conjunction}} of two statements, the inference engine breaks it into two <b>sub-goals,</b> both of which must be proved: Fritz croaks Fritz eats flies ...|$|R
30|$|In {{addition}} to the links presented in Table 4, other relations between goals are possible. Table 4 shows the relations we considered more direct. For example, we represent Improve software process effectiveness as a <b>sub-goal</b> of Improve product quality, because process quality directly influences product quality (Fuggetta 2000). However, Improve product quality {{could also be a}} <b>sub-goal</b> of Minimize rework.|$|E
40|$|This paper {{describes}} a polynomially-solvable sub-problem of temporal planning. Polynomiality follows from two assumptions. Firstly, by supposing that each <b>sub-goal</b> fluent {{can be established}} by at most one action, we can quickly determine which actions are necessary in any plan. Secondly, the monotonicity of <b>sub-goal</b> fluents allows us to express planning as an instance of STP ≠ (Simple Temporal Problem, difference constraints). Our class includes temporally-expressive problems, which we illustrate with an example of chemical process planning...|$|E
30|$|The {{greater the}} {{perceived}} V, the preciousness {{of a given}} information, the greater the Value of the possible (<b>sub-)goal</b> of acquiring and using it.|$|E
50|$|The {{second phase}} focused on {{self-evaluation}} {{and the importance}} of setting realistic and obtainable goals for oneself. Participants were asked to identify goals and then break those goals into <b>sub-goals.</b>|$|R
40|$|Abstract — Learning through self-exploration and {{imitation}} {{are crucial}} mechanisms in developing sensorimotor skills for human infants. In our previous work, {{we showed that}} a robot can self-discover behavior primitives and learn object affordances similar to infants. Then building predictive mech-anisms at the affordance level allowed movement planning and simple goal-level imitation on our robot. The work we describe in this paper builds upon this system; it describes how our robot, by using the learned behaviors and prediction mechanisms, can go beyond simple goal-level imitation and become a better imitator. For this, we develop mechanisms to enable the robot to recognize and segment, {{with the help of}} the demonstrator, an ongoing action in terms of its affordance based goal satisfaction. Extracting <b>sub-goals</b> or important features from a demonstration is not straightforward as demonstrated action trajectory may not correspond to any robot behavior developed so far. Inspired from infant development, we use motionese to enable the robot to identify the important steps and the boundaries in the otherwise complex stream of motion involving multi-objects. Once the <b>sub-goals</b> are obtained, the robot imitates the observed action by chaining these <b>sub-goals</b> and satisfying them sequentially. In the experiments, a tutor used his own action repertoire to move an object around, and the robot was able to detect and achieve the <b>sub-goals</b> with its affordance prediction mechanisms and behavior primitives. I...|$|R
5000|$|The main {{objective}} of the PPC {{is the development of}} the Population Policy for the State of Qatar. This objective is linked to a number of <b>sub-goals,</b> with the most prominent being the following: ...|$|R
