44|1633|Public
25|$|CIDR-compliant routing {{protocols}} transmit both length and suffix. RFC 1878 provides a <b>subnetting</b> table with examples.|$|E
25|$|A {{subnetwork}} or subnet is {{a logical}} subdivision of an IP network. The practice of dividing a network into two or more networks is called <b>subnetting.</b>|$|E
25|$|The {{design of}} the IPv6 address space differs {{significantly}} from IPv4. The primary reason for <b>subnetting</b> in IPv4 is to improve efficiency in the utilization of the relatively small address space available, particularly to enterprises. No such limitations exist in IPv6, as the large address space available, even to end-users, is not a limiting factor.|$|E
40|$|Abstract—Net {{compression}} {{technologies are}} widely researched {{to avoid the}} problem of state explosion. Current researches of transition refinement and <b>subnet</b> abstraction mainly paid attention to preserve different attributes during the transformation, usually led to very strict conditions for the <b>subnet,</b> so that the application of these technologies was limited. Aiming to provide the same service and interface after transformation as original module while less restricts are given, a kind of transition <b>subnet</b> is put forward to model complex manufacturing system. The concept “standardized interface ” is presented; transition <b>subnets</b> are classified into different types, the idea of “normalized <b>subnet</b> ” is presented; Engineering <b>Subnet</b> is defined and a live and normalized <b>subnet</b> with finite live loopbacks is {{proved to be an}} Engineering <b>Subnet.</b> Because of live loopbacks owned by Engineering <b>Subnets,</b> the same interface and service as the original module are reserved after the transformation between an Engineering <b>Subnet</b> and the corresponding transition, mean while fewer preconditions are required for the Engineering <b>Subnet</b> compared with current researches. Index Terms—Petri nets, <b>subnet,</b> transition, interface, loopback I...|$|R
40|$|This paper {{describes}} a special type of dynamic neural network called the Recursive Neural Network (RNN). The RNN is a single-input single-output nonlinear dynamical system with three <b>subnets,</b> a nonrecursive <b>subnet</b> and two recursive <b>subnets.</b> The nonrecursive <b>subnet</b> feeds current and previous input samples through a multi-layer perceptron with second order input units (SOMLP) [9]. In {{a similar fashion}} the two recursive <b>subnets</b> feed back previous output signals through SOMLPs. The outputs of the three <b>subnets</b> are summed to form the overall network output. The {{purpose of this paper}} is to describe the architecture of the RNN, to derive a learning algorithm for the network based on a gradient search, and to provide some examples of its use. The work in this paper is an extension of previous work on the RNN [10]. In previous work the RNN contained only two <b>subnets,</b> a nonrecursive <b>subnet</b> and a recursive <b>subnet.</b> Here we have added a second recursive <b>subnet.</b> In addition, both of the <b>subnets</b> in t [...] ...|$|R
40|$|Part 6 : Network MeasurementInternational audienceNetwork layer Internet {{topology}} {{consists of}} a set of routers connected to each other through <b>subnets.</b> Recently, there has been a significant interest in studying topological characteristics of <b>subnets</b> in addition to routers in the Internet. However, given the size of the Internet, constructing complete <b>subnet</b> level topology maps is neither practical nor economical. A viable solution, then, is to sample <b>subnets</b> in the target domain and estimate their global characteristics. In this study, we propose a sampling framework for subnets; derive proper estimators for various <b>subnet</b> characteristics including total number of <b>subnets,</b> <b>subnet</b> prefix length distribution, mean <b>subnet</b> degree, and IP address utilization; and analyze the theoretical and empirical aspects of these estimators...|$|R
25|$|Internet Protocol version 4 uses {{specially}} designated address formats {{to facilitate}} recognition of special address functionality. The {{first and the}} last subnets obtained by <b>subnetting</b> have traditionally had a special designation and, early on, special usage implications. In addition, IPv4 uses the all ones host address, i.e. the last address within a network, for broadcast transmission to all hosts on the link.|$|E
25|$|While <b>subnetting</b> {{may improve}} network {{performance}} in an organizational network, it increases routing complexity, since each locally connected subnet must {{be represented by}} a separate entry in the routing tables of each connected router. However, by careful design of the network, routes to collections of more distant subnets within {{the branches of a}} tree-hierarchy can be aggregated by single routes. Variable-length subnet masking (VLSM) functionality in commercial routers made the introduction of CIDR seamless across the Internet and in enterprise networks.|$|E
2500|$|The first subnet {{obtained}} from <b>subnetting</b> has all bits in the subnet bit group set to zero (0). It is therefore called subnet zero. The last subnet {{obtained from}} <b>subnetting</b> has all bits in the subnet bit group set to one (1). It [...] is therefore called the all-ones subnet.|$|E
30|$|Pre/post-condition The actors of the <b>subnet</b> {{move back}} in the <b>subnet</b> {{if and only if}} {{position}} of the actors becomes equal to the position of the <b>subnet.</b>|$|R
50|$|There {{are also}} only 65536 /24 <b>subnets</b> in the 21.0.0.0/8 <b>subnet.</b> This {{would be easier}} to {{overcome}} by adding a new unused /8 <b>subnet</b> if there were any.|$|R
25|$|The IETF {{originally}} discouraged {{the production}} {{use of these}} two <b>subnets</b> due to possible confusion of having a network and <b>subnet</b> with the same address. The practice of avoiding <b>subnet</b> zero and the all-ones <b>subnet</b> was declared obsolete in 1995 by RFC 1878, an informational, but now historical document.|$|R
2500|$|The {{benefits}} of <b>subnetting</b> an existing network vary with each deployment scenario. In the address allocation {{architecture of the}} Internet using CIDR and in large organizations, {{it is necessary to}} allocate address space efficiently. <b>Subnetting</b> may also enhance routing efficiency, or have advantages in network management when subnetworks are administratively controlled by different entities in a larger organization. [...] Subnets may be arranged logically in a hierarchical architecture, partitioning an organization's network address space into a tree-like routing structure.|$|E
2500|$|<b>Subnetting</b> in IPv6 {{is based}} on the {{concepts}} of variable-length subnet masking (VLSM) and the Classless Inter-Domain Routing methodology. [...] It is used to route traffic between the global allocation spaces and within customer networks between subnets and the Internet at large.|$|E
2500|$|<b>Subnetting</b> is {{the process}} of {{designating}} some high-order bits from the host part and grouping them with the network mask to form the subnet mask. This divides a network into smaller subnets. The following diagram modifies the example by moving 2 bits from the host part to the subnet mask to form four smaller subnets one quarter the previous size: ...|$|E
40|$|Abstract—Transition {{refinement}} and <b>subnet</b> abstraction are key {{approaches to}} realize modularization and hierarchical modeling in a Petri nets model; using these two methods, the Petri nets based structural design becomes possible. Model transforming technologies using {{a kind of}} transition <b>subnet</b> – the engineering <b>subnet,</b> are presented in this paper; the operations of <b>subnet</b> abstraction and transition refinement are defined. The research shows that, under certain preconditions, important prosperities such as boundedness, safety, deadlock free and reversibility are reserved in <b>subnet</b> abstraction transformations; when a transition is refined using an engineering <b>subnet,</b> prosperities including boundedness, deadlock free and reversibility keeps reserved, but safety is not certainly to be effective any longer. The paper also shows that after the transformation a model can keep the same interfaces and similar actions as before by using engineering <b>subnet</b> method. Petri nets based modeling in complex systems becomes feasible and effective {{with the help of}} engineering <b>subnet.</b> Index Terms—Petri nets, <b>subnet,</b> transition, modeling, abstraction, refinement I...|$|R
30|$|Each {{distinct}} external class C <b>subnet</b> {{within the}} data {{has been replaced}} with a non-routable <b>subnet</b> selected uniformly at random from the set of non-routable <b>subnets</b> in 10.0. 0.0 / 8.|$|R
40|$|Abstract—To {{decrease}} repeated computations {{and improve}} efficiency, {{this paper presents}} a rectangular network reliability computation method based on isomorphism determination. According to the special structure of rectangular network, 2 sorts of <b>subnets</b> are defined for 2 ×m network, and n sorts of <b>subnets</b> are defined for n×m network. Furthermore, a hash table is designed to record the OBDD (Ordered Binary Decision Diagram) of defined <b>subnet.</b> When the OBDD of a <b>subnet</b> is constructed, {{if it is the}} first time to find this <b>subnet</b> and a defined <b>subnet</b> are isomorphic, its OBDD will be recorded in this hash table. Otherwise, there is no need to construct its OBDD and the recorded OBDD can be accessed in above hash table. Thus, the repeated computations from isomorphic <b>subnets</b> can be reduced, and computation costs are saved. Experiment shows this method can efficiently calculate the reliability of rectangular network with large scale. Index Terms—network reliability, isomorphic <b>subnet,</b> rectangular network, ordered binary decision diagram I...|$|R
50|$|The first subnet {{obtained}} from <b>subnetting</b> has all bits in the subnet bit group set to zero (0). It is therefore called subnet zero. The last subnet {{obtained from}} <b>subnetting</b> has all bits in the subnet bit group set to one (1). It is therefore called the all-ones subnet.|$|E
5000|$|RFC 950, Internet Standard <b>Subnetting</b> Procedure, J. Mogul and J. Postel, August 1985 ...|$|E
50|$|CIDR-compliant routing {{protocols}} transmit both length and suffix. RFC 1878 provides a <b>subnetting</b> table with examples.|$|E
40|$|Transition {{refinement}} and <b>subnet</b> abstraction are key {{approaches to}} realize modularization and hierarchical modeling in a Petri nets model; using these two methods, the Petri nets based structural design becomes possible. Model transforming technologies using {{a kind of}} transition <b>subnet</b> – the engineering <b>subnet,</b> are presented in this paper; the operations of <b>subnet</b> abstraction and transition refinement are defined. The research shows that, under certain preconditions, important prosperities such as boundedness, safety, deadlock free and reversibility are reserved in <b>subnet</b> abstraction transformations; when a transition is refined using an engineering <b>subnet,</b> prosperities including boundedness, deadlock free and reversibility keeps reserved, but safety is not certainly to be effective any longer. The paper also shows that after the transformation a model can keep the same interfaces and similar actions as before by using engineering <b>subnet</b> method. Petri nets based modeling in complex systems becomes feasible and effective {{with the help of}} engineering <b>subnet.</b> </p...|$|R
30|$|Invariants (1) The {{union of}} nodes of any two <b>subnets</b> {{should not be}} empty. (2) The {{intersection}} of any two <b>subnet</b> nodes should be empty because a <b>subnet</b> must employ unique nodes. (3) The <b>subnets</b> are connected through edges and type of an edge is gateway–gateway link. It represents that the edge employs two gateway nodes. (4) There must exist a <b>subnet</b> which is connected with a base station. It means {{that there must be}} an edge between a gateway and a base station node.|$|R
25|$|The {{remaining}} bits {{after the}} <b>subnet</b> bits {{are used for}} addressing hosts within the <b>subnet.</b> In the above example the <b>subnet</b> mask consists of 26 bits, leaving 6 bits for the host identifier. This allows for 62 host combinations (26−2).|$|R
50|$|A {{subnetwork}} or subnet is {{a logical}} subdivision of an IP network. The practice of dividing a network into two or more networks is called <b>subnetting.</b>|$|E
5000|$|... network {{renumbering}} and <b>subnetting</b> {{to reclaim}} large blocks of address space allocated {{in the early}} days of the Internet, when the Internet used inefficient classful network addressing.|$|E
50|$|Due to inefficiencies {{caused by}} <b>subnetting,</b> it is {{difficult}} to use all addresses in a block. The host-density ratio, as defined in RFC 3194, is a metric for utilization of IP address blocks, that is used in allocation policies.|$|E
5000|$|Note {{that while}} a {{sequence}} is a net, a sequence has <b>subnets</b> {{that are not}} subsequences. For example the net (1, 1, 2, 3, 4, ...) is a <b>subnet</b> of the net (1, 2, 3, 4, ...). The key difference is that <b>subnets</b> can use the same point in the net multiple times and the indexing set of the <b>subnet</b> can have much larger cardinality. A sequence is a <b>subnet</b> of a given sequence, {{if and only if}} it can be obtained from some subsequence by repeating its terms and reordering them.|$|R
40|$|Technical ReportThis paper {{describes}} a special type of dynamic neural network called the Recursive Neural Network (RNN). The RNN is a single-input single-output nonlinear dynamical system with three <b>subnets,</b> a nonrecursive <b>subnet</b> and two recursive <b>subnets.</b> The nonrecursive <b>subnet</b> feeds current and previous input samples through a multi-layer perceptron with second order input units (SOMLP) [9]. In {{a similar fashion}} the two recursive <b>subnets</b> feed back previous output signals through SOMLPs. The outputs of the three <b>subnets</b> are summed to form the overall network output. The {{purpose of this paper}} is to describe the architecture of the RNN, to derive a learning algorithm for the network based on a gradient search, and to provide some examples of its use. The work in this paper is an extension of previous work on the RNN [10]. In previous work the RNN contained only two <b>subnets,</b> a nonrecursive <b>subnet</b> and a recursive <b>subnet.</b> Here we have added a second recursive <b>subnet.</b> In addition, both of the <b>subnets</b> in the previous RNN had linear input units. Here all three of the <b>subnets</b> have second order input units. In many cases this allows the RNN to solve problems more efficiently, that is with a smaller overall network. In addition, the use of the RNN for inverse modeling and control was never fully developed in the past. Here, for the first time, we derive the complete learning algorithm for the case where the RNN is used in the general model following configuration. This configuration includes the following as special cases: system modeling, nonlinear filtering, inverse modeling, nonlinear prediction and control. The University of New Mexic...|$|R
5000|$|Reducing the <b>subnet</b> size (increasing {{the number}} of <b>subnets),</b> and {{securing}} those VLANs using a firewall or router.|$|R
50|$|Provides {{the student}} with skills and {{knowledge}} necessary to understand {{the capabilities of the}} Transmission Control Protocol/Internet Protocol (TCP/IP) suite, correctly assign IP address according to host and network requirements, and create additional network addresses by <b>subnetting</b> IP addresses.|$|E
50|$|<b>Subnetting</b> in IPv6 {{is based}} on the {{concepts}} of variable-length subnet masking (VLSM) and the Classless Inter-Domain Routing methodology. It is used to route traffic between the global allocation spaces and within customer networks between subnets and the Internet at large.|$|E
50|$|IPAM {{tools are}} {{increasingly}} important as new IPv6 networks are deployed with larger address pools, different <b>subnetting</b> techniques {{and more complex}} 128-bit hexadecimal numbers, which are not as easily human-readable as IPv4 addresses. IPv6 networking, mobile computing, and multihoming require more dynamic address management.|$|E
5000|$|When an {{interface}} has {{an address}} configured in a <b>subnet,</b> such as 192.0.2.1 in the 192.0.2.0/24 (i.e., <b>subnet</b> mask 255.255.255.0) <b>subnet,</b> and that interface is considered [...] "up" [...] by the router, the router thus has a directly connected route to 192.0.2.0/24. If a routing protocol offered another router's route {{to that same}} <b>subnet,</b> the routing table installation software will normally ignore the dynamic route and prefer the directly connected route.|$|R
40|$|Abstract—Internet {{topology}} at {{the network}} layer consists of routers and <b>subnets,</b> i. e., point-to-point or multi-access connections. Network measurement {{studies have focused on}} router level maps and derived characteristics of routers such as mean degree, degree distribution, clustering coefficient and betweenness. Considering the fact that <b>subnets</b> are also important building blocks of the Internet topology, this paper introduces a complementary view of network topologies named <b>subnet</b> level maps. <b>Subnet</b> level network topology maps represent <b>subnets</b> as vertices and depict routers as links connecting the vertices/subnets. Additionally, we introduce a tool, called exploreNET, for <b>subnet</b> discovery. Although ExploreNET is based on the same principals as our recent work traceNET [24], it differs from traceNET in its utilization in various domains. Particularly, it allows us discover the underlying <b>subnet</b> level topology map of a network rather than the map dictated by routing dynamics. Finally, we present an evaluation of exploreNET by using it to discover and analyze various <b>subnet</b> characteristics including degree distribution, capacity distribution and utilization for six geographically disperse public Internet Service Providers (ISPs). I...|$|R
40|$|A new Petri Net {{decomposition}} methodology is proposed. The new methodology overcomes the computational limitations {{associated with}} large scale Petri Nets, thereby making Petri Nets {{a more practical}} tool for analysis of dynamic systems. The methodology decomposes the Petri Net into a set of <b>subnets</b> where performance of each <b>subnet</b> is evaluated {{and the results are}} aggregated to identify the performance of the Petri Net. A <b>subnet</b> consists of one or more correlated <b>subnets.</b> A correlated <b>subnet</b> is the smallest <b>subnet</b> of the Petri Net where transitions can fire without hindrance {{from the rest of the}} systems operations. This property is called semi-independence or near-independence. Hence, a <b>subnet</b> can operate semi-independently if it consists of correlated <b>subnets.</b> ^ A group of (one or more) correlated <b>subnets</b> is augmented with an appropriate boundary net to assure consistency between results obtained from the analysis of the groups of correlated <b>subnets</b> and those obtained from analysis of the whole Petri Net. Procedures for identifying the correlated <b>subnets,</b> for aggregating correlated <b>subnets</b> into efficient groups of <b>subnets</b> and for developing a boundary net and its parameters for a group of correlated <b>subnets</b> are developed. ^ Each transition in a Petri Net is represented by a logical IF…, THEN… rule, and the system 2 ̆ 7 s dynamics is represented by a weighted rule set since the Petri Net 2 ̆ 7 s dynamics are governed by the firing of its transitions. The rule weights represent the firing probability of the rules. Systematic procedures for extracting the rule set and determining the rule weights are developed. Examples show that performance evaluation of a large scale Petri Net through simulation of its rule set is markedly much more efficient than through existing Petri Net solution methodologies. ^ Deadlock issues of dynamic systems are analyzed through simulation of the system rule set. The procedures for identifying the smallest <b>subnet</b> whose deadlock will results in the Petri Net being in the state of deadlock or partial-deadlock are proposed. In addition, a methodology for parallel simulation of a Petri Net using the rule set concept is developed. Finally, an example to control a dynamic system through a fuzzy logic controller in conjunction with the system 2 ̆ 7 s rule set is presented. ...|$|R
