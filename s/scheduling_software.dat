298|342|Public
5|$|The {{mountain}} facade, the Yeti audio-animatronic, and {{the roller}} coaster are three independent structures. Each structure reaches the ground-level and does not touch the other two structures. This was achieved via 4-D <b>scheduling</b> <b>software</b> that told builders how to construct it.|$|E
25|$|In {{the early}} 1980s, Cornell {{deployed}} the first IBM 3090-400VF and coupled two IBM 3090-600E systems to investigate coarse-grained parallel computing. In 1984, the National Science Foundation {{began work on}} establishing five new supercomputer centers, including the Cornell Center for Advanced Computing, to provide high-speed computing resources for research within the United States. As an NSF center, Cornell deployed the first IBM Scalable Parallel supercomputer. In the 1990s, Cornell developed <b>scheduling</b> <b>software</b> and deployed the first supercomputer built by Dell. Most recently, Cornell deployed Red Cloud, {{one of the first}} cloud computing services designed specifically for research. Today, the center is a partner on the National Science Foundation XSEDE supercomputing program, providing coordination for XSEDE architecture and design, systems reliability testing, and online training using the Cornell Virtual Workshop learning platform.|$|E
25|$|Because {{patronage}} at {{a retail}} outlet varies, flexibility in scheduling is desirable. Employee <b>scheduling</b> <b>software</b> is sold, which, using known patterns of customer patronage, {{more or less}} reliably predicts the need for staffing for various functions at times of the year, day of the month or week, and time of day. Usually needs vary widely. Conforming staff utilization to staffing needs requires a flexible workforce which is available when needed but {{does not have to}} be paid when they are not, part-time workers; as of 2012 70% of retail workers in the United States were part-time. This may result in financial problems for the workers, who while they are required to be available at all times if their work hours are to be maximized, may not have sufficient income to meet their family and other obligations.|$|E
50|$|PRICE Systems Founders of Commercial Parametric {{models that}} {{estimates}} the scope, cost, effort and <b>schedule</b> for <b>software</b> projects.|$|R
40|$|A {{probabilistic}} <b>scheduling</b> {{model for}} <b>software</b> projects is presented. The model explicitly takes a scheduling strategy as input. When the scheduling strategy is fixed, the model outputs a probability {{distribution for the}} project completion time or cost. By applying stochastic optimization techniques, <b>schedules</b> for <b>software</b> projects can be computed which minimize the development time or cost with a given staff. ...|$|R
40|$|Controlling cost, schedule, and qualityin a {{software}} development project remains a challenging task. This {{type of control}} is difficult largely because of our inability to accurately measure attributes of the software development process, espe-cially quality [1]. Measuring the quality of development processes and artifacts then relating them to final software product quality is not {{a process that is}} well under-stood. Under constant pressure to reduce cost and <b>schedule,</b> <b>software</b> engineers often use reduction techniques without fully understanding their impact on processes and final product quality. Nowhere is this truer than in the soft...|$|R
500|$|... {{when its}} framing split, causing {{significant}} risk of catastrophic malfunction {{if it were}} operated. It currently only operates in the alternative [...] "B-mode", which {{is limited to a}} strobe-light effect designed to give the appearance of movement, earning it the nickname [...] "Disco Yeti" [...] from some fans. It is speculated that the problem was caused by damage to the yeti's concrete base structure, which is unlikely to be repaired until a major refurbishment in the distant future, because the design limits access to the yeti without major disassembly of the superstructure. The problem with the concrete is rumored to have occurred due to a glitch in the 4-D <b>scheduling</b> <b>software</b> that prevented adequate curing of a portion of the Yeti's foundation prior to the overlapping fabrication of mountain elements and roller coaster track.|$|E
50|$|Meeting Wizard {{is meeting}} <b>{{scheduling}}</b> <b>software</b> that helps perform the meeting scheduling process smoothly. It allows importing emails and works across different time zones. Meeting Wizard's a meeting <b>scheduling</b> <b>software</b> that comes free of cost.|$|E
5000|$|... #Subtitle level 2: Transitioning to {{employee}} <b>scheduling</b> <b>software</b> ...|$|E
30|$|In this context, the {{pioneering}} natural history study called Alzheimer’s Disease Neuroimaging Initiative has established {{some of the}} necessary requirements needed in terms of quality assurance and reproducibility, as well as presence of artefacts [6]. Through its first results, published several years ago, extensive collaboration between basic scientists, statisticians and clinicians has allowed {{the development of the}} necessary standards for the use of imaging as an outcome measure in large trials. It thereby showed the necessity to use objects treated as reference standards across the various sites to ensure that no subtle drift was present, or that a <b>scheduled</b> <b>software</b> upgrade on a machine did not change the results dramatically [6].|$|R
50|$|In the 2008/2009 school year, MacNeill stopped {{accepting}} grade 7 students due to low {{enrollment and}} completely discontinued {{the arts and}} science academy options. MacNeill began using an electronic attendance system called BCeSIS and a new <b>schedule</b> management <b>software.</b>|$|R
50|$|In {{its most}} basic form, capital program {{management}} software is a database that centralizes key project information related to processes, project scope, cost, and <b>schedule.</b> This <b>software</b> enables a methodical approach to data entry, process management, and information retrieval.|$|R
50|$|Wonderware {{recently}} selected Simio {{as their}} <b>scheduling</b> <b>software</b> solution.|$|E
5000|$|Master/Agent {{architecture}} — {{the historic}} architecture for Job <b>Scheduling</b> <b>software.</b> The Job <b>Scheduling</b> <b>software</b> is installed {{on a single}} machine (Master), while on production machines {{only a very small}} component (Agent) is installed that awaits commands from the Master, executes them, then returns the exit code back to the Master.|$|E
5000|$|Employee <b>scheduling</b> <b>software</b> automates {{the process}} of {{creating}} and maintaining a schedule. Automating the scheduling of employees increases productivity and makes many secretarial and manual scheduling positions obsolete. Such software will usually track vacation time, sick time, compensation time, and alert when there are conflicts. [...] As scheduling data is accumulated over time, it may be extracted for payroll or to analyze past activity. Although employee <b>scheduling</b> <b>software</b> may or may not make optimization decisions, it does manage and coordinate the tasks. Today's employee <b>scheduling</b> <b>software</b> often includes mobile applications. Mobile scheduling further increased scheduling productivity and eliminated inefficient scheduling steps.|$|E
5000|$|HP Project and Portfolio Management {{software}} Project Management module: zero-client <b>software</b> for <b>scheduling</b> {{and managing}} <b>software</b> ...|$|R
40|$|Mobile {{devices are}} {{significantly}} complex, feature-rich, and heavily customized, thus they {{are prone to}} software reliability and performance issues. This paper considers the problem of software aging in Android mobile OS, which causes the device to gradually degrade in responsiveness, and to eventually fail. We present a methodology to identify factors (such as workloads and device configurations) and resource utilization metrics that are correlated with software aging. Moreover, we performed an empirical analysis of recent Android devices, finding that software aging actually affects them. The analysis pointed out processes and components of the Android OS affected by software aging, and metrics useful as indicators of <b>software</b> aging to <b>schedule</b> <b>software</b> rejuvenation actions...|$|R
50|$|SolveIT Software Pty Ltd is a {{provider}} of advanced planning and <b>scheduling</b> enterprise <b>software</b> for supply and demand optimisation and predictive modelling. Based in Adelaide, South Australia, 70% of its turnover is generated from software deployed in the mining and bulk material handling sectors.|$|R
5000|$|Minex - geology, mine {{planning}} and <b>scheduling</b> <b>software</b> for stratified deposits ...|$|E
50|$|Advanced {{planning}} & <b>scheduling</b> <b>software</b> enables manufacturing {{scheduling and}} advanced scheduling optimization within these environments.|$|E
50|$|Resource Guru {{offers an}} online {{collaborative}} application for resource scheduling and planning. Instead of using spreadsheets to manage staff, equipment {{and other resources}} they offer a replacement with its cloud-based team <b>scheduling</b> <b>software.</b> Their <b>scheduling</b> <b>software</b> is designed to automate the process of scheduling appointments and staff time. This is ideal for organisations with regular appointments but also for freelancers or consultants who charge their time hourly.|$|E
40|$|Instruction <b>scheduling</b> on <b>software</b> exposed architectures, such as Raw, must be {{performed}} in both time and space. The complexity and variance of application scheduling regions dictates that the space-time scheduling task be divided into phases. Unfortunately, the interaction of phases presents a phase ordering problem. In thi...|$|R
50|$|A {{computer}} cluster {{consists of}} a set of loosely or tightly connected computers that work together so that, in many respects, they {{can be viewed as a}} single system. Unlike grid computers, computer clusters have each node set to perform the same task, controlled and <b>scheduled</b> by <b>software.</b>|$|R
40|$|Abstract—Partial {{reconfigurable}} {{system is}} an architecture consisting general purpose processors and FPGAs, in which FPGA can be reconfigured in run-time. Based on the architecture, software tasks and hardware {{tasks that are}} executed on processor and FPGA respectively co-exist. In this paper, a real-time fault-tolerant scheduling algorithm is proposed to schedule software/hardware hybrid tasks. In the algorithm, the sufficient condition for schedulable hybrid tasks is derived from analyzing system operation conditions when the first deadline is missed, and rollback/recovery and TMR approaches are used respectively to <b>schedule</b> <b>software</b> subtasks and hardware subtasks for fault tolerance. The experimental results demonstrate that all deadlines of accepted hybrid tasks are met and processor’s utilization ratio is increased greatly {{compared with that of}} the exiting approaches when multiple faults occur. Index Terms—Partial reconfigurable system, Real-time scheduling algorithm, Fault-tolerant scheduling algorithm...|$|R
50|$|HealthRoster is Employee <b>scheduling</b> <b>software</b> for e-rostering, {{used in the}} National Health Service {{produced}} by Allocate Software.|$|E
5000|$|Regardless {{of whether}} the {{application}} is desktop-based or web-based, most appointment <b>scheduling</b> <b>software</b> has four primary functions: ...|$|E
50|$|On October 30, 2013, Intuit Inc. {{acquired}} Full Slate, {{a developer}} of appointment <b>scheduling</b> <b>software</b> for small businesses.|$|E
50|$|API writers {{must also}} {{understand}} the software platform/product and document the new features or changes {{as part of}} the new <b>software</b> release. The <b>schedule</b> of <b>software</b> releases varies from organization to organization. The writers need to understand the software life cycle well and integrate themselves into the Systems Development Life Cycle.|$|R
40|$|This paper {{describes}} an operations concept for electronic <b>scheduling</b> and <b>software</b> interface for organizations to extract required {{views of the}} schedule. Advantages include widespread accessibility to a common schedule document, virtually instantaneous distribution of new schedule releases, {{and the ability of}} missions to perfom conflict resolution off-line without time-consuming meetings...|$|R
50|$|DRT systems take {{advantage}} of fleet telematics technology {{in the form of}} vehicle location systems, <b>scheduling</b> and dispatching <b>software</b> and hand-held/in vehicle computing.|$|R
50|$|Beyond the basic, single OS {{instance}} scheduling tools {{there are}} two major architectures that exist for Job <b>Scheduling</b> <b>software.</b>|$|E
50|$|Software {{is often}} used to enable {{organizations}} to better manage staff scheduling. Organizations commonly use spreadsheet software or employee <b>scheduling</b> <b>software</b> to create and manage shifts, assignments, and employee preferences. For large organisations employee scheduling can be complex, and optimising this is framed as the Nurse scheduling problem in Operations Research. Advanced employee <b>scheduling</b> <b>software</b> also provides ways to connect with the staff, ask for their preferences and communicate the schedule to them.|$|E
50|$|Customer {{appointment}} management <b>scheduling</b> <b>software</b> {{falls under}} two categories: desktop applications and web-based systems (also known as software as a service).|$|E
50|$|The 402d Maintenance Wing conducts depot-level {{management}} of <b>scheduled</b> maintenance, facilities, <b>software,</b> and avionics for Air Force and U.S. Department of Defense programs globally.|$|R
40|$|Although component-based {{software}} development promises increased reuse and faster development time, it has proven difficult to build component-based systems software. One obstacle {{is that the}} concurrency structure in systems software tends to be complex. First, instead of a single scheduler, there is a hierarchy of schedulers: the processor schedules interrupts, the OS <b>schedules</b> <b>software</b> interrupts and threads, and threads run event loops. This gives rise to many different execution environments, {{each with its own}} restrictions on actions that can be taken by code running in it. Second, the preemption relationships between these execution environments are often asymmetric: an interrupt handler can preempt a thread but not vice versa. This results in an asymmetric pattern of locking where low priority code must protect against high priority code but not vice versa. This situation is rare in other application domains but common in systems software...|$|R
40|$|This {{publication}} {{pertains to}} Sybase database management software and to any subsequent release until otherwise indicated in new editions or technical notes. Information {{in this document}} is subject to change without notice. The software described herein is furnished under a license agreement, {{and it may be}} used or copied only in accordance with the terms of that agreement. To order additional documents, U. S. and Canadian customers should call Customer Fulfillment at (800) 685 - 8225, fax (617) 229 - 9845. Customers in other countries with a U. S. license agreement may contact Customer Fulfillment via the above fax number. All other international customers should contact their Sybase subsidiary or local distributor. Upgrades are provided only at regularly <b>scheduled</b> <b>software</b> release dates. No part of this publication may be reproduced, transmitted, or translated in any form or by any means, electronic...|$|R
