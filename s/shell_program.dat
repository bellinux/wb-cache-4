49|174|Public
25|$|This example runs a <b>shell</b> <b>program</b> called export_dump.sh at 23:45 (11:45 PM) every Saturday.|$|E
25|$|Wrapper scripts {{often use}} this command {{to run a}} program (either {{directly}} or through an interpreter or virtual machine) after setting environment variables or other configuration. By using exec, the resources used by the <b>shell</b> <b>program</b> {{do not need to}} stay in use after the program is started.|$|E
5000|$|Unix-like process name-space model (not memory model) and user <b>shell</b> <b>program.</b>|$|E
5000|$|Beyond the {{restricted}} modes of usual shells, specialized restricted <b>shell</b> <b>programs</b> include: ...|$|R
50|$|For {{portable}} <b>shell</b> <b>programming</b> use of {{the length}} and substr commands is not recommended.|$|R
50|$|Codeweaver is {{an event}} based on {{problems}} in programming where any language can be used.Questions can come from C, C++, Java, Basic HTML, <b>shell</b> <b>programming.</b>|$|R
50|$|Userinit exits and the <b>shell</b> <b>program</b> {{continues}} running {{without a}} parent process.|$|E
5000|$|... 1972 Douglas McIlroy of Bell Laboratories {{adds the}} pipe {{operator}} to the UNIX command shell. This allows the output from one <b>shell</b> <b>program</b> {{to go directly}} into input of another <b>shell</b> <b>program</b> without going to disk. This allowed {{programs such as the}} UNIX awk and sed to be specialized yet work together http://www.cs.dartmouth.edu/~doug/. [...] For more details see Pipeline (Unix).|$|E
50|$|The Acme programmer's editor / {{windowing}} system / <b>shell</b> <b>program</b> in Plan 9 is a tiling window manager.|$|E
50|$|The PWB shell or Mashey shell, sh, was an upward-compatible {{version of}} the Thompson shell, {{augmented}} by John Mashey and others and distributed with the Programmer's Workbench UNIX, circa 1975-1977. It focused on making <b>shell</b> <b>programming</b> practical, especially in large shared computing centers. It added shell variables (precursors of environment variables, including the search path mechanism that evolved into $PATH), user-executable shell scripts, and interrupt-handling. Control structures were extended from if/goto to if/then/else/endif, switch/breaksw/endsw, and while/end/break/continue. As <b>shell</b> <b>programming</b> became widespread, these external commands were incorporated into the shell itself for performance.|$|R
5|$|Perl {{also has}} many {{built-in}} functions that provide tools {{often used in}} <b>shell</b> <b>programming</b> (although many of these tools are implemented by programs external to the shell) such as sorting, and calling operating system facilities.|$|R
50|$|The {{department}} has well-equipped three laboratories with Pentium, AMD workstations, servers running under WindowsNT, Linux, UNIX providing {{the environment to}} work on C, C++, C#, VB, Java, ASP.NET, Oracle, <b>Shell</b> <b>programming</b> with high speed Internet connectivity. The department is headed by Dr. Maushumi Barooah.|$|R
5000|$|This example runs a <b>shell</b> <b>program</b> called export_dump.sh at 23:45 (11:45 PM) every Saturday.45 23 * * 6 /home/oracle/scripts/export_dump.sh ...|$|E
5000|$|The <b>shell</b> <b>program</b> (typically [...] ) {{is started}} from the {{registry}} entry [...] pointed {{to by the}} same registry entry in key ...|$|E
50|$|Although {{the term}} 'shell' {{is often used}} to {{describe}} a command-line interpreter, strictly speaking a 'shell' can be any program that constitutes the user-interface, including fully graphically oriented ones. For example, the default Windows GUI is a <b>shell</b> <b>program</b> named EXPLORER.EXE, as defined in the SHELL=EXPLORER.EXE line in the WIN.INI configuration file. These programs are shells, but not CLIs.|$|E
40|$|This course {{introduces}} {{basic understanding}} of UNIX OS, UNIX commands and File system and to familiarize students with the Linux environment. To make student learn fundamentals of shell scripting and <b>shell</b> <b>programming.</b> Emphases are on making student familiar with UNIX environment and issues related to it. Learning Outcomes: Upon completion of this course, the student {{will be able to}}: 1. You will be able to run various UNIX commands on a standard UNIX/LINUX Operating system (We will be using Ubuntu flavor of the Linux operating system). 2. You will be able to run C / C++ programs on UNIX. 3. You {{will be able to do}} <b>shell</b> <b>programming</b> on UNIX OS. 4. You will be able to understand and handle UNIX system calls...|$|R
50|$|Perl {{also takes}} {{features}} from <b>shell</b> <b>programming.</b> All variables are marked with leading sigils, which allow variables to be interpolated directly into strings. However, unlike the shell, Perl uses sigils on all accesses to variables, and unlike most other programming languages that use sigils, the sigil doesn't denote {{the type of}} the variable but the type of the expression. So for example, to access a list of values in a hash, the sigil for an array ("@") is used, not the sigil for a hash ("%").Perl also has many built-in functions that provide tools often used in <b>shell</b> <b>programming</b> (although many of these tools are implemented by programs external to the shell) such as sorting, and calling operating system facilities.|$|R
50|$|Fruity Dog was {{the only}} FidoNet mailer written for the Apple II series of computers, using the <b>shell</b> <b>programming</b> {{language}} (not a shell scripting language, but its own separate compiled language). The Yllar17 and Third Stone From The Sun BBSes were the home base for the code.|$|R
50|$|Surfraw (Shell Users Revolutionary Front Rage Against the Web) {{is a free}} {{public domain}} POSIX-compliant (i.e. meant for Linux, FreeBSD etc.) {{command-line}} <b>shell</b> <b>program</b> for interfacing {{with a number of}} web-based search engines. It was created in July 2000 by Julian Assange and is licensed in the public domain and written in the Bourne shell language.|$|E
50|$|Many Unix shells {{also offer}} a builtin exec command that replaces the shell process with the {{specified}} program.Wrapper scripts often use this command to run a program (either directly or through an interpreter or virtual machine) after setting environment variables or other configuration. By using exec, the resources used by the <b>shell</b> <b>program</b> {{do not need to}} stay in use after the program is started.|$|E
50|$|It is {{also known}} as the home campus of the Johns Hopkins Carey Business School. The new {{building}} is part of a mixed-use development with its neighbor, the Four Seasons Hotel, which was completed and opened in 2011. It is Pre-Certified Silver under the LEED Core and <b>Shell</b> <b>Program,</b> and was one of six developments recognized by the Urban Land Institute Wavemaker Award in 2009.|$|E
50|$|In Windows <b>Shell</b> <b>programming,</b> the Windows <b>Shell</b> {{namespace}} is {{an organized}} tree-structured hierarchical representation that Windows Explorer facilitates to graphically present file system contents {{and other objects}} to the end user. Conceptually, the Shell namespace may {{be regarded as a}} larger and more inclusive version of the file system.|$|R
50|$|Many {{disadvantages}} of using some script languages {{are caused by}} design flaws within the language syntax or implementation, and are not necessarily imposed {{by the use of}} a text-based command-line; {{there are a number of}} shells which use other <b>shell</b> <b>programming</b> languages or even full-fledged languages like Scsh (which uses Scheme).|$|R
50|$|Pack is a (now deprecated) Unix <b>shell</b> {{compression}} <b>program</b> {{based on}} Huffman coding.|$|R
50|$|Another {{command-line}} interface {{allows a}} <b>shell</b> <b>program</b> to launch helper programs, either to launch documents or start a program. The command is processed internally by the shell, and then {{passed on to}} another program to launch the document. The graphical interface of Windows and OS/2 rely heavily on command-lines passed through to other programs - console or graphical, which then usually process the command line without presenting a user-console.|$|E
50|$|Windows 1.0 runs a <b>shell</b> <b>program</b> {{known as}} the MS-DOS Executive, which {{is little more than}} a mouse-able output of the DIR command that does not support icons and is not Y2K-compliant. Other {{supplied}} programs are Calculator, Calendar, Clipboard Viewer, Clock, Notepad, Paint, Reversi, Cardfile, Terminal and Write. Windows 1.0 does not allow overlapping windows. Instead all windows are tiled. Only dialog boxes can appear over other windows, but cannot be minimized.|$|E
50|$|Scourge finally {{appeared}} in the IDW Publishing Beast Wars: The Gathering comic series as a Maximal Protoform who {{was turned into a}} Predacon by Magmatron's <b>shell</b> <b>program.</b> His appearance was not exactly auspicious however, he was {{one of a group of}} Predacons under Transquito sent to track down the Maximals in a swamp, only to encounter the protoforms that had become the Mutants. The Mutants seemingly killed most of their party, and Scourge and Insecticon fled.|$|E
50|$|Apollo {{machines}} used {{a proprietary}} operating system, Aegis, {{because of the}} excessive cost of single CPU Unix licenses {{at the time of}} system definition. Aegis, like Unix, was based on concepts from the Multics time sharing operating system. It used the concepts of <b>shell</b> <b>programming</b> (à la Stephen Bourne), single level store, and object-oriented design. Aegis was written in a proprietary version of Pascal.|$|R
50|$|The Unix <b>shell</b> command <b>program</b> called getopt can be {{used for}} parsing command line {{arguments}} in shell scripts.|$|R
40|$|Abstract — A web-based {{environment}} {{has been developed}} for students to perform C, Java, and <b>shell</b> <b>programming.</b> The environment runs on a Unix server, uses password authentication, and provides each student with separate project subdirectories {{that can not be}} seen by other students. Options are available to view files, edit source code, compile, run, run in debug mode, run with output plotted and displayed as a GIF image, display C preprocessor output, display generated assembly code, display optimized assembly code, and insert compiler error messages as comments into the source code. The environment is implemented using a combination of C code, perl, and shell scripts, and is freely available (open source). The source code of the environment itself can be used as examples in an advanced Unix/C programming or security course. The {{environment has}} been used successfully in both sophomore and senior-level C programming courses, a graduate Unix/C programming course (C and <b>shell</b> <b>programming),</b> and a senior/graduate computer communications security course (Java programming). Index Terms — Unix, open source, programming, web-based. I...|$|R
50|$|Examples of {{command-line}} interpreters include DEC's DIGITAL Command Language (DCL) in OpenVMS and RSX-11, {{the various}} Unix shells (sh, ksh, csh, tcsh, bash, etc.), the historical CP/M CCP, and MS-DOS/IBM-DOS/DR-DOS's COMMAND.COM, {{as well as}} the OS/2 and the Windows CMD.EXE programs, the latter groups being based heavily on DEC's RSX-11 and RSTS CLIs. Under most operating systems, it is possible to replace the default <b>shell</b> <b>program</b> with alternatives; examples include 4DOS for DOS, 4OS2 for OS/2, and 4NT or Take Command for Windows.|$|E
50|$|The HLA v2.x {{language}} {{system is}} a command-line driven tool that consists of several components, including a <b>shell</b> <b>program</b> (e.g., hla.exe under Windows), the HLA language compiler (e.g., hlaparse.exe), a low-level translator (e.g., the HLABE, or HLA Back Engine), a linker (link.exe under Windows, ld under Linux), and other tools such as a resource compiler for Windows. Versions before 2.0 relied on an external assembler back end; versions 2.x and later of HLA use the built-in HLABE as the back-end object code formatter.|$|E
50|$|In Unix-like {{operating}} systems, users {{typically have}} many choices of command-line interpreters for interactive sessions. When a user logs {{into the system}} interactively, a <b>shell</b> <b>program</b> is automatically executed {{for the duration of}} the session. The type of shell, which may be customized for each user, is typically stored in the user's profile, for example in the local passwd file or in a distributed configuration system such as NIS or LDAP; however, the user may execute any other available shell interactively.|$|E
40|$|GridShell maps {{grid and}} {{distributed}} computing concepts to the UNIX <b>shell</b> <b>programming</b> environment. This allows scientific and engineering users, already familiar with Tenex C Shell (tcsh) and Bourne Again Shell (bash), to quickly use the {{services provided by}} these distributed resources. Our demo will show how the scripting capabilities of GridShell {{can be used to}} orchestrate and coordinate the workflow of an engineering simulation using an established 2 -D flow solver. 1...|$|R
50|$|The SAM76 {{language}} is a list and string processor designed for interactive and user-directed applications, including artificial intelligence programming, and permits high portability from machine to machine. The language shares certain features in common with LISP, Forth, and <b>shell</b> <b>programming</b> languages of the UNIX operating system.Claude A. R. Kagan, the language's developer, sought to combine within a single interpretive processor, the characteristics of two different string and general-purpose macro generators and the provisions to embed multiple infix operator mathematical systems.|$|R
5000|$|Christiansen, with a C-and-Unix background, {{was one of}} {{the early}} {{contributors}} to Perl after its public release in 1987. He presented the first public Perl tutorial in 1989 and wrote the first academic paper to highlight Perl in 1990. [...] He was the author of much of the core Perl documentation, including the manual pages perlfaq and perltoot, development of perl.com. In 1996, Christiansen wrote [...] "Csh Programming Considered Harmful" [...] about the limitations inherent in C <b>Shell</b> <b>Programming.</b> Books he co-authored include: ...|$|R
