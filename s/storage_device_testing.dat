0|10000|Public
40|$|VMware ESX Server {{software}} {{has been}} tested and deployed {{in a variety of}} storage area network (SAN) environments. This guide describes the <b>storage</b> <b>devices</b> currently <b>tested</b> by VMware and its storage partners. NOTE The use of an external enclosure, or JBOD connected to a supported SAS/SCSI controller in a supported server is supported, {{as long as there is}} no disk sharin...|$|R
2500|$|Specially {{manufactured}} flash drives {{are available}} {{that have a}} tough rubber or metal casing designed to be waterproof and virtually [...] "unbreakable". These flash drives retain their memory after being submerged in water, and even through a machine wash. Leaving such a flash drive out to dry completely before allowing current to run through it {{has been known to}} result in a working drive with no future problems. Channel Five's Gadget Show cooked one of these flash drives with propane, froze it with dry ice, submerged it in various acidic liquids, ran over it with a jeep and fired it against a wall with a mortar. A company specializing in recovering lost data from computer drives managed to recover all the data on the drive. All data on the other removable <b>storage</b> <b>devices</b> <b>tested,</b> using optical or magnetic technologies, were destroyed.|$|R
40|$|An {{increasing}} demand for flexible, lightweight and low cost energy <b>storage</b> <b>devices</b> with high energy and power densities in different applications has motivated extensive {{research and development}} of different types of batteries and supercapacitors. A novel thin film energy <b>storage</b> <b>device</b> based on the ionic polymer metal composite configuration is presented, fabricated and tested in order to evaluate and compare it with current requirements for the energy storage needs. Different configurations of Ionic polymer-metal composite were fabricated and tested; the one showing the best charge-discharge performance was selected and more extensive tests and characterizations were carried out. The results have shown excellent performance for the chosen Sodium cation based configuration of energy storage. Finally, self powered systems based on the integration of polymer solar cells and the proposed energy <b>storage</b> <b>device</b> were <b>tested,</b> showing their appropriate integration. Several different applications of self powered systems are also presented...|$|R
40|$|Abstract—Newton-Raphson based {{methods are}} widely used for solving Optimal Power Flow (OPF) problems. Convergence can be {{sensitive}} to the starting point of the algorithm, the step size, and the condition number of the Jacobian. The inclusion of intertemporal constraints, i. e., constraints that link successive time steps in the optimization, can in certain cases cause the Jacobian to become singular and Newton-Raphson to diverge. These cases occur when the binding inter-temporal constraints do not fulfill the Linear Independence Constraint Qualification (LICQ). In this paper, we discuss the conditions under which this happens, and analyze when singularities occur in a particular <b>storage</b> <b>device</b> model <b>test</b> case...|$|R
40|$|Due {{to their}} low access latency, high read speed, and {{power-efficient}} operation, flash memory <b>storage</b> <b>devices</b> are rapidly emerging as an attractive alternative to traditional magnetic <b>storage</b> <b>devices.</b> However, <b>tests</b> {{show that the}} most efficient indexing methods {{are not able to}} take advantage of the flash memory <b>storage</b> <b>devices.</b> In this paper, we present a set of multi-level bitmap indexes that can effectively take advantage of flash <b>storage</b> <b>devices.</b> These indexing methods use coarsely binned indexes to answer queries approximately, and then use finely binned indexes to refine the answers. Our new methods read significantly lower volumes of data at the expense of an increased disk access count, thus taking full advantage of the improved read speed and low access latency of flash devices. To demonstrate the advantage of these new indexes, we measure their performance on a number of storage systems using a standard data warehousing benchmark called the Set Query Benchmark. We observe that multi-level strategies on flash drives are up to 3 times faster than traditional indexing strategies on magnetic disk drives. ...|$|R
5|$|Although early {{computers}} such as EDSAC made successful use {{of mercury}} delay line memory, the technology had several drawbacks; it was heavy, it was expensive, {{and it did}} not allow data to be accessed randomly. In addition, because data was stored as a sequence of acoustic waves propagated through a mercury column, the device's temperature had to be very carefully controlled, as the velocity of sound through a medium varies with its temperature. Williams had seen an experiment at Bell Labs demonstrating the effectiveness of cathode ray tubes (CRT) {{as an alternative to the}} delay line for removing ground echoes from radar signals. While working at the TRE, shortly before he joined the University of Manchester in December 1946, he and Tom Kilburn had developed a form of electronic memory known as the Williams or Williams–Kilburn tube based on a standard CRT, the first random-access digital <b>storage</b> <b>device.</b> The Manchester Small-Scale Experimental Machine (SSEM) was designed to show that the system was a practical <b>storage</b> <b>device,</b> by <b>testing</b> that data held within it could be read and written at the speed necessary for use in a computer.|$|R
40|$|Society faces {{diminishing}} {{access to}} clean drinking water because of increasing global {{population and the}} development of modern industries. At the same time, climate change and other environmental problems caused by the increase in fossil fuel consumption the emphasis on reducing dependency on traditional energy resources in the process of potable water production. To address both problems, a small-scale wind powered reverse osmosis (RO) desalination system with a unique energy storage mechanism was envisioned to provide an energy buffer such that fluctuating and intermittent wind can be utilized. Energy is stored in the form of compressed air in a pressure vessel (PV). The feasibility of this innovative design was evaluated for both seawater (35 g/l and 45 g/L NaCl solutions were selected for seawater experiments) and brackish water (15 g/L and 25 g/L NaCl solutions were selected for brackish water experiments) desalination. The RO desalination coupled with the PV energy <b>storage</b> <b>device</b> was <b>tested</b> using bench-scale experiments under different operating conditions. It was found tha...|$|R
40|$|It is {{generally}} accepted that {{the integration of}} intermittent energy resources like wind energy and photovoltaics into an electricity system cannot exceed a limit of around 20 % or 25 %, see, e. g. [EWEA, 2005. Large-scale integration of wind energy in the European power supply: analysis, issues and recommendations. The European Wind Energy Association]. However, the decoupling of electricity generation and consumption cannot be implemented only by use of electricity storage. In the end, electricity is converted into many different energy services - quite often into thermal energy - which is better suited for storage. This article {{presents the results of}} investigations which studied the potentialÂ of those demand response activities for Germany. The investigations are based on both modelling of thermal <b>storage</b> <b>devices</b> and laboratory <b>tests.</b> ...|$|R
5000|$|For HDDs {{and similar}} {{electromechanical}} <b>storage</b> <b>devices,</b> the random IOPS numbers are primarily {{dependent upon the}} <b>storage</b> <b>device's</b> random seek time, whereas, for SSDs and similar solid state <b>storage</b> <b>devices,</b> the random IOPS numbers are primarily dependent upon the <b>storage</b> <b>device's</b> internal controller and memory interface speeds. On both types of <b>storage</b> <b>devices,</b> the sequential IOPS numbers (especially when using a large block size) typically indicate the maximum sustained bandwidth that the <b>storage</b> <b>device</b> can handle. Often sequential IOPS are reported as a simple MB/s number as follows: ...|$|R
40|$|Computer systems {{employ a}} storage {{hierarchy}} that {{is composed of}} many types of <b>storage</b> <b>devices</b> with dierent access costs. Upper level <b>storage</b> <b>devices</b> provide faster data accesses over lower level <b>storage</b> <b>devices.</b> Caching is a technique to place data on upper level <b>storage</b> <b>devices</b> to reduce data access latencies. Caching has been extensively applied to divers...|$|R
5000|$|GDPS/HyperSwap Manager: It {{is based}} on {{synchronous}} Peer to Peer Remote Copy (PPRC) technology for use within a single data center. Data is copied from the primary <b>storage</b> <b>device</b> to a secondary <b>storage</b> <b>device.</b> In {{the event of a}} failure on the primary <b>storage</b> <b>device,</b> the system automatically makes the secondary <b>storage</b> <b>device</b> the primary, usually without disrupting running applications.|$|R
50|$|SATA uses a {{point-to-point}} architecture. The {{physical connection}} between a controller and a <b>storage</b> <b>device</b> is not shared among other controllers and <b>storage</b> <b>devices.</b> SATA defines multipliers, which allows a single SATA controller port {{to drive up}} to fifteen <b>storage</b> <b>devices.</b> The multiplier performs the function of a hub; the controller and each <b>storage</b> <b>device</b> {{is connected to the}} hub. This is conceptually similar to SAS expanders.|$|R
40|$|Storage {{systems have}} <b>storage</b> <b>devices</b> which run real time {{embedded}} software. Most <b>storage</b> <b>devices</b> use C and occasionally C [...] {{to manage and}} control the <b>storage</b> <b>device.</b> Software for the <b>storage</b> <b>device</b> must meet the time and resource constraints of the <b>storage</b> <b>device.</b> The prevailing wisdom in the embedded world is that objects and in particular Java only work for simple problems and can not handle REAL problems, are too slow and can not handle time critical processing and are too big and can't fit in memory constrained systems...|$|R
40|$|The {{experimental}} plant {{developed by}} TPG {{for studies on}} distributed generation systems was used for optimization tests. The facility is based on two co-generation prime movers, a 100 kWe gas turbine (mGT) and a 20 kWe internal combustion engine (ICE) connected to an innovative thermal distribution grid. The piping layout was developed to obtain the highest flexibility level for connection with thermal <b>storage</b> <b>devices.</b> The resulting <b>test</b> rig constitutes an experimental hardware platform for assessing, on a real basis, the performance of different optimization tools able to choose, in real-time mode, the “best” operative conditions. Therefore, a real-time software was developed to calculate marginal costs of plant operation and to optimize the polygeneration grid management. In the initial experimental campaign only the individual generators were considered. Standard management (electrical load following thermal demand) and optimized operation with thermal storage approach were compared. The main results {{are related to the}} optimization tests using the real-time software. Both electrical and thermal demand values were considered for operation with the mGT, the ICE and the grid. A result comparison was performed for the grid operated at constant storage set-point value and with a constrained optimization approach...|$|R
40|$|Abstract – In {{a future}} {{electric}} power system, there will exist {{a lot of}} distributed energy resources such as energy <b>storage</b> <b>devices,</b> renewable generation and cogeneration in the demand side. A system operator can utilize the dis-tributed energy <b>storage</b> <b>devices</b> to control power flow of transmission networks and supply-demand balance con-cerned with bilateral transactions. For management of such distributed energy storage de-vices, a mobile agent which can migrate in computer net-works is available. This paper proposes an application of the mobile agent to management of the distributed <b>storage</b> <b>devices</b> for power flow control of transmission network. Management of distributed <b>storage</b> <b>devices</b> is done hierar-chically. On the transmission-level, the system operator controls power flows by using a lot of distributed <b>storage</b> <b>devices</b> connected in distribution networks. On distribu-tion-level, the mobile agent aggregates the information about such distributed <b>storage</b> <b>devices</b> and makes charge-discharge schedules of individual <b>storage</b> <b>devices.</b> The mobile agent is called <b>Storage</b> <b>Device</b> Management (SDM) Agent in this paper. A prototype of SDM Agent is devel-oped by using Java language...|$|R
40|$|An {{apparatus}} {{connected to}} an energy <b>storage</b> <b>device</b> for powering {{an electric motor}} and optionally providing a warming function for the energy <b>storage</b> <b>device</b> is disclosed. The apparatus includes a circuit connected to the electric motor and the energy <b>storage</b> <b>device</b> for generating a current. The apparatus also includes a switching device operably associated with the circuit for selectively directing the current {{to one of the}} electric motor and the energy <b>storage</b> <b>device...</b>|$|R
40|$|The lunar sample <b>storage</b> <b>device</b> {{is mainly}} {{used for the}} {{preparation}} of the lunar samples, observation, physical analysis and other work. The lunar samples and operating equipment are placed directly inside the <b>storage</b> <b>device.</b> The inside of the <b>storage</b> <b>device</b> is a high purity nitrogen environment to ensure that the sample is not contaminated by the Earth's environment. In order to ensure that the water and oxygen indicators in the <b>storage</b> <b>device</b> meet the sample requirements, a dynamic gas cycle is required between the <b>storage</b> <b>device</b> and the external purification equipment. However, the internal gas disturbance in the <b>storage</b> <b>device</b> can affect the operation of the sample. In this paper, the <b>storage</b> <b>device</b> model is established, and the tetrahedral mesh is established by Tetra/Mixed method. The influence of different inlet position and gas flow on the internal flow field disturbance is calculated, and the disturbed flow area should be avoided during the sampling operation...|$|R
5000|$|Object-based <b>storage</b> <b>devices</b> (OSD) {{as well as}} some {{software}} implementations (e.g., Caringo Swarm) manage metadata {{and data}} at the <b>storage</b> <b>device</b> level: ...|$|R
5000|$|Direct {{integration}} to {{any type}} and format of <b>storage</b> <b>device</b> typically categorized as IT-centric <b>storage</b> <b>devices</b> allowing limitless or near limitless storage expansion ...|$|R
50|$|A {{hardware}} write block (HWB) device {{shall not}} transmit a command to a protected <b>storage</b> <b>device</b> that modifies {{the data on}} the <b>storage</b> <b>device.</b>|$|R
5000|$|Secondary <b>storage</b> <b>device</b> versus {{tertiary}} <b>storage</b> <b>device</b> or nearline <b>storage</b> — storage {{that remains}} attached versus storage that is attached or detached as needed ...|$|R
40|$|A {{parabolic}} dish that concentrates sunlight into a thermal <b>storage</b> <b>device</b> may comprise an inexpensive, environmentally benign, clean cooking technology appropriate for developing countries. A Scheffler Solar reflector was constructed and a thermal <b>storage</b> <b>device</b> built to eventually be {{coupled with the}} Scheffler. We tested the heat flow in the thermal <b>storage</b> <b>device</b> with an electric heater, and wrote Python code that solves the heat diffusion in 1 D and 2 D in order to model heat flow in the thermal <b>storage</b> <b>device...</b>|$|R
40|$|Advances in {{mass storage}} {{technology}} are producing devices capable of holding terabytes of data. These new devices, often called tertiary <b>storage</b> <b>devices,</b> have dramatically different performance characteristics than magnetic disks. Conventional database systems include explicit dependen-cies on magnetic disk, {{and so are}} unsuited to manage tertiary <b>storage</b> <b>devices.</b> A layer of abstrac-tion has been introduced between the access methods and physical <b>storage</b> <b>devices</b> in POSTGRES. This abstraction layer supports the addition of tertiary storage. An example implementation of a tertiary <b>storage</b> <b>device</b> manager is presented. Finally, the architecture of a novel file system that takes advantage of POSTGRES database system services is discussed. This file system may use any of the <b>storage</b> <b>devices</b> managed by POSTGRES. 1...|$|R
50|$|With storage virtualization, {{multiple}} independent <b>storage</b> <b>devices,</b> even if {{scattered across}} a network, {{appear to be}} a single monolithic <b>storage</b> <b>device</b> and can be managed centrally.|$|R
30|$|The current {{world is}} {{in the age of}} big data where the total amount of global digital data is growing up at an {{incredible}} rate. This indeed necessitates a drastic enhancement on the capacity of conventional data <b>storage</b> <b>devices</b> that are, however, suffering from their respective physical drawbacks. Under this circumstance, it is essential to aggressively explore and develop alternative promising mass <b>storage</b> <b>devices,</b> leading to the presence of probe-based <b>storage</b> <b>devices.</b> In this paper, the physical principles and the current status of several different probe <b>storage</b> <b>devices,</b> including thermo-mechanical probe memory, magnetic probe memory, ferroelectric probe memory, and phase-change probe memory, are reviewed in details, as well as their respective merits and weakness. This paper provides an overview of the emerging probe memories potentially for next generation <b>storage</b> <b>device</b> so as to motivate the exploration of more innovative technologies to push forward the development of the probe <b>storage</b> <b>devices.</b>|$|R
40|$|An {{emerging}} storage technology, called MEMS-based storage, promises nonvolatile <b>storage</b> <b>devices</b> with ultrahigh density, high rigidity, a small form factor, and low cost. For these reasons, MEMS-based <b>storage</b> <b>devices</b> {{are suitable}} for battery-powered mobile systems such as PDAs. For deployment in such systems, MEMS-based <b>storage</b> <b>devices</b> must consume little energy. This work mainly targets reducing the energy consumption of this class of devices. We derive the operation modes of a MEMS-based <b>storage</b> <b>device</b> and systemically devise a policy in each mode for energy saving. Three types of policies are presented: power management, shutdown, and data-layout policy. Combined, these policies reduce the total energy consumed by a MEMS-based <b>storage</b> <b>device.</b> A MEMS-based <b>storage</b> <b>device</b> that enforces these policies comes close to Flash with respect to energy consumption and response time. However, enhancement on the device level is still needed; we present some suggestions to resolve this issue...|$|R
5000|$|Installed apps can {{be moved}} to a {{different}} <b>storage</b> <b>device</b> using the settings app. Furthermore, new apps can be set to automatically install on a selected <b>storage</b> <b>device.</b>|$|R
30|$|The above {{battery limits}} {{have been taken}} from [25], where SOCy(t) and SOCy(t −  1) are the state of charge of yth <b>storage</b> <b>device</b> at current and {{previous}} hour, respectively. Pchy(t) and Pdisy(t) are the charging and discharging rate during a defined interval Δt. Equation (12) and (13) represent the maximum and minimum charging limits of the <b>storage</b> <b>device</b> at hour t. mchy and mdisy are the binary variables and Eq. (14) indicates that charging and discharging of the <b>storage</b> <b>device</b> cannot take place simultaneously. ηchy and ηdisy are charging and discharging efficiencies of the <b>storage</b> <b>device.</b>|$|R
40|$|MEMS-based <b>storage</b> <b>devices</b> promise {{significant}} performance, reliability, {{and power}} improvements relative to disk drives. This paper compares and contrasts these two storage technologies and explores how the physical characteristics of MEMS-based <b>storage</b> <b>devices</b> change four aspects of operating system (OS) management: request scheduling, data placement, failure management, and power conservation. Straightforward adaptations of existing disk request scheduling algorithms {{are found to}} be appropriate for MEMS-based <b>storage</b> <b>devices.</b> A new bipartite data placement scheme is shown to better match these devices 2 ̆ 7 novel mechanical positioning characteristics. With aggressive internal redundancy, MEMS-based <b>storage</b> <b>devices</b> can mask and tolerate failure modes that halt operation or cause data loss for disks. In addition, MEMS-based <b>storage</b> <b>devices</b> simplify power management because the devices can be stopped and started rapidly...|$|R
40|$|We {{study the}} issues {{relating}} to coding for a proposed high-density storage system consisting of an array of <b>storage</b> <b>devices.</b> The <b>storage</b> <b>devices</b> store data in a two-dimensional (2 -D) manner. The data on each <b>storage</b> <b>device</b> is encoded using an inner code; coding across the devices uses an outer code. Array codes are {{shown to be a}} good choice for the outer codes and low-density parity-check codes for the inner codes. The read-back data from the <b>storage</b> <b>devices</b> has 2 -D intersymbol interference. Joint equalization and decoding methods are used for detection and decoding on each <b>storage</b> <b>device.</b> The issue of the trade o# between decoding performance and passing soft or hard information from the inner code to the outer code is also discussed...|$|R
50|$|The FireWire SBP-2 fabric module enables Linux {{to export}} local <b>storage</b> <b>devices</b> via IEEE 1394, so that other systems can mount {{them as an}} {{ordinary}} IEEE 1394 <b>storage</b> <b>device.</b>|$|R
50|$|The SAN is a {{dedicated}} network that enables multiple servers to access data {{from one or}} more <b>storage</b> <b>devices.</b> Enterprise <b>storage</b> uses the SAN to backup to secondary <b>storage</b> <b>devices</b> including disk arrays, tape libraries, and other backup while the storage is still accessible to the server. Servers may access storage from multiple <b>storage</b> <b>devices</b> over the network as well.|$|R
5000|$|... bcache (abbreviated from block cache) is a cache in the Linux kernel's block layer, {{which is}} used for {{accessing}} secondary <b>storage</b> <b>devices.</b> It allows one or more fast <b>storage</b> <b>devices,</b> such as flash-based solid-state drives (SSDs), {{to act as a}} cache for one or more slower <b>storage</b> <b>devices,</b> such as hard disk drives (HDDs); this effectively creates hybrid volumes and provides performance improvements.|$|R
40|$|The use of {{flash memory}} based <b>storage</b> <b>devices</b> is rapidly increasing, and user demands for high {{performance}} are also constantly increasing. The {{performance of the}} flash <b>storage</b> <b>device</b> is greatly influenced by cleaning operations of Flash Translation Layer (FTL). Various {{studies have been conducted}} to lower the cost of cleaning operations. However, there are limits to achieve sufficient performance improvement of flash storages without help of a host system, with only limited information in <b>storage</b> <b>devices.</b> Recently, SCSI, eMMC, and UFS standards provide an interface for sending semantic information from a host system to a <b>storage</b> <b>device.</b> In this paper, we analyze effects of semantic information on performance and lifetime of flash <b>storage</b> <b>devices.</b> We evaluate performance and lifetime improvement through SA-FTL (Semantic Aware Flash Translation Layer), which can take advantage of semantic information in <b>storage</b> <b>devices.</b> Experiments show that SA-FTL improves performance and lifetime of flash based storages by up to 30 and 35 %, respectively, compared to a simple page-level FTL...|$|R
40|$|Bugs {{affecting}} <b>storage</b> <b>device</b> drivers {{include the}} so-called protocol violation bugs, which silently corrupt data and commands exchanged with I/O devices. Protocol violations {{are very difficult}} to prevent, since <b>testing</b> <b>device</b> driver is notoriously difficult. To address them, we present a monitoring approach for device drivers (MoIO) to detect HO protocol violations at run-time. The approach infers a model of the interactions between the <b>storage</b> <b>device</b> driver, the OS kernel, and the hardware (the device driver protocol) by analyzing execution traces. The model is then used as a reference for detecting violations in production. The approach has been designed to have a low overhead and to overcome the lack of source code and protocol documentation. We show that the approach is feasible and effective by applying it on the SATA/AHCI <b>storage</b> <b>device</b> driver of the Linux kernel, and by performing fault injection and long-running tests...|$|R
50|$|The USB Gadget fabric module enables Linux {{to export}} local <b>storage</b> <b>devices</b> via the Universal Serial Bus (USB), so that other systems can mount {{them as an}} {{ordinary}} <b>storage</b> <b>device.</b>|$|R
