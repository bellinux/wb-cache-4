787|5873|Public
5|$|The {{following}} table shows a <b>sequence</b> <b>number,</b> {{a number}} of groups, the SWV number, for groups the Latin term of the single part from the print, {{the first line of}} the Latin text replacing a title, a translation, an abbreviation of the text source within the prayer book and notes. The translations follow Emmanuel Music for SWV 53 to 81, otherwise the recording of the Heinrich Schütz Edition by Matteo Messori. For biblical quotation, the King James version is additionally supplied in the details about single pieces.|$|E
5|$|There are {{two basic}} forms of data packet, DATA0 and DATA1. A data packet must always be preceded by an address token, and is usually {{followed}} by a handshake token from the receiver back to the transmitter. The two packet types provide the 1-bit <b>sequence</b> <b>number</b> required by stop-and-wait ARQ. If a USB host does not receive a response (such as an ACK) for data it has transmitted, it does not know if the data was received or not; the data might have been lost in transit or {{it might have been}} received but the handshake response was lost.|$|E
25|$|Numbering {{subsequent}} Application {{records with}} a <b>sequence</b> <b>number</b> and using this <b>sequence</b> <b>number</b> {{in the message}} authentication codes (MACs).|$|E
50|$|A {{means of}} {{comparing}} two <b>sequence</b> <b>numbers</b> i1 and i2 (the unsigned integer representations of <b>sequence</b> <b>numbers</b> s1 and s2) is presented.|$|R
50|$|Lollipop <b>sequence</b> <b>numbering</b> was {{originally}} believed {{to resolve the}} ambiguity problem in cyclic <b>sequence</b> <b>numbering</b> schemes, and was used in OSPF version 1 for this reason. Later work showed {{that this was not}} the case, and OSPF version 2 replaced it with a linear numbering space, with special rules for what happens when the <b>sequence</b> <b>numbers</b> reach the end of the numbering space.|$|R
40|$|We {{show that}} {{the way in which}} the Ad-hoc On-demand Distance Vector (AODV) {{protocol}} handles destination-based <b>sequence</b> <b>numbers</b> can lead to looping of data packets, defacto network partitions, and counting to infinity in the presence of link or node failures in ad hoc networks using an unreliable medium access control (MAC) protocol like the IEEE 802. 11 DCF. The source of AODV's problems with <b>sequence</b> <b>numbers</b> is the use of a delete period after which nodes are allowed to forget invalid routes to destinations. We present a new approach for the handling of <b>sequence</b> <b>numbers</b> in AODV that eliminates the use of delete periods for destination-based <b>sequence</b> <b>numbers,</b> and show with simulation experiments that the new approach performs the same or better than AODV...|$|R
25|$|If {{there are}} {{multiple}} LFN entries, required to represent a file name, firstly comes the last LFN entry (the {{last part of the}} filename). The <b>sequence</b> <b>number</b> also has bit 6 (0x40) set (this means the last LFN entry, however it's the first entry seen when reading the directory file). The last LFN entry has the largest <b>sequence</b> <b>number</b> which decreases in following entries. The first LFN entry has <b>sequence</b> <b>number</b> 1. A value of 0xE5 is used to indicate that the entry is deleted.|$|E
25|$|The FBI in {{the past}} has {{identified}} individuals by the <b>sequence</b> <b>number</b> in which each individual has appeared on the list. Some individuals have even appeared twice, and often a <b>sequence</b> <b>number</b> was permanently assigned to an individual suspect who was soon caught, captured, or simply removed, before his or her appearance could be published on the publicly released list. In those cases, the public would see only gaps in the number sequence reported by the FBI. For convenient reference, the wanted suspect's <b>sequence</b> <b>number</b> and date of entry on the FBI list appear below, whenever possible.|$|E
25|$|Sequence number: (16 bits) The <b>sequence</b> <b>number</b> is {{incremented}} by one {{for each}} RTP data packet sent and {{is to be used}} by the receiver to detect packet loss and to restore packet sequence. The RTP does not specify any action on packet loss; it is left to the application to take appropriate action. For example, video applications may play the last known frame in place of the missing frame. According to , the initial value of the <b>sequence</b> <b>number</b> should be random to make known-plaintext attacks on encryption more difficult. RTP provides no guarantee of delivery, but the presence of sequence numbers makes it possible to detect missing packets.|$|E
5000|$|DCCP has {{the option}} {{for very long}} (48-bit) <b>sequence</b> <b>numbers</b> {{corresponding}} to a packet ID, rather than a byte ID as in TCP. The long length of the <b>sequence</b> <b>numbers</b> aims to guard against [...] "some blind attacks, such as the injection of DCCP-Resets into the connection".|$|R
40|$|In {{the area}} of mobile ad-hoc {{networks}} and wireless mesh networks, <b>sequence</b> <b>numbers</b> are often used in routing protocols to avoid routing loops. It is commonly stated in protocol specifications that <b>sequence</b> <b>numbers</b> are sufficient to guarantee loop freedom if they are monotonically increased over time. A classical example {{for the use of}} <b>sequence</b> <b>numbers</b> is the popular Ad hoc On-Demand Distance Vector (AODV) routing protocol. The loop freedom of AODV is not only a common belief, it has been claimed in the abstract of its RFC and at least two proofs have been proposed. AODV-based protocols such as AODVv 2 (DYMO) and HWMP also claim loop freedom due to the same use of <b>sequence</b> <b>numbers.</b> In this paper we show that AODV is not a priori loop free; by this we counter the proposed proofs in the literature. In fact, loop freedom hinges on non-evident assumptions to be made when resolving ambiguities occurring in the RFC. Thus, monotonically increasing <b>sequence</b> <b>numbers,</b> by themselves, do not guarantee loop freedom. Comment: arXiv admin note: text overlap with arXiv: 1312. 764...|$|R
5000|$|... #Caption: <b>Sequence</b> <b>numbers</b> modulo 4, with wr=1. Initially, nt=nr=0 ...|$|R
25|$|The <b>sequence</b> <b>number</b> {{of a year}} in the 19-year {{cycle is}} called its golden number. This term was first used in the computistic poem Massa Compoti by Alexander de Villa Dei in 1200. A later scribe added the golden number to tables {{originally}} composed by Abbo of Fleury in 988.|$|E
25|$|The {{calendar}} {{seems to}} have employed several schedules to determine which of the 19 years will be intercalary years. To find out which year will have an intercalary month, divide the Burmese year by 19. The quotient is the expired cycles. The remainder, if tallies with the set <b>sequence</b> <b>number</b> of the prevailing Metonic cycle, {{then it will be}} an intercalary year.|$|E
25|$|The {{second and}} third digits {{indicate}} the <b>sequence</b> <b>number</b> of the train. For instance, x01 is the first train of the day. These digits also indicate {{the direction of the}} train; odd-numbered trains run northbound, and even-numbered trains run southbound. Thus x02 is the first southbound train of the day, x03 is the second northbound train of the day, etc.|$|E
5000|$|Extended <b>Sequence</b> <b>Numbers</b> (X) (1 bit): Set to one to {{indicate}} {{the use of an}} extended generic header with 48-bit <b>Sequence</b> and Acknowledgement <b>Numbers</b> ...|$|R
50|$|Specifies whether 3 or 7 bit <b>sequence</b> <b>numbers</b> are in use.|$|R
5000|$|... usn: Update <b>Sequence</b> <b>Numbers</b> (as in Microsoft AD, not yet released) ...|$|R
25|$|Historically the paschal {{full moon}} date {{for a year}} was found from its <b>sequence</b> <b>number</b> in the Metonic cycle, called the golden number, which cycle repeats the lunar phase on a certain date every 19 years. This method was {{abandoned}} in the Gregorian reform because the tabular dates go {{out of sync with}} reality after about two centuries, but from the epact method a simplified table can be constructed that has a validity of one to three centuries.|$|E
25|$|By 1932, the {{available}} codes were running out, and an extended scheme was introduced. This scheme placed a serial letter before the code, {{and had the}} <b>sequence</b> <b>number</b> run only to 999, thus restricting the number of characters in a registration to six. The first area to issue such marks was Staffordshire in July 1932 with ARF1 etc., and all other areas in England and Wales, plus most areas in Scotland, followed suit once they had issued all their two-letter registrations.|$|E
25|$|The {{first series}} of number plates was issued in 1903 and ran until 1932, {{consisting}} of a one- or two-letter code followed by a <b>sequence</b> <b>number</b> from 1 to 9999. The code indicated the local authority in whose area the vehicle was registered. In England and Wales, these were initially allocated in order of population size (by the 1901 census) – thus A indicated London, B indicated Lancashire, C indicated the West Riding of Yorkshire and so on up to Y indicating Somerset, then AA indicated Hampshire, AB indicated Worcestershire and so on up to FP indicating Rutland.|$|E
30|$|Data packet {{transmission}} on idle paths is simulated with the heartbeat mechanism. Heartbeat packets are enlarged to simulate real data packets; their packet type is changed to discriminate data packets for probing, and the <b>sequence</b> <b>numbers</b> of the packets are {{filled in the}} idle column. The transmission condition is determined from the packet <b>sequence</b> <b>numbers.</b>|$|R
40|$|Traditional error {{protocols}} use <b>sequence</b> <b>numbers</b> {{to identify}} so-called protocol data units (PDUs). As {{long as the}} reliability of data transmission {{is the responsibility of}} a transport-level protocol, <b>sequence</b> <b>numbers</b> work well. A new generation of protocols based on Application Level Framing (ALF) [3] place the control of data transmission, i. e. managing errors and congestion, at the application level. However, <b>sequence</b> <b>numbers</b> do not allow ALF protocols to take advantage of their control capabilities as <b>sequence</b> <b>numbers</b> have no semantic interpretation of the packet content. Consequently, naming of Application Data Units (ADUs) is needed to allow ALF applications to have greater control over data transmissions. In this paper, we propose a new hierarchical data naming approach. We show how this approach allows more flexible control over reliability semantics that are meaningful to the applications. We show how this mechanism can be integrated into the Reliable Multicast Framing Protocol [...] ...|$|R
5000|$|I.Tanaka, Oiban Kanri - <b>Sequence</b> <b>Numbering</b> System, Publ. by JMAM, Tokyo, December 2005 ...|$|R
25|$|Tree {{alignment}} {{problem is}} a NP-hard problem when we restrict its scoring mode and alphabet size, {{and it can be}} found an algorithm, which uses to find the optimized solution. However, there is an exponential relationship between its efficiency and the number of sequence, it means when the number of sequence is very large, the runtime before getting results is an enormous figure and it is unacceptable. Using star alignment is faster than tree alignment to get the approximate optimized solution. However, whatever the degree of multiple-sequence similarity is, the time complexity of star alignment has a proportional relationship with the square of <b>sequence</b> <b>number</b> and the square of the sequence average length. In usual, the sequence in MSA is so long that it is also inefficient or even unacceptable. Therefore, how to reduce the time complexity to linear is one of the core issues in the Tree alignment.|$|E
25|$|S. cerevisiae was {{the first}} {{eukaryotic}} genome to be completely sequenced. The genome sequence was {{released to the public}} domain on April 24, 1996. Since then, regular updates have been maintained at the Saccharomyces Genome Database. This database is a highly annotated and cross-referenced database for yeast researchers. Another important S.cerevisiae database is maintained by the Munich Information Center for Protein Sequences (MIPS). The S. cerevisiae genome is composed of about 12,156,677 base pairs and 6,275 genes, compactly organized on 16 chromosomes. Only about 5,800 of these genes are believed to be functional. It is estimated at least 31% of yeast genes have homologs in the human genome. Yeast genes are classified using gene symbols (such as sch9) or systematic names. In the latter case the 16 chromosomes of yeast are represented by the letters A to P, then the gene is further classified by a <b>sequence</b> <b>number</b> on the left or right arm of the chromosome, and a letter showing which of the two DNA strands contains its coding sequence.|$|E
500|$|In 1598 Epsilon Eridani was {{included}} in Tycho Brahe's star catalogue, republished in 1627 by Johannes Kepler {{as part of his}} Rudolphine Tables. This catalogue was based on Tycho Brahe's observations of 1577–1597, including those on the island of Hven at his observatories of Uraniborg and Stjerneborg. The <b>sequence</b> <b>number</b> of Epsilon Eridani in the constellation Eridanus was 10, and it was designated , the meaning is the same as Ptolemy's description. Brahe assigned it magnitude 3.|$|E
50|$|<b>Sequence</b> <b>numbers</b> may be {{reserved}} on completion of form VRT15A and payment of €1,000.|$|R
50|$|This is {{obviously}} true for any two <b>sequence</b> <b>numbers</b> with distance of 0x8000 between them.|$|R
5000|$|In mathematics, Padovan polynomials are a {{generalization}} of Padovan <b>sequence</b> <b>numbers.</b> These polynomials are defined by: ...|$|R
500|$|In 1690 Epsilon Eridani was {{included}} in the star catalogue of Johannes Hevelius. Its <b>sequence</b> <b>number</b> in constellation Eridanus was 14, its designation was [...] (the third), and it was assigned magnitude 3 or 4 (sources differ). The star catalogue of English astronomer John Flamsteed, published in 1712, gave Epsilon Eridani the Flamsteed designation of 18Eridani, because it was the eighteenth catalogued star in the constellation of Eridanus by order of increasing right ascension. In 1818 Epsilon Eridani {{was included}} in Friedrich Bessel's catalogue, based on James Bradley's observations from 1750–1762, and at magnitude 4. It also appeared in Nicolas Louis de Lacaille's catalogue of 398 principal stars, whose 307-star version was published in 1755 in the , and whose full version was published in 1757 in , Paris. In its 1831 edition by Francis Baily, Epsilon Eridani has the number 50. Lacaille assigned it magnitude 3.|$|E
2500|$|... k is the <b>sequence</b> <b>number</b> of {{the cash}} flows paid by the {{borrower}} (repayment) ...|$|E
2500|$|... l is the <b>sequence</b> <b>number</b> for {{the cash}} flows {{paid by the}} lender (draw down) ...|$|E
5000|$|The Padovan <b>sequence</b> <b>numbers</b> can {{be written}} in terms of powers of {{the roots of the}} {{equation}} ...|$|R
5000|$|Test <b>sequence</b> <b>numbers</b> (CmdSN, DataSN, R2TSN); test SCSI Command/Response, Task Management Function Request/Response, Text Request/Response, NOP-In/NOP-Out, SNACK Request...|$|R
50|$|The third four bits, if present, are {{a second}} <b>sequencing</b> <b>number</b> {{which can be}} used to align {{multiple}} virtual circuits.|$|R
