73|83|Public
50|$|Eventually {{the limits}} of the {{symbolic}} AI research program became apparent. For instance, it seemed to be unrealistic to comprehensively list human knowledge in a form usable by a <b>symbolic</b> <b>computer</b> program. The late 80s and 90s saw the rise of neural networks and connectionism as a research paradigm. Under this point of view, often attributed to James McClelland and David Rumelhart, the mind could be characterized as a set of complex associations, represented as a layered network. Critics argue that there are some phenomena which are better captured by symbolic models, and that connectionist models are often so complex as to have little explanatory power. Recently symbolic and connectionist models have been combined, making it possible to take advantage of both forms of explanation.|$|E
5000|$|Particle {{physics is}} an {{important}} field of application for computer algebra and exploits the capabilities of Computer Algebra Systems (CAS). This leads to valuable feed-back {{for the development of}} CAS. Looking at the history of computer algebra systems, the first programs date back to the 1960s. The first systems were almost entirely based on [...] LISP ("LISt Programming language"). LISP is an interpreted language and, as the name already indicates, designed for the manipulation of lists. Its importance for <b>symbolic</b> <b>computer</b> programs in the early days has been compared to the importance of FORTRAN for numerical programs in the same period. Already in this first period, the program REDUCE had some special features for the application to high energy physics. An exception to the LISP-based programs was SCHOONSHIP, written in assembler language by Martinus J. G. Veltman and specially designed for applications in particle physics. The use of assembler code lead to an incredible fast program (compared to the interpreted programs at that time) and allowed the calculation of more complex scattering processes in high energy physics. It has been claimed the program's importance was recognized in 1998 by awarding the half of the Nobel prize to Veltman. Also the program MACSYMA deserves to be mentioned explicitly, since it triggered important development with regard to algorithms. In the 1980s new computer algebra systems started to be written in C. This enabled the better exploitation of the resources of the computer (compared to the interpreted language LISP) {{and at the same time}} allowed to maintain portability (which would not have been possible in assembler language). This period marked also the appearance of the first commercial computer algebra system, among which Mathematica and Maple are the best known examples. In addition, also a few dedicated programs appeared, an example relevant to particle physics is the program FORM by J. Vermaseren as a (portable) successor to SCHOONSHIP. More recently issues of the maintainability of large projects became more and more important and the overall programming paradigma changed from procedural programming to object-oriented design. In terms of programming languages this was reflected by a move from C to C++. Following this change of paradigma, the library GiNaC was developed. The GiNac library allows symbolic calculations in C++.|$|E
40|$|In {{the first}} part of he thesis: the exact {{solutions}} of the two-dimnensional unsteady Euler equations are derived using the group-theoretical method via the <b>symbolic</b> <b>computer</b> package written in Maple [l]. In {{the second part of the}} thesis, the Riemann problem of the two-dimensional unsteady Euler equations are investigated based on Generalized Lagrangian formulation...|$|E
5000|$|... 1985: Symbolics.com, {{the website}} for <b>Symbolics</b> <b>Computer</b> Corp. in Massachusetts, {{was the first}} {{registered}} domain.|$|R
50|$|Advances in garbage {{collection}} techniques by Henry Baker, David A. Moon and others, particularly {{the first commercial}} use of generational scavenging, allowed <b>Symbolics</b> <b>computers</b> to run large Lisp programs {{for months at a}} time.|$|R
50|$|N-World's origins can {{be traced}} back to <b>Symbolics,</b> a <b>computer</b> {{manufacturer}} notable for producing LISP-based systems in the 1980s. Among the software packages available for <b>Symbolics</b> <b>computers</b> was S-Graphics, a 3D animation suite that included modules for polygon modeling, dynamics, paint, and rendering (S-Geometry, S-Dynamics, S-Paint, and S-Render, respectively). In 1992, Japanese trading company Nichimen Corporation purchased the rights to S-Graphics, ported it to Silicon Graphics IRIX, and marketed it as N-World.|$|R
40|$|We {{present an}} {{algorithm}} for computing instanton numbers of curve singularities. A comparison is made between these {{and some other}} invariants of curve singularities. The algorithm has been implemented in the <b>symbolic</b> <b>computer</b> algebra program Macaulay 2, and can be downloaded from [URL] Revised version, several new examples have been added. To appear in J. Symbolic Computatio...|$|E
40|$|A {{new method}} {{to obtain the}} Picard–Fuchs {{equations}} of effective, N = 2 supersymmetric gauge theories with massive matter hypermultiplets in the fundamental representation is presented. It generalises a previously described method to derive the Picard–Fuchs equations of both pure super Yang–Mills and supersymmetric gauge theories with massless matter hypermultiplets. The techniques developed are well suited to <b>symbolic</b> <b>computer</b> calculations...|$|E
40|$|We present {{different}} methods for <b>symbolic</b> <b>computer</b> algebra computations in higher dimensional (> 9) Clifford algebras using the and packages for (R). This is achieved using graded tensor decompositions, periodicity theorems and matrix spinor representations over Clifford numbers. We show how to code the graded algebra isomorphisms {{and the main}} involutions, and we provide some benchmarks. Comment: paper accepted for presentation @ AGACSE 12, La Rochell...|$|E
5000|$|... #Caption: TI-89 Titanium, {{capable of}} doing <b>Symbolic</b> Manipulation, <b>Computer</b> Algebra System (CAS) ...|$|R
40|$|The {{purpose of}} this manual is {{to serve as a}} {{reference}} guide to the XE environment for those who need to understand how it has been implemented. The manual begins with a short introduction to the basic concepts of the XE environment, then the operational structure is briefly explained. The body of this manual consists of {{a detailed description of the}} source modules, which make up the XE environment. The environment is implemented using the Common Lisp [6] language in a <b>Symbolics</b> <b>computer...</b>|$|R
5000|$|The various {{models of}} the 3600 family were popular for AI {{research}} and commercial applications throughout the 1980s. The AI commercialization boom of the 1980s led directly to Symbolics' success during the decade. <b>Symbolics</b> <b>computers</b> were widely {{believed to be the}} best platform available for developing AI software. The LM-2 used a Symbolics-branded version of the complex space-cadet keyboard, while later models used a simplified version (at right), known simply as the [...] The Symbolics keyboard featured the many modifier keys used in Zmacs, notably Control/Meta/Super/Hyper in a block, but did not feature the complex symbol set of the space-cadet keyboard.|$|R
40|$|This {{paper is}} part of a series of papers in which the {{asymptotic}} theory and appropriate <b>symbolic</b> <b>computer</b> code are developed to compute the asymptotic expansion of the solution of an n-th order ordinary differential equation. The paper examines the situation when the matrix that appears in the Levinson expansion has a double eigenvalue. Application is made to a fourth-order ODE with known special function solution...|$|E
40|$|I {{consider}} {{the expansion of}} transcendental functions in a small parameter around rational numbers. This includes in particular the expansion around half-integer values. I present algorithms which are suitable for an implementation within a <b>symbolic</b> <b>computer</b> algebra system. The method {{is an extension of}} the technique of nested sums. The algorithms allow in addition the evaluation of binomial sums, inverse binomial sums and generalizations thereof. Comment: 21 page...|$|E
40|$|A {{method is}} {{introduced}} {{to calculate the}} UV-divergent parts at one-loop level in dimensional regularization. The method {{is based on the}} recursion, and the basic integrals are just the scaleless integrals after the recursive reduction, which involve no other momentum scales except the loop momentum itself. The method can be easily implemented in any <b>symbolic</b> <b>computer</b> language, and an implementation in Mathematica is ready to use. Comment: 10 pages, 1 figure, typos fixed, to appear in Computer Physics Communication...|$|E
40|$|This {{manuscript}} gives a terse {{description of}} the following file system protocols: -NFS: Sun Microsystem's Network File System protocol, Version 2 (the current released version), and Version 3 (to be released in the 47 th quarter of 1989). -RFS: AT&T's Remote File Sharing protocol. -AFS: Andrew File System protocol. -AFP: AppleTalk Filing Protocol (AppleShare). -DDM: IBM's Distributed Data Management protocol. -Sprite: An operating system under development at University of California, Berkeley. -NFILE: A file access protocol devised for <b>Symbolics</b> <b>computers.</b> According to McLuhan, and I have him right here, data collection yields to pattern recognition, so this enumeration should become a classification, turning a crib sheet into a taxonomy...|$|R
5000|$|<b>Symbolic</b> {{validation}} (via <b>computer</b> algebra) of conjectures {{to motivate}} {{the search for}} an analytical proof ...|$|R
40|$|We {{present a}} scheme for the {{analytic}} computation of renormalization functions on the lattice, using a <b>symbolic</b> manipulation <b>computer</b> language. Our first nontrivial application {{is a new}} three-loop result for the topological susceptibility. Comment: 15 pages + 2 figures (PostScript), report no. IFUP-TH 31 / 9...|$|R
40|$|This {{paper will}} use an early {{developed}} perturbation technique [3] {{to compute the}} normal forms for a general n-dimensional system described {{by a set of}} differential equations. The Jacobian of the system evaluated at an equilibrium involves two pairs of purely imaginary eigenvalues. The method does not need the application of the center manifold, nor require for solving large matrix systems. Moreover, {{with the aid of a}} <b>symbolic</b> <b>computer</b> language Maple, this approach is straightforward and computationally efficient...|$|E
40|$|In the near-past we {{introduced}} a simplified linearized {{model for the}} fluid-coupled vibratory responses of nuclear fuel racks, neglecting three-dimensional flow effects and assuming small gaps between the fuel assemblies. In this paper, using the same basic approach, we generalize the above-mentioned model to account for nonlinear squeeze-film and dissipative flow effects. The proposed methodology can be automatically implemented on a <b>symbolic</b> <b>computer</b> environment. Numerical simulations highlight the significance of nonlinear flow effects at high vibration amplitudes, yielding more realistic predictions...|$|E
40|$|Projet META 2 A {{high-level}} interactive symbolic-numeric {{software environment}} {{based on the}} <b>symbolic</b> <b>computer</b> algebra system Maple, its extension Macrofort and the high performance scientific software package y lab. is presented. This general purpose software environment can be used both for solving specific problems and for developing specialized software packages. We shall illustrate this latter application by developing a simple software package for the simulation and control of multibody mechanical systems. As an example, simulation and control of a bicycle are presented...|$|E
40|$|Classical {{symbolic}} computational {{models of}} cognition are {{at variance with}} the empirical findings in the cognitive psychology of memory and inference. Standard <b>symbolic</b> <b>computers</b> are well suited to remembering arbitrary lists of symbols and performing logical inferences. In contrast, human performance on such tasks is extremely limited. Standard models donot easily capture content addressable memory or context sensitive defeasible inference, which are natural and effortless for people. We argue that Connectionism provides a more natural framework in which to model this behaviour. In addition to capturing the gross human performance profile, Connectionist systems seem well suited to accounting for the systematic patterns of errors observed in the human data. We take these arguments to counter Fodor and Pylyshyn's (1988) recent claim that Connectionism is, in principle, irrelevant to psychology...|$|R
40|$|International Telemetering Conference Proceedings / October 26 - 29, 1987 / Town and Country Hotel, San Diego, CaliforniaIn an Independent Research and Development (IR&D) effort, the Telemetry Systems Operation (TSO) of Computer Sciences Corporation (CSC) {{sought to}} {{determine}} the feasibility of using Artificial Intelligence (AI) techniques in a real-time processing environment. Specifically, {{the use of an}} expert system to assist in telemetry data acquisition processing was studied. A prototype expert system was implemented with the purpose of monitoring F 15 Vertical Short Take Off and Landing (VSTOL) aircraft engine tests in order to predict engine stalls. This prototype expert system was implemented on a Symbolics 3670 symbolic processor using Inference Corporation's Artificial Reasoning Tool (ART) expert system compiler/generator. The <b>Symbolics</b> <b>computer</b> was connected to a Gould/SEL 32 / 6750 real-time processor using a Flavors, Inc. Bus Link for real-time data transfer...|$|R
40|$|We {{show how}} to {{determine}} the parameter redundancy status of a model with covariates {{from that of the}} same model without covariates, thereby simplifying calculation considerably. A matrix decomposition is necessary to ensure that <b>symbolic</b> computation <b>computer</b> programs return correct results. The paper is illustrated by mark-recovery and latent-class models, with associated Maple code...|$|R
40|$|We {{describe}} a generative, scalable software infrastructure for pathway bioinformatics and systems biology. The Sigmoid modeling {{system is a}} three-tier architecture comprising distributed modules that implement pathway/cell model generation and simulation (Cellerator), a pathway modeling database (Sigmoid proper), a Web service-oriented middleware, a graphical user interface, and in the future, parameter optimization and other datamining technologies. Key {{to the design of}} the infrastructure is its scalability ensured by leveraging <b>symbolic</b> <b>computer</b> algebra and self-generation of database and other code from high-level representations such as UML schema. All Sigmoid modeling software components are available through...|$|E
40|$|New {{algebraic}} {{relations are}} presented, involving anticommuting Grassmann variables and Berezin integral, and corresponding naturally to Pachner moves in {{three and four}} dimensions. These relations have been found experimentally - using <b>symbolic</b> <b>computer</b> calculations; their essential new feature is that, although they can be treated as deformations of relations corresponding to torsions of acyclic complexes, {{they can no longer}} be explained in such terms. In the simpler case of three dimensions, we define an invariant, based on our relations, of a piecewise-linear manifold with triangulated boundary, and present example calculations confirming its nontriviality...|$|E
40|$|Abstract: In this paper, an {{explicit}} recursive formula of normal forms under nonlinear near-identity transformations is introduced. By solving {{a series of}} algebra equations {{with the aid of}} Maple, not only the coefficients of k order normal form and the associated nonlinear transformations but also high (>k) order terms of the original equations can be obtained. An example about four-dimensional nilpotent dynamical system is given to show applicability of the recursive formula and the outline of <b>symbolic</b> <b>computer</b> programs is given to support application of the recursive formula...|$|E
40|$|The van der Waals {{coexistence}} {{curve of}} liquid and vapor volumes as {{functions of the}} temperature (all in reduced coordinates) {{as well as the}} correspponding vapor pressures at these temperatures, is obtained using SageMath, a <b>symbolic</b> calculus/algebra <b>computer</b> programming language. The lack of correspondence of the coexistence locus’ analytical form as obtained herein and those of Lekner remains disconcerting...|$|R
5000|$|Thus {{the problem}} for each {{dimension}} is not conceptually hard but general methods of solving systems of inequalities are very inefficient (even with powerful <b>symbolic</b> algebra <b>computer</b> software) which is why this problem has only been solved up to 4 dimensions. By adding additional variables, [...] this {{can be converted to}} a single quartic equation in N(N-1)/2 + DN variables: ...|$|R
50|$|The first {{commercial}} Internet domain name, in the TLD com, was registered on 15 March 1985 {{in the name}} symbolics.com by <b>Symbolics</b> Inc., a <b>computer</b> systems firm in Cambridge, Massachusetts.|$|R
40|$|Abstract. New {{algebraic}} {{relations are}} presented, involving anticommuting Grassmann variables and Berezin integral, and corresponding naturally to Pachner moves in {{three and four}} dimensions. These relations have been found experimentally – using <b>symbolic</b> <b>computer</b> calculations; their essential new feature is that, although they can be treated as deformations of relations corresponding to torsions of acyclic complexes, {{they can no longer}} be explained in such terms. In the simpler case of three dimensions, we define an invariant, based on our relations, of a piecewise-linear manifold with triangulated boundary, and present example calculations confirming its nontriviality...|$|E
40|$|We {{consider}} function {{fields of}} functions of one variable augmented by the binary operation of composition of functions. It is {{shown that the}} straightforward axiomatization of this concept allows {{the introduction of a}} normal form for expressions denoting elements in such fields. While the description of this normal form seems relatively intuitive, it is surprisingly di#cult to prove this fact. We present an algorithm for the normalization of expressions, formulated in the <b>symbolic</b> <b>computer</b> algebra language mathematica. This allows us to e#ectively decide compositional identities in such fields. Examples are given...|$|E
40|$|This paper {{describes}} {{the design and}} implementation of the Scheme Machine, a <b>symbolic</b> <b>computer</b> derived from an abstract Scheme interpreter. The derivation is performed in several transformation passes. First, the interpreter is factored into a compiler and an abstract CPU. Next, the CPU speci cation is re ned {{so that it can be}} used with the Digital Design Derivation system. Finally, the DDD system assists in the transformation into hardware. The resulting CPU, implemented in eld programmable gate arrays and PALs, is interfaced to a garbagecollecting heap to form a complete Scheme system. ...|$|E
5000|$|<b>Symbolic's</b> 3600-series <b>{{computers}}</b> {{were also}} used as the first front end [...] "controller" [...] computers for the Connection Machine massively parallel computers manufactured by Thinking Machines Inc., another MIT spinoff based in Cambridge, Massachusetts. The Connection Machine ran a parallel variant of Lisp and, initially, was used primarily by the AI community, so the Symbolics Lisp machine was a particularly good fit as a front-end machine.|$|R
40|$|We discuss (1) the {{construction}} of recurrence formulas for several types of indefinite and definite integral, (2) the conversion {{of some of the}} recurrence schemes to general closed formulas, (3) the mechanization of these processes, (4) “vectorized ” recurrence, (5) “telescoped ” recurrence, (6) the outperformance of present automatic integration software by the procedures that use our formulas, and (7) the interface between <b>symbolic</b> computation (<b>computer</b> algebra) and mathematical discourse. ...|$|R
40|$|The {{gauge theory}} of {{gravitation}} introduced by Mansouri and Chang (1976) is investigated; a <b>symbolic</b> manipulation <b>computer</b> system generates the Mansouri-Chang field equations in various coordinate systems. It is {{found that all}} vacuum Einstein spaces are vacuum Mansouri-Chang spaces in four dimensions, though for higher dimensions an Einstein vacuum space is not generally a Mansouri-Chang solution. The possibility that no solutions of the Mansouri-Chang equations are not Einstein vacuum spaces is discussed...|$|R
