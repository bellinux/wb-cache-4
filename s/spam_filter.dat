215|947|Public
5|$|Norton AntiSpam now scans e-mails for spoofed URLs {{and deals}} with any {{offending}} e-mail as spam. E-mails {{can also be}} blocked based on language, however by default the filter allows all languages. AntiSpam can sync its own list of allowed senders with POP3 address books. Users can train the <b>spam</b> <b>filter</b> by pointing out valid e-mail marked as spam and vice versa. Support for Yahoo! Mail and Hotmail was added in this release.|$|E
2500|$|... spamd, a <b>spam</b> <b>filter</b> with greylisting support {{designed}} to inter-operate with the PF firewall ...|$|E
5000|$|... b8 (<b>spam</b> <b>filter),</b> a {{statistical}} <b>spam</b> <b>filter</b> implemented in PHP ...|$|E
40|$|Abstract- This project {{performs}} a survey {{on the current}} <b>spam</b> <b>filtering</b> techniques, explores the use of k-Nearest-Neighbor algorithm {{as the basis for}} personalized <b>spam</b> <b>filters.</b> Several other classifiers such as Naive Bayesian classifier, Random Forest Tree, and Heuristic rules are combined to construct hybrid <b>spam</b> <b>filtering</b> systems to, if possible, improve the performance of classification. At the same time, heavy experiments are performed in preprocessing steps to compare their impacts on the same algorithm and the results are reported. Finally, this project participates <b>spam</b> <b>filtering</b> using k-NN algorithm...|$|R
40|$|This paper {{presents}} a feature based on out-of-vocabulary word statistics that complements the information sources {{used in the}} decision by state-of-the-art <b>spam</b> <b>filters.</b> The experiments included freely available <b>spam</b> <b>filters</b> as reference, SpamAssassin, Bogofilter, SpamBayes and SpamProbe, {{as well as a}} Naive Bayes classifier. The results show that the decision based on the proposed feature improves the performance of all <b>spam</b> <b>filters</b> under study...|$|R
50|$|Some <b>spam</b> <b>filters</b> {{combine the}} results of both Bayesian <b>spam</b> <b>filtering</b> and other {{heuristics}} (pre-defined rules about the contents, looking at the message's envelope, etc.), resulting in even higher filtering accuracy, sometimes {{at the cost of}} adaptiveness.|$|R
50|$|Using a <b>spam</b> <b>filter.</b>|$|E
5000|$|DSPAM {{is a free}} {{software}} statistical <b>spam</b> <b>filter</b> written by Jonathan A. Zdziarski, {{author of the book}} Ending Spam (...) and other books. It is intended to be a scalable, content-based <b>spam</b> <b>filter</b> for large multi-user systems. DSPAM is distributed {{under the terms of the}} GNU General Public License.|$|E
5000|$|Verify {{internal}} control system effectiveness (firewalls, access control, Web filter, <b>spam</b> <b>filter,</b> proxy) ...|$|E
30|$|In this paper, {{we present}} a <b>spam</b> <b>filtering</b> {{approach}} based on the MDL principle and compare its performance with seven different models of Naïve Bayes classifiers and the SVMs. Here, we carry out an evaluation with the practical purpose of <b>filtering</b> e-mail <b>spams</b> in order to compare the currently top-performer’s <b>spam</b> <b>filters.</b> We have conducted an empirical experiment using six well-known, large, and public databases and the reported results indicate that our approach outperforms currently established <b>spam</b> <b>filters.</b>|$|R
40|$|Leveraging social {{networks}} in computer {{systems can be}} effective in dealing {{with a number of}} trust and security issues. Spam is one such issue where the "wisdom of crowds" can be harnessed by mining the collective knowledge of ordinary individuals. In this paper, we present a mechanism through which members of a virtual community can exchange information to combat spam. Previous attempts at collaborative <b>spam</b> <b>filtering</b> have concentrated on digest-based indexing techniques to share digests or fingerprints of emails that are known to be spam. We take a different approach and allow users to share their <b>spam</b> <b>filters</b> instead, thus dramatically reducing the amount of traffic generated in the network. The resultant diversity in the filters and cooperation in a community allows it to respond to spam in an autonomic fashion. As a test case for exchanging filters we use the popular SpamAssassin <b>spam</b> <b>filtering</b> software and show that exchanging <b>spam</b> <b>filters</b> provides an alternative method to improve <b>spam</b> <b>filtering</b> performance...|$|R
40|$|Abstract Unsolicited bulk email (aka. spam) is a {{major problem}} on the Internet. To counter spam, several techniques, ranging from <b>spam</b> <b>filters</b> to mail {{protocol}} extensions like hashcash, have been proposed. In this paper we investigate the effectiveness of several <b>spam</b> <b>filtering</b> techniques and technologies. Our analysis was performed by simulating email traffic under different conditions. We show that genetic algorithm based <b>spam</b> <b>filters</b> perform best at server level and naïve Bayesian filters are the most appropriate for filtering at user level...|$|R
5000|$|Anti-Spam {{features}} (bayesian <b>spam</b> <b>filter,</b> comment moderation, Captcha (including the accessible ReCaptcha), trackback validation) ...|$|E
5000|$|Bogofilter - A free/open source <b>spam</b> <b>filter</b> {{that saves}} its wordlists using Berkeley DB ...|$|E
5000|$|... spamd, a <b>spam</b> <b>filter</b> with greylisting support {{designed}} to inter-operate with the PF firewall ...|$|E
40|$|This paper {{looks at}} the major <b>spam</b> <b>filtering</b> {{techniques}} in current use. In looking at methods both success rates and possible problems with each method are explored. Methods discussed include key word filtering, open relay filtering, open proxy filtering, dial-up filtering, non conforming mailing list filtering, cooperative sharing of spam samples, known <b>spam</b> origin <b>filtering</b> Bayesian filtering, Markovian discrimination, gray listing and challenge response. <b>Spam</b> <b>Filtering...</b>|$|R
30|$|Nowadays e-mail spam {{is not a}} novelty, but it {{is still}} an {{important}} rising problem with a big economic impact in society. Spammers manage to circumvent current <b>spam</b> <b>filters</b> and harm the communication system by consuming several resources, damaging the reliability of e-mail as a communication instrument and tricking recipients to react to spam messages. Consequently, <b>spam</b> <b>filtering</b> poses a special problem in text categorization, of which the defining characteristic is that filters face an active adversary, which constantly attempts to evade filtering. In this paper, we present a novel approach to <b>spam</b> <b>filtering</b> based on the minimum description length principle. Furthermore, we have conducted an empirical experiment on six public and real non-encoded datasets. The results indicate that the proposed filter is fast to construct, incrementally updateable and clearly outperforms the state-of-the-art <b>spam</b> <b>filters.</b>|$|R
40|$|We {{present a}} {{classification}} model for semi-structured documents based on statistical language modelling theory which outperforms extant approaches to <b>spam</b> <b>filtering</b> on the LingSpam email corpus [1]. We also introduce two variants {{of a novel}} discounting technique for higher-order N-gram language models developed {{in the light of}} the <b>spam</b> <b>filtering</b> problem...|$|R
50|$|If a {{whitelist}} is exclusive, only {{email from}} entities on the whitelist will get through. If {{it is not}} exclusive, it prevents email from being deleted or sent to the junk mail folder by the <b>spam</b> <b>filter.</b> Usually, only end-users would set a <b>spam</b> <b>filter</b> to delete all emails from sources not on the whitelist, not Internet service providers or email services.|$|E
50|$|Spammers {{also hope}} {{to cause the}} <b>spam</b> <b>filter</b> {{to have a higher}} false {{positive}} rate by turning previously innocent words into spammy words in the Bayesian database (statistical type I errors) because a user who trains their <b>spam</b> <b>filter</b> on a poisoned message will be indicating to the filter that the words added by the spammer are a good indication of spam.|$|E
50|$|The NetSentron {{provides}} {{features for}} network security and management, {{such as a}} firewall with intrusion detection, and a <b>spam</b> <b>filter.</b>|$|E
50|$|Naive Bayes <b>spam</b> <b>filtering</b> is a {{baseline}} technique {{for dealing with}} spam that can tailor itself to the email needs of individual users and give low false positive spam detection rates that are generally acceptable to users. It {{is one of the}} oldest ways of doing <b>spam</b> <b>filtering,</b> with roots in the 1990s.|$|R
40|$|Nowadays e-mail spam {{is not a}} novelty, but it {{is still}} an {{important}} rising problem with a big economic impact in society. Spammers manage to circumvent current <b>spam</b> <b>filters</b> and harm the communication system by consuming several resources, damaging the reliability of e-mail as a communication instrument and tricking recipients to react to spam messages. Consequently, <b>spam</b> <b>filtering</b> poses a special problem in text categorization, of which the defining characteristic is that filters face an active adversary, which constantly attempts to evade filtering. In this paper, we present a novel approach to <b>spam</b> <b>filtering</b> based on theminimum description length principle. Furthermore, we have conducted an empirical experiment on six public and real non-encoded datasets. The results indicate that the proposed filter is fast to construct, incrementally updateable and clearly outperforms the state-of-the-art <b>spam</b> <b>filters.</b> © The Brazilian Computer Society 2012...|$|R
40|$|We {{present a}} {{comprehensive}} review of the most effective content-based e-mail <b>spam</b> <b>filtering</b> techniques. We focus primarily on Machine Learning-based <b>spam</b> <b>filters</b> and their variants, and report on a broad review ranging from surveying the relevant ideas, efforts, effectiveness, and the current progress. The initial exposition of the background examines the basics of e-mail <b>spam</b> <b>filtering,</b> the evolving nature of spam, spammers playing cat-and-mouse with e-mail service providers (ESPs), and the Machine Learning front in fighting spam. We conclude by measuring the impact of Machine Learning-based filters and explore the promising offshoots of latest developments. Comment: Journal. 27 Page...|$|R
50|$|For {{the mail}} and {{newsgroup}} component, the built-in Bayesian e-mail <b>spam</b> <b>filter</b> could effectively filter out unwanted e-mail spam {{after a period of}} training.|$|E
50|$|Netscape Mail & Newsgroups {{features}} {{support for}} relevant protocols such as IMAP, POP3 and SMTP, a built-in Bayesian <b>spam</b> <b>filter,</b> support for multiple accounts, etc.|$|E
50|$|Thunderbird {{incorporates}} a Bayesian <b>spam</b> <b>filter,</b> a whitelist {{based on the}} included address book, and can also understand classifications by server-based filters such as SpamAssassin.|$|E
40|$|There {{are a few}} key {{benefits}} of a case-based approach to <b>spam</b> <b>filtering.</b> First, the many different sub-types of spam suggest that a local leamer, such as Case-Based Reasoning (CBR) will perform well. Second, the lazy approach to learning in CBR allows for easy updating as new types of spam arrive. Third, the case-based approach to <b>spam</b> <b>filtering</b> allows for the sharing of cases and thus a sharing of the effort of labeling email as spam. In this paper we introduce a case-based approach to <b>spam</b> <b>filtering</b> and present preliminary evidence {{of the first two}} of these advantages...|$|R
40|$|The {{presence}} of spam can seriously compromise normal user activities, {{forcing them to}} navigate through mailboxes to find the- relatively few- interesting emails. Even if a quite huge variety of <b>spam</b> <b>filters</b> has been developed until now, this problem is far to be resolved since spammers continuously modify their malicious techniques in order to bypass filters. In this paper we present a system for overcoming {{some of the problems}} that still remain with <b>spam</b> <b>filters</b> when checking emails that can contain attached images. A comparison with other state-of-the-art <b>spam</b> <b>filters</b> on a database containing both image and textual spam is also reported. ...|$|R
50|$|The {{purpose of}} Bayesian <b>spam</b> <b>filtering</b> is to {{eliminate}} junk e-mails.|$|R
50|$|PC Magazine {{found the}} <b>spam</b> <b>filter</b> to be inaccurate, with a 25 percent false {{positive}} rate. CNET encountered problems when installing version 2.0 on legacy machines.|$|E
50|$|SecurityPlus for MDaemon {{provides}} antivirus and anti-spam features (beyond MDaemon's built-in <b>spam</b> <b>filter</b> features), including Recurrent Pattern Detection (RPD) {{technology and}} Zero Hour Virus Outbreak Protection.|$|E
50|$|A common {{practice}} {{is to let}} procmail call an external <b>spam</b> <b>filter</b> program, such as SpamAssassin. This method can allow for spam to be filtered or even deleted.|$|E
50|$|The Bayes filter {{should not}} be {{confused}} with Bayes <b>spam</b> <b>filtering,</b> which is also often referred to as Bayesian filtering.In this article, filtering is the process of sequentially estimating the states of a dynamic system (see Sequential Bayesian <b>filtering</b> below).In Bayes <b>spam</b> <b>filtering,</b> the term filter denotes the separation of spam and non-spam content.|$|R
40|$|The email {{communication}} system {{is threatened by}} unsolicited commercial email aka spam. In response, <b>spam</b> <b>filters</b> have been deployed widely to help {{reduce the amount of}} spam users have to cope with. This paper describes work towards helping users better understand the often complex decision making that is <b>spam</b> <b>filtering.</b> An investigation of a number of popular web-based email services suggests that the filtering process is typically implemented as a black box allowing very little user involvement. In order to explore how we could help users understand how <b>spam</b> <b>filters</b> work and how they assess messages we conducted a number of user experiments using a simulated email interface providing richer <b>spam</b> <b>filtering</b> information than the webmail interfaces we investigated. Feedback indicates that additional information provided by the interface would be welcome and suggests to further investigate ways to involve users in the filtering process...|$|R
40|$|Support vector {{machines}} (SVM) are {{a powerful}} tool for building good <b>spam</b> <b>filtering</b> models. However, the performance of the model depends on parameter selection. Parameter selection of SVM will affect classification performance seriously during training process. In this study, we use combined Taguchi method and Staelin method to optimize the SVM-based E-mail <b>Spam</b> <b>Filtering</b> model and promote <b>spam</b> <b>filtering</b> accuracy. We compare it with other parameters optimization methods, such as grid search. Six real-world mail data sets are selected to demonstrate the effectiveness and feasibility of the method. The results show that our proposed methods can find the effective model with high classification accurac...|$|R
