0|4286|Public
40|$|Computerized {{scheduling}} {{methods and}} computerized scheduling systems according to exemplary embodiments. A computerized scheduling method may {{be stored in}} a memory and executed on one or more processors. The method may include defining a main multi-machine scheduling problem as a plurality of <b>single</b> <b>machine</b> scheduling problems; independently solving the plurality of <b>single</b> <b>machine</b> scheduling problems thereby calculating a plurality of near optimal <b>single</b> <b>machine</b> scheduling problem solutions; integrating the plurality of near optimal <b>single</b> <b>machine</b> scheduling problem solutions into a main multi-machine scheduling problem solution; and outputting the main multi-machine scheduling problem solution...|$|R
40|$|We {{design a}} fully polynomial-time {{approximation}} scheme (FPTAS) for a knapsack problem to minimize a symmetric quadratic function. We demonstrate how the designed FPTAS can be adopted for several <b>single</b> <b>machine</b> scheduling problems {{to minimize the}} sum of the weighted completion times. The applications presented in this paper include problems with a <b>single</b> <b>machine</b> non-availability interval (for both the non-resumable and the resumable scenarios) and a problem of planning a <b>single</b> <b>machine</b> maintenance period; the latter problem is closely related to a <b>single</b> <b>machine</b> scheduling problem with two competing agents. The running time of each presented FPTAS is strongly polynomial...|$|R
40|$|This paper {{shows that}} all polynomially {{solvable}} {{cases of the}} <b>single</b> <b>machine</b> total tardiness problem center around or are direct extensions of three well known results for that problem. A new polynomially solvable case for the problem is developed as well. It is also shown that two of these well known results for the <b>single</b> <b>machine</b> total tardiness problem are valid for the parallel machine total tardiness problem as well. scheduling <b>single</b> <b>machine</b> parallel machines tardiness polynomial solutions...|$|R
40|$|This paper {{presents}} a literature survey of <b>single</b> <b>machine</b> bicriteria scheduling problems. First a framework is proposed for classification of <b>single</b> <b>machine</b> bicriteria scheduling problems from four aspects, namely, nature of problems, machine environments, performance measures, and scheduling criteria. The survey summarizes related references {{with regard to}} scheduling criteria, characteristics, and solution methodologies. It concludes with some observations and further directions of <b>single</b> <b>machine</b> bicriteria scheduling research. link_to_subscribed_fulltex...|$|R
40|$|Abstract- This paper {{considers}} a fuzzy programming approach for a multi-objective <b>single</b> <b>machine</b> scheduling problem when processing times of jobs are normal random variables. The probabilistic problem is converted into an equivalent deterministic programming problem. Then the fuzzy programming technique {{has been applied}} to obtain a compromise solution. A numerical example demonstrates the feasibility of applying the proposed model to <b>single</b> <b>machine</b> scheduling problem. Index Terms â€” <b>Single</b> <b>machine</b> scheduling, Normal random variable, Fuzzy programmin...|$|R
40|$|In this paper, we {{consider}} the rescheduling problem for jobs on a <b>single</b> <b>machine</b> with release dates to minimize total sequence disruption under a limit on the makespan. We show that the considered problem can be solved in polynomial time. Consequently, the rescheduling problem for jobs on a <b>single</b> <b>machine</b> with release dates to minimize makespan under a limit on the total sequence disruption can also be solved in polynomial time. Rescheduling, makespan, <b>single</b> <b>machine,</b> release dates, disruption...|$|R
40|$|We {{study the}} <b>single</b> <b>machine</b> {{version of the}} task {{scheduling}} problem with release times and deadlines. This problem is too simple to be of practical importance in itself, {{but it is also}} used as a relaxation in algorithms for the Job Shop scheduling problem, which is a more practical task scheduling problem. We study exact algorithms for solving the <b>single</b> <b>machine</b> problem. We propose a new lower bound for the <b>single</b> <b>machine</b> problem and analyze its practical performance when used in a branch and bound algorithm. We also study the theoretical hardness of the <b>single</b> <b>machine</b> problem with a fixed set of task lengths. AlgorithmicsSoftware and Computer TechnologyElectrical Engineering, Mathematics and Computer Scienc...|$|R
40|$|This {{research}} {{considers the}} <b>single</b> <b>machine,</b> total weighted-tardiness problem. We propose {{a method for}} modifying due dates that eases the construction of optimal schedules. We employ due date modification in a new heuristic that is fast, solving 50 -job problems on an IBM 4381 in at most 0. 14 CPU s. The heuristic is shown to be superior to previously known heuristics in minimizing total weighted-tardiness, especially in settings where 40 % {{or more of the}} jobs can be completed without tardiness on the <b>single</b> <b>machine.</b> Scheduling Heuristic Weighted tardiness <b>Single</b> <b>machine...</b>|$|R
40|$|The {{majority}} of <b>single</b> <b>machine</b> sequencing research has assumed {{that only one}} objective is to be minimized. The research involving multiple objectives has been limited. Recent studies have shown, however, that production managers often consider multiple objectives when making scheduling decisions. The primary reason {{for the lack of}} literature on multiple objective scheduling is the additional complexity encountered when determining the 'best' solution. Although a host of general multiple objective optimization procedures exists, the vast majority cannot be efficiently applied to the multiple objective <b>single</b> <b>machine</b> sequencing problem. Most procedures assume continuous decision variables, whereas the <b>single</b> <b>machine</b> sequencing problem requires integer variables. While some of these procedures could be altered to directly address integer models, the overall combinatorial nature of most sequencing problems limits the applicability to sequencing. A comprehensive review of the published literature on the multiple objective <b>single</b> <b>machine</b> sequencing problem is presented in this paper. A framework is presented to categorize each piece of research. Gaps in the body of research are indicated and recommendations are made for areas of future research. multi-criteria <b>single</b> <b>machine</b> production scheduling...|$|R
5000|$|... 1|prec|: a <b>single</b> <b>machine,</b> general {{precedence}} constraint, minimizing maximum lateness.|$|R
40|$|This paper {{presents}} {{several local}} search metaheuristics {{for the problem}} of scheduling a <b>single</b> <b>machine</b> to minimise total weighted tardiness. A genetic algorithm for the static <b>single</b> <b>machine</b> total weighted tardiness problem is presented, and a multistart version named metaGA is proposed. The obtained computational results permit to conclude about their efficiency and effectiveness...|$|R
5000|$|Expanding {{hardware}} capabilities, allowing each <b>single</b> <b>machine</b> {{to do more}} simultaneous work ...|$|R
5000|$|He 115 A-0 10 {{pre-production}} examples, {{armed with}} a <b>single</b> <b>machine</b> gun ...|$|R
30|$|Proposing a {{mathematical}} model for JIT <b>single</b> <b>machine</b> scheduling problem with periodic maintenance.|$|R
5000|$|The {{performance}} {{measures of the}} tasks in the <b>single</b> <b>machine</b> scheduling problem include: ...|$|R
50|$|As well as {{virtualization}} of {{the resources}} of a <b>single</b> <b>machine,</b> multiple independent nodes in a cluster can be combined and accessed as a <b>single</b> virtual NUMA <b>machine.</b>|$|R
40|$|The aim of {{this thesis}} is the design <b>single</b> purpose {{drilling}} <b>machine.</b> <b>Single</b> purpose drilling <b>machine</b> {{will be used for}} machining cast iron gearbox. In {{the first part of the}} work is carried out literature search of drilling <b>machines</b> and <b>single</b> purpose <b>machines,</b> the second part follows a design <b>single</b> purpose drilling <b>machine...</b>|$|R
40|$|With {{the growth}} of data and {{necessity}} for distributed optimization methods, solvers that work well on a <b>single</b> <b>machine</b> must be re-designed to leverage distributed computation. Recent {{work in this area}} has been limited by focusing heavily on developing highly specific methods for the distributed environment. These special-purpose methods are often unable to fully leverage the competitive performance of their well-tuned and customized <b>single</b> <b>machine</b> counterparts. Further, they are unable to easily integrate improvements that continue to be made to <b>single</b> <b>machine</b> methods. To this end, we present a framework for distributed optimization that both allows the flexibility of arbitrary solvers to be used on each (<b>single)</b> <b>machine</b> locally, and yet maintains competitive performance against other state-of-the-art special-purpose distributed methods. We give strong primal-dual convergence rate guarantees for our framework that hold for arbitrary local solvers. We demonstrate the impact of local solver selection both theoretically and in an extensive experimental comparison. Finally, we provide thorough implementation details for our framework, highlighting areas for practical performance gains...|$|R
40|$|Abstract. The {{current state}} of the art {{regarding}} scalable reasoning consists of programs that run on a <b>single</b> <b>machine.</b> When the amount of data is too large, or the logic is too complex, the computational resources of a <b>single</b> <b>machine</b> are not enough. We propose a distributed approach that overcomes these limitations and we sketch a research methodology. A distributed approach is challenging because of the skew in data distribution and the difficulty in partitioning Semantic Web data. We present initial results which are promising and suggest that the approach may be successful. 1 Problem statement Most of the current reasoners are programs that are executed on a <b>single</b> <b>machine.</b> The scalability of these approaches is limited by the physical resources of the <b>single</b> <b>machine.</b> The size of the Semantic Web has grown to the point where this limitation notably affects the performance of the reasoners. Therefore, in order to realize the vision of Semantic Web, a scalable and efficient way to reason ove...|$|R
40|$|This paper {{proposed}} some corollaries {{to obtain}} some performance measures of multipurpose <b>machine</b> from its <b>single</b> <b>machine</b> units. It {{is well known}} that multipurpose scheduling problems are NP-Hard. Similarly, increases in the number of machine in scheduling problem induce additional computational complexity and new problems, thus the larger the number of machines in a scheduling problem, the higher the degree of computational complexity involved. Therefore, any attempt to obtain the performance objectives of multiple machine environment scheduling problems from its <b>single</b> <b>machine</b> component will make the problems more amenable to solution and increase the efficiency of any proposed algorithm. This paper proposed some rules {{that can be used to}} obtain some performance objectives of multipurpose machine environment from its <b>single</b> <b>machine</b> units. It is concluded that partitioning multipurpose machine scheduling problems to its <b>single</b> <b>machine</b> units scheduling will provide a platform for further research work to propose an optimal algorithm for some multipurpose machine scheduling problems...|$|R
40|$|The paper {{considers}} {{the problem of}} scheduling n jobs on a <b>single</b> <b>machine</b> to minimize the number of tardy jobs (or late jobs). Each job has a release date, a processing time and a due date. The general case with non-equal release dates and different due dates is considered. Various mixed-integer linear programming formulations are presented and discussed. A new polynomial solvable case is also introduced. Keywords: scheduling, <b>single</b> <b>machine,</b> late jobs, integer programming. 1 Introduction <b>Single</b> <b>machine</b> scheduling models {{seem to be very}} simple but are very important for understanding and modeling multiple machines models. Minimizing the number of late jobs could appear a somewhat artificial problem but is often considered as a performance measure. Our study concerns the general one-machine scheduling problem denoted by 1 jr j j P U j in the standard classification [Gra 79]. A set J of n jobs has to be scheduled on a <b>single</b> <b>machine</b> in order to optimize a given criterion. In this proble [...] ...|$|R
50|$|Several IP {{addresses}} {{can be used}} on a <b>single</b> <b>machine</b> {{using the}} underlying OS's IP Aliasing.|$|R
40|$|In the <b>single</b> <b>machine</b> environment, several schedul-ing {{algorithms}} {{exist that}} allow to quantify schedules {{with respect to}} feasibility, optimality, etc. In contrast, reconfigurable devices execute tasks in parallel, which intentionally collides with the <b>single</b> <b>machine</b> princi-ple and seems to require new methods and evaluation strategies for scheduling. However, the reconfiguration phases of adaptable architectures usually take place se-quentially. Run-time adaptation is realized using an exclusive port, which is occupied for some reasonable time during reconfiguration. Thus, we can find an anal-ogy to the <b>single</b> <b>machine</b> environment. In this paper, we investigate the appliance of single processor schedul-ing algorithms to task reconfiguration on reconfigurable systems. We determine necessary adaptations and pro-pose methods to evaluate the scheduling algorithms. ...|$|R
40|$|In this note, we {{consider}} the scheduling problem of minimizing {{the sum of the}} weighted completion times on a <b>single</b> <b>machine</b> with one non-availability interval on the machine under the non-resumable scenario. Together with a recent 2 -approximation algorithm designed by Kacem [I. Kacem, Approximation algorithm for the weighted flow-time minimization on a <b>single</b> <b>machine</b> with a fixed non-availability interval, Computers & Industrial Engineering 54 (2008) 401 - 410], this paper is the first successful attempt to develop a constant ratio approximation algorithm for this problem. We present two approaches to designing such an algorithm. Our best algorithm guarantees a worst-case performance ratio of 2 +[epsilon]. <b>Single</b> <b>machine</b> scheduling Machine non-availability Total weighted completion time Approximation algorithm...|$|R
5000|$|... 1961: Patent for the Allrounder principle, {{enabling}} {{up to ten}} different working {{positions on}} a <b>single</b> <b>machine</b> ...|$|R
50|$|Forestry {{mulching}} is a {{land clearing}} method that uses a <b>single</b> <b>machine</b> to cut, grind, and clear vegetation.|$|R
50|$|Many {{solution}} {{techniques have}} been applied to solving <b>single</b> <b>machine</b> scheduling problems. Some of them are listed below.|$|R
5000|$|High {{vulnerability}} to failures: a failure in a <b>single</b> <b>machine</b> blocks {{the whole system}} in very short time ...|$|R
30|$|Conventional generator: With {{decoupling}} {{of active}} power-frequency dynamics and reactive power-voltage dynamics, detailed generator models with damping windings are not required. In DFR model, generators are usually modelled as classical model with swing equation and constant internal voltage behind transient or sub-transient reactance. For ASF and <b>single</b> <b>machine</b> model, no transient or sub-transient reactance is modelled. Only aggregated swing equations {{are kept in}} the ASF and <b>single</b> <b>machine</b> model.|$|R
40|$|International audienceThis paper {{addresses}} a <b>single</b> <b>machine</b> scheduling problem {{in which the}} following simple constraint is added: a set of time slots is forbidden for starting a task, that is no task can start at any forbidden time point. We show that the <b>single</b> <b>machine</b> problem with makespan minimization is stronglyNP-complete and we give polynomial algorithms {{to solve the problems}} with a small number of forbidden start times...|$|R
40|$|We {{consider}} a <b>single</b> <b>machine</b> scheduling problem {{to minimize the}} weighted completion time variance. This problem {{is known to be}} NP-hard in the strong sense. We propose a lower bound based on splitting of jobs and the Viswanathkumar and Srinivasan procedure and a heuristic. The test on more than 2000 instances shows that this lower bound is very tight. Scheduling, <b>Single</b> <b>machine,</b> Weighted completion time variance, Lower bound, Heuristic...|$|R
40|$|Abstract. Electromagnetism-like {{algorithm}} (EM) is a population-based meta-heuristic {{which has}} been proposed to solve continuous problems effectively. In this paper, we present a new meta-heuristic that uses the EM methodology to solve the <b>single</b> <b>machine</b> scheduling problem. <b>Single</b> <b>machine</b> scheduling is a combinatorial optimization problem. Schedule representation for our problem is based on random keys. Because there is little research in solving the combinatorial optimization problem (COP) by EM, the paper attempts to employ the random-key concept enabling EM to solve COP in <b>single</b> <b>machine</b> scheduling problem. We present a hybrid algorithm that combines the EM methodology and genetic operators to obtain the best/optimal schedule for this <b>single</b> <b>machine</b> scheduling problem, which attempts to achieve convergence and diversity effect when they iteratively solve the problem. The objective in our problem is minimization of the sum of earliness and tardiness. This hybrid algorithm was tested {{on a set of}} standard test problems available in the literature. The computational results show that this hybrid algorithm performs better than the standard genetic algorithm. ...|$|R
40|$|A set of jobs {{is to be}} {{scheduled}} on a <b>single</b> <b>machine</b> where an idle time is allowed to be inserted before the processing of the first job begins. The objective is to find an optimal sequence that minimizes the weighted sum of a quadratic function of job lateness. Sen et al. [Sen, T., Dileepan, P., Lind, M. R., 1995. Minimizing a weighted quadratic function of job lateness in the <b>single</b> <b>machine</b> system. International Journal of Production Economics 42 (3), 237 - 243] presented a branch-and-bound algorithm for the problem; however, as shown in this note, their algorithm does not work because the branching rule for adjacent jobs is not applicable to non-adjacent jobs. Scheduling <b>Single</b> <b>machine</b> Quadratic lateness Idle time Branch and bound...|$|R
40|$|AbstractIn this paper, we {{consider}} scheduling problems on a <b>single</b> <b>machine</b> {{in a sequence}} dependent setup environment. For these problems, we introduce several integer programming formulations of varying size and strength. Computational experiments conducted on instances of 1 |sij|âˆ‘Cj (i. e. Â minimizing total flow time on a <b>single</b> <b>machine</b> under sequence dependent setup times) and 1 |sij|âˆ‘Tj (i. e. Â minimizing total tardiness on a <b>single</b> <b>machine</b> under sequence dependent setup times) illustrate the benefits of using stronger formulations, even though the computation of their LP relaxation is more time consuming. Incorporating these improved LP relaxation bounds, we propose an exact branch-and-bound algorithm able to solve instances of 1 |sij|âˆ‘Cj and 1 |sij|âˆ‘Tj having up to 50 and 45 jobs respectively...|$|R
40|$|This paper {{deals with}} a {{scheduling}} problem of independent tasks with common due date where {{the objective is to}} minimize the total weighted tardiness. The problem is known to be ordinary NP-hard {{in the case of a}} <b>single</b> <b>machine</b> and a dynamic programming algorithm was presented in the seminal work of Lawler and Moore [E. L. Lawler, J. M. Moore, A functional equation and its application to resource allocation and sequencing problems, Management Science 16 (1969) 77 - 84]. In this paper, this algorithm is described and discussed. Then, a new dynamic programming algorithm is proposed for solving the <b>single</b> <b>machine</b> case. These methods are extended for solving the identical and uniform parallel-machine scheduling problems. Scheduling <b>Single</b> <b>machine</b> Parallel machines Dynamic programming...|$|R
2500|$|... 5A15 - G.I {{production}} {{version with}} <b>single</b> <b>machine</b> gun and Benz Bz.III or Mercedes D.III engines (c. 60 built) ...|$|R
