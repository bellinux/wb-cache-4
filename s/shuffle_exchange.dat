37|8|Public
5000|$|An {{optoelectronic}} {{system is}} basically a [...] system that exploits both the advantages of electronic and optical communication. Various models of optoelectronic parallel computers have been proposed in recent years. OMTSE (Optical Multi-Trees with <b>Shuffle</b> <b>Exchange)</b> using both electronic and optical links among processors. The processors are organized {{in the form of}} an n × n array of certain groups each containing 3n/2 nodes. It can be noted that the entire network topology is almost regular with an O(log n) diameter.|$|E
40|$|In this paper, {{we focus}} on the {{practical}} issues of designing efficient complete exchange algorithms on a commodity cluster interconnected by a non-blocking crossbar switch. Four complete exchange algorithms, including, shift exchange, pairwise exchange, group <b>shuffle</b> <b>exchange</b> and synchronous <b>shuffle</b> <b>exchange</b> algorithms are studied and tested on a cluster platform. These algorithms feature their own communication schedule to avoid node and switch contention so as to fully utilize the available bandwidth. Both the analytical and measured results show that the synchronous shue exchange algorithm can achieve the best performance. It can reach 97 % of the available bandwidth in our tests; while the group <b>shuffle</b> <b>exchange</b> performs almost as good as the synchronous <b>shuffle</b> <b>exchange</b> algorithm but scales better under the Head-Of-Line phenomenon. Performance studies of the four algorithms on both input-buffered and shared-buffered switches are also reported...|$|E
40|$|One of the {{performance}} limitations of clusters is their message passing capability, while complete exchange {{is known to be}} the severest communication pattern on all types of message passing machines. In this paper, we focus on the practical issues of designing high-speed complete exchange algorithms on a commodity cluster interconnected by a non-blocking crossbar switch. Four complete exchange algorithms, including, shift exchange, pairwise exchange, group <b>shuffle</b> <b>exchange</b> and synchronous <b>shuffle</b> <b>exchange</b> algorithms are implemented and tested on a cluster platform. To avoid node and link contention, these algorithms schedule the communication at the packet-level. They aim at fully utilizing the available communication bandwidth both in the links and switch and avoiding the Head-Of-Line problem which would stall the pipelines and decrease the overall efficiency. Both the analytical and measured results show that the synchronous <b>shuffle</b> <b>exchange</b> algorithm can achieve the best [...] ...|$|E
50|$|Between the map {{and reduce}} stages, the data are <b>shuffled</b> (parallel-sorted / <b>exchanged</b> between nodes) {{in order to move}} the data from the map node that {{produced}} them to the shard in which they will be reduced. The shuffle can sometimes take longer than the computation time depending on network bandwidth, CPU speeds, data produced and time taken by map and reduce computations.|$|R
40|$|Abstract. Let {{a deck of}} n cards be <b>shuffled</b> by {{successively}} <b>exchanging</b> {{the cards}} in positions 1, 2, [...] ., n with cards in randomly chosen positions. We show that for n ≥ 18, the identity permutation is the most likely. We prove a surprising symmetry of the resulting distribution on permutations. We also obtain the limiting distribution {{of the number of}} fixed points as n → ∞. 1...|$|R
40|$|Let {{a deck of}} n cards be <b>shuffled</b> by {{successively}} <b>exchanging</b> {{the cards}} in positions 1, 2, [...] ., n with cards in randomly chosen positions. We show that for n equal to 18 or greater, the identity permutation is the most likely. We prove a surprising symmetry of the resulting distribution on permutations. We also obtain the limiting distribution {{of the number of}} fixed points as n goes to infinity. Comment: 23 + 2 pages; 3 figures. Submitted to Aequationes Mathematica...|$|R
40|$|Design of {{interconnection}} networks is {{an important}} {{integral part of the}} parallel processing or distributed systems. There are a large number of topological choices for interconnection networks. Among several choices, the <b>Shuffle</b> <b>Exchange</b> Network {{is one of the most}} popular versatile and efficient topological structures of interconnection networks. In this paper, we have given a new method of drawing <b>shuffle</b> <b>exchange</b> network for any dimension. This has enabled us to investigate some of the topological properties of shuffle-exchange network. Also we give an approximation algorithm for achromatic number of shuffle-exchange network...|$|E
40|$|Regular {{two-dimensional}} architectures {{are being}} considered as {{alternatives to the}} linear topology metropolitan area networks (MAN's) that are popular today. Deflection routing is an adaptive routing strategy that performs well on such architectures. We have developed a general analytic model to study the performance of buffered deflection routing in regular networks. The Manhattan Street Network, the ShuffleNet, and the <b>Shuffle</b> <b>Exchange</b> Network have been studied as candidate two-connected networks with different topological characteristics. The results show that deflection routing performs well on both the Manhattan Street Network and the ShuffleNet, even under heavy load, while on the <b>Shuffle</b> <b>Exchange</b> Network it does not perform as well. The introduction {{of just a few}} buffers provides significant improvement in the delay-throughput performance over unbuffered deflection routing, especially in networks with large propagation delays. The analytic results are found to match the simulations very closely in most cases. link_to_subscribed_fulltex...|$|E
40|$|Proposed fiber-optic wide-area network (WAN) {{for digital}} {{communication}} balances {{input and output}} flows of data with its internal capacity by routing traffic via dynamically interconnected routing planes. Data transmitted optically through network by wavelength-division multiplexing in synchronous or asynchronous packets. WAN implemented with currently available technology. Network is multiple-ring cyclic <b>shuffle</b> <b>exchange</b> network ensuring traffic reaches its destination with minimum number of hops...|$|E
30|$|Vitis vinifera growing {{practice}} was spread following historic migrations {{of people and}} progression of civilization; the same flow might be assumed for cultivated varieties. Many grape varieties have no clear origins, {{not only for the}} nineteenth century outbreaks of American diseases that lead to an extinction of many ancient varieties and heavy reduction of diversity, but also because of the <b>shuffling</b> and <b>exchanges</b> of cuttings that occurred over the centuries following trades and migrations, resulting in a masking of the true origins of autochthonous cultivated varieties (McGovern 2004). Likewise, synonymy and homonymy occurrence in grapevine varieties makes origin assessment and pedigree reconstruction even more difficult. In this context, molecular markers could be used to solve these challenges; in particular, fingerprints of microsatellites, also called Simple Sequence Repeats (SSR), can unequivocally identify varieties despite changes of plant phenotype in different environmental conditions and severe changes in morphology due to virus infection and lack of vigour. Likewise, an additional ideal use of SSR fingerprinting is to investigate genetic relations and identify pedigrees, because of the co-dominant, neutral behavior and Mendelian segregation of these markers (Dakin and Avise 2004).|$|R
40|$|The paper {{presents}} a new statistical {{bias in the}} distribution of the first two output bytes of the RC 4 keystream generator. The number of outputs required to reliably distinguish RC 4 outputs from random strings using this bias is only 2 (25) bytes. Most importantly, the bias does not disappear even if the initial 256 bytes are dropped. This paper also proposes a new pseudorandom bit generator, named RC 4 A, which is based on RC 4 's <b>exchange</b> <b>shuffle</b> model. It is shown that the new cipher offers increased resistance against most attacks that apply to RC 4. RC 4 A uses fewer operations per output byte and offers the prospect of implementations that can exploit its inherent parallelism to improve its performance further. status: publishe...|$|R
40|$|MapReduce is a {{commonly}} used framework for executing data-intensive jobs on distributed server clusters. We introduce a variant implementation of MapReduce, namely "Coded MapReduce", to substantially reduce the inter-server communication load for the shuffling phase of MapReduce, and thus accelerating its execution. The proposed Coded MapReduce exploits the repetitive mapping of data blocks at different servers to create coding {{opportunities in the}} <b>shuffling</b> phase to <b>exchange</b> (key,value) pairs among servers much more efficiently. We demonstrate that Coded MapReduce can cut down the total inter-server communication load by a multiplicative factor that grows linearly {{with the number of}} servers in the system and it achieves the minimum communication load within a constant multiplicative factor. We also analyze the tradeoff between the "computation load" and the "communication load" of Coded MapReduce. Comment: 16 pages, 6 figures. Parts of this work were presented in 53 rd Allerton Conference, Sept. 201...|$|R
40|$|We {{prove the}} {{existence}} of a Hamiltonian path in the <b>Shuffle</b> <b>Exchange</b> network SX(n) : This problem has been posed as an open problem by Leighton in [8] and Samatham and Pradhan in [11]. 1 Introduction Parallel computer architectures, as well as data structures, can be described by networks in a very natural manner. Different networks have been developed for different applications (see [9] for a survey). For many distributed algorithms running on a network G; it is helpful, if G has a Hamiltonian cycle or a Hamiltonian path ([12, 11]). The problem to determine whether a network contains a Hamiltonian path has been a fundamental problem in graph theory (see [7] for a survey). The most prominent networks that are known to have a Hamiltonian cycle or a Hamiltonian path are the Hypercube network ([6]), the Cube Connected Cycle network ([12]), the DeBruijn network ([3]), the Butterfly network ([4]) the grid, the torus and the <b>Shuffle</b> <b>Exchange</b> network of dimension 2 d ([5]). Fast algorithms [...] ...|$|E
40|$|Abstract. Optical Multi-Trees with <b>Shuffle</b> <b>Exchange</b> (OMTSE) {{architecture}} is an efficient model of an optoelectronic com-puter. The network has {{a total of}} 3 n 3 / 2 nodes. The diameter and bisection width of the network are 6 logn − 1 and n 3 / 4 respectively. In this note, we present synchronous SIMD algorithms on an OMTSE optoelectronic computer for the following prob...|$|E
40|$|AbstractShuffle-exchange {{networks}} (SENs) {{have been}} generally {{considered as a}} convenient interconnection systems due {{to the size of}} their switching elements (SEs) and simple configuration. Evaluation of reliability performance has been attempted by researchers in the past. This paper is a depth study of reliability evaluation in <b>shuffle</b> <b>exchange</b> network. We propose a SEN with minus one stage (SEN-) and compared with three other types of SEN. The measurement includes three parameters; terminal, broadcast and network reliability...|$|E
40|$|Abstract: This paper {{deals with}} the design of RC 4 stream cipher for {{wireless}} LAN Security. RC 4 uses a variable length key from 1 to 256 bytes to initialize a 256 -byte array. The array is used for subsequent generation of pseudo-random bytes and then generates a pseudorandom stream, which is EXOR ed with the plaintext/cipher text to give the cipher text/plaintext. The RC 4 stream cipher works in two phases. The key setup phase and the pseudorandom key stream generator phase. Both phases must be performed for every new key. Previous designs supports 1044 bytes storage locations while this design uses only one 512 bytes storage locations. The system is implemented in hardware by using VHDL language and Xilinx FPGA device. RC 4 is {{the most widely used}} software based stream cipher. The cipher has been integrated into TLS/SSL and WEP implementations. The cipher was design by Ron Rivest in 1987 and kept as a trade secret until it was leaked out in 1994. RC 4 is extremely fast and its design is simple. This paper deals with RC 4 keystream generator, within the scope of the existing model of an <b>exchange</b> <b>shuffle,</b> in order to achieve better security. The main factors in RC 4 's success over such a wide range of applications are its speed and simplicity: efficient implementations in both software and hardware are very easy to develop...|$|R
40|$|Bioluminescence, the {{conversion}} of chemical energy into light in living organisms, is dependent on two principal components, an enzyme luciferase and the substrate luciferin. Light emission occurs in many different species in phylogenetically diverse organisms with estimates that bioluminescence may have arisen independently as many as 50 times {{in the course of}} evolution. In beetles {{only a small percentage of}} species are luminescent and most are found in three coleopteran families within the superfamily Elateroidea; the Lampyridae (fireflies and glow-worms), the Phengodidae (railroad worms) and the Elateridae (click beetles). The enzyme responsible for bioluminescence in beetles, firefly luciferase, is highly conserved between families, although changes in amino acid residues can impact on the colour of the light emitted. It has been hypothesised that luciferase evolved from a fatty acyl-CoA synthetase gene deriving a novel bioluminescent function (neofunctionalization) after a gene duplication event. Recent phylogenetic studies have shown extensive gene duplication of luciferase within the Coleoptera and luciferase-like genes driving the hypothesis that beetle luciferase may have arisen from a process of subfunctionalization as opposed to neofunctionalization early on in Elateroidea evolution. The impact of gene duplication on shaping the evolution of bioluminescence is further highlighted in the colour of light emitted by bioluminescent beetles. Recent evidence has shown that intergenic exchange between duplicated luciferase loci is common in some members of the Elateridae. Furthermore, gene flow and intergenic <b>exchange</b> <b>shuffled</b> substitutions have given rise to new colour phenotypes in Jamaican click beetles. Herein is presented a review on the evidence for functional divergence of duplicated luciferase genes in bioluminescent beetles that have given rise to the first luminescent beetles and the evolution of bioluminescent colour...|$|R
40|$|An optimal tree {{contraction}} algorithm for the boolean hypercube and {{the constant}} degree hypercubic networks, such as the <b>shuffle</b> <b>exchange</b> or the butterfly network, is presented. The algorithm is based on novel routing techniques and, for certain small subtrees, simulates optimal PRAM algorithms. For trees of size n, stored on a p processor hypercube in in-order, the running time of the algorithm log p). The resulting speed-up of O(p= log p) is optimal due to logarithmic communication overhead, as shown by a corresponding lower bound. The sam...|$|E
40|$|Multistage {{interconnection}} networks (MINs) {{have been}} widely adopted in communication networks especially in telecommunication and multiprocessor environments. This paper aims to evaluate the reliability performance of <b>shuffle</b> <b>exchange</b> network with an additional stage (SEN+), based on Monte Carlo method using computerized simulation. The evaluation is further improvised by deploying stratified sampling into the Monte Carlo method. SEN+ described in this paper is confined to multiprocessor environment based on identical switching elements used in interconnecting multiple processors. It is shown that Monte Carlo method is capable of providing reliability evaluation for SEN+ system. I. Gunawa...|$|E
40|$|In {{this work}} an {{efficient}} model for parallel computing, called Shuffled Mesh (SM), is introduced. This bounded degree model has the mesh as subgraph {{and it is}} based on the union of mesh and shuffle-exchange topologies. It is shown that an N-processor SM combines the features of mesh, shuffle-exchange, hypercubic networks, mesh of trees and hypercube, and is able to support all the algorithms designed for such topologies with constant or logarithmic time performance degradation. Finally, it is proved that the VLSI layout of a SM is the same as of a <b>shuffle</b> <b>exchange</b> of the same size. 1. Introduction an...|$|E
40|$|Abstract. Optical Multi-Trees with <b>Shuffle</b> <b>Exchange</b> (OMTSE),recently proposed, is an {{efficient}} model of optoelectronic parallel computer. The OMTSE interconnection system consists of n 2 factor networks called TSE networks, which are {{organized in the}} form of an n × n matrix. Each factor network hasnnumber ofleaf nodes. Thenetwork hasatotalof 3 n 3 / 2 nodes. Thediameter andbisection widthofthenetwork is 6 log n − 1 and n 3 / 4 respectively. Inthispaper wepresent asynchronous MIMDalgorithm to findthemaximumandminimumof n(n − 1) 2 dataelements onOMTSEwith (4 log n + 4) electronic moves and 3 optical moves. Key words. parallel processing, timecomplexity, optical multi-trees with shuffleexchange, OTIS mesh,optoelectronic computers...|$|E
40|$|Uniform network emulations are {{a method}} t o obtain {{efficient}} and structure preserving simulations of large networks on smaller networks. There are two slightly {{different types of}} graphs, both realizing Stone's concept of a shuffle-exchange network: the (classical) <b>shuffle</b> <b>exchange</b> graph and the 4 -pin shuffle. We analyze the uniform emulations both types of graphs allow, give a complete characterisation of the possible uniform emulations of the (classical) shuffle-exchange graph with 2 n nodes on itself and on the 4 -pin shuffle with 2 n- 1 nodes, and show that the 4 -pin shuffle allows uniform emulations in instances where the (classical) shuffle-exchange graph does not...|$|E
40|$|We {{propose a}} family of regular Cayley network graphs of degree three based on {{permutation}} groups for design of massively parallel systems. These graphs are shown {{to be based on}} the <b>shuffle</b> <b>exchange</b> operations, to have logarithmic diameter in the number of vertices, and to be maximally fault tolerant. We investigate different algebraic properties of these networks (including fault tolerance) and propose a simple routing algorithm. These graphs are shown to be able to efficiently simulate other permutation group based graphs; thus they seem to be very attractive for VLSI implementation and for applications requiring bounded number of I/O ports as well as to run existing applications for other permutation group based architectures. ...|$|E
40|$|Inter-connecting {{processors}} and linking them efficiently {{to the memory}} modules in a parallel computer {{is not an easy}} task. Hence, an interconnection network that provides the desired connectivity and performance at minimum cost is required. The design of a suitable interconnection network for inter-processor communication {{is one of the key}} issues of the system performance. The reliability of these networks and their ability to continue operating despite failures are major concerns in determining the overall system performance. In this paper a new irregular MIN named MASN (Modified Augmented <b>Shuffle</b> <b>Exchange</b> Network) has been proposed. The performance of MASN has been measured in terms of reliability and cost. It has been proved that the proposed network MASN provides much better fault-tolerance and reliability at lesser cost in comparison to ASEN- 2...|$|E
40|$|A simple {{model to}} {{describe}} the fundamental operation theory of shuffle-exchange-type permutation networks, the finite permutation machine (FPM), is described, and theorems which transform the control matrix result to a continuous compatible vector result are developed. It is found that only 2 n- 1 <b>shuffle</b> <b>exchange</b> passes are necessary, and that 3 n- 3 passes are sufficient, to realize all permutations, reducing the sufficient number of passes by two from previous results. The flexibility of the approach is demonstrated by the description of a stack permutation machine (SPM) which can realize all permutations, and by showing that the FPM corresponding to the Benes (1965) network belongs to the SPM. The FPM corresponding to the network with two cascaded reverse-exchange networks is found to realize all permutations, and a simple mechanism to verify several equivalence relationships of various permutation networks is discussed...|$|E
40|$|At the present, {{most of the}} {{proposed}} architectures for interconnecting nodes in processor networks are based on graph topologies. Very recently, renewed interest has been shown for bus-based topologies, where (electronic/optical) buses span several processors, implementing one-to-many communications. In this paper we study topologies based on the hypergraph theory, {{taking advantage of the}} wavelength division muliplexing (WDM) that allows the huge bandwidth of optical fiber to be divided into several high-speed logical channels. We show that our topologies compare very well against graph-based ones, in terms of maximum hop distance, fault tolerance and number of transceivers per node (constant). 1 Introduction Most of {{the proposed}} architectures for processor interconnection networks and parallel systems are based on graph topologies, as the <b>Shuffle</b> <b>Exchange</b> Network [1], the grid, the torus, de Bruijn graphs based network [11], hypercube-based network [9], among others. Here, the possib [...] ...|$|E
40|$|Effectively {{disseminating}} {{the information}} among processors {{is an important}} feature for an interconnection network. Among all information dissemination models, broadcasting and gossiping {{are two of the}} most popular research topics. Finding the optimal broadcasting and gossiping schedule in an arbitrary net is an NP-Hard complete problem. This thesis presents an algorithm for both broadcasting and gossiping in arbitrary networks. The time complexity of this algorithm is O (Rn 3), where R is the rounds used for the broadcasting or gossiping, and n is the total number of nodes in the network. The test has been implemented in both regularly used graphs and four of the NS- 2 network design models. The regularly used graph models include Butterfly, CCC d, de Bruijn and <b>Shuffle</b> <b>Exchange.</b> And the four NS- 2 internet models include GT-ITM random, GT-ITM Transit-Stub, Tiers and Ine...|$|E
40|$|Abstract- High {{performance}} computing {{systems can be}} designed using parallel processing. The effectiveness of these parallel systems rests primarily on the communication network linking processors and memory modules. Hence, an interconnection network that provides the desired connectivity and performance at minimum cost is required. The design of a suitable interconnection network for inter-processor communication {{is one of the}} key issues of the system performance. In this paper a new multistage interconnection network IASEN (Irregular augmented <b>shuffle</b> <b>exchange)</b> has been proposed modifying existing ASEN- 2 network. ASEN- 2 is a regular multipath network with limited fault tolerance. The paper also discusses the permutation possibility behavior of both the networks with and without faults. It has been observed that the proposed multistage interconnection network IASEN provides much better fault-tolerance by providing more paths between any pair of source-destination as compared to ASEN- 2 at the expanse of little more cost...|$|E
40|$|An {{architecture}} {{has been}} developed for a high performance VLSI digital signal processor that is highly reliable, fault tolerant and radiation hard. The signal processor, part of a spacecraft receiver designed to support uplink radio science experiments at the outer planets, organizes the connections between redundant arithmetic resources, register files and memory through a <b>shuffle</b> <b>exchange</b> communication network. The configuration of the network {{and the state of}} the processor resources are all under microprogram control which both maps the resources according to algorithmic needs and reconfigures the processing should a failure occur. In addition, the microprogram is reloadable through the uplink to accommodate changes in the science objectives throughout the course of the mission. The processor will be implemented with silicon compiler tools and its design will be verified through silicon compilation simulation at all levels from the resources to full functionality. By blending reconf [...] ...|$|E
40|$|High {{performance}} computing {{systems can be}} designed using parallel processing. The effectiveness of these parallel systems rests primarily on the communication network linking processors and memory modules. Hence, an interconnection network that provides the desired connectivity and performance at minimum cost is required. The design of a suitable interconnection network for inter-processor communication {{is one of the}} key issues of the system performance. In this paper a new multistage interconnection network IASEN (Irregularaugmented <b>shuffle</b> <b>exchange)</b> has been proposed modifying existing ASEN- 2 network. ASEN- 2 is a regular multipath network with limited fault tolerance. The paper also discusses the permutation possibility behavior of both the networks with and without faults. It has been observed that the proposed multistage interconnection network IASEN provides much better fault-tolerance by providing more paths between any pair of source-destination as compared to ASEN- 2 at the expanse of little more cost...|$|E
40|$|Finding {{the optimal}} {{broadcasting}} schedule in an arbitrary network is an NP-hard problem. Many papers {{have been published}} {{on the topic of}} finding an efficient and effective heuristic for broadcasting. In this thesis, a heuristic algorithm for broadcasting in arbitrary networks is presented. This heuristic is first tested in several commonly used graphs; such as Butterfly, CCC d, deBruijn and <b>Shuffle</b> <b>Exchange.</b> In these graphs, this heuristic generates almost the same broadcast schedules as the best existing heuristic for broadcasting. However, the time complexity of this heuristic is much lower. The heuristic is also tested in three of the best-known network design models, and the heuristic outperforms the best existing heuristic in these models. The time complexity of this heuristic is O (R · m), where R represents the rounds of broadcasting, and m stands for the total number of communication links in the network...|$|E
40|$|This paper first {{presents}} {{some general}} properties of product networks pertinent to parallel architectures and then focuses on three case studies. These {{are products of}} complete binary trees, shuffle-exchange, and de Bruijn networks. It is shown {{that all of these}} are powerful architectures for parallel computation, as evidenced by their ability to efficiently emulate numerous other architectures. In particular, r-dimensional grids, and r-dimensional meshes of trees can be embedded efficiently in products of these graphs, i. e. either as a subgraph or with small constant dilation and congestion. In addition, the shuffle-exchange network can be embedded in r-dimensional product of <b>shuffle</b> <b>exchange</b> networks with dilation cost 2 r and congestion cost 2. Similarly, the de Bruijn network can be embedded in r-dimensional product of de Bruijn networks with dilation cost r and congestion cost 4. Moreover, {{it is well known that}} shuffle-exchange and de Bruijn graphs can emulate the hypercu [...] ...|$|E
40|$|Some {{generalized}} communication modes {{enabling the}} dissemination of information among processors of interconnection networks via vertex-disjoint or edge-disjoint paths in one communication step will be investigated. A thorough study of these communication modes will be presented by giving optimal algorithms for broadcasting, accumulation and gossiping {{in most of the}} well known parallel architectures. For those networks in which a Hamiltonian path exists (Hypercubes, Cube Connected Cycles, Butterflies, <b>Shuffle</b> <b>Exchange,</b> etc.) optimal algorithms can be obtained quite easily, but for complete binary trees, complete k-ary trees (k 3) and arbitrary degree bounded graphs, the optimal algorithms as well as the matching lower bound proofs are more involved. An interesting consequence of the presented algorithms is the fact that in almost all these interconnection networks the gossip problem cannot be solved in less time than the sum of time complexities of the accumulation problem and the bro [...] ...|$|E
40|$|Interval routing is {{a popular}} compact routing method for {{point-to-point}} networks which found industrial applications in novel transputer routing technology [13]. Recently much effort is devoted to relate the efficiency (measured by the dilation or the stretch factor) to space requirements (measured by the compactness or {{the total number of}} memory bits) in a variety of compact routing methods [3, 8, 9, 12, 14, 15, 19]. We add new results in this direction for interval routing. For the shortest path interval routing we apply a technique from [4] to some interconnection networks (<b>shuffle</b> <b>exchange</b> (SE), cube connected cycles (CCC), butterfly (BF) and star (S)) and get improved lower bounds on compactness in the formΩΓ n 1 = 2 Γ"), any " ? 0, for SE,ΩΓ p n=logn) for CCC and BF, andΩΓ n(log log n=logn) 5) for S, where n is the number of nodes in the corresponding network. Previous lower bounds for these networks were only constant [7]. For the dila [...] ...|$|E
40|$|We describe, in this paper, a snapshot-based {{algorithm}} {{which makes}} use of distributed control. The algorithm {{is an extension of}} Mattern's snapshot algorithm and employs a leader election algorithm to pick a GVT initiator. The leader election algorithm executes concurrently with the GVT algorithm. We prove the correctness of the algorithm and compare its performance to several algorithms - Samadi's, Bellenot's, and Mattern 's original algorithm. In the performance comparison, we make use of a <b>Shuffle</b> <b>Exchange</b> Network and a PCS network, evaluating the simulation time, peak memory consumption, and the (control) message complexity of the algorithms. The performance of our algorithm in all three categories is far superior to Bellenot and Samadi's algorithms. It also provides a (less dramatic) improvement over Mattern's algorithm. Key words: Time Warp, GVT, snapshot, cut. 1 INTRODUCTION A good deal of research has been done on obtaining global snapshots in distributed systems (Chandy and L [...] ...|$|E
40|$|We analyze a {{class of}} {{adaptive}} algorithms for integration over N-dimensional hyperrectangular or simplical regions, on distributed systems. An adaptive algorithm attempts to achieve the requested accuracy by refining the subdivision of the integration region, thus allowing for a concentration of subdivisions near singularities. At the subdivision of a region, the error behaves according to a prescribed model, relating the error of the parent region to that of its children. The analysis can also be applied to problems in other areas, {{as long as the}} task selection is based on a priority function which behaves according to a suitable model. Using an efficient management of the subregions, we show that a O(p= log p) speedup can be achieved on a p-processor hypercubic network, such as <b>shuffle</b> <b>exchange,</b> butterfly and hypercube. Furthermore, a speedup of O(p p) can be achieved on a p p Θ p p mesh network. We also show that our algorithms compare favorably with well-known dynamic [...] ...|$|E
