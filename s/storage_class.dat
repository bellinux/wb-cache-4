111|108|Public
25|$|Later in 2008, the FreeBSD Release Engineering Team {{announced}} that the cipher had also {{been included in the}} FreeBSD 6.4-RELEASE. Also, support for the Camellia cipher was added to the disk encryption <b>storage</b> <b>class</b> geli of FreeBSD by Yoshisato Yanagisawa.|$|E
25|$|Most recently, Parkin has {{proposed}} {{and is working}} on a novel <b>storage</b> <b>class</b> memory device, The Magnetic Racetrack memory, which could replace both hard disk drives and many forms of conventional solid state memory. His research interests also include spin transistors and spin-logic devices that may enable a new generation of low-power electronics.|$|E
5000|$|Variables with <b>storage</b> <b>class</b> , {{which include}} {{variables}} declared {{at top level}} without an explicit <b>storage</b> <b>class,</b> are [...] in the first meaning but not the second.|$|E
5000|$|Data tiering / <b>storage</b> <b>classes</b> â€” Possibility to [...] "label" [...] servers, create label {{definitions}} called [...] "Storage Classes" [...] and decide, {{on which}} types of servers {{the data is}} stored ...|$|R
40|$|This paper {{addresses}} duration-of-stay-based {{shared storage}} policies for a unit load warehouse. We show that, for single command storage and retrieval, shared storage policies based on {{duration of stay}} of individual unit loads {{have the potential to}} significantly decrease travel time. An optimal storage policy with respect to travel time and storage space is developed for systems with balanced input and output. Based on the same principles, two heuristic policies are developed for more complex systems. Simulation results are provided which compare travel times for dedicated storage, random <b>storage,</b> turnover-based <b>storage</b> <b>classes,</b> and duration-of-stay-based <b>storage</b> <b>classes.</b> inventory/production, materials handling...|$|R
50|$|<b>Storage</b> <b>classes</b> {{describe}} the type entity the symbol represents, and may include external variables (C_EXT), automatic (stack) variables (C_AUTO), register variables (C_REG), functions (C_FCN), and many others. The symbol type describes {{the interpretation of}} the symbol entity's value and includes values for all the C data types.|$|R
5000|$|Variable {{declarations}} further have {{an optional}} <b>storage</b> <b>class</b> specifier. Properly {{this is a}} separate topic, distinct from the type, though [...] on a variable declaration is also taken to have implications for the <b>storage</b> <b>class,</b> namely {{that it can be}} stored in read-only memory.|$|E
5000|$|In C, [...] is a <b>storage</b> <b>class</b> (not to be {{confused}} with classes in object-oriented programming), as are , [...] and [...] (which are also reserved words). Every variable and function has one of these storage classes; if a declaration does not specify the <b>storage</b> <b>class,</b> a context-dependent default is used: ...|$|E
50|$|Default {{initialization}} {{depends on}} the <b>storage</b> <b>class</b> specifier, described above.|$|E
40|$|AbstractA {{generalization}} of nondeterminism, called consistent nondeterminism, is investigated. It is shown that consistent storage is exponentially {{more powerful than}} ordinary <b>storage.</b> Simultaneous <b>classes</b> obtained by bounding both amount of storage and amount of consistent nondeterminism are characterized {{in terms of time}} bounded nondeterministic complexity classes. Relationships between consistent <b>storage</b> complexity <b>classes</b> and certain oracle complexity classes are investigated...|$|R
5000|$|Full {{emulation}} of an [...] "SD card reader" [...] (USB mass <b>storage</b> device <b>class).</b>|$|R
3000|$|Three {{steps are}} {{employed}} under FCS as provided {{for in the}} package MICE; that is, imputation, analysis and pooling where functions; mice (...), with (...) and pool (...) are applied respectively. At each step, <b>storage</b> <b>classes</b> are provided for; mids, mira and mipo. The final pooled dataset with completely filled missing data is then developed and stored in the database under the mipo class.|$|R
50|$|The DASD <b>storage</b> <b>class</b> {{includes}} both fixed and removable media.|$|E
5000|$|The {{effect of}} the <b>storage</b> <b>class</b> [...] when applied or not applied to [...] {{functions}} differs between the C dialects and C++.|$|E
50|$|Variables {{declared}} {{within a}} block by default have automatic storage, as do those explicitly declared with the auto or register <b>storage</b> <b>class</b> specifiers. The auto and register specifiers {{may only be}} used within functions and function argument declarations; as such, the auto specifier is always redundant. Objects declared outside of all blocks and those explicitly declared with the static <b>storage</b> <b>class</b> specifier have static storage duration. Static variables are initialized to zero by default by the compiler.|$|E
5000|$|The {{properties}} of the explosive indicate the class into which it falls. In some cases explosives {{can be made to}} fall into either class by the conditions under which they are initiated. In sufficiently large quantities, almost all low explosives can undergo a Deflagration to Detonation Transition (DDT). For convenience, low and high explosives may be d by the shipping and <b>storage</b> <b>classes.</b>|$|R
5000|$|... #Caption: USB card readers {{like this}} one {{typically}} implement the USB mass <b>storage</b> device <b>class</b> ...|$|R
5000|$|... #Caption: A USB {{card reader}} like this one, will {{typically}} implement the USB mass <b>storage</b> device <b>class.</b>|$|R
5000|$|Regardless of the <b>storage</b> <b>class,</b> the {{compiler}} {{can ignore}} the [...] qualifier and generate a function call in all C dialects and C++.|$|E
50|$|The extern <b>storage</b> <b>class</b> {{specifier}} {{indicates that}} the storage for an object has been defined elsewhere. When used inside a block, it {{indicates that the}} storage has been defined by a declaration outside of that block. When used outside of all blocks, it indicates that the storage has been defined outside of the compilation unit. The extern <b>storage</b> <b>class</b> specifier is redundant when used on a function declaration. It indicates that the declared function has been defined outside of the compilation unit.|$|E
50|$|Newer GoGear devices, {{such as the}} GoGear Aria and GoGear RaGa use Media Transfer Protocol for {{synchronization}} {{as well as the}} USB mass <b>storage</b> <b>class.</b>|$|E
5000|$|... #Caption: A USB {{card reader}} {{such as this}} one will {{typically}} implement the USB mass <b>storage</b> device <b>class.</b>|$|R
50|$|The Gippsland Lakes Yacht Club (GLYC), {{established}} in 1938, whose facilities include a fully licensed bar, club rooms with lake views, launching area with ramp, crane, and mooring jetties. The club has wet berth, hardstand and undercover boat <b>storage.</b> <b>Classes</b> raced include Flying 15s, Mosquitos, Sabres, Castle 650s, Sonata 6/7s, Magnum 8.5s, Timpenny 770s, and a mixed fleet of dinghys, trailer-sailers and keelboats. The club conducts sail training and sailability programs.|$|R
50|$|The MSDC {{option in}} digital cameras stands for Mass <b>Storage</b> Device <b>Class.</b> It {{is one of}} the many subclasses of the USB {{computer}} peripheral connection protocol.|$|R
50|$|Devices {{supporting}} this standard {{are known as}} MSC (Mass <b>Storage</b> <b>Class)</b> devices. While MSC is the original abbreviation, UMS (Universal Mass Storage) has also come into common use.|$|E
5000|$|MIX OUTPUT Jack (L (MONO), R), DIRECT 1 OUTPUT Jack (L (MONO), R), INPUT Jack (L (MONO), R), Headphones Jack, MIDI Connectors (IN/OUT), USB Connector (USB MIDI, Mass <b>Storage</b> <b>Class),</b> DC IN ...|$|E
50|$|Every object has a <b>storage</b> <b>class.</b> This {{specifies}} most {{basically the}} storage duration, {{which may be}} static (default for global), automatic (default for local), or dynamic (allocated), together with other features (linkage and register hint).|$|E
5000|$|The Tower was {{constructed}} in 1926 and {{has been used for}} innumerable things. During World War II, the Tower was used to spot enemy aircraft that could have been headed for the River Rouge Plant, where tanks were in production. The media center used the Tower for archival <b>storage,</b> <b>classes,</b> and media center office space. Students of Fordson hung signs over the Tower including a [...] "for sale" [...] sign in the 1950s and the most recent in 1993 exclaiming Fordson's State Championship in football.|$|R
50|$|In {{addition}} to his work at Tesla, Straubel {{is also on the}} Board of Directors for SolarCity. He is also a lecturer at his alma mater, Stanford University, where he teaches the popular Energy <b>Storage</b> Integration <b>class</b> in the Atmosphere and Energy Program.|$|R
50|$|It is also {{standard}} UMS (USB mass <b>storage</b> device <b>class)</b> compliant, i.e. no proprietary {{drivers are}} required to transfer data {{to and from the}} device's memory card. It weighs 99 g (including battery BL-5C) and the dimensions are 103 mm x 44 mm x 20 mm, 76 cc.|$|R
50|$|Objects with {{automatic}} storage are local to the block {{in which they}} were declared and are discarded when the block is exited. Additionally, objects declared with the register <b>storage</b> <b>class</b> may be given higher priority by the compiler for access to registers; although they may not actually be stored in registers, objects with this <b>storage</b> <b>class</b> may not be used with the address-of (&) unary operator. Objects with static storage persist for the program's entire duration. In this way, the same object can be accessed by a function across multiple calls. Objects with allocated storage duration are created and destroyed explicitly with malloc, free, and related functions.|$|E
50|$|Later in 2008, the FreeBSD Release Engineering Team {{announced}} that the cipher had also {{been included in the}} FreeBSD 6.4-RELEASE. Also, support for the Camellia cipher was added to the disk encryption <b>storage</b> <b>class</b> geli of FreeBSD by Yoshisato Yanagisawa.|$|E
5000|$|If [...] {{declarations}} {{are mixed}} with [...] declarations or with unqualified declarations (ie., without [...] qualifier or <b>storage</b> <b>class),</b> the translation unit must contain a definition (no matter whether unqualified, , or [...] ) and an externally visible function will be emitted for it.|$|E
50|$|The Storage kit {{provides}} {{methods for}} manipulating files from creating and managing symlinks {{all the way}} to the file open/save panels for graphical applications, as well as dealing with Be File System attributes. <b>Storage</b> kit <b>classes</b> are mostly in libtracker.so, Tracker being the native file manager on the OS.|$|R
50|$|DDN won the Storage Visions Product Award in the Professional <b>Class</b> <b>Storage</b> {{category}} for its WOS 360 Version 2.0 Object Storage Software.|$|R
50|$|In 2004 {{the railway}} was {{purchased}} by local investors from the area of Saskatchewan it serves. It is now locally owned and operated. Great Western Railway continues to serve many producer loading sites along their entire rail network, but also provide railcar <b>storage</b> for <b>Class</b> I railways and railcar companies.|$|R
