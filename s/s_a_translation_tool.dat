0|10000|Public
5000|$|Wordforge (old name Pootling) - <b>an</b> offline <b>translation</b> <b>tool</b> for Windows and Linux ...|$|R
40|$|Abstract. This paper {{describes}} the user interface design {{and evaluation of}} TransType, a system that watches over the user {{as he or she}} types <b>a</b> <b>translation</b> and repeatedly suggests completions for the text already entered. We show that this innovative approach to <b>a</b> <b>translation</b> <b>tool,</b> both unobtrusive and very useful, can be very productive for the translators. ...|$|R
50|$|Déjà Vu is <b>a</b> {{computer-assisted}} <b>translation</b> <b>tool</b> {{with its}} own program interface. It facilitates database-supported translation.|$|R
50|$|Questions are crowdsourced via other {{farmers in}} the region and around the world, using <b>a</b> {{voluntary}} <b>translation</b> <b>tool.</b>|$|R
50|$|The Translator Web Widget is <b>a</b> <b>translation</b> <b>tool</b> {{that can}} be added to web pages by pasting a {{predefined}} snippet of JavaScript code into the page. The web widget is offered for free by Microsoft, and supports both pre-publishing customized translations using the Translator Hub, and post-publishing improvements using the Collaborative Translations Framework.|$|R
5000|$|The History section comes {{substantially}} from selected {{sentences in}} the Czech Wikipedia article, and used <b>an</b> automatic <b>translation</b> <b>tool.</b>|$|R
50|$|Pootle was {{designed}} to be <b>a</b> web <b>translation</b> <b>tool</b> using the Translate Toolkit. It serves as <b>a</b> <b>translation</b> management system, treating translation files as documents and managing them as such.|$|R
50|$|Virtaal is <b>a</b> {{computer-assisted}} <b>translation</b> <b>tool</b> {{written in}} the Python programming language. It is free software developed and maintained by Translate.org.za.|$|R
40|$|Virtual Ribosome is <b>a</b> DNA <b>translation</b> <b>tool</b> {{with two}} areas of focus. (i) Providing <b>a</b> strong <b>translation</b> <b>tool</b> {{in its own}} right, with an {{integrated}} ORF finder, full support for the IUPAC degenerate DNA alphabet and all translation tables defined by the NCBI taxonomy group, {{including the use of}} alternative start codons. (ii) Integration of sequences feature annotation—in particular, native support for working with files containing intron/exon structure annotation. The software is available for both download and online use at...|$|R
50|$|On November 19, 2013, Google {{unveiled}} its Glass Development Kit, showcasing <b>a</b> <b>translation</b> <b>tool</b> Word Lens, <b>a</b> cooking program AllTheCooks, and {{an exercise}} program Strava among others as successful examples. Google announced three news programs in May 2014 - TripIt, FourSquare and OpenTable - in order to entice travelers. On June 25, 2014, Google announced that notifications from Android Wear {{would be sent to}} Glass.|$|R
40|$|We {{present a}} shallow {{embedding}} of the Object Calculus of Abadi and Cardelli in the lambda-Pi-calculus modulo, {{an extension of}} the lambda-Pi-calculus with rewriting. This embedding may be used as <b>an</b> example of <b>translation</b> of subtyping. We prove this embedding correct with respect to the operational semantics and the type system of the Object Calculus. We implemented <b>a</b> <b>translation</b> <b>tool</b> from the Object Calculus to Dedukti, a type-checker for the lambda-Pi-calculus modulo...|$|R
5000|$|Rosetta, <b>an</b> online {{language}} <b>translation</b> <b>tool</b> to help localisation {{of software}} (cf. the Rosetta Stone), ...|$|R
5000|$|This {{will create}} [...] The {{translator}} then edits the resultant file, either by hand or with <b>a</b> <b>translation</b> <b>tool</b> like Poedit, or Emacs with its editing mode for [...] files. An edited entry will look like:#: src/name.c:36msgid [...] "My name is %s.\n"msgstr [...] "Je m'appelle %s.\n"Finally, the [...]po files are compiled with [...] into binary [...] (Machine Object) files. GNU gettext {{has its own}} file name extension: [...] [...] These are now ready for distribution with the software package.|$|R
50|$|OmegaT is <b>a</b> {{computer-assisted}} <b>translation</b> <b>tool</b> {{written in}} the Java programming language. It is free software originally developed by Keith Godfrey in 2000, and is currently developed by {{a team led by}} Didier Briel.|$|R
40|$|We {{introduce}} INICheck, <b>a</b> <b>translation</b> <b>tool</b> from <b>a</b> new {{programming language}} called INI, which combines both rule-based and event-based programming styles into Promela, {{the language of}} the model-checker SPIN. INI allows the definitions of rules that can be triggered by events, that are implemented in a multithreaded way. This makes it suitable for many types of applications such as embedded applications and self-adaptive software. Moreover, by using INICheck, programmers can verify constraints, which need to be satisfied in their INI programs...|$|R
40|$|In this report, we {{describe}} the approach we used in TREC- 7 Cross-Language IR (CLIR) track. The approach is based on <b>a</b> probabilistic <b>translation</b> model estimated from a parallel training corpus (Canadian HANSARD). The problem of translating a query from a language to another (between French and English) becomes the problem of determining the most probable words that may appear in the translation of the query. In this paper, we will describe the principle of building the probabilistic model, and the runs we submitted using the model as <b>a</b> <b>translation</b> <b>tool.</b> 1...|$|R
40|$|Specification <b>translation</b> plays <b>an</b> {{important}} part in the integration of theorem proving and model checking techniques for system verification. Mucheffort is required to implement <b>a</b> <b>translation</b> <b>tool</b> in conventional programming languages. Maude provides powerful meta-programming facilities {{that allow us to}} develop formal <b>translation</b> <b>tools</b> with less effort. In this paper, we present a modular implementation of a translator that is developed in Maude. The translator takes a behavioral specification and produces a rewrite theoryspecification. The implementation of the translator is modular so that multiple translation strategies can be modularized and embedded in the translator. Therefore, multiple styles of rewrite theory specifications can be generated for one behavioral specification. リサーチレポート（北陸先端科学技術大学院大学情報科学研究科...|$|R
50|$|Besides the firm's s core {{business}} in writing, editing and translating, {{it also has}} a terminology department that helps clients set up their own corporate dictionaries and organise their linguistic assets, and offers <b>a</b> machine <b>translation</b> <b>tool.</b>|$|R
40|$|International audienceFormal proofs of {{distributed}} algorithms are long, {{hard and}} tedious. We propose a general approach, {{based on the}} Event-B formal method, to automatically generate correct programs of distributed algorithms. Our approach is implemented with <b>a</b> <b>translation</b> <b>tool,</b> called B 2 Visidia, that generates Java code from an Event-B specification related to distributed algorithms. The resulting code can be executed on classical distributed computing systems. To execute the resulting programs, we use a tool called Visidia {{that can be used}} for experimenting, testing and visualising programs of distributed algorithms...|$|R
40|$|Abstract In {{this paper}} we present an Augmented Reality (AR) system for aiding field workers of utility {{companies}} in outdoor {{tasks such as}} maintenance, planning or surveying of underground infrastructure. Our work addresses these issues using spatial interaction and visualization techniques for mobile AR applications {{as well as a}} new mobile device design. We also present results from evaluations of the prototype application for underground infrastructure spanning various user groups. Our application has been driven by feedback from industrial collaborators in the utility sector, and includes <b>a</b> <b>translation</b> <b>tool</b> for automatically importing data from utility company databases of underground assets...|$|R
40|$|This paper {{proposes a}} novel {{approach}} to the formal definition of UML semantics. We distinguish descriptive semantics from functional seman-tics of modelling languages. The former defines which system is an instance of a model while the later defines the basic concepts underlying the models. In this paper, the descriptive semantics of class diagram, interaction diagram and state machine diagram are defined by first order logic formulas. <b>A</b> <b>translation</b> <b>tool</b> is implemented and integrated with the theorem prover SPASS to enable auto-mated reasoning about models. The formalisation and reasoning of models is then applied to model consistency checking...|$|R
40|$|This was a {{presentation}} at Inspire outlining how we developed <b>a</b> migrant <b>translation</b> <b>tool</b> {{to assist the}} target population with communication barriers and to make medical services more accessible (and better understood). The migrant tool promotes a culturally sensitive approach to communication with speakers of other languages in a medical context...|$|R
40|$|International audienceThis paper {{presents}} <b>a</b> <b>translation</b> <b>tool</b> {{that automatically}} generates efficient target programming language code (C, C++, Java and C#) from Event-B formal specification {{related to the}} analysis of complex problems. This tool is a collection of plug-ins, which are used for translating Event-B formal specifications into different kinds of programming languages. The <b>translation</b> <b>tool</b> is rigorously developed with safety properties preservation. The results detailed in this paper are an architecture of the translation process, to generate a target language code from Event-B models using Event-B grammar through syntax-directed translation, code scheduling architecture and verification of an automatic generated code. The translator checks syntax and type consistency before generating the target programming language code. The <b>translation</b> <b>tool</b> has been developed as a set of Rodin plug-ins under the Eclipse development framework. An assessment of the proposed approach is given through a case study, relative {{to the development of a}} cardiac pacemaker system...|$|R
40|$|The Java Modeling Language (JML) is a {{behavioral}} interface specification language tailored for specifying Java modules. This paper describes <b>a</b> source-to-source <b>translation</b> <b>tool</b> that takes <b>a</b> JML specification and Java source code for a module and produces source code that checks assertions at run-time. It describes issues unique to JML, including specification-only variables, refinement, specification inheritance, and privacy. It also describes {{the design and}} implementation of the <b>translation</b> <b>tool...</b>|$|R
50|$|The biggest {{challenge}} is and {{was to develop}} an ideal system, {{though it is not}} possible to do so at this moment. This system would fit the needs of both the doctors and the patients alike and would provide accurate and flexible <b>translation.</b> <b>A</b> realisation of <b>an</b> ideal <b>translation</b> <b>tool</b> is impossible without using of unrestricted language and a large vocabulary.|$|R
40|$|Abstract. <b>Translation</b> {{validation}} is <b>a</b> {{technique for}} formally establish-ing the semantic equivalence {{of the source}} and {{the target of a}} code gener-ator. In this work we present <b>a</b> <b>translation</b> validation <b>tool</b> for the Real-Time Workshop code generator that receives as input Simulink models and generates optimized C code. ...|$|R
50|$|Weblate is <b>a</b> free web-based <b>translation</b> <b>tool</b> with tight {{version control}} integration. It {{features}} {{a simple and}} clean user interface, propagation of translations across components, quality checks and automatic linking to source files.|$|R
40|$|We {{propose a}} model-based systems {{engineering}} framework that couples supervisory control and verification. The framework has a process-theoretic backbone, which supports all required concepts, {{and it is}} implemented using state-of-the-art tools: Supremica for supervisor synthesis and UPPAAL for state-based verification. The process theory relies on partial bisimulation to model controllability and propositional signal emission to model a supervisory control loop with state-based observations. Supremica can model the signal observation by employing finite integer variables and action guards, whereas the supervised system can be consistently translated to UPPAAL by using <b>a</b> <b>translation</b> <b>tool</b> we developed. We illustrate the framework by revisiting an industrial case study of coordinating maintenance procedures of a high-tech Océ printer...|$|R
50|$|The European Thesaurus on International Relations and Area Studies (abbreviated: European Thesaurus) is a multilingual, {{interdisciplinary}} thesaurus {{covering the}} subject fields of International Relations and Area Studies. The European Thesaurus consists of about 8.200 descriptors organised in 24 subdomains. To enhance {{the access to}} the thesaurus’ controlled vocabulary the descriptors are arranged both alphabetically as well as systematically. The semantic relationships (equivalence, hierarchy, association) between all individual descriptors have been established. The European Thesaurus {{is intended to be}} used primarily in bibliographic databases for indexing and retrieval of professional literature from the relevant domains. The European Thesaurus can, in addition, even serve as a terminological reference work and/or as <b>a</b> <b>translation</b> <b>tool</b> in international affairs matters.|$|R
50|$|MANTRA-Rajbhasha is <b>a</b> machine {{assisted}} <b>translation</b> <b>tool,</b> {{developed by}} C-DAC which translates from English to Hindi. The system {{is based on}} the MANTRA Technology developed by the Applied Artificial Intelligence Group (AAI) of C-DAC, Pune.|$|R
40|$|Our {{aim is to}} {{validate}} mission-specific components of spacecraft flight software designs that are specified using state-charts and translated automatically to the final flight code for the mission. We established <b>an</b> automatic <b>translation</b> <b>tool</b> set from state-charts to SPIN for the validation of such mission-specific components. To guarantee compliance with autogenerated flight code, our <b>translation</b> <b>tool</b> set preserves the StateFlow@ semantics. We {{are now able to}} specify and validate portions of mission-critical software design and implementation using the exhaustive exploration techniques of model checking...|$|R
40|$|This paper {{describes}} {{approaches to}} computing second-order derivatives with automatic differentiation (AD) {{based on the}} forward mode and the propagation of univariate Taylor series. Performance results are given which show the speedup possible with these techniques. We also describe a new source transformation AD module for computing secondorder derivatives of C and Fortran codes and the underlying infrastructure used to create <b>a</b> language-independent <b>translation</b> <b>tool...</b>|$|R
3000|$|T 7 {{regarded}} translation as unnecessary or even harmful. [...] "Crutches" [...] is {{a metaphor}} here for using ELF as <b>a</b> <b>translation</b> <b>tool,</b> where using English would cause interference in learning Chinese. In T 7 's opinions, CFL students were seen as [...] "handicapped" [...] in speaking Chinese, because they were struggling to achieve native proficiency. Moreover, T 18 added that [...] "students {{do not need to}} know why Chinese people speak it this way. All that they learners needed to do was to keep practicing with us and try to become native Chinese speakers." [...] Furthermore, with regard to language transfer, T 11, 20 and 24 all argued that using more than one language would only result in an increasing [...] "negative transfer", which was of great harm to L 2 acquisition.|$|R
40|$|Abstract—The Web Ontology Language (OWL) {{is one of}} the {{fundamental}} blocks for realizing the Semantic Web vision, since it allows to represent probably the most difficult component of the latter; knowledge regarding the concepts of domain of discourse, i. e. ontologies. Unfortunately, its expressive power goes in hand with a rather verbose syntax, difficult to be understood by non-technical users, and thus leading to difficulties in validation and verification of the represented knowledge. <b>A</b> <b>translation</b> <b>tool</b> from OWL to some form of natural language could significantly assist users towards such tasks. Such a tool requires correctly interpreting the ontology constructs, representing highly nested ontologies, and forming logical sentences. This paper presents an innovative approach to directly translating RDF/XML based structured ontology into error free concise natural language text akin to English. I...|$|R
40|$|Abstract. While publish-subscribe {{systems have}} good {{engineering}} properties, they {{are difficult to}} reason about and to test. Model checking such systems is an attractive alternative. However, in practice coming up with an appropriate state model for a pub-sub system can be a difficult and error-prone task. In this paper we address this problem by describing a generic pub-sub model checking framework. The key feature of this framework is a reusable, parameterized state machine model that captures pub-sub run-time event management and dispatch policy. Generation of models for specific pub-sub systems is then handled by <b>a</b> <b>translation</b> <b>tool</b> that accepts as input a set of pub-sub component descriptions together {{with a set of}} pub-sub properties, and maps them into the framework where they can be checked using off-the-shelf model checking tools. ...|$|R
40|$|This paper {{describes}} the user interface design {{and evaluation of}} TRANSTYPE, a system that watches over the user {{as he or she}} types <b>a</b> <b>translation</b> and repeatedly suggests completions for the text already entered. We show that this innovative approach to <b>a</b> <b>translation</b> <b>tool,</b> both unobtrusive and very useful, can be very productive for the translators. 1 Introduction TRANSTYPE is a project set up to explore an appealing {{solution to the problem of}} using Interactive Machine <b>Translation</b> (IMT) as <b>a</b> <b>tool</b> for professional or other highly-skilled translators. IMT first appeared as part of Kay's MIND system [4], where the user's role was to help the computer analyze the source text by answering questions about word sense, ellipsis, phrasal attachments, etc. Most later work on IMT, such as Brown [1] and Marumyama [9], has followed in this vein, concentrating on improving the question /answer process by having less questions, more friendly ones, etc. Despite progress in these endeavors, systems of [...] ...|$|R
