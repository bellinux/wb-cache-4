25|10|Public
25|$|Architectural {{patterns}} vary {{in shape}} and complexity, with chapels sometimes added around the main church, or triple altars; but in general, the <b>symbolic</b> <b>layout</b> of the church remains the same. Each church is created with specified qualifications {{based on what the}} apostles said in the Bible. These qualifications include how big the temple should be.|$|E
5000|$|Weste, N., [...] "MULGA-An Interactive <b>Symbolic</b> <b>Layout</b> System for the Design of Integrated Circuits," [...] in The Bell System Technical Journal, Vol. 60, No. 6, July-Aug. 1981, pp. 823-857.|$|E
50|$|Architectural {{patterns}} vary {{in shape}} and complexity, with chapels sometimes added around the main church, or triple altars; but in general, the <b>symbolic</b> <b>layout</b> of the church remains the same. Each church is created with specified qualifications {{based on what the}} apostles said in the Bible. These qualifications include how big the temple should be.|$|E
40|$|International audienceBesides foundry facilities, Computer-Aided Design (CAD) {{tools are}} also {{required}} to move microsystems from research prototypes to an industrial market. This paper describes a computer-aided-design framework for microsystems, based on selected existing software packages adapted and extended for microsystem technology (MST), assembled with libraries where models {{are available in}} the form of standard cells described at different levels (<b>symbolic,</b> system/behavioural, <b>layout)</b> ...|$|R
40|$|Besides foundry facilities, Computer-Aided Design (CAD) {{tools are}} also {{required}} to move microsystems from research prototypes to an industrial market. This paper describes a Computer-Aided-Design Framework for microsystems, based on selected existing software packages adapted and extended for microsystem technology (MST), assembled with libraries where models {{are available in}} the form of standard cells described at different levels (<b>symbolic,</b> system/behavioural, <b>layout).</b> 1. Introduction In microelectronics, CAD has already attained a highly sophisticated and professional level, where complete fabrication sequences are simulated and the device and system operation is completely tested before manufacturing. In comparison, the art of microsystem design and modelling is still in its infancy. However, at least for the numerical simulation of the operation of single microsystem components, such as mechanical resonators, thermoelements, elastic diaphragms, reliable simulation tools are avai [...] ...|$|R
40|$|An {{environment}} for the generation of modules is des-cribed. It includes tools for interactive design of parameterised procedures describing the structure {{as well as the}} topology. For the <b>layout</b> <b>symbolic</b> cells are used which are automatically fitted to-gether as defined by the topology. For the verification and characterization rulebased expert tools were developed to recognize registers, check the clocking rules, find the critical path and the appropriate test patterns to calculate the accurate delay via simulation...|$|R
50|$|The church {{building}} has many symbolic meanings; perhaps {{the oldest and}} most prominent is the concept that the Church is the Ark of Salvation (as in Noah's Ark) in which the world is saved from the flood of temptations. Because of this, most Orthodox Churches are rectangular in design. Another popular shape, especially for churches with large choirs is cruciform or cross-shaped. Architectural patterns may vary in shape and complexity, with chapels sometimes added around the main church, or triple altars (Liturgy may only be performed once a day on any particular altar), but in general, the <b>symbolic</b> <b>layout</b> of the church remains the same.|$|E
40|$|This paper {{presents}} {{a framework for}} VLSI de-sign databases which supports fine-grained incremental consistency maintenance between different views of a design. The framework provides for structural views of a design such as logic or circuit schematic, sym-bolic layout, and physical layout, and supports repre-sentation of geometric design rule constraints between design objects. A prototype interactive design system is presented which provides a user interface to three structural view types: gate and circuit schematics, and symbolic layouts. Features of the prototype system are automatic propagation of incremental operations between views and high-speed on-line generation and evaluation of geometric design rule constraints. 1 Intro'duction Consistency maintenance {{is a major problem}} in VLSI design systems (or frameworks). A view is a representation of a design such as schematic, <b>symbolic</b> <b>layout,</b> or mask layout. Views are consistent if they have a common implementation as physical hardware. For example, a mask layout of a VLSI system is con-sistent with a circuit schematic of the system, if the implementation of the layout in hardware has struc-ture which matches the schematic structure. Previous work on the consistency problem has pro-duced two fundamental techniques for obtaining con-sistency between pairs of design views. One technique is to use a procedure which translates one view into an-other using a method which is guaranteed to produce a new view consistent with the old one. For example, a design system may maintain consistency between the physical mask layout and <b>symbolic</b> <b>layout</b> of an adder module by using a <b>symbolic</b> <b>layout</b> compactor to translate from <b>symbolic</b> <b>layout</b> to physical layout whenever a change is made to the <b>symbolic</b> <b>layout</b> o...|$|E
40|$|<b>Symbolic</b> <b>layout</b> and layout {{compaction}} {{are closely}} related topics. <b>Symbolic</b> <b>layout</b> captures more of a designer's intent than does pure layout and allows it to be updated to new technologies. Compaction free the designer from the tedium of adhering to the design rules during layout design. The two techniques together form {{a powerful tool for}} automating the design process. In a graph based approach to layout compaction, the most time consuming tasks are constraint graph generation and compaction, In the paper, an incremental algorithm to perform layout compaction is proposed that incrementally decreases the number of edges to be searched in the constraint graph. A theoretical proof to establish the correction of the approach is also provided...|$|E
40|$|In {{this paper}} {{the problem of}} obtaining {{efficient}} hardware for Viterbi decoders for high rate convolutional encoders is addressed. It is first shown that the graphs describing the interconnection of the add-compare-select units required may be classified in terms of structures {{of which there are}} only a small number for a given code constraint length. They correspond to the assignment of individual register lengths in the ensemble of shift registers in the feedforward encoder. The structures relate to the partitioning of the states such that common successors are grouped together and successive partitioning leads to a hierarchical, modular VLSI <b>layout</b> method. Example <b>symbolic</b> grid <b>layouts</b> are given for 16 and 64 state codes. It is noted that within a given structure, the parity check matrices map into local wiring patterns implying a method for implementing class-universal programmable or adaptive decoders...|$|R
5000|$|In Espen Aarseth’s Cybertext: Perspectives on Ergodic Literature, {{he defines}} [...] "ergodic {{literature}}" [...] as literature where [...] "nontrivial effort {{is required to}} allow the reader to traverse the text". An example from Aarseth states, [...] "Since writing always has been a spatial activity, {{it is reasonable to}} assume that ergodic textuality has been practiced as long as linear writing. For instance, the wall inscriptions of the temples in ancient Egypt were often connected two-dimensionally (on one wall) or three-dimensionally (from wall to wall and from room to room), and this layout allowed a nonlinear arrangement of the religious text in accordance with the <b>symbolic</b> architectural <b>layout</b> of the temple." [...] Using these examples hypertext fiction and interactive fiction can be considered ergodic literature, and under the umbrella of interactive fiction, so can video games. Electronic literature continues to evolve.|$|R
40|$|ABSTRACT: This paper {{presents}} a new layout parasitic extraction paradigm, symbolic extraction, {{for use in}} layout-aware analog synthesis methodologies. Unlike traditional post-layout extraction, <b>symbolic</b> extraction extracts <b>layout</b> parasitics in <b>symbolic</b> form from parameterized layouts. As a result, parasitic values can be calculated directly from given circuit and layout parameters. In layout-aware circuit synthesis process, tasks of time-consuming layout re-generation and re-extraction can be replaced by this fast parasitics calculation step. In the paper, we discuss how to integrate symbolic extraction into the existing analog design flow and how symbolic extraction can be implemented...|$|R
40|$|The {{compaction}} step {{of integrated}} circuit design motivates associating {{several kinds of}} graphs {{with a collection of}} non-overlapping rectangles in the plane. These graphs are intended to capture various visibility relations amongst the rectangles in the collection. The contribution {{of this paper is to}} propose time- and cost-optimal algorithms to construct two such graphs, namely, the dominance graph (DG, for short) and the visibility graph (VG, for short). Specifically, we show that with a collection of n non-overlapping rectangles as input, both these structures can be constructed in Θ(log n) time using n processors in the CREW model. Keywords: CAD, compaction, constraint graph, dominance graph, visibility graph, parallel algorithms, lower bounds, time-optimal algorithms, CREW. 1 Introduction Two important design methodologies central to the fabrication of integrated circuits are <b>symbolic</b> <b>layout</b> and compaction. The <b>symbolic</b> <b>layout</b> involves representing a mask layout using sym [...] ...|$|E
40|$|We {{present a}} {{physical}} imrplementation of a 32 -ports SPIN micro-network. For a 0. 13 micron CMOS process, the total area is 4. 6, for a cumulated bandwidth of about 100 Gbits/s. In a 6 metal process, all the routing wires can be routed {{on top of}} the switching components. The SPIN 32 macro-cell will be fabricated by ST Microelectronics, but this macrocell uses <b>symbolic</b> <b>layout,</b> and can be manufactured with any CMOS process including 6 metal layers...|$|E
40|$|We {{present an}} {{automatic}} layout generation system, called LiB. {{for the library}} cells used in CMOS ASIC design LiB takes a transistor-level circuit schematic in SPICE format and outputs a <b>symbolic</b> <b>layout.</b> Our layout style {{is similar to that}} proposed by Uehara and van Cleemput in [17]. We propose several heuristic algorithms to solve the transistor-clustering,-pairing,-chaining,-folding, the chain placement, the routing, and the net assign-ment problems, respectively. Experimental results are presented to show the capability of LiB...|$|E
40|$|International audienceBesides foundry facilities, Computer-Aided Design (CAD) {{tools are}} also {{required}} to move microsystems from research prototypes to an industrial market. This paper describes a Computer-Aided-Design Framework for microsystems, based on selected existing software packages adapted and extended for microsystem technology, assembled with libraries where models {{are available in}} the form of standard cells described at different levels (<b>symbolic,</b> system/behavioral, <b>layout).</b> In microelectronics, CAD has alreadyattained a highly sophisticated and professional level, where complete fabrication sequences are simulated and the device and systemoperation is completely tested before manufacturing. In comparison, the art of microsystem design and modelling is still in its infancy. However, at least for the numerical simulation of the operation of single microsystem components, such as mechanical resonators, thermo-elements, elastic diaphragms, reliable simulation tools are available. For the different engineering disciplines (like electronics, mechanics, optics, etc) a lot of CAD-tools for the design, simulation and verification of specific devices are available, but there is noCAD-environment within which we could perform a (micro-) system simulation due to the different nature of the devices. In general there are two different approaches to overcome this limitation: the first possibility would be to develop a new framework tailored formicrosystem engineering. The second approach, much more realistic, would be to use the existing CAD-tools which contain the most promising features, and to extend these tools {{so that they can be}} used for the simulation and verification of microsystems and of the devices involved. These tools are assembled with libraries in a microsystem design environment allowing a continuous design flow. The approach is driven by the wish to make microsystems accessible to a large community of people, including SMEs andnon-specialized academic institutions...|$|R
40|$|Although its {{particular}} relief and natural position endow ZhaoQing with many open spaces, {{it has only}} one public area {{large enough to accommodate}} and represent its entire community of citizens. The square, which represents a physical and visual link between the densely-crowded historic city and the landscape of the Seven Stars Crags park, is now seeking to assume a definitive character able to highlight its characteristic values: natural position, tokens of the past, a point of intense convergence. The area covered by the masterplan has a total extension of around 180000 sq. m which comprises a space of 22000 sq. m, positioned between the stage and the arc, which is reserved for entertainment and congregation. Huge spaces if compared with the historic squares of Italy which can be considered a major reference in terms of public life and compact urban design. A comparison between the dimensions of the square of Zhao-Qing and of various famous Italian squares may be particularly useful. Therefore, it seems advisable to organise the project area in a set of more clearly-delimited spaces, of recognisable “urban rooms” while maintaining its large public accommodation capacity and aperture towards the landscape. The masterplan project aims to construct a new landscape imbued with the serenity and fascination of the complex topography of ZhaoQing, grafting on various typically urban features. Therefore, the two images, that of the city and that of nature, blend together seamlessly, without any contrast between these, in a search for functional and <b>symbolic</b> continuity. The <b>layout</b> of the masterplan features an analogy with the traditional design of ink stones: the engraved, finely chased edge of the basin defines the new border of the lake {{in such a way that}} the lake participates in constructing the public space...|$|R
40|$|This paper {{describes}} a custom design method of ASICs with on-demand library generation. According to {{the result of}} performance estimation, a tailored library is generated and supplied to cell-based design tools. A <b>symbolic</b> <b>layout</b> system that produces a cell layout with variable driving strength is developed. The tunability can be utilized for generating a rich set of driving strength as well as design optimization in postlayout stage. Design experiments and measured performance of a fabricated chip demonstrate {{the effectiveness of the}} proposed approach...|$|E
40|$|International audienceAmong {{the remote}} Roman forts, which were {{situated}} at extreme {{points of the}} Empire, we find the Hardknott Fort. Located {{on the western side}} of the Hardknott Pass in the English county of Cumbria, this fort possesses a remarkable <b>symbolic</b> <b>layout,</b> as we have shown in a previous article (Philica, Article n. 442). Here we are add, after a short preamble on Roman forts and colonies, some considerations and remarks on the astronomical orientation of the fort. A further alignment along the noon of the winter sun is discussed...|$|E
40|$|International audienceWe {{present a}} {{physical}} {{implementation of a}} 32 -ports SPIN (scalable programmable integrated network) micro-network. For a 0. 13 /spl mu/m CMOS process, the total area is 4. 6 mm/sup 2 /, for a cumulated bandwidth of about 100 Gbits/s. In a 6 metal process, all the routing wires can be routed {{on top of the}} switching components. The SPIN 32 macro-cell will be fabricated by ST Microelectronics, but this macrocell uses a <b>symbolic</b> <b>layout,</b> and can be manufactured with any CMOS process including 6 metal layers...|$|E
40|$|Sea-of-Wire Array Logic {{has been}} {{developed}} to support a <b>symbolic</b> <b>layout</b> algorithm realization. A delay timing scheme is needed to direct the placement strategy of the layout. Both SPICE simulation and table lookup method are compared to verify the accuracy of delay estimation. Input waveform distortion is {{taken into account in}} the timing analysis, and correction factors are applied to increase the accuracy of delay estimation. A table lookup scheme has shown to be very accurate in comparison with SPICE value. A set of benchmark circuits have been applied to evaluate this table lookup scheme. The results obtained demonstrate a greater than 90 % accuracy and five orders of magnitude increase in speed over SPICE simulation...|$|E
40|$|Because of the {{increasing}} complexity of the designs, {{there is a great}} necessity for automatic layout tools which produce results similar in optimality to those produced by manual design methods. The continuous progress in VLSI technology presents new challenges in developing efficient algorithms for the layout of logic cells. The feasibility of developing an automatic mask layout generator for switching trees from its symbolic counterpart is explored in this thesis. The <b>symbolic</b> <b>layout</b> is generated from a Switching Tree Layout Synthesizer which is then translated to the mask shapes. Each element in the <b>symbolic</b> <b>layout</b> represents an instance in the mask layout. The mapping of symbolic to mask layout is not constrained to just one solution. Depending on the overall structure of the design, necessary steps such as changing the transistor orientation and contact position and layout compaction for a particular section, are performed to obtain optimized and efficient layout. Two switching tree layout styles, DMS and IMS, are presented here which are dependent on the height and the width of the logic cell. A one-dimensional functional cell generator is also proposed in this thesis. Two algorithms to minimize the height and the width of the functional cell are studied and implemented based on graph theory. It is shown that the switching tree layouts are much more area efficient than that of one dimensional functional cells. Other advantages of the switching tree over other layout methods are also mentioned. Simulations are carried out to justify the heavily pipelining capacity of the switching trees. Dept. of Electrical and Computer Engineering. Paper copy at Leddy Library: Theses 2 ̆ 6 Major Papers - Basement, West Bldg. / Call Number: Thesis 1994. S 547. Source: Masters Abstracts International, Volume: 34 - 02, page: 0837. Adviser: Graham A. Jullien. Thesis (M. A. Sc.) [...] University of Windsor (Canada), 1994...|$|E
40|$|We {{present a}} {{subjective}} review of custom cell generation methods {{in the context}} of future advances in state-of-the-art digital circuit synthesis. In particular, we describe three opportunities for coupling circuit optimization operations with the library development process. These operations include electrical optimization, technology mapping, and cell level place and route. 1. # Introduction Several methods have been developed in recent years for the automatic generation of cell libraries. This effort has been largely motivated by a need for alternatives to manual layout thereby reducing library development costs and time to market. The most common approaches are layout generators, re-compaction of existing libraries, and automatic cell synthesis. Procedural layout generators, which are either languagebased or interfaced with a <b>symbolic</b> <b>layout</b> system, are a means of capturing the layout design in a somewhat designrule independent fashion. This is useful in reducing the layout creati [...] ...|$|E
40|$|This paper {{presents}} {{the library of}} Functional Building Block generators used in the CATHEDRAL silicon compilation environment. ThiS library provides the silicon compiler with two alternative paths to layout: layout generation using regular module generation or standard cells. Regular module generation exploits the topological regularity of the FBBs to generate their layout implementation. The regular module generators are implemented {{on top of the}} Module Generation Environment (MGE) and are easily adaptable to new technologies by using <b>symbolic</b> <b>layout</b> edition at the lowest hierarchical levels. The standard cell based module generators are used to generate the netlist describing the structure of the FBBs. The layout generation task is performed using place and route tools. Abstract Standard Cells are defined that permit an easy adaptation to different standard cell libraries. Several real life examples of DSP applications were laid out using both implementations. status: publishe...|$|E
40|$|A {{symbolic}} cell generator (SYC) {{that can}} generate the <b>symbolic</b> <b>layout</b> of a generic CMOS logic cell is presented. It accepts as input a SPICE-like netlist describing circuit components, connectivity, {{and the list}} of the I/O pins. Using this generator, the user can specify topological constraints on pin and transistor positions, the maximum lengths of polysilicon and diffusion wires, and a preferred layer for each electrical node. Cells are generated according to optimization criteria that take into account not only geometric factors, such as cell area, aspect ratio, and wirelength, but also electrical features, namely capacitance to the substrate and contact and via minimization. The generator's placement strategy includes transistor clustering into regions, global region placement by linear ordering, and two-dimensional local transistor placement. The routing combines Steiner trees and Lee algorithms. Object-oriented programming paradigms were used in the implementation of the program, written in C++ language. Experimental results for small and medium-sized cells are presente...|$|E
40|$|A {{framework}} {{supported by}} a set of tools for turning digital signal processing algorithms into custom chips is proposed. The framework, called MOVAL, integrates analysis, layout synthesis and validation and is based on a structured top-down design methodology covering seven succinct abstraction levels: the behavioral, data representation, space/time, hardware, symbolic and geometric (mask) descriptions, and the chip. The top four levels efficiently cope with the implementation trade-offs and are all written in the same high level language, currently “C”. As a result, the design can be modeled using a mixture of components defined at different abstraction levels. This allows an efficient mixed-mode multi-level validation. The hardware description is unambiguous and is the key to (semi-) automatic synthesis of the layout. Furthermore, it generates test vectors for the <b>symbolic</b> <b>layout,</b> the mask and, finally, the chip. The validation is done automatically, based on back substitution. As an example of the proposed design methodology, the crucial steps of the implementation of a fast Fourier cosine transform algorithm are described...|$|E
40|$|In {{this paper}} we {{describe}} a full-custom register file generator {{based on a}} tiling approach to achieve a high density integration. The leaf cells are designed using <b>symbolic</b> <b>layout,</b> providing {{a high degree of}} technology independence and portability. Co-simulation and formal proof ensures the validity of the tool. Introduction Register files are main component of almost ASIC. To obtain compact and efficient register file we have developed, in the framework of the IDPS Esprit 2 project, a general purpose register file generator. This tool, named RFG, is now part of the public domain Alliance CAD system [1]. To be useful a register file generator must accept a wide range of parameters : the word length (from 2 to 64 bits), the number of registers (from 2 to 256), the number of read outputs (1 or 2) and some other parameters are provided to the users. Register file are based on static memory point to ensure a high reliability and high read performances. We present the regis [...] ...|$|E
40|$|Abstract. A {{framework}} {{supported by}} a set of tools for turning digital signal processing algorithms into custom chips is proposed. The framework, called MOVAL, integrates analysis, layout synthesis and validation and is based on a structured top-down design methodology covering seven succinct abstraction levels: the behavioral, data representation, space/time, hardware, symbolic and geometric (mask) descriptions, and the chip. The top four levels efficiently cope with the implementa-tion trade-offs and are all written in the same high level language, currently &quot;C&quot;. As a result, the design can be modeled using a mixture of components defined at different abstraction levels. This allows an efficient mixed-mode multi-level validation. The hardware description is unambiguous and is the key to (semi-) automatic synthesis of the layout. Furthermore, it generates test vectors for the <b>symbolic</b> <b>layout,</b> the mask and, finally, the chip. The validation is done automatically, based on back substitution. As an example of the proposed design methodology, the crucial steps of the implementation of a fast Fourier cosine transform algorithm are described. Zusammenfassung. Ein Entwicklungskonzept mit Werkzeugen wird'vorgeschlagen um Signaiverarbeitungsalgorithmen in spezialisierte Chips umzuwandeln. Das Konzept, MOVAL genannt, integriert die Analyse, die Synthese und die Verifikation...|$|E
40|$|This {{dissertation}} addresses several {{techniques used}} for the layout optimization with respect to both delay and chip area of the Sea-of-Wires Array, a unique CMOS design methodology. SWAPSS, Sea-of-Wires Array Performance Sensitive Synthesis, is an automated design tool that maps the input RIF (RTL Intermediate Formate) specification onto the output SLF (<b>Symbolic</b> <b>Layout</b> Format) of Sea-of-Wires Array. The work described in the dissertation {{can be divided into}} four parts. The first part describes the improvement in the placement and interconnection of synthesis from previous work. The second part introduces techniques used for area optimization. Those techniques include logic simplification, gate re-ordering, column folding and row folding. The third part describes techniques like transistors sizing, buffer inserting and gate breaking that are used for performance optimization. A two-table delay approximation is used to facilitate a fast and accurate timing analysis. The avoiding of false paths introduced from control part of the design is done by passing the design information from high level (Register Transfer Level) to the timing analysis in the layout level. The results of several benchmarks are given in {{the last part of the}} dissertation. By comparing SWAPSS with other design methods, it shows that results from SWAPSS have better performance in most of the benchmark circuits...|$|E
40|$|The {{constant}} {{improvements in}} device integration, {{the development of}} new technologies and the emergence of new design techniques call for flexible, maintainable and robust software tools. The generic nature of compiler-compiler systems, with their semi-formal specifications, can help in the construction of those tools. This thesis describes the Wright editor generator which is used in the synthesis of language-based graphical editors (LBGEs). An LBGE is a programming environment where the programs being manipulated denote pictures. Editing actions can be specified through both textual and graphical interfaces. Editors generated by the Wright system are specified using the formalism of attribute grammars. The major example editor in this thesis, Stick-Wright, is a design entry system for the construction of VLSI circuits. Stick-Wright is a hierarchical <b>symbolic</b> <b>layout</b> editor which exploits a combination of text and graphics in an interactive environment to provide the circuit designer with a tool for experimenting with circuit topologies. A simpler system, Pict-Wright: a picture drawing system, is also used to illustrate the attribute grammar specification process. This thesis aims to demonstrate the efficacy of formal specification in the generation of software-tools. The generated system Stick-Wright shows that a text/graphic programming environment can form the basis of a powerful VLSI design tool, especially with regard to providing the designer with immediate graphical feedback. Further applications of the LBGE generator approach to system design are given for a range of VLSI design activities...|$|E
40|$|The primary {{intent of}} this {{dissertation}} {{project has been}} to assess the potential of a unique CMOS design capability, which is derived from a methodology known as Sea-of-Wires Arrays (SWA). The new capability is expected to yield the performance benefits of a custom design while maintaining the quick turnaround and ease of semicustom design for ASIC applications. The specific goal {{of this research is}} to develop the design representations, design techniques, and computer software for the SWA design methodology. This includes the design and analysis of heuristic algorithms for every issue related to synthesis, logic minimization and layout optimization with respect to both delay and chip area. The research begins by showing that the SWA architecture based on distributed gates is a promising approach to VLSI design. The synthesis and optimization algorithms form the core of the design system whose goal is high-performance SWA design. The innovative table lookup timing analysis approach facilitates a fast and accurate performance evaluation. Numerous programs have been written to constitute the performance-driven SWA synthesis system that maps the input RIF (RTL Intermediate Format) specification onto the output SLF (<b>Symbolic</b> <b>Layout</b> Format) layout with satisfaction of constraints dictated by technology, design flow, and manufacturability. This is based on a well-designed Data Modeler which specifies both RIF and SLF design representations. The present results, obtained from a number of benchmark designs, indicate that the research goals have been fulfilled. Fast turn-around time and a density advantage make the SWA approach a potentially important player in the commercial market. However, the research project presented here is not yet the final solution. The ultimate goal of future research is to achieve an SWA chip layout that compares favorably with manual design of the same architecture...|$|E
40|$|Masters ThesisThe Singular Value Decomposition (SVD) is an {{important}} matrix factorization with applications in signal processing, image processing and robotics. This thesis presents {{some of the issues}} involved in the design of an array of special-purpose processors connected in a mesh, for fast real time computation of the SVD. The systolic array implements the Jacobi method for the SVD. This involves plane rotations and inverse tangent calculations and is implemented efficiently in hardware using the Coordinate Rotation Digital Computer (CORDIC) technique. A six chip custom VLSI chip set for the processor was initially developed and tested. This helped identify several bottlenecks and led to an improved design of the single chip version. The single chip implementation incorporates several enhancements that provide greater numerical accuracy. An enhanced architecture which reduces communication was developed within the constraints imposed by VLSI. The chips were fabricated in a 2. 0 micron CMOS n-well process using a semicustom design style. The design cycle for future chips can be considerably reduced by adopting a <b>symbolic</b> <b>layout</b> style using high-level VLSI tools such as Octtools from the University of California, Berkeley. Previous architectures for CORDIC processors provided log n bits to guard n bits from truncation errors. A detailed error analysis of the CORDIC iterations indicates that extra guard bits are required to guarantee n bits of precision. In addition, normalization of the input values ensures greater accuracy in the calculations using CORDIC. Anovel normalization scheme for CORDIC which has O(n 1. 5) area complexity as opposed to O(nÂ²) area it would take if this were implemented using conventional hardware, is described. Data dependencies in the array allow only a third of the processors to be active at any time. Several timing schemes which improve the utilization by overlapping communication and computation are developed and evaluated. It is shown {{that it is possible to}} effectively utilize all the idle time in the array by concurrently computing the left and right singular vectors along with the singular values. Future versions of the processor can implement these schemes...|$|E
40|$|This thesis {{examines}} {{the potential for}} using tactile feedback to reduce the visual load that {{can be associated with}} interacting with controls. Using the automotive context as a case study, the thesis describes the process followed in the design of a prototype tactile interface (PTI) for the control of in-car secondary functionality (navigation, entertainment and climate control). There have been many examples of the use of active and passive tactile feedback to provide information to visually impaired people. There is however a paucity of previous research into the field of tactile feedback in mainstream product design. A literature review was performed examining various issues that are associated with tactile design including cognitive processing of tactile inputs, the use oftactile feedback in products used by visually impaired people and standard control design recommendations. This was followed by the generation of initial concepts and the first study, which examined how visually impaired people interact with electronic products that are unfamiliar to them, and also examined how they used their own equipment. The results from this study, and the literature review findings were combined into a series of design recommendations for the production of tactile interfaces that aim to reduce the visual load on the driver. These design recommendations were the basis for an iterative design process that resulted in the first, non functioning PTI interface model. The first PTI was constructed using rapid prototype technologies. The first iteration PTI was examined in the second study, a user trial in a driving simulator. The study produced encouraging results with a > 90 % success rate for correct control selection without vision, whilst performing a driving task. The results from this study were used to refine the design of the PTI and a working, hi-fidelity prototype was constructed for use in the final study. This study involved 'on the road' user trials comparing the glance durations made to the PTI and to a baseline system using a 'repeated measures' structure. The data from these user trials were examined to determine if the PTI exhibited a reduced visual load when compared to the baseline system. The results showed the PTI fostered significantly reduced summed glance durations for 7 of the 11 tasks performed when compared to the baseline system. Three of the 11 tasks that were performed in the study produced a reduction of summed glance duration of > 50 %. The PTI was also shown to foster non-visual interaction, with all participants performing at least one control interaction without looking at the control arrays. The tactile coding and <b>symbolic</b> <b>layout</b> of the PTI {{have been shown to be}} beneficial in terms of reducing 'eyes off road time' and therefore reducing the risk of distraction related accidents. A review of the results from the three studies described in this thesis has enabled the development of generic design guidelines for the production of tactile interfaces where a reduction in visual load is required for the safety of the operator. The thesis has made a contribution to the understanding of the use of the tactile sense during product interactions, and highlighting the benefits as well as the limitations of the tactile sense as a feedback mechanism. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|E

