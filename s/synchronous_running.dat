4|25|Public
2500|$|Psychology {{had been}} a central {{interest}} of Leibniz. He {{appears to be an}} [...] "underappreciated pioneer of psychology" [...] He wrote on topics which are now regarded as fields of psychology: attention and consciousness, memory, learning (association), motivation (the act of [...] "striving"), emergent individuality, the general dynamics of development (evolution). His discussions in the New Essays and Monadology often rely on everyday observations such as the behaviour of a dog or the noise of the sea, and he develops intuitive analogies (the <b>synchronous</b> <b>running</b> of clocks or the balance spring of a clock). He also devised postulates and principles that apply to psychology: the continuum of the unnoticed petite perceptions to the distinct, self-aware apperception, and psychophysical parallelism {{from the point of view}} of causality and of purpose: [...] “Souls act according to the laws of final causes, through aspirations, ends and means. Bodies act according to the laws of efficient causes, i.e. the laws of motion. And these two realms, that of efficient causes and that of final causes, harmonize with one another.” [...] This idea refers to the mind-body problem, stating that the mind and brain do not act upon each other, but act alongside each other separately but in harmony. Leibniz, however, did not use the term psychologia.|$|E
5000|$|Psychology {{had been}} a central {{interest}} of Leibniz. [...] He {{appears to be an}} [...] "underappreciated pioneer of psychology" [...] He wrote on topics which are now regarded as fields of psychology: attention and consciousness, memory, learning (association), motivation (the act of [...] "striving"), emergent individuality, the general dynamics of development (evolution). His discussions in the New Essays and Monadology often rely on everyday observations such as the behaviour of a dog or the noise of the sea, and he develops intuitive analogies (the <b>synchronous</b> <b>running</b> of clocks or the balance spring of a clock). He also devised postulates and principles that apply to psychology: the continuum of the unnoticed petite perceptions to the distinct, self-aware apperception, and psychophysical parallelism {{from the point of view}} of causality and of purpose: “Souls act according to the laws of final causes, through aspirations, ends and means. Bodies act according to the laws of efficient causes, i.e. the laws of motion. And these two realms, that of efficient causes and that of final causes, harmonize with one another.” [...] This idea refers to the mind-body problem, stating that the mind and brain do not act upon each other, but act alongside each other separately but in harmony. [...] Leibniz, however, did not use the term psychologia.Leibniz’ epistemological position - against John Locke and English empiricism (sensualism) - was made clear: “Nihil est in intellectu quod non fuerit in sensu, nisi intellectu ipse.” - “Nothing is in the intellect that was not first in the senses, except the intellect itself.” [...] Principles that are not present in sensory impressions can be recognised in human perception and consciousness: logical inferences, categories of thought, the principle of causality and the principle of purpose (teleology). [...] Leibniz found his most important interpreter in Wilhelm Wundt, founder of psychology as a discipline. Wundt used the [...] "… nisi intellectu ipse" [...] quotation 1862 on the title page of his Beiträge zur Theorie der Sinneswahrnehmung (Contributions on the Theory of Sensory Perception) and published a detailed and aspiring monograph on Leibniz Wundt shaped the term apperception, introduced by Leibniz, into an experimental psychologically based apperception psychology that included neuropsychological modelling - an excellent example of how a concept created by a great philosopher could stimulate a psychological research program. One principle in the thinking of Leibniz played a fundamental role: “the principle of equality of separate but corresponding viewpoints.” Wundt characterized this style of thought (perspectivism) in a way that also applied for him - viewpoints that [...] "supplement one another, while also being able to appear as opposites that only resolve themselves when considered more deeply." ...|$|E
40|$|This {{research}} {{presents the}} theory and implementation detail for the extraction of angular speed variations. In particular, band-pass filtering, frequency shifting and analytic representation are addressed with simple mathematical equations. Finally, some case studies on a 3 kW induction motor are investigated for healthy and faulty conditions. Some vital key features and characteristics can be extracted from the angular speed variations. Pole pass speed side bands around the rotor speed {{can be used as}} a feature for broken rotor bar faults. The number of poles multiplied by the <b>synchronous</b> <b>running</b> speed cycles and the rise of 100 Hz components are key characteristics for voltage imbalance faults...|$|E
50|$|AMULET1 — Designed in 1990 {{and first}} {{fabricated}} in 1993. Its estimated performance is approximately 70% of {{that of a}} comparably-sized <b>synchronous</b> ARM6 <b>running</b> at 20 MHz.|$|R
50|$|The {{worm gear}} serving the similar {{wheel of the}} mean-sun arm is {{connected}} to the input end of the gear box, and also, through a 3000:1 reduction gear, to a 1500 rpm <b>synchronous</b> electric motor <b>running</b> off the main electricity supply.|$|R
50|$|The UK grid is {{connected}} as a wide area <b>synchronous</b> grid nominally <b>running</b> at 50 hertz. There are also undersea interconnections to northern France (HVDC Cross-Channel), Northern Ireland (HVDC Moyle), the Isle of Man (Isle of Man to England Interconnector), the Netherlands (BritNed) and the Republic of Ireland (EirGrid).|$|R
40|$|The {{present study}} {{compared}} {{the effects of}} two different music interventions on changes in emotional states before and during running, and also explored effects of music interventions upon performance outcome. Volunteer participants (n = 65) who regularly listened to music when running registered online {{to participate in a}} three-stage study. Participants attempted to attain a personally important running goal to establish baseline performance. Thereafter, participants were randomly assigned to either a self-selected music group or an Audiofuel music group. Audiofuel produce pieces of music designed to assist <b>synchronous</b> <b>running.</b> The self-selected music group followed guidelines for selecting motivating playlists. In both experimental groups, participants used the Brunel Music Rating Inventory- 2 (BMRI- 2) to facilitate selection of motivational music. Participants again completed the BMRI- 2 post- intervention to assess the motivational qualities of Audiofuel music or the music they selected for use during the study. Results revealed no significant differences between self-selected music and Audiofuel music on all variables analyzed. Participants in both music groups reported increased pleasant emotions and decreased unpleasant emotions following intervention. Significant performance improvements were demonstrated post-intervention with participants reporting a belief that emotional states related to performance. Further analysis indicated that enhanced performance was significantly greater among participants reporting music to be motivational as indicated by high scores on the BMRI- 2. Findings suggest that both individual athletes and practitioners should consider using the BMRI- 2 when selecting music for runnin...|$|E
40|$|Abstract—This paper {{presents}} {{a study of}} the Permanent Magnet <b>Synchronous</b> Machine (PMSM) <b>running</b> under bearing damage. To carry out the study a two-dimensional (2 -D) Finite Element Analysis (FEA) is used. Stator current induced harmonics for fault condition were investigated. Advanced signal analysis by means of Continuous and Discrete Wavelet Transforms was performed. Simulation were carried out and compared with experimental...|$|R
40|$|Demagnetization faults are {{troublesome}} {{in permanent}} magnet synchronous motors since they may greatly reduce their performance and efficiency. Additionally, {{the temperature of}} the magnets deeply influences the remanent flux density. Hence, the temperature may have a demagnetization effect on the magnets. This work studies the behavior of a surface-mounted permanent magnet <b>synchronous</b> motor <b>running</b> under inter-turn and phase-to-ground short-circuits faults. Concretely, the temperature increase of such faults and a potential reversible or irreversible demagnetization of the rotor magnets are analyzed. The analysis is based on 2 D FEM simulations which includes rotor magnet skew. The simulations conducted in this work clearly show that inter-turn faults do not lead to irreversible demagnetization. However, in case of a phase-to-ground short-circuit an irreversible demagnetization may take place instantaneouslyPeer ReviewedPostprint (published version...|$|R
40|$|Induction motors are {{commonly}} coupled to a gearbox when an application requires a low speed {{and a high}} torque. The gearbox is costly, needs maintenance and decreases {{the efficiency of the}} drive. Therefore, taking away the gearbox is very advantageous. This can be made possible by using a permanent magnet (PM) <b>synchronous</b> motor <b>running</b> directly at low speed, so called direct-drive PM synchronous motor. In this thesis, low-speed direct-drive PM motors are investigated for a 4. 4 kW, 50 rpm mixer used for wastewater treatment. The thesis begins with an overview of different existing low-speed direct-driven applications. It concentrates then on a few topologies that are promising for the considered application: five different radial-flux PM machine configurations with surface-mounted or buried permanent magnets and two Torus axial-flux PM machine configurations. The designs of the PM machines are conducted by solving an opti...|$|R
5000|$|IP as a {{transport}} mechanism for broadcasters {{is here to}} stay because it allows Radio broadcast networks to bundle their audio with data, reduce operational costs and amalgamate IT and audio into a single resource. However, these massive and well-defined advantages come with some safety warnings - networks should be well managed, packets should be prioritized and correct choices should be made with regard to audio compression. Assuming all these boxes are ticked, then broadcasters will enjoy the benefits of the transition away from <b>synchronous</b> networks without <b>running</b> into serious problems ...|$|R
40|$|A b s t r a c t. Performance {{evaluation}} {{is a central}} issue {{in the design of}} complex real-time systems. In this work, we propose an extension of so-called &quot;Max-Plus &quot; algebraic techniques to handle more realistic types of real-time systems. In particular, our framework encompasses graph or partial order automata, and more generally abstract models of real-time computations (including <b>synchronous</b> programs <b>running</b> over distributed architectures). To achieve this, we introduce a new dioid of partially commutative power series (transductions), whose elements encode timed behaviors. This formalism extends the traditional representation of timed event graphs by (rational) commutative transfer series with coefficients in the Max-Plus semiring. We sketch how this framework can be used to symbolically solve several problems of interest, related to real-time sys-tems. Then we illustrate the use of this framework to encode a nontrivial mixed formalism of dataliow diagrams and automata. 1 M o t i v a t i o n...|$|R
40|$|The main {{difficulty}} for the readout electronics of the ATLAS LARG calorimeter is {{to handle the}} 16 bit dynamic range without spoiling the signal to noise ratio. A possible way out is to split the input signal in four « ranges » with different gains and to select the most appropriate. Then, each subrange only requires 10 bits, a much more manageable number. A four gain shaper circuit has been successfully developed at LAL Orsay and we report in the following about the associated « gain selector » circuit. It is a <b>synchronous</b> design <b>running</b> with the 40 MHz LHC clock and using a fully differential architecture to minimise pick-up from digital activity. The AMS 1. 2 micron bipolar technology used should provide enough radiation hardness (200 Gy are expected over 10 LHC years). After {{a description of the}} content of the four gain selector circuit, some preliminary results from the first prototype will be presented. 1...|$|R
50|$|India's grid is {{connected}} as a wide area <b>synchronous</b> grid nominally <b>running</b> at 50 hertz. The permissible {{range of the}} frequency band is 49.7-50.2 Hz, effective 17 September 2012. The Union Government regulates grid frequency by requiring States to pay more when they draw power at low frequencies. There are also synchronous interconnections to Bhutan, and asynchronous links with Bangladesh, Myanmar, and Nepal. An undersea interconnection to Sri Lanka (India-Sri Lanka HVDC Interconnection) has also been proposed. A proposed interconnection between Myanmar and Thailand would facilitate {{the creation of a}} power pool and enable trading among all BIMSTEC nations.|$|R
40|$|International audienceThe {{complexity}} and pace of heterogeneous SoC architectures is accelerating at blinding speed. While these complex hardware architectures enable product vision, they also create new and difficult {{challenges for the}} system architect. Running and debugging an Operating System and application code on a single core is child's play. This is also true for <b>running</b> <b>Synchronous</b> Multiprocessing (SMP) capable Operating Systems on homogenous multicore processors. The modern day SoC combines asymmetric multiple cores, graphics processing units, offload engines and more on {{a single piece of}} silicon. This paper will discuss opportunities for system partitioning and consolidation, and some of the key issues and challenges of architecting, developing and debugging software on these complex systems...|$|R
5000|$|The Teletype Dataspeed 40 {{combined}} electronic CRTs {{and high}} speed printer terminals and were networked {{in many different}} applications {{through the use of}} [...] "cluster controllers" [...] and digital data service units. The Dataspeed 40 interfaced a <b>synchronous</b> modem usually <b>running</b> at 2400, 4800 or 9600 baud. The trademarked term [...] "Dataspeed" [...] originated with a series of high speed paper tape terminals that sent and received oil-treated punched paper tape at 1050 words per minute. AT&T used the Dataspeed 40 terminals internally for their Switching Control Center System and similar purposes. The Dataspeed 40 was also sold commercially and used for a variety of purposes and displaced some older and slower speed Teletype equipment.|$|R
40|$|Early {{detection}} and diagnosis of incipient fault is desirable for on line condition assessment production quality assurance and improved operational efficiency of <b>synchronous</b> generator <b>running</b> of power supply. Artificial Intelligent techniques are increasly used for condition monitoring and fault diagnosis of machines. In this paper, Artificial Neural Network (ANN) approach employed for fault diagnosis in the generator, based on monitoring generator currents to give {{indication of the}} winding faults. Feed-forward Network, error back propagation training algorithm are used to perform the generator faults diagnosis and their values. NN which has been trained for all possible operating condition of the machine used to classify the incoming data. The inputs of the NN are the stator and rotor currents, and the output represents the running condition of the generator. The training of the NN achieved by the data through a mathematical model based approach to simulate the generator faults at various degree of severity. This paper evaluates through simulation line currents magnitude of the generator. The final results have been represented on a monitoring unit, built using matlab program, to give early warning of the generator failure. </p...|$|R
40|$|Permanent magnet {{alternating}} current machines are being {{widely used in}} applications demanding high and rugged performance, such as industrial automation and the aerospace and automotive industries. This paper presents a study of a permanent magnet <b>synchronous</b> machine (PMSM) <b>running</b> in eccentricity; these machines’ condition monitoring and fault detection would provide added value and they are also assuming growing importance. This paper investigates the effect of eccentricity faults on PMSM motors’ current spectrum {{with a view to}} developing an effective condition-monitoring scheme using two-dimensional (2 -D) finite element analysis (FEA). Stator current induced harmonics were investigated for fault conditions and advanced signal analysis involved continuous and discrete wavelet transforms. Simulation and experimental results are presented to substantiate that the proposed method worked over a wide speed range for motor operation and that it provided an effective tool for diagnosing PMSM operating condition. </span...|$|R
40|$|We {{present the}} design of our {{microprocessor}} for the Wall Street market which has been optimized for a given optimization function. The microprocessor has been optimized over two benchmarks, viz., blackscholes 1 and go 2 It may be implemented through a 32 nm technology process with <b>synchronous</b> hardware design <b>running</b> at clock frequency of 5 GHz. The resulting microprocessor is a multicore processor with 13 cores of type LargeCore having 6 way issue units with a total area of approximately 98 mm 2. The microprocessor is built in with on-core private Iinstruction Level- 1 and Data Level- 1 caches, each of size 262144 Kbytes, 3. The average miss-rate of the cores are approximately 0. 05 % for Data Level- 1 caches and 0. 00 % for Instruction Level- 1 caches when tested against blackscholes, as a best performance result. The average Cycles Per Instruction (CPI) in the best performance is about 0. 76. The optimal value of OF achievable by our microprocessor is 46. 33. 1...|$|R
40|$|So far, we have mainly studied {{synchronous}} algorithms. Generally, asynchronous algorithms {{are more}} difficult to obtain. Also it is substantially harder to reason about asynchronous algorithms than about synchronous ones. For instance, computing a BFS tree (Chapter 3) efficiently requires much more work in an asynchronous system. However, many real systems are not synchronous, and we therefore have to design asynchronous algorithms. In this chapter, we will look at general simulation techniques, called synchronizers, that allow <b>running</b> <b>synchronous</b> algorithms in asynchronous environments. 10. 1 Basics A synchronizer generates sequences of clock pulses at each node of the network satisfying the condition given by the following definition. Definition 10. 1 (valid clock pulse). We call a clock pulse generated at a node v valid if it is generated after v received all the messages of the synchronous algorithm sent to v by its neighbors in the previous pulses. Given a mechanism that generates the clock pulses, a synchronous algorith...|$|R
40|$|In {{this paper}} we present two {{protocols}} for asynchronous Byzantine Quorum Systems (BQS) built {{on top of}} reliable channels [...] -one for self-verifying data {{and the other for}} any data. Our protocols tolerate Byzantine failures with fewer servers than existing solutions by eliminating nonessential work in the write protocol and by using read and write quorums of different sizes. Since engineering a reliable network layer on an unreliable network is difficult, two other possibilities must be explored. The first is to strengthen the model by allowing synchronous networks that use time-outs to identify failed links or machines. We consider <b>running</b> <b>synchronous</b> and asynchronous Byzantine Quorum protocols over synchronous networks and conclude that, surprisingly, "self-timing" asynchronous Byzantine protocols may offer significant advantages for many synchronous networks when network time-outs are long. We show how to extend an existing Byzantine Quorum protocol to eliminate its dependency on reliable networking and to handle message loss and retransmission explicitly...|$|R
40|$|Virtual machine grid {{computing}} greatly {{simplifies the}} use of widespread computing resources by lowering the level of abstraction, benefiting both resource providers and users. For the user, the Virtuoso middleware that we are developing closely emulates the existing process of buying, configuring and using machines. VNET, a component of Virtuoso, is a simple and e#cient layer two virtual network tool that makes these virtual machines appear {{to be connected to}} the home network of the user, simplifying network management. Overlays like VNET have great potential as the mechanism for adaptation. Here, we describe our second generation VNET implementation, which includes support for arbitrary topologies and routing, application topology inference, and adaptive control of the overlay. We demonstrate that the performance of unmodified applications, in particular bulk <b>synchronous</b> parallel applications <b>running</b> inside the virtual machines and serviced by VNET, can be significantly (up to a factor of two) enhanced by adapting the VNET topology and forwarding rules on the fly based on intelligent application tra#c inference methods. The adaptation scheme requires no knowledge or participation from the user or application developer...|$|R
40|$|This paper {{details the}} {{development}} and application of a model for predictive performance analysis of a pipelined <b>synchronous</b> wavefront application <b>running</b> on commodity processor cluster systems. The performance model builds on existing work [1] by including extensions for modern commodity processor architectures. These extensions, including coarser hardware benchmarking, prove to be essential in countering the effects of modern superscalar processors (e. g. multiple operation pipelines and on-the-fly optimisations), complex memory hierarchies, {{and the impact of}} applying modern optimising compilers. The process of application modelling is also extended, combining static source code analysis with run-time profiling results for increased accuracy. The model is validated on several high performance SMP systems and the results show a high predictive accuracy (<= 10 % error). Additionally, the use of the performance model to speculate on the performance and scalability of this application on a hypothetical cluster with two different problem sizes is demonstrated. It is shown that such speculative techniques can be used to support system procurement, run-time verification and system maintenance and upgrading...|$|R
40|$|So far, we have mainly studied {{synchronous}} algorithms. Generally, asynchronous algorithms {{are more}} difficult to obtain. Also it is substantially harder to reason about asynchronous algorithms than about synchronous ones. For instance, computingaBFStree(Chapter 3) efficientlyrequiresmuchmoreworkin an asynchronous system. However, many real systems are not synchronous, and we therefore have to design asynchronous algorithms. In this chapter, we will look at general simulation techniques, called synchronizers, that allow <b>running</b> <b>synchronous</b> algorithms in asynchronous environments. 12. 1 Basics A synchronizer generates sequences of clock pulses at each node of the network satisfying the condition given by the following definition. Definition 12. 1 (valid clock pulse). We call a clock pulse generated at a node v valid if it is generated after v received all the messages of the synchronous algorithm sent to v by its neighbors in the previous pulses. Given a mechanism that generates the clock pulses, a synchronous algorithm is turned into an asynchronous algorithm in an obvious way: As soon as the ith clockpulseisgeneratedatnodev, v performsalltheactions(localcomputations and sending of messages) of round i of the synchronous algorithm. Theorem 12. 2. If all generated clock pulses are valid according to Definition 12. 1, the above method provides an asynchronous algorithm that behaves exactly {{the same way as the}} given synchronous algorithm. Proof. When the ith pulse is generated at a node v, v has sent and received exactly the same messages and performed the same local computations as in the first i− 1 rounds of the synchronous algorithm. Themainproblemwhengeneratingtheclockpulsesatanodev isthatv cannot know what messages its neighbors are sending to it in a given synchronous round. Because there are no bounds on link delays, v cannot simply wait “long enough ” before generating the next pulse. In order satisfy Definition 12. 1, nodes have to send additional messages for the purpose of synchronization. The tota...|$|R
40|$|We {{consider}} the distributed message-passing LOCAL model. In this model {{a communication network}} is represented by a graph where vertices host processors, and communication is performed over the edges. Computation proceeds in <b>synchronous</b> rounds. The <b>running</b> time of an algorithm {{is the number of}} rounds from the beginning until all vertices terminate. Local computation is free. An algorithm is called local if it terminates within a constant number of rounds. The question of what problems can be computed locally was raised by Naor and Stockmayer NS 93 in their seminal paper in STOC' 93. Since then the quest for problems with local algorithms, and for problems that cannot be computed locally, has become a central research direction in the field of distributed algorithms KMW 04,KMW 10,LOW 08,PR 01. We devise the first local algorithm for an NP-complete problem. Specifically, our randomized algorithm computes, with high probability, an O(n^ 1 / 2 + epsilon· chi) -coloring within O(1) rounds, where epsilon > 0 is an arbitrarily small constant, and chi is the chromatic number of the input graph. (This problem was shown to be NP-complete in Z 07.) On our way to this result we devise a constant-time algorithm for computing (O(1), O(n^ 1 / 2 + epsilon)) -network-decompositions. Network-decompositions were introduced by Awerbuch et al. AGLP 89, and are very useful for solving various distributed problems. The best previously-known algorithm for network-decomposition has a polylogarithmic running time (but is applicable for a wider range of parameters) LS 93. We also devise a Delta^ 1 + epsilon-coloring algorithm for graphs with sufficiently large maximum degree Delta that runs within O(1) rounds. It improves the best previously-known result for this family of graphs, which is O(-star n) SW 10...|$|R
40|$|Asynchronous {{circuits}} have {{a number}} of performance advantages over their synchronous equivalents, yet these advantages are rarely realised due to an overhead in the asynchronous design method. This paper investigates the nature of this overhead and proposes a new approach to overcome its effect. The method is then demonstrated on a processor design. The process demonstrates the ability of the method to implement: register locking, instruction reordering, super-scaling, hyper-threading, cache-banking and other complex techniques, easily and often without any effort from the designer. 1 Asynchronous Circuit Performance Progress in single threaded performance of modern processors is becoming stagnant due to the design complexity of very large scale systems, the design challenges presented by globally distributed clock nets and increasing variation in component delays. Asynchronous circuits have the potential of achieving substantially higher performance targets than synchronous equivalents. Most advantages have been demonstrated and exploited [1][2][3][4], yet these fail to yield the expected performance boost. 1. 1 Advantages The advantages of asynchronous circuits can be broken down into two groups, those brought in by using local delays rather than a global clock and those achieved by using implicit timing when computing (shown in figure 1). The clock overheads consists of unbalanced stages and clock skew. Although unbalanced stages can cause a degradation in performance in <b>synchronous</b> systems by <b>running</b> at the speed of the slowest stage, the bundled data approach does not automatically solve this problem as the bundled data design will still have the critical cycle time equal to the slowest executed stage. So design effort is still required to lessen this effect and it will never be fully removed by selectively executing/bypassing stages. Matched delay overhead is a much greater component of the clock overheads. These generally cannot be overcome by using bundled data approaches, (although data dependant delays can alleviate some of the worst-average delay effect). The basis of these overheads is the worst-case delay assumptions made by estimating the delay of a computational stage. The worst case delay is calculate...|$|R
40|$|So far, we have mainly studied {{synchronous}} algorithms. Generally, asynchro-nous algorithms {{are more}} difficult to obtain. Also it is substantially harder to reason about asynchronous algorithms than about synchronous ones. For in-stance, computing a BFS tree (Chapter 2) efficiently requires much more work in an asynchronous system. However, many real systems are not synchronous, and we therefore have to design asynchronous algorithms. In this chapter, we will look at general simulation techniques, called synchronizers, that allow <b>running</b> <b>synchronous</b> algorithms in asynchronous environments. 10. 1 Basics A synchronizer generates sequences of clock pulses at each node of the network satisfying the condition given by the following definition. Definition 10. 1 (valid clock pulse). We call a clock pulse generated at a node v valid if it is generated after v received all the messages of the synchronous algorithm sent to v by its neighbors in the previous pulses. Given a mechanism that generates the clock pulses, a synchronous algorithm is turned into an asynchronous algorithm in an obvious way: As soon as the ith clock pulse is generated at node v, v performs all the actions (local computations and sending of messages) of round i of the synchronous algorithm. Theorem 10. 2. If all generated clock pulses are valid according to Definition 10. 1, the above method provides an asynchronous algorithm that behaves exactly {{the same way as the}} given synchronous algorithm. Proof. When the ith pulse is generated at a node v, v has sent and received exactly the same messages and performed the same local computations as in the first i − 1 rounds of the synchronous algorithm. The main problem when generating the clock pulses at a node v is that v can-not know what messages its neighbors are sending to it in a given synchronous round. Because there are no bounds on link delays, v cannot simply wait “long enough ” before generating the next pulse. In order satisfy Definition 10. 1, nodes have to send additional messages for the purpose of synchronization. The tota...|$|R

