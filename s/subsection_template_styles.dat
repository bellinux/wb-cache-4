0|87|Public
5000|$|Mamandur cave temples is the <b>template</b> <b>style</b> of Dravida temple {{architecture}} ...|$|R
5000|$|Add an editing <b>template</b> <b>Style</b> {{which adds}} effects, {{transitions}} and pacing information ...|$|R
5000|$|A <b>templated</b> <b>style</b> system {{intended}} to simplify customisation {{and keep the}} PHP code separate from the HTML.|$|R
5000|$|An {{extensive}} {{collection of}} <b>templates,</b> including <b>style</b> <b>templates</b> for most major chemical journals.|$|R
5000|$|EasyBlog has {{a number}} of {{features}} including pre-built <b>template</b> <b>styles</b> to match with most Joomla! templates; social media sharing support; multiple blogger environment and RSS subscriptions. Some distinct features include: ...|$|R
40|$|To be Scandinavian in one’s IS research- {{or not to}} be – {{cannot be}} a dichotomy. There must be {{different}} degrees of this attribute, perhaps there are multiple dimensions to characterise the Scandinavian character. Some of these dimensions are briefly outlined below. Key words: SJIS, <b>template,</b> <b>styles,</b> publishin...|$|R
40|$|Have {{you heard}} about ODS Graphics or {{seen some of the}} demos? If you are a {{statistician}} interested in obtaining easy graphics from statistical procedures, ODS Graphics features provide an automated way of exploring statistical results with a picture. However, if you are a SAS programmer interested in customizing the plots automatically produced by ODS Graphics, you can benefit from an understanding of the graph and <b>style</b> <b>templates</b> that SAS provides for these plots, especially to make changes that persist from one application to the next. Follow the authors on a journey of discovery with ODS Graphics, as they explain how to access and modify graph templates. By the end of the presentation, which includes code samples and demos, you will {{have a better understanding of}} the relationship between statistical procedures, graph <b>templates,</b> <b>style</b> <b>templates,</b> and DATA _NULL _ programs. The authors take you through every step of their discovery process...|$|R
40|$|Although {{cascading}} style sheets (CSS) {{have been}} available in various forms in ODS since SAS ® 9. 2, SAS 9. 4 is the first version that fully uses the new style engine’s architecture. Using the new CSS engine, you can apply custom styles based on column names, BY group names, BY group variables, and anchor names. You can specify dynamic attribute values using SYMGET, RESOLVE, DYNAMIC, and EXPRESSION functions just like in PROC <b>TEMPLATE</b> <b>styles.</b> If you want {{to break out of}} the box of ODS styles and do some truly original styling, the CSS techniques in this paper takes you there...|$|R
5000|$|Publisher styles - Over 40 {{publisher}} and journal <b>style</b> <b>templates</b> are supported ...|$|R
50|$|Confluence {{includes}} set up CSS <b>templates</b> for <b>styles</b> and formatting for all pages, {{including those}} imported from Word documents. Built in search allows queries by date, the page’s author, and content type such as graphics.|$|R
50|$|In fact, the {{use case}} formats {{formulated}} by those popular <b>template</b> <b>styles,</b> e.g. the RUP's and the Cockburn's (also {{adopted by the}} OUM method) etc., have been proved in practice as valuable and helpful tools for capturing, analyzing and documenting complex requirements of large systems. The quality of a good use case documentation (model) should not be judged largely or only by its size. It is possible as well that a quality and comprehensive use case model of a large system may finally evolve into hundreds of pages {{mainly because of the}} inherent complexity of the problem in hand, not because of the poor writing skills of its authors.|$|R
40|$|Inheritance in ODS <b>style</b> <b>templates</b> {{has been}} {{simplified}} in Version 9. 2 SAS. Now you don’t need a FROM clause in a CLASS statement {{when you work}} with defined lineages in the <b>Styles.</b> Default <b>template.</b> However, lineages as well as attributes can be changed when new <b>style</b> <b>templates</b> are created in ODS. This means that you need an ODS lineage tracer that links inheritance from Base. <b>Template.</b> <b>Style</b> to associated attribute settings in the <b>Styles.</b> Default <b>template.</b> Only by viewing attribute settings at their assigned locations in a lineage, {{is it possible to}} know for certain when STYLE … FROM can safely be discarded in favor of the CLASS statement. This paper shows by example how to use the lineage tracer plus additional tools to develop new styles 1 from the <b>Styles.</b> Default <b>template.</b> By studying the examples presented, you will be able stretch ODS inheritance to get the output you want. INHERITANCE, LINEAGE AND FAMILY TREES Since inheritance plays a pivotal role in ODS style definitions, terms need to be defined from the outset. The added underlined text in the following definitions taken from The Concise Oxford Dictionary [2] shows that inheritance, lineage, and family tree are closely related: inheritance n. 1 a thing that is inherited. 2 the act of inheriting...|$|R
40|$|We {{present a}} {{technique}} for converting a basic D 3 chart into a reusable <b>style</b> <b>template.</b> Then, {{given a new}} data source we can apply the <b>style</b> <b>template</b> to generate a chart that depicts the new data, but in the <b>style</b> of the <b>template.</b> To construct the <b>style</b> <b>template</b> we first deconstruct the input D 3 chart to recover its underlying structure: the data, the marks and the mappings that describe how the marks encode the data. We then rank the perceptual effectiveness of the deconstructed mappings. To apply the resulting <b>style</b> <b>template</b> to a new data source we first obtain importance ranks for each new data field. We then adjust the template mappings to depict the source data by matching the most important data fields to the most perceptually effective mappings. We show how the <b>style</b> <b>templates</b> {{can be applied to}} source data in the form of either a data table or another D 3 chart. While our implementation focuses on generating templates for basic chart types (e. g. variants of bar charts, line charts, dot plots, scatterplots, etc.), these are the most commonly used chart types today. Users can easily find such basic D 3 charts on the Web, turn them into templates, and immediately see how their own data would look in the visual style (e. g. colors, shapes, fonts, etc.) of the templates. We demonstrate the effectiveness of our approach by applying a diverse set of <b>style</b> <b>templates</b> to a variety of source datasets. Comment: 11 page...|$|R
50|$|A drop-in BibTeX {{replacement}} {{based on}} <b>style</b> <b>templates,</b> including full Unicode support, written in Python.|$|R
40|$|This paper {{describes}} a fully automatic standard-cell layout synthesis system, CELLERITY. The system is flexible in supporting {{a wide variety}} of process technologies and a range of library <b>template</b> <b>styles.</b> The tool is fully automatic and provides several options to the user to customize the layout template. The tool considers performance and yield and generates dense, design-rule correct layouts. Experimental results indicate that the area of CELLERITY-generated standard cells is competitive with manually designed cells in a majority of circuits. In block-level tests of industrial circuits, standard-cell blocks generated using CELLERITY cells are about equal to the block area produced by using a manually-designed library. Recently, an embedded microcontroller in a state-of-the-art sub-micron process technology was fabricated using CELLERITY-generated standard cells. ...|$|R
40|$|The {{development}} of on-line engineering textbooks presents new challenges to authors to effectively integrate text and tools in an electronic environment. By incorporating human factors principles of interface design and cognitive psychology {{early in the}} design process, a team at Sandia National Laboratories {{was able to make}} the end product more usable and shorten the prototyping and editing phases. A critical issue was simultaneous {{development of}} paper and on-line versions of the textbook. In addition, interface consistency presented difficulties with distinct goals and limitations for each media. Many of these problems were resolved swiftly with human factors input using <b>templates,</b> <b>style</b> guides and iterative usability testing of both paper and on-line versions. Writing style continuity was also problematic with numerous authors contributing to the text...|$|R
40|$|Different {{from the}} {{traditional}} SAS/GRAPH ® in SAS ® 9. 2, ODS statistical graphics from procedures provide an easy and quick way to explore and visualize data. However, {{if you want to}} generate high-quality plots for reports and publications, Graph Template Language (GTL) is a powerful tool to customize and build standalone ODS statistical graphs. This paper describes how to output SAS ® codes and data objects of an ODS statistical graph generated from a statistical procedure, and then use GTL to customize graph <b>templates</b> and <b>style</b> <b>templates.</b> Some examples on customizing ODS graphics step-by-step are provided...|$|R
40|$|With the Output Delivery System (ODS), SAS ® {{continues}} to provide programmers with many <b>style</b> <b>templates</b> for developing reports. These default <b>templates</b> and <b>style</b> definitions present {{the data in}} a clear and attractive manner often with no further thought needed. The website “SAS ODS Style Examples ” provides a link to screen shots of SAS ODS <b>style</b> <b>templates</b> (Swoope, 2011). However, when producing complicated reports with multiple requirements, using basic design principles to determine which template or which custom style definition to use can make for a more readable and comprehensive final report. This paper presents the code and the design considerations for two ODS reports; one, a redesign of a 10 -plus year old SAS ® program originally designed with PUT statements, and two, a highly customized SAS ® program for delivering output in Excel. The reports are generated using Proc Report and developed with version 9. 2 and 9. 3 of SAS ® executing on a Windows XP platform. The reports use features that are not platform specific...|$|R
50|$|Stola is an Italian {{automotive}} company {{founded in}} 1919. Since its birth it realized concept cars and <b>style</b> <b>templates</b> {{for some of}} the major manufacturers in the automotive industry.|$|R
5000|$|Templates {{describe}} the main {{design of a}} Joomla website. While the CMS manages the website content, <b>templates</b> determine the <b>style</b> or look and feel and layout of a site.|$|R
40|$|This {{document}} specifies the formating {{requirements for}} final manuscripts {{that are to}} be published in the UM 99 proceedings volume. It also explains how <b>template</b> and <b>style</b> files can be used, and it emphasizes the importance of actually following the instructions. 1 Overview of Manuscript Preparation The proceedings of UM 99 will be published by Springer Wien New York. (Those four words constitute the name of the company.) They will be formated according to a style that is based on the style of the series Lecture Notes in Computer Science of Springer-Verlag, Heidelberg/Berlin, 1 with minor adaptations that take into account the size of our proceedings pages. Authors who have access to the printed proceedings of UM 97 can see how the resulting volume is to look. Alternatively, individual UM 97 articles can be downloaded from the on-line proceedings ([URL] or [URL] 1. 1 Using the <b>Template</b> and <b>Style</b> Files In addition to the instructions that you are n [...] ...|$|R
40|$|The {{re-analysis}} of the archived data {{recorded at}} the Z^ 0 resonance by the ALEPH experiment at LEP {{during the years}} 1992 - 1995 shows an excess in the opposite sign di-muon mass spectra at 30. 40 ± 0. 46 GeV in events containing b quarks. The excess has a natural width of 1. 78 ± 1. 14 GeV. The di-muon excess has a significance of at least 2. 6 σ (Z_ Bi) using the calculations presented. The significances for background models based on a kernel density approximation stay close to 3 σ (Z_ freq, lee) when including a look elsewhere effect. A compatible but smaller excess is visible in the opposite di-electron mass spectrum as well. This paper uses the data collected by the ALEPH experiment in the years 1992 - 1995, which have been archived to allow their use for physics analyses after {{the closure of the}} collaboration. Comment: Added reference to corresponding Rivet analysis <b>template,</b> <b>style</b> chang...|$|R
40|$|Template-based code {{generation}} (TBCG) is {{a synthesis}} technique that produces code from high-level specifications, called templates. TBCG {{is a popular}} technique in model-driven engineering (MDE) given that they both emphasize abstraction and automation. Given the diversity of tools and approaches, {{it is necessary to}} classify existing TBCG techniques to better guide developers in their choices. The goal {{of this article is to}} better understand the characteristics of TBCG techniques and associated tools, identify research trends, and assess the importance of the role of MDE in this code synthesis approach. We conducted a systematic mapping study of the literature to paint an interesting picture about the trends and uses of TBCG. Our study shows that the community has been diversely using TBCG over the past 15 years. TBCG has greatly benefited from MDE. It has favored a <b>template</b> <b>style</b> that is output-based and high level modeling languages as input. TBCG is mainly used to generate source code and has been applied in a variety of domains. Furthermore, both MDE and non-MDE tools are becoming effective development resources in industry...|$|R
5000|$|In WPF you {{can define}} {{the look of}} an element directly, via its properties, or {{indirectly}} with a <b>Template</b> or <b>Style.</b> At its simplest a style {{is a combination of}} property settings that can be applied to a UI element with a single property attribute. Templates are a mechanism for defining alternative UI for portions of your WPF application. There are several template types available in WPF (ControlTemplate, DataTemplate, HierarchicalDataTemplate and ItemsPanelTemplate).|$|R
5000|$|... vBulletin 4 was {{released}} 21 December 2009. New for vBulletin 4 is the vBulletin publishing suite, which includes CMS and blog functions. Other updates to the software included a cross-content search system, improved search engine optimization and a centralized attachment system {{which allows the}} sharing of attachments across products. Additionally, the <b>template</b> and <b>styling</b> engine was changed for vBulletin. The StyleVars system was added to draw CSS variables directly from the vBulletin Template code.|$|R
40|$|Abstract. Side-channel {{attacks are}} {{a serious threat}} to {{implementations}} of cryptographic algorithms. Secret information is recovered based on power consumption, electromagnetic emanations or any other form of physical information leakage. Template attacks are probabilistic side-channel attacks, which assume a Gaussian noise model. Using the max-imum likelihood principle enables us to reveal (part of) a device’s secret data for each set of recordings (i. e. leakage trace). In practice, however, the major concerns are (i) how to select the points of interest of the traces, (ii) how to choose the minimal distance between these points, and (iii) how many points of interest are needed for attacking. So far, only heuristics were provided. In this work, we propose to perform tem-plate attacks in the principal subspace of the traces. This new type of attack addresses all practical issues in principled way and automatically. The approach is validated by attacking stream ciphers such as RC 4. We also report analysis results of <b>template</b> <b>style</b> attacks against an FPGA implementation of the AES Rijndael. Roughly, the template attack we carried out requires five time less encrypted messages than the best re-ported correlation attack against similar block cipher implementations. ...|$|R
40|$|Side-channel {{attacks are}} {{a serious threat}} to {{implementations}} of cryptographic algorithms. Secret information is recovered based on power consumption, electromagnetic emanations or any other form of physical information leakage. Template attacks are probabilistic sidechannel attacks, which assume a Gaussian noise model. Using the maximum likelihood principle enables us to reveal (part of) the secret for each set of recordings (i. e., leakage trace). In practice, however, the major concerns are (i) how to select the points of interest of the traces, (ii) how to choose the minimal distance between these points, and (iii) how many points of interest are needed for attacking. So far, only heuristics were provided. In this work, we propose to perform template attacks in the principal subspace of the traces. This new type of attack addresses all practical issues in principled way and automatically. The approach is validated by attacking stream ciphers such as RC 4. We also report analysis results of <b>template</b> <b>style</b> attacks against an FPGA implementation of AES Rijndael. Roughly, the template attack we carried out requires five time less encrypted messages than the best reported correlation attack against similar block cipher implementations...|$|R
40|$|Runtime {{reflection}} facilities, as {{present in}} Java and. NET, are powerful mechanisms for inspecting existing code and metadata, {{as well as}} generating new code and metadata on the fly. Such power does come at a high price though. The runtime reflection support in Java and. NET imposes a cost on all programs, whether they use reflection or not, simply by the necessity of keeping all metadata around and the inability to optimize code because of future possible code changes. A second—often overlooked—cost is the difficulty of writing correct reflection code to inspect or emit new metadata and code and {{the risk that the}} emitted code is not well-formed. In this paper we examine a subclass of problems that can be addressed using a simpler mechanism than runtime reflection, which we call compile-time reflection. We argue for a high-level construct called a transform that allows programmers to write inspection and generation code in a pattern matching and <b>template</b> <b>style,</b> avoiding {{at the same time the}} complexities of reflection APIs and providing the benefits of staged compilation in that the generated code and metadata is known to be well-formed and type safe ahead of time...|$|R
40|$|In this writeup, I {{describe}} {{the process and}} results of redesigning the Honors newsletter and creating a production system to guide its staff in efficient and consistent publications. My redesign included researching what other publications are doing; choosing fonts, colors, and a layout scheme; and creating <b>templates</b> and <b>style</b> guides. The production system includes an ideal schedule, staff member job descriptions, and a flowchart of how the system should work. I also created and included a writing style guide, which (along with the design style guide) {{is meant to be}} updated as needed...|$|R
40|$|This study {{addresses}} {{the development of}} an online authoring system that can be integrated into a typical digital archive system to facilitate the construction of online exhibitions. One common approach for the efficient online authoring is based on a principle that decomposes a hypermedia presentation into a “content document ” and a “style template. ” This study proposes a layer-based architecture to further decompose a <b>style</b> <b>template</b> into a number of presentation layers. The approach eases the burden for implementing large-scale <b>style</b> <b>templates</b> in digital museum projects demanding versatile presentation styles. Particular attention has been focused on the mechanism for affective background image composition that incorporates the concerns of the affective colour scheme and the page layout. A system implementation has been successfully applied in real world digital museum projects for constructing aesthetic online exhibitions...|$|R
5000|$|Newgen revamp - Newly {{generated}} {{players are}} now created {{using a new}} system that looks at player <b>templates</b> for different <b>styles</b> of player, as well as taking national traits into account, {{to ensure that the}} types of player in the game are constant throughout the life of your own saved game.|$|R
5000|$|Publishing in all common {{citation}} styles. Over 8,400 citation {{styles are}} available (5 April 2017). Registered users can request styles for scientific journals for free. Citavi's citation style editor supports programmable components and <b>templates,</b> an advanced <b>style</b> finder {{is available to}} search with style features to find a fitting style.|$|R
40|$|Thesis (M. N.) -University of Natal, Durban, 2004. The aim of {{this study}} was to {{describe}} the clients' satisfaction with Primary Health Care (PHC) Services in Lilongwe Health District with regard to client involvement in health care delivery and the accessibility of PHC services. It was hoped that the information generated would be used in the evaluation of PHC Services in Lilongwe. A quantitative and qualitative research was done using an outcome analysis evaluation design. The study utilised Kawale and Chiwamba Health Centres and their catchment population. Systematic random sampling was used for the clients making use of the health centres, convenience sampling for those not using the health centres and purposive sampling for the focus group participants. Quantitative data was collected using self-administered questionnaires while qualitative data was collected using an interview guide in focus group sessions. Quantitative data was analysed using SPSS and percentages and frequencies were calculated while qualitative data was analysed through a <b>template</b> <b>style</b> of analysis. The findings of the study revealed that in both Health Centres Clients were satisfied with some aspects of PHC such as, cultural accessibility, health education and listening abilities of health workers but there was still some evidence of dissatisfaction, and misunderstanding of the concept of Community Involvement in Health care delivery. This calls for a need to reorient communities on PHC delivery and what it means...|$|R
40|$|Project (M. S., Computer Science) [...] California State University, Sacramento, 2011. This project {{involves}} {{building a}} lightweight, robust web application {{for managing the}} inventory of the College of Engineering & Computer Science. Using progressive enhancement techniques, this project helps managing the lifecycle of equipment: requesting equipment, quotes, purchases, allocating resources and assets as well as managing users and office locations. The web application will go live on the system that currently houses the ECS Portal. A single sign-on mechanism through the ECS Portal enables seamless access to the Inventory Management System. Role based access to the web application will help ensure that users are allowed {{to interact with the}} web application according to the privileges assigned. A MySQL database with indexes facilitates fast access to inventory data. Server side programming is in PHP run on an Apache HTTP Server over SSL. The use of emerging scripting frameworks such as jQuery and AJAX (Javascript) will provide quick and asynchronous access to server side data, which will reduce response times and result in improved interaction. To complement {{the look and feel of}} the ECS Portal, the ECS Web <b>Template</b> <b>style</b> sheets are used. When launched, the Inventory Management System will provide a one-stop shop for stakeholders in the College of Engineering & Computer Science to manage their inventory. Computer Scienc...|$|R
40|$|In {{order to}} {{facilitate}} your authoring process, ICE 2001 provides you with a professional MS Word document <b>template,</b> containing predefined <b>styles</b> for all your document elements. Using these styles will keep your effort to prepare an excellent page layout to a minimum and will ensure a smooth editing of the conference proceedings...|$|R
40|$|L 2 O {{collected}} learner-centred tasks from consortium {{partners and}} applied development processes {{based on those}} used to create e-learning language modules for the UK eUniversities. Customised <b>templates</b> and <b>style</b> guides were used to create re-usable learning objects (RLOs) which were tagged with contextual metadata agreed by the project team, and stored in a shared electronic repository (CLARe). All partners contributed learning materials and the RLOs were processed according to standards that were agreed by the consortium. This collaboration and sharing of materials and expertise is resulting {{in the provision of}} access to quality assured learning materials. ...|$|R
