24|5408|Public
2500|$|Chromium 13.0 was {{released}} on 26 April 2011, with 13.0.748.0 as the initial version. Early versions of Chromium 13 included a menu button to enable users to switch between multiple Google profiles, multi-selection of tabs and an improved omnibox engine. This version also included several minor GUI changes, including a slightly lightened menu bar. By early May 2011 the results of Google's attempts to reduce the file size of Chromium were already being noted. Much of the early {{work in this area}} concentrated on shrinking the size of WebKit, by removing <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML),</b> the Image Resizer, datagrids and the Android build system. The largest Chromium nightly build was 35.3 MB on 15 April 2011, but this was reduced to 29.9 MB by 20 April 2011. Later builds of Chromium and Chrome in mid-May 2011 introduced the optional [...] "compact navigation view", aimed at mobile device users. This view combined the tab and URL/menu bars into one bar, by making the URL bar hide when not in use, thus saving 30 pixels of vertical space.|$|E
5000|$|Commentators criticized {{several aspects}} of <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML)</b> and WAP. Technical criticisms include: ...|$|E
50|$|For WAP version 1.X, {{the primary}} {{language}} of the WAE is <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML).</b> In WAP 2.0, the primary markup language is XHTML Mobile Profile.|$|E
50|$|Using any {{standard}} text editor, new campaigns {{can be created}} using {{what is known as}} Wesnoth <b>Markup</b> <b>Language</b> (<b>WML).</b> As its name suggests, WML is similar to XML and other <b>markup</b> <b>languages</b> in syntax with tags defining events and sides in a scenario. WML has evolved from what was a simple markup/configuration language into a specialized programming language designed for easily modifying the game. Examples for the latest stable version are offered on the site's wiki.|$|R
50|$|WBXML {{is used by}} {{a number}} of mobile phones. Usage {{includes}} Exchange ActiveSync for synchronizing device settings, address book, calendar, notes and emails, SyncML for transmitting address book and calendar data, <b>Wireless</b> <b>Markup</b> <b>Language,</b> <b>Wireless</b> Village, OMA DRM for its rights language and Over-the-air programming for sending network settings to a phone.|$|R
50|$|The {{majority}} of modern smartphones {{are able to}} browse websites, some with browsing experiences {{similar to those of}} desktop computers. The W3C Mobile Web Initiative identifies best practices to help websites support mobile phone browsing. Many companies use these guidelines and mobile-specific code like <b>Wireless</b> <b>Markup</b> <b>Language</b> or HTML5 to optimize websites for viewing on mobile devices.|$|R
50|$|The {{first version}} in 2002 was lacking {{support for the}} Wireless Application Protocol (WAP) and <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML)</b> and Adobe Flash lite. s60 version 2 {{introduced}} support for WAP and WML. Hence the Nokia Services (WAP) browser was the default browser on initial device shipments of this platform.|$|E
50|$|In {{contrast}} with the Wireless Application Protocol (WAP) standard, which used <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML)</b> {{on top of a}} protocol stack for wireless handheld devices, i-mode borrows from fixed Internet data formats such as C-HTML based on HTML, as well as DoCoMo proprietary protocols ALP (HTTP) and TLP (TCP, UDP).|$|E
50|$|The mobile Web {{primarily}} utilises lightweight pages {{like this}} one written in Extensible Hypertext Markup Language (XHTML) or <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML)</b> to deliver content to mobile devices. Many new mobile browsers are moving beyond these limits by supporting {{a wider range of}} Web formats, including variants of HTML commonly found on the desktop Web.|$|E
40|$|XML in the Computing Curriculum: XML (Extensible <b>Markup</b> <b>Language)</b> {{provides}} a way of structuring and describing data in a simple text format understandable for human beings {{and in the same}} way easily interpretable by computer programs. It is widely used in industry and it forms a fundamental standard for a number of emerging technologies, including Web Services, RDF (Resource Description Framework), RSS (Really Simple Syndication), as well as derivatives <b>languages</b> such as <b>WML</b> (<b>Wireless</b> <b>Markup</b> <b>Language)</b> and XHTML (Extensible HTML). This paper describes the experience of teaching XML at our department and the approach of embedding XML topics in already existing courses. It also points out the underpinning theoretical concepts related to XM...|$|R
40|$|PhotoStudy is {{a system}} that {{supports}} vocabulary study on both wired and wireless devices. It is designed to make it simple to annotate content with multimedia such as images and audio recorded on these devices. This paper presents a prototype system that uses <b>wireless</b> <b>markup</b> <b>languages</b> and Java MIDlets. User evaluations have been conducted, and are being continued in our iterative design approach. We report the results from questionnaire evaluations, observational studies and interviews. 1...|$|R
50|$|The Extensible User Interface Protocol, or XUP, is a {{proposed}} web standard. XUP is a SOAP-based protocol for communicating {{events in a}} user interface, where the user interface is described by an XML document. The specification does not limit what format the XML document is in, or what event model is used for communicating over XUP. Examples given in the specification for possible user interface <b>languages</b> include XHTML, <b>Wireless</b> <b>Markup</b> <b>Language,</b> and XUL.|$|R
50|$|<b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML),</b> {{based on}} XML, is a markup {{language}} intended for devices that implement the Wireless Application Protocol (WAP) specification, such as mobile phones. It provides navigational support, data input, hyperlinks, text and image presentation, and forms, much like HTML (HyperText Markup Language). It preceded {{the use of}} other markup languages now used with WAP, such as HTML itself, and XHTML (which are gaining in popularity as processing power in mobile devices increases).|$|E
5000|$|A WAP gateway sits between mobile devices {{using the}} WAP {{protocol}} and the World Wide Web, passing pages {{from one to}} the other much like a proxy. This translates pages into a form suitable for the mobiles, for instance using the <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML).</b> This process is hidden from the phone, so it may access the page in the same way as a browser accesses HTML, using a URL (for example, [...] ), provided the mobile phone operator has not specifically prevented this.|$|E
50|$|Although conceptually simple, this {{architecture}} is {{not conducive to}} large-scale application development because, inevitably, {{a great deal of}} functionality is duplicated in each JSP. Also, the Model 1 architecture unnecessarily ties together the business logic and presentation logic of the application. Combining business logic with presentation logic makes it hard to introduce a new 'view' or access point in an application. For example, in addition to an HTML interface, you might want to include a <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML)</b> interface for wireless access. In this case, using Model 1 will unnecessarily require the duplication of the business logic with each instance of the presentation code.|$|E
40|$|In today {{business}} can be see almost all businessman is busy in each business so {{do not always}} stay in office or often have going. Meanwhile for the requirement of their merchandise stock have to order the goods to the agent or supplier, besides using telephone, {{there is a way}} of more cheap and effective to order the goods, that is using WAP (Wireless Application Protocol). So for that, can design a system which can be used to order the goods. In this research project, it is designed a software is used for the ordering of goods. Software designed used by wireless accessed through WAP (Wireless Application Protocol) which can be accessed to use the mobile phone, PDA (Personal Digital Assistants), and others. In this research project is used ASP (Active Server Pages) programming <b>language</b> and <b>WML</b> (<b>Wireless</b> <b>Markup</b> <b>Language)</b> programming language. For the data storage is used Microsoft Access database...|$|R
40|$|Abstract-A mobile browser {{is simply}} any program {{that lets you}} access and read content on a network from a mobile device, usually the {{internet}} or some other mobile network service, is becoming more common and more easy. In this paper {{we are going to}} suggest a system to provide various services for citizens and tourists in Iraq, to provide all information that related to Iraq airlines, specially timetable (departure and arrival), all these process will be digitally to avoid the manual system (i. e. booking via travel agents). (<b>WML)</b> <b>Wireless</b> <b>Markup</b> <b>Language</b> and (ASP) Active Server Pages language will be use in this paper...|$|R
40|$|This paper aims {{to provide}} support offered by SQL Server for XML. {{languages}} run serverside scripting (ASP, ASP. Net, PHP or JSP), are already mature technology today, providing an opportunity to develop complex applications for Web ului. Necesitatea can communicate with all connected devices via the Internet has required {{the creation of a}} universal language that is understood by all devices and applications located on the server must be able to prepare data for transmission. XML makes its presence felt in this area mainly because of its flexibility in <b>WML</b> (<b>Wireless</b> <b>Markup</b> <b>Language),</b> an XML application for mobile dizpositive. information exchange, Internet, XML, server, WEB, ASP, ASP. Net, PHP, JSP;...|$|R
5000|$|Chromium 13.0 was {{released}} on 26 April 2011, with 13.0.748.0 as the initial version. Early versions of Chromium 13 included a menu button to enable users to switch between multiple Google profiles, multi-selection of tabs and an improved omnibox engine. This version also included several minor GUI changes, including a slightly lightened menu bar. By early May 2011 the results of Google's attempts to reduce the file size of Chromium were already being noted. Much of the early {{work in this area}} concentrated on shrinking the size of WebKit, by removing <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML),</b> the Image Resizer, datagrids and the Android build system. The largest Chromium nightly build was 35.3 MB on 15 April 2011, but this was reduced to 29.9 MB by 20 April 2011. Later builds of Chromium and Chrome in mid-May 2011 introduced the optional [...] "compact navigation view", aimed at mobile device users. This view combined the tab and URL/menu bars into one bar, by making the URL bar hide when not in use, thus saving 30 pixels of vertical space.|$|E
40|$|This paper {{presents}} {{a strategy for}} designing a low-power processor of a mobile terminal with Wireless Access Protocol (WAP) support. The strategy is introduced studying the <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML)</b> processing. A sequence of tasks focused on energy consumption reduction is performed; the main goal is to reduce a cost function (energy consumption) constrained by the silicon area spent and data bandwidth achieved...|$|E
40|$|Information {{agents on}} mobile {{computing}} environment should adaptively provide information {{based on the}} changing location of mobile users. The agent has to obtain user’s location dynamically, and respond him the information or service depending upon his geographical position. We propose a novel framework for location-aware information agent that operates on the Wireless Application Protocol (WAP) environment. There is a locating module that can obtain user’s location by GSM cellular network. A topology-based data model is devised to represent geographical information. Search algorithm can find location-dependent results from the topology graph. Search results are organized as dynamic documents, which are <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML)</b> cards and decks. Finally our framework is implemented with Ericsson WAP simulation environment. 1...|$|E
40|$|As {{wireless}} mobile {{applications are}} becoming more and more popular, an increasing number of applications requires that the content to be displayed on the user's device is generated dynamically. Just like many electronic-commerce applications need to generate web content depending on user input and data retrieved from a database, WAP (Wireless Application Protocol) based applications as well have to access databases and produce output in <b>WML</b> (<b>Wireless</b> <b>Markup</b> <b>Language)</b> or its scripting language WMLScript. In this paper, the basic technologies for creating static and dynamic WAP content are discussed. JSP (Java Server Pages) is chosen as an appropriate technology that supports the generation of dynamic user-tailored content. A mobile-shopping example is used to illustrate the concepts. The underlying database is accessed through a JDBC-ODBC driver. Parameter passing across the heterogeneous architecture of the mobile solution is discussed...|$|R
40|$|With the {{introduction}} of the new defacto standard Wireless Application Protocol (WAP) the Internet becomes more interesting for mobile users. The new technology takes consideration to the limitations of the mobile Internet-access. This work gives an overview of new mobile devices that provide the new standard. Furthermore, mobile internet-services are analysed and classified. Then, guidelines for the development of user interfaces on mobile services are defined. Finally, an example mobile Internet service has been realized. One central topic in this work is the examination of the new <b>language</b> <b>WML</b> (<b>wireless</b> <b>markup</b> <b>language),</b> {{that is part of the}} WAP standard, with all its capabilities in regard to the realization of information services on mobile devices. The different possibilities in formatting and layouting content give the necessity of creating rules and guidelines in regard to the properties of mobile devices. These guidelines are used for the realization of example WAP-services. A further objective of this thesis was the design and development of a mobile Internet-portal. With this portal the access to favourite WAP-services becomes easier and faster. The implementation of the portal is embedded in an existing concept that adapts standard Internet content for small displays - the AdaWeb. One reason for the integration of the Internet-portal in AdaWeb was the personalization of the individual portals, which are supported by the user-management of AdaWeb. The other reason is that AdaWeb can be extended to adapt WML-content for different mobile devices. With this integration both types of browser - which are capable of displaying HTML-content or the new WML-content - are able to use AdaWeb. Based on the guidelines worked out a mobile Internet-service in the area of Mobile Commerce has been developed. In the realization of the example »mobile banking«-service the requirements of usability on mobile devices with limited interaction capabilities are considered so that this service is a validation of the developed guidelines...|$|R
40|$|The {{necessity}} of being online {{wherever you are}} and at any time, have brought foreword the WAP technology. Solution based on banking, industry, and sale among others, is services and application {{that are on the}} market to day. Like in all new technologies the security issues in WAP is of great interest. The interest lies on both possible intruders and company that want to make a profit out of it by offering services. This assignment enlightens possible security problems in the WAP architecture, both in the security layer Wireless Transport Layer of Security (WTLS) and the WAP infrastructure. The report {{is a result of the}} investigation and will be used as information on new technology for my employer, The Norwegian Intelligence Service (NIS). In the version that exist as of to day (version 1. 1 and version 1. 2) the security-leaks in the security layer are to many, and to easy for an intruder to attack. Some of the security problems is a consequence of a cipher-suit on 40 bits, this is considered week in all literature about crypto-analysis. The designers of WAP applications got the responsibility to implement as much security as required into the solution. As of 14. January 2000 the export of strong encryption is regardless of their strength or type of technology. This means that the designers can implement cipher-suites bigger than 40 bits into the solution. To avoid a lesser probability of man-in-the-middle attacks in the infrastructure a company should invest in a WAP Gateway or WAP Server. This will surround the WAP architecture with the security infrastructure inside a company. Based on the research in this report it is possible to draw the conclusion; independence is the key to maximum security. This will also be the preferable solution for NIS if operations goes wireless, but it is recommended that NIS carries out a comprehensive evaluation on WAP and type of bearer before even considering implementing the WAP technology. The use of eXtended <b>Markup</b> <b>Language</b> as a base for the interfaces shown for the user is fully supported by the means of <b>Wireless</b> <b>Markup</b> <b>Language</b> and extended Style Language. The powerful style language makes it possible to implement more powerful features. This is verified in the demo application...|$|R
40|$|To bring {{coherence}} between Wireless Access Protocol (WAP) and Hyper Text Transfer Protocol (HTTP), in this paper, we {{have proposed}} an enhanced Internet framework, which incorporates a new markup language and a browser compatible {{with both of}} the access control protocols. This Markup Language and the browser enables co-existence of both Hyper Text Markup Language (HTML) and <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML)</b> contents in a single source file, whereas the browser incorporates the ability to hold contents compliant with both HTTP and WAP. The proposed framework also bridges the security gap that {{is present in the}} existing mobile Internet framework. Keywords: WAP, WML, HTTP, HTML, browser, parser, wireless devices. Comment: 8 th International Conference on Advanced Communication Technology (ICACT 2006...|$|E
40|$|Abstract-The {{research}} work reported here {{is concerned with}} designing and developing a multiplatform dynamic mobile converter that transforms Hyper Text Markup Language (HTML) documents into their equivalent <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML)</b> documents. This system is a server side service that analyzes the client request upon reception, renders the response document to a suitable format, and finally transfers the produced document back to the client. In comparison to the currently available converters, the conversion process of the newly developed converter has been improved in two main perspectives. First, new HTML tags have been supported. Second, new image formats, such as Wireless Bitmaps (WBMP), have been supported. Moreover, more complex HTML structures have been handled. System validation and verification showed a successful transformation {{rate of more than}} 75 %. Finally, to achieve better transformation results, it was recommended to use the HTML dialects that support mobility, and take the nature of the mobile users into considerations when deciding to enable any site wirelessly...|$|E
40|$|ABSTRACT: Nowadays, {{wireless}} {{technology has been}} widely used in various applications. Mobile Internet users have been increasing rapidly around the world. Several benefi ts of using mobile internet includes transmitting data through querying and updating databases, e-commerce transactions and daily business application {{as well as in}} education such querying examina-tion results. This paper presents the development of a mobile database application to enable students to access the teaching materials such as lecture notes or tutorials using supported mobile phones or Personal Digital Assistant (PDA). Students could also use the system to access class information and check the course work for the enrolled class. The idea of this project is to employ Wireless Application Protocol (WAP) application in the learning process to overcome time constraint problem and it is the effective method for accessing information as mobile phones is used by most people. <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML)</b> is used to provide user interface at the client device while Active Server Pages (ASP) for server transaction process...|$|E
40|$|Masteroppgave i informasjons- og kommunikasjonsteknologi 2000 - Høgskolen i Agder, GrimstadThe {{necessity}} of being online {{wherever you are}} and at any time, have brought foreword the WAP technology. Solution based on banking, industry, and sale among others, is services and application {{that are on the}} market to day. Like in all new technologies the security issues in WAP is of great interest. The interest lies on both possible intruders and company that want to make a profit out of it by offering services. This assignment enlightens possible security problems in the WAP architecture, both in the security layer Wireless Transport Layer of Security (WTLS) and the WAP infrastructure. The report {{is a result of the}} investigation and will be used as information on new technology for my employer, The Norwegian Intelligence Service (NIS). In the version that exist as of to day (version 1. 1 and version 1. 2) the security-leaks in the security layer are to many, and to easy for an intruder to attack. Some of the security problems is a consequence of a cipher-suit on 40 bits, this is considered week in all literature about crypto-analysis. The designers of WAP applications got the responsibility to implement as much security as required into the solution. As of 14. January 2000 the export of strong encryption is regardless of their strength or type of technology. This means that the designers can implement cipher-suites bigger than 40 bits into the solution. To avoid a lesser probability of man-in-the-middle attacks in the infrastructure a company should invest in a WAP Gateway or WAP Server. This will surround the WAP architecture with the security infrastructure inside a company. Based on the research in this report it is possible to draw the conclusion; independence is the key to maximum security. This will also be the preferable solution for NIS if operations goes wireless, but it is recommended that NIS carries out a comprehensive evaluation on WAP and type of bearer before even considering implementing the WAP technology. The use of eXtended <b>Markup</b> <b>Language</b> as a base for the interfaces shown for the user is fully supported by the means of <b>Wireless</b> <b>Markup</b> <b>Language</b> and extended Style Language. The powerful style language makes it possible to implement more powerful features. This is verified in the demo application...|$|R
25|$|The {{essence of}} why {{extensible}} <b>markup</b> <b>languages</b> are necessary is explained at <b>Markup</b> <b>language</b> (for example, see <b>Markup</b> <b>language</b> § XML) and at Standard Generalized <b>Markup</b> <b>Language.</b>|$|R
50|$|A {{general-purpose}} <b>markup</b> <b>language</b> is a <b>markup</b> <b>language</b> that is {{used for}} more than one purpose or situation. Other, more specialized domain-specific <b>markup</b> <b>languages</b> are often based upon these languages. For example, HTML 4.1 and earlier are domain-specific <b>markup</b> <b>languages</b> (for webpages), and are based on the syntax of SGML, which is a general-purpose <b>markup</b> <b>language.</b>|$|R
40|$|Abstract. The <b>wireless</b> <b>markup</b> <b>language</b> (<b>WML),</b> used in WAP, {{is based}} on XML and {{therefore}} is quite verbose. Mobile devices do not typically have the processing power or memory to process such verbosity. Since all WML documents {{have to go through}} a mobile gateway, WAP 1. x specifies that the WML files are encoded to make them smaller and to process them faster on the mobile device. WAP 2. 0 includes support for a restricted version of XHTML, called the XHTML mobile profile. This is to make content development and management easier. XHTML, though as verbose as WML, is never encoded by the gateway. This is mainly because WAP 2. 0 does not require the use of a gateway. This paper investigates what performance gains are possible if XHTML were encoded and compressed. The experiments show that while there is a substantial performance gain using compression, gains due to encoding are comparatively small. The empirical results justify that XHTML encoding is not generally useful. 1...|$|E
40|$|During the {{development}} of the XML specification, the W 3 C working group realized that for XML to reach its full potential, a method of transforming XML documents into different formats needed to exist. At some time or another, an application that has the capability to work with XML documents will need to display or structure the data in a different format than specified in the document. If the only method for accomplishing this task necessitates programmatically transforming the XML document into the appropriate format by using an XML parser paired with a programming language, the power of having a cross-platform and languageindependent XML language would be lost. Some method of transforming XML documents into different formats such as HTML, flat files, <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML),</b> and even other forms of XML needed to be devised so that it could be used on any platform and with any language. To accommodate this transformation process, Extensible Stylesheet Language Transformations (XSLT) was created. Version 1. 0 of the XSLT specification reached recommended status at the W 3 C in November of 199...|$|E
40|$|Mobile {{computing}} {{technology is}} arguably {{one of the}} most significant technological developments of this century. All over the world, there is a growing demand for mobility, which has brought significant change to how businesses are being run. Everybody wants access to information resources and services of a company wherever they are and whenever they want. It is against this background that this research was carried out to develop a mobile monitoring system using mobile computing technology to boost crude oil production in Nigeria by reducing the cost of production. This work places equipment failure reports on the lap of all the parties involved. It is no more necessary for servicing companies to visit rig or “company man’s ” office before they can get the reports. Mobile phone can be used to access the database from anywhere. Since report is readily available, planning is made easy. The system was implemented using <b>Wireless</b> <b>Markup</b> <b>Language</b> (<b>WML)</b> on ColdFusion 4. 5 as Common Gateway Interface (CGI). The testing was done using ccWAP phone emulator. The modular approach of programming which is a prominent feature of the modern system of programming was applied in the system design...|$|E
5000|$|Recommendations for <b>markup</b> <b>languages,</b> such as Hypertext <b>Markup</b> <b>Language</b> (HTML), Extensible Hypertext <b>Markup</b> <b>Language</b> (XHTML), and Scalable Vector Graphics (SVG) from W3C.|$|R
50|$|Java Speech API <b>Markup</b> <b>Language</b> (JSML) is an XML-based <b>markup</b> <b>language</b> for annotating text {{input to}} speech synthesizers. JSML is used within the Java Speech API. JSML is an XML {{application}} and {{conforms to the}} requirements of well-formed XML documents. Java Speech API <b>Markup</b> <b>Language</b> is referred to as JSpeech <b>Markup</b> <b>Language</b> when describing the W3C documentation of the standard. Java Speech API <b>Markup</b> <b>Language</b> and JSpeech <b>Markup</b> <b>Language</b> identical apart from the change in name, which is made to protect Sun trademarks.|$|R
40|$|World Wide Web (Web, for short) {{services}} {{have traditionally been}} produced with techniques that combine the content and presentation of the services. Dynamic content produced by Web applications also mixes programmatic logic into those services. For example, ASP (Active Server Pages) and JSP (Java Server Pages) are techniques where program code is embedded in HTML (Hypertext <b>Markup</b> <b>Language)</b> pages. The combination of these three layers – content, logic, and presentation – poses some challenges to the production, delivery, and consumption of the Web services. The resulting services are often Web device dependent, have poor content re-use, and use the network throughput nefficiently. This thesis presents some solutions to overcome these challenges. The solutions focus on Extensible <b>Markup</b> <b>Language</b> (XML) and its related techniques. XML {{can be used to}} describe pure content; the presentation is left to discrete style sheets. The majority of the current Web technologies have not properly supported the complete separation of content and logic. This thesis introduces one service platform where this problem has also been solved. In order to make device independent and network-friendly Web services, it is necessary to have mechanisms to define the Web device and network properties. This thesis also presents some of these mechanisms. 1. Introduction	 1 1. 1. Background	 1 1. 2. Research Problem and the Goals of the Thesis	 1 1. 3. Research Structure and Methods	 2 2. Web Publishing and Web Applications	 4 2. 1. Web Publishing	 4 2. 2. Web Applications	 5 2. 2. 1. Dynamic Content Creation Techniques 5 2. 3. Existing Problems	 6 2. 3. 1. Misuse of Structural <b>Markup</b> <b>Languages</b> 6 2. 3. 2. Device Dependency	 6 2. 3. 3. Maintenance Problems	 7 2. 3. 4. Poor Searchability	 7 2. 3. 5. Accessibility Problems	 8 3. Structured Information	 9 3. 1. Different Perspectives of Markup	 9 3. 2. XML - Extensible <b>Markup</b> <b>Language</b>	 10 3. 3. XML Structure and Syntax	 11 3. 3. 1. Elements	 12 3. 3. 2. Entity References	 12 3. 3. 3. Comments	 13 3. 3. 4. Processing Instructions	 13 3. 3. 5. CDATA Sections	 13 3. 3. 6. Document Type Declarations	 14 3. 4. Validity of XML documents	 14 3. 4. 1. Well-formed XML	 14 3. 4. 2. Valid XML	 15 3. 5. XML vs. SGML	 15 3. 6. Applications of XML	 16 3. 7. The Three R´s of XML	 18 3. 7. 1. Re-publish	 18 3. 7. 2. Re-use	 19 3. 7. 3. Re-purpose	 20 3. 8. Why Use XML in Web Applications?	 21 3. 8. 1. Simplicity	 21 3. 8. 2. Richness of Data Structure	 21 3. 8. 3. International Character Handling	 23 4. Styling XML Documents	 24 4. 1. DOM and CSS	 24 4. 1. 1. DOM - Document Object Model	 24 4. 1. 2. CSS - Cascading Style Sheets	 25 4. 1. 3. Style with Programming	 26 4. 2. XSL - Extensible Stylesheet Language 27 4. 2. 1. XSLT - XSL Transformations	 28 4. 2. 2. XSL Formatting Vocabulary	 29 4. 2. 3. "Formatting Objects Considered Harmful"	 30 4. 2. 4. Using XSLT for Client-side and Server-side Styling	 32 4. 2. 5. XPath	 33 4. 3. Using XSL and CSS Together	 33 4. 4. Rendering Languages	 34 4. 4. 1. XHTML - Extensible Hypertext <b>Markup</b> <b>Language</b>	 35 4. 4. 2. <b>WML</b> - <b>Wireless</b> <b>Markup</b> <b>Language</b>	 36 4. 4. 3. VoiceXML	 37 5. Customisations and Personalisations	 40 5. 1. Client-Specific Web Services by Using User Agent Attributes	 40 5. 2. RDF - Resource Description Framework 42 5. 3. CC/PP - Composite Capabilities / Preferences Profile	 43 5. 3. 1. CC/PP Framework	 43 5. 3. 1. 1. The CC/PP Data Model	 43 5. 3. 2. CC/PP Exchange Protocol over HTTP 44 5. 4. UAProf - User Agent Profiles	 45 5. 5. PIDL - Personalized Information Description Language	 46 5. 5. 1. Progressive Storage of Processed Content	 47 5. 5. 2. Compact Storage of Processed Content 49 5. 6. P 3 P - Platform for Privacy Preferences 50 5. 7. Conclusions	 51 6. XML Clients and Servers	 53 6. 1. Client-side Formatting	 53 6. 1. 1. Microsoft Internet Explorer	 54 6. 1. 2. DocZilla	 56 6. 2. Server-side Formatting	 57 6. 2. 1. XML Enabler	 58 6. 2. 2. Rocket	 59 6. 2. 3. Cocoon	 60 7. Cocoon	 62 7. 1. What is Cocoon?	 62 7. 2. Cocoon´s Infrastructure	 63 7. 2. 1. Architecture	 63 7. 2. 2. Cocoon Cache System	 65 7. 3. Dynamic Content in Cocoon	 66 7. 3. 1. Servlet Chaining vs. Servlet Nesting 66 7. 3. 2. Producers and Processors	 67 7. 4. Cocoon´s Advantages and Disadvantages 69 7. 4. 1. Why is Cocoon a good solution?	 69 7. 4. 2. Has Cocoon any disadvantages?	 70 8. Cocoon Service Implementation: Schedule Board	 71 8. 1. Background	 71 8. 2. Requirements	 72 8. 3. Implementation	 73 8. 3. 1. Hardware and Software Environment 73 8. 3. 2. Schedule Board Service Design	 74 8. 4. Conclusions	 80 8. 4. 1. The Nature of the Application	 80 8. 4. 2. Room for Further Improvement	 81 8. 4. 3. The Value of This Exercise	 81 9. Summary	 82 References	 84 Glossary	 92 A. Trilogy DTD	 98 B. XSL and CSS	 99 C. Inline CC/PP	 101 D. CC/PP with Indirect References	 102 E. Cocoon XSP	 104 F. Cocoon DCP	 105 G. Selected Schedule Board Source Files	 10...|$|R
