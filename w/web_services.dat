10000|8035|Public
5|$|The service's {{application}} programming interface (API) allows other <b>web</b> <b>services</b> {{and applications}} to integrate with Twitter.|$|E
5|$|For it's {{information}} and communications technology (ICT) (Information Security/Software Engineering) program, it's industry advisory committee includes key private {{and government agencies}} such as Cloud Security Alliance APAC, APAC Public Sector Microsoft, IMDA, EDB, SPH, Amazon <b>Web</b> <b>Services</b> Global Public Sector – APAC and A*STAR.|$|E
5|$|Smartsheet can {{import data}} from Microsoft Office or Google applications. The {{software}} integrates with services like Salesforce.com, Dropbox and Amazon <b>Web</b> <b>Services.</b> There {{is also a}} Smartsheet mobile app for Android and iPhone operating systems. Smartsheet is sold on a subscription basis with no free version.|$|E
40|$|International audience—Web {{service is}} subject to {{frequent}} changes during its lifecycle. <b>Web</b> <b>service</b> evolution is a widely discussed topic. Many related problems have also been generated from <b>Web</b> <b>service</b> evolution such as <b>Web</b> <b>service</b> adaptation, <b>Web</b> <b>service</b> versioning and <b>Web</b> <b>service</b> change management. To treat with these issues efficiently, a complete evolution model for <b>Web</b> <b>service</b> should be built. In this paper, we introduce our change-centric model for <b>Web</b> <b>service</b> evolution and how we use it to design, execute, and adapt to the changes during <b>Web</b> <b>service</b> evolution...|$|R
40|$|International audienceThe {{coordination}} between agent <b>service</b> and <b>Web</b> <b>service</b> {{is the key}} factor for intelligent <b>Web</b> <b>service</b> management in the multi-agent based <b>Web</b> <b>service</b> framework. In view of the drawbacks of existing coordination approaches for agent <b>service</b> and <b>Web</b> <b>service,</b> this paper proposed a multi-agent and workflow-based <b>Web</b> <b>service</b> management model. Through analyzing the interaction relations between agent <b>service</b> and <b>Web</b> <b>service</b> in the logical action-based task environment, a uniform task view for intelligent <b>Web</b> <b>service</b> is built. And based on such task view, a workflow towards special task is designed to realize intelligent <b>Web</b> <b>service</b> discovery and cooperation and composition. This model provides a more flexible <b>Web</b> <b>service</b> management...|$|R
40|$|International audienceA <b>Web</b> <b>service</b> always evolves {{during its}} {{lifecycle}} through continuously publishing new versions. <b>Web</b> <b>service</b> evolution is theoretically modeled {{in the community}} to help <b>Web</b> <b>service</b> stakeholders trigger and react to <b>Web</b> <b>service</b> evolution in a better way. From a technical perspective, the tasks in <b>Web</b> <b>service</b> evolution such as design, detection, execution, and adaptation to the <b>Web</b> <b>service</b> changes are undertaken by <b>Web</b> <b>service</b> developers. Unfortunately, few of the works, especially tools and methodologies, were specially taken to help the developers deal with dynamic evolutionary changes at programming level. In this article, we propose a framework based on our previous change-centric model to facilitate the developers to treat with <b>Web</b> <b>service</b> evolution. The framework supports the developers to execute, detect, and react to <b>Web</b> <b>service</b> changes at programming level...|$|R
5|$|As with {{previous}} Halo titles, 343 Industries provides a statistic tracking service for players of Halo 4. Player data such as game history, character progression, and various statistics {{can be accessed}} in game or via the Halo Waypoint website. The <b>web</b> <b>services</b> team at 343 Industries utilized the Windows Azure Service Bus messaging infrastructure to relay data from the Xbox Live network to back-end databases, where player data and information is stored. Halo 4 player data can also be accessed via the Xbox SmartGlass application.|$|E
25|$|Delphi 6 {{became the}} first {{integrated}} development environment to support <b>web</b> <b>services.</b> All of the company's development platforms now support <b>web</b> <b>services.</b>|$|E
25|$|BPEL {{follows the}} {{orchestration}} paradigm. Choreography {{is covered by}} other standards, such as WSCI (<b>Web</b> <b>Services</b> Choreography Interface) and (<b>Web</b> <b>Services</b> Choreography Description Language).|$|E
40|$|Abstract — <b>Web</b> <b>service</b> is a core {{technology}} for sharing information resources and integrating processes in companies or organizations. As {{the number of}} applications connected by <b>Web</b> <b>service</b> is increased, the importance of <b>Web</b> <b>service</b> quality {{tend to be the}} critical factor in determining the performance of IT system. <b>Web</b> <b>Service</b> selection is also an indispensable process for <b>web</b> <b>service</b> composition as to select best <b>web</b> <b>service</b> to a client’s requirement. In this paper, we have proposed a <b>web</b> <b>service</b> selection model using Analytic Hierarchy Process which is used to select best <b>web</b> <b>service</b> based on QoS Constraints. The QoS manager actuates as an agent for service providers and clients to perform publish and find <b>web</b> <b>service</b> operations. The QoS attributes of a <b>web</b> <b>service</b> such as response time, throughput, reliability, availability and cost will be optimized and ranked by the Analytic Hierarchy Process. The highest ranked service will be selected and provided to the requested for further processing...|$|R
40|$|<b>Web</b> <b>service</b> {{technology}} is a component-oriented SOAP based interoperable technology widely used in enterprise Application to Application (A 2 A), Business to Business(B 2 B), and EAl. <b>Web</b> <b>Service</b> component composite and connection models are the key issues to make <b>Web</b> <b>service</b> successful in the future. This paper presents a number of <b>Web</b> <b>service</b> compositions and connection patterns which will facilitate the <b>Web</b> <b>service</b> design...|$|R
30|$|Traditional BPMs {{currently}} are {{all based on}} the specification of WS-*, such as WS-BPEL and WSDL 1.1 [4]; while device's capabilities are exposed in RESTful <b>web</b> <b>service</b> at the first-layer integration, and a RESTful <b>web</b> <b>service</b> could not be well described by WSDL 1.1 (though RESTful <b>web</b> <b>service</b> could be described by WSDL 2.0 [17], the WS-BPEL could not be compatible with WSDL 2.0). Therefore, current BPEL engine could not bind and invoke a RESTful <b>web</b> <b>service</b> unless an extension to map RESTful <b>web</b> <b>service</b> to WS-* <b>web</b> <b>service</b> via an adaptor.|$|R
25|$|Pathak, J., Basu, S., and Honavar, V. (2007). On Context-Specific Substitutability of <b>Web</b> <b>Services.</b> In: Proceedings of the IEEE International Conference on <b>Web</b> <b>Services.</b> pp.192–199. IEEE Press.|$|E
25|$|Amazon {{launched}} Amazon <b>Web</b> <b>Services</b> (AWS) in 2002, {{which provides}} programmatic access to latent features on its website.|$|E
25|$|As of December 2014, Amazon <b>Web</b> <b>Services</b> {{operated}} 1.4 Million servers across 11 {{regions and}} 28 availability zones.|$|E
40|$|Abstract:- Nowadays, <b>Web</b> <b>service</b> {{technology}} {{plays an}} increasing role in internet applications, in general, and e-commerce applications, in particular. In fact, service-oriented {{systems can be}} expected to grow larger in complexity. Such large systems demand for tools that allow for analyzing and monitoring of service-oriented systems in use. Our work attempts to draw the necessary architecture in order to analyze interactions between <b>Web</b> <b>service</b> consumer and provider. WSIM modelling architecture is built over three layers: <b>Web</b> <b>service</b> operations, interactions and workflows. The paper aim is to present WSIM modelling architecture and how it could be implemented to support existing <b>Web</b> <b>service</b> applications (e. g. e-commerce applications). Key-words: e-Commerce <b>Services,</b> <b>Web</b> <b>service</b> interactions, <b>Web</b> <b>service</b> logging, <b>Web</b> <b>service</b> mining...|$|R
30|$|In this {{experiment}} workload represents the <b>web</b> <b>service</b> requests arrival rate. Workload {{is a key}} performance indicator of a given <b>web</b> <b>service</b> {{that can be used}} to calculate other performance indicators (such as utilization, and throughput) of that <b>web</b> <b>service.</b> Furthermore, monitoring workload of a <b>web</b> <b>service</b> is straightforward and can be carried out by using instrumentation technique. Therefore, in {{this experiment}} workload of the <b>web</b> <b>service</b> is the target class of the prediction techniques.|$|R
40|$|Abstract — Paper {{highlights}} the previous work on <b>web</b> <b>service</b> discovery and techniques; also describes the proposed work for automated <b>web</b> <b>service</b> discovery with combination of different approaches. The approaches enable users to form queries and to search and discover the services based on different requirements. The proposed system uses {{methods such as}} probabilistic machine-learning techniques and logic based search to extract latent factors from user query and match with probable <b>web</b> <b>service</b> by searching in ranked and clustered <b>web</b> <b>service</b> repository. Otherwise it discovers the related <b>web</b> <b>service</b> from <b>web</b> and adds it in <b>web</b> <b>service</b> repository for further use...|$|R
25|$|Global Services (GS): Services in four areas: network implementation, network support, network management, {{and network}} {{applications}} (including <b>web</b> <b>services).</b>|$|E
25|$|Since version 2.0, Ruby on Rails offers both HTML and XML as {{standard}} output formats. The latter is the facility for RESTful <b>web</b> <b>services.</b>|$|E
25|$|Pathak, J., Basu, S., and Honavar, V. (2008). Composing <b>Web</b> <b>Services</b> through Automatic Reformulation of Service Specifications. Proceedings of the IEEE International Conference on Services Computing, IEEE, pp.361–369.|$|E
40|$|To {{enhance the}} {{credibility}} of <b>Web</b> <b>service</b> composition, Pi-calculus based formal modeling of trust <b>Web</b> <b>service</b> composition is proposed. Trust <b>Web</b> <b>service</b> composition is firstly defined abstractly; then Pi-calculus is used to depict structure and internal interaction of Trust <b>Web</b> <b>service</b> composition, the mapping relation between trust entity and Pi-calculus is provided. Automatic reasoner MWB is adopted to analyze and reason the Trust <b>Web</b> <b>service</b> composition system, which is aimed at finding and correcting the faults before the implementation of trust authentication of <b>Web</b> <b>service</b> composition. It thus meets the users’ demands on trust quality effectively...|$|R
40|$|A new way {{to access}} {{different}} kinds of <b>services</b> on the <b>web</b> is to develop <b>web</b> <b>service</b> interfaces and call the <b>web</b> <b>service</b> operations directly from a JavaScript client. This report describes a general such <b>web</b> <b>service</b> interface from JavaScript, called the Functional <b>web</b> <b>Service</b> Client (FSC). FSC loads the WSDL document into DOM object and parses its structure to build the <b>web</b> <b>service</b> request data. It provides a public API that can be called directly from a JavaScript application. The communication between the client and the <b>web</b> <b>service</b> operations uses the XML-based SOAP protocol. FSC simplifies Ajax applications by making it very simple to call <b>web</b> <b>service</b> operations as functions. It allows both synchronous and asynchronous function calls to the <b>web</b> <b>service</b> operations. To illustrate the functionality of FSC, an existing web application, the course manager, was re-implemented as a <b>web</b> <b>service</b> {{as an alternative to}} the previous implementation as a conventional server side TomCat application. The course manager uses the functional DBMS Amos II to represent information about courses, students taking courses, exercises, etc. Rather than providing the functionality of the course manager as a web based user interface, the new implementation provides a course manager <b>web</b> <b>service</b> along with a JavaScript application implementing a user interface that calls the course manager <b>web</b> <b>service</b> operations using FSC. The course manager <b>web</b> <b>service</b> is automatically generated by the WSMOS system that, for given functions implemented in Amos II, deploys <b>web</b> <b>service</b> operations and generates a WSDL document...|$|R
40|$|<b>Web</b> <b>service</b> {{composition}} {{has been}} one of the most researched topics of the past decade. Novel methods of <b>web</b> <b>service</b> composition are being proposed in the literature include Semantics-based composition, WSDLbased composition. Although these methods provide promising results for composition, search and discovery of <b>web</b> <b>service</b> based on QoS parameter of network and semantics or ontology associated with WSDL, they do not address composition based on usage of <b>web</b> <b>service.</b> <b>Web</b> <b>Service</b> usage logs capture time series data of <b>web</b> <b>service</b> invocation by business objects, which innately captures patterns or workflows associated with business operations. <b>Web</b> <b>service</b> composition based on such patterns and workflows can greatly streamline the business operations. In this research work, we try to explore and implement methods of mining <b>web</b> <b>service</b> usage logs. Main objectives include Identifying usage association of services. Linking one service invocation with other, Evaluation of the causal relationship between associations of service...|$|R
25|$|Windows Vista {{includes}} a WSD-WIA class driver that enables all devices compliant with Microsoft's <b>Web</b> <b>Services</b> for Scanner (WS-Scan) protocol {{to work with}} WIA without any additional driver or software.|$|E
25|$|In July 2009, BMC and Amazon <b>Web</b> <b>Services</b> {{announced}} IT {{organizations will}} be able to extend their internal data centers to the Amazon Elastic Compute Cloud (Amazon ec2) through BMC's BSM platform.|$|E
25|$|In addition, Akamai Technologies, a U.S. {{company whose}} founder {{was killed in}} the 11 September World Trade Center attack, {{canceled}} a contract to provide <b>web</b> <b>services</b> for Al Jazeera's English language website.|$|E
40|$|Abstract. The broad {{acceptance}} of a <b>Web</b> <b>service</b> standard has led enterprises worldwide to publish their services and make businesses via the Web on the Internet. Consequently, dependable <b>Web</b> <b>service</b> executions are a new chal-lenge. Although existing work proposes to extend the <b>Web</b> <b>service</b> structure with fault tolerant features that support such applications, most of them meet only the reliability and availability requirements of single <b>Web</b> <b>service</b> executions, not properly addressing the problem of dependable <b>Web</b> <b>service</b> compositions. This paper overviews existing work on available <b>Web</b> <b>service</b> compositions and proposes {{a new approach to}} create highly available compositions based on a semantic replication scheme. A prototype of the proposed approach was evalu-ated in a series of experiments where <b>Web</b> <b>service</b> failures are considered and the related performance data are presented. 1...|$|R
5000|$|<b>Web</b> <b>Service</b> - A <b>web</b> <b>service</b> that accepts http posts of check results (beta) ...|$|R
40|$|XML {{has been}} {{extensively}} adopted by the industries for data exchange in the E-business environment. XML <b>web</b> <b>service</b> is XML based application, {{which can be used}} to integrate distributed applications. The objective of this thesis is to present the <b>Web</b> <b>Service</b> Architecture in detail, explore the use of XML and <b>Web</b> <b>Service</b> technologies for collaborative application integration in Business-to-Business, design and implement a Stock Information Service with the XML <b>web</b> <b>service</b> architecture. In this thesis, we start with an overview of current application integration approaches, and then focus on the <b>Web</b> <b>Service</b> Architecture. After exploring XML <b>Web</b> <b>Service</b> Standards, including SOAP, WSDL and UDDI, we design and implement the Stock Information Service to demonstrate the usage of <b>web</b> <b>service</b> architecture in the application integration. This application integrates different web applications about stock information using <b>Web</b> <b>Service</b> Architecture and provides an integrated interface to the customers. It is implemented with IBM WebSphere Application Developer...|$|R
25|$|Automated {{generation}} of citations and bibliographies according to defined style rules, including APA, Chicago, and MLA. Changing style updates all references automatically. Connect to <b>web</b> <b>services</b> to access online reference databases.|$|E
25|$|Sun, H., Basu, S., Honavar, V., and Lutz, R. (2010). Automata-Based Verification of Security Requirements of Composite <b>Web</b> <b>Services.</b> In: Proceedings of the IEEE International Symposium on Software Reliability Engineering (ISSRE-2010). pp.348–357, IEEE Press.|$|E
25|$|Web-oriented {{architecture}} (WOA)— defines how Web 2.0 applications expose their functionality so {{that other}} applications can leverage and integrate the functionality providing {{a set of}} much richer applications. Examples are feeds, RSS feeds, <b>web</b> <b>services,</b> mashups.|$|E
40|$|Abstract: <b>Web</b> <b>Service</b> {{composition}} {{is an important}} problem to formulate any business process. It’s all about creating an abstract <b>web</b> <b>service</b> using some existing <b>web</b> <b>service.</b> A <b>web</b> <b>service</b> may have many implementation having same functionality but with different Quality of Service (QoS) parameters. So, researchers are making effort to select the <b>web</b> <b>service</b> implementation {{as a part of}} <b>web</b> <b>service</b> composition so that composite <b>web</b> <b>service</b> gives best overall QoS values or optimal than any other possible composition. Some approaches have come up to address the same problem. The genetic algorithm, which we have considered, addresses the same problem. The genetic algorithm gives constrained driven approach to select the <b>web</b> <b>service</b> for composition. This approach gives much better result than its predecessor. But, it takes longer to execute. If the algorithm takes much time then the system will take much time to respond. This paper introduces an approach to converge the genetic algorithm in a lesser time...|$|R
40|$|Fault-tolerant {{is one of}} the {{fundamental}} issues in <b>Web</b> <b>service</b> reliability. Current researches focus on achieving fault-tolerant <b>Web</b> <b>service</b> through extending <b>Web</b> <b>service</b> related standards. Because these standards are evolving and have some compatibility problems, approaches used in existing works cannot provide a practical way to implement a fault-tolerant mechanism for <b>Web</b> <b>service.</b> This paper presents a mobile agent-based fault-tolerant model, called MAFTM, for composite <b>Web</b> <b>service</b> at the system level. Since mobile agent-based workflow is suitable for distributed <b>Web</b> <b>service</b> composition, the authors use mobile agents to provide fault-tolerant capability for composite <b>Web</b> <b>service.</b> The MAFTM model concentrates on crash failures and communication link failures. Based on their previous work of the totally ordered multicast for mobile agents, the authors design a replication mechanism that introduces a group of replicated mobile agents to maintain a group of replicated instances for one composite <b>Web</b> <b>service.</b> To assure exactly once semantics in the execution of replicated instances, the authors propose a consensus algorithm. This algorithm can be used to guarantee that, in each step of the composite <b>Web</b> <b>service,</b> all replicated mobile agents agree on only one committed atomic <b>Web</b> <b>service.</b> Also, they prove properties of the MAFTM model including agreement, validity, integration and termination. Department of Computin...|$|R
40|$|<b>Web</b> <b>service</b> {{is one of}} {{the most}} widely {{discussed}} technologies to appear in recent years. But what is <b>Web</b> <b>service?</b> In simplest terms, <b>Web</b> <b>service</b> is an application, which can provide a defined set of functionality to achieve a specific end. It can provide application-to-application communications without human assistance or intervention. <b>Web</b> <b>service</b> give companies an unprecedented opportunity on the e-business aspect, from the airline Web shops to the patients who can access to online medical services from his cell phone, <b>Web</b> <b>service</b> are becoming a part of daily life...|$|R
