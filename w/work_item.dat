172|626|Public
50|$|Using Git {{does not}} {{preclude}} the benefit of using TFS <b>work</b> <b>item</b> or build system. When checking code in with Git, referencing the <b>work</b> <b>item</b> ID in the check-in comment will associate the check-in with the given <b>work</b> <b>item.</b> Likewise, Team Build will also build Git projects.|$|E
5000|$|The one, and only, earning rule is {{that when}} a <b>work</b> <b>item</b> is done then the {{corresponding}} Story Points for a <b>work</b> <b>item</b> are earned. To agree what [...] "done" [...] means, project teams establish and share a Definition of Done, listing all criteria a <b>work</b> <b>item</b> has to comply with before it's considered done. To mitigate project risks, no partially done work items are ever considered.|$|E
5000|$|AWI Amd - Approved new <b>Work</b> <b>Item</b> Amendment (e.g., ISO/IEC 14492:2001/AWI Amd 4) ...|$|E
3000|$|The {{methodology}} {{is still}} evolving, and {{limitations and potential}} <b>work</b> <b>items</b> {{have been identified in}} our lessons learned. In particular, major future <b>work</b> <b>items</b> include: [...]...|$|R
5000|$|Working Groups (WGs) are {{established}} to expedite development {{of one or}} more approved <b>work</b> <b>items,</b> and will exist as long as it has responsibility for approved <b>work</b> <b>items.</b>|$|R
5000|$|If the {{contractor}} has to add <b>work</b> <b>items</b> {{to the original}} scope of work {{at a later time}} in order to achieve the customer's demands, a fair price for the <b>work</b> <b>items</b> and fees must be added for the materials and labor.|$|R
5000|$|NP or NWIP - New Proposal / New <b>Work</b> <b>Item</b> Proposal (e.g., ISO/IEC NP 23007) ...|$|E
5000|$|CCR runtime {{includes}} a [...] class that implements a Thread pool, with a fixed number of threads, {{all of which}} can execute simultaneously. Each dispatcher {{includes a}} queue (called [...] ) of delegates, which represent the entry point to a procedure (called <b>work</b> <b>item)</b> that can be executed asynchronously. The work items are then distributed across the threads for execution. A dispatcher object also contains a generic [...] which is a queue where the result of the asynchronous execution of a <b>work</b> <b>item</b> is put. Each <b>work</b> <b>item</b> can be associated with a [...] object which consumes the result for further processing. An [...] manages the [...] and invokes them when the result they are expecting is ready and put on the [...] queue.|$|E
5000|$|In a work {{stealing}} scheduler, each processor in {{a computer}} system has a queue of work items (computational tasks, threads) to perform. Each <b>work</b> <b>item</b> consists {{of a series of}} instructions, to be executed sequentially, but in the course of its execution, a <b>work</b> <b>item</b> may also spawn new work items that can feasibly be executed in parallel with its other work. These new items are initially put on the queue of the processor executing the <b>work</b> <b>item.</b> When a processor runs out of work, it looks at the queues of other processors and [...] "steals" [...] their work items. In effect, work stealing distributes the scheduling work over idle processors, and as long as all processors have work to do, no scheduling overhead occurs.|$|E
40|$|Process-aware {{information}} systems ranging from generic workflow systems to dedicated enterprise {{information systems}} use work lists to offer so-called <b>work</b> <b>items</b> to users. The work list handlers typically show a sorted list of <b>work</b> <b>items</b> {{comparable to the}} way that e-mails are presented in most e-mail programs. Since the work list handler is the dominant interface between the system and its users, it is worthwhile {{to provide a more}} advanced graphical interface that uses context information about <b>work</b> <b>items</b> and users. This paper uses the 2 ̆ 2 map metaphor 2 ̆ 2 to visualise <b>work</b> <b>items</b> and resources (e. g., users) in a sophisticated manner. Moreover, based on 2 ̆ 2 distance notions 2 ̆ 2 <b>work</b> <b>items</b> are visualised differently. For example, urgent <b>work</b> <b>items</b> of a type that suits the user are highlighted. The underlying map and distance notions may be of a geographical nature (e. g., a map of a city of office building), but may also be based on the process design, organisational structures, social networks, due dates, calenders, etc. The approach presented in this paper is supported by a visualisation framework implemented in the context of YAWL. The framework is set up {{in such a way that}} it can easily be combined with other workflow systems...|$|R
40|$|A basic {{function}} of Process-aware Information Systems (PAISs) {{is to offer}} work to resources. The elementary pieces of work are called <b>work</b> <b>items,</b> e. g. “Approve travel request XYZ 1234 ”. <b>Work</b> <b>items</b> are offered to users via so-called work-list handlers, which take care of work distribution and authorisation issues...|$|R
40|$|A {{software}} development project coordinates work by using <b>work</b> <b>items</b> that represent customer, tester, and developer found defects, enhancements, and new features. We {{set out to}} facilitate software project planning by modeling the flow of such <b>work</b> <b>items</b> and using information on historic projects to predict the work flow of an ongoing project. The history of the <b>work</b> <b>items</b> is extracted from problem tracking or configuration management databases. The web-based prediction tool allows project managers to select relevant past projects and adjust the prediction based on staffing, type, and schedule of the ongoing project. We present the workflow model, and briefly describe project prediction of...|$|R
5000|$|The A10-7850K [...] "Kaveri" [...] {{contains}} 8 CUs (compute units) and 8 Asynchronous Compute Engines {{for independent}} scheduling and <b>work</b> <b>item</b> dispatching.|$|E
50|$|Started in September 2005 and {{approved}} in March 2009, {{the goal of}} the Secure Removable Media (SRM) <b>Work</b> <b>Item</b> is to define the protection and consumption of digital content and associated usage rights on an SRM. An SRM is a removable medium that implements means to protect against unauthorized access to its internal data, such as a secure memory card or smart card. The SRM <b>Work</b> <b>Item</b> does not stand alone; it extends the existing OMA DRM 2.0 specifications. While OMA DRM 2.0 defines a general framework for downloading Rights to devices and sharing Rights in a domain, the SRM <b>Work</b> <b>Item</b> defines mechanisms and protocols for the SRM. It extends OMA DRM version 2.0 or 2.1, allowing users to move Rights between devices and SRMs, and to consume Rights stored in SRMs without generating and managing complex groups of devices in a domain.|$|E
50|$|Chaired since 2005 by Duff Johnson, in 2009 AIIM's PDF/UA Committee {{became the}} U.S. Committee for ISO/AWI (Accepted <b>Work</b> <b>Item)</b> 14289 with Cherie Ekholm of Microsoft as International Project Leader.|$|E
50|$|A SIMUL8 {{simulation}} {{revolves around}} processing <b>work</b> <b>items.</b> They enter the system via work entry points, pass through work centers, may temporarily reside in storage areas and leave via work exit points. In {{addition to this}} mechanism, work centers may need specific resources to process <b>work</b> <b>items.</b> A simulation consists {{of a number of}} these objects and of the routes between them, modeled as a directed graph.|$|R
40|$|Software {{development}} project coordinates work by using <b>work</b> <b>items</b> that represent customer, tester, and developer found defects, enhancements, and new features. We {{set out to}} facilitate software project planning by modeling the flow of such <b>work</b> <b>items</b> and using information on historic projects to predict the work flow of an ongoing project. The history of the <b>work</b> <b>items</b> is extracted from problem tracking or configuration management databases. The web-based prediction tool allows project managers to select most relevant past projects and adjust the prediction based on staffing, type, and schedule of the ongoing project. We present the workflow model, and briefly describe a web based prediction tool applied to a large software project for Customer Relationship Management (CRM) ...|$|R
5000|$|Relevant <b>work</b> <b>items,</b> alerts, and {{notifications}} {{will be sent}} to {{the relevant}} people working on the cases.|$|R
5000|$|Planned Value is {{determined}} by estimating the relative size of a <b>work</b> <b>item</b> compared to other items. Story Points are used as the unit of measurement for PV and EV; ...|$|E
5000|$|An ISI-compliant Measurement and Event Management Architecture for Cyber Security and Safety (ISI-006, in preparation): This <b>work</b> <b>item</b> {{focuses on}} {{designing}} a cybersecurity language to model threat intelligence information and enable detection tools interoperability.|$|E
50|$|New Work Items are {{proposed}} by {{three or more}} countries that are members of ISO/TC 68. If a New <b>Work</b> <b>Item</b> is approved by a super majority of countries that are members of ISO/TC 68 the New <b>Work</b> <b>Item</b> is assigned to a Working Group under a Technical Subcommittee. Each Working Group consists of technical {{experts in the field}} appointed to represent their member countries. After a sequence of revisions to committee drafts, proposed standards developed by a Working Group must be approved by a super majority of countries that are members of ISO/TC 68 before being submitted to ISO for approval as an ISO standard.|$|E
40|$|This report {{discusses}} these topics: reviews {{required for}} developing a beamline at the ALS; <b>work</b> <b>items</b> and documentation required for the beamline design review; information to be communicated to the ALS staff before the beamline readiness review; <b>work</b> <b>items</b> and documentation required for the beamline readiness review; contacts for information, technical questions, and sources of additional information; and checklist of what is required and when {{for developing a}} beamline...|$|R
50|$|Corrective action: Keep <b>work</b> <b>items</b> {{within easy}} reach to limit {{extension}} and elevation of arm. Arm/hand elevation should also not exceed 12” from the worksurface.|$|R
5000|$|All {{project work}} is {{gathered}} as <b>work</b> <b>items</b> (i.e. Stories or Requirements) and managed {{in a single}} ordered list (i.e. Prioritized Requirements List or Product Backlog); ...|$|R
50|$|This is {{the basic}} {{function}} of a WfMS. It conduces to the routing {{of the flow of}} information or document flow, it transmits the information from one <b>work</b> <b>item</b> to the next one. This feature will not respond to exceptional circumstances.|$|E
50|$|A DTS Task is a {{discrete}} set of functionalities executed {{as a single}} step in a DTS package. Each task defines a <b>work</b> <b>item</b> to be performed {{as part of the}} data movement and data transformation process or as a job to be executed.|$|E
5000|$|Study IoT Reference Architectures/Frameworks {{and provide}} a study report. This study report should be written {{so it could be}} {{referenced}} in a possible JTC 1 New <b>Work</b> <b>Item</b> Proposal on IoT. The report shall be made available to JTC 1 no later than the 2014 JTC 1 Plenary.|$|E
40|$|The {{degree of}} {{complexity}} of a critical path network may be classified by calculating a Coefficient of Network Complexity. It {{is defined as the}} quotient of activities squared divided by events or preceding <b>work</b> <b>items</b> squared divided by <b>work</b> <b>items.</b> Three distinct contributions are offered. First, the CNC may serve as an indicator of the attention spent in planning the project. Second, the CNC may be used to derive a predictor of network computer processing time. Third, the CNC value suggests the appropriate processing scheme. ...|$|R
40|$|Abstract [...] Global {{software}} development is rapidly becoming {{the norm for}} technology companies. Previous qualitative research suggests that distributed development may increase development cycle time for individual <b>work</b> <b>items</b> (modification requests). We use both data from the source code change management system and survey data to model the extent of delay in a distributed {{software development}} organization, and explore several possible mechanisms for this delay. One key finding is that distributed <b>work</b> <b>items</b> appear to take about two and one-half times as long to complete as similar items where all the work is co-located. The data strongly suggest a mechanism for the delay, i. e., that distributed <b>work</b> <b>items</b> involve more people than comparable same-site <b>work</b> <b>items,</b> {{and the number of}} people involved is strongly related to MR interval. We replicate the analysis of change data in a different organization, with a different product, and different sites, and confirm our main findings. We also report survey data that measured differences in same-site and distributed social networks, testing several hypotheses about characteristics of distributed social networks that may be related to delay. We discuss implications of our findings for practices and collaboration technology that have the potential for dramatically speeding distributed software development. Keywords—Global development, collaboration, delay, speed, awareness, informal communication I...|$|R
2500|$|SpaceX {{is using}} more than 20 local firms {{to work on}} the new facility. [...] <b>Work</b> <b>items</b> have {{included}} modifying the Range Operations Plan as well as a variety of fire-prevention measures.|$|R
50|$|Work {{stealing}} {{contrasts with}} work sharing, another popular scheduling approach for dynamic multithreading, where each <b>work</b> <b>item</b> is scheduled onto a processor {{when it is}} spawned. Compared to this approach, work stealing reduces the amount of process migration between processors, because no such migration occurs when all processors have work to do.|$|E
50|$|Within TC 68 there are, at present, three {{technical}} subcommittees, or SC's: SC2 (Security), SC4 (Securities), and SC7 (Core Banking). Subcommittees {{prepare and}} manage international standards within {{specific areas of}} concentration. Subcommittees review existing standards once every five years to update them. New standards are developed by subcommittees under the New <b>Work</b> <b>Item</b> process.|$|E
50|$|In December 2008, due to {{regulatory}} requirements like the E911, which require {{that it should}} be possible to locate UEs with a certain accuracy, a <b>work</b> <b>item</b> was proposed in the 3GPP TSG-RAN42 meeting. This proposed between others the study of the feasibility of OTDOA. OTDOA was meant to work in a similar way as the 3G IPL feature.|$|E
40|$|Parallel work is {{submitted}} to devices by launching kernels Kernels run over global dimension index ranges (NDRange), broken up into “work groups”, and “work items” <b>Work</b> <b>items</b> executing {{within the same}} work group can synchronize with each other with barriers or memory fences <b>Work</b> <b>items</b> in different <b>work</b> groups can’t sync with each other, except by launching a new kernel 2 © Wen-mei W. Hwu and John Stone, Urbana July 22, 2010 Transparent Scalability Hardware is free to assigns work groups to any processor at any time – A kernel scales across any number of parallel processor...|$|R
40|$|The ISO {{committee}} TC 184 /SC 2 "Robots and robotic devices" {{works on}} the standardization of various aspects of industrial robots and service robots. In three safety standards requirements for the safe design of various types of robots are defined. Apart from that, the interoperability and exchangeability of robot systems and components is fostered in several <b>work</b> <b>items</b> such as the standardization of basic terminology for industrial and service robots, the definition of coordinate systems and the specification of performance criteria for mobile and manipulating robots. This presentation gives an overview about existing ISO standards and future <b>work</b> <b>items...</b>|$|R
50|$|A project anatomy (also {{integration}} anatomy or organic integration plan) is a {{tool for}} integration planning that visualizes dependencies between <b>work</b> <b>items</b> in development projects. It is mainly used in incremental development and Integration Driven Development projects.|$|R
