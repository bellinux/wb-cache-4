0|589|Public
5000|$|In {{the late}} 1840s, Hong Xiuquan, a Hakka Chinese who had {{converted}} to Christianity, started the Taiping Rebellion which {{came close to}} replacing the Qing dynasty with a Christian Kingdom of Heavenly Peace (Taiping Tianguo). Hong had trained in the Chinese classics but failed the examinations to gain government office. Hong had read parts of the Bible in a tract by Gutzlaff's assistant, Liang Fa, but these selections did not give any basis for iconoclasm or rebellion against the Manchu government. Hong then studied the Old and New Testament “long and carefully” {{under the tutelage of}} an American Baptist missionary in Hong Kong in 1847. When he returned home, he used Gutzlaff’s Bible as the basis of his [...] "Authorized Taiping Version of the Bible” which was the religious foundation of his movement. Some of his revisions and additions were minor, such as correcting <b>wrongly</b> <b>printed</b> <b>characters</b> and clarifying or improving the style. Hong altered other passages to fit his own theological and moral teachings and enhance the moral authority of the scriptures for his Chinese audience. In the Taiping Bible, for instance, at Genesis 27:25 God’s favored people did not drink wine. Fathers-in-law did not, as in ancient Jewish law, have sexual relations with their daughters-in-law in order to continue the family line, as in Genesis 38:16-26 ...|$|R
50|$|Among the {{discrepancies}} were <b>wrongly</b> <b>printed</b> ballots, registered voters {{being unable to}} vote and wide discrepancies in votes in various seats upon re-counting the ballots.|$|R
50|$|The UGI contested the 1992 general elections, {{although}} its name was <b>wrongly</b> <b>printed</b> on ballot papers as United Guyanese International. In the elections the party received just 134 votes {{and failed to}} win a seat. It ran in the 1994 local elections, but did not contest any further elections at national level.|$|R
50|$|The T4R trams in Bucharest are {{numbered}} 3301 to 3431, {{but there have}} been only 130 cars delivered. The tram with number 3339 has never been delivered. An urban legend tells that ČKD had <b>wrongly</b> <b>printed</b> the number and RATB sign on a car that was delivered elsewhere, then they sent the last car for Bucharest with the number 3431. However, RATB's documents always mention 130 T4R trams for Bucharest, and not 131.|$|R
40|$|Abstract. A way to {{recognize}} <b>printed</b> <b>characters</b> based on BP network was proposed in this paper. It was implemented with C language. After {{a lot of}} experiments, the experimental {{results show that the}} character recognizer has good validity and correctness. The <b>printed</b> <b>characters</b> can be successfully recognized within the reasonable range of error rate...|$|R
5000|$|Unlike Selectric-based {{printers}}, daisy wheel printers {{support the}} entire ASCII <b>printing</b> <b>character</b> set.|$|R
5000|$|... #Caption: Punched {{card with}} EBCDIC {{character}} set. Contrast at top enhanced {{to show the}} <b>printed</b> <b>characters.</b>|$|R
40|$|Abstract: This paper {{presents}} {{the development of}} Assyrian machine <b>printed</b> <b>character</b> recognition system. Well-known neocognitron artificial neural network is chosen for its fast processing time and its good performance for pattern recognition problems. The average recognition rate of 95 % has been achieved this confirms that the proposed neocognitron artificial neural network approach is suitable {{for the development of}} Assyrian machine <b>printed</b> <b>character</b> recognition system...|$|R
5000|$|... #Caption: Punched {{card with}} the 1964 EBCDIC {{character}} set. Contrast at top enhanced {{to show the}} <b>printed</b> <b>characters.</b>|$|R
50|$|Adaptive Recognition - {{a method}} {{based on a}} {{combination}} of two types of <b>printed</b> <b>character</b> recognition algorithms: multifont and omnifont. The system generates an internal font for each input document based on well <b>printed</b> <b>characters</b> using a dynamic adjustment (adaptation) to the specific input symbols. Thus, the method combines the omnitude and the technological efficiency of the omnifont approach with the high font recognition accuracy that dramatically improves the recognition rate.|$|R
5000|$|Later {{the same}} year, Simove faced trouble when {{a page from}} one of his {{products}} ‘The Cock-A Doodle Pad’ which featured line drawings of naked men with spaces in their mid section, was <b>wrongly</b> <b>printed</b> in an origami pad. A customer who bought the origami pad from Hampton Court Palace gave it as a gift to her young nephew who opened it to find a line drawing of a naked man, which happened to be Simove. Simove apologised to the woman involved for the ‘unfortunate factory mix up’.|$|R
40|$|There {{is a long}} {{research}} for the <b>printed</b> <b>character</b> recognition algorithm which inputs printed documents through an image scanner, recognizes <b>printed</b> <b>characters,</b> and stores the ASCII codes of the characters. The recognition ratio of the algorithms proposed up to date is about 95 %, but the recognition speed of the algorithm is 10 s of characters per second. Therefore, faster recognition system {{is required for the}} libraries, research institutes, and universities where a large number of documents should be inserted to thgcomputer frequently. This paper transforms a serial recognition algorithm using a mesh feature for the <b>printed</b> <b>characters</b> into the parallel algorithm, proposes a parallel processor systkm and a parallel memory system for the parallel algorithm, and simulates the function and the performance of the system by using a CADENCE simulation program. ...|$|R
40|$|There {{has been}} a {{significant}} amount of research in pattern recognition in different aspects of <b>printed</b> <b>character</b> based user interfaces including interactive design tools, ink beautification and <b>printed</b> <b>character</b> recognition. Optical Character recognition (OCR) systems have been effectively developed for the recognition of <b>printed</b> <b>characters</b> of non-Indian languages. Efforts are on the way for the development of efficient OCR system for Indian language especially for ORIYA. I present in this paper the reconstruction of the basic characters (vowels and consonants) in Oriya text, which can handle different font sizes and font types. Hu‟s seven moments and Zernike moments have been progressively used to extract the features of ORIYA characters. When I reconstruct by taking the extracted features, due to certain difficulties in the Hu‟s moments I can use the Zernike moments. The methodology can be extended for recognition of the ORIYA conjuncts too...|$|R
40|$|Handwriting {{recognition}} is a challenging task for many real-world {{applications such as}} document authentication, form processing, historical documents. This paper focuses on the comparative study on off-line handwriting recognition system and <b>Printed</b> <b>Characters</b> by taking Arabic handwriting. The off-line Handwriting Recognition methods for Arabic words which being often used among then across the Middle East and North Africa people. In this paper we are proposing off-line Arabic handwriting and <b>printed</b> <b>characters</b> and the language used {{by the majority of}} the Middle East. We are using discrete Hidden Markov Models (HMM) for Arabic handwriting and <b>printed</b> <b>characters</b> for the final recognition. In this paper after preprocessing step the characters are auto-segmented using a recursive algorithm as sequences of connected neighbors along lines and curves and Arabic words are first pre-classified into one of known character groups, based on the structural properties of the text line. The proposed system was trained and tested Arabic character images. The Arabic characters were written by the different people on a preformatted paper and the method recognizes the Arabic handwriting in print style format. A comparative Experimental result has shown 93. 40 % recognition rate for the Arabic handwriting and 97. 30 % recognition rate for the Arabic <b>printed</b> <b>characters...</b>|$|R
50|$|MyScript {{technology}} therefore provides {{handwriting recognition}} whatever the writing style used: isolated <b>character,</b> hand <b>printed</b> <b>characters,</b> natural handwriting and superimposed characters written in block of cursive style.|$|R
60|$|Laverick tore it {{open with}} a haste which he only imperfectly concealed. There was {{something}} ominous to him in those <b>printed</b> <b>characters.</b> Its contents, however, were short enough.|$|R
40|$|Character {{recognition}} {{provides a}} solution for processing large volume of data automatically. The {{purpose of the present}} work is to recognize different forms of <b>printed</b> Arabic <b>characters</b> written in three different fonts (Times new roman, Arial and Tahoma) using back-propagation neural network. This work was tested on a sample of <b>printed</b> <b>character</b> and the correct average recognition rate was 97 %...|$|R
50|$|A {{file storage}} of 96 MByte were also attached. The line printer used was a Potter Model HSP-3502 chain printer with 96 <b>printing</b> <b>characters</b> and {{a speed of}} about 230 lines per minute.|$|R
50|$|Published in late 1985, {{this version}} {{corrected}} {{a problem with}} parallel printer cards present in 2.0 and changed <b>printed</b> <b>characters</b> from low-ASCII to high-ASCII, correcting an issue with certain interface cards and printers.|$|R
5000|$|For example, the Morse code dot/dash {{sequence}} (...) {{which indicates}} the action of spacing down two lines on a page {{in order to create}} the white space indicating {{the start of a new}} paragraph. Other than the two line white spaces themselves, there is no actual written or <b>printed</b> <b>character</b> representation or symbol for a new paragraph. Thus, in general, typical Morse code prosigns do not have written or <b>printed</b> textual <b>character</b> representations in the original source information.|$|R
5000|$|The string {{constant}} [...] {{provides a}} description of the output, with placeholders marked by [...] escape characters, to specify both the relative location and the type of output that the function should produce. The return value yields the number of <b>printed</b> <b>characters.</b>|$|R
40|$|To achieve {{high speed}} in data {{processing}} {{it is necessary}} to convert the analog data into digital data. Storage of hard copy of any document occupies large space and retrieving of information from that document is time consuming. Optical character recognition system is an effective way in recognition of <b>printed</b> <b>character.</b> It provides an easy way to recognize and convert the printed text on image into the editable text. It also increases the speed of data retrieval from the image. The image which contains characters can be scanned through scanner and then recognition engine of the OCR system interpret the images and convert images of <b>printed</b> <b>characters</b> into machine-readable characters [8]. It improving the interface between man and machine in many application...|$|R
40|$|Abstract. Characters play {{important}} function in social development. It {{is not only}} the carrier of language, but also the basis of informationized society. For Latin alphabet, there are primitive character period, classical character period and alphabetical character period from the primitive characters to alphabetical characters. Every formal change of the character accelerated the speed of information transmission while keeping their historical traces. The writing tools and carriers of different times, as a kind of media, direct the transmission of information and directly influence the typeface of characters and communication of information. The invention of Gutenberg brings major technological innovation, printing oil and paper became new carriers of characters, which were widely promoted worldwide and various Latin alphabetical characters came into being gradually. Font disk share the same form and their reoccurrence greatly promoted the level of identification and the normalization of <b>printing</b> <b>characters</b> came into being. As a result, the readability and legibility of <b>printing</b> <b>characters</b> is superior to that of handwritten characters. So that information can be more clear and accurate delivery and better realization of its functional significance. <b>Printing</b> <b>characters</b> plays more and more important roles as carriers of information with the development of information society and their role in conveying information would arouse more concern and deeper research...|$|R
5000|$|... #Subtitle level 2: Introduction into <b>Print</b> Control <b>Characters</b> ...|$|R
40|$|AbstractPrinted {{character}} recognition {{is important in}} the context of document image analysis. Document image analysis analyzes the document images to extract the text and graphics information from image. Text extraction is followed by the {{character recognition}}. This paper reviews various phases of machine <b>printed</b> <b>character</b> recognition in document image...|$|R
30|$|As {{described}} in Section 3.1, laser printers and electrostatic copiers have similar architectures. Nevertheless, they produce significantly different printout qualities. Noise is {{introduced to the}} document during the scanning step in the copying process. This noise consists of AWGN and impulsive noise. AWGN noise mainly exists in the edge region of the character and has a strong influence on character morphology. In the edge region, a copied character has more significant texture than a <b>printed</b> <b>character.</b> The impulsive noise occurs mainly in the text region, appearing as white dots on the character. As described above, we extract the noise energy of AWGN and impulsive noise from the edge and text regions of the character, respectively. The noise energy in a copied character {{is expected to be}} greater than in a <b>printed</b> <b>character.</b>|$|R
50|$|The IBM 2741 {{combines}} a ruggedized Selectric typewriter mechanism with IBM SLT electronics and an RS-232-C serial interface. It operates at about 14.1 {{characters per second}} with a data rate of 134.5 bits/second (one start bit, six data bits, an odd parity bit, and {{one and a half}} stop bits). In contrast to serial terminals employing ASCII code, the most significant data bit of each character is sent first. As with the standard office Selectrics of the day, there were 88 <b>printing</b> <b>characters</b> (not quite enough for the entire EBCDIC or ASCII <b>printing</b> <b>character</b> set including the lower case alphabet) plus space and a few nonprinting control codes, more than can be represented with six data bits, so shift characters are used to allow the machine's entire character set to be used.|$|R
40|$|A novel self-configurable {{multiple}} expert classifier is introduced. A {{genetic algorithm}} has been employed to automate {{the process of}} optimisation in terms of structural configuration. Application of this concept of self-configuration has produced very promising results in recognising a database of machine <b>printed</b> <b>characters</b> by the proposed multiple expert configuration...|$|R
50|$|Six-bit codes could encode {{more than}} 64 {{characters}} {{by the use}} of Shift Out and Shift In characters, essentially incorporating two distinct 62-character sets and switching between them. For example, the popular IBM 2741 communications terminal supported a variety of character sets of up to 88 <b>printing</b> <b>characters</b> plus control characters.|$|R
5000|$|In typography, {{overstrike}} is {{a method}} of <b>printing</b> <b>characters</b> that are missing from the printer's character set. The character was created by placing one character on another one — for example, overstriking [...] "L" [...] with [...] "-" [...] resulted in printing a [...] "Ł" [...] (L with stroke) character.|$|R
5000|$|... #Subtitle level 2: List of IBM Machine <b>Print</b> Control <b>Characters</b> ...|$|R
40|$|Abstract—In {{this paper}} {{we are using}} Devanagari script OCR for recognition. The {{handwritten}} data set is created by us and for <b>printed</b> <b>characters</b> we have used ISM font. Here we are using gradient and curvature based feature extraction method. We have compared Nearest Neighbor, K-Nearest Neighbor, Euclidian Distance-based K-NN, Cosine Similarity –based K...|$|R
40|$|Abstract—a Feature {{extraction}} {{technique is}} important in character recognition, because they can enhance the efficacy of recognition in comparison to other approaches. This study aims to investigate the novel feature extraction technique called the Cadre of Level technique in order to represent <b>printed</b> <b>characters</b> and digits. This technique gives statistic and morphologic information, i. e. the calculation {{is based on a}} statistical approach but in the positions which can give some information about the morphologic of character. The image of a character is divided into 100 zones, then for each zone we average 5 extracted values (one value for each level) to 1 value for each zone, which gives 100 features for each character. This technique was applied to 105 different characters and 10 different digits of Arabic printed script. K-Nearest Neighbor algorithm was used to classify the <b>printed</b> <b>characters</b> and digits...|$|R
40|$|This report gives {{a general}} {{review of the}} {{development}} of Optical Character Recognition (OCR), about its key problems and various of the techniques used. An implementation based on skeleton matching is introduced in detail, which is used mainly for <b>printed</b> <b>character</b> recognition and is insensitive to font style and size. This report emphasises on the implementation principles for text sectioning, preclassifier design, thinning algorithm, template database and matching strategy. An experiment is described to observe the system performance. Compared with conventional methods used, this implementation has included some new techniques, such as character dimension dependent broad classification method, AVP value used in fine classification and spelling check based post-processing method, in order to obtain a good performance. Chapter 1 Introduction Optical Character Recognition (OCR) is the process by which the <b>printed</b> <b>characters</b> in a document are converted automatically into computer inter [...] ...|$|R
40|$|Optical Character Recognition (OCR) {{systems have}} been {{developed}} for the recognition of <b>printed</b> <b>characters</b> of non-Indian languages effectively. Efforts are going on for development of efficient OCR systems for Indian languages, especially for Gujarati, a popular language of west India. In this paper, an OCR system is developed for the recognition of basic <b>characters</b> in <b>printed</b> Gujarati text. To extract the features of <b>printed</b> Guajarati <b>characters</b> principal component analysis (PCA) is used. Hopfield Neural classifier has been effectively used for the classification of characters based on features. The system methodology can be extended for the recognition of other Indian languages...|$|R
40|$|This paper {{explores the}} {{application}} of neural networks {{to the problem of}} identifying machine <b>printed</b> <b>characters</b> in an automated manner. In particular, a backpropagation net is trained on an eighty-four character font and tested on two other fonts. Its results are compared against results obtained on the same data by a more traditional approach...|$|R
