5|32|Public
50|$|In {{order to}} output {{the image to}} any target area (viewport) of the screen, another transformation, the Window-Viewport transformation, must be applied. This is a shift, {{followed}} by scaling. The resulting coordinates are the device coordinates of the output device. The viewport contains 6 values: height and width of the window in pixels, the upper left corner of the window in <b>window</b> <b>coordinates</b> (usually 0, 0) and the minimum and maximum values for Z (usually 0 and 1).|$|E
5000|$|No HRGN 1:This is bit #16 of the {{compatibility}} bits word, with {{hexadecimal value}} , {{known by the}} symbolic name [...] in [...] This flag reinstates a bug that existed in Windows 3.0 that was fixed in Windows 3.1. It did so because several applications, such as Microsoft Draw, worked around the bug themselves, and would fail to work correctly when the bug was eliminated. The bug was an error in the return value of the [...] function, whereby in certain situations (where the entire window was invalid) it would return the coördinates of the update rectangle in <b>window</b> <b>coördinates,</b> rather than in logical coördinates as it was supposed to. In Windows 3.1, it always returned the update rectangle in logical coördinates. The applications that worked around the bug would perform the coördinate transform themselves to work around the bug, and end up updating the wrong parts of their windows on Windows 3.1.|$|E
40|$|In this paper, {{a method}} for window {{detection}} in images of facades is presented. Windows {{play an important role}} in the context of deformation analysis of facades, and automatic detection from images is needed in novel, reflector-free measurement setups. The method we present is capable of detecting windows at several different orientations and scales, and yields good results for practical settings. The performance is demonstrated by an evaluation of the method using the Vienna and Zurich database sets of window images, which shows that <b>window</b> <b>coordinates</b> can be reliably detected...|$|E
40|$|This project {{addresses}} {{the problem of}} distributed desynchronization of sensor networks with arbi-trary graph topology. The motivation for desynchronization is wide-ranging, including the estab-lishment of collision-free communication <b>windows,</b> <b>coordinated</b> sleep schedules, task allocation, and periodic resource sharing. Although {{work has been done}} on this problem in the context of com...|$|R
40|$|We show that, and how, <b>window</b> <b>coordinate</b> {{precision}} (the {{representations of}} xwin and ywin), field of view, and error accumulated by single-precision mapping arithmetic contribute to, and sometimes dominate, effective zbuffer resolution. Our results are developed analytically, then verified through simulation. Using our approach system designers can allocate numeric precision more efficiently, and programmers can more confidently predict the minimum triangle-to-triangle separation required to ensure correct z-buffer occlusion. Categories and Subject Descriptors (according to ACM CCS) : I. 3. 1 [Computer Graphics]: Graphics Processors 1...|$|R
3000|$|Open {{image in}} new <b>window.</b> In <b>coordinate</b> form, we can {{characterize}} such objects (linear connections, metrics or any tensor field) by certain group and coordinate transforms {{adapted to the}} global space splitting (Equation 71) into z- and v-subspaces (z-projections on [...]...|$|R
40|$|AbstractThe {{first step}} in the {{development}} of the Drosophila optic medullar primordia is the expansion of symmetrically dividing neuroepithelial cells (NEs); this step is then followed by the appearance of asymmetrically dividing neuroblasts (NBs). However, the mechanisms responsible for the change from NEs to NBs remain unclear. Here, we performed detailed analyses demonstrating that individual NEs are converted into NBs. We also showed that this transition occurs during an elongated G 1 phase. During this G 1 phase, the morphological features and gene expressions of each columnar NE changed dynamically. Once the NE-to-NB transition was completed, the former NE changed its cell-cycling behavior, commencing asymmetric division. We also found that Notch signaling pathway was activated just before the transition and was rapidly downregulated. Furthermore, the clonal loss of the Notch wild copy in the NE region near the medial edge caused the ectopic accumulation of Delta, leading to the precocious onset of transition. Taken together, these findings indicate that the activation of Notch signaling during a finite <b>window</b> <b>coordinates</b> the proper timing of the NE-to-NB transition...|$|E
40|$|A flight {{simulator}} combines flight data and polygon face terrain data {{to provide a}} CRT display at each window of the simulated aircraft. The data base specifies the relative position of each vertex of each polygon face therein. Only those terrain faces currently appearing within the pyramid of vision defined by the pilots eye and {{the edges of the}} pilots window need be displayed at any given time. As the orientation of the pyramid of vision changes in response to flight data, the displayed faces are correspondingly displaced, eventually moving out of the pyramid of vision. Faces which are currently not visible (outside the pyramid of vision) are clipped from the data flow. In addition, faces which are only partially outside of pyramid of vision are reconstructed to eliminate the outside portion. <b>Window</b> <b>coordinates</b> are generated defining the distance between each vertex and each of the boundary planes forming the pyramid of vision. The sign bit of each window coordinate indicates whether the vertex is on the pyramid of vision side of the associated boundary panel (positive), or on the other side thereof (negative). The set of sign bits accompanying each vertex constitute the outcode of that vertex. The outcodes (O. C.) are systematically processed and examined to determine which faces are completely inside the pyramid of vision (Case A [...] all signs positive), which faces are completely outside (Case C [...] All signs negative) and which faces must be reconstructed (Case B [...] both positive and negative signs) ...|$|E
3000|$|Open {{image in}} new <b>window</b> to a <b>coordinate</b> system with {{constant}} speed c, x, and z are streamwise and spanwise surface coordinates, respectively, and [...]...|$|R
3000|$|Open {{image in}} new <b>window</b> where the <b>coordinates</b> p a [...] are dual to u a [...]. n The local bases and cobases on [...]...|$|R
40|$|Abstract. A icon can {{be located}} by its <b>{{coordinate}}s</b> in the <b>window</b> by the <b>window’s</b> <b>coordinates</b> system. A icon {{has its own}} coordinate system too. These two different coordinate systems must communicate properly and on time. Some important problem {{are discussed in the}} paper. They are about moving icon efficiently,exactly. Some people have noticed that moving icons on desktop under window XP is not efficient and exact. In the GUI environment,icons and pictures are frequently used and they represent many things,such as files,folders etc. In fact theses icons are associated with system resources. Controlling these resources efficiently is controlling the system’s rescources efficiently in reality. This phenomenon mentioned previously is caused by some defaults in the development of Windows XP itself. Unenabling to smally move an icon on Windows XP screen efficiently and the icons bounce after releasing mouse are analyzed and studied in the paper. In VB 6. 0 development environment the methods and skills of solving this problem are given, so icons dragging can be controlled efficiently and accurately. This idea is very useful and valuable generally for solving similar problems in Windows XP...|$|R
50|$|In {{computer}} graphics theory, {{there are two}} region-like notions of relevance when rendering some objects to an image. In textbook terminology, the world <b>coordinate</b> <b>window</b> is the area of interest (meaning what the user wants to visualize) in some application-specific coordinates, e.g. miles, centimeters etc.|$|R
40|$|In current {{windowing}} environments, individual {{windows are}} treated independently, {{making it difficult}} for users to coordinate information across multiple <b>windows.</b> While <b>coordinated</b> multi- <b>window</b> strategies are increasingly used in visualization and web user interfaces, designs are inflexible and haphazard. The space of such linked-window strategies is not well understood and largely unexplored. This paper presents a taxonomy of coordinations, identifies important components, and reviews example interfaces. This 2 x 3 taxonomy provides guidelines for designers of applications, user interface toolkits, and window managers. We hope to encourage construction of generalized, end- user programmable, robust, multiple-window coordination capabilities...|$|R
40|$|Aims. We seek {{to provide}} 2 MASS and OGLE identifications and {{coordinates}} for all {{stars in the}} finding chart published by Arp[*](1965, ApJ, 141, 43). This chart covers the low extinction area around NGC[*] 6522, also known as Baade’s <b>window,</b> at <b>coordinates</b> (l,b) = (1. 02, − 3. 92). Methods. A cross correlation, using numerical techniques, was performed between a scan of the original finding chart from Arp and 2 MASS and OGLE-II images and stellar coordinates. Results. We provide coordinates for all stars in Arp’s finding chart and 2 MASS and OGLE identifications wherever possible. Two identifications in quadrant II do {{not appear in the}} original finding chart...|$|R
40|$|In current {{windowing}} environments, individual {{windows are}} treated independently, {{making it difficult}} for users to coordinate information across multiple <b>windows.</b> While <b>coordinated</b> multiwindow strategies are increasingly used in visualization and web user interfaces, designs are inflexible and haphazard. I propose a generalized, end-user programmable, robust, multiplewindow coordination capability. Users can interactively link windows for powerful capabilities to integrate, relate, and navigate through information across window borders. This research involves generation of guidelines for robust coordination design, development of specification languages for end-user coordination, resolution of data structures, algorithms, and software architecture issues, and empirical evaluation. 1 Contents 1. INTRODUCTION [...] 2 My Solution [...] ...|$|R
40|$|Aims: We seek {{to provide}} 2 MASS and OGLE identifications and {{coordinates}} for all {{stars in the}} finding chart published by Arp (1965). This chart covers the low extinction area around NGC 6522, also known as Baade's <b>window,</b> at <b>coordinates</b> (l,b) =(1. 02,- 3. 92). Methods: A cross correlation, using numerical techniques, was performed between a scan of the original finding chart from Arp (1965) and 2 MASS and OGLE-II images and stellar coordinates. Results: We provide coordinates for all stars in Arp's finding chart and 2 MASS and OGLE identifications wherever possible. Two identifications in quadrant II do {{not appear in the}} original finding chart. Comment: 30 pages, accepted by A&A as a Research Not...|$|R
40|$|In current {{windowing}} environments, individual {{windows are}} treated independently, {{making it difficult}} for users to coordinate information across multiple <b>windows.</b> While <b>coordinated</b> multi-window strategies are increasingly used in visualization and web user interfaces, designs are inflexible and haphazard. The space of such linkedwindow strategies is not well understood and largely unexplored. This paper presents a taxonomy of coordinations, identifies important components, and reviews example interfaces. This 2 x 3 taxonomy provides guidelines for designers of applications, user interface toolkits, and window managers. We hope to encourage construction of generalized, end-user programmable, robust, multiple-window coordination capabilities. KEYWORDS User Interface, Coordination, Taxonomy, Multiple Window Strategies, Information Visualization,Window Management INTRODUCTION Users are dealing with increasing quantity, variety, and interrelated-ness of information. User tasks are becoming [...] ...|$|R
40|$|International audienceOn {{the basis}} of nascent {{transcript}} sequencing, it has been postulated but never demonstrated that transcriptional pausing at translation start sites is important for gene regulation. Here we show that the Escherichia coli thiamin pyrophosphate (TPP) thiC riboswitch contains a regulatory pause site in the translation initiation region {{that acts as a}} checkpoint for thiC expression. By biochemically probing nascent transcription complexes halted at defined positions, we find a narrow transcriptional window for metabolite binding, in which the downstream boundary is delimited by the checkpoint. We show that transcription complexes at the regulatory pause site favour the formation of a riboswitch intramolecular lock that strongly prevents TPP binding. In contrast, cotranscriptional metabolite binding increases RNA polymerase pausing and induces Rho-dependent transcription termination at the checkpoint. Early transcriptional pausing may provide a general mechanism, whereby transient transcriptional <b>windows</b> directly <b>coordinate</b> the sensing of environmental cues and bacterial mRNA regulation...|$|R
40|$|We {{observe that}} even when the system {{throughput}} is relatively stable, end users of media-streaming applications do not necessarily experience smooth throughput, due to the unsynchronized window adjustments triggered by random congestion indications. We analyze and evaluate {{the negative impact of}} random window adjustments on smoothness, short-term fairness, and long-term fairness. We further propose an experimental congestion avoidance mechanism, namely TCP (,,,), based on <b>coordinated</b> <b>window</b> adjustments. The flow-level smoothness is enhanced significantly for media-streaming applications, without a cost on fairness and responsiveness. Responsiveness is even boosted when bandwidth is underutilized...|$|R
40|$|Abstract—We {{observe that}} even when the system {{throughput}} is relatively stable, end users of media-streaming applications do not necessarily experience smooth throughput, due to the unsyn-chronized window adjustments triggered by random congestion indications. We analyze and evaluate {{the negative impact of}} random window adjustments on smoothness, short-term fairness, and long-term fairness. We further propose an experimental congestion avoidance mechanism, namely TCP (,,,), based on <b>coordinated</b> <b>window</b> adjustments. The flow-level smoothness is enhanced significantly for media-streaming applications, without a cost on fairness and responsiveness. Responsiveness is even boosted when bandwidth is underutilized. Index Terms—Congestion control, fairness, multimedia commu-nication, smoothness, transport protocols. I...|$|R
40|$|Abstract — Descriptor-based image {{registration}} consists of many processing stages. Errors {{introduced by the}} keyframe localization stage (whose magnitude correlates with the disparity between the images) are usually neglected, or corrected by computationally intensive optical flow methods. Results presented by this paper target a faster solution to this problem. It {{is based on the}} investigation, how the Self Affine Feature Transform (SAFT descriptor) changes due to affine transformations of the window of interest. The analytic nature of SAFT makes it attractive for this purpose. For example, it is possible to apply coordinate transformation after descriptor extraction. <b>Window</b> and <b>coordinate</b> transformation rules of a descriptor need to be combined to approximate the descriptor of transformed image details. Using Gaussian windows helps to achieve our goal, due to the special behavior of these windows respect to slight affine transformations. This ensures that the transformation dependence can be efficiently approximated linearly which enables to approximate the affine transformation parameters between two image details by solving a least-squares (LS) problem. The paper shows results obtained by the introduced algorithm. Keywords: Affine, Invariance, Gaussian, Windowing, 1...|$|R
40|$|Umbrella {{sampling}} efficiently yields equilibrium averages {{that depend}} on exploring rare states of a model by biasing simulations to <b>windows</b> of <b>coordinate</b> values and then combining the resulting data with physical weighting. Here, we introduce a mathematical framework that casts the step of combining the data as an eigenproblem. The advantage to {{this approach is that}} it facilitates error analysis. We discuss how the error scales with the number of windows. Then, we derive a central limit theorem for averages that are obtained from umbrella sampling. The central limit theorem suggests an estimator of the error contributions from individual windows, and we develop a simple and computationally inexpensive procedure for implementing it. We demonstrate this estimator for simulations of the alanine dipeptide and show that it emphasizes low free energy pathways between stable states in comparison to existing approaches for assessing error contributions. We discuss the possibility of using the estimator and, more generally, the eigenvector method for umbrella sampling to guide adaptation of the simulation parameters to accelerate convergence...|$|R
50|$|One of {{the most}} {{significant}} differences was the coordinate system. While in <b>Windows</b> the 0,0 <b>coordinate</b> was located in the upper left corner, in PM it was in the lower left corner. Another difference was that all drawing operations went to the Device Context (DC) in Windows. PM also used DCs but there was an added level of abstraction called Presentation Space (PS). OS/2 also had more powerful drawing functions in its Graphics Programming Interface (GPI). Some of the GPI concepts (like viewing transforms) were later incorporated into Windows NT. The OS/2 programming model was thought to be cleaner, since {{there was no need to}} explicitly export the window procedure, no WinMain, and no non-standard function prologs and epilogs.|$|R
40|$|One of {{the main}} tasks of vision is to individuate and {{recognize}} specific objects. Unlike the detection of basic features, object individuation is strictly limited in capacity. Previous studies of capacity, in terms of subitizing ranges or visual working memory, have emphasized spatial limits {{in the number of}} objects that can be apprehended simultaneously. Here, we present psychophysical and electrophysiological evidence that capacity limits depend instead on time. Contrary to what is commonly assumed, subitizing, the reading-out a small set of individual objects, is not an instantaneous process. Instead, individuation capacity increases in steps within the lifetime of visual persistence of the stimulus, suggesting that visual capacity limitations arise {{as a result of the}} narrow window of feedforward processing. We characterize this temporal <b>window</b> as <b>coordinating</b> individuation and integration of sensory information over a brief interval of around 100 ms. Neural signatures of integration windows are revealed in reset alpha oscillations shortly after stimulus onset within generators in parietal areas. Our findings suggest that short-lived alpha phase synchronization (≈ 1 cycle) is key for individuation and integration of visual transients on rapid time scales (< 100 ms). Within this time frame intermediate-level visio...|$|R
5000|$|... #Caption: ① The evdev module of the Linux kernel gets {{an event}} and sends {{it to the}} Wayland {{compositor}}.② The Wayland compositor looks through its scenegraph to determine which window should receive the event. The scenegraph corresponds to what's on screen and the Wayland compositor understands the transformations {{that it may have}} applied to the elements in the scenegraph. Thus, the Wayland compositor can pick the right window and transform the screen <b>coordinates</b> to <b>window</b> local <b>coordinates,</b> by applying the inverse transformations. The types of transformation that can be applied to a window is only restricted to what the compositor can do, as long as it can compute the inverse transformation for the input events.③ As in the X case, when the client receives the event, it updates the UI in response. But in the Wayland case, the rendering happens by the client via EGL, and the client just sends a request to the compositor to indicate the region that was updated.④ The Wayland compositor collects damage requests from its clients and then re-composites the screen. The compositor can then directly issue an ioctl to schedule a pageflip with KMS.|$|R
40|$|Database {{searches}} {{are usually}} performed with query languages and form fill in templates, with results displayed in tabular lists. However, excitement is building around dynamic queries sliders and other graphical selectors for query specification, with results displayed by information visualization techniques. These filtering techniques {{have proven to}} be effective for many tasks in which visual presentations enable discovery of relationships, clusters, outliers, gaps, and other patterns. Scaling visual presentations from millions to billions of records will require collaborative research efforts in information visualization and database management to enable rapid aggregation, meaningful <b>coordinated</b> <b>windows,</b> and effective summary graphics. This paper describes current and proposed solutions (atomic, aggregated, and density plots) that facilitate sense-making for interactive visual exploration of billion record data sets...|$|R
40|$|This thesis {{presents}} {{a solution to}} the following problem: Given a set of 3 -D objects having their visible surfaces marked with symbols representing the terms of a pseudo-random array (PRA), given the mapping between the planar faces of the polyhedral models of these objects, and given a monocular (2 -D) image partly showing an object of this set, determine object identity and its POSE (Position, Orientation and Scale Estimation) parameter relative to the 3 -D frame of the video-camera. From the symbols which could be recognized in the image, a broken portion of the PRA is reconstructed and then inspected until a complete pseudo-random window (PRW) is found. Such a window has the uniqueness property which allows the full identification of the <b>window's</b> absolute <b>coordinates</b> (i,j) within the PRA. By consulting the "object model/ PRA" mapping database it is possible to identify the object and its specific face containing the recovered window. Once the object face is identified, its POSE parameters are calculated from the perspective transformations relating the 2 -D positions of the recognized symbols in the image frame to their correspondent PRA grid nodes defined in the 3 -D object model frame (a classical "camera calibration" problem. ...|$|R
40|$|A {{principal}} {{theme of}} future traffic management {{is the use}} of planned four-dimensional trajectories (4 DTs) for airborne and surface operations at busy airports. In contrast to autopilots following airborne 4 DTs, human pilots will continue to manually control the movement of aircraft on the ground. The resulting variability in compliance with planned surface trajectories will {{have a significant impact on}} optimal surface planning systems. This paper first explores, parametrically, the relationship between surface trajectory compliance and elements of surface traffic management operational concepts, such as how frequently aircraft trajectories may be re-planned and how far in advance plans must be frozen. Flexibility similar to current operations must be preserved to maintain capacity in the presence of uncertainty. Second, the paper presents examples of the variability currently observed in the movements of aircraft on the airport surface, as an initial bound on the compliance errors that may be expected. Implications of this variability for future surface traffic management concepts are described. Variability creates a tradeoff between trajectories being feasible and efficient, which motivates re-planning trajectories frequently and providing only partial, immediate clearances to aircraft on the surface. Interoperability with airborne 4 DT planning systems will require longer planned <b>windows</b> for <b>coordinated</b> events (e. g., takeoff) where the surface planning system may re-plan frequently, moving scheduled times within those frozen windows. I...|$|R
40|$|Abstract — Manual {{segmentation}} of retinal {{blood vessels}} in optic fundus images is a tiresome task. Several methods have previously been proposed for the automatic segmentation of retinal blood vessels. In this {{paper we propose a}} classifier-based method. First the images are preprocessed so that the within class variability of the vessel and background classes are minimized. Next, the image is scanned with a window of a certain size. Polar run-length matrices are simply created by transforming the <b>windows</b> into polar <b>coordinates</b> and then constructing conventional run length matrices. Two features are then extracted for each gray level value in the polar run length matrix. The feature vectors are then classified using a multilayer perceptron artificial neural network. The performance of the proposed method is compared with that of the human observers and with those methods previously reported in literature. Keywords-retinal vessel segmentation; DoOG filters; polar transformation; run-length matrix;artificial neural network I...|$|R
40|$|Keeping up with {{rapidly growing}} {{research}} fields, {{especially when there}} are multiple interdisciplinary sources, requires substantial effort for researchers, program managers, or venture capital investors. Current theories and tools are directed at finding a paper or website, not gaining {{an understanding of the}} key papers, authors, controversies, and hypotheses. This report presents an effort to integrate statistics, text analytics, and visualization in a multiple <b>coordinated</b> <b>window</b> environment that supports exploration. Our prototype system, Action Science Explorer (ASE), provides an environment for demonstrating principles of coordination and conducting iterative usability tests of them with interested and knowledgeable users. We developed an understanding of the value of reference management, statistics, citation context extraction, natural language summarization for single and multiple documents, filters to interactively select key papers, and network visualization to see citation patterns and identify clusters. The three-phase usability study guided our revisions to ASE and led us to improve the testing methods...|$|R
40|$|A new {{algorithm}} for clipping {{line segments}} by a rectangular <b>window</b> on rectangular <b>coordinate</b> system {{is presented in}} this paper. The algorithm is very different to the other line clipping algorithms. For the line segments that cannot be identified as completely inside or outside the window by simple testings, this algorithm applies affine transformations (the shearing transformations) to the line segments and the window, and changes {{the slopes of the}} line segments and the shape of the window. Thus, it is clear for the line segment to be outside or inside of the window. If the line segments intersect the window, the algorithm immediately (no solving equations) gets the intersection points. Having applied the inverse transformations to the intersection points, the algorithm has the final results. The algorithm is successful to avoid the complex classifications and computations. Besides, the algorithm is effective to simplify the processes of finding the intersection points. Comparing to some classical algorithms, the algorithm of this paper is faster for clipping line segments and more efficient for calculations...|$|R
40|$|User {{interface}} development {{life cycle}} often involve several {{different views of}} the user interface over time either {{at the same level}} of abstraction or at different levels of abstraction. The relationship between these different views is often supported by tiling <b>coordinated</b> <b>windows</b> containing these related views simultaneously, thus leaving the developer with the responsibility to effectively and efficiently link the corresponding elements of these different views. This paper attempts to overcome the shortcomings posed by the coordinated visualization of multiple views by providing UsiView, a user interface rendering engine in which one single window ensures an animated transition between these different user interface views dynamically an internal view, an external view, and a conceptual view. Examples include the following cases: an authoring environment ensures an animated transition between an internal view (e. g., HTML 5) and its external view (e. g., a web page), an Integrated Development Environment ensures an animated transition between its conceptual view and its external view; a model-driven engineering environment ensures an animated transition between the conceptual view at different levels of abstraction, e. g., from task to abstract user interface to concrete user interface until final user interface. The paper discusses the potential advantages of using animated transitions between user interface views during the development life cycle...|$|R
40|$|The new, larger CL oftware {{maintenance}} is an impor- nomical information presentation-tant {{part of a}} programmer's work information that has now become more display screens s and a product's life cycle, yet it complex, since {{the size of the}} available can improve program {{remains one of the most}} troublesome of work area presumably interacts with many comprehension-if tasks. Even existing, newly developed tech- other aspects of the display. Thus, like large MP niques are not of much use, since only time programs, large displays need new stratethe added space can determine their value. Thus, instead of gies for sound and efficient display is used for mome presenting another new maintenance tool formats. effective presenta- or management technique, we focus on In this article we deal with coordinated strategies for improving the presentation of window systems, in which the windows and tion, notjust more information- specifically, on the new, their contents appear and scroll automatcode or larger type. larger display screens * ically as a result of user activities. In most User interfaces in the software environ- other window systems, the user creates, ment are much like spices in good recipes; positions, and manipulates windows and the right arrangement must be found or the their contents. In <b>coordinated</b> <b>window</b> sysfoo...|$|R
40|$|Much of {{the effort}} {{has been devoted to}} address the {{software}} overhead problem in the past decade, which is known as the major hindrance on high-speed communication. However, this paper shows that having a lowlatency communication system does not guarantee to achieve high performance, as there are other communication issues that have not been fully-addressed by the use of low-latency communication, such as contention, communication patterns and scheduling of communication events. In this paper, we use the complete exchange operation as a case study to show that with careful design of communication schedules, we can achieve efficient communication as well as prevent congestion on a high-performance commodity network. We have developed a complete exchange algorithm, the Synchronous Shuffle Exchange, which is an optimal algorithm on the nonblocking network. To avoid congestion loss caused by the non-deterministic delays in communication events, a global congestion control scheme is introduced. This scheme uses a global <b>windowing</b> concept to <b>coordinate</b> all participating nodes to monitor and regulate the traffic load, which effectively avoids congestion loss and maintains sufficient throughput to maximize the performance. To improve the effectiveness of the congestion control scheme when working on the hierarchical network, we incorporate information on the network topology to devise a contention-aware permutation. This permutation scheme generates a communication schedule, which is both node and switch contention-free as well as distributing the network loads more evenly across the hierarchy...|$|R
40|$|The aim of {{the present}} study was to {{determine}} the effects of breathing on the three - dimensional underwater stroke kinematics of front crawl swimming. Ten female competitive freestyle swimmers participated in the study. Each subject swam a number of front crawl trials of 25 m at a constant speed under breathing and breath-holding conditions. The underwater motion of each subject's right arm was filmed using two S-VHS cameras, operating at 60 Hz, which were positioned behind two underwater viewing <b>windows.</b> The spatial <b>coordinates</b> of selected points were calculated using the DLT procedure with 30 control points and after the digital filtering of the raw data with a cut-off frequency of 6 Hz, the hand's linear displacements and velocities were calculated. The results revealed that breathing caused significantly increases in the stroke duration (t 9 = 2. 764; p < 0. 05), the backward hand displacement relative to the water (t 9 = 2. 471; p< 0. 05) and the lateral displacement of the hand in the X - axis during the downsweep (t 9 = 2. 638; p < 0. 05). On the contrary, the peak backward hand velocity during the insweep (t 9 = 2. 368; p < 0. 05) and the displacement of the hand during the push phase (t 9 = - 2. 297; p < 0. 05) were greatly reduced when breathing was involved. From the above, it was concluded that breathing action in front crawl swimming caused significant modifications in both the basic stroke parameters and the overall motor pattern were, possibly due to body roll during breathin...|$|R
40|$|One of {{the most}} widely used methods of {{spectral}} estimation in signal and speech processing is linear predictive coding (LPC). LPC has some attractive features, which account for its popularity, including the properties that the resulting modeling filter (i) matches a finite window of n + 1 covariance lags, (ii) is rational of degree at most n, and(iii) has stable zeros andpoles. The only limiting factor of this methodology is that the modeling filter is "all-pole", i. e., an autoregressive (AR) model. In this paper, we present a systematic description of all autoregressive movingaverage (ARMA) models of processes that have properties (i) [...] (iii) in the context of cepstral analysis and homomorphic filtering. Indeed, we show that each such ARMA model determines and is completely determined by its finite windows of cepstral coe#cients andcovariance lags. This characterization has an intuitively appealing interpretation of a characterization by using measures of the transient andthe steady-state behaviors of the signal, respectively. More precisely, we show that these nth order <b>windows</b> form local <b>coordinates</b> for all ARMA models of degree n and that the pole-zero model can be determined from the windows as the unique minimum of a convex objective function. We refine this optimization method by first noting that the maximum entropy design of an LPC filter is obtained by maximizing the zeroth cepstral coe#cient, subject to the constraint (i). More generally, we modify this scheme to a more well-posed optimization problem where the covariance data enters as a constraint and the linear weights of the cepstral coefficients are "positive" [...] in a sense that a certain pseudo-polynomial is positive [...] rather succinctly generalizing the maximum entropy method. This new problem is a [...] ...|$|R
