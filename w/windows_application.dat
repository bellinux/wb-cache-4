323|1641|Public
5|$|The Microsoft Malware Protection Center {{identified}} a trend away from WSF files {{in favor of}} LNK files and PowerShell scripting. These LNK shortcut files install Locky ransomware by automating infection operations {{rather than relying on}} traditional user downloads of WSF files—all of which is made possible by the universal PowerShell <b>Windows</b> <b>application.</b> Unfortunately, cyber criminals have been able to leverage PowerShell for their attacks for years. In a recent report, the application was found to be involved in nearly 40% of endpoint security incidents. While attackers have been finding weaknesses in the Windows operating system for years, it’s clear that there’s something problematic with PowerShell scripting.|$|E
5|$|The Windows Push Notification Service (WNS) was {{designed}} as a successor to the Microsoft Push Notification Service (MPNS), which was only supported natively on the Windows Phone 8 Operating System. Developers can still use the MPNS on apps that are installed on newer versions of Windows Mobile (Windows Phone 8 or Windows Phone 8.1), but only if the <b>Windows</b> <b>application</b> was already registered to use the MPNS and has been converted to a Microsoft Silverlight application and modified to re-target the new platform.|$|E
25|$|Asymetrix's <b>Windows</b> <b>application</b> ToolBook resembled HyperCard, {{and later}} {{included}} an external converter to read HyperCard stacks (the {{first was a}} third-party product from Heizer software).|$|E
50|$|Whether <b>Windows</b> <b>applications</b> {{are running}} in full-screen or windowed mode, {{and in one}} Windows session or several, it is {{possible}} to use DDE between OS/2 and <b>Windows</b> <b>applications,</b> and OLE between <b>Windows</b> <b>applications</b> only.|$|R
50|$|<b>Windows</b> <b>applications</b> work {{to various}} degrees in CrossOver. A {{database}} of <b>Windows</b> <b>applications</b> is maintained on the CodeWeavers’ website.|$|R
5000|$|In a 2007 {{survey by}} desktoplinux.com of 38,500 Linux desktop users, 31.5% of {{respondents}} reported using Wine to run <b>Windows</b> <b>applications.</b> [...] This plurality {{was larger than}} all x86 virtualization programs combined, as well as larger than the 27.9% who reported not running <b>Windows</b> <b>applications.</b>|$|R
25|$|The {{terminal}} implements a {{client-server architecture}} with the server {{running on a}} multiprocessor Unix platform. The client, used by end users {{to interact with the}} system, is a <b>Windows</b> <b>application</b> that typically connects directly through a router provided by Bloomberg and installed on-site. End users can also make use of an extra service (Bloomberg Anywhere) to allow the <b>Windows</b> <b>application</b> to connect via internet/IP, or Web access via a Citrix client. There are also applications that allow mobile access via Android, BlackBerry, and iOS. The server side of the terminal was originally developed using mostly the programming languages Fortran and C. Recent years have seen a transition towards C++ and embedded JavaScript on the clients and servers.|$|E
25|$|Efforts toward {{standardization}} included Sun's Public Windows Interface (PWI) for Win16 (see also: Sun <b>Windows</b> <b>Application</b> Binary Interface (Wabi)), Willows Software's Application Programming Interface for Windows (APIW) for Win16 and Win32 (see also: Willows TWIN), and ECMA-234, which {{attempted to}} standardize the Windows API bindingly.|$|E
25|$|The {{first version}} of Word for Windows was {{released}} in 1989. With the release of Windows 3.0 the following year, sales began {{to pick up and}} Microsoft soon became the market leader for word processors for IBM PC-compatible computers. In 1991, Microsoft capitalized on Word for Windows' increasing popularity by releasing a version of Word for DOS, version 5.5, that replaced its unique user interface with an interface similar to a <b>Windows</b> <b>application.</b> When Microsoft became aware of the Year 2000 problem, it made Microsoft Word 5.5 for DOS available for download free. , it is still available for download from Microsoft's web site.|$|E
50|$|Support for all 32-bit and 64-bit <b>Windows</b> <b>applications.</b>|$|R
5000|$|... the kterm console <b>window</b> <b>application</b> was {{extended}} to support it; ...|$|R
2500|$|Ability {{to extend}} Mac OS X Parental Controls to <b>Windows</b> <b>applications</b> ...|$|R
25|$|Also {{included}} are usability {{features such as}} the ability to share Windows files by dragging them directly to a Mac application in Mac Dock. Windows can now also automatically start in the background when a user opens a <b>Windows</b> <b>application</b> on the Mac desktop. Version 4.0 drew criticism for problems upgrading from Version 3.0 shortly after its initial release. Build 3810 also addresses installation and upgrade issues previously experienced with Version 4.0 and introduces the option to enroll in the company's new Customer Experience Program, which lets customers provide information about their preferences and user priorities.|$|E
2500|$|PDF printer for Windows {{to print}} from any <b>Windows</b> <b>{{application}}</b> to a PDF on the Mac desktop, {{even if that}} application doesn't have that functionality ...|$|E
2500|$|An [...] "HTML Application" [...] (HTA) is a Microsoft <b>Windows</b> <b>application</b> {{written with}} HTML and Dynamic HTML and {{introduced}} with IE5. Internet Explorer 5.0 also introduced favicon support and Windows Script Host, which provides scripting capabilities comparable to batch files, {{but with a}} greater range of supported features.|$|E
2500|$|Ability to use Mac OS X {{keyboard}} shortcuts in <b>Windows</b> <b>applications</b> ...|$|R
2500|$|Theming of <b>Windows</b> <b>{{applications}}</b> to {{make them}} look like native applications ...|$|R
5000|$|Ability {{to extend}} Mac OS X Parental Controls to <b>Windows</b> <b>applications</b> ...|$|R
2500|$|... – Home to free MCell and MJCell {{cellular}} automata explorer {{software and}} rule libraries. The software supports {{a large number}} of 1D and 2D rules. The site provides both an extensive rules lexicon and many image galleries loaded with examples of rules. MCell is a <b>Windows</b> <b>application,</b> while MJCell is a Java applet. Source code is available.|$|E
2500|$|After lengthy {{discussions with}} Be and {{rumors of a}} merger with Sun Microsystems, many were {{surprised}} at Apple's December 1996 announcement that they were purchasing NeXT and bringing Steve Jobs on in an advisory role. Amelio quipped that they [...] "choose Plan A instead of Plan Be." [...] The project to port OpenStep to the Macintosh platform was named Rhapsody and {{was to be the}} core of Apple's cross-platform operating system strategy. This would inherit OpenStep's existing support for Power PC, Intel x86, and DEC Alpha CPU architectures, as well as an implementation of the OPENSTEP libraries running on Windows NT. This would in effect open the <b>Windows</b> <b>application</b> market to Macintosh developers as they could license the library from Apple for distribution with their product, or depend upon a preexisting installation.|$|E
50|$|By {{combining}} {{calls to}} Windows USER {{in the right}} way, a <b>Windows</b> <b>application</b> processes messages. The core Windows message loop (including calls to GetMessage, TranslateMessage and DispatchMessage) {{is at the core}} of any <b>Windows</b> <b>application.</b>|$|E
5000|$|Ability to use Mac OS X {{keyboard}} shortcuts in <b>Windows</b> <b>applications</b> ...|$|R
5000|$|Similar metaphors to Microsoft <b>Windows</b> <b>applications</b> such as {{controls}} and events.|$|R
5000|$|Theming of <b>Windows</b> <b>{{applications}}</b> to {{make them}} look like native applications ...|$|R
5000|$|... x86_am64: 32-bit (win32) MASM application, {{targeting}} 64-bit <b>windows</b> <b>application</b> development ...|$|E
5000|$|Unit FormsABC {{to create}} simple <b>windows</b> <b>application</b> without form {{designer}} ...|$|E
50|$|Kyktir {{is a free}} <b>Windows</b> <b>application</b> for {{displaying}} and previewing files.|$|E
500|$|Wine, {{compatibility}} layer {{which runs}} Microsoft <b>Windows</b> <b>applications</b> on Unix-like operating systems ...|$|R
50|$|Odin {{identifies}} {{itself to}} <b>Windows</b> <b>applications</b> as <b>Windows</b> 2000 Service Pack 2.|$|R
5000|$|Wine, {{compatibility}} layer {{which runs}} Microsoft <b>Windows</b> <b>applications</b> on Unix-like operating systems ...|$|R
5000|$|... amd64: 64-bit (win64) MASM application, also {{targeting}} 64-bit <b>windows</b> <b>application</b> development ...|$|E
5000|$|Develop 32-bit <b>Windows</b> <b>{{application}}</b> {{using the}} C++Builder VCL and FireMonkey application platform ...|$|E
5000|$|Client: a <b>windows</b> <b>application</b> {{that allows}} {{to control the}} actions of the server ...|$|E
50|$|It enables Delphi/Object Pascal and C++ {{developers}} to extend existing <b>Windows</b> <b>applications</b> and build apps that connect desktop and mobile devices with gadgets, cloud services, and enterprise data and APIs. Also, it enables {{developers to}} extend <b>Windows</b> <b>applications</b> using WiFi and Bluetooth App Tethering, and create shared user interface code across multiple device form factors, etc.|$|R
5000|$|Borland C++ 3.0 - (1991) New {{compiler}} {{support to}} build Microsoft <b>Windows</b> <b>applications.</b>|$|R
50|$|Starter - only compiles 32-bit <b>Windows</b> <b>applications</b> and has {{a limited}} commercial-use license.|$|R
