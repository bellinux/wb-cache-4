4|185|Public
5000|$|The <b>WAIT</b> <b>instruction</b> halts Copper {{execution}} until a given beam {{position is}} reached, thus making possible to synchronize other instructions {{with respect to}} screen drawing. It can also wait for a blitter operation to finish.|$|E
5000|$|The {{length of}} the Copper list program is limited by {{execution}} time. The Copper restarts executing the Copper list {{at the start of}} each new video frame. There is no explicit [...] "end" [...] instruction; instead, the <b>WAIT</b> <b>instruction</b> is used to wait for a location which is never reached.|$|E
40|$|You cannot repeat an RTS usign REP ~((Main_REP *) & [1](Main_RTS)) / / Also, an RTS {{cannot be}} the last {{instruction}} in a DO loop (at LA) / / A STOP instruction cannot {{be used in a}} fast interrupt routine / / An SWI instucttion cannot be used in a fast interrupt routine / / A <b>WAIT</b> <b>instruction</b> cannot be used in a fast interrupt routine / / A <b>WAIT</b> <b>instruction</b> cannot {{be the last}} instruction in a DO loop (at LA) Section Optiona...|$|E
5000|$|... #Caption: Congolese {{soldiers}} {{being trained}} by American contractors <b>wait</b> for <b>instructions</b> during training at Camp Base, Kisangani, 5 May 2010 ...|$|R
60|$|So, without <b>waiting</b> for <b>instructions,</b> {{she began}} that same evening {{to pack up}} her {{belongings}} and those of Madame Déroulède.|$|R
40|$|While {{the central}} window {{implementation}} in a superscalar processor {{is an effective}} approach to waking up ready instructions, this implementation does not scale to large instruction window sizes as those that are required by wide issue superscalars of the future. We propose a new wake-up algorithm that dynamically associates explicit wake-up lists with executing instructions according to the dependences between instructions. Instead of repeatedly examining a <b>waiting</b> <b>instruction</b> for wake-up till it can be issued, this algorithm identifies and considers for wake-up a fresh subset of <b>waiting</b> <b>instructions</b> from the instruction window in each cycle. This subset of instructions are the ones present in the wake-up lists of completing instructions. The direct wake-up microarchitecture (DWMA) that we present is able to achieve approximately 80 %, 75 % and 63 % {{of the performance of}} a central window processor at high issue widths of 8, 16 and 32 respectively when an effective memory disambiguation mechanism [13] is employed for load speculation. In contrast, the wake-up algorithm proposed in constructing the dependence-based microarchitecture (DBMA) [15] can only achieve approximately 62 %, 46 % and 45 % of the performance of a central window processor at issue widths of 8, 16 and 32. Thus the DWMA processor greatly outperforms the DBMA processor...|$|R
30|$|Ninety-one {{participants}} out of 107 got a {{total score}} of 6 at Dr. Scratch. The highest score was 10 and was reached by two participants. Instead of organizing the dialogs using timers (<b>wait</b> <b>instruction),</b> those two participants used broadcasting. Broadcasting is {{a feature of}} Scratch that allows the user to trigger events and program the events’ handler (or listener) or each of the sprites (objects). Event handlers or listeners are callback subroutines which are able to react to certain inputs. Using the broadcasting feature caused Dr. Scratch to attribute additional points of parallelism and synchronization. One of these two highest-score projects received points {{for the use of}} a single event’s handler or listener “when backdrop switches to …” in both parallelism and synchronization. Typical projects (those who scored 6) all worked about the same way: there was only one event’s handler for each sprite (when green flag is clicked), and dialogs were synchronized using timers (<b>wait</b> <b>instruction).</b>|$|E
60|$|Mr Bickersdyke {{received}} {{him with}} the ominous restraint of a tiger crouching for its spring. Psmith stood beside the table with languid grace, suggestive of some favoured confidential secretary <b>waiting</b> for <b>instructions.</b>|$|R
6000|$|... "I {{regret to}} say that you are wanted in the schoolroom. Mr. Le Frank can do nothing with Zoe. Oh, dear!" [...] She sighed over her sister's wickedness, and <b>waited</b> for <b>instructions.</b>|$|R
60|$|Mr. Spriggs emptied {{his glass}} and, {{knitting}} his brows, drew {{patterns on the}} cloth {{with the back of}} his knife. His wife's foot was still pressing on his, and he <b>waited</b> for <b>instructions.</b>|$|R
60|$|Taken {{completely}} by surprise, I signed to the attendant to <b>wait</b> for further <b>instructions.</b>|$|R
60|$|SOAMES [inexorably] I'm <b>waiting</b> for my <b>instructions</b> as to {{the term}} of the agreement.|$|R
60|$|He {{turned to}} the beaters, who were {{standing}} <b>waiting</b> for <b>instructions</b> a few yards away. There were a dozen of them, stalwart men for the most part, clad in rough smocks and breeches and carrying thick sticks.|$|R
50|$|We have a RAW (Read After Write) data {{dependency}} here, {{meaning that}} we must <b>wait</b> for <b>instruction</b> 1 to finish before executing instruction 2, as we require the correct value of r1 (register 1). Hence these instruction cannot be executed simultaneously.|$|R
40|$|Most {{microprocessor}} chips today use an out-of-order {{instruction execution}} mechanism. This mechanism allows superscalar processors to extract reasonably {{high levels of}} instruction level parallelism (ILP). The most significant problem with this approach is a large instruction window and the logic to support instruction issue from it. This includes generating wake-up signals to <b>waiting</b> <b>instructions</b> and a selection mechanism for issuing them. Wide-issue width also requires a large multi-ported register file, so that each instruction can read and write its operands simultaneously. Neither structure scales well with issue width leading to poor performance relative to the gates used. Furthermore, to obtain this ILP, the execution of instructions must proceed speculatively. An alternative, which avoids this complexit...|$|R
50|$|In {{the history}} of computing, optimum {{programming}} is the practice of arranging a computer program's instructions in memory so as to minimize the time the machine spends <b>waiting</b> for <b>instructions.</b> It is of historical interest mainly due {{to the design of}} many early digital computers.|$|R
60|$|The ranchero arose {{and made}} his master and {{mistress}} {{one of his best}} bows. Then he <b>waited</b> silently for <b>instructions.</b>|$|R
50|$|Bat {{remained}} in Hampton Roads {{for the next}} few weeks <b>waiting</b> for <b>instructions</b> to assist in efforts to capture the President's assassins or for orders to pursue any officials of the fallen Confederate government who might attempt to escape by sea. Such a message never arrived.|$|R
50|$|Shortly after Bretonnet's departure, news arrived that Rabih was attacking Baguirmi {{to punish}} it for its {{alliance}} with France; as a result, Bretonnet {{was ordered to}} reach the high course of the Ubangi River, and there unite with the Baguirmians and <b>wait</b> for <b>instructions</b> and reinforcements.|$|R
6000|$|... "Very well. Gomez is <b>waiting</b> for <b>instructions</b> and {{probably}} {{knows that the}} messenger is a foreigner. I suggest that you impersonate him. The guards will let you pass, and Gomez will, no doubt, receive you alone. Then you must try to extort an order for your friend's release." ...|$|R
60|$|Those who {{had been}} {{prepared}} to carry the coffin to Minster were the last to hang back. Squire Boatfield was obviously giving some directions to their foreman, Mat, who tugged at his forelock at intervals, indicating that {{he was prepared to}} obey. The others stood aside <b>waiting</b> for <b>instructions.</b>|$|R
40|$|Nowadays, most of {{distributed}} architectures {{are easily}} scalable MIMD (Multiple Instruction streams, Multiple Data streams) parallel computers or networks of workstations. The challenge consists in {{taking advantage of}} the power of these architectures. It has been shown that data-parallel languages offer both a programming model easy to understand and several execution models which are able to exploit these distributed architectures. The compilation-process has nevertheless to fill the gap between the synchronous and centralized programmer's point of view and an asynchronous and distributed execution model. An important problem is to reduce the number and the complexity of synchronizations between processors. This leads to complex program transformations, such as absorption techniques, in conditioning control structures, loops or routines. We propose a simple general technique based on structural clocks that permits the use of one-sided <b>wait</b> <b>instructions</b> instead of global synchronizations [...] . ...|$|R
5000|$|The <b>{{instruction}}</b> <b>waits</b> in {{the queue}} until its input operands are available. The instruction is then {{allowed to leave}} the queue before earlier, older instructions.|$|R
50|$|Code size {{increases}} {{are important because}} when the program code is larger, the instruction cache misses more often and the processor stalls <b>waiting</b> for new <b>instructions.</b>|$|R
60|$|As she {{mentioned}} that formidable brotherhood, Dennis Howmore {{returned from the}} police-office. He announced that a Sergeant was then <b>waiting</b> to receive <b>instructions</b> from Sir Giles.|$|R
5000|$|If an {{aircraft}} is {{pulled off the}} approach (if the landing area is not clear, for example) or is waved off by the LSO (for poor parameters or a fouled deck), or misses all the arresting wires ("bolters"), the pilot climbs straight ahead to 1200 ft to the [...] and <b>waits</b> for <b>instructions</b> from approach control.|$|R
5000|$|Victoria Station {{consists}} of a radio dialogue between a minicab controller (or dispatcher) and a driver (#274) who is stopped {{by the side of}} [...] "a dark park" [...] in Crystal Palace, supposedly <b>waiting</b> further <b>instructions.</b> The stage directions Lights up on office. CONTROLLER sitting at microphone and Lights up on DRIVER in car (45) alternate between these settings.|$|R
40|$|Machine for Parallel Graph Reduction [George 89] {{is another}} shared memory {{implementation}} {{based on the}} sequential G-machine. A prototype implementation has been constructed for the BBN Butterfly multiprocessor, which consists of a number (15) of processing elements (MC 68020 + 4 Mbyte memory) interconnected through a delta network. Each processor can access transparently all memory in the whole machine, but local references are {{at least five times}} faster than references to remote memory. Therefore locality considerations have been taken into account in the AMPGR design. The AMPGR machine, unlike the !;G?-machine, is driven by compiler derived parallelism based on strictness analysis. The compiler inserts explicit spark instructions in the G-code whenever it can derive that a particular expression is needed; corresponding <b>wait</b> <b>instructions</b> are generated prior to the actual usage of the expression. To overcome the synchronisation overheads associated with large numbers of fine-grain tasks, m [...] ...|$|R
5000|$|Following {{the latest}} letter's instructions, Condon placed a {{classified}} {{ad in the}} New York American reading: [...] "Money is Ready. Jafsie". Condon then <b>waited</b> for further <b>instructions</b> from the culprits.|$|R
6000|$|... "I regret, sir," [...] {{the officer}} answered, [...] "that my orders allow me no {{latitude}} whatever. A special train is <b>waiting,</b> and my <b>instructions</b> are to escort {{you to the}} frontier." ...|$|R
5000|$|In Tales of the Green Lantern Corps Annual #2 (1986) story [...] "Tygers", writer Alan Moore {{answered}} the question with a {{story of how the}} hero once visited Ysmault, a prison planet for an ancient race of demons, the Empire of Tears, vanquished millennia ago by the Oans. He was on a rescue mission and felt he could not <b>wait</b> for <b>instruction</b> from the Guardians.|$|R
50|$|Neil MacLeod, however, betrayed Love, {{and during}} a feast {{attempted}} {{to seize the}} pirates. Some of the pirates were killed during a desperate scuffle, but Love and the Priam were captured by MacLeod and his men. The four Dutchmen who had been enslaved by the pirates were freed and sent across Lewis, and a Scotsman who was also enslaved was detained by MacLeod, who <b>waited</b> for <b>instructions</b> from the Privy Council.|$|R
50|$|The second {{explosion}} {{occurred on}} April 1, 2013 at about 10:00 local time. Preliminary report said that 6 people died and 11 were {{missing in the}} explosion. Later news coverage reported that all the 17 people {{had died in the}} explosion. It was reported that the second accident occurred when a rescue team was despatched without <b>waiting</b> for <b>instructions</b> and having a sound plan and should have been preventable.|$|R
40|$|International audienceThe {{design flow}} of systems-on-a-chip (SoCs) {{identifies}} several abstraction levels {{higher than the}} Register-Transfer-Level that constitutes the input of the synthesis tools. These levels are called transactional, because systems are described as asynchronous parallel activities communicating by transactions. The most abstract transactional model is purely functional. The following model in the design flow is annotated with some timing information on {{the duration of the}} main components, that serves for performance evaluation. The timing annotations are included as special <b>wait</b> <b>instructions,</b> but since the timing information is imprecise, it should not result in additional synchronizations. We would like the functional properties of the system to be independent of the precise timing. In previous work [1], we showed how to adapt dynamic partial order reduction techniques to functional models of SoCs written in SystemC, in order to guarantee that functional properties are schedulerindependent. In this paper, we extend this work to timed systems with bounded delays, in order to guarantee timing-independence. The idea is to generate a set of executions that covers small variations of the timing annotations...|$|R
6000|$|... "My dear, {{we really}} don't know yet that Mrs. Vimpany has been acting under Lord Harry's <b>instructions.</b> <b>Wait</b> {{a little before}} you suspect your fellow-traveller of {{offering}} her services {{for the purpose of}} deceiving you." ...|$|R
40|$|Initiation of Study 2 ̆ 6 Collection of Data In two earlier meuos {{addressed}} to Dean Matthews, the committee {{reported that the}} application for 4 -Corners financing had been completed, initial data from the State department of Natural Resources and U. S. Forest Service had been obtained, {{and that we were}} still <b>waiting</b> for <b>instructions</b> from the Governor 2 ̆ 7 s office on how to proceed with the Bureau of Land Management...|$|R
