9|152|Public
5000|$|<b>Wireframe</b> <b>modeling</b> {{supports}} using templates for {{modeling the}} appearance of dialogs presented to users when interacting with an application. The supported device dialogs include: ...|$|E
5000|$|... 3D {{photorealistic}} {{effects are}} often achieved without <b>wireframe</b> <b>modeling</b> and are sometimes indistinguishable {{in the final}} form. Some graphic art software includes filters {{that can be applied}} to 2D vector graphics or 2D raster graphics on transparent layers.|$|E
50|$|Not all {{computer}} graphics that appear 3D {{are based on}} a wireframe model. 2D {{computer graphics}} with 3D photorealistic effects are often achieved without <b>wireframe</b> <b>modeling</b> and are sometimes indistinguishable in the final form. Some graphic art software includes filters that can be applied to 2D vector graphics or 2D raster graphics on transparent layers. Visual artists may also copy or visualize 3D effects and manually render photorealistic effects without the use of filters.|$|E
50|$|Wireframing {{is one of}} {{the methods}} used in {{geometric}} <b>modelling</b> systems. A <b>wireframe</b> <b>model</b> represents the shape of a solid object with its characteristic lines and points. There are two types of wireframe modelling: Pro's and Con's. In Pro's user gives a simple input to create a shape. It is useful in developing systems. While in Con's <b>wireframe</b> <b>model,</b> it does not include information about inside and outside boundary surfaces. Today, <b>wireframe</b> <b>models</b> are used to define complex solid objects. The designer makes a <b>wireframe</b> <b>model</b> of a solid object, and then the CAD operator reconstructs the object, including detailed analysis. This technique has some advantages: generally the 3-dimensional solid objects are complex, but <b>wireframe</b> <b>models</b> can be viewed in 1 dimension, improving comprehensibility; the solid object can be modified further; the designer can ignore the geometry inside a surface while in solid modelling the designer has to give consistent geometry for all details; <b>wireframe</b> <b>models</b> require less memory space and CPU capacity.|$|R
5000|$|... #Caption: Gibraltar 1 Neanderthal skull 3-D <b>wireframe</b> <b>model,</b> {{created with}} 123d Catch ...|$|R
40|$|Precise {{registration}} of a generic 3 D face {{model with a}} subject's face is a critical stage for model based analysis of facial expressions. In this study we propose a semi-automatic model fitting algorithm to fit a high-polygon <b>wireframe</b> <b>model</b> to a single image of a face. We manually mark important landmark points both on the <b>wireframe</b> <b>model</b> and the face image. We carry out an initial alignment by translating and scaling the <b>wireframe</b> <b>model.</b> We then translate the landmark vertices in the 3 D <b>wireframe</b> <b>model</b> so that they coincide with inverse perspective projections of image landmark points. The vertices that are not manually labeled as landmark are translated with a weighted sum of vectorial displacement of k neighboring landmark vertices, inversely weighted by their 3 D distances to the vertex under consideration. Our experiments indicate that we can fit a high-polygon model to the subject's face with modest computational complexity. Publisher's Versio...|$|R
5000|$|... 2000: 3D solid {{modeling}} algorithms created.2001: Geometric constraint manager implemented; data converter written to handle standard exchange formats.2002: Associative views of 3D models added.2003: Basic surface modeling features created.2004: Sheet metal modeling algorithms developed.2005: Manifold {{solid modeling}} implemented.2007: <b>Wireframe</b> <b>modeling</b> added.2008: Kinematic joints implemented for modeling mechanisms.2009: Support for geometric model attributes added.2010: Full-fledged surface modeling appears.2011: Expansion to cross-platform support.2012: Direct modeling elements implemented.2013: English documentation localized; support for test applications added.2014: Model conversion to text formats appeared.2015: Objects thread safety provided.2016: Development environments extended.|$|E
40|$|Abstract. Traditionally, the {{computer}} method of delineation requires to establish ore block model. The block-by-section scanning operation is slow, {{which does not}} meet the large amount of data calculation. In this paper, we use the ore body in the modeling of the surface model in order to overcome the above problem. This model uses modeling method that reproduces a traditional hand-paintedtechnique, describe the spatial distribution of ore bodies through a series of plan view or profile of the ore body boundary polygon for <b>wireframe</b> <b>modeling,</b> i. e., the frame modeling method. For reading the plan view or profile of the ore body, the graphics and fractal theory are needed in the work to achieve the extraction of vector graphics map elements. After completing the extraction of ore, the <b>wireframe</b> <b>modeling</b> of the ore bodies can be established by using <b>wireframe</b> <b>modeling</b> method. Finally the wireframe model is filled by using the OpenGL technology and the surface model orebody is generated...|$|E
40|$|Computer-aided {{three-dimensional}} {{interactive application}} (CATIA) was originally developed by Dassault Systems {{to design and}} manufacture complex geometries for jet fighters. Lately, it has been adopted as a multi-platform 3 -D product life cycle management solution and is used widely as a design platform in several industries, including the automobile, aerospace, ship-building, and consumer electronics industries. It supports multiple phases of product development, including design (i. e., computer-aided design—CAD), analysis (computer-aided engineering —CAE), and manufacturing (computer-aided manufacturing—CAM). It includes, among others, the following capabilities. 3 -D Modeling CATIA uses three methods to create 3 -D objects: (1) <b>Wireframe</b> <b>modeling</b> uses parametric/mathematical data to produce visual presentations of physical objects. For instance, CATIA can draw a circle by specifying {{the location of the}} center in space and the length of its diameter, or specify the edge of an object by connecting its constituent vertices using straight lines or curves. As shown in Figure A 1, <b>wireframe</b> <b>modeling</b> allows visualization of the underlying design “structure ” of a 3 -D model. The wireframe format is widely used in programming tool paths for direct numerical control (DNC) machine tools. (2) Surface modeling describes freeform surfaces of a 3 -D object. Since freeform surfaces do not have rigid radial dimensions, CATIA describes the shape using non-uniform rational basis splines (NURBS) and Bézier splines. As shown in Figure A 2, the freeform surfaces are defined by manipulating the surface control points, degree, and number of segments of curves. As a result, free forms, such as buildin...|$|E
40|$|We {{propose a}} novel {{formulation}} where 3 -D global and local motion estimation and {{the adaptation of}} a generic <b>wireframe</b> <b>model</b> to a particular speaker are considered simultaneously within an optical flow based framework including the photometric effects of the motion. We use a flexible <b>wireframe</b> <b>model</b> whose local structure {{is characterized by the}} normal vectors of the patches which are related to the coordinates of the nodes. Geometrical constraints that describe the propagation of the movement of the nodes are introduced, which are then efficiently utilized {{to reduce the number of}} independent structure parameters. A stochastic relaxation algorithm has been used to determine optimum global motion estimates and the parameters describing the structure of the <b>wireframe</b> <b>model.</b> Results with both simulated and real facial image sequences are provided. © 1994 IEE...|$|R
40|$|Abstract- Every <b>wireframe</b> <b>model</b> of {{a smooth}} surface is {{considered}} as a simple but very rough approximation. However it contains rich information. In this paper a piece of an approximated tangent plane, a tangent cell, is defined from a <b>wireframe</b> <b>model</b> in order to introduce students to an approximation of connection by making a tree of tangent cells. When this tree is put on a plane, parallel transport of a vector is equal to its parallel shift on the plane in usual meaning...|$|R
5000|$|GUI mock-ups: To {{illustrate}} the {{graphical user interface}} (GUI) for the desired feature, you may add some <b>wireframe</b> <b>models</b> or GUI mock-ups to your scenario: ...|$|R
40|$|Geometric {{modeling}} {{is an area}} {{of computer}} graphics that deals with creation, manipulation, maintenance, and analysis of representations of geometric forms of two and three-dimensional objects. It is applied in several fields, such as movie production, design of industrial mechanical parts, scientific visualization, and reproduction of objects for analysis in engineering. Historically, geometric modeling has evolved from <b>wireframe</b> <b>modeling</b> to surface modeling, solid modeling, and non-manifold modeling. Non-manifold geometric modeling allows the representation of multiregion objects, of internal or dangling structures, and of lower dimensions degenerated parts. Many application areas of geometric modeling take advantage of the additional features of non-manifold representation. In computational mechanics, for example, it is common the analysis of idealized structures such as shells combined with solids and beams. Another application is the representation of heterogeneous objects with regions with common volumes, coincident faces, internal structures, and solids consisting of different materials. This lecture illustrates the use of topological data structures for non-manifold representations as a framework for numerical simulations in computational mechanics. The main focus here is on the development of strategies for mesh generation for modeling heterogeneous objects such as subsurface geological models...|$|E
40|$|Luiz Fernando Martha, PhD ‘ 89 Professor of Civil Engineering, Pontifical Catholic University of Rio de Janeiro (PUC-Rio), BrazilMember and Manager, Computer Graphics Technology Group (Tecgraf), PUC-RioGeometric {{modeling}} {{is an area}} {{of computer}} graphics that deals with creation, manipulation, maintenance, and analysis of representations of geometric forms of two and three-dimensional objects. It is applied in several fields, such as movie production, design of industrial mechanical parts, scientific visualization, and reproduction of objects for analysis in engineering. Historically, geometric modeling has evolved from <b>wireframe</b> <b>modeling</b> to surface modeling, solid modeling, and non-manifold modeling. Non-manifold geometric modeling allows the representation of multiregion objects, of internal or dangling structures, and of lower dimensions degenerated parts. Many application areas of geometric modeling take advantage of the additional features of non-manifold representation. In computational mechanics, for example, it is common the analysis of idealized structures such as shells combined with solids and beams. Another application is the representation of heterogeneous objects with regions with common volumes, coincident faces, internal structures, and solids consisting of different materials. This lecture illustrates the use of topological data structures for non-manifold representations as a framework for numerical simulations in computational mechanics. The main focus here is on the development of strategies for mesh generation for modeling heterogeneous objects such as subsurface geological models. 1 _sj 3 hlvw...|$|E
40|$|Lao Tze Kin Jackie. Thesis (M. Phil.) [...] Chinese University of Hong Kong, 2000. Includes bibliographical {{references}} (leaves 83 - 87). Abstracts in English and Chinese. Chapter 1 [...] - Introduction [...] - p. 1 Chapter 1. 1 [...] - 3 D Modeling using Active Contour [...] - p. 3 Chapter 1. 2 [...] - Rectangular Virtual Environment Construction [...] - p. 5 Chapter 1. 3 [...] - Thesis Contribution [...] - p. 7 Chapter 1. 4 [...] - Thesis Outline [...] - p. 7 Chapter 2 [...] - Background [...] - p. 9 Chapter 2. 1 [...] - Panoramic Representation [...] - p. 9 Chapter 2. 1. 1 [...] - Static Mosaic [...] - p. 10 Chapter 2. 1. 2 [...] - Advanced Mosaic Representation [...] - p. 15 Chapter 2. 1. 3 [...] - Panoramic Walkthrough [...] - p. 17 Chapter 2. 2 [...] - Active Contour Model [...] - p. 24 Chapter 2. 2. 1 [...] - Parametric Active Contour Model [...] - p. 28 Chapter 2. 3 [...] - 3 D Shape Estimation [...] - p. 29 Chapter 2. 3. 1 [...] - Model Formation {{with both}} intrinsic and extrinsic parameters [...] - p. 29 Chapter 2. 3. 2 [...] - Model Formation with only Intrinsic Parameter and Epipo- lar Geometry [...] - p. 32 Chapter 3 [...] - 3 D Object Modeling using Active Contour [...] - p. 39 Chapter 3. 1 [...] - Point Acquisition Through Active Contour [...] - p. 40 Chapter 3. 2 [...] - Object Segmentation and Panorama Generation [...] - p. 43 Chapter 3. 2. 1 [...] - Object Segmentation [...] - p. 44 Chapter 3. 2. 2 [...] - Panorama Construction [...] - p. 44 Chapter 3. 3 [...] - 3 D modeling and Texture Mapping [...] - p. 45 Chapter 3. 3. 1 [...] - Texture Mapping From Parameterization [...] - p. 46 Chapter 3. 4 [...] - Experimental Results [...] - p. 48 Chapter 3. 4. 1 [...] - Experimental Error [...] - p. 49 Chapter 3. 4. 2 [...] - Comparison between Virtual 3 D Model with Actual Model [...] - p. 54 Chapter 3. 4. 3 [...] - Comparison with Existing Techniques [...] - p. 55 Chapter 3. 5 [...] - Discussion [...] - p. 55 Chapter 4 [...] - Rectangular Virtual Environment Construction [...] - p. 57 Chapter 4. 1 [...] - Rectangular Environment Construction using Traditional (Hori- zontal) Panoramic Scenes [...] - p. 58 Chapter 4. 1. 1 [...] - Image Manipulation [...] - p. 59 Chapter 4. 1. 2 [...] - Panoramic Mosaic Creation [...] - p. 59 Chapter 4. 1. 3 [...] - Measurement of Panning Angles [...] - p. 61 Chapter 4. 1. 4 [...] - Estimate Side Ratio [...] - p. 62 Chapter 4. 1. 5 [...] - <b>Wireframe</b> <b>Modeling</b> and Cylindrical Projection [...] - p. 63 Chapter 4. 1. 6 [...] - Experimental Results [...] - p. 66 Chapter 4. 2 [...] - Rectangular Environment Construction using Vertical Panoramic Scenes [...] - p. 67 Chapter 4. 3 [...] - Building virtual environments for complex scenes [...] - p. 73 Chapter 4. 4 [...] - Comparison with Existing Techniques [...] - p. 75 Chapter 4. 5 [...] - Discussion and Future Directions [...] - p. 77 Chapter 5 [...] - System Integration [...] - p. 79 Chapter 6 [...] - Conclusion [...] - p. 81 Bibliography [...] - p. 8...|$|E
5000|$|Photo-realistic rendering: Often {{used for}} concept development, <b>wireframe</b> <b>models</b> {{can be done}} in both 2D or 3D as necessary. Shapes can be drawn {{precisely}} or pushed and pulled as the designer chooses.|$|R
5000|$|... #Caption: An orthographic {{projection}} with a <b>wireframe</b> <b>model</b> and has {{half of the}} pentagonal faces colored to show the two dodecahedra. The dodecahedra are regular, but look flattened because of the projection and direction of viewing.|$|R
50|$|ACIS {{features}} an open, object-oriented C++ architecture that enables robust, 3D modelling capabilities. ACIS {{is used to}} construct applications with hybrid modeling features, since it integrates <b>wireframe</b> <b>model,</b> surface, and solid modeling functionality with both manifold and non-manifold topology, and a rich set of geometric operations.|$|R
5000|$|Advantages of <b>wireframe</b> 3D <b>modeling</b> over {{exclusively}} 2D methods include: ...|$|R
40|$|The paper {{deals with}} the {{parametric}} modeling method of virtual mannequins {{for the purposes of}} design automation in clothing industry. The described approach includes the steps of generation of the basic model on the ground of the initial one (obtained in 3 D-scanning process), its parameterization and deformation. The complex surfaces are presented by the <b>wireframe</b> <b>model.</b> The modeling results are evaluated with the set of similarity factors. Deformed models are compared with their virtual prototypes. The results of modeling are estimated by the standard deviation factor...|$|R
40|$|A {{knowledge-based}} Prolog {{program is}} presented that interprets the annotation information of a CAD drawing {{in terms of}} geometry primitives derived from the <b>wireframe</b> <b>model</b> used to create the drawing. The knowledge base consists of rules for recognising drawing symbols, parsing annotation text, identifying the connecting elements between text and geometry, suggesting geometry primitives to be sought for different annotatio...|$|R
5000|$|... #Caption: A CADKEY (Windows version) user {{interface}} showing a <b>wireframe</b> 3D <b>model</b> in multiple viewports.|$|R
40|$|This paper {{discusses}} a tracking method allowing real-time {{recovery of}} the 3 D position and orientation of a moving head. The described method uses a <b>wireframe</b> <b>model</b> of the head, a feature-based matching algorithm, and an Extended Kalman Filter estimator. The resulting motion tracking system works in a realistic environment without makeup on the face, with uncalibrated camera, and unknown lighting conditions and background...|$|R
50|$|The Walt Disney film The Black Hole (1979, {{directed}} by Gary Nelson) used wireframe rendering {{to depict the}} titular black hole, using equipment from Disney's engineers. In the same year, the science-fiction horror film Alien, {{directed by}} Ridley Scott, also used <b>wireframe</b> <b>model</b> graphics, in this case to render the navigation monitors in the spaceship. The footage was produced by Colin Emmett at the Atlas Computer Laboratory.|$|R
5000|$|From 1967 until 1985 {{several of}} the {{earliest}} computed generated image (CGI) or computer animated films were produced at the laboratory, particularly for the Open University. Most famously, the laboratory's facilities were used to produce the raster <b>wireframe</b> <b>model</b> rendering shown on the navigation monitors in the landing sequence of the 1979 Ridley Scott film Alien which won the 1979 Academy Award for Best Visual Effects.|$|R
40|$|We {{introduce}} an algorithm {{that automatically}} aligns images with partial <b>wireframe</b> <b>models</b> to compute extrinsic camera parameters {{with respect to}} the model reference frame. Aligned imagery is fused with the model to incorporate high-resolution textures and to facilitate context sensitive image processing. The technique is designed to exploit the approximately planar structure commonly found in human-made environments such as building faades, interior walls, parking lots, and roadways. Initially...|$|R
40|$|<b>Wireframe</b> <b>models</b> {{need to be}} {{converted}} to solid models as the latter tend to become more widespread, consistent and affordable. A conversion algorithm for manifold objects was defined to obtain ACIS, the de facto standard B-rep model from a neutral IGES <b>wireframe</b> <b>model</b> and was implemented in C++ in successive stages as follows. All potential surfaces are found first. The entities lying on the same surface are examined in order to form closed profile-loops. Loop nesting is examined according to a ray casting algorithm. Adjacency and nesting of loops is used in order to assign traversal directions to all edges according to the Möbius rule. Invalid profiles (those containing edges belonging to more than two loops) are searched for and successively removed. The final test is that of edge type. If the majority of edges {{turn out to be}} concave, the traversal sign of all edges is reversed, so that the body is solid in empty space and not the other way around. For engineering components the algorithm adequately resolves all singular cases...|$|R
40|$|In rapidly {{developing}} {{urban areas}} that include high-rise, large, and complex buildings, {{indoor and outdoor}} maps in GIS become a basis for utilizing and sharing information pertaining to {{various aspects of the}} real world. Although an indoor mapping has gained much attentions, research efforts are mostly in 2 D and 3 D modeling of terrain and buildings. Therefore, to facilitate fast and accurate construction of indoor GIS, this paper proposes a semi-automatic method consisting of preprocessing, 2 D mapping, and 3 D mapping stages. The preprocessing is designed to estimate heights of building interiors and to identify noise data from point clouds. In the 2 D mapping, a floor map is extracted with a tracing grid and a refinement method. In the 3 D mapping, a 3 D <b>wireframe</b> <b>model</b> is created with heights from the preprocessing stage. 3 D mesh data converted from noise data is combined with the 3 D <b>wireframe</b> <b>model</b> for detail modeling. The proposed method was applied to point clouds depicting a hallway in a building...|$|R
40|$|Abstract—This paper {{discusses}} a tracking method allowing real-time {{recovery of}} the three-dimensional (3 -D) position and orientation of a moving head. The described method uses a <b>wireframe</b> <b>model</b> of the head, a feature-based matching algorithm, and an extended Kalman filter estimator. The resulting motion tracking system works in a realistic environment without makeup on the face, with uncalibrated camera, and unknown lighting conditions and background. Index Terms— 3 -D head, avatar, real-time tracking, virtual reality...|$|R
40|$|This paper {{describes}} an experiment on tracking {{a face and}} its facial features in an input video sequence using the Active Appearance Algorithm. The algorithm adapts a <b>wireframe</b> <b>model</b> to the face in each frame, and the adaptation parameters are converted to MPEG- 4 Facial Animation Parameters. The results are promising, {{and it is our}} conclusion that we should continue on this track in our task to create a real-time modelbased coder. 1...|$|R
5000|$|... 3D {{wireframe}} {{is basically}} {{an extension of}} 2D drafting (not often used today). Each line has to be manually inserted into the drawing. The final product has no mass properties associated with it and cannot have features directly added to it, such as holes. The operator approaches these {{in a similar fashion}} to the 2D systems, although many 3D systems allow using the <b>wireframe</b> <b>model</b> to make the final engineering drawing views.|$|R
3000|$|... 3 D human {{modeling}} {{has always}} been a challenging problem. The human body is an extremely complex geometric body. Since the middle of the twentieth century, 3 D human modeling technology has been widely studied and applied. During this period, many different implementations have emerged. The main human modeling methods can be summarized as follows: three-dimensional <b>wireframe</b> <b>model</b> [1], three-dimensional solid model [2, 3], three-dimensional surface model [4], and physics-based three-dimensional modeling [5]. The 3 D <b>wireframe</b> <b>model</b> was first used to represent virtual 3 D human <b>model.</b> The three-dimensional <b>wireframe</b> <b>model</b> simulates a three-dimensional human body shape from a combination of points, lines, arcs, and various parametric curves. Although the structure is simple and the operation is convenient, it conforms to the habit of people proofing. The three-dimensional solid modeling includes two parts: one part is the definition and description of voxels (cuboids, spheres, cylinders, cones, etc.), and the other part is the set of operations between voxels (combination, difference, intersection, etc.). Surface modeling mainly studies the mathematical description of a surface profile with a certain degree of smoothness. Surface modeling, also known as surface modeling, {{is one of the most}} commonly used human modeling methods. Surface modeling is used to fit partially discrete data points on a surface to get a smooth transition of the surface, so as to achieve the reconstruction of the original surface. It can provide three-dimensional body surface information, making hidden line elimination and realistic 3 D human model display. The modeling based on physical characteristics is to add physical characteristics of human body to its geometric model and simulate it through numerical calculation, and then, human behavior is determined automatically in the process of simulation.|$|R
40|$|A 3 D - Surface Modeller and Renderer is {{presented}} {{in order to examine}} in detail the Geared Speed - Reducer (GSR) model produced by a Computer Aided Design Consultant (CADC). Yielding images of a GSR model requires mesh generation of its components, inspection of their 3 D - <b>wireframe</b> <b>model</b> and rendering of the latter from a set of selected viewpoints established at inspection. The user may choose the way the GSR will appear when rendered...|$|R
40|$|Laser {{scanners}} on a vehicle-based mobile mapping {{system can}} capture 3 D point-clouds of roads and roadside objects. Since roadside objects {{have to be}} maintained periodically, their 3 D models are useful for planning maintenance tasks. In our previous work, we proposed a method for detecting cylindrical poles and planar plates in a point-cloud. However, it is often required to further classify pole-like objects into utility poles, streetlights, traffic signals and signs, which are managed by different organizations. In addition, our previous method may fail to extract low pole-like objects, which are often observed in urban residential areas. In this paper, we propose new methods for extracting and classifying pole-like objects. In our method, we robustly extract {{a wide variety of}} poles by converting point-clouds into <b>wireframe</b> <b>models</b> and calculating cross-sections between <b>wireframe</b> <b>models</b> and horizontal cutting planes. For classifying pole-like objects, we subdivide a pole-like object into five subsets by extracting poles and planes, and calculate feature values of each subset. Then we apply a supervised machine learning method using feature variables of subsets. In our experiments, our method could achieve excellent results for detection and classification of pole-like objects...|$|R
5000|$|In the mid 70s {{until the}} end of the 80s, E&S {{produced}} the Picture System 1, 2 and PS300 series. These unique [...] "calligraphic" [...] (vector) color displays had depth cueing and could draw large <b>wireframe</b> <b>models</b> and manipulate (rotate, shift, zoom) them in real time. They were mainly used in chemistry to visualize large molecules such as enzymes or polynucleotides. The end of the Picture System line came in the late 80s, when raster devices on workstations could render anti-aliased lines faster.|$|R
50|$|Pixelization {{has also}} been used for artistic effect, notably in the art print The Wave of the Future, a reinterpretation of Katsushika Hokusai's The Great Wave at Kanagawa. In this updated print, {{the image of the}} large ocean wave shifts from the {{traditional}} style of the Japanese woodcut print to a pixelized image and finally to a <b>wireframe</b> <b>model</b> computer graphics image. Westworld (1973) was the first feature film to use digital image processing to pixelize photography to simulate an android's point of view.|$|R
