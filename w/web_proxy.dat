341|271|Public
25|$|The bug {{tracking}} software {{used by the}} ODP is Bugzilla and the {{web server}} Apache. Squid <b>web</b> <b>proxy</b> server was also used but it was removed in August 2007 when the storage servers were reorganized. All these applications are open source.|$|E
25|$|Besides content filtering, other {{imperfect}} {{methods for}} cross-site scripting mitigation are also commonly used. One {{example is the}} use of additional security controls when handling cookie-based user authentication. Many web applications rely on session cookies for authentication between individual HTTP requests, and because client-side scripts generally have access to these cookies, simple XSS exploits can steal these cookies. To mitigate this particular threat (though not the XSS problem in general), many web applications tie session cookies to the IP address of the user who originally logged in, then only permit that IP to use that cookie. This is effective in most situations (if an attacker is only after the cookie), but obviously breaks down in situations where an attacker is behind the same NATed IP address or <b>web</b> <b>proxy</b> as the victim, or the victim is changing his or her mobile IP.|$|E
2500|$|The {{original}} {{concept for}} Psiphon (1.0) {{was developed by}} the Citizen Lab at the University of Toronto, building upon previous generations of <b>web</b> <b>proxy</b> software systems, such as the [...] "Safe Web" [...] and [...] "Anonymizer" [...] systems.|$|E
40|$|World-Wide <b>Web</b> <b>proxies</b> {{are being}} {{increasingly}} {{used to provide}} Internet access to users behind a firewall and to reduce wide-area network traffic. Recent results suggest that disk I/O is increasingly becoming the limiting factor {{for the performance of}} <b>web</b> <b>proxies.</b> In this paper we study the overheads associated with disk I/O for <b>web</b> <b>proxies,</b> and propose secondary storage management alternatives that improve performance. We use a combination of experimental evaluation and simulation based on traces from busy <b>web</b> <b>proxies.</b> We show that <b>web</b> <b>proxies</b> experience significant overheads due to disk I/O. We propose several file management methods that reduce the disk I/O overhead overhead by a factor of 25 overall, resulting in a single-disk service rate that exceeds 500 (URL-get) operations per second. ...|$|R
50|$|<b>Web</b> <b>proxies</b> forward HTTP requests. Some <b>web</b> <b>proxies</b> {{allow the}} HTTP CONNECT {{to set up}} {{forwarding}} of arbitrary data through the connection; normally this is only allowed to port 443 to allow forwarding of HTTPS traffic.|$|R
40|$|For many enterprises, <b>web</b> <b>proxies</b> {{have become}} a {{performance}} critical resource for managing http traffic which at some sites currently doubles every six months. We compare the performance of two popular <b>web</b> <b>proxies,</b> "[URL] and "Squid" at heavy real workloads. In spite of their different architectures and their different complexity, we found that their performance does not differ significantly. This position paper gives an overview of our results which we present in more detail in [5]. The proxies are evaluated on their resource requirements (CPU, memory, and disk I/O), and how these requirements scale with load. The request service time and hit rate are {{used to evaluate the}} quality of service each provides. 1 Introduction While the performance of <b>web</b> <b>proxies</b> has been analyzed based on synthetic workloads, little is known about their performance on real workloads. In this paper we present the performance of two widely used public domain <b>web</b> <b>proxies</b> under real workload conditions for bo [...] ...|$|R
2500|$|In 2002 Mixter {{returned}} to the public eye, {{as the author of}} Hacktivismo's Six/Four System. The Six/Four System is a censorship resistant network proxy. [...] It works by using [...] "trusted peers" [...] to relay network connections over SSL encrypted links. [...] As an example, the distribution includes a program which will act as a <b>web</b> <b>proxy,</b> but all of the connections will be hidden until they reach the far end trusted peer.|$|E
2500|$|This attack, {{discovered}} in mid-2016, exploits {{weaknesses in the}} <b>Web</b> <b>Proxy</b> Autodiscovery Protocol (WPAD) to expose the URL that a web user is attempting to reach via a TLS-enabled web link. [...] Disclosure of a URL can violate a user's privacy, {{not only because of}} the web site accessed, but also because URLs are sometimes used to authenticate users. Document sharing services, such as those offered by Google and Dropbox, also work by sending a user a security token that's included in the URL. An attacker who obtains such URLs may be able to gain full access to a victim's account or data.|$|E
5000|$|Sun Java System <b>Web</b> <b>Proxy</b> Server, {{formerly}} Sun ONE <b>Web</b> <b>Proxy</b> Server and iPlanet <b>Web</b> <b>Proxy</b> Server ...|$|E
50|$|SOCKS also {{forwards}} arbitrary data after {{a connection}} phase, and {{is similar to}} HTTP CONNECT in <b>web</b> <b>proxies.</b>|$|R
5000|$|Integrated web services: user extensible, {{including}} {{by default}} translators, Google's cached version of pages, Whois, and anonymous <b>web</b> <b>proxies</b> ...|$|R
50|$|Google Chrome enabled TLS 1.3 for a {{short time}} before {{disabling}} it due to incompatible middleboxes such as Blue Coat <b>web</b> <b>proxies.</b>|$|R
5000|$|... iPlanet <b>Web</b> <b>Proxy</b> Server, renamed to Sun Java System <b>Web</b> <b>Proxy</b> Server ...|$|E
50|$|After {{acquisition}} of Sun Microsystems by Oracle Corporation in 2010, Sun Java System <b>Web</b> <b>Proxy</b> Server 4.0 was rebranded as Oracle iPlanet <b>Web</b> <b>Proxy</b> Server 4.0.|$|E
50|$|The Oracle iPlanet <b>Web</b> <b>Proxy</b> Server (OiWPS), {{formerly}} known as Sun Java System <b>Web</b> <b>Proxy</b> Server (SJSWPS), is a proxy server software developed by Sun Microsystems (since 2010, Oracle Corporation).|$|E
50|$|<b>Web</b> <b>proxies</b> are {{the most}} common means of {{bypassing}} government censorship, although no more than 3% of Internet users use any circumvention tools.|$|R
50|$|An {{example of}} a protocol-specific anonymizer is an {{anonymous}} remailer for e-mail. Also of note are <b>web</b> <b>proxies,</b> and bouncers for FTP and IRC.|$|R
5000|$|Other common middlebox-induced {{application}} challenges include <b>web</b> <b>proxies</b> serving [...] "stale" [...] {{or out of}} date content, and firewalls rejecting {{traffic on}} desired ports.|$|R
5000|$|<b>Web</b> <b>proxy</b> - Based on {{the popular}} Privoxy open source code, this allows setting up Seeks to operate as a <b>web</b> <b>proxy</b> which {{intercepts}} network requests for search queries and returns Seeks-based results.|$|E
50|$|Earlier {{known as}} Sun ONE <b>Web</b> <b>Proxy</b> server, the Sun Java System <b>Web</b> <b>Proxy</b> Server 4.0 {{is a major}} rewrite of the older 3.x version of Sun's Proxy server, {{formerly}} known as Netscape Proxy Server.|$|E
5000|$|<b>Web</b> <b>proxy,</b> with content {{filtering}} and antivirus (Squid, DansGuardian) ...|$|E
50|$|Site blocks can be {{circumvented}} using method trivial {{through to}} complex such as use of Tor, VPNs, site specific and general <b>web</b> <b>proxies,</b> and other circumvention techniques.|$|R
40|$|Enterprise level <b>web</b> <b>proxies</b> relay world-wide <b>web</b> traffic {{between private}} {{networks}} and the Internet. They improve security, save network bandwidth, and reduce network latency. While {{the performance of}} <b>web</b> <b>proxies</b> has been analyzed based on synthetic workloads, {{little is known about}} their performance on real workloads. In this paper we present a study of two <b>web</b> <b>proxies</b> (CERN and Squid) executing real workloads on Digital's Palo Alto Gateway. We demonstrate that the simple CERN proxy architecture outperforms all but the latest version of Squid and continues to outperform cacheless configurations. For the measured load levels the Squid proxy used at least as many CPU, memory, and disk resources as CERN, in some configurations significantly more resources. At higher load levels the resource utilization requirements will cross and Squid will be the one using fewer resources. Lastly we found that cache hit rates of around 30 % had very little effect on the requests service time. 1 Introducti [...] ...|$|R
25|$|Google Chrome set TLS 1.3 as {{the default}} version {{for a short}} time in 2017. It then removed it as the default, due to {{incompatible}} middleboxes such as Blue Coat <b>web</b> <b>proxies.</b>|$|R
5000|$|The Squid <b>Web</b> <b>Proxy</b> Cache uses Bloom filters for cache digests.|$|E
5000|$|... #Subtitle level 3: Product updates as Oracle iPlanet <b>Web</b> <b>Proxy</b> Server ...|$|E
5000|$|Oracle iPlanet <b>Web</b> <b>Proxy</b> Server 4.0 now {{supports}} the following new features: ...|$|E
50|$|To address radio jamming and Internet {{blocking}} by {{the governments}} of the countries that it broadcasts to, the RFA website contains instruction on how to create anti-jamming antennas and information on <b>web</b> <b>proxies.</b>|$|R
40|$|<b>Web</b> cache servers (<b>proxies)</b> are {{increasingly}} popular for reducing Internet traffic and improving response time. The disk subsystem {{appears to be}} a bottleneck in such servers. We present techniques for improving disk performance of <b>Web</b> <b>proxies</b> and evaluate them with simulation. The disk workload of proxies has a significant volume of new file writes. We show that directing writes to less loaded disks improves disk load balancing and the response time. Also, partitioning disks further improves the performance by directing writes to selected partitions for reducing seeks. These techniques can be implemented at application level and do not require changes in underlying OS file system. Key Words: <b>Web</b> caching, <b>proxy</b> server, disk balancing, disk partitioning, simulation. This research {{was supported in part by}} grants NSF OSR- 95 - 53368, NSF RIA IRI- 94 - 09845, and from NSF ASEND-EPSCoR 1 Introduction <b>Web</b> <b>proxies</b> are commonly used for caching Web data. Caching can often eliminate or signific [...] ...|$|R
50|$|This move has angered {{the youth}} {{of the state and}} they have resorted to using tools like Virtual Private Networks (VPNs), <b>Web</b> <b>Proxies</b> and other readily {{available}} on the internet in attempts to circumvent the ban.|$|R
5000|$|MouseHole, a {{personal}} <b>web</b> <b>proxy</b> that can rewrite the web à la Greasemonkey ...|$|E
50|$|The product {{acted as}} a <b>web</b> <b>proxy</b> and was {{compatible}} with most web browsers.|$|E
50|$|One form {{of address}} {{translation}} {{is the use}} of a dual-stack application-layer proxy server, for example a <b>web</b> <b>proxy.</b>|$|E
50|$|Using a {{combination}} of various techniques such as <b>web</b> <b>proxying</b> and port forwarding, most corporate applications can continue to function unimpeded with their data tunneled transparently between the end point and the client (via SSL-Explorer) using the HTTPS protocol.|$|R
40|$|Interception of {{software}} interaction {{for the purpose}} of introducing additional functionality or alternative behavior is a wellknown software engineering technique that has been used successfully for various reasons, including security. Software wrappers, firewalls, <b>Web</b> <b>proxies,</b> and a number of middleware constructs all depend on interception to achieve their respective security, fault tolerance, interoperability, or load balancing objectives. <b>Web</b> <b>proxies,</b> as used by organizations to monitor and secure Web traffic into and out of their internal networks, provide another important example. As more and more interactions (including personal, financial, and social) become Web-based, a number of observations can be made. First, as technology advances and public awareness of Internet security increases, an increasing portion of Web traffic is likely to be carried by Hypertext Transfer Protocol Secure (HTTPS). Second, while that will provide a level of end-to-end security, it will present a new challenge for the functions and services that rely on inspecting the content of Web traffic. Some of these services and functions will concern security, such as auditing and access control. The challenge comes from two directions: (1) the standard <b>Web</b> <b>proxies</b> of today pass the HTTPS traffic through, and (2) <b>Web</b> <b>proxies</b> are somewhat global (aggregating Web traffic from many users or applications) and agnostic to personalization to an individual user’s or an application’s context and requirement. We developed a personal proxy that is capable of handling both HTTP and HTTPS traffic, and demonstrated its use in tackling the threat of phishing attacks. This personal proxy will be a useful tool for implementing functions and services that require inspection of Web traffic content...|$|R
50|$|Tufin is {{a network}} {{security}} company {{specializing in the}} automation and acceleration of network infrastructure changes while improving security and compliance.The Tufin Orchestration Suite supports next-generation firewalls, network layer firewalls, routers, network switches, load balancers, <b>web</b> <b>proxies,</b> private and public cloud platforms and software-defined data centers.|$|R
