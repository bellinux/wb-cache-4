12|10000|Public
40|$|We {{discuss the}} sensory {{management}} strategy that {{has evolved over}} the course of our efforts to build a three degree of freedom robot capable of juggling two balls at once. A field rate stereo camera system passes estimates of the balls’ positions to a juggling algorithm that drives the robot’s joint actuators. In order to meet the stringent real-time constraints imposed by such a visual servoing task, we have found it necessary to pay increasingly careful attention to our strategy for controlling the dynamics of the camera <b>window</b> <b>management</b> <b>system.</b> The paper concludes with an initial attempt to formalize this control problem. For more information: Kod*La...|$|E
40|$|One of the {{objectives}} of the High Performance Computing and Communication Project's (HPCCP) Numerical Propulsion System Simulation (NPSS) is to provide a common and consistent way to manage applications, data, and engine simulations. The NPSS Configuration Management (CM) File Manager integrated with the Common Desktop Environment (CDE) <b>window</b> <b>management</b> <b>system</b> provides a common look and feel for the configuration management of data, applications, and engine simulations for U. S. engine companies. In addition, CM File Manager provides tools to manage a simulation. Features include managing input files, output files, textual notes, and any other material normally associated with simulation. The CM File Manager includes a generic configuration management Application Program Interface (API) that can be adapted for the configuration management repositories of any U. S. engine company...|$|E
40|$|In {{this thesis}} I present an {{interaction}} technique that augments existing mouse-based visualization applications by enabling touch interaction. Previously, this {{transition to a}} multi-touch environment was difficult because the existing mouse emulation for touch surfaces was often insufficient to provide full functionality. My {{solution to this problem}} uses on-screen virtual mice, designed not only to provide mouse capabilities but also to act as toolglasses, taking advantage of their presence on the display itself. Developed together with a touch-enabled 3 D <b>window</b> <b>management</b> <b>system,</b> my approach permits touch interaction with both the 3 D windowing environment {{as well as with the}} contents of the individual windows contained therein. I describe the implementation of my technique that augments the VisLink 3 D visualization environment to demonstrate how to enable multi-touch capabilities on all visualizations written with the popular prefuse visualization toolkit. ...|$|E
50|$|Porteus is {{preloaded}} with {{a variety}} of software that the user selects before installing. The system is downloaded only after selecting various options from a menu including one of four <b>windows</b> <b>management</b> <b>systems,</b> a browser and other features. Porteus uses a package manager utilizing slackware.|$|R
40|$|We {{would like}} to {{acknowledge}} the support of Capt. Patrick Carroll, USAF, for his contribution to the project, which helped make this report possible. We would also like to acknowledge the support and expert counsel of Bill Wood, Mario Barbacci, Len Bass, Robert Firth, and Marc Kellner of the SEI for helping to shape and clarify the ideas contained within. Thanks go also to Brad Myer of Carnegie-Mellon University for sharing his domain expertise in <b>window</b> <b>management</b> <b>systems.</b> Finally, we {{would like to}} thank the careful reviewers of a large document, specifically Le...|$|R
40|$|The {{acceptance}} of an interactive graphical computer system is crucially {{dependent on the}} quality of its user interface (UI). Human factors research shows that graphical man-machine interfaces are extremely useful and will be the dialogue form of the future. There is therefore a great interest in tools to support the design and the implementation of these interfaces. This seminar will review the following topics: a: Historical development of User Interface <b>Management</b> <b>Systems</b> (UIMS) b: Relation of User Interface Toolkits and UIDS(User interface Development Systems) /UIMS c: Integration of Graphics <b>Systems,</b> <b>Window</b> <b>Management</b> <b>systems</b> and UIDS/UIMS d: State-of-the-Art of available systems e: Future research directions, especially standardization activities, the role of AI in UI, object oriented programming for UI and interactive video...|$|R
40|$|WIN is a {{persistent}} <b>window</b> <b>management</b> <b>system</b> written in Napier 88, a strongly typed persistent language {{developed at the}} University of St Andrews. The system treats windows as independent objects which may be displayed by a window manager or retained in {{a persistent}} store as required. Because windows are not tightly bound to specific window managers, they may be reused: windows may outlive a particular invocation of the WIN system. Window managers themselves run within windows and so they may be nested to arbitrary depth. This enables a hierarchical arrangement of windows, where a window may in turn be organised by a window manager which itself displays sub-windows. The benefits of this approach are that applications which run within windows may be easily structured, and that user interface tools such as light-buttons, menus and sliders are treated uniformly as windows. This document should be referenced as...|$|E
40|$|A new {{transportable}} {{image processing}} environment is presented, {{which consists of}} a standard C interpreter (SCIL), a reconfigurable window manager, a command expander, a library handler, and an image processing library (AIM). SCIL permits rapid interactive image processing development in a higher level language (C), it offers machine compatible data structures. The library handler permits straightforward integration of external software packages and user-written functions. The interpreter {{is equipped with a}} command expander to provide parameter checking, default handling and command control without the burden of the C punctuation. The command expander operates on a command description file which is a text file containing per routine; type, default and range or legal values of its arguments. The <b>window</b> <b>management</b> <b>system</b> provides the possibility to enter commands through menus and dialogue boxes. The menus and dialogue boxes are reconfigurable and automatically generated from the command description file. AIM is an example of an external library, it consists of a collection of basic, fast image processing operations...|$|E
40|$|We {{present the}} Rizzo, a multi-touch virtual mouse {{that has been}} {{designed}} to provide the fine grained interaction for information visualization on a multi-touch table. Our solution enables touch interaction for existing mouse-based visualizations. Previously, this transition to a multi-touch environment was difficult because the mouse emulation of touch surfaces is often insufficient to provide full information visualization functionality. We present a unified design, combining many Rizzos that have been designed not only to provide mouse capabilities but also to act as zoomable lenses that make precise information access feasible. The Rizzos and the information visualizations all exist within a touch-enabled 3 D <b>window</b> <b>management</b> <b>system.</b> Our approach permits touch interaction with both the 3 D windowing environment {{as well as with the}} contents of the individual windows contained therein. We describe an implementation of our technique that augments the VisLink 3 D visualization environment to demonstrate how to enable multi-touch capabilities on all visualizations written with the popular prefuse visualization toolkit. ...|$|E
40|$|<b>Window</b> <b>management</b> <b>systems</b> are {{now used}} {{extensively}} for user interfaces to computer systems. In particular, X 11 {{has come to}} dominate the workstation market as a widely accepted industry standard on many different hardware platforms. However, no formal standard currently exists for this window system, {{both in terms of}} an international standards body (although this is being addressed), and in terms of a precise (mathematical) specification of what the interface is intended to do. This paper advocates the use of a formal notation to describe such an important system to avoid ambiguity and undesired or unintended variations between different implementations of the same system. The formal notation used for demonstration purposes, Z, is based on set theory, and has been developed at th...|$|R
50|$|The <b>Windows</b> power <b>management</b> <b>system</b> {{is based}} upon an idle timer. If the {{computer}} is idle for longer than the preset timeout then the PC may be configured to sleep or hibernate. The user may configure the timeout using the Control Panel. Windows uses a combination of user activity and CPU activity to determine when the computer is idle.|$|R
40|$|Mohammed Azmeer Hassana Farwin {{developed}} a <b>Windows</b> based Hospital <b>Management</b> <b>System</b> for Matale Hospital. The fundamental {{objective of this}} project is to develop an a <b>Windows</b> based Hospital <b>Management</b> <b>System</b> that automate and simplify the Entire process of the organization. The project there for including the programming of main functions focuses on the user interface development the implementation of latest technologies. In conclusion the project achieve an purpose both in target of achieving objectives of founding a user friendly system for conventional ideas or activities for system users and giving enhancement in maintainability and expendability aspect...|$|R
40|$|Information {{spaces are}} virtual workspaces that help us manage {{information}} by mapping {{it to the}} physical environment. This widely influential concept has been interpreted {{in a variety of}} forms, often in conjunction with mixed reality. We present Ethereal Planes, a design framework that ties together many existing variations of 2 D information spaces. Ethereal Planes is aimed at assisting the design of user interfaces for next-generation technologies such as head-worn displays. From an extensive literature review, we encapsulated the common attributes of existing novel designs in seven design dimensions. Mapping the reviewed designs to the framework dimensions reveals a set of common usage patterns. We discuss how the Ethereal Planes framework can be methodically applied to help inspire new designs. We provide a concrete example of the framework’s utility during the design of the Personal Cockpit, a <b>window</b> <b>management</b> <b>system</b> for head-worn displays. Author Keywords Information spaces; mixed reality; design framework; head-worn displays; spatial user interface...|$|E
40|$|Software {{architecture}} {{analysis methods}} aim {{to predict the}} quality of a system before it has been developed. In general, the quality of the architecture is validated by analyzing the impact of predefined scenarios on architectural components. Hereby, it is implicitly assumed that an appropriate refactoring of the architecture design can help in coping with critical scenarios and mending the architecture. This paper shows that there are also concerns at the architecture design level which inherently crosscut multiple architectural components, which cannot be localized in one architectural component and which, as such, can not be easily managed by using conventional abstraction mechanisms. We propose the aspectual software architecture analysis method (ASAAM) to explicitly identify and specify these architectural aspects and make them transparent early in the software development life cycle. ASAAM introduces a set of heuristic rules that help to derive architectural aspects and the corresponding tangled architectural components from scenarios. The approach is illustrated for architectural aspect identification in the architecture design of a <b>window</b> <b>management</b> <b>system...</b>|$|E
40|$|Abstract: A new {{transportable}} {{image processing}} environment is presented, {{which consists of}} a standard C interpreter (SCIL), a reconfigurable window manager, a command expander, a library handler, and an image processing library (AIM). SCIL per-mits rapid interactive image processing development in a higher level language (C), it offers machine compatible data structures. The library handler permits straightforward integration of external software packages and user-written functions. The inter-preter {{is equipped with a}} command expander to provide parameter checking, default handling and command control without the burden of the C punctuation. The command expander operates on a command description file which is a text file containing per routine; type, default and range or legal values of its arguments. The <b>window</b> <b>management</b> <b>system</b> provides the possibility to enter commands through menus and dialogue boxes. The menus and dialogue boxes are reconfigurable and automatically generated from the command description file. AIM is an example of an external library, it consists of a collection of basic, fast image processing operations...|$|E
40|$|VTGRAPH is a {{graphics}} software tool for using DEC/VT or VT compatible terminals. It allows {{the user to}} deal with computer environments which use VT terminals for <b>window</b> <b>management</b> and graphics <b>systems.</b> VTGRAPH was developed using the Re'Gis Graphics set and {{it was written in}} FORTRAN language. It provides <b>window</b> <b>management</b> and a PLOT 10 -like package plus color or shade capability...|$|R
40|$|We desired a {{platform}} for researching advanced window layout paradigms {{including the use of}} constraints. Typical <b>window</b> <b>management</b> <b>systems</b> are written entirely in C or C++, complicating extensibility and programmability. Because no existing window manager was well-suited to our goal, we developed the Scwm window manager. In Scwm, only the core window-management primitives are written in C {{while the rest of the}} package is implemented in its Guile/Scheme extension language. This architecture, first seen in Emacs, enables programming substantial new features in Scheme and provides a solid infrastructure for constraint-based window layout research and other advanced capabilities such as voice recognition. We have used Scwm to implement an interface to the Cassowary constraint solving toolkit to permit end users to declaratively specify relationships among window positions and sizes. The window manager dynamically maintains those constraints and lets users view and modify them. Scwm succeed [...] ...|$|R
40|$|The desktop metaphor {{demonstrates}} {{the utility of}} spatial separation of tasks. Room With a View (RWAV) extends this metaphor to make greater use of three dimensional spatial layouts and gestures. In this multi-surface user interface metaphor, the work surfaces, such as walls, shelves and tables, are projected with icons of books, files, etc. These icons represent information and other interactive media. Documents or drawings are displayed on a high resolution active blackboard, or on hand-held clipboard-sized interaction surfaces called ViewBoards. The user moves around the information space by gesturing with ViewBoards or blackboard chalk. RWAV's goal is to improve interaction with large amounts of spatially organized information. Abstract ii Room With A View Background The desktop metaphor, introduced on the Xerox Alto computer [14], has since been embodied {{in a variety of}} <b>window</b> <b>management</b> <b>systems.</b> A basic premise of the metaphor is that we engage in a variety of tasks during the [...] ...|$|R
40|$|Currently, {{designers}} of 2 D graphics applications {{have to deal}} with several (and unfortunately incompatible) standards for device independent driving of graphics hardware, both issued from standardization institutes (e. g. ISO, ANSI) as well as enforced by successful software packages. The differences between the various interfaces with the two most important being the CGI (short for Computer Graphics Interface [ISO 91 b]) from ISO and the X Window System [SG 86, O'R 90] from the UNIX community are responsible for both high production and high maintenance costs thus creating the demand for a uniform and powerful graphics interface. As the harmonization of CGI and a <b>window</b> <b>management</b> <b>system</b> like X Window might be a good solution for a wide area of graphics applications, a virtual graphics device interface [...] - called CGI ++ [...] - has been defined to drive both CGI and X Window type output devices. CGI ++ implements a subset of CGI closely related to CGI Advanced 1 -Way Output Profile, but wit [...] ...|$|E
40|$|Synchronous {{collaborative}} environments {{can provide}} an identical visual and operable working area among geographically separated participants. There are two basic approaches for providing a shared workspace. The first one, collaborative-aware approach, relies {{on the development of}} collaborative-aware applications that directly support multiple simultaneously active user inputs and synchronization of outputs to all participants. The second one, collaborative-unaware approach, introduces some intermediate layers between existing single-user applications and the underlying <b>window</b> <b>management</b> <b>system.</b> These layers enable single-user applications to be shared transparently. In order to reuse the large amount of existing single-user applications, most users choose the collaborative-unaware approach. However, to build collaborative-unaware systems to share single-user applications transparently is a great challenge. This thesis describes the design and implementation of some transparent synchronous collaborative tools. They are: (1) the latecomer support for Java applications, Java applets and JMF players; (2) the client synchronization to minimize data transmission latency; (3) the light-weight multi-session support to let different collaboration groups work {{at the same time and}} (4) the collaborative VRML viewer to integrate the blaxxun 3 D VRML viewer with collaboration systems. These tools optimize existing transparent synchronous collaboration systems and make them more realistic, more complete and more generic...|$|E
40|$|A new {{approach}} to presenting Air Traffic Control (ATC) situation information to controllers has been devised and implemented. The approach allows the controller {{to spend more time}} analyzing traffic trends by decreasing the effort required to issue flight vectors; increases the amount of information available to the controller through the situation display; improves the presentation of altitude information; and interfaces the controller with an improved ground-to-air communication system. These objectives necessitated the use of a raster display device; the particular hardware used for the implementation was a Digital Equipment Corporation (DEC) VAXstation- 100 display. Although the VAXstation- 100 machine was adequate for the task, the effort identified shortcomings of raster display technology that must be rectified before raster machines may be used for ATC applications. In particular, the <b>window</b> <b>management</b> <b>system</b> should handle non-rectangular bitmaps. The use of a positional entry device (PED) was found to be beneficial in accessing the functions of the advanced display, and in alleviating controller workload by reducing the amount of verbal controller-pilot communication. It was found that the functions specified above can be implemented on existing hardware, but that the functions require large computational resources to operate in real time. More data are needed before the benefits of the functions can be quantified. June, 1985 Also issued as an M. S. thesis, Massachusetts Institute of Technology, Dept. of Aeronautics and Astronautics, 1985 Includes bibliographical references (leaf 63...|$|E
50|$|The Goverlan Administration & Diagnostics tool {{integrates}} into an existing Active Directory (AD) organization unit (OU) structure for <b>Windows</b> <b>Systems</b> <b>management.</b> Goverlan can perform remote administration {{on a single}} machine, group of machines, or entire domain. Goverlan is compatible with VDI, RDP, and Citrix deployments.|$|R
40|$|Most {{windowing}} systems {{follow the}} independent overlapping windows approach, which {{emerged as an}} answer to the needs of early computer users. Due to advances in computers, display technology, and increased information needs, modern users demand more functionality from <b>window</b> <b>management</b> <b>systems.</b> We propose Elastic Windows with improved spatial layout and rapid multi-window operations as an alternative to current <b>window</b> <b>management</b> strategies. In this approach, multi-window operations are achieved by issuing operations on window groups hierarchically organized in a space-filling tiled layout similar to TreeMaps. 1 Sophisticated multiwindow operations have been developed to handle fast task-switching and to structure the work environment of users to their rapidly changing needs. We claim that these multi-window operations and the tiled spatial layout dynamics decrease the cognitive load on users by decreasing the number of window operations. This paper describes the Elastic Windows interface in detail and then presents a user study conducted to compare the performance of 12 users with Elastic Windows and traditional Independent Overlapping Windows. User performance was measured in terms of task environment setup, switching, and task execution for 2, 6, and 12 window situations. Elastic Windows users had statistically significantly faster performance for all tasks in 6 and 12 window situations. These results suggest promising possibilities for multiple window operations and hierarchical nesting, which {{can be applied to the}} next generation of tiled as well as overlapped window managers. © 1998 John Wiley & Sons, Ltd. key words: window management; multi-window operations; hierarchical windows; personal role management; World Wide Web; windowing system evaluatio...|$|R
40|$|This thesis {{falls into}} a field of user {{interface}} design. It focuses on tangible user interfaces which utilize a camera and projector to augment physical objects with a digital information. It also includes description of calibration of those devices. The primary object of this thesis is the implementation of an augmented user interface for application <b>windows</b> <b>management.</b> The <b>system</b> consists of a stationary camera, overhead projector and movable tangible objects - boards. The boards are equipped with fiducial markers, {{in order to be}} tracked in a camera image. The projector displays the conventional desktop onto the table and the tangible objects. For example, application windows can be projected onto some boards, while the windows move and rotate simultaneously with the boards...|$|R
40|$|W. M. S. D Eregoda {{developed}} a <b>windows</b> based Office <b>Management</b> Information <b>System</b> for Audio Visual Center. The {{objective of this}} thesis project is to develop an Office <b>Management</b> Information <b>System</b> that is in simple terms a <b>windows</b> based Office <b>Management</b> <b>System.</b> The office <b>Management</b> information <b>system</b> opting for effortlessness and inter connectedness is an example of. NET Framework 4. That emphasize on information sharing, inter operability and user centered design. This project therefore including the programming of main function focuses on the user interface development the implementation of. NET technology. In termination the project succeeded both in target of achieving objectives of beginning a user friendly entrance for mainstream windows user and giving an enhancement in maintainability and expandability aspect...|$|R
40|$|VTGRAPH {{graphics}} software tool for DEC/VT computer terminal or terminals compatible with it, widely used by government and industry. Callable in FORTRAN or C language, library program enabling user {{to cope with}} many computer environments in which VT terminals used for <b>window</b> <b>management</b> and graphic <b>systems.</b> Provides PLOT 10 -like package plus color or shade capability for VT 240, VT 241, and VT 300 terminals. User can easily design more-friendly user-interface programs and design PLOT 10 programs on VT terminals with different computer systems. Requires ReGis graphics set terminal and FORTRAN compiler...|$|R
40|$|Degree of Bachelor of Science in Information Technology for Management StudiesGWB Charitha Gabadaeg {{developed}} a windows base Assessment tax <b>management</b> information <b>system</b> for Assessment tax department of Medirigirigiriya Pradeshiya Sabhawa. Object {{of this project}} {{is to develop a}} <b>Windows</b> base <b>Management</b> Information <b>System</b> to make an easy in all activities involve in the Assessment Tax Department of Medirigiriya pradeshiya sabhawa. In under given project report the researcher will describe step by step about how he identifies drawbacks of the system and how the researcher chose methodologies to solve identified problem. Next the researcher has included static user interface design and dynamic design of his system by using diagrams. Finally the researcher has included future improvement for developed system and he has included a user manual for using the system. The researcher on his point of view has achieved the objective of the project, and the project ultimate goal to develop a user friendly assessment Tax <b>Management</b> Information <b>System</b> for Medirigiriya Pradeshiya Sabhawa...|$|R
5000|$|WMI - The <b>Windows</b> <b>Management</b> Instrumentation {{technology}} {{is used by}} Goverlan to expose agent-free <b>systems</b> <b>management</b> services to <b>Windows</b> <b>systems.</b>|$|R
40|$|Abstract—Multimedia {{communication}} like {{voice and}} video calls over IP or Video on Demand grows in popularity today [1], [2]. However, {{the development of}} such applications is a complex and error-prone process, as only basic framework support is available. In this paper we introduce RAPIX, a plug-in based Rich Internet Application (RIA) that eases this development. Furthermore, our web-based approach supports {{a wide range of}} devices enabling even mobile phones for multimedia commu-nication. We prove our concept with a prototype implementation based on the Rich AJAX Platform [3] enriched with Adobe Flash to support multimedia playback and access audio and video capture from the web browser. This enables RAPIX to cope with multiple, hot pluggable applications and takes the complexity of the web browser integration off the application programmer. Common functionality like <b>window</b> <b>management,</b> a notification <b>system,</b> and a generic resource list are integrated as well. I...|$|R
40|$|VTGRAPH is a {{graphics}} software tool for DEC/VT or VT compatible terminals which {{are widely used}} by government and industry. It is a FORTRAN or C-language callable library designed to allow the user to deal with many computer environments which use VT terminals for <b>window</b> <b>management</b> and graphic <b>systems.</b> It also provides a PLOT 10 -like package plus color or shade capability for VT 240, VT 241, and VT 300 terminals. The program is transportable to many different computers which use VT terminals. With this graphics package, the user can easily design more friendly user interface programs and design PLOT 10 programs on VT terminals with different computer systems. VTGRAPH was developed using the ReGis Graphics set which provides {{a full range of}} graphics capabilities. The basic VTGRAPH capabilities are as follows: <b>window</b> <b>management,</b> PLOT 10 compatible drawing, generic program routines for two and three dimensional plotting, and color graphics or shaded graphics capability. The program was developed in VAX FORTRAN in 1988. VTGRAPH requires a ReGis graphics set terminal and a FORTRAN compiler. The program has been run on a DEC MicroVAX 3600 series computer operating under VMS 5. 0, and has a virtual memory requirement of 5 KB...|$|R
25|$|<b>Windows</b> <b>Management</b> Framework 5.0 {{includes}} updates to Windows PowerShell, Windows PowerShell Desired State Configuration (DSC), <b>Windows</b> Remote <b>Management</b> (WinRM), <b>Windows</b> <b>Management</b> Instrumentation (WMI). It {{was released}} on February 24, 2016.|$|R
5000|$|<b>Windows</b> <b>Management</b> experience: Starting with Windows Vista, drawing {{standard}} <b>window</b> <b>management</b> {{was moved}} from Windows USER to the Desktop Window Manager.|$|R
40|$|Copy-and-paste, {{one of the}} {{fundamental}} operations of modern user interfaces, can be performed through various means (e. g. using the keyboard, mouse-based direct manipulation or menus). When users copy and paste between two different windows, the process is complicated by <b>window</b> <b>management</b> tasks. In this paper, we propose two new <b>window</b> <b>management</b> techniques to facilitate these tasks in the particular case of partially overlapping windows. We describe an experiment comparing four commonly used copy-andpaste techniques under four <b>window</b> <b>management</b> conditions – non-overlapping windows, partially overlapping windows, and partially overlapping ones with one of our two <b>window</b> <b>management</b> techniques. Results show that our new <b>window</b> <b>management</b> techniques significantly reduce task completion time for all copy-and-paste techniques. They also show that X Window copy-and-paste is faster than the other three techniques under all four <b>window</b> <b>management</b> conditions...|$|R
5000|$|<b>Windows</b> <b>Management</b> Framework: <b>Windows</b> PowerShell 2.0, <b>Windows</b> Remote <b>Management</b> 2.0, BITS 4.0 ...|$|R
40|$|In {{order to}} {{efficiently}} answer continuous queries requiring range search in large stream <b>windows,</b> data stream <b>management</b> <b>systems</b> (DSMSs) need ordered indexes. Conventional DBMS indexing methods are not {{specifically designed for}} data streaming applications with extremely high insert and delete rates for windows over streams. This motivates a scalability investigation for various ordered main memory indexing methods in a streaming environment, through implementation and experiments. Our experimental studies show that a state-of-the-art implementation of cache-aware compact tries is a very suitable indexing structure for data streaming applications allowing constant time insert and access rates. However, {{in the best of}} the investigated implementation the range search was slow. Since a highly optimized implementation of compact tries is very complex we developed a framework for scalable range search in an index without any change to its source code. Another important issue is that index maintenance in window based data stream environments require a scalable way of deleting data, which is addressed by an index independent window aware bulk deletion technique, also without changing any source code. 1...|$|R
25|$|PowerShell 3.0 {{is part of}} {{a larger}} package, <b>Windows</b> <b>Management</b> Framework 3.0 (WMF3), which also {{contains}} the WinRM service to support remoting. Microsoft made several Community Technology Preview releases of WMF3. An early community technology preview 2 (CTP 2) version of <b>Windows</b> <b>Management</b> Framework 3.0 was released on 2 December 2011. <b>Windows</b> <b>Management</b> Framework 3.0 was released for general availability in December of 2012 and is included with Windows 8 and Windows Server 2012 by default.|$|R
