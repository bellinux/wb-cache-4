10000|8768|Public
5|$|A {{performance}} {{comparison of}} various Python implementations on a non-numerical (combinatorial) <b>workload</b> {{was presented at}} EuroSciPy '13.|$|E
5|$|By 1901 {{he began}} wearing toupées. His hair never grew back, but other health {{complaints}} subsided as he lightened his <b>workload.</b>|$|E
5|$|Eleven of {{the class}} have survived into {{preservation}} thanks to the high <b>workload</b> of Woodham Brothers scrapyard in Barry, Vale of Glamorgan, South Wales, which found it easier and more commercially lucrative to scrap railway wagons, keeping the more technical steam locomotives for a downturn in <b>workload.</b> Five of the surviving Merchant Navy's have run in preservation, these being: 35005, 35006, 35018, 35027 & 35028. Three of them have even run on the mainline at some points in preservation: 35005 Canadian Pacific, 35018 British India Line and 35028 Clan Line, Both 35018 and 35028 are currently mainline certified.|$|E
30|$|Realistic <b>workloads</b> are {{artificial}} <b>workloads</b> {{that are}} based on a subset of representative operations performed by real systems. Although artificial, realistic <b>workloads</b> still reflect real situations. It {{is important to note that}} realistic <b>workloads</b> are quite representative and are more portable than real <b>workloads.</b>|$|R
40|$|In recent years, {{content-based}} publish/subscribe (pub/sub) {{has become}} a popular paradigm to decouple content producers and consumers for Internet-scale content services. Many real applications show that the content <b>workloads</b> frequently exhibit very skewed distribution, and incur unbalanced <b>workloads.</b> To balance the <b>workloads,</b> the literature of content-based pub/sub adopted a migration scheme (Mis) to move (a subset of) subscription filters from overloaded brokers to under loaded brokers. In this way, the publications that successfully match the moved filters are then offloaded, leading to balanced <b>workloads.</b> Unfortunately, the Mis scheme cannot reduce the overall matching <b>workloads.</b> In the worst case, suppose that all brokers suffer from heavy <b>workloads.</b> Mis cannot find available brokers to offload the heavy <b>workloads</b> of those overloaded brokers, and fails to balance the <b>workloads.</b> To overcome the issue, the contribution {{of this paper is}} to develop a set of novel load balancing algorithms, namely a similarity-based replication scheme (Sir). The novelty of Sir is that it not only balances the <b>workloads</b> of brokers but also reduces the overall <b>workloads.</b> Based on both simulation and emulation results, the extensive experiments verify that Sir can achieve much better performance than Mis, in terms of 43. 1 % higher entropy value (i. e., more balanced <b>workloads)</b> and 46. 39 lower <b>workloads.</b> © 2013 IEEE...|$|R
30|$|Critically,[*][*]in[*][*]so[*][*]doing[*][*]we[*][*]have {{eliminated}} {{the dependence of}} the optimization problem across <b>workloads,</b> and we can optimally allocate energy across <b>workloads</b> without considering the cross product of application configurations across all <b>workloads.</b>|$|R
5|$|In 2011, the doctor-patient {{ratio in}} the state was 1:2,480 – which {{is lower than the}} World Health Organisation (WHO) {{recommendation}} of 1 doctor to 600 patients. Because of the heavy <b>workload</b> and lack of interest from younger graduates, Sabah facing the shortage of doctors. Many doctors who once served under the government hospitals have decided to move to private hospitals instead because of the heavy <b>workload</b> with low salaries in government hospitals although private hospitals won't easily recruiting them with some applications have been turned down. Thus to prevent the continuous shortage of doctors, the federal government has initiated various measure to produce more physicians with massive funds has been allocated to healthcare sector in every year country budget.|$|E
5|$|In all {{first-class}} matches, he took 86wickets at 15.68 {{and held}} onto 14 catches, fielding in the slips. There were many consecutive matches during the tour with no rest day in between, so Bradman ensured Miller and Lindwall remained fresh {{for the new}} ball bursts in the Tests by giving them a lighter <b>workload</b> during the tour matches. During all first-class matches, Johnston bowled 851.1 overs, Johnson 668, Lindwall 573.4, Toshack 502, while Miller bowled only 429.4 overs. Outside the Tests, Lindwall bowled 349.3 overs, only the fifth heaviest <b>workload</b> among the Australians in those matches.|$|E
5|$|Pick ran {{his office}} on a {{fortnightly}} cycle and his <b>workload</b> was prodigious. Barman described Pick's office as a training school for future managers, with a regular turnover of staff who {{would go on to}} management positions when Pick thought them ready.|$|E
40|$|Java <b>workloads</b> are {{becoming}} more prominent {{on a wide range}} of computing devices. In contrast to so-called traditional <b>workloads</b> written in C and Fortran, Java <b>workloads</b> are object-oriented and comprise a virtual machine. The latter includes a runtime environment with garbage collection, Just-In-Time (JIT) compilation, etc. As such, Java <b>workloads</b> potentially have different execution characteristics from traditional C or Fortran <b>workloads.</b> In this paper, we make a thorough comparison between SPEC CPU and Java <b>workloads</b> using statistical data analysis techniques and performance counters on an AMD Duren platform. In our experimental setup we use four virtual machines for the Java <b>workloads</b> running SPECjvm 98, SPECjbb 2000 and Java Grande. Our main conclusion is that Java <b>workloads</b> are significantly different from SPEC CPU and that the execution characteristics for which Java <b>workloads</b> differ from SPEC CPU, is subjective to the virtual machine; we can make a distinction between mixed-mode and compilation-only virtual machines...|$|R
40|$|Abstract. Differently from OLTP <b>workloads,</b> OLAP <b>workloads</b> {{are hardly}} {{predictable}} {{due to their}} inherently extemporary nature. Besides, obtaining real OLAP <b>workloads</b> by monitoring the queries actually is-sued in companies and organizations is quite hard. On the other hand, hardware and software benchmarking in the industrial world, as well as comparative evaluation of novel approaches in the research community, both need reference databases and <b>workloads.</b> In this paper we present CubeLoad, a parametric generator of <b>workloads</b> {{in the form of}} OLAP sessions, based on a realistic profile-based model. After describing the main features of CubeLoad, we discuss the results of some tests that show how <b>workloads</b> with very different features can be generated...|$|R
40|$|Bioinformatics {{is among}} the most active {{research}} areas in computer science. In this study, we investigate a suite of <b>workloads</b> in bioinformatics on two multiprocessor systems with different configurations, and examine the effects of the configurations on the performance of the <b>workloads.</b> Our result indicates that the configurations of the multiprocessor systems have significant impact on the performance and scalability of the <b>workloads.</b> For example, a number of <b>workloads</b> have significantly higher scalability on one of the systems, but poorer absolute performance than on the other system. However, traditional scalability failed to capture the impacts of the system configurations on the <b>workloads.</b> We present insights on what kinds of <b>workloads</b> will run faster on which systems and propose new metrics to capture the impacts of multiple processor configurations on the <b>workloads.</b> These findings not only provide an easy way to compare results running on different systems, but also enable re-configuration of the underlying systems to run specific <b>workloads</b> efficiently. We also show how processor mapping and loop spreading may help map the workoads to the underlining multiprocessor configuration and achieve consistent scalability for these <b>workloads.</b> ...|$|R
5|$|The {{variability}} in tolerance and other variable {{factors such as}} <b>workload</b> {{have resulted in the}} U.S. Navy abandoning screening for oxygen tolerance. Of the 6,250 oxygen-tolerance tests performed between 1976 and 1997, only 6 episodes of oxygen toxicity were observed (0.1%).|$|E
5|$|After 1971, {{particularly}} {{after the release}} of Fireball, Gillan started to become disillusioned with the <b>workload</b> of the band, who had not had any holiday since their initial rehearsals at Hanwell. He started drinking, and relationships between him {{and the rest of the}} band became strained, particularly with Blackmore. On 6 November 1971, he collapsed with hepatitis while waiting to board a plane in Chicago, cancelling the remainder of a US tour.|$|E
5|$|Although Charles Holden had {{gradually}} reduced his <b>workload,</b> he {{was still}} continuing {{to go into the}} office three days per week during the early 1950s. He did not formally retire until 1958, but even then he visited occasionally. Margaret Holden died in 1954 after a protracted illness which had left her nearly blind since the mid-1940s. In the last decade of his life, Holden was himself physically weaker and was looked after by his niece Minnie Green.|$|E
40|$|<b>Workloads</b> on {{general-purpose}} computing {{systems have}} changed {{dramatically over the}} past few years, with greater emphasis on emerging compute-intensive applications such as media processing and databases. However, until recently, most high performance computing studies have primarily focused on scientific and engineering <b>workloads,</b> potentially leading to designs not suitable for these emerging <b>workloads.</b> This dissertation addresses this limitation. Our key contributions include (i) the first detailed quantitative simulation-based studies of the performance of media processing and database <b>workloads</b> on systems using state-of-the-art processors, and (ii) cost-effective architectural solutions targeted at achieving the higher performance requirements of future systems running these <b>workloads.</b> The first par...|$|R
40|$|Abstract—Much recent {{research}} has focused on operating system scheduling algorithms for managing shared resource contention on chip multiprocessors (CMPs) and simultaneous multithreaded (SMT) systems. While the relevance of those algorithms is apparent for server <b>workloads,</b> it is less obvious for desktop <b>workloads.</b> As CMP/SMT processors are becoming increasingly deployed in desktops, {{it is important to understand}} whether such sophisticated algorithms are required in a desktop OS. Those algorithms would be required if desktop <b>workloads</b> exhibited sufficient parallelism, as this would imply contention for CMP/SMT shared resources which should be managed by the OS. To determine whether such parallelism is present in desktop <b>workloads,</b> we conducted a study of <b>workloads</b> by collecting live performance data from home, university staff and lab computers. We concluded that most <b>workloads</b> have low parallelism, which justifies scheduling algorithms that perform load balancing and power consumption management on lightly loaded CMP/SMT systems. Furthermore, these <b>workloads</b> do not have sufficiently high parallelism to justify performance-optimizing contention management algorithms that rely on having many runnable threads. An important implication of our findings is that more work is needed on runtime parallelization and speculative multithreading so that desktop <b>workloads</b> can benefit from CMP/SMT systems with larger degrees of parallelism. Index Terms—workload characterization, desktop <b>workloads,</b> chip multiprocessors, simultaneous multithreading. ...|$|R
40|$|Our {{increasing}} {{reliance on}} the cloud {{has led to the}} emergence of scale-out <b>workloads.</b> These scale-out <b>workloads</b> are latency-sensitive as they are user driven. In order to meet strict latency constraints, they require massive computing infrastructure, which consume significant amount of energy and contribute to operational costs. This cost is further aggravated by the lack of energy proportionality in servers. As Internet services become even more ubiquitous, scale-out <b>workloads</b> will need increasingly larger cluster installations. As such, we desire an investigation into the energy proportionality and the mechanisms to improve the power consumption of scale-out <b>workloads.</b> Therefore, in this paper, we study the energy proportionality and power consumption of clusters in the context of scale-out <b>workloads.</b> Towards this end, we evaluate the potential of power and resource provisioning to improve the energy proportionality for this class of <b>workloads.</b> Using data serving, web searching and data caching as our representative <b>workloads,</b> we first analyze the component-level power distribution on a cluster. Second, we characterize how these <b>workloads</b> utilize the cluster. Third, we analyze the potential of power provisioning techniques (i. e., active low-power, turbo and idle low-power modes) to improve the energy proportionality of scale-out <b>workloads.</b> We then describe the ability of active low-power modes to provide trade-offs in power and latency. Finally, we compare and contrast power provisioning and resource provisioning techniques. Our study reveals various insights which will help improve the energy proportionality and power consumption of scale-out <b>workloads...</b>|$|R
5|$|Coolidge {{nominated}} 17 {{judges to}} the United States Courts of Appeals, and 61 judges to the United States district courts. He appointed judges to various specialty courts as well, including Genevieve R. Cline, {{who became the}} first woman named to the federal judiciary when Coolidge placed her on the United States Customs Court in 1928. Coolidge also signed the Judiciary Act of 1925 into law, allowing the Supreme Court more discretion over its <b>workload.</b>|$|E
5|$|He {{served as}} Vice-President of the Executive Council (1909–10) and Minister for Defence (1913–14) in two {{short-lived}} Liberal governments before his appointment {{as the first}} Minister for Repatriation in 1917. He organised the new department and co-ordinated Australia's repatriation effort, and was briefly acting Prime Minister in 1919, when he settled a seamen's strike. Millen resigned from the ministry in February 1923 and died later that year, his illness attributed to his heavy <b>workload</b> in the post-war years.|$|E
5|$|His <b>workload</b> tailed {{off in the}} mid-1980s, due {{mostly to}} his own {{financial}} success. He officially retired from the music industry in 1990, but re-emerged in 2005, producing Dishwalla's self-titled fourth album. He returned {{to work with the}} Eagles on the 2007 album Long Road Out of Eden, and followed that with the 2008 solo debut of ex-Verve Pipe singer Brian Vander Ark.|$|E
50|$|Rock {{aimed at}} higher per-thread performance, higher floating-point performance, and greater SMP {{scalability}} than the Niagara family. The Rock processor targeted traditional high-end data-facing <b>workloads,</b> such as back-end database servers, {{as well as}} floating-point intensive high-performance computing <b>workloads,</b> whereas the Niagara family targets network-facing <b>workloads</b> such as web servers.|$|R
2500|$|Since {{the initial}} {{benchmarking}} {{work done in}} 2012, multiple follow-on tests have been conducted with additional database engines for both in-memory [...] and on-disk [...] <b>workloads</b> characterizing the performance across multiple CPUs and record sizes. These tests show that LMDB performance is unmatched on all in-memory <b>workloads,</b> and excels in all disk-bound read <b>workloads,</b> as well as disk-bound write <b>workloads</b> using large record sizes. The benchmark driver code was subsequently published on github and further expanded in database coverage.|$|R
50|$|Measurements {{have shown}} that the {{deadline}} I/O scheduler outperforms the CFQ I/O scheduler for certain multithreaded <b>workloads</b> and also for certain database <b>workloads.</b>|$|R
5|$|In 1989, {{a team of}} {{production}} companies adapted The Simpsons into a half-hour series for the Fox Broadcasting Company. The team included {{what is now the}} Klasky Csupo animation house. Due to the increased <b>workload</b> of the full-length episodes, production was subcontracted to South Korean animation studio AKOM. While character and background layout is done by the domestic studio, tweening, coloring and filming is done by the overseas studio.|$|E
5|$|In 1989, {{a team of}} {{production}} companies adapted The Simpsons into a half-hour series for the Fox Broadcasting Company. The team included {{what is now the}} Klasky Csupo animation house. During the years of producing the shorts, everything was created in-house. Due to the increased <b>workload</b> of the full-length episodes, production was subcontracted to South Korean animation studio AKOM. While character and background layout is done by the domestic studio, tweening, coloring, and filming are done by the overseas studio.|$|E
5|$|In 2005, the Daily Telegraph {{reported}} that documents had surfaced indicating that Speer had approved {{the allocation of}} materials {{for the expansion of}} Auschwitz after two of his assistants toured the facility on a day when almost a thousand Jews were killed. The documents bore annotations in Speer's own handwriting. Speer biographer Gitta Sereny stated that, due to his <b>workload,</b> Speer would not have been personally aware of such activities.|$|E
40|$|Abstract—Modern {{smartphones}} comprise several {{processing and}} input/output units that communicate mostly through main memory. As a result, memory represents a critical performance bottleneck for smartphones. This work 1 introduces {{a set of}} emerging <b>workloads</b> for smartphones and characterizes the performance of several memory controller policies and addressmapping schemes for those <b>workloads.</b> The <b>workloads</b> include high-resolution video conferencing, computer vision algorithms such as upper-body detection and feature extraction, computational photography techniques such as high dynamic range imaging, and web browsing. This work also considers combinations of these <b>workloads</b> that represent possible use cases of future smartphones such as detecting and focusing on people or other objects in live video. While some of these <b>workloads</b> have been characterized before, {{this is the first}} work that studies address mapping and memory controller scheduling for these <b>workloads.</b> Experimental analysis demonstrates: (1) Most of the <b>workloads</b> are either memory throughput or latency bound straining a conventional smartphone main memory system. (2) The address mapping schemes that balance row locality with concurrency among different banks and ranks are best. (3) The FR-FCFS with write drain memory scheduler performs best, outperforming some more recently proposed schedulers targeted at multithreaded <b>workloads</b> on general purpose processors. These results suggest that there is potential to improve memory performance and that existing schedulers developed for other platforms ought to be revisited and tuned to match the demands of such smartphone <b>workloads.</b> I...|$|R
40|$|This paper {{presents}} virtual asymmetric multiprocessor, a new {{scheme of}} virtual desktop scheduling on multi-core processors for user-interactive performance. The proposed scheme enables virtual CPUs to be dynamically performance-asymmetric {{based on their}} hosted <b>workloads.</b> To enhance user experience on consolidated desktops, our scheme pro-vides interactive <b>workloads</b> with fast virtual CPUs, which have more computing power than those hosting background <b>workloads</b> in the same virtual machine. To this end, we devise a hypervisor extension that transparently classifies background tasks from potentially interactive <b>workloads.</b> In addition, we introduce a guest extension that manipulates the scheduling policy of an operating system in favor of our hypervisor-level scheme so that interactive performance can be further improved. Our evaluation shows that the proposed scheme significantly improves interactive performance of application launch, Web browsing, and video playback ap-plications when CPU-intensive <b>workloads</b> highly disturb the interactive <b>workloads.</b> 1...|$|R
30|$|In this section, {{we report}} {{experiment}} results on both <b>workloads</b> of HFT applications and typical OLTP <b>workloads.</b> We demonstrate the effectiveness and practicality of PARE.|$|R
5|$|In Christmas 1979, Gillan {{was visited}} by Blackmore, who offered him the {{position}} of lead vocalist in Rainbow. Gillan declined due to the smaller <b>workload</b> the band had compared to his own. However, the pair did jam together for three nights at Marquee Club – {{the first time the}} two men had shared a stage since 1973.|$|E
5|$|In September 1945, Minton {{suffered}} a heart attack while in Washington; he was hospitalized for three months at Walter Reed Hospital. After returning to work, he was forced to rest regularly due to gradually worsening anemia, and he sought to lessen his <b>workload.</b> To further complicate his health, on August 5, 1949, Minton tripped over a stone in his yard and broke his leg. The injury forced him to walk with a cane for the remainder of his life.|$|E
5|$|Initially {{influenced}} by Elvis Presley, Gillan started and fronted several local bands in the mid-1960s, and eventually joined Episode Six when their original singer left. He first found widespread commercial success after joining Deep Purple in 1969. After an almost non-stop <b>workload,</b> {{during which time}} he recorded six albums in four years, and problematic relationships with other band members, particularly guitarist Ritchie Blackmore, Gillan resigned from the band in June 1973, having given a lengthy notice period to their managers.|$|E
40|$|This paper characterizes {{selected}} <b>workloads</b> {{of multimedia}} applications on current superscalar architectures, {{and then it}} characterizes the same <b>workloads</b> on Intel Technology. The <b>workloads,</b> including video encoding, decoding, and watermark detection, are optimized for the Intel 4 processor. One of the <b>workloads</b> is even commercially available and it performs best on the Pentium 4 processor. Nonetheless, due to the inherently sequential constitution of the algorithms, most of the modules in these well-optimized <b>workloads</b> cannot fully utilize all the execution units available in the microprocessor. Some of the modules are memorybounded, while some are computation-bounded. Therefore, Hyper-Threading Technology is a promising architecture feature that allows more CPU resources to be used at a given moment...|$|R
40|$|Work-stealing is the todays {{algorithm}} {{of choice}} for dynamic load-balancing of irregular parallel applications on multiprocessor systems. We have evaluated the algorithm’s efficiency {{on a variety of}} <b>workloads,</b> including scatter-gather <b>workloads,</b> which occur in common algorithms such as MapReduce. We have discovered that work-stealing scheduling suffers serious scalability problems with fine-grained parallelism because of contention over run-queues. We therefore propose a simple modification to the work-stealing algorithm that significantly improves its performance on scatter-gather <b>workloads,</b> without any negative impact on other types of <b>workloads.</b> 1...|$|R
40|$|Current {{multicore}} OS benchmarks do {{not provide}} <b>workloads</b> that sufficiently reflect real-world use: they typically run a single application, whereas real <b>workloads</b> consist of multiple concurrent programs. In this paper we show that this lack of mixed <b>workloads</b> leads to benchmarks that do not fully exercise the OS and are therefore inadequate at predicting real-world behavior...|$|R
