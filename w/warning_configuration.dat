3|15|Public
2500|$|The Brazilian Air Force used Trackers. They {{operated}} {{from the}} aircraft carrier NAeL [...] Both S-2A and S-2E were used (respectively as P-16A and P-16E) {{at the end of}} its service in Brazilian Air Force, one S-2T Turbo Tracker was used as a possible upgrade, but due the high costs it was canceled. However, in 2010 the Brazilian Navy contracted Marsh Aviation to convert four S-2T to Airborne Early <b>Warning</b> <b>configuration,</b> and upgrading four additional Grumman C-1 Trader for tanking and Carrier Onboard Delivery duties. The latter are scheduled to be back in service by 2015. They will operate from the successor of Minas Gerais, NAe SÃ£o Paulo.|$|E
40|$|International audienceAn {{original}} {{approach to}} multi-objective optimization is introduced, using a message-passing algorithm {{to sample the}} Pareto set, i. e. the set of Pareto-non-dominated solutions. Several heuristics are proposed and tested on a simple bi-objective 3 -SAT problem. The first one {{is based on a}} straightforward deformation of the Survey-Propagation (SP) equation to locally encode a Pareto trade-off. A simple heuristic is then tested, which combines an elimination procedure of clauses with the usual decimation of variables used in the SP algorithm, and is able to sample different regions of the Pareto-front. We study in more details the compliance of these deformed equations with basic Belief-Propagation (BP) properties. This first leads to an explicit Markov Random Field (MRF) of valid <b>warning</b> <b>configuration,</b> for which the SP equations are basic BP equations. This observation is then generalized to the multi-objective context. Numerical experiments on artificial problems up to 100000 variables are presented and discussed...|$|E
50|$|The Brazilian Navy {{contracted}} Marsh Aviation {{to convert}} four S-2T Turbo Trackers to an airborne early <b>warning</b> (AEW) <b>configuration,</b> and four more for tanking and Carrier Onboard Delivery duties.|$|R
50|$|The aircraft's Take-off {{warning system}} horn was not {{heard on the}} CAM channel of the CVR. It is {{possible}} that the take-off <b>configuration</b> <b>warning</b> was not sounding.|$|R
5000|$|There {{is also an}} {{implicit}} [...] "unconfigured" [...] or [...] "default" [...] configuration of Log4j, that of a Log4j-instrumented Java application which lacks any Log4j configuration. This prints to stdout a warning that the program is unconfigured, and the URL to the Log4j web site where details on the <b>warning</b> and <b>configuration</b> may be found. As well as printing this warning, an unconfigured Log4j application will only print ERROR or FATAL log entries to standard out.|$|R
40|$|Numerous new {{flight deck}} <b>configurations</b> for caution, <b>warning,</b> and alerts can be conceived; yet testing them with human-in-the-Ioop {{experiments}} to evaluate each {{one would not}} be practical. New sensors, instruments, and displays are being put into cockpits every day and {{this is particularly true}} as we enter the dawn of the Next Generation Air Transportation System (NextGen). By modeling pilot behavior in a computer simulation, an unlimited number of unique caution, <b>warning,</b> and alert <b>configurations</b> can be evaluated 24 / 7 by a computer. These computer simulations can then identify the most promising candidate formats to further evaluate in higher fidelity, but more costly, Human-in-the-Ioop (HITL) simulations. Evaluations using batch simulations with human performance models saves time, money, and enables a broader consideration of possible caution, <b>warning,</b> and alerting <b>configurations</b> for future flight decks...|$|R
40|$|This report {{contains}} the flight-test {{results of the}} stalling characteristics measured during the flying-qualities investigation of the Lockheed P- 8 OA airplane (Army No. 44 - 85099). The tests were conducted in straight and turning flight with and without wing-tip tanks. These tests showed satisfactory stalling characteristics and adequate stall <b>warning</b> for all <b>configurations</b> and conditions tested...|$|R
50|$|As the {{aircraft}} climbed, the pressure inside the cabin gradually decreased. As it passed through {{an altitude of}} 12040 ft, the cabin altitude warning horn sounded. The warning should have prompted the crew to stop climbing, but it was misidentified by the crew as a take-off <b>configuration</b> <b>warning,</b> which signals that {{the aircraft}} is not ready for take-off, and can only sound on the ground.|$|R
40|$|The Windshear Training Aid {{promulgated by}} the Federal Aviation Administration (FAA) defines the {{practical}} recovery maneuver following a microburst encounter as application of maximum thrust accompanied by rotation to an aircraft-specific target pitch attitude. In {{search of a}} simple method of determining this target, appropriate {{to a variety of}} aircraft types, a computer simulation was used to explore the suitability of a pitch target equal in numerical value to that of the angle of attack associated with stall <b>warning.</b> For the <b>configurations</b> and critical microburst shears simulated, this pitch target was demonstrated to be close to optimum...|$|R
40|$|This {{study was}} {{designed}} to investigate effects of different display configuration designs. Nineteen drivers completed a driving simulator study designed to resemble normal driving. Driving performance, glance behaviour, physiological measures, and task completion times was measured for two display configuration designs both during driving only and during driving with a simple secondary task, which consisted of detection, and off-setting of presented <b>warnings.</b> The display <b>configuration</b> design with more centrally placed information, e. g. the HUD and HDD, had less detrimental effects on driving performance and glance behaviour. The physiological measures showed, however, no significant differences between display configuration designs...|$|R
5000|$|Shortly {{after the}} cabin {{altitude}} warning sounded, the captain radioed the Helios operations centre and reported [...] "the take-off <b>configuration</b> <b>warning</b> on" [...] and [...] "cooling equipment normal and alternate off line". He then {{spoke to the}} ground engineer and repeatedly stated that the [...] "cooling ventilation fan lights were off". The engineer (the one who had conducted the pressurization leak check) asked [...] "Can you confirm that the pressurization panel is set to AUTO?" [...] The captain, possibly experiencing {{the onset of the}} initial effects of hypoxia, disregarded the question and instead asked in reply, [...] "Where are my equipment cooling circuit breakers?". This was the last communication with the aircraft.|$|R
50|$|A Go2Sky Boeing 737-800 {{on behalf}} of Norwegian Air Shuttle, {{registration}} LN-NII performing flight DY-277 from Kristiansand to Oslo (Norway), entered Kristiansand's runway 04, began to accelerate for takeoff, the crew rejected takeoff at low speed and stopped the aircraft after about 230 meters due to a takeoff <b>configuration</b> <b>warning.</b> The crew mistakenly shut down both engines, which caused all electrics to shut down as well including cabin lighting. The aircraft remained in position for about 5 minutes and at this time the cabin crew walked the aisles to calm passengers. The flight attendants from Norwegian Air Shuttle expected another call by the cockpit crew to take their seats prior to takeoff, however, suddenly the engines accelerated for takeoff and the aircraft departed with the cabin crew rushing to their seats. The aircraft stopped the climb at FL150 (usual cruise level FL260) the crew received a cabin altitude warning and levelled off at low altitude, it was later found the air conditioning systems had not been activated.|$|R
40|$|Security and {{confidentiality}} of data on computer networks is currently a problem that continues to grow. Installation of firewalls, antivirus, IDS (Intrusion Detection System) / IPS (Intrusion Prevention System) and various other security applications often require the best available installation cost is not small. Open source is the best solution to address the security issues that expensive. Intrusion Detection System is a system designed to collect information about the activities in the network, analyzing information, and give a warning. Snort, Bro and Suricata is an open source Intrusion Detection System. By comparing how the installation, <b>configuration,</b> <b>warnings</b> are displayed, and the resulting information can to know {{the advantages and disadvantages}} of snort Snort, Bro and Suricata as Intrusion Detection System. There are two stages of testing, such as scanning and penetration. Phase scanning is a scan of all ports, scanning is done by using NMAP application which is found on Armitage. Stage penetration is done by using the menu hail mary which is contained in Attack tab, hail mary is used to try all the exploits against computer target. Based on Scanning and penetration process, Snort detects 926 alert, Suricata detects 1218 alerts and Bro detects 128 low alerts. Snort and Suricata ease to install and update rule, Bro requires the least amount of resources. ...|$|R
50|$|The FDR and the CVR {{were found}} {{and sent to}} Washington to be read out by the NTSB in United States. They were found in good condition; however, the team {{experienced}} difficulty reading the Cockpit Area Microphone (CAM). The team {{also found that the}} channel from the CAM was masked by hum and noise dominating the signal. There were some voices heard on the CAM track; {{there were a number of}} step changes in background noise level and character that may have been consistent with an intermittent electrical connection in the CAM wiring circuit. As a result, the team was not able to conclude that the CAM was providing input to the CVR throughout the entire 30 minutes. Such a poor quality in CVR record failure makes it impossible to find out whether the flight crews made proper take-off configuration procedures including checklist execution. However several crew words, cockpit switch activations, engine noise, and cabin chime sounds heard on the CAM channel of the CVR were typically at a volume level much lower than the standard take off warning horn of the Boeing 737-200. The typical sound of the take-off <b>configuration</b> <b>warning</b> was not heard in the CVR CAM channel. The stick-shaker warning (typically as loud as or louder than the takeoff warning horn) was also not heard on the CVR CAM channel.|$|R
40|$|Many {{analytical}} and simulation-based studies of T 6 performance in wireless environments assume an error-free and congestion-free reverse channel {{that has the}} same capacity as the forward channel. Such an assumption does not hold in many real-world scenarios, particularly in the hybrid networks consisting of various wireless LAN (WLAN) and cellular technologies. In this paper, we first study, through extensive simulations, the performance characteristics of four representativeTp schemes, namelyTm New Reno, SACK, Veno, and Westwood, under the network conditions of asymmetric end-to-end link capacities, correlated wireless errors, and link congestion in both forward and reverse directions. We then propose a new Tw scheme, calledTl New Jersey, which is capable of distinguishing wireless packet losses from congestion packet losses, and reacting accordingly. Tc New Jersey consists of two key components, the timestamp-based available bandwidth estimation(Ttim algorithm and the congestion <b>warning</b> (CW) router <b>configuration.</b> Tgu is aTJEV# 6) JJ##R 6 T algorithm that continuously estimates the bandwidth available to the connection and guides the sender to adjust its transmission rate when the network becomes congested. Ton is immune to the ACK drops as well as ACK compression. CW is a configuration of network routers such that routers alert end stations by marking all packets {{when there is a}} sign of an incipient congestion. To marking of packets by the CW-configured routers helps the sender of the Te connection to e#ectively di#erentiate packet losses caused by network congestion from those caused by wireless link errors. Our simulation results show thatTa New Jersey is able to accurately estimate the available bandwidth of the bottleneck link of an end-to-end path; an [...] ...|$|R
40|$|Improving the {{performance}} of the transmission control protocol (TCP) in wireless Internet protocol (IP) communications has been an active research area. The performance degradation of TCP in wireless and wired-wireless hybrid networks is mainly due to its lack of the ability to differentiate the packet losses caused by network congestions from the losses caused by wireless link errors. In this paper, we propose a new TCP scheme, called TCP-Jersey, which is capable of distinguishing the wireless packet losses from the congestion packet losses, and reacting accordingly. TCP-Jersey consists of two key components, the available bandwidth estimation (ABE) algorithm and the congestion <b>warning</b> (CW) router <b>configuration.</b> ABE is a TCP sender side addition that continuously estimates the bandwidth available to the connection and guides the sender to adjust its transmission rate when the network becomes congested. CW is a configuration of network routers such that routers alert end stations by marking all packets when there is a sign of an incipient congestion. The marking of packets by the CW configured routers helps the sender of the TCP connection to effectively differentiate packet losses caused by network congestion from those caused by wireless link errors. This paper describes the design of TCP-Jersey, and presents results from experiments using the NS- 2 network simulator. Results from simulations show that in a congestion free network with 1 % of random wireless packet loss rate, TCP-Jersey achieves 17 % and 85 % improvements in goodput over TCP-Westwood and TCP-Reno, respectively; in a congested network where TCP flow competes with VoIP flows, with 1 % of random wireless packet loss rate, TCP-Jersey achieves 9 % and 76 % improvements in goodput over TCP-Westwood and TCP-Reno, r [...] ...|$|R
40|$|Release notes Implementation {{of several}} time {{integration}} methods and non-linear solver schemes {{is the major}} advance in this release. We have chosen to implement a first order implicit quasi-linear system solver for the equations {{in the form of}} Máº + Kx + b = 0, where M, K, and b depend on t and x. The explicit and the implicit Euler, the Crank-Nicholson, and the BDF (second to sixth order) time integration methods are provided. For the non-linear systems, the Picard and Newton methods are available. See implementation details in the doxygen documentation. Overall stability of the code was improved with recent usage of clang's address and undefined behaviour sanitizers. Features: Added an ODE solver library that can solve transient and nonlinear problems (see [URL] Move up common Process parts from particular GroundwaterFlow process implementation. # 951, # 982 Separate Dirichlet boundary condition class implementation. # 963 Split process output and post timestep. # 998 Added pre- and postTimestep and -Iteration hooks to processes. # 1094, # 1100, # 1101 Added a new configuration tree parser Checks configuration parameters more strictly, automatically prints error/warning messages. Requires Boost >= 1. 56 because of boost::optional with move semantics. Command line argument [...] config-warnings-nonfatal that keeps OGS from terminating on <b>warnings</b> during <b>configuration</b> file parsing (errors still makes it terminate). Improved axis aligned bounding box: Is now a from the right half-open interval. Removed template from class declaration. Improved MeshLib: Class MeshElementGrid implements a grid data structure supporting search operations. Added cmake option OGS_EIGEN_DYNAMIC_SHAPE_MATRICES that makes OGS use dynamically. allocated shape matrices. Added several cmake options for selecting which element types, dimensions and orders to be built. Selecting only few element types speeds up compilation significantly. # 1092 Added a command line argument of -l for OGS cli and testrunner to specify verbosity of logging. # 1056 Added possibility to specify after which timesteps there shiuld be output. Added possibility to specify timesteps of different size for use with transient processes. ### DataExplorer and utilities Added command line tool for creating layered meshes from raster files Made OGSFileConverter as a separate library Add a new functionality to the raster file to structured grid conversion, which can now convert pixel values in user-defined scalar arrays Improved DataExplorer, which now enables the possibility to display all scalar arrays in mesh information window. Added generation of structured meshes to DataExplorer Restructured mesh creation access in DataExplorer Added a new functionality to add mesh layers to existing meshes in DataExplorer Reworked tools: CreateBoundaryConditionsAlongPolyline AddTopLayer ResetPropertyInPolygonalRegion removeMeshElements Infrastructure Minimum Boost version: 1. 56. 0. # 943 Boost requirement is now header-only. # 940 Optional support for VTK 7. # 1083 Test data is now a git submodule. # 1000 In-code defined Jenkins jobs. # 970 Use clang's address and undefined behaviour sanitizers on Jenkins now. # 958 Documentation Speed up builds with ccache, # 938 Overview of the new non-linear, transient solver in ODESolver source code documentation. Fixes Fix bugs in GeoLib: lineSegmentIntersects. Polygon::splitPolygonAtIntersection. Grid. GeoMapper: Refactoring few methods, c++ 11. # 977 Rework FileIO::GMSH interface Process geometries located other than in the x-y-plane. Respect the scaling factor for Stations. Fix memory leaks. Added/modified tests for GML-, GMS- and TetGen-files...|$|R

