35|5148|Public
50|$|DLT {{includes}} <b>Write</b> <b>Once</b> <b>Read</b> <b>Many</b> (WORM) capability.|$|E
50|$|<b>Write</b> <b>Once</b> <b>Read</b> <b>Many</b> functionality, {{useful for}} archive keeping.|$|E
5000|$|CD-R (Recordable) alias CD-WO (Write Once) alias CD-WORM (<b>Write</b> <b>Once,</b> <b>Read</b> <b>Many)</b> - {{partially}} standardized as ECMA-394 ...|$|E
40|$|Structured {{serial data}} {{is used in}} many {{scientific}} fields; such data sets consist {{of a series of}} records, and are typically <b>written</b> <b>once,</b> <b>read</b> <b>many</b> times, chronologically ordered, and read sequentially. In this paper we introduce DataSeries, an on-disk format, run-time library and set of tools for storing and analyzing structured serial data. We identify six key properties of a system to store and analyze this type of data, and describe how DataSeries was designed to provide these properties. We quantify the benefits of DataSeries through several experiments. In particular, we demonstrate that DataSeries exceeds the performance of common trace formats by at least a factor of two...|$|R
25|$|CD-R (Compact Disc-Recordable) is {{a digital}} optical disc storage format. A CD-R disc is a compact disc {{that can be}} <b>written</b> <b>once</b> and <b>read</b> {{arbitrarily}} <b>many</b> times.|$|R
5000|$|The [...] "R" [...] format DVDs can be <b>written</b> <b>once</b> and <b>read</b> {{arbitrarily}} <b>many</b> times. Thus, [...] "R" [...] format discs are {{suited to}} {{applications such as}} non-volatile data storage, audio, or video. This can cause confusion because the DVD+RW Alliance logo is a stylized 'RW'. Thus, a DVD+R disc may have the RW logo, {{but it is not}} rewritable.|$|R
50|$|There {{are three}} {{versions}} of UDO/UDO media: a True WORM (<b>Write</b> <b>Once</b> <b>Read</b> <b>Many),</b> an R/W (Re-Writable), and Compliant WORM (shreddable WORM).|$|E
50|$|The copy-on-write {{technique}} {{can be used}} {{to emulate}} a read-write storage on media that require wear leveling or are physically <b>write</b> <b>once</b> <b>read</b> <b>many.</b>|$|E
5000|$|ECMA-380: Data Interchange on 130 mm Rewritable and <b>Write</b> <b>Once</b> <b>Read</b> <b>Many</b> Ultra Density Optical (UDO) Disk Cartridges -Capacity: 60 Gbytes per Cartridge - Second Generation ...|$|E
40|$|The ECMA Technical Committee TC 31 was {{established}} in 1984 for the standardization of Optical Disk Cartridges (ODCs). Since its establishment, the Committee has made major contributions to ISO/IEC JTC 1 /SC 23 toward the development of International Standards for 90 mm, 120 mm, 130 mm and 300 mm ODCs. Numerous ODC standards have been developed by ECMA TC 31 and published as ECMA Standards, {{many of which have}} since been adopted by ISO/IEC under the fast track procedure. International Standard ISO/IEC 10885, Information technology- 356 mm optical disk cartridge for information interchange-Write once, was published in November 1993. In September 1995 ECMA TC 31 established a project to develop a standard for increased capacity 356 mm Optical Disk Cartridges- WORM, using phase change technology. The project was sponsored by four companies and work began by TC 31 in December 1995 on the first draft submitted in September, 1995. This ECMA Standard specifies the characteristics of 14, 8 and 25 Gbyte capacity 356 mm optical disk cartridges of the type providing for information to be <b>written</b> <b>once</b> and <b>read</b> <b>many</b> times. This ECMA Standard leverages off of ISO/IEC 10885 to the extent possible to preserve the existing customer's drive, library, and media investment by maintaining compatibility, wherever possible, with the earlier International Standard 10885. This ECMA Standard has been adopted by the ECMA General Assembly of June 1997. - i...|$|R
40|$|Abstract. Dynamic {{information}} flow tracking (DIFT) works by tagging (or tainting) data and tracking it {{to measure the}} {{information flow}} throughout the system. Existing DIFT systems have limited support for address and control dependencies, and therefore cannot track information flow within a full system without addressing these very challenging dependencies in an application-specific fashion. A general way to track address and control dependencies will allow DIFT to be applied in a much wider variety of applications than is now possible, ranging from data provenance to behavioral malware analysis. Tracking address and control dependencies is largely a problem of stability: if these flows of information are tagged then the tainting scheme becomes unstable and soon the entire system becomes tainted, {{but if they are}} not tagged then information that should be tainted is not. In this paper, we propose relaxed static stability dynamic information flow tracking as a way to track address and control dependencies in a general fashion without compromising stability of the DIFT system. To the best of our knowledge, the system presented in this paper is the first DIFT system to measure full-system information flow with general support for tracking all address and control dependencies within the system. As a motivating example, in this paper we measure the amount of information flow between tainted sources and the control path of the CPU for a variety of scenarios. Our results demonstrate that tracking address and control dependencies is both: (1) necessary for meaningful measurements of the information flow in a real system, and (2) made possible by a relaxed static stability approach. Besides tracking address and control dependencies, other key research challenges addressed in this paper include how to handle loop constructs and how to prevent memory locations that are <b>written</b> <b>once</b> and <b>read</b> <b>many</b> times from leading to DIFT system instability. ...|$|R
5000|$|In a 1988 April Fool's {{article in}} Compute! magazine, Atari BASIC author Bill Wilkinson {{presented}} a POKE that implemented {{what he called}} a [...] "WORN" [...] (<b>Write</b> <b>Once,</b> <b>Read</b> Never) device, [...] "a close relative of the WORM".|$|R
50|$|WORM (<b>write</b> <b>once,</b> <b>read</b> <b>many)</b> {{cartridges}} are two-tone, the {{top half}} of the shell is the normal color of that generation for that manufacturer, and the bottom half of the shell is a light gray.|$|E
5000|$|Optical storage media, such CD-ROM {{which is}} {{read-only}} (analogous to masked ROM). CD-R is <b>Write</b> <b>Once</b> <b>Read</b> <b>Many</b> (analogous to PROM), while CD-RW supports erase-rewrite cycles (analogous to EEPROM); both {{are designed for}} backwards-compatibility with CD-ROM.|$|E
50|$|<b>Write</b> <b>once</b> <b>read</b> <b>many</b> (WORM) {{describes}} a data storage device in which information, once written, cannot be modified. This write protection affords {{the assurance that}} the data cannot be tampered with once it is written to the device.|$|E
40|$|MBLC Ecma- 317. doc 24 / 01 / 01 09 : 43 Brief History Technical Committee ECMA TC 31 for Optical Disk Cartridges (ODCs) {{was set up}} in 1984. The Committee {{made major}} {{contributions}} to ISO/IEC JTC 1 /SC 23 to the development of standards for 90 mm, 120 mm, 130 mm and 300 mm ODCs, and provided camera-ready copies for most International Standards for ODCs. The following ECMA Standards for WORM (<b>Write</b> <b>Once</b> <b>Read</b> Multiple) ODCs have been published and have been adopted by ISO/IEC under the fast-track procedure. ECMA- 153 (1991) Information Interchange on 130 mm Optical Disk Cartridges of the <b>Write</b> <b>Once,</b> <b>Read</b> Multiple (ISO/IEC 11560) (WORM) Type, using the Magneto-Optical Effec...|$|R
50|$|In GFS, most {{files are}} {{modified}} by appending new data and not overwriting existing data. <b>Once</b> <b>written,</b> the files are usually only read sequentially rather than randomly, {{and that makes}} this DFS the most suitable for scenarios in which many large files are created <b>once</b> but <b>read</b> <b>many</b> times.|$|R
40|$|The Earth System Science Workbench (ESSW) is a nonintrusive data {{management}} infrastructure for researchers who {{must also be}} data publishers. An implementation of ESSW to track the processing of locally received satellite imagery is presented, demonstrating the Workbench’s transparent and robust support for archiving and publishing data products. ESSW features a Lab Notebook metadata service, a No Duplicate-Write <b>Once</b> <b>Read</b> <b>Many</b> (ND-WORM) storage service, and Web user interface tools. The Lab Notebook logs processes (experiments) and their relationships via a custom API to XML documents stored in a relational database. The ND-WORM provides a managed storage archive for the Lab Notebook by keeping unique file digests and namespace metadata, also in a relational database. ESSW Notebook tools allow product searching and ordering, and file and meta{{data management}}. 1...|$|R
5000|$|CD-R: (Compact Disc Recordable) {{was invented}} in the 1990s. Using CD-R, it is {{possible}} to write data once on a disc at home without the stamping equipment required for CD-ROMs. These are considered <b>write</b> <b>once,</b> <b>read</b> <b>many</b> disks.|$|E
5000|$|<b>Write</b> <b>once</b> <b>read</b> <b>many</b> (WORM) {{rotating}} digital {{optical storage}} media, including the 5.25 in or 3.5 in WORM disc in a protective sleeve, {{as well as}} CD-R and DVD-R. Recording methods vary for these media, which are held in jukeboxes for online and automated near line access.|$|E
5000|$|Read only storage : Retains the {{information}} stored {{at the time}} of manufacture, and write once storage (<b>Write</b> <b>Once</b> <b>Read</b> <b>Many)</b> allows {{the information}} to be written only once at some point after manufacture. These are called immutable storage. Immutable storage is used for tertiary and off-line storage. Examples include CD-ROM and CD-R.|$|E
40|$|Compression is {{becoming}} more important as more information is stored on, and transferred between computers. Some applications of compression require high throughput, such as the access to a hard disk drive or a Local Area Network. The Acorn RISC Machine (ARM) is a general purpose VLSI microprocessor with a very competitive price/performance ratio. Its architecture is particularly suitable for applications requiring frequent bitwise operations. It has been used here to construct a fast and inexpensive text decompressor. The algorithm used {{is a type of}} Ziv-Lempe! compression scheme and has the properties of good compression and a fast decode strategy. The resulting device is very fast, yet inexpensive. It can operate at the speed of Local Area Networks and hard disk drives and lends itself to applications where text is stored <b>once</b> and <b>read</b> <b>many</b> times...|$|R
5000|$|The {{algorithm}} {{above is}} not optimized {{for the implementation}} in a computer. It requires memory for [...] temporary control points [...] Each temporary control points is <b>written</b> exactly <b>once</b> and <b>read</b> twice. By reversing the iteration over [...] (counting down instead of up), we can run the algorithm with memory for only [...] temporary control points, by letting [...] reuse the memory for [...] Similarly, {{there is only one}} value of [...] used in each step, so we can reuse the memory as well.|$|R
40|$|Both GFS & HDFS are {{designed}} with similar goals: * High throughput (latency less important) - Designed for batch processing jobs, e. g., MapReduce * High capacity (large block size). Typical files> 1 GB * High scalability. Handle> 10 ^ 7 files * Reliability through replication. Treat failure as normal. Although GFS was developed first, HDFS is much simpler, and so will describe it first. HDFS Based on "write <b>once,</b> <b>read</b> <b>many</b> " model: * Each file has single writer * File fully written and closed before any reader given access Three components: * Clients. * NameNode. Single node containing all metadata about all files * DataNodes. Set of nodes that store actual file contents. * File represented as sequence of blocks of fixed size (64 or 128 MB). (Given byte offset for read, can immediately determine which block to read.) * Each block has unique block ID. * Blocks are distributed across multiple DataNodes to enable parallel access. * Blocks replicated (default 3 X) to enable recovery when DataNode fails. * When block created, NameNode decides placements- Default: two within single rack, third on a different rack- Access time / safety tradeoff. NameNode * Metadata: Information about file + plus set of block IDs + location of all replicas of all blocks * Treats each FS operation as transaction- Maintains all information in memory- Logs to EditLog file- (Possibly outdated) backup copy stored on disk. - Can bring this copy up to date by replaying entries in EditLog * Periodic checkpoint:- Apply transactions in editlog to disk image- Delete old parts of editlog- Can do in background while other updates occuring. - Does not store locations of replicas * Tries to satisfy given read request with nearby DataNod...|$|R
5000|$|One of the {{earliest}} flash file systems was Microsoft's FFS2, for use with MS-DOS, released in autumn 1992. FFS2 was preceded by an earlier product, called [...] "FFS", which however fell short of being a flash file system, managing a flash array as <b>write</b> <b>once</b> <b>read</b> <b>many</b> (WORM) space {{rather than as a}} freely writable disk.|$|E
5000|$|USB {{support in}} the BIOS' boot menu (although {{there are ways to}} get around this; actual use of a CD or DVD can allow the user to choose if the medium can later be written to. <b>Write</b> <b>Once</b> <b>Read</b> <b>Many</b> discs allow {{certainty}} that the live system will be clean the next time it is rebooted.) ...|$|E
50|$|Founded in 1973, Shugart Associates was {{purchased}} by Xerox in 1977. In the early 1980s the name was changed to Shugart Corporation. Xerox exited the business in 1985 and 1986, selling the brand name and the 8-inch floppy product line to Narlinger Group (in March 1986). Narlinger promptly rebranded itself as Shugart Corporation and continued as such into the early 1990s. Under Narlinger management, Shugart acquired several discontinued product lines such as the Optotech 5984 <b>Write</b> <b>Once</b> <b>Read</b> <b>Many</b> (WORM) drive.|$|E
40|$|We {{propose a}} novel string search {{algorithm}} for data stored <b>once</b> and <b>read</b> <b>many</b> times. We encode the data records coming for storage into their cumulative algebraic signatures. We define two variants of our algorithm that we analyse theoretically and experimentally. The experiments compares {{the speed of}} our algorithm to the Boyer-Moore scheme, usually the fastest method known. Our search was up to a seventy times faster for DNA data, up to eleven times faster for ASCII, and up to a six times faster for XML documents. Our method applies to databases in general and to scalable distributed data structures, P 2 P and grid systems used for the Database as Service (DAS) context especially. The client sends the data for storage at the (remote) servers encoded. The servers match the stored data for the pattern requested by the client without decoding. No local user can then involuntarily discover {{the content of the}} stored data. 1...|$|R
40|$|We {{propose a}} novel string search {{algorithm}} for data stored <b>once</b> and <b>read</b> <b>many</b> times. Our search method combines the sublinear traversal {{of the record}} (as in Boyer Moore or Knuth-Morris-Pratt) with the agglomeration of parts of the record and search pattern into a single character – the algebraic signature – {{in the manner of}} Karp-Rabin. Our experiments show that our algorithm is up to seventy times faster for DNA data, up to eleven times faster for ASCII, and up to a six times faster for XML documents compared with an implementation of Boyer-Moore. To obtain this speed-up, we store records in encoded form, where each original character is replaced with an algebraic signature. Our method applies to records stored in databases in general and to distributed implementations of a Database As Service (DAS) in particular. Clients send records for insertion and search patterns already in encoded form and servers never operate on records in clear text. No one at a node can involuntarily discover the content of the stored data. 1...|$|R
40|$|Anna Rutherford <b>once</b> <b>wrote,</b> <b>reading</b> the {{literature}} of the Commonwealth, the “regenerative spirit is stressed, a link is established between the old world and the new. It is precisely the attention paid to the regenerative spirit that characterises the essays assembled in these two volumes, papers read at several conferences organised by the Centre for Research in the New Literatures in English (CRNLE) and the School of Humanities at Flinders University in Adelaide. Dedicated to Rutherford’s memory and to honour her as an outstanding pioneer in Commonwealth Literature / New Literatures in English / Post-colonial studies, the two collections address themes of exile and migration, dislocation, diasporan and cross-cultural writing...|$|R
50|$|Early drives are 130 mm {{and have}} the size of full-height 130 mm hard-drives (like in the IBM PC XT). 130 mm media looks similar to a CD-ROM {{enclosed}} in an old-style caddy, while 90 mm media {{is about the size}} of a regular 3½-inch floppy disk, but twice the thickness. The cases provide dust resistance, and the drives themselves have slots constructed in such a way that they always appear to be closed. Original MO systems were WORM (<b>write</b> <b>once,</b> <b>read</b> <b>many),</b> and later systems were read/write.|$|E
50|$|Jukeboxes {{are used}} in {{high-capacity}} archive storage environments such as imaging, medical, and video. Hierarchical storage management is a strategy that moves little-used or unused files from fast magnetic storage to optical jukebox devices in a process called migration. If the files are needed, they are migrated back to magnetic disk. Optical disc libraries are also useful for making backups and in disaster recovery situations. Today {{one of the most}} important uses for jukeboxes is to archive data. Archiving data is different from backups in that the data is stored on media that will last up to 100 years. The data is usually written on <b>Write</b> <b>Once</b> <b>Read</b> <b>Many</b> (WORM) type discs so it can not be erased or changed.|$|E
50|$|New for LTO-3 was <b>write</b> <b>once</b> <b>read</b> <b>many</b> (WORM) capability. This is {{normally}} only useful for legal record keeping. An LTO-3 or later drive will not erase or overwrite {{data on a}} WORM cartridge, but will read it. A WORM cartridge is identical to a normal tape cartridge of the same generation with the following exceptions: the cartridge memory identifies it to the drive as WORM, the servo tracks are slightly different to allow verification that data has not been modified, {{the bottom half of}} the cartridge shell is gray, and it may come with tamper-proof screws. WORM-capable drives immediately recognize WORM cartridges and include a unique WORM ID with every dataset written to the tape. There is nothing different about the tape medium in a WORM cartridge.|$|E
25|$|Princess Galyani Vadhana {{had liked}} {{reading and writing}} from an early age. While {{studying}} Prathom 1 to Prathom 3, she <b>read</b> as <b>many</b> Thai language books as she could find. However, children’s books in Thai were then rare so she often read the newspaper. She remembered <b>once</b> <b>reading</b> {{a story in the}} original French—the 1878 novel Sans Famille—while studying in Switzerland, which she later found again.|$|R
5000|$|UDO Compliant <b>Write</b> <b>Once</b> {{media has}} the same {{operational}} properties as UDO True <b>Write</b> <b>Once</b> media but with one clear and important difference. Through {{the use of a}} specially designed “shred” operation, individual records written to Compliant <b>Write</b> <b>Once</b> media can be destroyed once their retention period expires. The shred function is controlled at an application level and operates only on Compliant <b>Write</b> <b>Once</b> media.|$|R
5000|$|The UDO True <b>Write</b> <b>Once</b> format uses a {{different}} phase change recording surface than the Rewritable media. Unlike Rewritable media, the <b>write</b> <b>once</b> recording surface cannot be erased or altered, making <b>Write</b> <b>Once</b> {{the most stable}} in terms of data integrity, because the physical record is kept authentic. This level of data integrity is not usually matched by other magnetic disc or tape technologies using normal <b>write</b> <b>once</b> emulation.|$|R
