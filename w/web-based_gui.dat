50|12|Public
50|$|It also {{features}} a <b>web-based</b> <b>GUI.</b>|$|E
50|$|The system {{provides}} REST API, CLI and an extensible, dynamic <b>web-based</b> <b>GUI.</b>|$|E
5000|$|A <b>web-based</b> <b>GUI</b> for system {{management}} (making {{use of a}} generic, XML management interface) ...|$|E
30|$|The {{reference}} model defines entities for key functionality {{and relationships}} between them. The major first entity of the reference model are ‘virtual workspaces’ {{that represents a}} kind of ‘workbench’ where services and resources are conveniently accessed. This entity is illustrated in Figure 3 as a virtual overlay of the backend functionality existing at data centers. It is accessed via lightweight <b>Web-based</b> <b>GUIs</b> as shown in Figure 2.|$|R
40|$|Building {{a product}} modeller/configurator tool The OpenConfigurator tool is a {{modelling}} and configuration tool {{that attempts to}} combine the world of Feature Modeling with that of highly usable and interactive <b>web-based</b> <b>GUI’s.</b> The tool is fully browser-based, providing a visual modelling experience through a native SVG implementation. It also provides a configurator part with an interactive GUI where users are given real-time feedback by an engine based on Microsoft’s Z 3 SMT solver. To date, the rich visual modelling interface implemented as a browser application, {{as well as the}} feedback provided by the integration to an SMT solver are both novel...|$|R
5000|$|Proxmox Virtual Environment an {{open-source}} virtualization management package including KVM and LXC. It has a bare-metal installer, a <b>web-based</b> {{remote management}} <b>GUI,</b> a HA cluster stack, unified storage, flexible network, and optional commercial support.|$|R
50|$|The {{registry}} accredits both Namibian {{and foreign}} registrars. Registrars access the Registry and register domains using either a <b>web-based</b> <b>GUI</b> or {{the industry standard}} EPP protocol.|$|E
50|$|The BNode exposes its {{services}} through a SOAP web-service application programming interface. A Java Server Pages (JSP) <b>web-based</b> <b>GUI</b> is {{provided for the}} administrative tasks including configuration of the network settings, security, and user management.|$|E
50|$|Smoothwall {{is also a}} Linux {{distribution}} {{designed to}} be used as an open source firewall. Designed for ease of use, Smoothwall is configured via a <b>web-based</b> <b>GUI,</b> and requires very little or no knowledge of Linux to install or use.|$|E
40|$|Event-driven {{software}} is very diverse, e. g., {{in form of}} Graphical User Interfaces (GUIs), Web applications, or embedded software. All EDS take sequences of events (e. g., messages and mouse-clicks) as input, change their state, and produce an output(e. g., events, system calls, and text messages) Regardless of the application, the challenges for testing event-driven software are similar. Most event-driven systems allow {{a huge number of}} possible event sequences, which makes exhaustive testing infeasible. In this paper, we propose several new test suite prioritization strategies for <b>web-based</b> applications and <b>GUI</b> applications. Further, examine whether these strategies can improve the rate of fault detection for <b>web-based</b> and <b>GUI</b> applications and their preexisting test suites. We prioritize test suites by test lengths, frequency of appearance of request sequences, and systematic coverage of parameter-values and their interactions. This paper extends the single model to generalized prioritization criteria that combine several criteria and result more effective test order...|$|R
40|$|Abstract. Next-generation network (NGN) is a {{new concept}} and {{becoming}} important for future telecommunications networks. This paper illustrates five function layers of NGN architecture and discusses some end-to-end QoS (quality of service) for NGN (called NGNQoS) as: (1) One Application Layer that supports SIP protocol; (2) Network Control Layer that aims at overcoming the bottleneck problem at edge nodes or servers for end-to-end admission control; (3) Adaptation Layer that supports different network configurations and mobility; (4) Network Transmission Layer that provides end-to-end QoS controls for real-time communications through integrating DiffServ and MPLS and (5) Management Layer that provides <b>Web-based</b> client-server <b>GUI</b> browser and wireless information connection. ...|$|R
40|$|Tell now we {{have seen}} only the use case, {{collaboration}} diagrams, and VLC/UI design process. The main goal of VLC/UI is to display and obtain needed information from the source. Whereas the Low Level Design has not yet clear for web based interactions. In this paper we proposed {{a new type of}} design using sequence diagram for web based design on browser side. UI also has to tell us how to complete the interfacing task. Say it uses Apache as web server to interact between <b>Web-based</b> main <b>GUI</b> on client side. The application of this concept is applicable to entire web based software development, Website development. Real time application like banking maintenance, library maintenance…etc our concept gives more reliable result...|$|R
50|$|IQ Insight is a {{suite of}} {{applications}} that gathers, analyzes and presents KPIs generated by MSIP through a <b>web-based</b> <b>GUI</b> (graphical user interface). The application delivers data through a geospatial or tabular view of issues (such as dropped calls or no-service conditions) and allows cross-domain analysis of KPIs.|$|E
5000|$|The Remote Management level enables remote {{applications}} {{to access the}} MBeanServer through connectors and adaptors. A connector provides full remote access to the MBeanServer API using various communication (RMI, IIOP, JMS, WS-* …), while an adaptor adapts the API to another protocol (SNMP, …) or to <b>Web-based</b> <b>GUI</b> (HTML/HTTP, WML/HTTP, …).|$|E
5000|$|FIM 2010 {{utilizes}} Windows Workflow Foundation concepts, using transactional workflows {{to manage}} and propagate changes to a user's state-based identity. This {{is in contrast to}} most of the transaction-based competing products that do not have a state-based element. Administrators not only can create workflows with the <b>web-based</b> <b>GUI</b> of ILM 2 portal but also include more complex workflows designed outside of the portal by importing XAML files ...|$|E
40|$|The {{objective}} of this thesis was to construct and analyze scalability {{of a system that}} handles notification messages between customers and dealers in an e-commerce system. The communication methods analyzed in this thesis are e-mail, fax and SMS. The SMS functionality was analyzed, but not implemented due to cost reasons. The system contains a <b>web-based</b> administration <b>GUI,</b> which allows a system administrator to set user preferences, extract information from log database, and to create invoice data. An analysis of how system scalability affects delivery time pointed out that the main limitation was the time consumption used for connecting and sending a fax. Security problems with unencrypted GET requests were identified, and the suggested solution was to have an encrypted login page. Advantages and drawbacks for different platforms, scripting languages and third party software were investigated. The software selected for building the application was...|$|R
40|$|Unanticipated load spikes or skewed {{data access}} {{patterns}} {{may lead to}} severe performance degradation in data serving applications, a typical problem of distributed NoSQL data-stores. In these cases, load balancing is a necessary operation. In this demonstration, we present the DBalancer, a generic distributed module that can be installed {{on top of a}} typical NoSQL data-store and provide an efficient and highly configurable load balancing mechanism. Balancing is performed by simple message exchanges and typical data movement operations supported by most modern NoSQL data-stores. We present the system’s architecture, we describe in detail its modules and their interaction and we implement a suite of different algorithms on top of it. Through a <b>web-based</b> interactive <b>GUI</b> we allow the users to launch No-SQL clusters of various sizes, to apply numerous skewed and dynamic workloads and to compare the implemented load balancing algorithms. Videos and graphs showcasing each algorithm’s effect on a number of indicative performance and cost metrics will be created on the fly for every setup. By browsing the results of different executions users will be able to grasp each algorithm’s balancing mechanisms and performance impact in a number of representative setups...|$|R
40|$|Structure, is {{a widely}} used {{software}} tool to investigate population genetic structure with multi-locus genotyping data. The software uses an iterative algorithm to group individuals into "K" clusters, representing possibly K genetically distinct subpopulations. The serial implementation of this programme is processor-intensive even with small datasets. We describe an implementation of the program within a parallel framework. Speedup was achieved by running different replicates and values of K on each node of the cluster. A <b>web-based</b> user-oriented <b>GUI</b> has been implemented in PHP, through which the user can specify input parameters for the programme. The number of processors to be used can be specified in the background command. A web-based visualization tool "Visualstruct", written in PHP (HTML and Java script embedded), allows for the graphical display of population clusters output from Structure, where each individual may be visualized as a line segment with K colors defining its possible genomic composition {{with respect to the}} K genetic sub-populations. The advantage over available programs is in the increased number of individuals that can be visualized. The analyses of real datasets indicate a speedup of up to four, when comparing the speed of execution on clusters of eight processors with the speed of execution on one desktop. The software package is freely available to interested users upon request...|$|R
50|$|Optionally, a {{provider}} can explicitly register a service with a Web Services Registry such as Universal Description Discovery and Integration (UDDI) or publish additional documents intended to facilitate discovery such as Web Services Inspection Language (WSIL) documents. The service users or consumers can search Web Services manually or automatically. The implementation of UDDI servers and WSIL engines should provide simple search APIs or <b>web-based</b> <b>GUI</b> {{to help find}} Web services.|$|E
50|$|DebWrt is a niche Linux {{distribution}} mainly {{installed on}} embedded systems (e.g. residential gateways). It {{is built on}} top of an OpenWrt base which is used to load a fully functional version of Debian from the RootFS stored on the attached USB storage device. For easy installation and deinstallation of packages it relies on the dpkg Package management system. DebWrt uses the command-line interface of Bash. There is no <b>web-based</b> <b>GUI</b> interface at this time.|$|E
50|$|AccelStor’s NeoSapphire {{series of}} all-flash array storage appliances, powered by AccelStor FlexiRemap technology, deliver {{sustained}} high IOPS even for 4K random writes. With up to 700K IOPS, NeoSapphire arrays significantly speed up data access and processing while reducing power consumption and space utilization, making them suitable for random read/write operations that traditional storage systems have difficulty processing, or for huge volumes {{of data that}} need to be processed instantly. NeoSapphire arrays come in standard rack-mount form factors and feature <b>web-based</b> <b>GUI</b> management, multi-protocol support, front-accessible hot-swappable SSDs, and redundancy through virtual data groups.|$|E
40|$|The {{goal of the}} {{research}} {{described in this article}} is to determine in what way speech recognition errors can be handled best in a multimodal form-filling interface. Besides two well-known error correction mechanisms (re-speaking the value and choosing the correct value from a list of alternatives), the interface o#ers a novel correction mechanism in which the user selects the first letter of the target word from a soft-keyboard, after which the utterance is recognized once again, with a limited language model and lexicon. The multimodal interface that was used is a <b>web-based</b> form-filling <b>GUI,</b> extended with a speech overlay, which allows for pen and speech input. The e#ectiveness and e#- ciency of the error correction mechanisms, the error correction strategies that are applied by the users and the effects on user satisfaction were studied in an evaluation in which the interface was tested in two conditions: in one condition (LIST), the interface provides only re-speaking and the alternatives list as error correction facilities. In the other condition (LETTER), the interface provides the soft-keyboard technique as an additional error correction facility. The study shows that error correction was more effective in the LETTER condition than in the LIST condition. The Keyboard correction facility enables the users to solve errors that could not be solved using the Re-speak method or by choosing from a list of alternatives. In spite of its low effectiveness, subjects initially attempted to use Re-speaking for error correction in both interfaces. However, we also found that subjects rapidly learned to choose the most effective option (Keyboard) immediately as they gain experience. The user satisfaction turned out to be higher for the LETTER interface than for the LIST interface: [...] ...|$|R
40|$|WIGLAF (a Web Interface Generator and Legacy Application Facade) is a {{computer}} program that provides a <b>Web-based,</b> distributed, graphical-user-interface (<b>GUI)</b> framework that {{can be adapted to}} any of a broad range of application programs, written in any programming language, that are executed remotely on any cluster computer system. WIGLAF enables the rapid development of a GUI for controlling and monitoring a specific application program running on the cluster and for transferring data to and from the application program. The only prerequisite for the execution of WIGLAF is a Web-browser program on a user's personal computer connected with the cluster via the Internet. WIGLAF has a client/server architecture: The server component is executed on the cluster system, where it controls the application program and serves data to the client component. The client component is an applet that runs in the Web browser. WIGLAF utilizes the Extensible Markup Language to hold all data associated with the application software, Java to enable platform-independent execution on the cluster system and the display of a GUI generator through the browser, and the Java Remote Method Invocation software package to provide simple, effective client/server networking...|$|R
40|$|Abstract Event-Driven Software (EDS) can {{transform}} the state based on incoming events; common examples are GUI, Web and Embedded applications. These EDSs pose a confront to testing {{because there are}} a large number of promising event sequences that users can raise through a user interface. This system provides the single model that is generic enough to study Graphical User Interface (GUI), Web and Embedded applications collectively. It uses the model to describe general prioritization criteria that are appropriate to EDS applications. The ultimate goal is to evolve the model and use it to extend a unified theory of how well all EDS should be tested. The project shows that the <b>GUI,</b> <b>Web-based</b> and Embedded applications, when recast by means of the new model, show related performance. This criterion that gives precedence to all pairs of event contacts did well for GUI, Web and Embedded applications; another condition that gives priority to the minimum number of parameter value settings did weakly for all. In this system by considering the prioritization criteria the order of test cases that are to be executed for the EDS application will be generated. These results emphasize the principle that these three subclasses of applications should be modeled collectively...|$|R
50|$|NG11EO is {{for small}} offices or home offices {{which can be}} managed through a <b>web-based</b> <b>GUI,</b> {{available}} over any Internet-access device within the office network. This appliance offers features like Security, VPN, 3G ready, Internal controls, Pre-configured Wi-Fi Security, Reports, Remote Management and more. Apart from these, the other features this appliance offers include controls to enhance employee productivity through Real-time reports on online activities of employees, Blockage of unsafe/entertainment websites, Customized employees access of applications - sites, Time-based controls that limit user access to specified hours or duration {{of the day and}} flexibility to add specific websites that should be allowed/blocked to match the Internet access needs of employees.|$|E
50|$|Microsoft {{announced}} a new installation option, Nano Server, which offers a minimal-footprint headless version of Windows Server. It excludes the graphical user interface, WoW64 (support for 32-bit software) and Windows Installer. It does not support console login, either locally or via Remote Desktop Connection. All management is performed remotely via Windows Management Instrumentation (WMI), Windows PowerShell and Remote Server Management Tools (a collection of <b>web-based</b> <b>GUI</b> and command line tools). However, in Technical Preview 5, Microsoft has re-added the ability to administer Nano Server locally through PowerShell.According to Microsoft engineer Jeffrey Snover, Nano Server has 93% lower VHD size, 92% fewer critical security advisories, and 80% fewer reboots than Windows Server.|$|E
50|$|Vyatta {{provides}} software-based virtual router, virtual firewall and VPN {{products for}} Internet Protocol networks (IPv4 and IPv6). A free download of Vyatta {{has been available}} since March 2006. The system is a specialized Debian-based Linux distribution with networking applications such as Quagga, OpenVPN, and many others. A standardized management console, similar to Juniper JUNOS or Cisco IOS, {{in addition to a}} <b>web-based</b> <b>GUI</b> and traditional Linux system commands, provides configuration of the system and applications. In recent versions of Vyatta, web-based management interface is supplied only in the subscription edition. However, all functionality is available through KVM, serial console or SSH/telnet protocols. The software runs on standard x86-64 servers.|$|E
5000|$|DNOS 6.x: This is the {{operating}} system running on the Dell Networking N-series (campus) networking switches. It is {{the latest version of}} the 'PowerConnect' operating system, running on a Linux Kernel. It is available as upgrade for the PowerConnect 8100 series switches (which then become a Dell Networking N40xx switch) and it also is installed on all DN N1000, N2000 and N3000 series switches. It has a full <b>web-based</b> <b>GUI</b> together with a full CLI (command line interface) and the CLI will be very similar to the original PowerConnect CLI, though with a range of new features like PVSTP (per VLAN spanning tree), Policy Based Routing and MLAG.|$|E
5000|$|The Dell Networking PCT2800 web-managed {{switches}} are entry-level Ethernet switches {{that only}} offer a <b>web-based</b> <b>GUI</b> management interface. There are 4 models offering between 8 and 48 ports per switch. The interfaces on the switches are all copper-based gigabit Ethernet-ports and the 24 and 48 ports switches offer 2 or 4 'combo' ports where the last 2 (resp. 4) ports can use either the RJ45/UTP 1000BaseT copper-interface or a fiber SFP transceiver for uplinks to a distribution or core switch. All switches offer standard features like VLAN's, link-aggregation, auto-negotiation for speed- and duplex setting. The MAC address-table can {{hold up to}} 8000 MAC addresses in its forwarding table and have a 2Mb packet-buffering capacity ...|$|E
50|$|The Voice {{track covers}} {{advanced}} topics in {{subjects such as}} Quality of Service, MGCP, Call Manager (Cisco's VoIP PBX), Cisco Unity Connection (Cisco's Voice Messaging platform), Unity Express, Unified Contact Center Express, Cisco Unified Presence Server, Cisco's HWIC-4ESW, and the 3750-24PS. Only 802 CCIE Voice certified engineers hold current certificates as of September 9, 2008. Most candidates pass after three or four lab attempts, but some have required more than six. Many have reputed that the lab exam seems as much a test of time management and planning as of technical expertise. The widely dissimilar platforms used sets the Voice lab exam apart from other CCIE lab exams. One must make configurations on the Windows 2003 Server environment, a CallManager <b>web-based</b> <b>GUI,</b> and the IOS command line. As such, it involves a lot of back-and-forth fine tuning between the numerous platforms.|$|E
50|$|Magyar Telekom {{have been}} working on several subjects, {{one of them is the}} ENUM (E.164 NUmber Mapping) project. In the frame of the project is {{elaborated}} such a pilot ENUM system, which allows assigning ENUM identifiers to users and accessing the ENUM users at several, different addresses. A <b>web-based</b> <b>GUI</b> (Graphical User Interface) is provided both for the administration and the managing of user profiles. Many investigations in the signaling protocols of 3G mobile networks are made to amalgamate geographical mobility and dynamically distributable relatively high bandwidth with the wide range of next-generation services. In the field of IP telephony services and applications they have already implemented the integration of hardware-based telephones. They have elaborated such a QoS measuring method, with the help of which the quality of the VoIP (Voice over IP) service can be tested and measured on a relative scale, and the given test results can be compared.|$|E
30|$|In {{order to}} enhance the {{usability}} of Jano, a <b>web-based</b> <b>GUI</b> runs {{on top of the}} Jano API, using the ASP.NET platform. Using this GUI, a non-SPL expert user can make not only location requests but also select and provide the necessary parameters for his access control and notification policies.|$|E
40|$|This paper {{discusses}} {{the development of}} a Java and XML-based semiconductor process information system for experimental data archiving, processing, analysis, presentation and simulation. The three-tier system architecture consists of a <b>web-based</b> <b>GUI</b> interface module, a business-handling module and a data services module. The user-friendly <b>web-based</b> <b>GUI</b> interface enables users to look up experimental results according to operating conditions, or to determine material and process gas physical properties using a physical property estimator, or to query and retrieve experimental data and run client-side simulations in the MATLAB environment. Simulation results can be compared to experimental data to validate process models or used to optimize the operating conditions. The business-handling module interprets user's request to determine which information is required and how that information is extracted and synthesized from the back-end database. After this information is obtained, it is delivered to the users in an appropriate format (XML/HTML) ...|$|E
40|$|We present IceMorph, a semi-supervised morphosyntactic {{analyzer}} of Old Icelandic. In {{addition to}} machine-read corpora and dictionaries, it applies a small set of declension prototypes to map corpus words to dictionary entries. A <b>web-based</b> <b>GUI</b> allows expert users to modify and augment data through an online process. A machine learning module incorporates prototype data, edit-distance metrics, and expert feedback to continuously update part-of-speech and morphosyntactic classification. An {{advantage of the}} analyzer {{is its ability to}} achieve competitive classification accuracy with minimum training data. © 2014 Urban et al...|$|E
40|$|This paper {{examines}} the errors committed by human operators of large networks and systems. It proposes a formal procedure in which system defense mechanisms {{are used to}} improve the coordination between human operators and computer agents. Further, it discusses and compares the effectiveness {{of different types of}} system defense mechanisms by performing experiments with <b>web-based</b> <b>GUI</b> screens. In the process, the paper offers definitions of human errors and proposes methods to quantify such errors. Our experimental results have shown that more layers of system defense can play a pivotal role in minimizing commonly encountered human errors. 1...|$|E
30|$|Remote reachability. In {{order to}} enable a user {{interface}} to be remotely reachable, {{it is highly}} desirable to provide a <b>web-based</b> <b>GUI</b> (Graphical User Interface) system since it is a cross-platform software that is not dependent on specific hardware or operating system (Bladow et al. 2000). The traditional desktop user interfaces which need to be installed on a local computer are very platform dependent and require much effort for maintenance and upgrading. A web-based user interface, on the other hand, is flexible to be accessed from any computer connected to the Internet using a standard browser, {{that is why it}} is widely getting popular.|$|E
