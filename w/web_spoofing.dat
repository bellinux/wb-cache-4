18|27|Public
40|$|Abstract. Phishing and <b>Web</b> <b>spoofing</b> have proliferated {{and become}} a major {{nuisance}} on the Internet. The attacks are difficult to protect against, mainly because they target non-cryptographic components, such as the user or the user-browser interface. This means that cryptographic security protocols, such as the SSL/TLS protocol, do not provide a complete solution to tackle the attacks and must be complemented by additional protection mechanisms. In this paper, we summarize, discuss, and {{evaluate the effectiveness of}} such mechanisms against (large-scale) phishing and <b>Web</b> <b>spoofing</b> attacks. Keywords: SSL/TLS, phishing, <b>Web</b> <b>spoofing,</b> visual spoofing. ...|$|E
40|$|The open {{nature of}} the Web makes it {{possible}} to create spoofed Web pages which, to the casual observer, are indistinguishable from authentic pages. The defense against <b>Web</b> <b>spoofing</b> attacks is a challenging problem since most users are unwilling (or unable) to follow complex interactive authentication procedures (e. g., inspect a Web server certificate). In this paper, we present a visual scheme that protects users against <b>Web</b> <b>spoofing</b> attacks while requiring minimal interaction...|$|E
40|$|<b>Web</b> <b>spoofing</b> is a {{significant}} problem involving fraudulent email and web sites that trick unsuspecting users into revealing private information. We discuss some aspects of common attacks and propose a framework for client-side defense: a browser plug-in that examines web pages and warns the user when requests for data {{may be part of}} a spoof attack. While the plugin, SpoofGuard, has been tested using actual sites obtained through government agencies concerned about the problem, we expect that <b>web</b> <b>spoofing</b> and other forms of identity theft will be continuing problems in coming years. ...|$|E
25|$|Ben Stiller {{produced}} a <b>web</b> <b>spoof</b> {{of the series}} entitled Burning Love.|$|R
50|$|Cera, {{along with}} Reggie Watts, Tim & Eric, and Sarah Silverman created the web-based comedy YouTube channel known as Jash, where he posts short films which he directs and stars in. Cera {{is part of}} the cast of Burning Love, a <b>web</b> <b>spoof</b> of ABC's The Bachelor and The Bachelorette.|$|R
5000|$|Alex S. Jones, {{a former}} Times {{reporter}} and media scholar, {{said of the}} paper, [...] "I would say if you’ve got one, hold on to it...it {{will probably be a}} collector’s item. I’m just glad someone thinks The New York Times print edition is worthy of an elaborate hoax. A <b>Web</b> <b>spoof</b> would have been infinitely easier. But creating a print newspaper and handing it out at subway stations? That takes a lot of effort." ...|$|R
40|$|We use the <b>Web</b> <b>Spoofing</b> attack {{reported}} by Cohen {{and also the}} Secure Internet Programming Group at Princeton University to give a new method of achieving covert distributed computing with Java. We show how Java applets that perform a distributed computation can be inserted into vulnerable Web pages. This has the added feature that users can rejoin a computation at some later date through bookmarks made while the pages previously viewed were spoofed. Few signs of anything unusual can be observed. Users need not knowingly revisit a particular Web page to be victims. We also propose a simple countermeasure against such a spoofing attack, which {{would be useful to}} help users detect the presence of <b>Web</b> <b>Spoofing.</b> Finally, we introduce the idea of browser users, as clients of Web-based services provided by third parties, "paying" for these services by running a distributed computation applet {{for a short period of}} time...|$|E
40|$|Phishing {{attacks and}} <b>web</b> <b>spoofing</b> {{are on the}} rise with an {{increasing}} number of reported incidents. Hackers and computer criminals resort to social engineering to fraudulently acquire sensitive information, such as credit card details, passwords, and social security numbers. The targeted victim is given the impression that the attacker is a trustworthy person or business, and confidently hands over the requested information. In this article we will look at the various methods, some of which are commonly used today, and show how to detect and counter them. ...|$|E
40|$|The {{security}} {{of the vast majority}} of “secure ” Web services rests on SSL server PKI. However, this PKI doesn’t work if the the adversary can trick the browser into appearing to tell the user the wrong thing about the certificates and cryptography. The seminal <b>web</b> <b>spoofing</b> work of Felten et al [6] demonstrated the potential, in 1996, for malicious servers to impersonate honest servers. Our recent follow-up work [15] explicitly shows how malicious servers can still do this—and can also forge the existence of an SSL session and the contents of the alleged server certificate. This paper reports the results of our work to systematically defend against <b>Web</b> <b>spoofing,</b> by creating a trusted path from the browser to the user. Starting with the Mozilla source, we have implemented techniques that protect a wide variety browser-user communications, that require little participation by the user and minimal disruption of the displayed server content. We have prepared shell scripts that install these modifications on the Mozilla source, to enable others to replicate this work. In on-going work, we are cleaning up and finetuning our code. In future work, we hope to examine more deeply the role of user interfaces in enabling users to make effective trust judgments...|$|E
5000|$|The G4 spinoff of The Soup called <b>Web</b> Soup <b>spoofs</b> the Whitman's Sampler {{package with}} a segment called Mixed Nuts Sampler.|$|R
5000|$|In April 2004 LoPorto {{created a}} viral <b>web</b> video <b>spoof</b> of [...] "The Apprentice" [...] ads called [...] "Trump Fires Bush", which after going viral was {{featured}} on CNN's Crossfire (TV series).|$|R
5000|$|In HTTP networking, {{typically}} on the World Wide <b>Web,</b> referer <b>spoofing</b> (based on a canonised misspelling of [...] "referrer") sends incorrect referer {{information in}} an HTTP request {{in order to}} prevent a website from obtaining accurate data on the identity of the web page previously visited by the user.|$|R
40|$|Abstract [...] <b>Web</b> <b>Spoofing</b> is an {{activity}} that attackers use to hack the personal information of a victim; it directs a web site visitor to a web site that looks {{similar to the one}} that they believe they are visiting. In this paper we present a technique which compares domain information of a false page with a legitimate page and also compares the html form tag’s action attribute of two web pages. Here we provide a browser based plug-in that examines the web page and warn a user if web site is untrusted...|$|E
40|$|Most secure {{web sites}} use the SSL/TLS {{protocol}} for server authentication. SSL/TLS supports mutual authentication, i. e. both server and client authentication. However, this optional feature of SSL/TLS {{is not used}} by most web sites because not every client has a certified public key. Instead user authentication is typically achieved by sending a password to the server after {{the establishment of an}} SSL-protected channel. Certain attacks rely on this fact, such as <b>web</b> <b>spoofing</b> and phishing attacks. In this paper the issue of online user authentication is discussed, and a method for online user authentication using trusted computing platforms is proposed. The proposed approach makes a class of phishing attacks ineffective; moreover, the proposed method {{can also be used to}} protect against other online attacks...|$|E
40|$|Computer {{security}} protocols usually terminate in a computer; {{however, the}} human-based services which they support usually terminate in a human. The {{gap between the}} human and the computer creates potential for security problems. We examine this gap, as it is manifested in secure Web servers. Felten et al demonstrated the potential, in 1996, for malicious servers to impersonate honest servers. In this paper we show how malicious servers can still do this—and can also forge {{the existence of an}} SSL session and the contents of the alleged server certificate. We then consider how to systematically defend against <b>Web</b> <b>spoofing,</b> by creating a trusted path from the browser to the human user. We present potential designs, propose a new one, prototype it in open-source Mozilla, and demonstrate its effectiveness via user studies...|$|E
40|$|This paper {{presents}} a novel browser extension, AntiPhish, {{that aims to}} protect users against <b>spoofed</b> <b>web</b> site-based phishing attacks. To this end, AntiPhish tracks the sensitive information of a user and generates warnings whenever the user attempts to give away this information to a web site that is considered untruste...|$|R
5000|$|On February 7, 2005, Slashdot {{reported}} that this exploit was disclosed by 3ric Johanson at the hacker conference Shmoocon. [...] Web browsers supporting IDNA appeared {{to direct the}} URL , in which the first a character {{is replaced by a}} Cyrillic а, {{to the site of the}} well known payment site Paypal, but actually led to a <b>spoofed</b> <b>web</b> site with different content. Popular browsers continued to have problems properly displaying international domain names through April 2017.|$|R
50|$|In {{order to}} prevent criminals from {{accessing}} personal information, such as credit card information, bank account/routing numbers, and one’s telephone number, home address, etc. {{it is important to}} learn and understand how these spoof websites can be detected. It is very important to first verify the name of the site on a digital certification through the use of SSL/TLS. Always try to identify the actual URL for the web page you are on. Make sure you are able to see the fully URL for any hyperlink, so that you can examine the address. Some characters that are commonly found in the URL of a <b>spoofed</b> <b>web</b> page are: %00, %01, @. Sometimes <b>spoofed</b> <b>web</b> sites can differ by a single letter or number in the URL. In addition, set your Internet security level to high to ensure that your computer is protected from possible attacks from spoofed sites. In general, only input personal information on a Web site if the name has been verified on the digital certificate. Also, if you have any concern about the confidentiality of a web site leave the page immediately.|$|R
40|$|Abstract — Phishing {{attack is}} a major attack in online banking which is carried through <b>web</b> <b>spoofing,</b> in this paper {{proposed}} an Anti-Phishing Prevention Technique namely APPT. {{which is based on}} the concept of preventing phishing attacks by using combination of one time random password and encrypted token for user machine identification. The method starts by retrieving the password by SMS or by alternate emails. During login the end user request for the password to the server, in that request it contain of encrypted token. If the end user is valid the password with encrypted token will be send through SMS or EMAIL. By using the login id and OTP password user can access the website. For generating encrypted token, x. 509 certificate 2 uses IP address to generate and it’s been encrypted by RSA algorithm...|$|E
40|$|Web proxies can be {{used for}} a variety of services. Web browsers {{typically}} offer the option not only to statically configure a web proxy, but also to download proxy settings dynamically from the Internet. Unfortunately, the supporting infrastructure does not enable the browsers to properly authenticate the origin of these proxy settings. This inadequacy provides an opportunity for an attacker to interpose his own proxy between a client device and the web. The scope of potential harm includes wholesale or selective interception of web traffic, and <b>web</b> <b>spoofing.</b> In a practical setting the attack works even in the presence of SSL/TLS channels that are supposed to protect against interception and modification. Depending on the presence and configuration of a firewall, attacks can be launched by outsiders as well as by insiders. This paper examines various attack scenarios and proposes countermeasures to these attacks...|$|E
40|$|Can users {{believe what}} their browsers tell them? Even {{sophisticated}} web users {{decide whether or}} not to trust a server based on browser cues such as location bar information, SSL icons, SSL warnings, certificated information and response time. &# 13; In their seminal work on <b>Web</b> <b>spoofing,</b> (Felten- 1996) showed how, in 1996, a malicious server could forge some of these cues. However, this work used genuine SSL sessions and Web Technology has evolved much since 1996. The web has since become the per-eminent medium for electronic service delivery to remote users, and the security of many commerce, government and an academic network application critically rests on the assumption that users can authenticate the servers with which they interact. This situation raises the question: is the browser-user communication model today secure enough to warrant this assumption?&# 13; &# 13; Keywords: - swindler, phishing, identity theft, consumer’s personal identity, keyloggin...|$|E
40|$|Bouncing between Canada and the U. S., Sc@mmed exposes {{an urgent}} problem of global proportions: phishing, the illegal {{gathering}} of others' personal information online {{in order to}} steal all their money—and even their identities. Through the cautionary stories of two people who got burned, this program shows how cybercriminals use scam spam and <b>spoof</b> <b>Web</b> sites to trick people into willingly giving up their most sensitive financial and personal information. Crooks go phishing {{all around the world}} every day; help your students avoid becoming their next victims. (25 minutes...|$|R
40|$|In-band {{password}} delivery One-time password Web security thre opl. U to well-built <b>spoofed</b> <b>web</b> {{pages and}} asked to provide sensitive information, which the phisher then steals. Based on our observations, more than 70 % of phishing activities are designed to steal users’ hereb oviding up a fake website sounds complicated, reports show that it is (McMillan, 2006; Danchev, 2008) that can create a phishing site istic-ist or black freshness, and accuracy of the list. The URLs are usually reported Contents lists available at ScienceDirect w. e Journal of Network and...|$|R
40|$|Abstract- Since {{last few}} years, Phishing is {{becoming}} one of the biggest network crime. Phishing is a current social engineering attack that results in online theft. Phishing is a form of identity theft in which a combination of social engineering and <b>web</b> site <b>spoofing</b> techniques are used to track a user into revealing confidential information with economic value. Over the past few years, we applied different methods for detecting phishing web using known as well as new features. In existing approach, Phishing sites are recognized by using blacklistbased approach. The disadvantage of this approach is that non-blacklisted phishing sites are not recognized. This paper presents an efficient approach for detection of phishing a web based on features of legitimate and phishing webs. In this paper, we proposed two algorithms that are K-Means and Naïve Bayes. Using these algorithms, we are checking blacklist for detection of phishing sites as well as their behavior also...|$|R
40|$|In {{spite of}} the use of {{standard}} web security measures, swindlers often clone sensitive web sites and/or present false credentials, causing substantial damages to individuals and corporations. Several papers presented such <b>web</b> <b>spoofing</b> attacks, and suggested countermeasures, mostly by improved browser user interface. However, we argue that these countermeasures are inappropriate to most non-expert web users; indeed, they are irrelevant to most practical web-spoofing attacks, which focus on non-expert users. In fact, even expert users could be victim of these practical, simple spoofing attacks, resulting in identity theft or other fraud. We present the trusted credentials area, a simple and practical browser UI enhancement, which allows secure identification of sites and validation of their credentials, thereby preventing web-spoofing, even for naïve users. The trusted credentials area is a fixed part of the browser window, which displays only authenticated credentials, and in particular logos, icons and seals. In fact, we recommend that web sites always provide credentials (e. g. logo) securely, and present them in the trusted credentials area; this will help users to notice the absence of secure logo in spoofed sites...|$|E
40|$|Phishing, or <b>web</b> <b>spoofing,</b> is {{a growing}} problem: the Anti-Phishing Working Group (APWG) {{received}} almost 14, 000 unique phishing reports in August 2005, a 56 % jump over the number of reports in December 2004 [3]. For financial institutions, phishing is a particularly insidious problem, since trust forms the foundation for customer relationships, and phishing attacks undermine confidence in an institution. Phishing attacks succeed by exploiting a user’s inability to distinguish legitimate sites from spoofed sites. Most prior research focuses on assisting the user in making this distinction; however, users must make the right security decision every time. Unfortunately, humans are ill-suited for performing the security checks necessary for secure site identification, and a single mistake {{may result in a}} total compromise of the user’s online account. Fundamentally, users should be authenticated using information that they cannot readily reveal to malicious parties. Placing less reliance on the user during the authentication process will enhance security and eliminate many forms of fraud. We propose using a trusted device to perform mutual authentication that eliminates reliance on perfect user behavior, thwarts Man-in-the-Middle attacks after setup, and protects a user’s account even in the presence of keyloggers and most forms of spyware. We demonstrate the practicality of our system with a prototype implementation...|$|E
40|$|Abstract. Phishing, or <b>web</b> <b>spoofing,</b> is {{a growing}} problem: the Anti-Phishing Working Group (APWG) {{received}} almost 14, 000 unique phishing reports in August 2005, a 56 % jump over the number of reports in December 2004 [3]. $ 150, 000 [17]. For financial institutions, phishing is a particularly insidious problem, since trust forms the foundation for customer relationships, and phishing attacks undermine confidence in an institution. Phishing attacks succeed by exploiting a user’s inability to distinguish legitimate sites from spoofed sites. Prior research focuses on assisting the user in making this distinction, but they require the user {{to make the right}} security decision every time. A single mistake results in a total compromise of the user’s online account. Unfortunately, humans are ill-suited for performing the security checks necessary for secure authentication. Fundamentally, users should be authenticated using information that they cannot readily reveal to malicious parties. Our system eliminates reliance on perfect user behavior and protects a user’s account even in the presence of keyloggers and other forms of spyware. We demonstrate the practicality of our system with a working prototype. Ultimately, placing less reliance on the user during the authentication process will enhance security and eliminate many forms of fraud...|$|E
5000|$|BonsaiKitten.com's {{pictures}} show kittens in jars, {{presented as}} real {{examples of the}} [...] "lost art" [...] as described on the Bonsai Kitten <b>web</b> page. The <b>spoof,</b> according to [...] "Dr. Chang", {{is that the world}} increasingly sees nature as a commodity, so such a site may well be in demand. The spoof came to large-scale attention as The Cruel Site of the Day for December 22, 2000, and was continually heavily condemned by animal rights organizations, and after hundreds of people complained daily to them, they stated that even if Bonsai Kitten was a spoof it [...] "encourages animal cruelty".|$|R
40|$|Phishing is {{a current}} social {{engineering}} attack {{that results in}} online identity theft. In a phishing attack, the attacker persuades the victim to reveal confidential information by using <b>web</b> site <b>spoofing</b> techniques. Typically, the captured information is then used to make an illegal economic profit by purchasing goods or undertaking online banking transactions. Although simple in nature, because of their effectiveness, phishing attacks still remain {{a great source of}} concern for organizations with online customer services. In previous work, we have developed AntiPhish, a phishing protection system that prevents sensitive user information from being entered on phishing sites. The drawback is that this system requires cooperation from the user and occasionally raises false alarms. In this paper, we present an extension of our system (called DOMAntiPhish) that mitigates the shortcomings of our previous system. In particular, our novel approach leverages layout similarity information to distinguish between malicious and benign web pages. This makes it possible to reduce the involvement of the user and significantly reduces the false alarm rate. Our experimental evaluation demonstrates that our solution is feasible in practice. ...|$|R
40|$|Phishing {{is a form}} of {{electronic}} identity theft in which a combination of social engineering and <b>web</b> site <b>spoofing</b> techniques are used to trick a user into revealing confidential information with economic value. The problem of social engineering attack {{is that there is no}} single solution to eliminate it completely, since it deals largely with the human factor. This is why implementing empirical experiments is very crucial in order to study and to analyze all malicious and deceiving phishing website attack techniques and strategies. In this paper, three different kinds of phishing experiment case studies have been conducted to shed some light into social engineering attacks, such as phone phishing and phishing website attacks for designing effective countermeasures and analyzing the efficiency of performing security awareness about phishing threats. Results and reactions to our experiments show the importance of conducting phishing training awareness for all users and doubling our efforts in developing phishing prevention techniques. Results also suggest that traditional standard security phishing factor indicators are not always effective for detecting phishing websites, and alternative intelligent phishing detection approaches are needed...|$|R
40|$|Can users {{believe what}} their browsers tell them? Even {{sophisticated}} Web users {{decide whether or}} not to trust a server based on browser cues such as location bar information, SSL icons, SSL warnings, certificate information, and response time. In their seminal work on <b>Web</b> <b>spoofing,</b> Felten et al [10] showed how, in 1996, a malicious server could forge some of these cues. However, this work used genuine SSL sessions, and Web technology has evolved much since 1996. The Web has since become the pre-eminent medium for electronic service delivery to remote users, and the security of many commerce, government, and academic network applications critically rests on the assumption that users can authenticate the servers with which they interact. This situation raises the question: is the browser-user communcation model today secure enough to warrant this assumption? In this paper, we answer this question by systematically showing how a malicious server can forge every one of the above cues. Our work extends the prior results by examining contemporary browsers, and by forging all of the SSL information a client sees, including the very existence of an SSL session (thus providing a cautionary tale about the security of one of the most common applications of PKI). We have made these techniques available for public demonstration, because anything less than working code would not convincingly answer the question. We also discuss implications and potential countermeasures, both short-term and long-term. ...|$|E
40|$|Computer {{viruses and}} other forms of {{malicious}} software have been a significant computer security problem for over ten years. We discuss computer viruses and the strategies that can be employed by a virus to complicate automated detection. In particular, the organisation of Macintosh operating system software and the strategies that have been employed by viruses on this platform are considered. Macro viruses, one of the relatively recent developments in the area of computer viruses, are described. A previously unknown attack that could be implemented on a Macintosh and that would allow the infection of application programs without altering any executable code is described. We also discuss a simple countermeasure to this attack. We subsequently extend this attack and consider the effect of operating system changes on Macintosh viruses. There are many other types of malicious software. Applets written in Java can be used to implement a variety of attacks against Internet users. We consider the potential of a Java applet to be used in conjunction with a <b>Web</b> <b>Spoofing</b> attack to perform covert distributed computing. We continue by discussing two combinatorial search problems: finding sequences with zero autocorrelation function, and finding Hadamard matrices using Williamson 2 ̆ 7 s method. We report many new results for the search for sequences with zero autocorrelation function, and note that this search, {{if it is to be}} extended, would require the application of distributed computing techniques. We describe a distributed search for Hadamard matrices based on Williamson 2 ̆ 7 s method; although we do not find any new matrices, we provide independent verification of results presented by others...|$|E
40|$|End user {{computing}} environments, e. g. web browsers and PC operating systems, are {{the target}} {{of a large number of}} attacks, both online and offline. The nature of these attacks varies from simple online attacks, such as user tracking using cookies, to more sophisticated attacks on security protocols and cryptographic algorithms. Other methods of attack exist that target end user applications that utilise and interact with cryptographic functions provided by the PC operating system. After providing a general introduction to the security techniques and protocols used in this thesis, a review of possible threats to end user computing environments is given, followed by a discussion of the countermeasures needed to combat these threats. The contributions of this thesis include three new approaches for enhancing the security of end user systems, together with an analysis and a prototype implementation of an end user security enhancement tool. The following paragraphs summarise the three main contributions of this thesis. Digitally signing a digital document is a straightforward procedure; however, when the digital document contains dynamic content, the digital signature may remain valid but the viewed document may not be the same as the document when viewed by the signer. A new solution is proposed to solve the problem; the main idea behind the solution is to make the application aware of the sensitive cryptographic function being requested. In order to verify a digital signature computed on a document or any other object (e. g. an executable), access to the public key corresponding to the private key used to sign the document is required. Normally, the public part of the key is made available in a digital 'certificate', which is made up of the public key of the signer, the name of the signer, and other data, all signed using the private signing key of a trusted third party known as a Certification Authority (CA). To verify such a certificate, and thereby obtain a trusted copy of the document signer's public key, a trusted copy of the CA's public key is required. If a malicious party can insert a fake CA public key into the list of CA public keys stored in a PC, then this party could potentially do considerable harm to that PC, since this malicious party could then forge signatures apparently created by other entities. A method of achieving such an attack without attracting the user's attention is presented in this thesis. Countermeasures that can be deployed to prevent the insertion of a fake root public key are discussed. A suggested solution that can be used to detect and remove such fake keys is presented, and a prototype implementation of this solution is described. SSL/TLS supports mutual authentication, i. e. both server and client authentication, using public key certificates. However, this optional feature of SSL/TLS is not widely used because most end users do not have a certified public key. Certain attacks rely on this fact, such as <b>web</b> <b>spoofing</b> and phishing attacks. A method for supporting client-side SSL authentication using trusted computing platforms is proposed. The proposed approach makes a class of phishing attacks ineffective; moreover, the proposed method can also be used to protect against other online attacks...|$|E
40|$|Abstract. Phishing is an {{electronic}} online identity theft {{in which the}} attackers {{use a combination of}} social engineering and <b>web</b> site <b>spoofing</b> techniques to trick a user into revealing confidential information. This information is typically used to make an illegal economic profit (e. g., by online banking transactions, purchase of goods using stolen credentials, etc.). Although simple, phishing attacks are remarkably effective. As a result, the numbers of successful phishing attacks have been continuously increasing and many anti-phishing solutions have been proposed. One popular and widely-deployed solution is the integration of blacklist-based anti-phishing techniques into browsers. However, it is currently unclear how effective such blacklisting approaches are in mitigating phishing attacks in real-life. In this paper, we report our findings on analyzing the effectiveness of two popular anti-phishing solutions. Over a period of three weeks, we automatically tested the effectiveness of the blacklists maintained by Google and Microsoft with 10, 000 phishing URLs. Furthermore, by analyzing a large number of phishing pages, we explored the existence of page properties {{that can be used to}} identify phishing pages. ...|$|R
40|$|Phishing {{is a form}} {{of online}} {{identity}} theft that aims to steal sensitive information such as online banking passwords and credit card information from users. Phishing scams have been receiving extensive press coverage because such attacks have been escalating in number and sophistication. According to a study by Gartner, 57 million US Internet users have identified the receipt of email linked to phishing scams and 2 million of them are estimated to have been tricked into giving away sensitive information. This paper presents a novel browser extension, AntiPhish, that aims to protect users against <b>spoofed</b> <b>web</b> site-based phishing attacks. To this end, AntiPhish tracks the sensitive information of a user and generates warnings whenever the user attempts to give away this information to a web site that is considered untrusted. 1...|$|R
50|$|The use of Unicode in domain names {{makes it}} {{potentially}} easier to <b>spoof</b> <b>web</b> sites as the visual representation of an IDN string {{in a web}} browser may make a spoof site appear indistinguishable to the legitimate site being spoofed, depending on the font used. For example, Unicode character U+0430, Cyrillic small letter a, can look identical to Unicode character U+0061, Latin small letter a, used in English. As a concrete example, using Cyrillic letters а, е (“Ie”/“Ye”, U+0435, looking essentially identical to Latin letter e), Belarusian-Ukrainian і (U+0456, essentially identical to Latin letter i), р (“Er”, U+0440, essentially identical to Latin letter p), the URL wіkіреdіа.org is formed (xn--wkd-8cdx9d7hbd.org in encoded form), which is virtually indistinguishable from the visual representation of the legitimate wikipedia.org (possibly depending on fonts).|$|R
