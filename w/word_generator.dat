11|116|Public
50|$|Axcient {{was founded}} in 2006 and is {{headquartered}} in Mountain View, California. It is privately held and has the backing of investors including Allegis Capital, Peninsula Ventures, Thomvest, and Scale Venture Partners. The company name comes from combining the words intelligent and access placed in a random <b>word</b> <b>generator</b> which exchanged the word intelligent for a synonym, sapient, and then flipped around access (Ax)-sapient (cient).|$|E
5000|$|The word dynamo (from the Greek word dynamis(δύναμις), meaning {{force or}} power) was {{originally}} {{another name for}} an electrical generator, and still has some regional usage {{as a replacement for}} the <b>word</b> <b>generator.</b> The word [...] "dynamo" [...] was coined by Werner von Siemens in 1882. The original [...] "dynamo principle" [...] of W. Siemens meant only the direct current generators which use exclusively the self-excitation (self-induction) principle to generate DC power. The earlier DC generators which used permanent magnets were not considered [...] "dynamo electric machines". The invention of the Dynamo principle (self-induction) was a huge technological leap over the old traditional permanent magnet based DC generators. The discovery of the dynamo principle made industrial scale electric power generation technically and economically feasible.After the invention of the alternator and that alternating current {{can be used as a}} power supply, the word dynamo became associated exclusively with the commutated direct current electric generator, while an AC electrical generator using either slip rings or rotor magnets would become known as an alternator.|$|E
40|$|The Ultrafast optical <b>word</b> <b>generator</b> is {{an optical}} fiber {{communication}} subsystem under development by several researches in the Ultrafast Optics Lab. This system proposes to take parallel electrical data streams and serialize them onto a single optical channel. Potential {{applications of the}} optical <b>word</b> <b>generator</b> include its use in optical time-division multiplexing {{and also in the}} encryption of high-speed optical data streams. Two of the main components of the <b>word</b> <b>generator</b> are the direct space to time arrayed waveguide grating pulse shaper (DSTAWG), and the asymmetric Fabry-Perot modulator (AFPM). ^ This thesis covers development and modifications of the DSTAWG for incorporation into the <b>word</b> <b>generator,</b> and demonstrates reconfigurable direct space to time pulse shaping. The design of the AFPM is described and development of its fabrication process is discussed. The results of fabrication efforts to date are cataloged. ...|$|E
3000|$|The <b>word</b> cloud <b>generator</b> {{library for}} Python {{is open and}} {{accessible}} at [URL] last accessed on March 25, 2018 [...]...|$|R
40|$|This paper {{describes}} {{a system for}} the semantic-based translation of spoken or written limited-domain utterances. The semantic structure as output of a semantic decoder serves as the interlingua-level. A <b>word</b> chain <b>generator</b> combined with a linguistic post-processor produces the according word chain in the target language. Both the semantic decoder and the <b>word</b> chain <b>generator</b> work with pure stochastic and trainable knowledge bases. The grammatical features of certain words can be easily extracted by the help of both the word chain and the semantic structure...|$|R
50|$|Matsumoto's theorem {{implies that}} there is a natural map (not a group homomorphism) from a Coxeter group to the {{corresponding}} braid group, taking any element of the Coxeter group represented by some reduced <b>word</b> in the <b>generators</b> to the same <b>word</b> in the <b>generators</b> of the braid group.|$|R
40|$|The {{problem of}} {{translating}} {{the time of}} occurrence of received Loran-C pulses into a time, referenced to a particular period of occurrence is addressed and applied {{to the design of}} a digital <b>word</b> <b>generator</b> for a Loran-C sensor processor package. The digital information from this <b>word</b> <b>generator</b> is processed in a KIM- 1 microprocessor system which is based on the MOS 6502 CPU. This final system will consist of a complete time difference sensor processor for determining position information using Loran-C charts. The system consists of the KIM- 1 microprocessor module, a 4 K RAM memory board, a user interface, and the Loran-C <b>word</b> <b>generator...</b>|$|E
40|$|Atomic physics {{experiments}} {{often require}} a complex sequence of precisely timed computer controlled events. A distributed GUI-based control system designed with such experiments in mind, The Cicero <b>Word</b> <b>Generator,</b> is described. The system {{makes use of}} a client-server separation between a user interface for sequence design {{and a set of}} output hardware servers. Output hardware servers are designed to use standard National Instruments output cards, but the client-server nature allows this to be extended to other output hardware. Output sequences running on multiple servers and output cards can be synchronized using a shared clock. By using an FPGA-generated variable frequency clock, redundant buffers can be dramatically shortened, and a time resolution of 100 ns achieved over effectively arbitrary sequence lengths...|$|E
40|$|Though, Indian {{language}} OCRs {{have shown}} {{significant improvement in}} classification rates in recent years, recognition of degraded words still pose a big challenge {{for the development of}} robust OCR systems. Ours is an attempt to formulate the problem of degraded word recognition in a generic and formal structure. We formulate the problem of degraded word recognition as a probabilistic parsing problem. A probabilistic parsing based framework is used to rank and validate various possible hypotheses. We effectively combine it with an alternate <b>word</b> <b>generator,</b> symbol recognizer and verification unit to improve recognition rates of degraded words without compromising good characters. We demonstrate our method on Malayalam. We experiment our method on a complete annotated book, where around 65 % of the degraded words are correctly recognized using this approach. 1. INTRODUCTION AND RELATE...|$|E
5000|$|... #Caption: foundation-l word cloud, {{created with}} the {{complete}} gzip'ed list archives (without duplicate emails from archives and all headers and quoted text in body), using IBM <b>Word</b> Cloud <b>Generator</b> build 32.|$|R
40|$|Abstract- Sufficient {{conditions}} to ensure QAM space-time codes achieve full space diversity in quasi-static fading channel are presented. The conditions are on code <b>words</b> or <b>generator</b> matrices {{instead of on}} every code word pair. This greatly simplifies the construction of full space diversity codes. I...|$|R
40|$|In {{this paper}} we prove that every recursively {{presented}} Lie algebra over a field {{which is a}} finite extention of its simple subfield can be embedded in a recursively presented Lie algebra defined by relations which are equalities of (nonassociative) <b>words</b> of <b>generators</b> and a+b=c, where a,b,c are generators...|$|R
40|$|In {{this paper}} {{we present a}} {{specialised}} <b>word</b> <b>generator,</b> which has been aimed as an assistant tool for Basque troubadours. Such a tool allows verse-writers to generate all the words that match with a given word termination. We coped with some interesting aspects, i. e. the dimension of the generated list and the need of establishing an order of relevance among the listed items. This work {{can be seen as}} a way of reusing computational linguistic tools in the context of the Basque cultural means of expression. The technical foundations of this tool lie on a two-level morphological processor. The way in which words must be generated (starting from the end of the word) leads us to inverse the generation process. 3 `Bertsolaritza': What Is It? `Bertsolaritza' (Basque term for verse-making) is an oral or written literature form with old tradition and great popularity in the Basque Country. Similar forms are manifested in other countries like Cuba. While the written mode is similar to poetry [...] ...|$|E
40|$|This study {{examines}} Midwestern collegiate and metropolitan newspapers {{to explore the}} differences in writing about disability language, terminology and tone. Specifically, this study focused on whether referential language and tone about people with disabilities differs depending on {{the source of the}} newspaper. Data from six metropolitan papers and eight collegiate papers over forty randomly selected dates in the year 2014 was collected. The metropolitan newspapers analyzed were The Chicago Tribune, The Indianapolis Star, The Des Moines Register, Detroit Free Press, Omaha World-Herald, and the Journal Sentinel. The collegiate newspapers examined were The Daily Illini, Indiana Daily Student, The Daily Iowan, The Michigan Daily, The State News, Daily Nebraskan, The Exponent, and The Badger Herald. A list of key search terms was electronically searched in each newspaper and articles that fell on the forty dates were saved and analyzed. Each term that appeared in the article was evaluated on a Likert scale for language use and tone; the total number of pages of each article was also calculated. Statistical tests used were T-Tests and analysis of covariance (ANCOVAR). A visual analysis was also conducted using an online <b>word</b> <b>generator</b> called Wordle. The results indicated that metropolitan papers used more preferred disability language than their collegiate counterparts. Both sources used an informational tone when referencing people with disabilities. Page length differences were statistically insignificant. Specific words repeatedly appeared throughout both newspaper sources: mental, disabilities, crazy, health and illness. While metropolitan papers also displayed preference for the following terms: elderly, elder, people, wheelchair, and older adults. Collegiate newspapers highlighted these terms: students, insane, madness, elderly and wheelchair. An implication of the study is that the media sources selected represented people with disabilities in an informational tone rather than a sensationalistic manner. However, disability language needs to continue to improve and become more sensitive to people with disabilities and professionals who work with them...|$|E
40|$|Quantum {{simulation}} {{is emerging}} as an ambitious and active subfield of atomic physics. This thesis describes progress towards the goal of simulating condensed matter systems, in particular the physics of the Fermi-Hubbard model, using ultracold Lithium atoms in an optical lattice. A major goal of the quantum simulation program is to observe phase transitions of the Hubbard model, into Néel antiferromagnetic phases and d-wave superfluid phases. Phase transitions are generally accompanied by a change in an underlying correlation in a physical system. Such correlations may be most amenable to probing by looking at fluctuations in the system. Experimental techniques for probing density and magnetization fluctuations {{in a variety of}} atomic Fermi systems are developed. The suppression of density fluctuations (or atom "shot noise") in an ideal degenerate Fermi gas is observed by absorption imaging of time-of-flight expanded clouds. Intrap measurements of density and magnetization fluctuations are not easy to probe with absorption imaging, due to their extremely high attenuation. A method to probe these fluctuations based on speckle patterns, caused by fluctuations in the index of refraction for a detuned illumination beam, is developed and applied first to weakly interacting and then to strongly interacting in-trap gases. Fluctuation probes such as these will be a crucial tool in future quantum simulation of condensed matter systems. The quantum simulation experiments that we want to perform require a complex sequence of precisely timed computer controlled events. A distributed GUI-based control system designed with such experiments in mind, The Cicero <b>Word</b> <b>Generator,</b> is described. The system makes use of a client-server separation between a user interface for sequence design and a set of output hardware servers. Output hardware servers are designed to use standard National Instruments output cards, but the client-server nature allows this to be extended to other output hardware. Output sequences running on multiple servers and output cards can be synchronized using a shared clock. By using an FPGA-generated variable frequency clock, redundant buffers can be dramatically shortened, and a time resolution of 100 ns achieved over effectively arbitrary sequence lengths. Experimental set-ups for producing, manipulating, and probing ultracold atomic gases can be quite complicated. To move forward with a quantum simulation program, it is necessary to have an apparatus that operates with a reliability that is not easily achieved {{in the face of this}} complexity. The design of a new apparatus is discussed. This Sodium-Lithium ultracold gas production machine has been engineered to incorporate as much experimental experience as possible to enhance its reliability. Particular attention has been paid to maximizing optical access and the utilization of this optical access, controlling the ambient temperature of the experiment, achieving a high vacuum, and simplifying subsystems where possible. The apparatus is now on the verge of producing degenerate gases, and should serve as a stable platform on which to perform future lattice quantum simulation experiments. by Aviv Keshet. Thesis (Ph. D.) [...] Massachusetts Institute of Technology, Dept. of Physics, February 2013. Cataloged from PDF version of thesis. Includes bibliographical references (p. 167 - 173) ...|$|E
40|$|A special monoid is a monoid {{presented}} by generators and defining {{relations of the}} form w = e, where w is a non-empty <b>word</b> on <b>generators</b> and e is the empty word. Groups are special monoids. But there exist special monoids that are not groups. Special monoids have been extensively studied by Adjanfl] and Makanin[7] (se...|$|R
40|$|AbstractWe {{prove that}} if G {{is a group}} acting cellularly on a locally finite CAT(0) cube complex X and the action is simply {{transitive}} on the vertices of X, then G has a generating setA so that the geodesic <b>words</b> in <b>generators</b> A form a regular language and the growth function of G with respect to A is rational...|$|R
40|$|Abstract {{intelligence}} {{is a human}} enquiry of both natural and artificial intelligence at the reductive embodying levels of neural, cognitive, functional, and logical from the bottom up. The convergence of software and intelligent sciences forms the transdisciplinary field of computational intelligence. In 2008, Lotfi Zadeh concluded that to make significant progress toward achievement of human level machine intelligence a paradigm shift is needed. CICT new computational information conservation awareness can open the way for an effective paradigm shift to recover lost coherence information in system description and to develop even advanced quantum cognitive systems. We show the fundamental pre-spatial geometro-arithmetic scheme defining optimized numeric <b>word</b> <b>generators</b> and relations to minimize the traditional multiscale statistic modeling veil opacity and information entropy generation. It is the first, fundamental step to a reliable progression from computing with numbers to computing with numeric words with precisation of their meaning...|$|R
40|$|CD-ROM included; A {{dissertation}} {{submitted to}} the Department of Information Technology for the degree of Master of PhilosophyCommunication is fundamental to the evolution and development {{of all kinds of}} living beings. With no disputes, languages should be recognized as the most amazing artifacts ever developed by mankind to enable communication. Computer has also become such a unique machine, due to its capacity to communicate with humans through languages. It is worth mentioning that the languages understood by computers and humans are quite different, yet people can communicate with computers. This has been possible since the computer is fundamentally an artifact that can translate one language to another. Therefore, computers must be able to do language translations than any other computing task. Nowadays, computing is evolving to enable machine-machine communication with no or little human intervention, yet humans continue to face with what is called language barrier for communication. In particular, a vast collection of world knowledge written in English has been inaccessible to communities who cannot communicate in English. Such communities are unable to {{contribute to the development of}} world knowledge due to the language barrier. As a result many people have embarked into research in computer aided natural language translation. This area is commonly known as Machine Translation. Among others, Aptium, Bable fish, Google translator, SYSTRAN, EDR, Anusaaraka, AngalaHindi, AnagalaBarathi, and Mantra are some examples for popular machine translation systems. These systems use various approaches including Human-assisted, Rule-based, Corpus-based, Knowledge-based, Hybrid and Agent-based to translate from one language to another. However, due to inherent diversifications of natural languages, a generic machine translation approach is far from reality. This thesis presents a computational grammar for Sinhala language to develop English to Sinhala machine translation system with an underlying theoretical basis. This system is known as BEES, an acronym for Bilingual Expert for English to Sinhala machine translation. The concept of Varanegeema (conjugation) in Sinhala language has been considered as the philosophical basis of this approach to the development of BEES. The Varanegeema in Sinhala language is able to handle large number of language primitives associated with nouns and verbs. For instance, Varanegeema handles the language primitives such as person, gender, tense, number, preposition and subjectivity/objectivity. More importantly, Varanegeema allows deriving all associated word forms from a given base word. This enables to drastically reduce the size of the Sinhala dictionary. Since the concept of Varanegeema can be expressed by a set of rules, it nicely goes with rule-based implementation of machine translation systems. BEES implements 85 grammar rules for Sinhala nouns and 18 rules for Sinhala verbs. BEES compresses with seven modules namely English Morphological analyzer, English Parser, English to Sinhala base word translator, Sinhala Morphological Generator, Sinhala Parser, Transliteration module and Intermediate Editor. In addition to the main modules, system comprises of four dictionaries, namely, English dictionary, Sinhala dictionary, English-Sinhala Bilingual dictionary and the Concept dictionary. BEES primarily shares the features with the Rule-based, Context-based and Human-assisted approaches to machine translation. The BEES has been implemented using Java and Swi-Prolog to run on both Linux and Windows environments. The English to Sinhala Machine Translation system, BEES has been evaluated to test the hypothesis that concepts of Varanegeema can be used to drive English to Sinhala machine translation. The English to Sinhala machine translation system has been evaluated through three steps. As the first step, all the language processing primitives such as morphological analyzers, parsers, translator and the transliteration module have been tested through the white box testing approach. In order to test each module, several online testing tools ii including English morphological analyzer, English parser and Sinhala <b>word</b> <b>generator</b> have been implemented. By using these online tools each module has been completely tested through a carefully created test plan. In addition, an online evaluation test bed has also been implemented to continuously capture feedback from online users. This online evaluation test bed gives facilities to make different types of sentences using a given set of words. Word Error Rate and the Sentence Error Rate were calculated by using these evaluation results. Finally the intelligibility and the accuracy tests have been conducted through the human support. In order to evaluate the intelligibility and the accuracy of the English to Sinhala machine translation system, following steps were followed. Two hundred sample sentences were collected and grouped into 20 sets (10 sentences per each set). Then each sentence was translated using the English to Sinhala Machine Translation system. Each set was given to the human translators and scored. The intelligibility and the accuracy were calculated through the above evaluation results. The experimental result shows that English morphological analyzer, English parser, English to Sinhala base word translator, Sinhala morphological generator and the Sinhala sentence generator successfully work with more than 90 % accuracy. Overall result of the evaluation shows 89 % accuracy with the word error rate of 7. 2 % and the sentence error rate of 5. 4 %. The BEES successfully translates English sentences with simple or complex subjects and objects. The translation system successfully handles most commonly used patterns of the tenses including active and passive voice forms. Communication is fundamental to the evolution and development of all kinds of living beings. With no disputes, languages should be recognized as the most amazing artifacts ever developed by mankind to enable communication. Computer has also become such a unique machine, due to its capacity to communicate with humans through languages. It is worth mentioning that the languages understood by computers and humans are quite different, yet people can communicate with computers. This has been possible since the computer is fundamentally an artifact that can translate one language to another. Therefore, computers must be able to do language translations than any other computing task. Nowadays, computing is evolving to enable machine-machine communication with no or little human intervention, yet humans continue to face with what is called language barrier for communication. In particular, a vast collection of world knowledge written in English has been inaccessible to communities who cannot communicate in English. Such communities are unable to contribute to the development of world knowledge due to the language barrier. As a result many people have embarked into research in computer aided natural language translation. This area is commonly known as Machine Translation. Among others, Aptium, Bable fish, Google translator, SYSTRAN, EDR, Anusaaraka, AngalaHindi, AnagalaBarathi, and Mantra are some examples for popular machine translation systems. These systems use various approaches including Human-assisted, Rule-based, Corpus-based, Knowledge-based, Hybrid and Agent-based to translate from one language to another. However, due to inherent diversifications of natural languages, a generic machine translation approach is far from reality. This thesis presents a computational grammar for Sinhala language to develop English to Sinhala machine translation system with an underlying theoretical basis. This system is known as BEES, an acronym for Bilingual Expert for English to Sinhala machine translation. The concept of Varanegeema (conjugation) in Sinhala language has been considered as the philosophical basis of this approach to the development of BEES. The Varanegeema in Sinhala language is able to handle large number of language primitives associated with nouns and verbs. For instance, Varanegeema handles the language primitives such as person, gender, tense, number, preposition and subjectivity/objectivity. More importantly, Varanegeema allows deriving all associated word forms from a given base word. This enables to drastically reduce the size of the Sinhala dictionary. Since the concept of Varanegeema can be expressed by a set of rules, it nicely goes with rule-based implementation of machine translation systems. BEES implements 85 grammar rules for Sinhala nouns and 18 rules for Sinhala verbs. BEES compresses with seven modules namely English Morphological analyzer, English Parser, English to Sinhala base word translator, Sinhala Morphological Generator, Sinhala Parser, Transliteration module and Intermediate Editor. In addition to the main modules, system comprises of four dictionaries, namely, English dictionary, Sinhala dictionary, English-Sinhala Bilingual dictionary and the Concept dictionary. BEES primarily shares the features with the Rule-based, Context-based and Human-assisted approaches to machine translation. The BEES has been implemented using Java and Swi-Prolog to run on both Linux and Windows environments. The English to Sinhala Machine Translation system, BEES has been evaluated to test the hypothesis that concepts of Varanegeema can be used to drive English to Sinhala machine translation. The English to Sinhala machine translation system has been evaluated through three steps. As the first step, all the language processing primitives such as morphological analyzers, parsers, translator and the transliteration module have been tested through the white box testing approach. In order to test each module, several online testing tools ii including English morphological analyzer, English parser and Sinhala <b>word</b> <b>generator</b> have been implemented. By using these online tools each module has been completely tested through a carefully created test plan. In addition, an online evaluation test bed has also been implemented to continuously capture feedback from online users. This online evaluation test bed gives facilities to make different types of sentences using a given set of words. Word Error Rate and the Sentence Error Rate were calculated by using these evaluation results. Finally the intelligibility and the accuracy tests have been conducted through the human support. In order to evaluate the intelligibility and the accuracy of the English to Sinhala machine translation system, following steps were followed. Two hundred sample sentences were collected and grouped into 20 sets (10 sentences per each set). Then each sentence was translated using the English to Sinhala Machine Translation system. Each set was given to the human translators and scored. The intelligibility and the accuracy were calculated through the above evaluation results. The experimental result shows that English morphological analyzer, English parser, English to Sinhala base word translator, Sinhala morphological generator and the Sinhala sentence generator successfully work with more than 90 % accuracy. Overall result of the evaluation shows 89 % accuracy with the word error rate of 7. 2 % and the sentence error rate of 5. 4 %. The BEES successfully translates English sentences with simple or complex subjects and objects. The translation system successfully handles most commonly used patterns of the tenses including active and passive voice forms...|$|E
40|$|Chu-Keung Chung. Thesis (M. Phil.) [...] Chinese University of Hong Kong, 1999. Includes bibliographical {{references}} (leaves 88 - 92). Abstracts in English and Chinese. Abstract [...] - p. iAcknowledgments [...] - p. iiiChapter 1 [...] - Introduction [...] - p. 1 Chapter 1. 1 [...] - Motivation and Aims [...] - p. 1 Chapter 1. 2 [...] - Contributions [...] - p. 3 Chapter 1. 3 [...] - Structure of the Thesis [...] - p. 4 Chapter 2 [...] - Literature Review [...] - p. 6 Chapter 2. 1 [...] - Introduction [...] - p. 6 Chapter 2. 2 [...] - Complete Algorithms [...] - p. 7 Chapter 2. 2. 1 [...] - Parallel Checking [...] - p. 7 Chapter 2. 2. 2 [...] - Mom's [...] - p. 8 Chapter 2. 2. 3 [...] - Davis-Putnam [...] - p. 9 Chapter 2. 2. 4 [...] - Nonchronological Backtracking [...] - p. 9 Chapter 2. 2. 5 [...] - Iterative Logic Array (ILA) [...] - p. 10 Chapter 2. 3 [...] - Incomplete Algorithms [...] - p. 11 Chapter 2. 3. 1 [...] - GENET [...] - p. 11 Chapter 2. 3. 2 [...] - GSAT [...] - p. 12 Chapter 2. 4 [...] - Summary [...] - p. 13 Chapter 3 [...] - Algorithms [...] - p. 14 Chapter 3. 1 [...] - Introduction [...] - p. 14 Chapter 3. 2 [...] - Tree Search Techniques [...] - p. 14 Chapter 3. 2. 1 [...] - Depth First Search [...] - p. 15 Chapter 3. 2. 2 [...] - Forward Checking [...] - p. 16 Chapter 3. 2. 3 [...] - Davis-Putnam [...] - p. 17 Chapter 3. 2. 4 [...] - GRASP [...] - p. 19 Chapter 3. 3 [...] - Incomplete Algorithms [...] - p. 20 Chapter 3. 3. 1 [...] - GENET [...] - p. 20 Chapter 3. 3. 2 [...] - GSAT Algorithm [...] - p. 22 Chapter 3. 4 [...] - Summary [...] - p. 23 Chapter 4 [...] - Field Programmable Gate Arrays [...] - p. 24 Chapter 4. 1 [...] - Introduction [...] - p. 24 Chapter 4. 2 [...] - FPGA [...] - p. 24 Chapter 4. 2. 1 [...] - Xilinx 4000 series FPGAs [...] - p. 26 Chapter 4. 2. 2 [...] - Bitstream [...] - p. 31 Chapter 4. 3 [...] - Giga Operations Reconfigurable Computing Platform [...] - p. 32 Chapter 4. 4 [...] - Annapolis Wildforce PCI board [...] - p. 33 Chapter 4. 5 [...] - Summary [...] - p. 35 Chapter 5 [...] - Implementation [...] - p. 36 Chapter 5. 1 [...] - Parallel Graph Coloring Machine [...] - p. 36 Chapter 5. 1. 1 [...] - System Architecture [...] - p. 38 Chapter 5. 1. 2 [...] - Evaluator [...] - p. 39 Chapter 5. 1. 3 [...] - Finite State Machine (FSM) [...] - p. 42 Chapter 5. 1. 4 [...] - Memory [...] - p. 43 Chapter 5. 1. 5 [...] - Hardware Resources [...] - p. 43 Chapter 5. 2 [...] - Serial Graph Coloring Machine [...] - p. 44 Chapter 5. 2. 1 [...] - System Architecture [...] - p. 44 Chapter 5. 2. 2 [...] - Input Memory [...] - p. 46 Chapter 5. 2. 3 [...] - Solution Store [...] - p. 46 Chapter 5. 2. 4 [...] - Constraint Memory [...] - p. 47 Chapter 5. 2. 5 [...] - Evaluator [...] - p. 48 Chapter 5. 2. 6 [...] - Input Mapper [...] - p. 49 Chapter 5. 2. 7 [...] - Output Memory [...] - p. 49 Chapter 5. 2. 8 [...] - Backtrack Checker [...] - p. 50 Chapter 5. 2. 9 [...] - <b>Word</b> <b>Generator</b> [...] - p. 51 Chapter 5. 2. 10 [...] - State Machine [...] - p. 51 Chapter 5. 2. 11 [...] - Hardware Resources [...] - p. 54 Chapter 5. 3 [...] - Serial Boolean Satisfiability Solver [...] - p. 56 Chapter 5. 3. 1 [...] - System Architecture [...] - p. 58 Chapter 5. 3. 2 [...] - Solutions [...] - p. 59 Chapter 5. 3. 3 [...] - Solution Generator [...] - p. 59 Chapter 5. 3. 4 [...] - Evaluator [...] - p. 60 Chapter 5. 3. 5 [...] - AND/OR [...] - p. 62 Chapter 5. 3. 6 [...] - State Machine [...] - p. 62 Chapter 5. 3. 7 [...] - Hardware Resources [...] - p. 64 Chapter 5. 4 [...] - GSAT Solver [...] - p. 65 Chapter 5. 4. 1 [...] - System Architecture [...] - p. 65 Chapter 5. 4. 2 [...] - Variable Memory [...] - p. 65 Chapter 5. 4. 3 [...] - Flip-Bit Vector [...] - p. 66 Chapter 5. 4. 4 [...] - Clause Evaluator [...] - p. 67 Chapter 5. 4. 5 [...] - Adder [...] - p. 70 Chapter 5. 4. 6 [...] - Random Bit Generator [...] - p. 71 Chapter 5. 4. 7 [...] - Comparator [...] - p. 71 Chapter 5. 4. 8 [...] - Sum Register [...] - p. 71 Chapter 5. 5 [...] - Summary [...] - p. 71 Chapter 6 [...] - Results [...] - p. 73 Chapter 6. 1 [...] - Introduction [...] - p. 73 Chapter 6. 2 [...] - Parallel Graph Coloring Machine [...] - p. 73 Chapter 6. 3 [...] - Serial Graph Coloring Machine [...] - p. 74 Chapter 6. 4 [...] - Serial SAT Solver [...] - p. 74 Chapter 6. 5 [...] - GSAT Solver [...] - p. 75 Chapter 6. 6 [...] - Summary [...] - p. 76 Chapter 7 [...] - Conclusion [...] - p. 77 Chapter 7. 1 [...] - Future Work [...] - p. 78 Chapter A [...] - Software Implementation of Graph Coloring in CHIP [...] - p. 79 Chapter B [...] - Density Improvements Using Xilinx RAM [...] - p. 81 Chapter C [...] - Bit stream Configuration [...] - p. 83 Bibliography [...] - p. 88 Publications [...] - p. 9...|$|E
40|$|In 2008, Lotfi Zadeh {{concluded}} {{that to make}} significant progress toward achievement of human level machine intelligence a paradigm shift is needed. In previous papers we introduced the computational information conservation theory (CICT) approach to get more effective and reliable cognitive, biophysical, and biomedical engineering simulation solutions. CICT new computational information conservation awareness can open {{the way for a}} paradigm shift to recover lost coherence information in system description and to develop even advanced quantum cognitive systems. To achieve this result, in present paper, we show the fundamental pre-spatial geometro-arithmetic scheme defining optimized numeric <b>word</b> <b>generators</b> and relations to minimize the traditional multiscale statistic modeling veil opacity and information entropy generation. It is the first, fundamental step to an effective progression from computing with numbers to computing with numeric words with precisation of their meaning. This paper is a relevant contribution towards an effective and convenient "Science 2. 0 " universal computational framework to achieve deeper cognitive intelligence at your fingertips and beyond...|$|R
5000|$|The Help Generator add-ins {{generate}} help {{project and}} topic pages including sections and screenshots by scanning the applications code sources and designers. The topic pages are automatically {{linked to the}} application's forms. The user subsequently adds texts with the included Help Editor. Output is Microsoft Compiled HTML Help, browser based help and documentation in MS <b>Word.</b> Help <b>Generator</b> add-ins are available for the following software platforms: ...|$|R
40|$|Download {{data from}} HP Quality Center using of OTA Client. Implementation must be {{scalable}} to all projects under test. That is, {{it will be}} possible to generate automatically test reports at least for 2010, Modulaser and Gen 2 (FW or SW). Report Generator is a software implemented in VBA that allows get data from HP Quality Center for export it (either tables, charts or text) to a document in <b>Word</b> format. Report <b>Generator</b> es un Software implementado en VBA que permite extraer datos de HP Quality Center para, posteriormente, exportarlos (ya sea en forma de tablas, gráficas o texto) a un document en formato <b>Word.</b> Report <b>Generator</b> és un Software implementat en VBA que permet extreure dades de HP Quality Center per, posteriorment, exportar-les (ja sigui en forma de taules, gràfiques o text) a un document en format Word...|$|R
2500|$|Since G is residually finite, if w is a <b>word</b> in the <b>generators</b> X of G then [...] in G if {{and only}} of some mapping of X into S induces a {{homomorphism}} such that [...] in S.|$|R
3000|$|... in (2) {{must also}} satisfy NFT. (Although we {{reminded}} this theorem {{by considering only}} the <b>words</b> over free <b>generators,</b> the idea of NFT can actually be seen in ℚ as fractals or in matrix theory as echelon forms.) [...]...|$|R
50|$|The cube-connected {{cycles of}} order n is the Cayley graph {{of a group}} that acts on binary words of length n by {{rotation}} and flipping bits of the <b>word.</b> The <b>generators</b> used to form this Cayley graph from the group are the group elements that act by rotating the word one position left, rotating it one position right, or flipping its first bit. Because it is a Cayley graph, it is vertex-transitive: there is a symmetry of the graph mapping any vertex to any other vertex.|$|R
2500|$|... {{where the}} si are {{elements}} of S, adjacent si are distinct, and ai are non-zero integers (but n may be zero). In less formal terms, the group consists of <b>words</b> in the <b>generators</b> and their inverses, subject only to canceling a generator with an adjacent occurrence of its inverse.|$|R
50|$|Given any {{generating}} {{set of the}} group, we can consider a graph whose vertices are elements of the group with two vertices adjacent if their ratio is in the {{generating set}}. The graph is connected and vertex transitive. paths in the graph correspond to <b>words</b> in the <b>generators.</b>|$|R
5000|$|... {{where the}} si are {{elements}} of S, adjacent si are distinct, and ai are non-zero integers (but n may be zero). In less formal terms, the group consists of <b>words</b> in the <b>generators</b> and their inverses, subject only to canceling a generator with an adjacent occurrence of its inverse.|$|R
5000|$|In mathematics, {{especially}} in group theory, a Wirtinger presentation is a finite presentation where the relations {{are of the}} form [...] where [...] is a <b>word</b> in the <b>generators,</b> [...] Wilhelm Wirtinger observed that the exteriors of knots in 3-space have fundamental groups with presentations of this form.|$|R
50|$|In {{order to}} be allowed to supply {{electricity}} to the transmission system, generators must be licensed (by BEIS) and enter into a connection agreement with NGET which also grants Transmission Entry Capacity (TEC). Generators contribute to the costs of running the system by paying for TEC, at the generation TNUoS tariffs set by NGET. This is charged on a maximum-capacity basis. In other <b>words,</b> a <b>generator</b> with 100 MW of TEC who only generated at a maximum rate of 75 MW during the year would still be charged for the full 100 MW of TEC.|$|R
50|$|The word {{problem for}} a finitely {{generated}} group is the decision problem whether two <b>words</b> in the <b>generators</b> of the group represent the same element. The word {{problem for a}} given finitely generated group is solvable {{if and only if}} the group can be embedded in every algebraically closed group.|$|R
5000|$|In the {{mathematical}} area of geometric group theory, a van Kampen diagram (sometimes also called a Lyndon-van Kampen diagram [...] ) is a planar diagram {{used to represent}} {{the fact that a}} particular <b>word</b> in the <b>generators</b> of a group given by a group presentation represents the identity element in that group.|$|R
40|$|Braids can be {{represented}} as two-dimensional diagrams showing the crossings of strings or as <b>words</b> over the <b>generators</b> of a braid group. A minimal braid is one with the fewest crossings (or the shortest words) among all possible representations topologically equivalent to that braid. The main result {{of this paper is}} that the set of minimal braids is co-NP-complete...|$|R
25|$|If a C'(1/6) {{presentation}} (∗) is finite (that is both X and R are finite), then Dehn's {{algorithm is}} an actual non-deterministic algorithm {{in the sense}} of recursion theory. However, even if (∗) is an infinite C'(1/6) presentation, Dehn's algorithm, understood as an abstract procedure, still correctly decides whether or not a <b>word</b> in the <b>generators</b> Xplusmn&1 represents the identity element of G.|$|R
40|$|AbstractThe topological {{types of}} closed {{periodic}} solutions of the Lorenz equations are in {{one-to-one correspondence with}} aperiodic positive <b>words</b> on two <b>generators.</b> The number of syllables in such a word is called the trip number of the corresponding knot. Classifications for knots with trip numbers 1 and 2 are known. This paper gives a complete classification for 3 -trip Lorenz knots...|$|R
