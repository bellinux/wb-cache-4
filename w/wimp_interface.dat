35|49|Public
25|$|The <b>WIMP</b> <b>interface</b> {{is based}} around a {{stacking}} window manager and incorporates three mouse buttons (named Select, Menu and Adjust), context-sensitive menus, window order control (i.e. send to back) and dynamic window focus (a window can have input focus at any {{position on the}} stack). The icon bar (Dock) holds icons which represent mounted disc drives, RAM discs, running applications, system utilities and docked: Files, Directories or inactive Applications. These icons have context-sensitive menus and support drag-and-drop behaviour. They represent the running application as a whole, irrespective of whether it has open windows.|$|E
50|$|The first {{iteration}} of Apple's <b>WIMP</b> <b>interface</b> was {{a floppy}} disk where files could be spatially moved around. After months of usability testing, Apple designed the Lisa interface of windows and icons.|$|E
50|$|Meanwhile, average desktop {{computers}} are still based on WIMP interfaces, and have started undergoing major operational improvements to surpass the hurdles inherent {{to the classic}} <b>WIMP</b> <b>interface.</b> These include the exploration of virtual 3D space, interaction techniques for window/icon sorting, focus, and embellishment.|$|E
50|$|The reason <b>WIMP</b> <b>interfaces</b> {{have become}} so {{prevalent}} since their conception at Xerox PARC {{is that they are}} very good at abstracting work-spaces, documents, and their actions. Their analogous paradigm to documents as paper sheets or folders makes <b>WIMP</b> <b>interfaces</b> easy to introduce to other users. Furthermore their basic representations as rectangular regions on a 2D flat screen make them a good fit for system programmers, thus favoring the abundance of commercial widget toolkits in this style.|$|R
50|$|In computing, post-WIMP ("windows, icons, menus, pointer") {{comprises}} work on user interfaces, mostly graphical user interfaces, which {{attempt to}} go beyond the paradigm of windows, icons, menus and a pointing device, i.e. <b>WIMP</b> <b>interfaces.</b>|$|R
40|$|This article {{introduces}} a new interaction model called Instrumental Interaction that extends and generalizes {{the principles of}} direct manipulation. It covers existing interaction styles, including traditional <b>WIMP</b> <b>interfaces,</b> {{as well as new}} interaction styles such as two-handed input and augmented reality. It defines a design space for new interaction techniques and a set of properties for comparing them. Instrumental Interaction describes graphical user interfaces in terms of domain objects and interaction instruments. Interaction between users and domain objects is mediated by interaction instruments, similar to the tools and instruments we use in the real world to interact with physical objects. The article presents the model, applies it to describe and compare a number of interaction techniques, and shows how it was used to create a new interface for searching and replacing text. Keywords Interaction model, <b>WIMP</b> <b>interfaces,</b> direct manipulation, post-WIMP interfaces, instrumental [...] ...|$|R
50|$|Before the MS-Windows age, {{and with}} the lack of a true common GUI under MS-DOS, most {{graphical}} applications which worked with EGA, VGA and better graphic cards had proprietary built-in GUIs. One of the best known such graphical applications was Deluxe Paint, a popular painting software with a typical <b>WIMP</b> <b>interface.</b>|$|E
5000|$|Other users {{claim that}} once the new {{interface}} is learned, the average user can create [...] "professional-looking documents faster". One study reported fairly good acceptance by users except highly experienced users and users of word processing applications with a classical <b>WIMP</b> <b>interface,</b> but was less convinced in terms of efficiency and organisation.|$|E
5000|$|Multiple {{studies have}} {{explored}} {{the possibilities of}} moving past the <b>WIMP</b> <b>interface,</b> such as using reality-based interaction, making the interface [...] "three-dimensional" [...] by adding visual depth {{through the use of}} monocular cues, and even combining depth with physics. The latter resulted in the development of BumpTop desktop and its acquisition and release by Google.|$|E
40|$|Research Interests The goal of my {{research}} is to improve everyday graphical user interfaces, multimodal interfaces, and other human-computer interaction techniques that encourage people to use computers as well as improving efficiency in performing individual operations. My current research interests focus on common WIMP (windows, icons, menus, and pointers) widgets. I believe that traditional <b>WIMP</b> <b>interfaces</b> can be improved by exploiting extra spatial information, e. g., mouse position and movement, which have been paid little attention so far...|$|R
40|$|We {{explore the}} use of hand postures to {{interact}} with stroke-based rendering (SBR) on touch-sensitive large displays. In contrast to traditional <b>WIMP</b> <b>interfaces,</b> we allow people to directly engage with and influence a rendering. Our system allows {{the creation of new}} stroke primitives as well as provides mechanisms to distribute and then manipulate them on the canvas. We offer a set of natural mappings from hand postures to rendering parameterizations. The resulting system allows an intuitive exploration of SBR without the need for traditional desktop interfaces. ...|$|R
50|$|However, <b>WIMP</b> <b>interfaces</b> are not optimal {{for working}} with complex tasks such as {{computer-aided}} design, working on large amounts of data simultaneously, or interactive games. WIMPs are usually pixel-hungry, so given limited screen real estate they can distract attention from the task at hand. Thus, custom interfaces can better encapsulate workspaces, actions, and objects for specific complex tasks. Applications for which WIMP is not well suited include those requiring continuous input signals, showing 3D models, or simply portraying an interaction {{for which there is}} no defined standard widget.|$|R
50|$|The <b>WIMP</b> <b>interface</b> {{incorporates}} three mouse buttons (named Select, Menu and Adjust), context-sensitive menus, window {{order control}} (i.e. send to back) and dynamic window focus (a window can have input focus at any {{position on the}} stack). The Icon bar (Dock) holds icons which represent mounted disc drives, RAM discs, running applications, system utilities and docked: Files, Directories or inactive Applications. These icons have context-sensitive menus and support drag-and-drop behaviour. They represent the running application as a whole, irrespective of whether it has open windows.|$|E
50|$|The <b>WIMP</b> <b>interface</b> {{is based}} around a {{stacking}} window manager and incorporates three mouse buttons (named Select, Menu and Adjust), context-sensitive menus, window order control (i.e. send to back) and dynamic window focus (a window can have input focus at any {{position on the}} stack). The icon bar (Dock) holds icons which represent mounted disc drives, RAM discs, running applications, system utilities and docked: Files, Directories or inactive Applications. These icons have context-sensitive menus and support drag-and-drop behaviour. They represent the running application as a whole, irrespective of whether it has open windows.|$|E
50|$|The Workplace Shell (WPS) is an {{object-oriented}} desktop shell (also called Desktop Environment) {{produced by}} IBM's Boca Raton development lab for OS/2 2.0. It {{is based on}} Common User Access and made a radical shift away from the Program Manager type interface that earlier versions of OS/2 shared with Windows 3.x or the application-oriented <b>WIMP</b> <b>interface</b> of the Apple Macintosh. The Workplace Shell was also used in OS/2 Warp 3 and Warp 4, and is still the user interface of the revamped successor to OS/2 called eComStation of Serenity Inc.|$|E
40|$|Paper is {{preferred}} and utilized {{far more than}} computers in the composerâ€™s music creation cycle {{because it is the}} natural medium in which music notation convention is learned. Current music notation software utilizes only <b>WIMP</b> <b>interfaces</b> (Windows, Icon, Menus and point and click). Our system enables users to create musical compositions by utilizing digital pen technology and having their work captured and recognized into music notation in the digital world. This recognized pen gesture data has the potential of being imported into a popular musical notation composition program for editing purposes...|$|R
25|$|Since the {{commands}} available in command line interfaces can be many, complex operations {{can be performed}} using a short sequence of words and symbols. This allows greater efficiency and productivity once many commands are learned, but reaching this level takes some time because the command words may not be easily discoverable or mnemonic. Also, using the command line can become slow and error-prone when users must enter long commands comprising many parameters or several different filenames at once. However, windows, icons, menus, pointer (<b>WIMP)</b> <b>interfaces</b> present users with many widgets that represent and can trigger some of the system's available commands.|$|R
40|$|Recent keyboard-based {{alternatives}} to <b>WIMP</b> <b>interfaces</b> {{do not have}} good support for commands that require multiple parameters. We remedy this by extending a previous design and mimicking dialog boxes to provide good visual feedback while still keeping the advantages of keyboard input. A laboratory study showed the new technique to be competitive with dialog boxes on speed and error rate, but strongly preferred over dialog boxes by experienced command line users. This is a marked improvement over the previous design, which was also preferred by the target user group but did not compete with dialog boxes in terms of performance. Author Keywords Command-line interfaces, dialog boxes, WIM...|$|R
5000|$|The GFA BASIC {{interpreter}} is {{compact and}} reasonably fast, and was shipped with a runtime {{that could be}} distributed freely with one's programs. When a compiler was made available, execution speed could be increased by approximately a factor of 2. GFA BASIC allowed extreme optimisations for execution speed, supporting some direct assembler-level calls, and even the ability to embed sections of assembler code directly within the BASIC source code. GFA BASIC integrated neatly into GEM and TOS, the Atari ST's operating system, providing menus, dialog boxes, and mouse control. (See <b>WIMP</b> <b>interface.)</b> ...|$|E
5000|$|Included in Office 2007. This {{release was}} a major upgrade from the {{previous}} version. Similar to other updated Office products, Excel in 2007 used the new Ribbon menu system. This was different from what users were used to, and was met with mixed reactions. One study reported fairly good acceptance by users except highly experienced users and users of word processing applications with a classical <b>WIMP</b> <b>interface,</b> but was less convinced in terms of efficiency and organisation. However, an online survey reported {{that a majority of}} respondents had a negative opinion of the change, with advanced users being [...] "somewhat more negative" [...] than intermediate users, and users reporting a self-estimated reduction in productivity.|$|E
50|$|RISC OS was a rapid {{development}} of Arthur 1.2 after {{the failure of}} the ARX project. The first release was to be called Arthur 2, but was renamed to RISC OS 2, and was first sold as RISC OS 2.00 in April 1989. The operating system implements co-operative multitasking with some limitations but is not multi-threaded. It uses the ADFS file system for both floppy and hard disc access. It initially ran from a 512 KB set of ROMs. The <b>WIMP</b> <b>interface</b> offers all the standard features and fixes many of the bugs that had hindered Arthur. It lacks virtual memory and extensive memory protection (applications are protected from each other, but many functions have to be implemented as 'modules' which have full access to the memory). At the time of release, the main advantage of the OS was its ROM; it booted very quickly and while it was easy to crash, it was impossible to permanently break the OS from software. Its high performance was due to much of the system being written in ARM assembly language.|$|E
40|$|NoThe {{boundaries}} between {{different kinds of}} media spaces are complex and challenging. The convergence of computing, media, and telecommunications produces environments that contain elements of their origins, but also contain new components that allow interaction in new ways by new users with new kinds of information. This poses problems for effective human computer interaction and human media interaction because the paradigms are not well understood. Converged environments are driving these new uses just as the first PCs supported keyboards and then <b>WIMP</b> <b>interfaces.</b> Traditional models of human computer interaction are not adequate {{to deal with this}} complexity, and the shifting of the boundaries brought about by convergence...|$|R
40|$|Keynote paper. International audienceTen years ago, I {{introduced}} {{the notion of}} user interface plasticity to denote the capacity of user interfaces to adapt, or to be adapted, to the context of use while preserving usability. The Model Driven Engineering (MDE) approach, which was used for user interface generation since the early eighties in HCI, has recently been revived to address this complex problem. Although MDE has resulted in interesting and convincing results for conventional <b>WIMP</b> user <b>interfaces,</b> it has not fully demonstrated its theoretical promises yet. In this paper, we discuss how to push MDE to the limit in order to reconcile high-level modeling techniques with low-level programming {{in order to go}} beyond <b>WIMP</b> user <b>interfaces...</b>|$|R
40|$|Construction of LEGO {{models is}} a popular hobby, not only among {{children}} and young teenagers, but also for adults of all ages. Following the technological evolution and the integration of computers into the everyday life, several applications for virtual LEGO modelling have been created. However, these applications generally have interfaces based on windows, icons, menus and pointing devices, the so-called <b>WIMP</b> <b>interfaces,</b> thus being unnatural and hard-to-use for many users. Taking advantage of new trends in of interaction paradigms we developed an innovative solution for virtual LEGO modelling using a horizontal multi-touch surface. To achieve better results, we selected the most common virtual LEGO applications and performed a comparative study, identifying {{advantages and disadvantages of}} each one. In this paper we briefly present that study and describe the application developed upon it...|$|R
5000|$|Because of this, users became {{accustomed}} to {{this style of}} interface, which was common in many productivity products at the time. [...] When Microsoft implemented ribbons, it was met with mixed reactions. Jeff Atwood thought the new system made menus obsolete as a cornerstone of the <b>WIMP</b> <b>interface</b> {{when it was first}} revealed in 2005. Redmondmag.com reported that power users feel the ribbons take [...] "too much time and patience to learn." [...] Richard Ericson from Computerworld noted that experienced users might find difficulties adapting to the new interface, and that some tasks take more key-presses or clicks to activate. Though the ribbon can be hidden by double-clicking on the open tab, PC World wrote that the ribbons crowds the Office work area, especially for notebook users; the customization options available in the original version didn't allow users to rearrange or remove the predefined commands, although it can be minimized. Others have called its large icons distracting. An online survey conducted by ExcelUser reports that a majority of respondents had a negative opinion of the change, with advanced users being [...] "somewhat more negative" [...] than intermediate users; the self-estimated reduction in productivity was an average of about 20%, and [...] "about 35%" [...] for people with a negative opinion.|$|E
40|$|Belinda Barnet {{interviews}} Doug Engelbart [...] -among other things, {{he invented}} the mouse, gave the world's first public demonstration of {{what became the}} <b>WIMP</b> <b>interface</b> (a design that went to Xerox {{and then on to}} Apple), created the first working hypertext system, and also pioneered video conferencing. His lab was the network information center for the early ARPANET...|$|E
40|$|This paper {{describes}} {{an attempt to}} enhance a windows based (WIMP - Windows Icon Menu Pointer) environment. The goal is to establish whether user interaction on the common desktop PC can be augmented by adding new modalities to the <b>WIMP</b> <b>interface,</b> thus bridging the gap between todays interaction patterns and future interfaces comprising e. g. advanced conversational capabilities, VR technology, etc...|$|E
40|$|VR {{systems are}} well {{accepted}} in the product development process today. However this technology {{does not have a}} broad penetration and high number of installations in comparison to desktop systems, due to the high investments in VR technology especially hardware. On the user interface side many VR systems took over ideas from traditional <b>WIMP</b> <b>interfaces</b> (windows, icons, menus, pointers) without maintaining a smooth transition for the users from desktop environments to immersive environments and vice versa. In addition a great bunch of multi modal interaction techniques have been developed to render VR interaction more intuitively. This paper discusses various user interface concepts of VR systems and their use along the product development process. We give examples for solutions and projects developed in collaboration with different companies, such as BMW, Italdesign, FIAT, Airbus...|$|R
40|$|This article {{presents}} an analytical evaluation method for innovative and graphically rich displays beyond the common <b>WIMP</b> <b>interfaces.</b> This method {{is based on}} user strategies and compares different algorithms for creating 2 D or 3 D environments and leads to a correlation measure which can be consulted in the creation process of such environments. The results suggest, that the graphical algorithm may have more influence {{on the quality of}} maps than user strategies. Therefore, the correct choice of appropriate arithmetic algorithms is crucial. Furthermore, the article discusses the extension of the evaluation method to 3 D environments for semantic organization of homogeneous objects. By presenting this method and its results, an example for rigid and user-oriented evaluation of advanced graphical interfaces which are applied in the internet is given...|$|R
40|$|We {{present an}} {{immersive}} system for exploring numerically simulated flow data through {{a model of}} a coronary artery graft. This tightly-coupled interdisciplinary project is aimed at understanding how to reduce the failure rate of these grafts. The visualization system provides a mechanism for exploring the effect of changes to the geometry, to the flow, and for exploring potential sources of future lesions. The system uses gestural and voice interactions exclusively, moving away from more traditional windows/icons/menus/point-and-click (<b>WIMP)</b> <b>interfaces.</b> We present an example session using the system and discuss our experiences developing, testing, and using it. We describe some of the interaction and rendering techniques that we experimented with and describe their level of success. Our experience suggests that systems like this are exciting to clinical researchers, but conclusive evidence of their value is not yet available...|$|R
40|$|International audienceIn this work, we have {{explored}} an approach {{based on the}} hybridisation of physical and digital content for mind-mapping activities at schools. Based on the literature {{in the fields of}} cognitive science and HCI, we have designed a mixed-reality (MR) interface called Reality-Map. We conducted a pilot study with 11 participants suggesting that learning and manipulating information about the brain and their cognitive functions could be improved by the use of such a MR interface compared to a traditional <b>WIMP</b> <b>interface...</b>|$|E
40|$|The {{challenge}} of moving past the classic Window Icons Menus Pointer (<b>WIMP)</b> <b>interface,</b> i. e. by turning it â€˜ 3 Dâ€™, {{has resulted in}} much research and development. To evaluate the impact of 3 D on the â€˜finding a target picture in a folderâ€™ task, we built a 3 D <b>WIMP</b> <b>interface</b> that allowed the systematic manipulation of visual depth, visual aides, semantic category distribution of targets versus non-targets; and the detailed measurement of lower-level stimuli features. Across two separate experiments, one large sample web-based experiment, to understand associations, and one controlled lab environment, using eye tracking to understand user focus, we investigated how visual depth, use of visual aides, use of semantic categories, and lower-level stimuli features (i. e. contrast, colour and luminance) impact how successfully participants are able to search for, and detect, the target image. Moreover in the lab-based experiment, we captured pupillometry measurements to allow consideration {{of the influence of}} increasing cognitive load as a result of either an increasing number of items on the screen, or due to the inclusion of visual depth. Our findings showed that increasing the visible layers of depth, and inclusion of converging lines, did not impact target detection times, errors, or failure rates. Low-level features, including colour, luminance, and number of edges, did correlate with differences in target detection times, errors, and failure rates. Our results also revealed that semantic sorting algorithms significantly decreased target detection times. Increased semantic contrasts between a target and its neighbours correlated with an increase in detection errors. Finally, pupillometric data did not provide evidence of any correlation between the number of visible layers of depth and pupil size, however, using structural equation modelling, we demonstrated that cognitive load does influence detection failure rates when there is luminance contrasts between the target and its surrounding neighbours. Results suggest that WIMP interaction designers should consider stimulus-driven factors, which were shown to influence the efficiency with which a target icon {{can be found in a}} 3 D <b>WIMP</b> <b>interface...</b>|$|E
40|$|The Windows-Icons-Menus-Pointer (<b>WIMP)</b> <b>interface</b> {{paradigm}} dominates modern computing systems. Yet these {{interaction techniques}} were originally developed for machines {{that are now}} 10, 15, or nearly 20 years old. Human-computer interaction currently faces the challenge of getting past this "WIMP plateau" and introducing new techniques which {{take advantage of the}} capabilities of today's computing systems and which more effectively match human capabilities. Two-handed spatial interaction techniques form one possible candidate for the post-WIMP interface in application areas such as scientific visualization, computer aided design, and medical applications...|$|E
40|$|CAD {{systems have}} yet to become usable at {{the early stages of}} product ideation, where precise shape {{definitions}} and sometimes even design intentions are not fully developed. To overcome these limitations, new approaches, which we call Calligraphic Interfaces, use sketching as the main organizing paradigm. Such applications rely on continuous input modalities rather than discrete interactions characteristic of <b>WIMP</b> <b>interfaces.</b> However, replacing direct manipulation by sketching alone poses very interesting challenges. While the temptation to follow the paper-and-pencil metaphor is great, free-hand sketch recognition remains an elusive goal. Further, using gestures to enter commands and sketches to draw shapes requires users to learn a command set [...] sketches do not enjoy the self-disclosing characteristics of menus. Moreover, the imprecise nature of interactions presents additional problems that are difficult to address using present-day techniques. In this pape...|$|R
40|$|The basic {{elements}} of <b>WIMP</b> <b>interfaces</b> {{have proven to be}} robust components for building interactive systems, but these standard interactors also have limitations. On many occasions, researchers have introduced augmented GUI elements that are capable of more expressive interactions and that are better suited to user tasks. Although many of these novel designs have been effective, augmented interactors are still invented in an ad-hoc fashion, and there is no systematic way of thinking about or designing augmentations. As a result, there is little understanding of the principles underlying augmentation, the relationships between different designs, or the possibilities for creating new interactors. In this paper we present a framework that specifies elemental interactions with WIMP components and identifies the possible ways in which augmentations can occur. We show the explanatory and generative power of the framework by analysing existing and novel augmented interactions...|$|R
40|$|Multi-touch {{interfaces}} {{have been}} a focus of research in recent years, resulting in development of various innovative UI concepts. Support for existing <b>WIMP</b> <b>interfaces,</b> however, should not be overlooked. Although several approaches exist, there is still room for improvement, particularly regarding implementation of the "hover" state, commonly used in mouse-based interfaces. In this paper, we present a multi-touch system {{which is designed to}} address this problem. A multi-touch table based on FTIR (frustrated total internal reflection) is extended with a ceiling-mounted light source to create shadows of hands and arms. By tracking these shadows with the rear-mounted camera which is already present in the FTIR setup, users can control multiple cursors without touching the table and trigger a "click" event by tapping the surface with any finger of the corresponding hand. An informal evaluation with 15 subjects found an improvement in accuracy when compared to an unaugmented touch screen...|$|R
