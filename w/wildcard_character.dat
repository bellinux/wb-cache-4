32|38|Public
500|$|The Gottlieb {{staff had}} {{difficulty}} naming the game. Aside {{from the project}} name [...] "Cubes", it was untitled {{for most of the}} development process. The staff agreed the game should be named after the main character, but disagreed on the name. Lee's title for the initial concept—Snots And Boogers—was rejected, as was a list of suggestions compiled from company employees. According to Davis, vice president of marketing Howie Rubin championed [...] as the title. Although staff members argued it was silly and would be impossible to pronounce, a few early test models were produced with [...] as the title on the units' artwork. During a meeting, [...] "Hubert" [...] was suggested, and a staff member thought of combining [...] "Cubes" [...] and [...] "Hubert" [...] into [...] "Cubert". Art director Richard Tracy changed the name to [...] "Q-bert", and the hyphen was later changed to an asterisk. In retrospect, Davis expressed regret for the asterisk, because he felt it prevented the name from becoming a common crossword term and it is a <b>wildcard</b> <b>character</b> for search engines.|$|E
2500|$|The web {{interface}} {{allows users to}} access the BioSD database through a web browser. It provides functionality for both searching by sample groups and by samples themselves. The search features incremental search to assist users by providing them with possible search terms as they type. Advanced search is provided and allows users to search by applying the binary terms, AND, OR and NOT, to their search terms. Additionally, a <b>wildcard</b> <b>character</b> {{can be used to}} match any combination of characters including no characters. A question mark character {{can also be used to}} match any single character. Examples of these can be seen in the following table: ...|$|E
5000|$|Support for <b>wildcard</b> <b>character</b> in file names {{used with}} {{command-line}} switches.|$|E
5000|$|Like other {{operating}} systems, AmigaDOS {{also provides}} <b>wildcard</b> <b>characters</b> that are substitutes for any character or any sequence of random {{characters in a}} string. Here {{is an example of}} <b>wildcard</b> <b>characters</b> in AmigaDOS commands: ...|$|R
5000|$|... pathnames {{may contain}} <b>wildcard</b> <b>characters</b> '?' and '*' (CD FOO*\B?R {{will enter the}} first {{directories}} that match the names) ...|$|R
5000|$|Specifies {{the file}} where the cmdlet stores the object. The {{parameter}} accepts <b>wildcard</b> <b>characters</b> that resolve {{to a single}} file.|$|R
5000|$|Another {{approach}} to text comparisons {{is to allow}} one or more <b>wildcard</b> <b>character</b> characters. For example, if an asterisk is designated as a wild <b>wildcard</b> <b>character</b> in a particular system, then searching for last names using [...] "Rob*" [...] would return (match) last names such as [...] "Rob", [...] "Robert", [...] "Robertson", [...] "Roberto", etc.|$|E
5000|$|Whether the <b>wildcard</b> <b>character</b> {{represents}} a single character or {{a string of}} characters must be specified.|$|E
50|$|In {{computer}} science, the asterisk {{is commonly}} used as a <b>wildcard</b> <b>character,</b> or to denote pointers, repetition, or multiplication.|$|E
40|$|Abstract The paper first analysis’s {{the types}} {{and methods of}} the <b>wildcard</b> <b>characters,</b> then discuss the {{matching}} in manufacturing engineering problems which it exists in the pattern matching. According to the problems, it puts forward algorithm to realize approximate matching. At last, it provides the flow charts and examples of the algorithm. From the example of experimental result, exact machining can be realized approximate matching through the <b>wildcard</b> <b>characters.</b> So various matching algorithm can be extended and used more...|$|R
50|$|The switch {{statement}} compares {{a string}} against {{a list of}} patterns, which may contain <b>wildcard</b> <b>characters.</b> If nothing matches, the default action, if there is one, is taken.|$|R
50|$|The C shell, {{like all}} Unix shells, treats any {{command-line}} argument that contains <b>wildcard</b> <b>characters</b> as a pattern and replaces {{it with the}} {{list of all the}} filenames that match (see globbing).|$|R
5000|$|In {{high-frequency}} (HF) radio automatic link establishment, the <b>wildcard</b> <b>character</b> [...] may {{be substituted}} for {{any one of the}} 36 upper-case alphanumeric characters.|$|E
50|$|Furthermore, {{when the}} rules refer generically to a Protagonist or Antagonist the text uses *Tagonist as a generic {{alternative}} (borrowing the unix-style <b>wildcard</b> <b>character</b> *).|$|E
5000|$|In SQL, {{the percent}} sign is a <b>wildcard</b> <b>character</b> in [...] "LIKE" [...] expressions, for example [...] will fetch all records whose names start with [...] "Lisa [...] ".|$|E
50|$|When the <b>wildcard</b> <b>characters</b> {{are used}} {{on both sides}} of the search word as %wikipedia.org%, the index {{available}} on this field is not used. Rather only a sequential search is performed, which takes O(N) time.|$|R
5000|$|In Windows NT-based {{operating}} systems, {{command prompt}} (...) applets accept long filenames with <b>wildcard</b> <b>characters</b> (question sign '?' and asterisk '*'); long filenames with spaces in them {{need to be}} escaped (i.e. enclosed in single or double quotes).|$|R
5000|$|While the {{resources}} can be loosely specified via the <b>wildcard</b> <b>characters,</b> queries {{for the value}} of a resource must specify that resource exactly. For example, a resource can specify that the background of every component of the [...] program must be red: ...|$|R
5000|$|The [...] "x" [...] is {{intended}} to stand as a <b>wildcard</b> <b>character,</b> and does not imply a [...] "mixed" [...] gender. [...] "Mx" [...] is usually pronounced [...] "mix" [...] or with a schwa, [...] "məx".|$|E
5000|$|The {{word was}} first {{proposed}} in the late 1970s. The [...] "x" [...] is intended to stand as a <b>wildcard</b> <b>character</b> (cf. 'Tx' in electronics, short for 'transmit'), and does not imply a [...] "mixed" [...] gender.|$|E
50|$|The SELECT clause {{specifies}} a list {{of properties}} (columns) by name, or the <b>wildcard</b> <b>character</b> (“*”) to mean “all properties”. Notice the special case of joinpropname, this provides for joins, but only on the jcr:path column, as described in 8.5.2 Database View. See also 6.6.3.1 Column Specifier.|$|E
5000|$|The usual {{context of}} <b>wildcard</b> <b>characters</b> is in globbing similar names in {{a list of}} files, whereas regexes are usually {{employed}} in applications that pattern-match text strings in general. For example, the regex [...] matches excess whitespace at the beginning or end of a line. An advanced regex used to match any numeral is [...] See the Examples section for more examples.|$|R
25|$|Search {{capacities}} of crystallographic databases differ widely. Basic functionality comprises search by keywords, physical properties, and chemical elements. Of particular importance is search by compound name and lattice parameters. Very useful are search options {{that allow the}} use of <b>wildcard</b> <b>characters</b> and logical connectives in search strings. If supported, {{the scope of the}} search can be constrained by the exclusion of certain chemical elements.|$|R
25|$|The SafetyLit {{database}} {{contains more}} than 515,000 journal articles (as of 12 October 2016) with more than 400 articles and 50 gray literature items being added each week. The database may be searched by author name or textword using the basic search screen or, if the advanced search screen is used, by author name, author ORCID ID number, textword (with <b>wildcard</b> <b>characters</b> and truncation), hybrid textword+synonyms, or journal using Boolean operators.|$|R
5000|$|The most {{commonly}} known hierarchies are the Usenet hierarchies. So for instance newsgroup rec.arts.sf.starwars.games {{would be in}} the rec.* top-level Usenet hierarchy, where the asterisk (*) is defined as a <b>wildcard</b> <b>character.</b> There were seven original major hierarchies of Usenet newsgroups, known as the [...] "Big 7": ...|$|E
5000|$|In software, a <b>wildcard</b> <b>character</b> {{is a kind}} of {{placeholder}} {{represented by}} a single character, such as an asterisk (...) , which can be interpreted as a number of literal characters or an empty string. It is often used in file searches so the full name need not be typed.|$|E
5000|$|Researchers {{frequently}} use a lowercase [...] "x" [...] as a <b>wildcard</b> <b>character</b> when {{referring to}} a series such as x4C instead of using an uppercase [...] "G", [...] "H", [...] "M", [...] "S", or [...] "Z" [...] for the first letter designator. Likewise, an [...] "x" [...] {{can be used for}} the second letter designator {{when referring to}} all seals with the same word, such as H2x in lieu of H2D, H2T, and H2U.|$|E
5000|$|In {{computer}} programming, {{in particular}} in a Unix-like environment, glob patterns specify sets of filenames with <b>wildcard</b> <b>characters.</b> For example, the Unix command [...] moves (...) all files with names ending in [...] from the current directory to the directory [...] Here, [...] is a wildcard standing for [...] "any string of characters" [...] and [...] is a glob pattern. The other common wildcard is the question mark (...) , which stands for one character.|$|R
5000|$|The command interpreters of {{the early}} {{versions}} of Unix (1st through 6th Editions, 1969-75) relied on a separate program to expand <b>wildcard</b> <b>characters</b> in unquoted arguments to a command: /etc/glob. That program performed the expansion and supplied the expanded list of file paths to the command for execution. Its name is an abbreviation for [...] "global command". [...] Later, this functionality was provided as a library function, glob (...) , used by {{programs such as the}} shell.|$|R
5000|$|Querying with term stemming, term <b>wildcards</b> and <b>character</b> {{position}} patterns, for inflected {{words and}} plural word forms delivering automagical self merge-joins ...|$|R
50|$|In mathematics, and {{in other}} {{disciplines}} involving formal languages, including mathematical logic and computer science, a free variable is a notation that specifies places in an expression where substitution may take place. Some older books use the terms real variable and apparent variable for free variable and bound variable. The idea is related to a placeholder (a symbol that will later be replaced by some literal string), or a <b>wildcard</b> <b>character</b> that stands for an unspecified symbol.|$|E
5000|$|In {{a system}} that uses c-squares codes as units of spatial indexing, a text-based search {{on any of these}} square {{identifiers}} will retrieve data associated with the relevant square. If a wildcard search is supported (for example suppose that the <b>wildcard</b> <b>character</b> is a percent sign), a search on [...] "7500%" [...] will retrieve all data items in that ten degree square, a search on [...] "7500:1%" [...] will retrieve all data items in that five degree square, etc.|$|E
50|$|X {{resources}} {{are designed to}} allow the same parameter to be specified {{for more than one}} program or component. This is realized by allowing wildcard characters in a resource specification. In particular, the ? character is used to match the application name or a single component. The * character is used to match any number of components. These two characters can be used anywhere {{but at the end of}} the resource name. In other words, an attribute cannot be replaced by a <b>wildcard</b> <b>character.</b>|$|E
5000|$|A user initiates {{a search}} by typing a 'search command' {{followed}} by a 'search string' within the channel window. Various search commands exist, including '@find', '@search', and '@seek', depending on what serving script is being used. [...] <b>Wildcard</b> <b>characters</b> such as * {{can also be used}} in the search string to simplify a search. The search command will then return a list of files to the user's query window if any servers have a file that matches the search string.|$|R
5000|$|However, when {{a program}} (e.g., the xmail program itself, when {{it wants to}} find out which {{background}} color to use) accesses the resource database via Xlib functions, it can only request the value of a specific resource. Contrary to most databases, the stored data can be specified loosely (via <b>wildcard</b> <b>characters),</b> but the interrogation cannot. For example, a program can query for the value of [...] or of , but cannot use [...] or [...] to check the background color of several components at once.|$|R
2500|$|While {{it may be}} {{advantageous}} to identify a specific virus, it can be quicker to detect a virus family through a generic signature or through an inexact match to an existing signature. Virus researchers find common areas that all viruses in a family share uniquely and can thus create a single generic signature. These signatures often contain non-contiguous code, using <b>wildcard</b> <b>characters</b> where differences lie. These wildcards allow the scanner to detect viruses {{even if they are}} padded with extra, meaningless code. A detection that uses this method is said to be [...] "heuristic detection." ...|$|R
