45|73|Public
50|$|His {{research}} interests include computer architecture, pipelining theory, parallel processing, performance modeling, intelligent caches, and application tuning. In the 70s, he developed the reservation table approach to optimum design and cyclic scheduling of pipelines, designed and implemented an eight-node symmetric multiprocessor (SMP) system in 1976, and developed a variety of systematic methods for modeling performance and enhancing systems, including early work on simulated annealing, <b>wave</b> <b>pipelining,</b> multiple instruction stream pipelines, decoupled access-execute architecture, and polycyclic scheduling (aka software pipelining). He is a Fellow of the IEEE.|$|E
40|$|This paper {{presents}} {{methods for}} optimizing application-specific networks-on-chips (NoCs). We show that <b>wave</b> <b>pipelining</b> provides more energy efficient data transport than non-wave pipelined communication. We observe 52 % energy saving, 60 % transistor area saving, and 1. 7 times speedup by using <b>wave</b> <b>pipelining</b> in simulation. <b>Wave</b> <b>pipelining</b> is particularly {{well suited to}} networks-on-chips because the network’s structured interconnection provides better delay control. Our analysis shows how designers can tune their network {{to the requirements of}} the application by choosing a design point along area/performance or area/energy curves...|$|E
40|$|<b>Wave</b> <b>pipelining</b> is a {{technique}} for pipelining digital systems that can increase clock frequency in practical circuits without {{increasing the number of}} storage elements. In <b>wave</b> <b>pipelining,</b> multiple coherent waves of data are sent through a block of combinational logic by applying new inputs faster than the delay through the logic. The throughput of a 63 -b CML population counter was increased from 97 to 250 MHz using <b>wave</b> <b>pipelining.</b> The internal circuit is flowthrough combinational logic. Novel CAD methods have balanced all input-to-output paths to about the same delay. This allows multiple data waves to propagate in sequence when the circuit is clocked faster than its propagation delay...|$|E
40|$|Abstract—This paper {{presents}} {{a model for}} analyzing the re-liability of a clockless <b>wave</b> <b>pipeline</b> as an intellectual property (IP) core for embedded design. This design requires different clocking requirements by each embedded IP core during integra-tion. Therefore, either partial or global lack of synchronization of the embedded clocking is considered for the data flow. The clockless <b>wave</b> <b>pipeline</b> re{{presents a}}n alternative to a traditional pipeline scheme; it requires an innovative computing model that is readily suitable for high-throughput computing by heterogeneous IP logic cores embedded in system-on-chip (SoC). A clockless <b>wave</b> <b>pipeline</b> technique relies on local asynchronous operation for seamless integration of a combinational core into an SoC. The basic computational components of a clockless <b>wave</b> <b>pipeline</b> are the datawaves, together with the request signals and switches. The coordination of the processing of the datawaves throughout th...|$|R
40|$|This paper {{presents}} a fault tolerant design technique for the clockless <b>wave</b> <b>pipeline.</b> The specific architectural model investigated {{in this paper}} is the two-phase clockless asynchronous <b>wave</b> <b>pipeline</b> [10] which is ideally supposed to yield the theoretical maximum of performance. Request signal is the most critical component for the clockless-induced control of the <b>wave</b> <b>pipelined</b> processing of data. In practice, the request signal is very sensitive and vulnerable to electronic crosstalk noise, and this problem has become exteremely stringent for the ultra-high density integrated circuits today. Electronic noise may devastate the operational confidence level of the clockless <b>wave</b> <b>pipeline.</b> In this context, this paper characterizes the yield and reliability properties of the two-phase clockless asynchronous pipeline. Based on the yield characterization, a simple yet effective fault tolerance architecture and algorithm is proposed on the request signal lines as the most critical component for high confidence clockless asynchronous <b>wave</b> <b>pipeline</b> processing. A reliability model is developed to evaluate {{the effect of the}} request signal crosstalk noise, referred to as glitch. An example experiment and simulation is shown to demonstrate the efficiency and effectiveness of the proposed technique. ...|$|R
40|$|This paper {{presents}} theoretical yet practical methodologies to model, assure and {{optimize the}} Reliability of Clockless <b>Wave</b> <b>Pipeline.</b> Clockless <b>wave</b> <b>pipeline</b> is a cutting-edge and innovative technology {{as an alternative}} to traditional pipeline, and a promising computing model towards ultra-high throughput and speed. The basic computational components of such clockless <b>wave</b> <b>pipeline</b> are data <b>waves</b> in association with request signals and switches. The key to the success of clockless <b>wave</b> <b>pipeline</b> is how to coordinate and ensure the processing of datawaves throughout the pipeline in association with the request signals without relying on any intermediate access points under clocked-control. Due to the complication of clockless operations, an efficient and effective method to model and analyze the confidence level (referred to as reliability or yield) of clockless operations of <b>wave</b> <b>pipeline</b> is exigently demanded, but has not yet been adequately addressed, in an integrated level such as datawaves in association with request signals, leaving this as a challenge. In this regard, out-of-orchestration between datawaves and request signals, referred to as datawave fault, is the major concern in assuring and optimizing the reliability of the system. This paper specifically addresses and resolves: extensive and practical clockless-induced datawavefault modeling; assurance and optimization; clockless-oriented fault tolerant design methods. The proposed methods will establish a sound and adequate theoretical foundation for development of innovative yet practical test/diagnosis/fault-tolerant design methods in early design stage of clockless <b>wave</b> <b>pipeline.</b> ...|$|R
40|$|Aggressive design using level-sensitive latches and <b>wave</b> <b>pipelining</b> {{has been}} {{proposed}} to meet the increasing need for higher performance digital systems. The optimal clocking problem for such designs has been formulated using an accurate timing model. However, this problem {{has been difficult to}} solve because of its nonconvex solution space. The best algorithms to date employ linear programs to solve an overconstrained case that has a convex solution space, yielding suboptimal solutions to the general problem. A new efficient (cubic complexity) algorithm, Gpipe, exploits the geometric characteristics of the full nonconvex solution space to determine the maximum single-phase clocking rate for a closed pipeline with a specified degree of <b>wave</b> <b>pipelining.</b> Introducing or increasing <b>wave</b> <b>pipelining</b> by permanently enabling some latches is also investigated. Sufficient conditions have been found to identify which latches can be removed in this fashion so as to guarantee no decrease and permit a possible increase in the clock rate. Although increasing the degree of <b>wave</b> <b>pipelining</b> can result in faster clocking, <b>wave</b> <b>pipelining</b> is often avoided in design due to difficulties in stopping and restarting the pipeline under stall conditions without losing data, or in reduced rate testing of the circuit. To solve this problem, which has not previously been addressed, we present conditions and implementation methods that insure the stoppability and restartability of a wave pipeline...|$|E
40|$|A Hybrid <b>Wave</b> <b>Pipelining</b> Phase Accumulator for Direct Digital Synthesizer is {{presented}} in this paper. Conventional Pipelining requires additional registers and it results in more area, power dissipation and clock routing complexity. Wave-pipelining {{does not have any}} of these disadvantages and {{it can be used to}} speed up the circuits without insertion of storage elements. The clock period in conventional pipeline scheme is proportional to the maximum delay while in hybrid wave-pipelining it is proportional to the maximum delay difference. To prove the better performance of the Hybrid <b>wave</b> <b>pipelining</b> Phase Accumulator DDS architecture compared it favorably with several existing DDS architecture. The focus of this paper is on design and analysis of hybrid <b>wave</b> <b>pipelining</b> Phase Accumulator DDS, using XilinxISE 9. 2 i...|$|E
40|$|<b>Wave</b> <b>pipelining</b> is {{a design}} {{technique}} {{for increasing the}} throughput of a digital circuit or system without introducing pipelining registers between adjacent combinational logic blocks in the circuit/system. However, this requires balancing of the delays along all the paths from the input to the output which comes the way of its implementation. Static CMOS is inherently susceptible to delay variation with input data, and hence, receives a low priority for wave pipelined digital design. On the other hand, ECL and CML, which are amenable to <b>wave</b> <b>pipelining,</b> lack the compactness and low power attributes of CMOS. In this paper we attempt to exploit <b>wave</b> <b>pipelining</b> in CMOS technology. We use a single generic building block in Normal Process Complementary Pass Transistor Logic (NPCPL), modeled after CPL, to achieve equal delay along all the propagation paths in the logic structure. An 8 × 8 b multiplier is designed using this logic in a 0. 8 ?m technology. The carry-save multiplier architecture is modified suitably to support <b>wave</b> <b>pipelining,</b> viz., the logic depth of all the paths are made identical. The 1 mm× 0. 6 mm multiplier core supports a throughput of 400 MHz and dissipates a total power of 0. 6 W. We develop simple enhancements to the NPCPL building blocks that allow the multiplier to sustain throughputs in excess of 600 MHz. The methodology can be extended to introduce <b>wave</b> <b>pipelining</b> in other circuits as wel...|$|E
40|$|The <b>wave</b> <b>pipeline</b> {{effect is}} based on the {{equalization}} of all path delays in order to allow several Awaves@ of data to travel along the circuit with a separation several times smaller than the maximum combinational delay of the circuit. The construction of <b>wave</b> <b>pipelines</b> requires gates and buffers with dataindependent delay, and a well-characterized interconnection network delay model, in order to allow the equalization process to be managed by the designer. These features are inherently present in several RAM-based FPGAs architectures. Look-up tables (LUTs) permit the delay of digital blocks with different types of gates or different logic depth to be equalized; moreover, the delay of a FPGA interconnection network is completely parameterized and is a priori known. This paper describes a LUT-based <b>wave</b> <b>pipeline</b> array multiplier manually implemented using a Xilinx chip. The results show that, even for a single-phase non-skewed clocking strategy, a throughput as high as 85 MHz (measured) can be achieved, with 8 waves running in a 13 -LUT logic depth combinational array with registered I/O, producing an initial latency of 9 clock cycles. For the FPGA architecture and the topology selected, such a large throughput/latency ratio would be impossible using classical pipelininig. ...|$|R
50|$|The {{maximum rate}} that {{data can be}} fed into a <b>wave</b> <b>pipeline</b> is {{determined}} by the maximum difference in delay between the first piece of data coming out of the pipe and the last piece of data, for any given wave. If data is fed in faster than this, it is possible for waves of data to interfere with each other.|$|R
40|$|Accumulate Repeat Accumulate-Low Density Parity Check Codes (ARA-LDPC) are a kind {{of linear}} block codes having self error {{correcting}} capabilities. It is used to transmit messages efficiently over noisy transmission channels. Due to this, the probability of information loss can be made as small as possible. The inherent feature of these codes is that the data transmission rate approaches Shannon limit, which is the theoretical maximum data transfer rate for a particular noise level. The ARA codes have a fast encoder structure and follow a protograph representation for high speed iterative decoding. Because of these unique features, the ARA-LDPC codes are the most suitable for deep space applications. In this project, an architectural model of ARA-LDPC encoder is designed and simulated in Modelsim, synthesized using Xilinx ISE, for sequential, <b>pipelined</b> and <b>wave</b> <b>pipelined</b> architectures and the performance is analyzed in SYNOPSYS and XILINX environments. The most efficient <b>wave</b> <b>pipelined</b> architecture is implemented in Spartan 3 E FPGA for a block size of 1024 bits...|$|R
40|$|Abstract—In this paper, a novel hybrid wave pipelined bitpattern {{associative}} router (BPAR) is presented. A router is {{an important}} component in communication network systems. The BPAR allows for flexibility and can accommodate a large number of routing algorithms. In this study, a hybrid wave pipelined approach has been proposed and implemented. Hybrid <b>wave</b> <b>pipelining</b> allows for the reduction of the delay difference between the maximum and minimum delays by narrowing the gap between each stage of the system. This approach yields narrow “computing cones ” that could allow faster clocks to be run. This is the first study in <b>wave</b> <b>pipelining</b> that deals with a system that has substantially different pipeline stages. The BPAR has three stages: condition match, selection function, and port assignment. In each stage, data delay paths are tightly controlled in order to optimize the proper propagation of signals. Internal control signals are generated to ensure that data propagates between stages in a proper fashion. Results from our study show that using a hybrid <b>wave</b> <b>pipelining</b> significantly reduces the clock period. The hybrid wave pipelined system described in this paper has been fabricated using a 0. 5 - m technology. Index Terms—Bit-pattern associative memory, computer network address decoder, delay balancing, dynamic ternary content addressable memory, hybrid <b>wave</b> <b>pipelining,</b> wave pipelined clock. I...|$|E
40|$|<b>Wave</b> <b>pipelining</b> {{has gained}} {{attention}} for NoC interconnect by its promise of high bandwidth using simple circuits. Reliability issues {{must be addressed}} before <b>wave</b> <b>pipelining</b> {{can be used in}} practice; so, we develop a statistical model of dynamic timing uncertainty. We show {{that it is important to}} distinguish between static and dynamic sources of timing uncertainty, because source-synchronous <b>wave</b> <b>pipelining</b> is much more sensitive to the latter. We use HSPICE simulations to develop a model for a wave pipelined link in a 65 nm CMOS process and apply a statistical approach to determine the achievable throughput at acceptable bit-error rates. Reliability estimates show that a modest amount of dynamic noise can cut achievable throughput in half for a ten-stage wave-pipelined link, and will further degrade longer links. After accounting for noise, traditional globally synchronous design is shown to offer higher throughput than the wave-pipelined design. ...|$|E
40|$|<b>Wave</b> <b>pipelining</b> is a {{technique}} for designing pipelined digital circuits that can increase the clock frequency of the system without {{increasing the number of}} registers. In <b>wave</b> <b>pipelining,</b> new input data are applied to a combinational logic circuit before the previous data are available. In this way, coherent waves of data are generated through the logic circuit. The minimal clock period at which new input data can be applied is limited by the difference between maximal and minimal propagation delays. To achieve maximal clock frequency path delays have to be equalized. In this paper algorithms are proposed to equalize propagation delays in combinational logic circuits for <b>wave</b> <b>pipelining.</b> Path delays are equalized by inserting delay elements (padding elements) to lengthen the propagation delay of the short paths. By using redundant delay elements it is shown that any circuit can be perfectly balanced independently of the implementability of delay elements. Keywords and phrases: Combin [...] ...|$|E
40|$|Abstract — Address base-plus-offset summing is {{merged into}} the decode {{structure}} of this 64 -KByte (512 -Kbit), four-way setassociative cache. This address adder avoids time-consuming carry propagation {{by using an}} e C f a u equality test. The combined add and access operations are implemented using delayed-reset logic and a 0. 25 -&quot;m process. This <b>wave</b> <b>pipelined</b> RAM achieves a 1. 6 -ns cycle time and 2. 6 -ns latency for the combined address add and cache access. I...|$|R
50|$|In 2011, Florence {{suffered}} a broken back while riding a <b>wave</b> at <b>Pipeline.</b> He {{has also had}} a broken wrist, broken leg, broken arm and ankle ligament tear.|$|R
40|$|A new decoder {{architecture}} for low-density {{parity check}} (LDPC) codes is proposed {{in this paper}} to reduce the hardware operational complexity in VLSI implementations. The low decoding complexity of LDPC Decoder Architecture is achieved by employing adaptive message control (AMC) with <b>wave</b> <b>pipelined</b> {{to reduce the amount}} of memory accesses and arithmetic operations. The proposed LDPC decoder architecture can significantly reduce hardware operations and power consumption as compared with existing work. The architecture is synthesized on a Xilinx 9. 2 i as Synopsys tool targeted to CPLD. I...|$|R
40|$|SUMMARY This paper {{presents}} a new asynchronous FIFO design to reduce forward latency in a linear structure. The operation mode for each cell can be reconfigured dynamically as {{either of the}} two schemes, <b>wave</b> <b>pipelining</b> or handshaking, according to the data flow in the FIFO. The adoption of <b>wave</b> <b>pipelining</b> to the conventional self-timed FIFO can reduce the overhead of the handshaking as well as latching control in each stage. Initial pre-layout simulations indicate about two times of improvement on latency performance over a state-of-art asynchronous FIFO, while retaining its throughput. key words: asynchronous FIFO, wave pipeline, linear structure, forward latency, throughput 1...|$|E
40|$|DWP, a new {{interconnect}} {{structure for}} asynchronous networks on chip in multiprocessing SoCS, yields higher throughput, consumes less power, suffers less from crosstalk noise, and requires less area than traditional interconnect structures. Its advantages stem from techniques including <b>wave</b> <b>pipelining,</b> double-data-rate transmission, interleaved lines, misaligned repeaters, and clock gating...|$|E
40|$|Many design {{techniques}} {{have been proposed}} to optimize {{the performance of a}} digital system implemented in a given technology. These techniques include retiming, insertion of intentional clock skew, insertion of buffers, transistor sizing, resynthesizing, and <b>wave</b> <b>pipelining.</b> Each of these techniques can be advantageous in particular applications, and they are often applied individually to enhance performance. In this paper, a mixed integer linear programming formulation is derived in which the performance of edge-triggered design is optimized by simultaneously adjusting clock skew, retiming the circuit, and applying <b>wave</b> <b>pipelining</b> methods. This formulation is applicable to a broad range of digital circuits. We have applied our formulation to the design examples of a RISC microprocessor, a multiplier, and a correlator. In doing so, we were able to reduce the system clock period several fold in each design. A benefit of this approach to timing optimization is that unintentional clock ske [...] ...|$|E
40|$|Pipeline {{architectures}} {{are often}} considered in VLSI designs that require high throughput. The draw-backs for traditional pipelined architectures are the increased area, power, and latency required for implementation. However, with increased design effort, wave-pipelining {{can be applied}} {{as an alternative to}} a pipelined circuit to reduce the pipeline area, power, and latency while maintaining the original functionality and timing of the overall circuit. The objective of this paper is the successful application of the theories of wave-pipelining in a practical digital system. To accomplish this, the pipelined portion of an Multi-Channel Adaptive Differential Pulse Code Modulation (ADPCM) Coder-Decoder (CODEC) is replaced with a <b>wave</b> <b>pipeline</b> design...|$|R
5000|$|The takeoff zone (the area {{in which}} a surfer {{needs to be in}} order to catch a <b>wave)</b> at <b>Pipeline</b> is small, but a large number of surfers tend to congregate there when it is {{breaking}} large.|$|R
25|$|The <b>waves</b> at <b>Pipeline</b> {{can reach}} over 20 feet and its {{powerful}} disposition {{has taken the}} lives of professional surfers. If a visiting surfer collided with another surfer, this could result in serious harm or death. These observations led to the Wolfpak’s proactive enforcement on the North Shore.|$|R
40|$|FPGA user clocks {{are slow}} enough {{that only a}} {{fraction}} of the interconnect’s bandwidth is actually used. There may be an opportunity to use throughput-oriented interconnect to decrease routing congestion and wire area using on-chip serial signaling, especially for datapath designs which operate on words instead of bits. To do so, these links must operate reliably at very high bit rates. We compare <b>wave</b> <b>pipelining</b> and surfing source-synchronous schemes in the presence of power supply and crosstalk noise. In particular, supply noise is a critical modeling challenge; better models are needed for FPGA power grids. Our results show that <b>wave</b> <b>pipelining</b> can operate at rates as high as 5 Gbps for short links, but it is very sensitive to noise in longer links and must run much slower to be reliable. In contrast, surfing achieves a stable operating bit rate of 3 Gbps and is relatively insensitive to noise...|$|E
40|$|<b>Wave</b> <b>pipelining,</b> or {{maximum rate}} pipelining, is a circuit design {{technique}} that allows digital synchronous systems to be clocked at rates higher {{than can be}} achieved with conventional pipelining techniques. It relies on the predictable finite signal propagation delay through combinational logic for virtual data storage. <b>Wave</b> <b>pipelining</b> of combinational circuits {{has been shown to}} achieve clock rates 2 to 7 -times those possible for the same circuits with conventional pipelining. Conventional pipelined systems allow data to propagate from a register through the combinational network to another register prior to initiating the subsequent data transfer. Thus, the maximum operating frequency is determined by the maximum propagation delay through the longest pipeline stage. Wave pipelined systems apply the subsequent data to the network as soon as it can be guaranteed that it will not interfere with the current data wave. The maximum operating frequency of a wave pipeline is therefore determ [...] ...|$|E
40|$|Personal {{use of this}} {{material}} is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including reprinting/republishing {{this material}} for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse of any copyrighted component of this work in other works. E. I. Boemo, S. López-Buedo, and J. M. Meneses, "Some experiments about <b>wave</b> <b>pipelining</b> on FPGA's", IEEE Transactions on Very Large Scale Integration (VLSI) Systems, v. 6, n. 2, p. 232 - 237 <b>Wave</b> <b>pipelining</b> offers a unique combination of high speed, low latency, and moderate power consumption. The construction of wave pipelines is benefited {{by the use of}} gates and buffers with data-independent delays and the knowledge of the interconnection delays. These two features are present in several SRAM-based field programmable gate arrays (FPGA's) : look-up tables (LUT's) allow the designer to mask the delay of different gates and combinational functions, and the timing characteristics of each wire segment are a priori known. This work describes a set of experiments about <b>wave</b> <b>pipelining</b> on FPGA's. The results show that a 13 -LUT logic depth circuit mapped on an XC 4005 PC 84 - 6 runs as high as 85 MHz (single phase clocking) or 80 MHz (intentionally skewed clocking), exhibiting a latency of 95 ns. This high throughput/latency ratio is unattainable using classic pipelining. This work was supported by the CICYT of Spain under Contract TIC 95 - 0971...|$|E
40|$|Low-latency event {{triggers}} {{to signify}} {{the presence of}} gravitational waves from coalescing binaries {{will be required to}} make prompt electromagnetic follow-up observations of electromagnetic counterparts. We present the recent progress made on implementing the time-domain low-latency detection algorithm known as summed parallel infinite impulse response (SPIIR) filtering into a real gravitational <b>wave</b> search <b>pipeline...</b>|$|R
40|$|Abstract: We have {{developed}} and experimentally evaluated at high-speed, {{a complete set}} of arithmetic circuits (multiply, add, and accumulate) for high performance digital signal processing (DSP). These circuits take advantage of the unique features of the Rapid Single-Flux Quantum (RSFQ) logic/memory family, including fusion of logic and memory functions at the gate level, pulse representation of clock and data, and the ability to maintain inter cell propagation delays using Josephson transmission lines (JTLs). The circuits developed have been successfully used in the implementation of a serial radix 2 butterfly, a decimation digital filter, and of an arithmetic unit for digital beam forming. The 8 × 8 -bit RSFQ multiplier uses a two- level parallel carry- save reduction tree that significantly reduces the multiplier latency. The 80 -GHz carry-save reduction is implemented with asynchronous data-driven <b>wave</b> <b>pipelined</b> [4 : 2] compressors built with toggle flip-flop cells...|$|R
40|$|High {{throughput}} and {{low latency}} designs are required in modern high performance systems, especially for signal processing applications. Existing logic families cannot provide both of t h e m simultaneously. We propose a Normal Process Complementary Pass Transistor Logic (NPCPL) {{which can be}} used as a universal logic to provide finest grain pipelining without affecting overall latency o r increasing the area. It does n o t require any special process steps and hence, can be Tealised in a normal process technology as against the CPL proposed by Yano et al [2] which uses threshold voltage adjustment of selected devices. The design procedure is described for (a) low latency, (b) high throughput and (c) low area requirements. In addition to the various advantages, it is envisioned that NPCPL designs can also be used to build ultra-high speed pipelined system without <b>pipelining</b> latches, viz., <b>wave</b> <b>pipelined</b> digital systems, where the throughput achievable is beyond that permitted by the delay of a pipeline stage...|$|R
40|$|<b>Wave</b> <b>pipelining</b> {{offers a}} unique {{combination}} of high speed, low latency and moderate power consumption. The construction of wave pipelines is benefited {{by the use}} of gates and buffers with dataindependent delays and the knowledge of the interconnection delays. These two features are present in several SRAM-based FPGAs: look-up tables allow the designer to mask delays of different gates and combinational functions, and the timing characteristics of each wire segment are a priori known. This work describes a set of experiments about <b>wave</b> <b>pipelining</b> on FPGAs. The results show that a 13 -LUT logic depth circuit mapped on an XC 4005 PC 84 - 6 runs as high as 85 MHz (single phase clocking) or 80 MHz (intentionally skewed clocking), exhibiting a latency of 95 ns. This high throughput/latency ratio is unattainable using classic pipelining. Index Terms [...] - arithmetic, high performance, low-power design, performance tradeoffs. I. INTRODUCTION PIPELINING {{is one of the most}} powerful methods in highspee [...] ...|$|E
40|$|Abstract: This paper {{discusses}} ule signaling {{performance of}} <b>wave</b> <b>pipelining</b> over on-chip transmis sion lines comparing conventional sigoaling with CMOS static repeater insertion. We experimentally {{reveal that the}} wave pipelimng over onchip l&quot;ission lines is about ten times superior in the maximum throughput, latency and dissipates several times less energy per bit compared with the conventional signaling, whereas the required interconnect resource is comparable. ...|$|E
40|$|Abstract: On-chip global {{signaling}} whose performance improves {{with technology}} advance is eagerly demanded. This work focuses on <b>wave</b> <b>pipelining</b> on on-chip transmission lines, {{which is one}} ofprobable solutions, and predicts the trend of signaling performance in the future. Experiments reveal that transmission capacity perchannel will improve till at least 35 nm technology in 10 mm-long or below signaling. We also demonstrate that current-mode differential signaling is robust against power supply noise, butpower delivery with non-zero impedance degrades the performance. ...|$|E
40|$|Field-programmable gate arrays (FPGAs) {{which have}} many {{advantages}} {{are used in}} various devices. Use of the FPGAs is not only prototyping and verification of circuits but also {{an important part of}} the commercial products. A CPU of hardcore is required in the FPGAs. But it has a problem with the architecture of the CPU is limited. The method of solving these problems is developing a system on a chip (SoC) which is equipped with FPGAs and a customized CPU. From the view point of ease of design and shortening a design period, development techniques on a register-transfer level (RTL) using a standard cell library are essential. On the other hand, applying this method without using a design technique has a problem in terms of throughput. In this paper, a connection block for routing using wave-pipeline technique is proposed to solve the throughput problems. This block is evaluated, and it is shown that it is useful for <b>wave</b> <b>pipeline</b> operation...|$|R
40|$|The {{reliability}} of the first detection {{is one of the}} most interesting challenges for the gravitational wave community. To increase the detection confidence, the LIGO and Virgo collaboration have already started coincident observations between gravitational waves detectors and other astronomical instruments, like electromagnetic or neutrino detectors. This can be done in two directions: searching for gravitational waves triggered by the electromagnetic informations, or pointing the electromagnetic telescopes to the sky position given in real time by the gravitational wave analysis. The success of the latter case depends strongly on the analysis speed of gravitational <b>wave</b> <b>pipelines</b> to analyze data and extract any gravitational wave candidate with as much information as possible. In this paper we discuss the case of the coherent Waveburst pipeline, the main pipeline used in the past scientific LIGO-Virgo analyses for the search of gravitational wave transients, reporting the capability of making an all-sky and all-time analysis and the analysis speed performance...|$|R
40|$|Original paper can {{be found}} at: [URL] Astronomical Society of the PacificNear-IR imaging and spectro-polarimetry are offered with the {{facility}} instruments UIST and UFTI. Both linear and circular polarimetry are possible, the former from 1 - 5 ??m, the latter from 1 - 2. 5 ??m. The IRPOL polarimetry module utilises Wollaston prisms (installed cold inside each instrument) and achromatic (JHK) or compound zero-order (LM) <b>wave</b> plates. <b>Pipeline</b> data reduction software is also available for all observing modes...|$|R
