356|762|Public
25|$|Phishing is {{an example}} of social {{engineering}} techniques used to deceive users, and exploits weaknesses in current <b>web</b> <b>security.</b> Attempts to deal with the growing number of reported phishing incidents include legislation, user training, public awareness, and technical security measures.|$|E
500|$|In August 2011, Juniper and AT {{announced}} they would jointly develop the AT Mobile Security application based on Juniper's Pulse security software. In May 2012, Juniper released {{a series of}} new features for the <b>web</b> <b>security</b> software it acquired from Mykonos Software that February. Mykonos' software is focused on deceiving hackers by presenting fake vulnerabilities and tracking their activity. In January 2014, Juniper announced the Firefly Suite of security and switching products for virtual machines. The following month Juniper Networks released several products for [...] "intrusion deception", which create fake files, store incorrect passwords and change network maps in order to confuse hackers that have already penetrated the network perimeter.|$|E
50|$|Additionally, HSTS is the {{realization}} of one facet of an overall vision for improving <b>web</b> <b>security,</b> put forward by Jeff Hodges and Andy Steingruebl in their 2010 paper The Need for Coherent <b>Web</b> <b>Security</b> Policy Framework(s).|$|E
5000|$|Open <b>Web</b> Application <b>Security</b> Project (OWASP), Focuses on <b>web</b> {{application}} <b>security.</b>|$|R
5000|$|WAPPLES, Penta <b>Security’s</b> <b>web</b> {{application}} firewall (<b>web</b> application <b>security)</b> product, was introduced ...|$|R
40|$|Web Services (WS hereafter) Security is {{a crucial}} aspect for {{technologies}} based on this paradigm to be completely adopted by the industry. As a consequence, a lot of initiatives have arisen during the last years setting as their main purpose the standardization of the security factors related to this paradigm. In fact, over the past years, the most important consortiums of Internet, like IETF, W 3 C or OASIS, are producing {{a huge number of}} WS-based security standards. Despite of this growing, there’s not exist yet a process that guides developers in the critical task of integrating security within all the stages of the development’s life cycle of WS-based software. Such a process should facilitate developers in the activities of <b>web</b> service-specific <b>security</b> requirements specification, <b>web</b> services-based <b>security</b> architecture design and <b>web</b> services <b>security</b> standards selection, integration and deployment. In this article we briefly present the PWSSec (Process for <b>Web</b> Services <b>Security)</b> process that is composed of three stages, WSSecReq (<b>Web</b> Services <b>Security</b> Requirements), WSSecArch (<b>Web</b> Services <b>Security</b> Architecture) and WSSecTech (<b>Web</b> Services <b>Security</b> Technologies) that accomplishes the mentioned activities, respectively. We also provide a thorough explanation of the WSSecArch (<b>Web</b> Services <b>Security</b> Stage) stage intended to design the <b>web</b> services-based <b>security</b> architecture. In addition, a real case study where this stage in being applied is also included...|$|R
50|$|Zscaler <b>Web</b> <b>Security</b> is {{a secure}} web gateway, which also {{includes}} a web filter, that runs {{on top of the}} Zscaler Security as a Service platform. In the Spring of 2015, both Gartner Group and Forrester Research ranked Zscaler <b>Web</b> <b>Security</b> at the upper right of their Magic Quadrant and Wave reports, respectively. Zscaler <b>Web</b> <b>Security</b> primarily competes with hardware appliances for <b>web</b> <b>security</b> from Blue Coat Systems, Websense and Cisco. As the information technology landscape has been shifting away from on-premises software and toward cloud computing, the product is reported to have replaced more than two million seats formerly protected by Blue Coat Systems and Websense security appliances.|$|E
5000|$|<b>Web</b> <b>Security</b> Service - In October 2009, in {{conjunction}} with its acquisition of Purewire, Barracuda Networks launched the Purewire <b>Web</b> <b>Security</b> Service which is a {{software as a service}} offering for Web filtering, content security, and safe web surfing.|$|E
50|$|The X-Forwarded-For {{field is}} {{supported}} by most proxy servers, including aiScaler,Squid,Apache mod_proxy,Pound,HAProxy,Varnish,IronPort <b>Web</b> <b>Security</b> Appliance,AVANU WebMux,Array Networks,Radware's AppDirector, Alteon ADC, ADC-VX, and ADC-VA,F5 Big-IP,Blue Coat ProxySG,Cisco Cache Engine,McAfee Web Gateway,Phion Airlock,Finjan's Vital Security,NetApp NetCache,jetNEXUS,Crescendo Networks' Maestro,Web Adjuster,Websense <b>Web</b> <b>Security</b> Gateway,Microsoft Forefront Threat Management Gateway 2010 (TMG)andNGINX.|$|E
40|$|Abstract- The <b>web</b> {{application}} <b>security</b> has currently {{become a}} very significant area of scholarship, {{the best way to}} deal with it is to use <b>web</b> application <b>security</b> scanner to discover the architectural weaknesses and vulnerabilities in the web application. The goal of this paper is to use The <b>Web</b> Application <b>Security</b> Scanner Evaluation Criteria (WASSEC) to compare and contrast the Open Source <b>Web</b> Application <b>Security</b> Scanners, and show the differences between them. We used six factors to do this compression (Protocol Support, Authentication...|$|R
50|$|The Open <b>Web</b> Application <b>Security</b> Project (OWASP), {{an online}} community, {{produces}} freely-available articles, methodologies, documentation, tools, and technologies {{in the field}} of <b>web</b> application <b>security.</b>|$|R
5000|$|In 2002, two {{proposals}} were {{submitted to the}} OASIS WSS Technical Committee: <b>Web</b> Service <b>Security</b> (WS-Security) and <b>Web</b> Services <b>Security</b> Addendum. As a result, WS-Security was published: ...|$|R
50|$|In 2005, <b>web</b> <b>security</b> company Verisign bought iDefense for $40M.|$|E
5000|$|... #Caption: An {{equivalent}} 2000 {{warning about}} the <b>web</b> <b>security</b> awareness.|$|E
50|$|In 2006 MessageLabs ended a {{strategic}} partnership with ScanSafe, a competing security company, {{with the release}} of an in-house <b>web</b> <b>security</b> product titled <b>Web</b> <b>Security</b> Service Version 2. A resultant court judgment brought about by ScanSafe required MessageLabs to notify all prospective clients that the Version 2 service is not based on ScanSafe technology.|$|E
40|$|This {{specification}} replaces or supersedes: <b>Web</b> Services <b>Security</b> Username Token Profile 1. 1 OASIS Standard This document {{describes how}} to use the Username Token with the <b>Web</b> Services <b>Security</b> (WSS) specification. Status: This document was last revised or approved by the OASIS <b>Web</b> Services <b>Security</b> Maintenance (WSS-M) TC on the above date. The level of approval is also listed above. Check the “Lates...|$|R
50|$|OWASP is the {{emerging}} standards body for <b>Web</b> application <b>security.</b> In particular they have published the OWASP Top 10 which describes {{in detail the}} major threats against web applications. The <b>Web</b> Application <b>Security</b> Consortium (WASC) has created the Web Hacking Incident Database (WHID) and also produced open source best practice documents on <b>web</b> application <b>security.</b> The WHID became an OWASP project in February 2014.|$|R
40|$|This bachelor's thesis {{deals with}} the topic of <b>web</b> {{application}} <b>security.</b> The purpose of the theoretical section is to introduce the problem of <b>web</b> application <b>security</b> in general and highlight the means of exploiting the security vulnerabilities. The next part of {{this section is dedicated}} to the Open <b>Web</b> Application <b>Security</b> Project (OWASP) organization, with the primary focus on the OWASP Top Ten Project, describing the ten most critical <b>web</b> application <b>security</b> vulnerabilities. The practical section is about testing the security of the given application using penetration testing. After introducing the application, appropriate testing tools are selected and the testing process is described. Finally, the test results are summarized and all found security weaknesses are fixed...|$|R
5000|$|Zscaler {{was named}} a “Leader” in the Forrester Research “SaaS <b>Web</b> <b>Security</b> report” ...|$|E
5000|$|Amit Klein, <b>web</b> <b>security</b> {{expert and}} CTO of Trusteer, Ltd, a {{consumer}} transaction security company ...|$|E
5000|$|On July 30, 2009, McAfee {{announced}} plans to acquire managed email and <b>web</b> <b>security</b> vendor MX Logic. The acquisition provided an enhanced range of SaaS-based security services such as cloud-based intelligence, <b>web</b> <b>security,</b> email security, endpoint security and vulnerability assessment. [...] The deal closed on September 1, 2009 at a price of $140 million. [...] MX Logic staff has been integrated into McAfee's SaaS business unit.|$|E
40|$|With the {{development}} of web services application, some issues of web services security are increasingly prominent. As a platform-independent language, XML is widely used for its high expansibility. After analysis the traditional <b>web</b> services <b>security</b> technology, this paper formulates the XML signature and encryption as the core of <b>web</b> services <b>security</b> technology, and describes how to create and verify XML signature, how to encrypt and decrypt XML data. The application of XML signature and encryption in the <b>Web</b> services <b>security</b> is illustrated. </span...|$|R
50|$|<b>Web</b> {{application}} <b>security,</b> is {{a branch}} of Information Security that deals specifically with <b>security</b> of websites, <b>web</b> applications and web services. At a high level, <b>Web</b> application <b>security</b> draws {{on the principles of}} application security but applies them specifically to Internet and Web systems.|$|R
40|$|This {{research}} “Designing Dependable <b>Web</b> Services <b>Security</b> Architecture Solutions” {{addresses the}} innovative idea of <b>Web</b> Services <b>Security</b> Engineering using <b>Web</b> Services <b>Security</b> Architecture with a research motivation of Secure Service Oriented Analysis and Design. It deals with <b>Web</b> Services <b>Security</b> Architecture for <b>Web</b> Services Secure application design, for Authentication and authorization, using Model Driven Architecture (MDA) based Agile Modeled Layered Security Architecture design, which eventually results in enhanced dependable (privacy) management. All the above findings are validated with appropriate {{case studies of}} Web 2. 0 Services, its extension to Web 2. 0 Mashups Spatial Web Services and various financial applications. In this paper we discuss about Research Methodology for Designing Dependable Agile Layered Security Architectures, with validations on Spatial Web Services Case study...|$|R
50|$|The {{following}} lists some of {{the recommended}} <b>web</b> <b>security</b> practices that are more specific for software developers.|$|E
50|$|In {{addition}} to debugging web pages, Firebug {{was used for}} <b>web</b> <b>security</b> testing and web page performance analysis.|$|E
5000|$|In <b>web</b> <b>{{security}},</b> cross-site tracing (abbreviated [...] "XST") is {{a network}} security vulnerability exploiting the HTTP TRACE method.|$|E
40|$|<b>Web</b> Services <b>Security,</b> used {{to ensure}} data {{integrity}} and confidentiality, {{has been so}} far provided and/or implemented as a library or a proxy. Both means present serious drawbacks, be {{it in terms of}} flexibility, level of abstraction, dynamic coupling and others. In this thesis we propose the use of Web Services to enforce <b>Web</b> Services <b>Security.</b> Available to both Web Service requestors and providers inside and outside its domain, <b>Security</b> <b>Web</b> Services can provide <b>Web</b> Services <b>Security</b> to many entities, including those that due to limited resources would not be normally able to secure their communications. Specific interfaces were devised for the proposed <b>Security</b> <b>Web</b> Service, giving access to granular security, through a high level interface, without pre-configurations. We also present a Case Study where each entity, participating in a three party transaction, uses either libraries or a <b>Security</b> <b>Web</b> Service to secure their messages. Performance measurements were conducted, both in terms of time delays and network loads. Despite the delay and the network load introduced, <b>Security</b> <b>Web</b> Service are an attractive method of providing WSS due to the high level of level and granularity provided, as well as the reduced local computation load (for encryption and signatures...|$|R
40|$|<b>Web</b> Services (WS) <b>security</b> has {{undergone}} an enormous development, as {{carried out by}} the major organizations and consortiums of the industry over the last few years. This has brought about the appearance of a huge number of WS security standards. Such a fact has made organizations remain reticent about adopting technologies based on this paradigm, due to the learning curve which is inevitable in the integration of security into their practical deployments. In this paper we present PWSSec (Process for <b>Web</b> Services <b>Security),</b> which enables the integration of a set of specific security stages into the traditional phases of WS-based systems development. PWSSec defines three stages, WSSecReq (<b>Web</b> Services <b>Security</b> Requirements), WSSecArch (<b>Web</b> Services <b>Security</b> Architecture) and WSSecTech (<b>Web</b> Services <b>Security</b> Technologies). These facilitate, respectively, the definition of WS-specific security requirements, the development of a WS-based security architecture and the identification of the WS security standards that the security architecture must articulate in order to implement the security services...|$|R
40|$|Abstract. <b>Web</b> {{applications}} <b>security</b> {{is one of}} {{the most}} daunting tasks today, because of security shift from lower levels of ISO OSI model to application level, and because of current situation in IT environment. ASP. NET offers powerful mechanisms to render these attacks futile, but it requires some knowledge of implementing <b>Web</b> application <b>security.</b> This paper focuses on attacks against Web applications, either to gain direct benefit by collecting private information or to disable target sites. It describes the two most common Web application attacks: SQL Injection and Cross Site Scripting, and is based on author’s perennial experience in <b>Web</b> application <b>security.</b> It explains how to use ASP. NET to provide <b>Web</b> applications <b>security.</b> There are some principles of strong <b>Web</b> application <b>security</b> which make up the part of defense mechanisms presented: executing with least privileged account, securing sensitive data (connection string) and proper exception handling (where the new approach is presented using ASP. NET mechanisms for centralized exception logging and presentation). These principles help raise the bar that attacker has to cross and consequently contribute to better security. 1...|$|R
50|$|<b>Web</b> <b>security</b> - Cloud-based {{content and}} malware filtering, {{providing}} secure internet browsing, enforcement of acceptable use policies and data leak protection.|$|E
50|$|High-Tech Bridge {{introduced}} {{the concept of}} real-time hybrid web application security testing with the announcement of ImmuniWeb <b>web</b> <b>security</b> platform in August 2013.|$|E
50|$|Security of {{the network}} is critical, and the {{architecture}} can utilize standard <b>web</b> <b>security</b> protocols, from Public-key cryptography to embedded hardware encryption devices.|$|E
5000|$|... #Subtitle level 3: Online <b>Web</b> Application <b>Security</b> Project (OWASP) ...|$|R
50|$|In 2003, Syhunt {{released}} a <b>web</b> application <b>security</b> assessment software known as Sandcat, {{which focuses on}} Open <b>Web</b> Application <b>Security</b> Project (OWASP) and the SANS Institute vulnerabilities. Syhunt has also produced a number of security software utilities, including worm removal tools (during worm outbreaks), server hardening and log analysis tools.|$|R
40|$|Abstract- Web {{penetration}} testing embodies both {{the understanding of}} attack and defense philosophies. By learning malicious hacking activities, students will understand the perspectives of attackers and realize how to defend a Web application system. To foster information security education, {{it is important to}} introduce the attack understanding philosophy. Using student group projects, this study aims to measure student learning effectiveness in <b>Web</b> application <b>security</b> and to discover how students perceive learning given the attack understanding philosophy. In support of triangulation, this research will employ pre-test and post-test study along with the grounded theory approach. The future research findings will propose a framework to improve student learning effectiveness and student learning perception in <b>Web</b> application <b>security.</b> Index Terms – <b>Web</b> application <b>security,</b> <b>Web</b> {{penetration testing}}, Information security educatio...|$|R
